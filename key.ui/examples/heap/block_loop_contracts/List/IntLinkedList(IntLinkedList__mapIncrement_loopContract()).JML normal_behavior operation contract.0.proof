\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Fri Mar 30 18:40:36 CEST 2018
[StrategyProperty]OSS_OPTIONS_KEY=OSS_ON
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]useUninterpretedMultiplication=true
[SMTSettings]SelectedTaclets=
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_EXTERNAL
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[Strategy]Timeout=-1
[Strategy]MaximumNumberOfAutomaticApplications=50000
[SMTSettings]integersMaximum=2147483645
[Choice]DefaultChoices=assertions-assertions\\:safe , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:ban , JavaCard-JavaCard\\:on , Strings-Strings\\:on , modelFields-modelFields\\:treatAsAxiom , bigint-bigint\\:on , sequences-sequences\\:on , moreSeqRules-moreSeqRules\\:off , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , permissions-permissions\\:off , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]maxGenericSorts=2
[SMTSettings]integersMinimum=-2147483645
[SMTSettings]invariantForall=false
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
"
}

\javaSource "";

\proofObligation "#Proof Obligation Settings
#Fri Mar 30 18:40:36 CEST 2018
name=IntLinkedList[IntLinkedList\\:\\:mapIncrement_loopContract()].JML normal_behavior operation contract.0
contract=IntLinkedList[IntLinkedList\\:\\:mapIncrement_loopContract()].JML normal_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "Flo" ) (keyVersion "90bb886cd7b78027c8f6703803461f09e5699bb9"))

(autoModeTime "29107")

(branch "dummy ID"
(builtin "One Step Simplification" (formula "1") (newnames "self,exc,heapAtPre,o,f"))
(rule "translateJavaAddInt" (formula "1") (term "1,1,0,0,0,0,0,1,1"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "2"))
(rule "eqSymm" (formula "7") (term "0,1,0,0,0,1"))
(rule "eqSymm" (formula "7") (term "1,0,0,1,0,1"))
(rule "polySimp_homoEq" (formula "7") (term "1,0,0,0,0,0,1"))
(rule "polySimp_addComm0" (formula "7") (term "0,0,1,0,0,0,0,0,1"))
(rule "polySimp_addComm1" (formula "7") (term "0,1,0,0,0,0,0,1"))
(rule "castedGetAny" (formula "7") (term "0,1,0,1,2,0,0,0,0,1,0,1"))
(rule "castedGetAny" (formula "7") (term "0,1,0,0,1,0,0,0,0,0,1"))
(rule "castedGetAny" (formula "7") (term "1,0,1,0,0,0,0,0,1"))
(rule "inEqSimp_ltToLeq" (formula "7") (term "1,0,0,1,2,0,0,0,0,1,0,1"))
(rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0,1,2,0,0,0,0,1,0,1"))
(rule "inEqSimp_ltToLeq" (formula "7") (term "1,0,0,0,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0,0,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "7") (term "0,0,0,1,2,0,0,0,0,1,0,1"))
(rule "inEqSimp_commuteLeq" (formula "7") (term "0,0,0,0,0,0,0,1"))
(rule "assignment" (formula "7") (term "1"))
(builtin "One Step Simplification" (formula "7"))
(rule "polySimp_sepPosMonomial" (formula "7") (term "1,0,0,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "7") (term "1,1,0,0,0,0,0,1"))
(rule "polySimp_rightDist" (formula "7") (term "1,1,0,0,0,0,0,1"))
(rule "mul_literals" (formula "7") (term "0,1,1,0,0,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "7") (term "1,1,1,0,0,0,0,0,1"))
(rule "polySimp_elimOne" (formula "7") (term "1,1,1,0,0,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,0,0,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "7") (term "1,1,0,0,0,0,0,0,1"))
(rule "polySimp_rightDist" (formula "7") (term "1,1,0,0,0,0,0,0,1"))
(rule "mul_literals" (formula "7") (term "0,1,1,0,0,0,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "7") (term "1,1,1,0,0,0,0,0,0,1"))
(rule "polySimp_elimOne" (formula "7") (term "1,1,1,0,0,0,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,0,1,2,0,0,0,0,1,0,1"))
(rule "polySimp_mulComm0" (formula "7") (term "1,1,0,0,1,2,0,0,0,0,1,0,1"))
(rule "polySimp_rightDist" (formula "7") (term "1,1,0,0,1,2,0,0,0,0,1,0,1"))
(rule "mul_literals" (formula "7") (term "0,1,1,0,0,1,2,0,0,0,0,1,0,1"))
(rule "polySimp_mulLiterals" (formula "7") (term "1,1,1,0,0,1,2,0,0,0,0,1,0,1"))
(rule "polySimp_elimOne" (formula "7") (term "1,1,1,0,0,1,2,0,0,0,0,1,0,1"))
(rule "elementOfUnion" (formula "7") (term "0,0,0,0,1,0,1"))
(rule "elementOfInfiniteUnion" (formula "7") (term "1,0,0,0,0,1,0,1"))
(builtin "One Step Simplification" (formula "7"))
(rule "elementOfSingleton" (formula "7") (term "0,0,0,0,0,1,0,1"))
(rule "elementOfSingleton" (formula "7") (term "1,0,1,0,0,0,0,1,0,1"))
(rule "nnf_imp2or" (formula "7") (term "0,0,0,0,0,1"))
(rule "nnf_notAnd" (formula "7") (term "0,0,0,0,0,0,1"))
(rule "inEqSimp_notLeq" (formula "7") (term "1,0,0,0,0,0,0,1"))
(rule "polySimp_rightDist" (formula "7") (term "1,0,0,1,0,0,0,0,0,0,1"))
(rule "mul_literals" (formula "7") (term "0,1,0,0,1,0,0,0,0,0,0,1"))
(rule "polySimp_addAssoc" (formula "7") (term "0,0,1,0,0,0,0,0,0,1"))
(rule "add_literals" (formula "7") (term "0,0,0,1,0,0,0,0,0,0,1"))
(rule "add_zero_left" (formula "7") (term "0,0,1,0,0,0,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial1" (formula "7") (term "1,0,0,0,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0,0,0,0,0,1"))
(rule "polySimp_elimOne" (formula "7") (term "1,1,0,0,0,0,0,0,1"))
(rule "inEqSimp_notGeq" (formula "7") (term "0,0,0,0,0,0,0,1"))
(rule "times_zero_1" (formula "7") (term "1,0,0,0,0,0,0,0,0,0,1"))
(rule "add_literals" (formula "7") (term "0,0,0,0,0,0,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0,0,0,0,0,0,1"))
(rule "mul_literals" (formula "7") (term "1,0,0,0,0,0,0,0,1"))
(rule "Class_invariant_axiom_for_IntLinkedList" (formula "5") (inst "i=i") (inst "j=j") (inst "i_0=i_0") (inst "i_1=i_1"))
(builtin "One Step Simplification" (formula "5"))
(rule "translateJavaSubInt" (formula "5") (term "1,0,1,1,1,0,1,0,0,0"))
(rule "translateJavaSubInt" (formula "5") (term "1,0,2,1,1,0"))
(rule "translateJavaAddInt" (formula "5") (term "1,0,2,1,1,1,0,1,0,0,0"))
(rule "andLeft" (formula "5"))
(rule "andLeft" (formula "5"))
(rule "andLeft" (formula "7"))
(rule "andLeft" (formula "5"))
(rule "andLeft" (formula "5"))
(rule "andLeft" (formula "5"))
(rule "andLeft" (formula "5"))
(rule "andLeft" (formula "5"))
(rule "eqSymm" (formula "11"))
(rule "eqSymm" (formula "13"))
(rule "eqSymm" (formula "12"))
(rule "eqSymm" (formula "10"))
(rule "eqSymm" (formula "9") (term "1,0,0,1,0"))
(rule "eqSymm" (formula "9") (term "0,1,0,1,0,1,0"))
(rule "eqSymm" (formula "9") (term "1,1,0,1,0,1,0"))
(rule "eqSymm" (formula "9") (term "1,1,0"))
(rule "eqSymm" (formula "8"))
(rule "polySimp_elimSub" (formula "11") (term "1,0,2,0"))
(rule "mul_literals" (formula "11") (term "1,1,0,2,0"))
(rule "polySimp_elimSub" (formula "9") (term "1,0,0,1,1,0"))
(rule "mul_literals" (formula "9") (term "1,1,0,0,1,1,0"))
(rule "polySimp_addComm0" (formula "9") (term "1,0,2,0,1,1,0"))
(rule "polySimp_addComm0" (formula "11") (term "1,0,2,0"))
(rule "polySimp_addComm0" (formula "9") (term "1,0,0,1,1,0"))
(rule "castedGetAny" (formula "9") (term "0,0,0,0,0,1,0"))
(rule "subsetSingletonLeft" (formula "5"))
(rule "subsetSingletonLeft" (formula "6"))
(rule "castedGetAny" (formula "10") (term "2,0"))
(rule "castedGetAny" (formula "9") (term "1,1,1,0,0,1,0"))
(rule "castedGetAny" (formula "9") (term "0,0,1,0,1,0,1,0"))
(rule "castedGetAny" (formula "9") (term "1,0,1,0,1,0,1,0"))
(rule "castedGetAny" (formula "9") (term "1,1,1,1,0"))
(rule "castedGetAny" (formula "8") (term "0,1,0,1,0"))
(rule "castedGetAny" (formula "9") (term "2,0,1,1,0"))
(rule "castedGetAny" (formula "11") (term "2,0"))
(rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0,1,0,1,0"))
(rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0,1,0,1,0"))
(rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
(rule "inEqSimp_ltToLeq" (formula "7") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0"))
(rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0,1,0"))
(rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0,1,0"))
(rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0,1,0,1,0"))
(rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
(rule "inEqSimp_commuteLeq" (formula "7") (term "0,0,0"))
(rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,0,1,0"))
(rule "applyEq" (formula "7") (term "0,1,0,0,1,0,0") (ifseqformula "12"))
(rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0,1,0,1,0"))
(rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0,1,0,1,0"))
(rule "polySimp_rightDist" (formula "9") (term "1,1,0,0,1,0,1,0"))
(rule "mul_literals" (formula "9") (term "0,1,1,0,0,1,0,1,0"))
(rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0,1,0,1,0"))
(rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0,1,0,1,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0"))
(rule "polySimp_rightDist" (formula "9") (term "1,1,0,0"))
(rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0"))
(rule "mul_literals" (formula "9") (term "0,1,1,0,0"))
(rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0,1,0"))
(rule "polySimp_mulComm0" (formula "8") (term "1,1,0,0,1,0"))
(rule "polySimp_rightDist" (formula "8") (term "1,1,0,0,1,0"))
(rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,0,0,1,0"))
(rule "mul_literals" (formula "8") (term "0,1,1,0,0,1,0"))
(rule "polySimp_elimOne" (formula "8") (term "1,1,1,0,0,1,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "7") (term "1,1,0,0"))
(rule "polySimp_rightDist" (formula "7") (term "1,1,0,0"))
(rule "polySimp_mulLiterals" (formula "7") (term "1,1,1,0,0"))
(rule "mul_literals" (formula "7") (term "0,1,1,0,0"))
(rule "polySimp_elimOne" (formula "7") (term "1,1,1,0,0"))
(rule "elementOfUnionEQ" (formula "6") (ifseqformula "8"))
(builtin "One Step Simplification" (formula "6"))
(rule "true_left" (formula "6"))
(rule "elementOfUnionEQ" (formula "5") (ifseqformula "7"))
(builtin "One Step Simplification" (formula "5"))
(rule "true_left" (formula "5"))
(rule "nnf_imp2or" (formula "7") (term "0"))
(rule "nnf_imp2or" (formula "5") (term "0"))
(rule "nnf_notAnd" (formula "7") (term "0,0"))
(rule "inEqSimp_notGeq" (formula "7") (term "0,0,0"))
(rule "times_zero_1" (formula "7") (term "1,0,0,0,0,0"))
(rule "add_zero_right" (formula "7") (term "0,0,0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0,0"))
(rule "mul_literals" (formula "7") (term "1,0,0,0"))
(rule "inEqSimp_notLeq" (formula "7") (term "1,0,0"))
(rule "polySimp_rightDist" (formula "7") (term "1,0,0,1,0,0"))
(rule "mul_literals" (formula "7") (term "0,1,0,0,1,0,0"))
(rule "polySimp_addAssoc" (formula "7") (term "0,0,1,0,0"))
(rule "add_literals" (formula "7") (term "0,0,0,1,0,0"))
(rule "add_zero_left" (formula "7") (term "0,0,1,0,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "7") (term "1,0,0"))
(rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0"))
(rule "polySimp_elimOne" (formula "7") (term "1,1,0,0"))
(rule "nnf_notAnd" (formula "5") (term "0,0"))
(rule "inEqSimp_notLeq" (formula "5") (term "1,0,0"))
(rule "polySimp_rightDist" (formula "5") (term "1,0,0,1,0,0"))
(rule "mul_literals" (formula "5") (term "0,1,0,0,1,0,0"))
(rule "polySimp_addAssoc" (formula "5") (term "0,0,1,0,0"))
(rule "add_literals" (formula "5") (term "0,0,0,1,0,0"))
(rule "add_zero_left" (formula "5") (term "0,0,1,0,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "5") (term "1,0,0"))
(rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0"))
(rule "polySimp_elimOne" (formula "5") (term "1,1,0,0"))
(rule "inEqSimp_notGeq" (formula "5") (term "0,0,0"))
(rule "times_zero_1" (formula "5") (term "1,0,0,0,0,0"))
(rule "add_zero_right" (formula "5") (term "0,0,0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "5") (term "0,0,0"))
(rule "mul_literals" (formula "5") (term "1,0,0,0"))
(rule "nnf_imp2or" (formula "7") (term "0,1,0,1,0"))
(rule "nnf_notAnd" (formula "7") (term "0,0,1,0,1,0"))
(rule "inEqSimp_notLeq" (formula "7") (term "1,0,0,1,0,1,0"))
(rule "polySimp_rightDist" (formula "7") (term "1,0,0,1,0,0,1,0,1,0"))
(rule "mul_literals" (formula "7") (term "0,1,0,0,1,0,0,1,0,1,0"))
(rule "polySimp_addAssoc" (formula "7") (term "0,0,1,0,0,1,0,1,0"))
(rule "add_literals" (formula "7") (term "0,0,0,1,0,0,1,0,1,0"))
(rule "add_zero_left" (formula "7") (term "0,0,1,0,0,1,0,1,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "7") (term "1,0,0,1,0,1,0"))
(rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0,1,0,1,0"))
(rule "polySimp_elimOne" (formula "7") (term "1,1,0,0,1,0,1,0"))
(rule "inEqSimp_notGeq" (formula "7") (term "0,0,0,1,0,1,0"))
(rule "times_zero_1" (formula "7") (term "1,0,0,0,0,0,1,0,1,0"))
(rule "add_zero_right" (formula "7") (term "0,0,0,0,0,1,0,1,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0,0,1,0,1,0"))
(rule "mul_literals" (formula "7") (term "1,0,0,0,1,0,1,0"))
(rule "nnf_imp2or" (formula "7") (term "1,0,1,0,1,0"))
(rule "methodBodyExpand" (formula "13") (term "1") (newnames "heapBefore_mapIncrement_loopContract,savedHeapBefore_mapIncrement_loopContract,currentBefore_mapIncrement_loopContract,iBefore_mapIncrement_loopContract"))
(builtin "One Step Simplification" (formula "13"))
(rule "variableDeclarationAssign" (formula "13") (term "1"))
(rule "variableDeclaration" (formula "13") (term "1") (newnames "current"))
(rule "assignment_read_attribute_this" (formula "13"))
(builtin "One Step Simplification" (formula "13"))
(rule "variableDeclarationAssign" (formula "13") (term "1"))
(rule "variableDeclaration" (formula "13") (term "1") (newnames "i"))
(rule "assignment" (formula "13") (term "1"))
(builtin "One Step Simplification" (formula "13"))
(builtin "Loop Contract (External)" (formula "13") (newnames "anonOut_heap,exc#64,heap_Before_BLOCK,savedHeap_Before_BLOCK,i_Before_BLOCK#65,current_Before_BLOCK#66,anonOut_i,anonOut_current"))
(branch "Precondition"
   (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "12")) (ifInst ""  (formula "2")) (ifInst ""  (formula "3")) (ifInst ""  (formula "1")) (ifInst ""  (formula "4")))
   (rule "translateJavaSubInt" (formula "13") (term "0,1,0"))
   (rule "leq_literals" (formula "13") (term "0,0,1,0,0"))
   (builtin "One Step Simplification" (formula "13"))
   (rule "eqSymm" (formula "13") (term "1,0,1,1,0,0"))
   (rule "eqSymm" (formula "13") (term "0,1,1,1,0,0"))
   (rule "polySimp_elimSub" (formula "13") (term "0,1,0"))
   (rule "mul_literals" (formula "13") (term "1,0,1,0"))
   (rule "add_zero_right" (formula "13") (term "0,1,0"))
   (rule "castedGetAny" (formula "13") (term "0,1,0,1,1,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,1,1,0,0"))
   (rule "add_zero_right" (formula "13") (term "0,0,0,1,1,0,0"))
   (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,1,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "13") (term "0,1,0,0"))
   (rule "applyEq" (formula "13") (term "0,1,0") (ifseqformula "11"))
   (rule "inEqSimp_sepNegMonomial0" (formula "13") (term "0,0,1,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "13") (term "0,0,0,1,1,0,0"))
   (rule "polySimp_elimOne" (formula "13") (term "0,0,0,1,1,0,0"))
   (rule "Class_invariant_axiom_for_IntLinkedList" (formula "13") (term "0,0,0") (inst "i=i_2") (inst "j=j") (inst "i_0=i_0") (inst "i_1=i_1"))
   (builtin "One Step Simplification" (formula "13"))
   (rule "translateJavaSubInt" (formula "13") (term "1,0,1,1,1,0,1,0,0,0,0,0,0"))
   (rule "translateJavaAddInt" (formula "13") (term "1,0,2,1,1,1,0,1,0,0,0,0,0,0"))
   (rule "translateJavaSubInt" (formula "13") (term "1,0,2,1,1,0,0,0,0"))
   (rule "eqSymm" (formula "13") (term "1,1,0,0,0"))
   (rule "eqSymm" (formula "13") (term "1,0,0,1,0,1,0,0,0,0,0,0"))
   (rule "eqSymm" (formula "13") (term "1,1,0,1,0,1,0,1,0,0,0,0,0,0"))
   (rule "eqSymm" (formula "13") (term "0,1,0,1,0,1,0,1,0,0,0,0,0,0"))
   (rule "eqSymm" (formula "13") (term "1,0,0,0,0,0,0,0"))
   (rule "eqSymm" (formula "13") (term "0,1,0,0,0"))
   (rule "eqSymm" (formula "13") (term "1,0,0,0,0,0"))
   (rule "eqSymm" (formula "13") (term "1,1,0,1,0,0,0,0,0,0"))
   (rule "eqSymm" (formula "13") (term "1,0,0,0,0"))
   (rule "replace_known_left" (formula "13") (term "0,1,0,0,0") (ifseqformula "10"))
   (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "11")))
   (rule "polySimp_elimSub" (formula "13") (term "1,0,2,0,1,0,0,0"))
   (rule "mul_literals" (formula "13") (term "1,1,0,2,0,1,0,0,0"))
   (rule "polySimp_elimSub" (formula "13") (term "1,0,0,1,1,0,1,0,0,0,0,0"))
   (rule "mul_literals" (formula "13") (term "1,1,0,0,1,1,0,1,0,0,0,0,0"))
   (rule "polySimp_addComm0" (formula "13") (term "1,0,2,0,1,1,0,1,0,0,0,0,0"))
   (rule "polySimp_addComm0" (formula "13") (term "1,0,2,0,1,0,0,0"))
   (rule "polySimp_addComm0" (formula "13") (term "1,0,0,1,1,0,1,0,0,0,0,0"))
   (rule "subsetSingletonLeft" (formula "13") (term "1,0,0,0,0,0,0,0,0"))
   (rule "castedGetAny" (formula "13") (term "0,1,0,1,0,1,0,0,0,0,0,0"))
   (rule "castedGetAny" (formula "13") (term "1,0,1,0,1,0,1,0,1,0,0,0,0,0"))
   (rule "castedGetAny" (formula "13") (term "1,1,1,1,0,1,0,0,0,0,0"))
   (rule "castedGetAny" (formula "13") (term "0,0,0,0,0,1,0,1,0,0,0,0,0"))
   (rule "subsetSingletonLeft" (formula "13") (term "0,0,0,0,0,0,0,0,0"))
   (rule "castedGetAny" (formula "13") (term "0,0,1,0,1,0,1,0,1,0,0,0,0,0"))
   (rule "castedGetAny" (formula "13") (term "1,1,1,0,0,1,0,1,0,0,0,0,0"))
   (rule "castedGetAny" (formula "13") (term "2,0,1,0,0,0,0"))
   (rule "replace_known_left" (formula "13") (term "1,0,0,0,0") (ifseqformula "8"))
   (builtin "One Step Simplification" (formula "13"))
   (rule "castedGetAny" (formula "13") (term "2,0,1,0,0,0"))
   (rule "replace_known_left" (formula "13") (term "1,0,0,0") (ifseqformula "9"))
   (builtin "One Step Simplification" (formula "13"))
   (rule "castedGetAny" (formula "13") (term "2,0,1,1,0,1,0,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0,1,0,1,0,1,0,0,0"))
   (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0,1,0,1,0,1,0,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0,1,0,0,0"))
   (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0,1,0,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0,1,0,0,0,0,0"))
   (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0,1,0,0,0,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0,1,0,1,0,0,0,0"))
   (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0,1,0,1,0,0,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0,1,0,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0,1,0,1,0,1,0,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0,1,0,0,0,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0,1,0,1,0,0,0,0"))
   (rule "applyEq" (formula "13") (term "0,1,0,0,1,0,0,1,0,0,0,0,0") (ifseqformula "10"))
   (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0,1,0,1,0,1,0,0,0"))
   (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0,1,0,1,0,1,0,0,0"))
   (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0,1,0,1,0,1,0,0,0"))
   (rule "mul_literals" (formula "13") (term "0,1,1,0,0,1,0,1,0,1,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0,1,0,1,0,1,0,0,0"))
   (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0,1,0,1,0,1,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0,1,0,0,0"))
   (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0,1,0,0,0"))
   (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0,1,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0,1,0,0,0"))
   (rule "mul_literals" (formula "13") (term "0,1,1,0,0,1,0,0,0"))
   (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0,1,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0,1,0,1,0,0,0,0"))
   (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0,1,0,1,0,0,0,0"))
   (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0,1,0,1,0,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0,1,0,1,0,0,0,0"))
   (rule "mul_literals" (formula "13") (term "0,1,1,0,0,1,0,1,0,0,0,0"))
   (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0,1,0,1,0,0,0,0"))
   (rule "replace_known_left" (formula "13") (term "1,0,0,0,0") (ifseqformula "6"))
   (builtin "One Step Simplification" (formula "13"))
   (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0,1,0,0,0,0"))
   (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0,1,0,0,0,0"))
   (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0,1,0,0,0,0"))
   (rule "mul_literals" (formula "13") (term "0,1,1,0,0,1,0,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0,1,0,0,0,0"))
   (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0,1,0,0,0,0"))
   (rule "elementOfUnionEQ" (formula "13") (term "0,0,0,0,0,0") (ifseqformula "6"))
   (builtin "One Step Simplification" (formula "13"))
   (rule "elementOfUnionEQ" (formula "13") (term "0,0,0,0,0") (ifseqformula "6"))
   (builtin "One Step Simplification" (formula "13"))
   (rule "nnf_imp2or" (formula "13") (term "0,0,0,0,0"))
   (rule "nnf_imp2or" (formula "13") (term "0,1,0,0,0"))
   (rule "nnf_notAnd" (formula "13") (term "0,0,0,0,0,0"))
   (rule "inEqSimp_notGeq" (formula "13") (term "0,0,0,0,0,0,0"))
   (rule "times_zero_1" (formula "13") (term "1,0,0,0,0,0,0,0,0,0"))
   (rule "add_zero_right" (formula "13") (term "0,0,0,0,0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0,0,0,0,0"))
   (rule "mul_literals" (formula "13") (term "1,0,0,0,0,0,0,0"))
   (rule "inEqSimp_notLeq" (formula "13") (term "1,0,0,0,0,0,0"))
   (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,0,0,0,0,0"))
   (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,0,0,0,0,0"))
   (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0,0,0,0,0"))
   (rule "add_literals" (formula "13") (term "0,0,0,1,0,0,0,0,0,0"))
   (rule "add_zero_left" (formula "13") (term "0,0,1,0,0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0,0,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0,0,0,0"))
   (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0,0,0,0"))
   (rule "replace_known_left" (formula "13") (term "0,0,0,0") (ifseqformula "5"))
   (builtin "One Step Simplification" (formula "13"))
   (rule "nnf_notAnd" (formula "13") (term "0,0,0,0,0"))
   (rule "inEqSimp_notGeq" (formula "13") (term "0,0,0,0,0,0"))
   (rule "times_zero_1" (formula "13") (term "1,0,0,0,0,0,0,0,0"))
   (rule "add_zero_right" (formula "13") (term "0,0,0,0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0,0,0,0"))
   (rule "mul_literals" (formula "13") (term "1,0,0,0,0,0,0"))
   (rule "inEqSimp_notLeq" (formula "13") (term "1,0,0,0,0,0"))
   (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,0,0,0,0"))
   (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,0,0,0,0"))
   (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0,0,0,0"))
   (rule "add_literals" (formula "13") (term "0,0,0,1,0,0,0,0,0"))
   (rule "add_zero_left" (formula "13") (term "0,0,1,0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0,0,0"))
   (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0,0,0"))
   (rule "nnf_imp2or" (formula "13") (term "0,1,0,1,0,0,0,0"))
   (rule "nnf_notAnd" (formula "13") (term "0,0,1,0,1,0,0,0,0"))
   (rule "inEqSimp_notLeq" (formula "13") (term "1,0,0,1,0,1,0,0,0,0"))
   (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,0,1,0,1,0,0,0,0"))
   (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,0,1,0,1,0,0,0,0"))
   (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0,1,0,1,0,0,0,0"))
   (rule "add_literals" (formula "13") (term "0,0,0,1,0,0,1,0,1,0,0,0,0"))
   (rule "add_zero_left" (formula "13") (term "0,0,1,0,0,1,0,1,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0,1,0,1,0,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,1,0,1,0,0,0,0"))
   (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,1,0,1,0,0,0,0"))
   (rule "inEqSimp_notGeq" (formula "13") (term "0,0,0,1,0,1,0,0,0,0"))
   (rule "times_zero_1" (formula "13") (term "1,0,0,0,0,0,1,0,1,0,0,0,0"))
   (rule "add_zero_right" (formula "13") (term "0,0,0,0,0,1,0,1,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0,1,0,1,0,0,0,0"))
   (rule "mul_literals" (formula "13") (term "1,0,0,0,1,0,1,0,0,0,0"))
   (rule "nnf_imp2or" (formula "13") (term "1,0,1,0,1,0,0,0,0"))
   (rule "replace_known_left" (formula "13") (term "0,0,0") (ifseqformula "7"))
   (builtin "One Step Simplification" (formula "13"))
   (rule "cnf_rightDist" (formula "5") (term "0"))
   (rule "ifthenelse_to_or_left" (formula "7") (term "1,1,0"))
   (rule "eqSymm" (formula "7") (term "1,0,1,1,0"))
   (rule "eqSymm" (formula "7") (term "1,1,1,1,0"))
   (rule "distr_forallAnd" (formula "5"))
   (rule "andLeft" (formula "5"))
   (rule "shift_paren_or" (formula "8") (term "0,1,0,1,0"))
   (rule "ifthenelse_split" (formula "9") (term "0"))
   (branch "self.size = 0 TRUE"
      (rule "eqSymm" (formula "10"))
      (rule "replace_known_left" (formula "11") (term "0,0") (ifseqformula "9"))
      (builtin "One Step Simplification" (formula "11"))
      (rule "eqSymm" (formula "11"))
      (rule "replace_known_left" (formula "15") (term "0,1,1,0,0") (ifseqformula "9"))
      (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "10")) (ifInst ""  (formula "10")))
      (rule "applyEq" (formula "15") (term "1,1,1,0") (ifseqformula "10"))
      (rule "applyEq" (formula "15") (term "0,1") (ifseqformula "9"))
      (rule "qeq_literals" (formula "15") (term "1"))
      (builtin "One Step Simplification" (formula "15"))
      (rule "applyEq" (formula "8") (term "1,1,0,0") (ifseqformula "9"))
      (rule "applyEq" (formula "5") (term "1,1,0,0") (ifseqformula "9"))
      (rule "applyEq" (formula "6") (term "1,1,1,0") (ifseqformula "9"))
      (rule "applyEq" (formula "8") (term "1,1,0,0,0,1,0,1,0") (ifseqformula "9"))
      (rule "applyEq" (formula "7") (term "1,1,1,0,0,1,0") (ifseqformula "9"))
      (rule "add_zero_right" (formula "7") (term "1,1,0,0,1,0"))
      (rule "applyEq" (formula "8") (term "1,1,0,0,0,1,1,0") (ifseqformula "9"))
      (rule "add_zero_right" (formula "8") (term "1,0,0,0,1,1,0"))
      (rule "applyEq" (formula "8") (term "1,1,0,1,1,1,0") (ifseqformula "9"))
      (rule "add_zero_right" (formula "8") (term "1,0,1,1,1,0"))
      (rule "applyEq" (formula "13") (term "1") (ifseqformula "9"))
      (rule "applyEq" (formula "12") (term "1") (ifseqformula "9"))
      (rule "applyEq" (formula "15") (term "0,0") (ifseqformula "9"))
      (rule "qeq_literals" (formula "15") (term "0"))
      (builtin "One Step Simplification" (formula "15"))
      (rule "impRight" (formula "15"))
      (rule "applyEq" (formula "1") (term "0") (ifseqformula "10"))
      (rule "qeq_literals" (formula "1"))
      (rule "closeFalse" (formula "1"))
   )
   (branch "self.size = 0 FALSE"
      (rule "replace_known_right" (formula "10") (term "0,0") (ifseqformula "13"))
      (builtin "One Step Simplification" (formula "10"))
      (rule "replace_known_right" (formula "15") (term "0,1,1,0,0") (ifseqformula "13"))
      (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "9")))
      (rule "commute_or_2" (formula "5") (term "0"))
      (rule "shift_paren_or" (formula "6") (term "0"))
      (rule "commute_or" (formula "5") (term "0,0"))
      (rule "lenNonNegative" (formula "12") (term "0"))
      (rule "inEqSimp_commuteLeq" (formula "12"))
      (rule "applyEq" (formula "12") (term "0") (ifseqformula "13"))
      (rule "replace_known_left" (formula "16") (term "0") (ifseqformula "12"))
      (builtin "One Step Simplification" (formula "16"))
      (rule "orRight" (formula "16"))
      (rule "referencedObjectIsCreatedRight" (formula "17") (ifseqformula "16"))
      (rule "close" (formula "17") (ifseqformula "1"))
   )
)
(branch "Usage"
   (builtin "One Step Simplification" (formula "12"))
   (builtin "One Step Simplification" (formula "14"))
   (rule "translateJavaAddInt" (formula "12") (term "1,1,0,0,1,1,0,0"))
   (rule "andLeft" (formula "12"))
   (rule "andLeft" (formula "12"))
   (rule "andLeft" (formula "14"))
   (rule "andLeft" (formula "12"))
   (rule "andLeft" (formula "13"))
   (rule "andLeft" (formula "14"))
   (rule "replace_known_left" (formula "18") (term "0") (ifseqformula "12"))
   (builtin "One Step Simplification" (formula "18"))
   (rule "true_left" (formula "18"))
   (rule "polySimp_addComm0" (formula "14") (term "1,1,0"))
   (rule "castedGetAny" (formula "19") (term "0,1,0,1,1,0,1,0"))
   (rule "castedGetAny" (formula "13") (term "0,1,0,1,1,0"))
   (rule "castedGetAny" (formula "14") (term "0,1,0,1,1,0,1,1,0,0"))
   (rule "castedGetAny" (formula "15") (term "0,1,0,1,1,0,0"))
   (rule "castedGetAny" (formula "14") (term "0,1,0"))
   (rule "castedGetAny" (formula "14") (term "1,1,1,0"))
   (rule "castedGetAny" (formula "14") (term "0,1,0,1,1,0,0,0,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0,1,1,0,1,0"))
   (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0,1,1,0,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0,1,1,0"))
   (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0,1,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0,1,1,0,1,1,0,0"))
   (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0,1,1,0,1,1,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0,1,1,0,0"))
   (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0,1,1,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0,1,1,0,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0,1,1,0,0,0,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
   (rule "polySimp_addComm1" (formula "14") (term "0,1,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0,1,1,0,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0,1,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0,1,1,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0,1,1,0,0,0,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0,1,1,0,0,1,0,1,0,0"))
   (rule "apply_eq_monomials" (formula "14") (term "1,0,1,0,0") (ifseqformula "15"))
   (rule "polySimp_rightDist" (formula "14") (term "0,1,0,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,0,1,0,0"))
   (rule "polySimp_pullOutFactor0b" (formula "14") (term "1,0,1,0,0"))
   (rule "add_literals" (formula "14") (term "1,1,1,0,1,0,0"))
   (rule "times_zero_1" (formula "14") (term "1,1,0,1,0,0"))
   (rule "add_zero_right" (formula "14") (term "1,0,1,0,0"))
   (rule "polySimp_mulComm0" (formula "14") (term "1,0,1,0,0"))
   (rule "polySimp_addComm1" (formula "14") (term "0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0,1,1,0,1,0"))
   (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0,1,1,0,1,0"))
   (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0,1,1,0,1,0"))
   (rule "mul_literals" (formula "19") (term "0,1,1,0,0,1,1,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0,1,1,0,1,0"))
   (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0,1,1,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0,1,1,0"))
   (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0,1,1,0"))
   (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0,1,1,0"))
   (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0,1,1,0"))
   (rule "mul_literals" (formula "13") (term "0,1,1,0,0,1,1,0"))
   (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0,1,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0,1,1,0,0"))
   (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0,1,1,0,0"))
   (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0,1,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0,1,1,0,0"))
   (rule "mul_literals" (formula "15") (term "0,1,1,0,0,1,1,0,0"))
   (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0,1,1,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0,1,1,0,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0,1,1,0,0,0,1,0"))
   (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0,1,1,0,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0,1,1,0,0,0,1,0"))
   (rule "mul_literals" (formula "14") (term "0,1,1,0,0,1,1,0,0,0,1,0"))
   (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0,1,1,0,0,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
   (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
   (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
   (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
   (rule "pullOutSelect" (formula "15") (term "0") (inst "selectSK=IntLinkedList_size_0"))
   (rule "simplifySelectOfAnon" (formula "15"))
   (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "19")) (ifInst ""  (formula "2")))
   (rule "eqSymm" (formula "16"))
   (rule "applyEqReverse" (formula "15") (term "1") (ifseqformula "16"))
   (builtin "One Step Simplification" (formula "15"))
   (rule "hideAuxiliaryEq" (formula "16"))
   (rule "elementOfUnion" (formula "15") (term "0,0"))
   (rule "elementOfSingleton" (formula "15") (term "0,0,0"))
   (builtin "One Step Simplification" (formula "15"))
   (rule "elementOfInfiniteUnion" (formula "15") (term "0,0"))
   (builtin "One Step Simplification" (formula "15"))
   (rule "elementOfSingleton" (formula "15") (term "1,0,0,0"))
   (builtin "One Step Simplification" (formula "15"))
   (rule "true_left" (formula "15"))
   (rule "pullOutSelect" (formula "14") (term "0,0,1,0") (inst "selectSK=IntList_seq_0"))
   (rule "simplifySelectOfAnon" (formula "14"))
   (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "18")) (ifInst ""  (formula "2")))
   (rule "polySimp_homoEq" (formula "15") (term "1,0"))
   (rule "polySimp_addComm1" (formula "15") (term "0,1,0"))
   (rule "polySimp_sepPosMonomial" (formula "15") (term "1,0"))
   (rule "polySimp_mulComm0" (formula "15") (term "1,1,0"))
   (rule "polySimp_rightDist" (formula "15") (term "1,1,0"))
   (rule "mul_literals" (formula "15") (term "0,1,1,0"))
   (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0"))
   (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0"))
   (rule "elementOfUnion" (formula "14") (term "0,0"))
   (rule "elementOfInfiniteUnion" (formula "14") (term "1,0,0"))
   (builtin "One Step Simplification" (formula "14"))
   (rule "elementOfSingleton" (formula "14") (term "1,0,1,0,0"))
   (builtin "One Step Simplification" (formula "14"))
   (rule "elementOfSingleton" (formula "14") (term "0,0"))
   (builtin "One Step Simplification" (formula "14"))
   (rule "applyEqReverse" (formula "15") (term "0,1,1,1,0") (ifseqformula "14"))
   (rule "hideAuxiliaryEq" (formula "14"))
   (rule "polySimp_homoEq" (formula "14") (term "1,0"))
   (rule "polySimp_addComm1" (formula "14") (term "0,1,0"))
   (rule "polySimp_sepPosMonomial" (formula "14") (term "1,0"))
   (rule "polySimp_mulComm0" (formula "14") (term "1,1,0"))
   (rule "polySimp_rightDist" (formula "14") (term "1,1,0"))
   (rule "mul_literals" (formula "14") (term "0,1,1,0"))
   (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0"))
   (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0"))
   (rule "nnf_imp2or" (formula "14") (term "0"))
   (rule "nnf_notAnd" (formula "14") (term "0,0"))
   (rule "inEqSimp_notGeq" (formula "14") (term "0,0,0"))
   (rule "times_zero_1" (formula "14") (term "1,0,0,0,0,0"))
   (rule "add_zero_right" (formula "14") (term "0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
   (rule "mul_literals" (formula "14") (term "1,0,0,0"))
   (rule "inEqSimp_notLeq" (formula "14") (term "1,0,0"))
   (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0"))
   (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0"))
   (rule "add_literals" (formula "14") (term "0,0,0,1,0,0"))
   (rule "add_zero_left" (formula "14") (term "0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0"))
   (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0"))
   (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0"))
   (rule "shift_paren_or" (formula "16"))
   (rule "cnf_rightDist" (formula "5") (term "0"))
   (rule "Class_invariant_axiom_for_IntLinkedList" (formula "13") (inst "i=i_2") (inst "j=j_1") (inst "i_0=i_0") (inst "i_1=i_1"))
   (builtin "One Step Simplification" (formula "13"))
   (rule "replaceKnownSelect_taclet1_0" (formula "13") (term "0,1,1"))
   (rule "replaceKnownSelect_taclet1_0" (formula "13") (term "0,0,1"))
   (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "13") (term "0,1,1"))
   (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "13") (term "0,0,1"))
   (rule "replaceKnownSelect_taclet1_2" (formula "13") (term "0,1,0,1"))
   (rule "replaceKnownAuxiliaryConstant_taclet1_3" (formula "13") (term "0,1,0,1"))
   (rule "replaceKnownSelect_taclet1_0" (formula "13") (term "0,0,1,1,0"))
   (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "13") (term "0,0,1,1,0"))
   (rule "replaceKnownSelect_taclet1_0" (formula "13") (term "0,0,1,1,0,0"))
   (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "13") (term "0,0,1,1,0,0"))
   (rule "replaceKnownSelect_taclet1_0" (formula "13") (term "0,1,0,2,1,1,0"))
   (rule "replaceKnownSelect_taclet1_0" (formula "13") (term "1,1,0,0,1,0,0,0"))
   (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "13") (term "0,1,0,2,1,1,0"))
   (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "13") (term "1,1,0,0,1,0,0,0"))
   (rule "replaceKnownSelect_taclet1_0" (formula "13") (term "1,1,0,0,1,1,1,0,0,0,0"))
   (rule "replaceKnownSelect_taclet1_2" (formula "13") (term "0,1,1,0,0,1,0,0,0,0,0"))
   (rule "replaceKnownSelect_taclet1_2" (formula "13") (term "0,1,1,0,0,1,0,1,0,0,0"))
   (rule "replaceKnownSelect_taclet1_0" (formula "13") (term "0,1,0,1,1,1,0,1,0,0,0"))
   (rule "replaceKnownSelect_taclet1_2" (formula "13") (term "0,0,0,1,1,0,1,0,0,0,0,0"))
   (rule "replaceKnownSelect_taclet1_0" (formula "13") (term "1,1,0,0,1,0,1,0,1,0,0,0"))
   (rule "replaceKnownSelect_taclet1_2" (formula "13") (term "0,0,0,0,1,0,1,0,0,0,0,0"))
   (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "13") (term "1,1,0,0,1,1,1,0,0,0,0"))
   (rule "replaceKnownAuxiliaryConstant_taclet1_3" (formula "13") (term "0,1,1,0,0,1,0,0,0,0,0"))
   (rule "replaceKnownAuxiliaryConstant_taclet1_3" (formula "13") (term "0,1,1,0,0,1,0,1,0,0,0"))
   (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "13") (term "0,1,0,1,1,1,0,1,0,0,0"))
   (rule "replaceKnownAuxiliaryConstant_taclet1_3" (formula "13") (term "0,0,0,1,1,0,1,0,0,0,0,0"))
   (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "13") (term "1,1,0,0,1,0,1,0,1,0,0,0"))
   (rule "replaceKnownAuxiliaryConstant_taclet1_3" (formula "13") (term "0,0,0,0,1,0,1,0,0,0,0,0"))
   (rule "translateJavaAddInt" (formula "13") (term "1,0,2,1,1,1,0,1,0,0,0"))
   (rule "translateJavaSubInt" (formula "13") (term "1,0,2,1,1,0"))
   (rule "translateJavaSubInt" (formula "13") (term "1,0,1,1,1,0,1,0,0,0"))
   (rule "andLeft" (formula "13"))
   (rule "andLeft" (formula "13"))
   (rule "andLeft" (formula "15"))
   (rule "andLeft" (formula "13"))
   (rule "andLeft" (formula "13"))
   (rule "andLeft" (formula "13"))
   (rule "andLeft" (formula "13"))
   (rule "andLeft" (formula "13"))
   (rule "eqSymm" (formula "19"))
   (rule "eqSymm" (formula "20"))
   (rule "eqSymm" (formula "21"))
   (rule "eqSymm" (formula "18"))
   (rule "eqSymm" (formula "17") (term "0,1,0,1,0,1,0"))
   (rule "eqSymm" (formula "17") (term "1,1,0,1,0,1,0"))
   (rule "eqSymm" (formula "17") (term "1,1,0"))
   (rule "eqSymm" (formula "16"))
   (rule "polySimp_elimSub" (formula "19") (term "1,0,2,0"))
   (rule "mul_literals" (formula "19") (term "1,1,0,2,0"))
   (rule "polySimp_elimSub" (formula "17") (term "1,0,0,1,1,0"))
   (rule "mul_literals" (formula "17") (term "1,1,0,0,1,1,0"))
   (rule "polySimp_addComm0" (formula "17") (term "1,0,2,0,1,1,0"))
   (rule "polySimp_addComm0" (formula "19") (term "1,0,2,0"))
   (rule "polySimp_addComm0" (formula "17") (term "1,0,0,1,1,0"))
   (rule "castedGetAny" (formula "17") (term "1,0,1,0,0,1,0"))
   (rule "castedGetAny" (formula "17") (term "0,0,0,0,0,1,0"))
   (rule "subsetSingletonLeft" (formula "13"))
   (rule "subsetSingletonLeft" (formula "14"))
   (rule "castedGetAny" (formula "18") (term "2,0"))
   (rule "castedGetAny" (formula "17") (term "1,0,1,0,1,0,1,0"))
   (rule "castedGetAny" (formula "17") (term "0,0,1,0,1,0,1,0"))
   (rule "castedGetAny" (formula "17") (term "1,1,1,1,0"))
   (rule "castedGetAny" (formula "16") (term "0,1,0,1,0"))
   (rule "castedGetAny" (formula "17") (term "2,0,1,1,0"))
   (rule "castedGetAny" (formula "19") (term "2,0"))
   (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0,1,0,1,0"))
   (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0,1,0,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0,1,0,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0,1,0"))
   (rule "applyEq" (formula "15") (term "0,1,0,0,1,0,0") (ifseqformula "20"))
   (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0,1,0,1,0"))
   (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0,1,0,1,0"))
   (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0,1,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0,1,0,1,0"))
   (rule "mul_literals" (formula "17") (term "0,1,1,0,0,1,0,1,0"))
   (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0,1,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0"))
   (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0"))
   (rule "mul_literals" (formula "17") (term "0,1,1,0,0"))
   (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0,1,0"))
   (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0,1,0"))
   (rule "mul_literals" (formula "16") (term "0,1,1,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0,1,0"))
   (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
   (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
   (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
   (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
   (rule "elementOfUnionEQ" (formula "14") (ifseqformula "16"))
   (builtin "One Step Simplification" (formula "14"))
   (rule "true_left" (formula "14"))
   (rule "elementOfUnionEQ" (formula "13") (ifseqformula "15"))
   (builtin "One Step Simplification" (formula "13"))
   (rule "true_left" (formula "13"))
   (rule "pullOutSelect" (formula "17") (term "1") (inst "selectSK=IntLinkedList_last_0"))
   (rule "simplifySelectOfAnon" (formula "17"))
   (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "24")) (ifInst ""  (formula "2")))
   (rule "elementOfUnion" (formula "17") (term "0,0"))
   (rule "elementOfSingleton" (formula "17") (term "0,0,0"))
   (builtin "One Step Simplification" (formula "17"))
   (rule "elementOfInfiniteUnion" (formula "17") (term "0,0"))
   (builtin "One Step Simplification" (formula "17"))
   (rule "elementOfSingleton" (formula "17") (term "1,0,0,0"))
   (builtin "One Step Simplification" (formula "17"))
   (rule "applyEqReverse" (formula "18") (term "1") (ifseqformula "17"))
   (rule "hideAuxiliaryEq" (formula "17"))
   (rule "pullOutSelect" (formula "19") (term "0,0") (inst "selectSK=IntLinkedList_nodeseq_0"))
   (rule "applyEq" (formula "15") (term "0,1,1,1,1,0") (ifseqformula "19"))
   (rule "applyEq" (formula "15") (term "0,1,0,1,0,1,0,1,0") (ifseqformula "19"))
   (rule "applyEq" (formula "14") (term "0,0,1,0,1,0") (ifseqformula "19"))
   (rule "applyEq" (formula "17") (term "0,2,0") (ifseqformula "19"))
   (rule "applyEq" (formula "15") (term "0,0,0,0,0,0,1,0") (ifseqformula "19"))
   (rule "applyEq" (formula "15") (term "0,1,0,1,0,0,1,0") (ifseqformula "19"))
   (rule "applyEq" (formula "15") (term "0,2,0,1,1,0") (ifseqformula "19"))
   (rule "applyEq" (formula "16") (term "0,2,0") (ifseqformula "19"))
   (rule "applyEq" (formula "15") (term "0,0,0,1,0,1,0,1,0") (ifseqformula "19"))
   (rule "simplifySelectOfAnon" (formula "19"))
   (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "24")) (ifInst ""  (formula "2")))
   (rule "eqSymm" (formula "14"))
   (rule "eqSymm" (formula "15") (term "1,1,0"))
   (rule "eqSymm" (formula "16"))
   (rule "elementOfUnion" (formula "19") (term "0,0"))
   (rule "elementOfSingleton" (formula "19") (term "0,0,0"))
   (builtin "One Step Simplification" (formula "19"))
   (rule "elementOfInfiniteUnion" (formula "19") (term "0,0"))
   (builtin "One Step Simplification" (formula "19"))
   (rule "elementOfSingleton" (formula "19") (term "1,0,0,0"))
   (builtin "One Step Simplification" (formula "19"))
   (rule "applyEqReverse" (formula "15") (term "0,0,0,0,0,0,1,0") (ifseqformula "19"))
   (rule "applyEqReverse" (formula "14") (term "0,0,1,0,1,1") (ifseqformula "19"))
   (rule "applyEqReverse" (formula "15") (term "0,1,0,1,0,0,1,0") (ifseqformula "19"))
   (rule "applyEqReverse" (formula "15") (term "0,0,0,1,0,1,0,1,0") (ifseqformula "19"))
   (rule "applyEqReverse" (formula "16") (term "0,2,1") (ifseqformula "19"))
   (rule "applyEqReverse" (formula "17") (term "0,2,0") (ifseqformula "19"))
   (rule "applyEqReverse" (formula "19") (term "0,0") (ifseqformula "18"))
   (rule "applyEqReverse" (formula "15") (term "0,2,1,1,1,0") (ifseqformula "18"))
   (rule "applyEqReverse" (formula "15") (term "0,1,0,1,1,0") (ifseqformula "18"))
   (rule "applyEqReverse" (formula "15") (term "0,1,0,1,0,1,0,1,0") (ifseqformula "18"))
   (rule "hideAuxiliaryEq" (formula "18"))
   (rule "applyEq" (formula "16") (term "1") (ifseqformula "8"))
   (rule "applyEq" (formula "14") (term "1") (ifseqformula "6"))
   (rule "pullOutSelect" (formula "14") (term "0") (inst "selectSK=IntList_footprint_0"))
   (rule "simplifySelectOfAnon" (formula "14"))
   (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "22")) (ifInst ""  (formula "2")))
   (rule "eqSymm" (formula "15"))
   (rule "applyEqReverse" (formula "14") (term "1") (ifseqformula "15"))
   (builtin "One Step Simplification" (formula "14"))
   (rule "hideAuxiliaryEq" (formula "15"))
   (rule "elementOfUnion" (formula "14") (term "0,0"))
   (rule "elementOfSingleton" (formula "14") (term "0,0,0"))
   (builtin "One Step Simplification" (formula "14"))
   (rule "elementOfInfiniteUnion" (formula "14") (term "0,0"))
   (builtin "One Step Simplification" (formula "14"))
   (rule "elementOfSingleton" (formula "14") (term "1,0,0,0"))
   (builtin "One Step Simplification" (formula "14"))
   (rule "true_left" (formula "14"))
   (rule "pullOutSelect" (formula "15") (term "0") (inst "selectSK=IntLinkedList_first_0"))
   (rule "simplifySelectOfAnon" (formula "15"))
   (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "21")) (ifInst ""  (formula "2")))
   (rule "eqSymm" (formula "16"))
   (rule "applyEqReverse" (formula "15") (term "1") (ifseqformula "16"))
   (builtin "One Step Simplification" (formula "15"))
   (rule "hideAuxiliaryEq" (formula "16"))
   (rule "elementOfUnion" (formula "15") (term "0,0"))
   (rule "elementOfSingleton" (formula "15") (term "0,0,0"))
   (builtin "One Step Simplification" (formula "15"))
   (rule "elementOfInfiniteUnion" (formula "15") (term "0,0"))
   (builtin "One Step Simplification" (formula "15"))
   (rule "elementOfSingleton" (formula "15") (term "1,0,0,0"))
   (builtin "One Step Simplification" (formula "15"))
   (rule "true_left" (formula "15"))
   (rule "nnf_imp2or" (formula "13") (term "0"))
   (rule "nnf_imp2or" (formula "14") (term "0"))
   (rule "distr_forallAnd" (formula "5"))
   (rule "andLeft" (formula "5"))
   (rule "nnf_notAnd" (formula "14") (term "0,0"))
   (rule "inEqSimp_notLeq" (formula "14") (term "1,0,0"))
   (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0"))
   (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0"))
   (rule "add_literals" (formula "14") (term "0,0,0,1,0,0"))
   (rule "add_zero_left" (formula "14") (term "0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0"))
   (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0"))
   (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0"))
   (rule "inEqSimp_notGeq" (formula "14") (term "0,0,0"))
   (rule "times_zero_1" (formula "14") (term "1,0,0,0,0,0"))
   (rule "add_zero_right" (formula "14") (term "0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
   (rule "mul_literals" (formula "14") (term "1,0,0,0"))
   (rule "nnf_notAnd" (formula "15") (term "0,0"))
   (rule "inEqSimp_notGeq" (formula "15") (term "0,0,0"))
   (rule "times_zero_1" (formula "15") (term "1,0,0,0,0,0"))
   (rule "add_zero_right" (formula "15") (term "0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
   (rule "mul_literals" (formula "15") (term "1,0,0,0"))
   (rule "inEqSimp_notLeq" (formula "15") (term "1,0,0"))
   (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0"))
   (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0"))
   (rule "add_literals" (formula "15") (term "0,0,0,1,0,0"))
   (rule "add_zero_left" (formula "15") (term "0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "1,0,0"))
   (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0"))
   (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0"))
   (rule "ifthenelse_to_or_left" (formula "8") (term "1,1,0"))
   (rule "eqSymm" (formula "8") (term "1,0,1,1,0"))
   (rule "eqSymm" (formula "8") (term "1,1,1,1,0"))
   (rule "shift_paren_or" (formula "8") (term "0,1,0,1,0"))
   (rule "nnf_imp2or" (formula "15") (term "0,1,0,1,0"))
   (rule "nnf_notAnd" (formula "15") (term "0,0,1,0,1,0"))
   (rule "inEqSimp_notLeq" (formula "15") (term "1,0,0,1,0,1,0"))
   (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0,1,0,1,0"))
   (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,0,1,0,1,0"))
   (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0,1,0,1,0"))
   (rule "add_literals" (formula "15") (term "0,0,0,1,0,0,1,0,1,0"))
   (rule "add_zero_left" (formula "15") (term "0,0,1,0,0,1,0,1,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "1,0,0,1,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,1,0,1,0"))
   (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,1,0,1,0"))
   (rule "inEqSimp_notGeq" (formula "15") (term "0,0,0,1,0,1,0"))
   (rule "times_zero_1" (formula "15") (term "1,0,0,0,0,0,1,0,1,0"))
   (rule "add_zero_right" (formula "15") (term "0,0,0,0,0,1,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0,1,0,1,0"))
   (rule "mul_literals" (formula "15") (term "1,0,0,0,1,0,1,0"))
   (rule "nnf_imp2or" (formula "15") (term "1,0,1,0,1,0"))
   (rule "lenNonNegative" (formula "12") (term "0"))
   (rule "inEqSimp_commuteLeq" (formula "12"))
   (rule "applyEq" (formula "12") (term "0") (ifseqformula "13"))
   (rule "lenNonNegative" (formula "11") (term "0"))
   (rule "inEqSimp_commuteLeq" (formula "11"))
   (rule "applyEq" (formula "11") (term "0") (ifseqformula "12"))
   (rule "seqGetAlphaCast" (formula "9") (term "2,0"))
   (rule "castedGetAny" (formula "9") (term "0"))
   (builtin "One Step Simplification" (formula "9"))
   (rule "true_left" (formula "9"))
   (rule "seqGetAlphaCast" (formula "10") (term "2,0"))
   (rule "castedGetAny" (formula "10") (term "0"))
   (builtin "One Step Simplification" (formula "10"))
   (rule "true_left" (formula "10"))
   (rule "ifUnfold" (formula "22") (term "1") (inst "#boolv=x"))
   (rule "variableDeclaration" (formula "22") (term "1") (newnames "x"))
   (rule "commute_or_2" (formula "5") (term "0"))
   (rule "shift_paren_or" (formula "6") (term "0"))
   (rule "cnf_rightDist" (formula "15") (term "0"))
   (rule "distr_forallAnd" (formula "15"))
   (rule "andLeft" (formula "15"))
   (rule "commute_or_2" (formula "15") (term "0"))
   (rule "commute_or" (formula "5") (term "0,0"))
   (rule "shift_paren_or" (formula "16") (term "0"))
   (rule "commute_or" (formula "8") (term "0,1,1,0"))
   (rule "commute_or" (formula "15") (term "0,0"))
   (rule "commute_or" (formula "8") (term "1,1,1,0"))
   (rule "commute_or_2" (formula "8") (term "0,0,1,0,1,0"))
   (rule "ifthenelse_to_or_right" (formula "17") (term "1,1,0"))
   (rule "commute_or" (formula "17") (term "1,1,1,0"))
   (rule "commute_or" (formula "17") (term "0,1,1,0"))
   (rule "shift_paren_or" (formula "17") (term "0,1,0,1,0"))
   (rule "lenNonNegative" (formula "18") (term "0"))
   (rule "inEqSimp_commuteLeq" (formula "18"))
   (rule "applyEq" (formula "18") (term "0") (ifseqformula "19"))
   (rule "commute_or_2" (formula "17") (term "0,0,1,0,1,0"))
   (rule "inequality_comparison_simple" (formula "23") (term "1"))
   (builtin "One Step Simplification" (formula "23"))
   (rule "replace_known_left" (formula "23") (term "0,0,1,0") (ifseqformula "14"))
   (builtin "One Step Simplification" (formula "23"))
   (rule "commute_or" (formula "8") (term "0,0,0,1,0,1,0"))
   (rule "commute_or" (formula "17") (term "0,0,0,1,0,1,0"))
   (rule "all_pull_out1" (formula "8") (term "0,1,0"))
   (rule "all_pull_out1" (formula "17") (term "0,1,0"))
   (rule "all_pull_out0" (formula "8") (term "1,0"))
   (rule "shift_paren_and" (formula "8") (term "0,1,0"))
   (rule "all_pull_out0" (formula "17") (term "1,0"))
   (rule "shift_paren_and" (formula "17") (term "0,1,0"))
   (rule "all_pull_out3" (formula "8") (term "0"))
   (rule "cnf_rightDist" (formula "8") (term "0,0"))
   (rule "distr_forallAnd" (formula "8") (term "0"))
   (builtin "One Step Simplification" (formula "8"))
   (rule "distr_forallAnd" (formula "8"))
   (rule "andLeft" (formula "8"))
   (rule "shift_paren_or" (formula "9") (term "0"))
   (rule "commute_or_2" (formula "9") (term "0,0"))
   (rule "inEqSimp_or_weaken3" (formula "9") (term "0"))
   (rule "polySimp_addAssoc" (formula "9") (term "1,0,1,0"))
   (rule "add_literals" (formula "9") (term "0,1,0,1,0"))
   (rule "add_zero_left" (formula "9") (term "1,0,1,0"))
   (builtin "One Step Simplification" (formula "9"))
   (rule "cnf_rightDist" (formula "8") (term "0,0"))
   (rule "distr_forallAnd" (formula "8") (term "0"))
   (builtin "One Step Simplification" (formula "8"))
   (rule "distr_forallAnd" (formula "8"))
   (rule "andLeft" (formula "8"))
   (rule "commute_or_2" (formula "9") (term "0"))
   (builtin "One Step Simplification" (formula "9"))
   (rule "inEqSimp_homoInEq1" (formula "9") (term "1,1"))
   (rule "polySimp_mulComm0" (formula "9") (term "1,0,1,1"))
   (rule "polySimp_rightDist" (formula "9") (term "1,0,1,1"))
   (rule "mul_literals" (formula "9") (term "0,1,0,1,1"))
   (rule "polySimp_addAssoc" (formula "9") (term "0,1,1"))
   (rule "polySimp_addComm0" (formula "9") (term "0,0,1,1"))
   (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,1,1"))
   (rule "add_literals" (formula "9") (term "1,1,0,1,1"))
   (rule "times_zero_1" (formula "9") (term "1,0,1,1"))
   (rule "add_zero_right" (formula "9") (term "0,1,1"))
   (rule "leq_literals" (formula "9") (term "1,1"))
   (builtin "One Step Simplification" (formula "9"))
   (rule "inEqSimp_homoInEq0" (formula "9") (term "1"))
   (rule "polySimp_mulComm0" (formula "9") (term "1,0,1"))
   (rule "polySimp_rightDist" (formula "9") (term "1,0,1"))
   (rule "mul_literals" (formula "9") (term "0,1,0,1"))
   (rule "polySimp_addAssoc" (formula "9") (term "0,1"))
   (rule "add_literals" (formula "9") (term "0,0,1"))
   (rule "add_zero_left" (formula "9") (term "0,1"))
   (rule "inEqSimp_invertInEq1" (formula "9") (term "1"))
   (rule "polySimp_mulLiterals" (formula "9") (term "0,1"))
   (rule "times_zero_2" (formula "9") (term "1,1"))
   (rule "polySimp_elimOne" (formula "9") (term "0,1"))
   (rule "cnf_rightDist" (formula "8") (term "0,0"))
   (rule "distr_forallAnd" (formula "8") (term "0"))
   (builtin "One Step Simplification" (formula "8"))
   (rule "distr_forallAnd" (formula "8"))
   (rule "andLeft" (formula "8"))
   (rule "commute_or_2" (formula "9") (term "0,0"))
   (rule "commute_or_2" (formula "9") (term "0,0,0"))
   (rule "cnf_rightDist" (formula "8") (term "0"))
   (rule "distr_forallAnd" (formula "8"))
   (rule "andLeft" (formula "8"))
   (rule "commute_or_2" (formula "8") (term "0"))
   (rule "shift_paren_or" (formula "9") (term "0"))
   (rule "commute_or" (formula "8") (term "0,0"))
   (rule "commute_or_2" (formula "10") (term "0,0,0,0"))
   (rule "shift_paren_or" (formula "10") (term "0,0,0,0,0"))
   (rule "all_pull_out3" (formula "21") (term "0"))
   (rule "cnf_rightDist" (formula "21") (term "0,0"))
   (rule "distr_forallAnd" (formula "21") (term "0"))
   (builtin "One Step Simplification" (formula "21"))
   (rule "distr_forallAnd" (formula "21"))
   (rule "andLeft" (formula "21"))
   (rule "shift_paren_or" (formula "22") (term "0"))
   (rule "commute_or_2" (formula "22") (term "0,0"))
   (rule "inEqSimp_or_weaken3" (formula "22") (term "0"))
   (rule "polySimp_addAssoc" (formula "22") (term "1,0,1,0"))
   (rule "add_literals" (formula "22") (term "0,1,0,1,0"))
   (rule "add_zero_left" (formula "22") (term "1,0,1,0"))
   (builtin "One Step Simplification" (formula "22"))
   (rule "cnf_rightDist" (formula "21") (term "0,0"))
   (rule "distr_forallAnd" (formula "21") (term "0"))
   (builtin "One Step Simplification" (formula "21"))
   (rule "distr_forallAnd" (formula "21"))
   (rule "andLeft" (formula "21"))
   (rule "commute_or_2" (formula "22") (term "0"))
   (builtin "One Step Simplification" (formula "22"))
   (rule "inEqSimp_homoInEq1" (formula "22") (term "1,1"))
   (rule "polySimp_mulComm0" (formula "22") (term "1,0,1,1"))
   (rule "polySimp_rightDist" (formula "22") (term "1,0,1,1"))
   (rule "mul_literals" (formula "22") (term "0,1,0,1,1"))
   (rule "polySimp_addAssoc" (formula "22") (term "0,1,1"))
   (rule "polySimp_addComm0" (formula "22") (term "0,0,1,1"))
   (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,1,1"))
   (rule "add_literals" (formula "22") (term "1,1,0,1,1"))
   (rule "times_zero_1" (formula "22") (term "1,0,1,1"))
   (rule "add_zero_right" (formula "22") (term "0,1,1"))
   (rule "leq_literals" (formula "22") (term "1,1"))
   (builtin "One Step Simplification" (formula "22"))
   (rule "inEqSimp_homoInEq0" (formula "22") (term "1"))
   (rule "polySimp_mulComm0" (formula "22") (term "1,0,1"))
   (rule "polySimp_rightDist" (formula "22") (term "1,0,1"))
   (rule "mul_literals" (formula "22") (term "0,1,0,1"))
   (rule "polySimp_addAssoc" (formula "22") (term "0,1"))
   (rule "add_literals" (formula "22") (term "0,0,1"))
   (rule "add_zero_left" (formula "22") (term "0,1"))
   (rule "inEqSimp_invertInEq1" (formula "22") (term "1"))
   (rule "times_zero_2" (formula "22") (term "1,1"))
   (rule "polySimp_mulLiterals" (formula "22") (term "0,1"))
   (rule "polySimp_elimOne" (formula "22") (term "0,1"))
   (rule "pullOutSelect" (formula "22") (term "0,0") (inst "selectSK=IntNode_next_0"))
   (rule "simplifySelectOfAnon" (formula "22"))
   (builtin "One Step Simplification" (formula "22"))
   (rule "elementOfUnion" (formula "22") (term "0,0,0"))
   (rule "elementOfSingleton" (formula "22") (term "0,0,0,0"))
   (builtin "One Step Simplification" (formula "22"))
   (rule "elementOfInfiniteUnion" (formula "22") (term "0,0,0"))
   (builtin "One Step Simplification" (formula "22"))
   (rule "elementOfSingleton" (formula "22") (term "1,0,0,0,0"))
   (builtin "One Step Simplification" (formula "22"))
   (rule "cnf_rightDist" (formula "21") (term "0,0"))
   (rule "distr_forallAnd" (formula "21") (term "0"))
   (builtin "One Step Simplification" (formula "21"))
   (rule "distr_forallAnd" (formula "21"))
   (rule "andLeft" (formula "21"))
   (rule "commute_or_2" (formula "22") (term "0,0"))
   (rule "commute_or_2" (formula "22") (term "0,0,0"))
   (rule "cnf_rightDist" (formula "21") (term "0"))
   (rule "distr_forallAnd" (formula "21"))
   (rule "andLeft" (formula "21"))
   (rule "commute_or_2" (formula "21") (term "0"))
   (rule "shift_paren_or" (formula "22") (term "0"))
   (rule "commute_or" (formula "21") (term "0,0"))
   (rule "commute_or_2" (formula "22") (term "0,0,0,0"))
   (rule "shift_paren_or" (formula "22") (term "0,0,0,0,0"))
   (rule "ifSplit" (formula "30"))
   (branch "if x true"
      (builtin "One Step Simplification" (formula "31"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "closeFalse" (formula "1"))
   )
   (branch "if x false"
      (builtin "One Step Simplification" (formula "31"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "true_left" (formula "1"))
      (rule "methodCallEmpty" (formula "30") (term "1"))
      (rule "tryEmpty" (formula "30") (term "1"))
      (rule "emptyModality" (formula "30") (term "1"))
      (builtin "One Step Simplification" (formula "30"))
      (rule "replaceKnownSelect_taclet1_0" (formula "30") (term "1,0,1,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "30") (term "1,0,1,0"))
      (builtin "One Step Simplification" (formula "30"))
      (rule "replaceKnownSelect_taclet1_0" (formula "30") (term "1,1,0,0,0,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "30") (term "1,1,0,0,0,0"))
      (rule "replaceKnownSelect_taclet1_2" (formula "30") (term "0,1,1,1,0,0,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet1_3" (formula "30") (term "0,1,1,1,0,0,0"))
      (rule "eqSymm" (formula "30") (term "1,0,0,1"))
      (rule "polySimp_homoEq" (formula "30") (term "1,0,0,0"))
      (rule "polySimp_addComm1" (formula "30") (term "0,1,0,0,0"))
      (rule "polySimp_sepPosMonomial" (formula "30") (term "1,0,0,0"))
      (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0,0"))
      (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0,0"))
      (rule "mul_literals" (formula "30") (term "0,1,1,0,0,0"))
      (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0,0"))
      (rule "replace_known_left" (formula "30") (term "0,0") (ifseqformula "26"))
      (builtin "One Step Simplification" (formula "30"))
      (rule "Class_invariant_axiom_for_IntLinkedList" (formula "30") (term "0") (inst "i=i_2") (inst "j=j_1") (inst "i_0=i_0") (inst "i_1=i_1"))
      (builtin "One Step Simplification" (formula "30"))
      (rule "replaceKnownSelect_taclet1_4" (formula "30") (term "0,1,0,0"))
      (rule "replaceKnownSelect_taclet1_0" (formula "30") (term "0,0,1,0"))
      (rule "replaceKnownSelect_taclet1_0" (formula "30") (term "0,1,1,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet1_5" (formula "30") (term "0,1,0,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "30") (term "0,0,1,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "30") (term "0,1,1,0"))
      (rule "replaceKnownSelect_taclet1_10" (formula "30") (term "0,1,0,0,0"))
      (rule "replaceKnownSelect_taclet1_6" (formula "30") (term "0,1,1,1,0"))
      (rule "replaceKnownSelect_taclet1_2" (formula "30") (term "0,1,0,1,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet1_11" (formula "30") (term "0,1,0,0,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet1_7" (formula "30") (term "0,1,1,1,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet1_3" (formula "30") (term "0,1,0,1,0"))
      (rule "replaceKnownSelect_taclet1_0" (formula "30") (term "0,0,1,1,0,0"))
      (rule "replaceKnownSelect_taclet1_0" (formula "30") (term "0,0,1,1,0,0,0"))
      (rule "replaceKnownSelect_taclet1_8" (formula "30") (term "0,1,0,0,0,0,0"))
      (rule "replaceKnownSelect_taclet1_6" (formula "30") (term "0,0,2,1,1,0,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "30") (term "0,0,1,1,0,0"))
      (rule "replaceKnownSelect_taclet1_0" (formula "30") (term "0,1,0,2,1,1,0,0"))
      (rule "replaceKnownSelect_taclet1_6" (formula "30") (term "0,0,2,1,1,0,0,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "30") (term "0,0,1,1,0,0,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet1_9" (formula "30") (term "0,1,0,0,0,0,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet1_7" (formula "30") (term "0,0,2,1,1,0,0"))
      (rule "replaceKnownSelect_taclet1_0" (formula "30") (term "1,1,0,0,1,0,0,0,0"))
      (rule "replaceKnownSelect_taclet1_8" (formula "30") (term "1,1,0,0,0,0,0,0,0"))
      (rule "replaceKnownSelect_taclet1_8" (formula "30") (term "1,0,0,0,0,0,0,0,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "30") (term "0,1,0,2,1,1,0,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet1_7" (formula "30") (term "0,0,2,1,1,0,0,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "30") (term "1,1,0,0,1,0,0,0,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet1_9" (formula "30") (term "1,1,0,0,0,0,0,0,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet1_9" (formula "30") (term "1,0,0,0,0,0,0,0,0"))
      (rule "replaceKnownSelect_taclet1_6" (formula "30") (term "0,0,2,1,1,1,0,1,0,0,0,0"))
      (rule "replaceKnownSelect_taclet1_0" (formula "30") (term "1,1,0,0,1,1,1,0,0,0,0,0"))
      (rule "replaceKnownSelect_taclet1_2" (formula "30") (term "0,1,1,0,0,1,0,0,0,0,0,0"))
      (rule "replaceKnownSelect_taclet1_6" (formula "30") (term "0,0,1,0,1,1,0,1,0,0,0,0"))
      (rule "replaceKnownSelect_taclet1_0" (formula "30") (term "0,1,0,1,1,1,0,1,0,0,0,0"))
      (rule "replaceKnownSelect_taclet1_2" (formula "30") (term "0,1,1,0,0,1,0,1,0,0,0,0"))
      (rule "replaceKnownSelect_taclet1_2" (formula "30") (term "0,0,0,0,1,0,1,0,0,0,0,0,0"))
      (rule "replaceKnownSelect_taclet1_2" (formula "30") (term "0,0,0,1,1,0,1,0,0,0,0,0,0"))
      (rule "replaceKnownSelect_taclet1_6" (formula "30") (term "0,0,0,1,0,1,1,1,0,0,0,0,0"))
      (rule "replaceKnownSelect_taclet1_0" (formula "30") (term "1,1,0,0,1,0,1,0,1,0,0,0,0"))
      (rule "replaceKnownSelect_taclet1_6" (formula "30") (term "0,0,1,0,1,0,0,1,0,1,0,0,0,0"))
      (rule "replaceKnownSelect_taclet1_6" (formula "30") (term "0,0,0,0,0,0,0,1,0,1,0,0,0,0"))
      (rule "replaceKnownSelect_taclet1_6" (formula "30") (term "0,0,1,0,1,0,1,0,1,0,1,0,0,0,0"))
      (rule "replaceKnownSelect_taclet1_6" (formula "30") (term "0,0,0,0,1,0,1,0,1,0,1,0,0,0,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet1_7" (formula "30") (term "0,0,2,1,1,1,0,1,0,0,0,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "30") (term "1,1,0,0,1,1,1,0,0,0,0,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet1_3" (formula "30") (term "0,1,1,0,0,1,0,0,0,0,0,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet1_7" (formula "30") (term "0,0,1,0,1,1,0,1,0,0,0,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "30") (term "0,1,0,1,1,1,0,1,0,0,0,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet1_3" (formula "30") (term "0,1,1,0,0,1,0,1,0,0,0,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet1_3" (formula "30") (term "0,0,0,0,1,0,1,0,0,0,0,0,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet1_3" (formula "30") (term "0,0,0,1,1,0,1,0,0,0,0,0,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet1_7" (formula "30") (term "0,0,0,1,0,1,1,1,0,0,0,0,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "30") (term "1,1,0,0,1,0,1,0,1,0,0,0,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet1_7" (formula "30") (term "0,0,1,0,1,0,0,1,0,1,0,0,0,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet1_7" (formula "30") (term "0,0,0,0,0,0,0,1,0,1,0,0,0,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet1_7" (formula "30") (term "0,0,1,0,1,0,1,0,1,0,1,0,0,0,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet1_7" (formula "30") (term "0,0,0,0,1,0,1,0,1,0,1,0,0,0,0"))
      (rule "translateJavaAddInt" (formula "30") (term "1,0,2,1,1,1,0,1,0,0,0,0"))
      (rule "translateJavaSubInt" (formula "30") (term "1,0,2,1,1,0,0"))
      (rule "translateJavaSubInt" (formula "30") (term "1,0,1,1,1,0,1,0,0,0,0"))
      (rule "eqSymm" (formula "30") (term "1,1,0,1,0,1,0,1,0,0,0,0"))
      (rule "eqSymm" (formula "30") (term "1,1,0"))
      (rule "eqSymm" (formula "30") (term "0,1,0"))
      (rule "eqSymm" (formula "30") (term "1,0,0,0"))
      (rule "eqSymm" (formula "30") (term "1,0,0,0,0,0"))
      (rule "eqSymm" (formula "30") (term "0,1,0,1,0,1,0,1,0,0,0,0"))
      (rule "eqSymm" (formula "30") (term "1,0,0"))
      (rule "replace_known_left" (formula "30") (term "1,1,0") (ifseqformula "17"))
      (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "25")))
      (rule "polySimp_elimSub" (formula "30") (term "1,0,2,0,1,0"))
      (rule "mul_literals" (formula "30") (term "1,1,0,2,0,1,0"))
      (rule "polySimp_elimSub" (formula "30") (term "1,0,1,1,1,0,1,0,0,0"))
      (rule "mul_literals" (formula "30") (term "1,1,0,1,1,1,0,1,0,0,0"))
      (rule "polySimp_addComm0" (formula "30") (term "1,0,2,1,1,1,0,1,0,0,0"))
      (rule "polySimp_addComm0" (formula "30") (term "1,0,2,0,1,0"))
      (rule "polySimp_addComm0" (formula "30") (term "1,0,1,1,1,0,1,0,0,0"))
      (rule "castedGetAny" (formula "30") (term "1,0,1,0,1,0,1,0,1,0,0,0"))
      (rule "castedGetAny" (formula "30") (term "0,1,0,1,0,1,0,0,0,0"))
      (rule "subsetSingletonLeft" (formula "30") (term "1,0,0,0,0,0,0"))
      (rule "castedGetAny" (formula "30") (term "1,0,1,1,0,1,0,0,0"))
      (rule "castedGetAny" (formula "30") (term "2,0,1,0,0"))
      (rule "replace_known_left" (formula "30") (term "1,0,0") (ifseqformula "13"))
      (builtin "One Step Simplification" (formula "30"))
      (rule "castedGetAny" (formula "30") (term "2,0,1,0"))
      (rule "replace_known_left" (formula "30") (term "1,0") (ifseqformula "14"))
      (builtin "One Step Simplification" (formula "30"))
      (rule "castedGetAny" (formula "30") (term "2,1,1,1,0,1,0"))
      (rule "castedGetAny" (formula "30") (term "1,0,1,0,0,1,0,1,0"))
      (rule "castedGetAny" (formula "30") (term "0,0,1,0,1,0,1,0,1,0"))
      (rule "castedGetAny" (formula "30") (term "0,0,0,0,0,1,0,1,0"))
      (rule "subsetSingletonLeft" (formula "30") (term "0,0,0,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0,1,0,0,0"))
      (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0,1,0,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0,1,0,1,0,0"))
      (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0,1,0,1,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0,1,0,1,0,1,0"))
      (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0,1,0,1,0,1,0"))
      (rule "inEqSimp_commuteLeq" (formula "30") (term "0,0,0,1,0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "30") (term "0,0,0,1,0"))
      (rule "inEqSimp_commuteLeq" (formula "30") (term "0,0,0,1,0,1,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "30") (term "0,0,0,1,0,1,0,1,0"))
      (rule "applyEq" (formula "30") (term "0,1,0,0,1,0,0,1,0,0,0") (ifseqformula "25"))
      (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0,1,0"))
      (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0,1,0"))
      (rule "mul_literals" (formula "30") (term "0,1,1,0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0,1,0"))
      (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0,1,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0,1,0,1,0,0"))
      (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0,1,0,1,0,0"))
      (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0,1,0,1,0,0"))
      (rule "mul_literals" (formula "30") (term "0,1,1,0,0,1,0,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0,1,0,1,0,0"))
      (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0,1,0,1,0,0"))
      (rule "replace_known_left" (formula "30") (term "1,0,0") (ifseqformula "7"))
      (builtin "One Step Simplification" (formula "30"))
      (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0,1,0,1,0,1,0"))
      (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0,1,0,1,0,1,0"))
      (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0,1,0,1,0,1,0"))
      (rule "mul_literals" (formula "30") (term "0,1,1,0,0,1,0,1,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0,1,0,1,0,1,0"))
      (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0,1,0,1,0,1,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0,1,0,0"))
      (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0,1,0,0"))
      (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0,1,0,0"))
      (rule "mul_literals" (formula "30") (term "0,1,1,0,0,1,0,0"))
      (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0,1,0,0"))
      (rule "elementOfUnionEQ" (formula "30") (term "0,0,0,0") (ifseqformula "7"))
      (builtin "One Step Simplification" (formula "30"))
      (rule "elementOfUnionEQ" (formula "30") (term "0,0,0") (ifseqformula "7"))
      (builtin "One Step Simplification" (formula "30"))
      (rule "nnf_imp2or" (formula "30") (term "0,0,0"))
      (rule "nnf_imp2or" (formula "30") (term "0,1,0"))
      (rule "nnf_notAnd" (formula "30") (term "0,0,0,0"))
      (rule "inEqSimp_notGeq" (formula "30") (term "0,0,0,0,0"))
      (rule "mul_literals" (formula "30") (term "1,0,0,0,0,0,0,0"))
      (rule "add_zero_right" (formula "30") (term "0,0,0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0,0,0"))
      (rule "mul_literals" (formula "30") (term "1,0,0,0,0,0"))
      (rule "inEqSimp_notLeq" (formula "30") (term "1,0,0,0,0"))
      (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0,0,0"))
      (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0,0,0"))
      (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0,0,0"))
      (rule "add_literals" (formula "30") (term "0,0,0,1,0,0,0,0"))
      (rule "add_zero_left" (formula "30") (term "0,0,1,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1,0,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0,0,0"))
      (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0,0,0"))
      (rule "nnf_notAnd" (formula "30") (term "0,0,1,0"))
      (rule "inEqSimp_notLeq" (formula "30") (term "1,0,0,1,0"))
      (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0,1,0"))
      (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0,1,0"))
      (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0,1,0"))
      (rule "add_literals" (formula "30") (term "0,0,0,1,0,0,1,0"))
      (rule "add_zero_left" (formula "30") (term "0,0,1,0,0,1,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1,0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0,1,0"))
      (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0,1,0"))
      (rule "inEqSimp_notGeq" (formula "30") (term "0,0,0,1,0"))
      (rule "times_zero_1" (formula "30") (term "1,0,0,0,0,0,1,0"))
      (rule "add_zero_right" (formula "30") (term "0,0,0,0,0,1,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0,1,0"))
      (rule "mul_literals" (formula "30") (term "1,0,0,0,1,0"))
      (rule "nnf_imp2or" (formula "30") (term "0,1,0,1,0,1,0"))
      (rule "nnf_imp2or" (formula "30") (term "1,0,1,0,1,0,1,0"))
      (rule "nnf_notAnd" (formula "30") (term "0,0,1,0,1,0,1,0"))
      (rule "inEqSimp_notGeq" (formula "30") (term "0,0,0,1,0,1,0,1,0"))
      (rule "times_zero_1" (formula "30") (term "1,0,0,0,0,0,1,0,1,0,1,0"))
      (rule "add_zero_right" (formula "30") (term "0,0,0,0,0,1,0,1,0,1,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0,1,0,1,0,1,0"))
      (rule "mul_literals" (formula "30") (term "1,0,0,0,1,0,1,0,1,0"))
      (rule "inEqSimp_notLeq" (formula "30") (term "1,0,0,1,0,1,0,1,0"))
      (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0,1,0,1,0,1,0"))
      (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0,1,0,1,0,1,0"))
      (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0,1,0,1,0,1,0"))
      (rule "add_literals" (formula "30") (term "0,0,0,1,0,0,1,0,1,0,1,0"))
      (rule "add_zero_left" (formula "30") (term "0,0,1,0,0,1,0,1,0,1,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1,0,0,1,0,1,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0,1,0,1,0,1,0"))
      (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0,1,0,1,0,1,0"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "14") (term "1") (ifseqformula "1"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "13") (term "1") (ifseqformula "1"))
      (rule "cut_direct" (formula "30") (term "0,0"))
      (branch "CUT: anonOut_current = null TRUE"
         (builtin "One Step Simplification" (formula "31"))
         (rule "true_left" (formula "31"))
         (rule "ifthenelse_split" (formula "24") (term "0"))
         (branch " ¬(IntNode)self.nodeseq[-1 + self.size] = null ∧ ¬ (IntNode)self.nodeseq[-1 + self.size].<created> = TRUE TRUE"
            (rule "andLeft" (formula "24"))
            (rule "notLeft" (formula "24"))
            (rule "notLeft" (formula "24"))
            (rule "applyEqReverse" (formula "25") (term "0,0") (ifseqformula "24"))
            (rule "hideAuxiliaryEq" (formula "24"))
            (rule "ifthenelse_split" (formula "14") (term "0"))
            (branch "self.size = 0 TRUE"
               (rule "eqSymm" (formula "15"))
               (rule "replace_known_left" (formula "17") (term "0,0") (ifseqformula "14"))
               (builtin "One Step Simplification" (formula "17"))
               (rule "eqSymm" (formula "17"))
               (rule "replace_known_left" (formula "13") (term "0") (ifseqformula "15"))
               (builtin "One Step Simplification" (formula "13"))
               (rule "true_left" (formula "13"))
               (rule "replace_known_left" (formula "15") (term "0") (ifseqformula "16"))
               (builtin "One Step Simplification" (formula "15"))
               (rule "true_left" (formula "15"))
               (rule "applyEq" (formula "32") (term "1,1,1,0,0,1,1,0,0,1,1,0,1,0") (ifseqformula "13"))
               (rule "add_zero_right" (formula "32") (term "1,1,0,0,1,1,0,0,1,1,0,1,0"))
               (rule "applyEq" (formula "22") (term "1,1,1,0,0,1,1,0,0,0,0,0") (ifseqformula "13"))
               (rule "add_zero_right" (formula "22") (term "1,1,0,0,1,1,0,0,0,0,0"))
               (rule "applyEq" (formula "30") (term "1,1,0") (ifseqformula "13"))
               (rule "add_zero_right" (formula "30") (term "1,0"))
               (rule "applyEq" (formula "26") (term "1,1,0,0") (ifseqformula "13"))
               (rule "applyEq" (formula "6") (term "1,1,0") (ifseqformula "13"))
               (rule "applyEq" (formula "7") (term "1,1,1,0,0,1,0") (ifseqformula "13"))
               (rule "add_zero_right" (formula "7") (term "1,1,0,0,1,0"))
               (rule "applyEq" (formula "8") (term "1,1,0") (ifseqformula "13"))
               (rule "applyEq" (formula "29") (term "1,1,1,0") (ifseqformula "13"))
               (rule "add_literals" (formula "29") (term "1,1,0"))
               (rule "applyEq" (formula "21") (term "1,1,0") (ifseqformula "13"))
               (rule "applyEq" (formula "32") (term "1,1,0,0,1,0") (ifseqformula "13"))
               (rule "applyEq" (formula "32") (term "1,1,1,0,0,1,0,0,0,0,1") (ifseqformula "13"))
               (rule "add_zero_right" (formula "32") (term "1,1,0,0,1,0,0,0,0,1"))
               (rule "applyEq" (formula "12") (term "1,1,1,0") (ifseqformula "13"))
               (rule "add_zero_right" (formula "12") (term "1,1,0"))
               (rule "applyEq" (formula "17") (term "0") (ifseqformula "13"))
               (rule "qeq_literals" (formula "17"))
               (rule "true_left" (formula "17"))
               (rule "applyEq" (formula "23") (term "1,1,1,0") (ifseqformula "13"))
               (rule "add_literals" (formula "23") (term "1,1,0"))
               (rule "applyEq" (formula "21") (term "1,1,0") (ifseqformula "13"))
               (rule "applyEq" (formula "31") (term "1,1,1,0,0,1,1,0,0,1,0,0,1") (ifseqformula "13"))
               (rule "add_literals" (formula "31") (term "1,1,0,0,1,1,0,0,1,0,0,1"))
               (rule "applyEq" (formula "22") (term "1,1,1,0,0") (ifseqformula "13"))
               (rule "add_zero_right" (formula "22") (term "1,1,0,0"))
               (rule "applyEq" (formula "10") (term "1,1,0,0,0,0,0") (ifseqformula "13"))
               (rule "applyEq" (formula "10") (term "1,1,0,0,0") (ifseqformula "13"))
               (rule "applyEq" (formula "31") (term "1,1,1,0,0,1,1,0,0,1,0,0,1,0,1,0") (ifseqformula "13"))
               (rule "add_zero_right" (formula "31") (term "1,1,0,0,1,1,0,0,1,0,0,1,0,1,0"))
               (rule "applyEq" (formula "31") (term "1,1,0,0,1,0,1,0,1,0") (ifseqformula "13"))
               (rule "applyEq" (formula "5") (term "1,1,0") (ifseqformula "13"))
               (rule "applyEq" (formula "19") (term "1,1,0") (ifseqformula "13"))
               (rule "applyEq" (formula "22") (term "0,1") (ifseqformula "13"))
               (rule "leq_literals" (formula "22") (term "1"))
               (builtin "One Step Simplification" (formula "22"))
               (rule "true_left" (formula "22"))
               (rule "applyEq" (formula "9") (term "1,1,0") (ifseqformula "13"))
               (rule "applyEq" (formula "11") (term "0,1") (ifseqformula "13"))
               (rule "leq_literals" (formula "11") (term "1"))
               (builtin "One Step Simplification" (formula "11"))
               (rule "true_left" (formula "11"))
               (rule "applyEq" (formula "21") (term "1,1,1,0,0,1,1,0,0,0,0,0") (ifseqformula "12"))
               (rule "add_zero_right" (formula "21") (term "1,1,0,0,1,1,0,0,0,0,0"))
               (rule "applyEq" (formula "29") (term "1,1,0,0,0,0") (ifseqformula "12"))
               (rule "applyEq" (formula "15") (term "1") (ifseqformula "12"))
               (rule "applyEq" (formula "16") (term "1") (ifseqformula "12"))
               (rule "applyEq" (formula "22") (term "1") (ifseqformula "12"))
               (rule "applyEq" (formula "29") (term "1,1,0,1,1,1,0,1,0") (ifseqformula "12"))
               (rule "add_zero_right" (formula "29") (term "1,0,1,1,1,0,1,0"))
               (rule "inEqSimp_or_tautInEq0" (formula "23") (term "0,0"))
               (rule "add_zero_right" (formula "23") (term "1,1,0,0"))
               (rule "qeq_literals" (formula "23") (term "1,0,0"))
               (builtin "One Step Simplification" (formula "23"))
               (rule "true_left" (formula "23"))
               (rule "inEqSimp_or_tautInEq1" (formula "6") (term "0"))
               (rule "add_zero_right" (formula "6") (term "1,1,0"))
               (rule "qeq_literals" (formula "6") (term "1,0"))
               (builtin "One Step Simplification" (formula "6"))
               (rule "true_left" (formula "6"))
               (rule "inEqSimp_or_tautInEq1" (formula "7") (term "0"))
               (rule "add_zero_right" (formula "7") (term "1,1,0"))
               (rule "qeq_literals" (formula "7") (term "1,0"))
               (builtin "One Step Simplification" (formula "7"))
               (rule "true_left" (formula "7"))
               (rule "inEqSimp_or_tautInEq1" (formula "17") (term "0"))
               (rule "add_zero_right" (formula "17") (term "1,1,0"))
               (rule "qeq_literals" (formula "17") (term "1,0"))
               (builtin "One Step Simplification" (formula "17"))
               (rule "true_left" (formula "17"))
               (rule "inEqSimp_or_tautInEq0" (formula "25") (term "0,0,1,0"))
               (rule "add_zero_right" (formula "25") (term "1,1,0,0,1,0"))
               (rule "qeq_literals" (formula "25") (term "1,0,0,1,0"))
               (builtin "One Step Simplification" (formula "25"))
               (rule "inEqSimp_or_tautInEq1" (formula "9") (term "0"))
               (rule "add_literals" (formula "9") (term "1,1,0"))
               (rule "qeq_literals" (formula "9") (term "1,0"))
               (builtin "One Step Simplification" (formula "9"))
               (rule "true_left" (formula "9"))
               (rule "inEqSimp_or_tautInEq1" (formula "16") (term "0"))
               (rule "add_zero_right" (formula "16") (term "1,1,0"))
               (rule "qeq_literals" (formula "16") (term "1,0"))
               (builtin "One Step Simplification" (formula "16"))
               (rule "true_left" (formula "16"))
               (rule "inEqSimp_or_tautInEq1" (formula "8") (term "0,0,0,0,0"))
               (rule "add_zero_right" (formula "8") (term "1,1,0,0,0,0,0"))
               (rule "qeq_literals" (formula "8") (term "1,0,0,0,0,0"))
               (builtin "One Step Simplification" (formula "8"))
               (rule "true_left" (formula "8"))
               (rule "inEqSimp_or_tautInEq1" (formula "5") (term "0"))
               (rule "add_zero_right" (formula "5") (term "1,1,0"))
               (rule "qeq_literals" (formula "5") (term "1,0"))
               (builtin "One Step Simplification" (formula "5"))
               (rule "true_left" (formula "5"))
               (rule "inEqSimp_or_tautInEq1" (formula "13") (term "0"))
               (rule "add_zero_right" (formula "13") (term "1,1,0"))
               (rule "qeq_literals" (formula "13") (term "1,0"))
               (builtin "One Step Simplification" (formula "13"))
               (rule "true_left" (formula "13"))
               (rule "inEqSimp_or_tautInEq1" (formula "6") (term "0"))
               (rule "add_zero_right" (formula "6") (term "1,1,0"))
               (rule "qeq_literals" (formula "6") (term "1,0"))
               (builtin "One Step Simplification" (formula "6"))
               (rule "true_left" (formula "6"))
               (rule "inEqSimp_or_tautInEq1" (formula "12") (term "0"))
               (rule "add_literals" (formula "12") (term "1,1,0"))
               (rule "qeq_literals" (formula "12") (term "1,0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "true_left" (formula "12"))
               (rule "inEqSimp_or_tautInEq0" (formula "18") (term "0,0,0"))
               (rule "add_zero_right" (formula "18") (term "1,1,0,0,0"))
               (rule "qeq_literals" (formula "18") (term "1,0,0,0"))
               (builtin "One Step Simplification" (formula "18"))
               (rule "allRight" (formula "18") (inst "sk=f_0"))
               (rule "allRight" (formula "18") (inst "sk=o_0"))
               (rule "orRight" (formula "18"))
               (rule "orRight" (formula "18"))
               (rule "orRight" (formula "18"))
               (rule "eqSymm" (formula "19") (term "0,1,0"))
               (rule "pullOutSelect" (formula "21") (term "0") (inst "selectSK=f_0_0"))
               (rule "simplifySelectOfAnon" (formula "1"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "21")))
               (rule "eqSymm" (formula "22"))
               (rule "elementOfUnion" (formula "1") (term "0,0,0"))
               (rule "elementOfInfiniteUnion" (formula "1") (term "1,0,0,0"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "elementOfSingleton" (formula "1") (term "1,0,1,0,0,0"))
               (rule "eqSymm" (formula "1") (term "0,1,0,1,0,0,0"))
               (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "20"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
               (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "19"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "22")))
               (rule "closeFalse" (formula "1"))
            )
            (branch "self.size = 0 FALSE"
               (rule "replace_known_right" (formula "16") (term "0,0") (ifseqformula "30"))
               (builtin "One Step Simplification" (formula "16"))
               (rule "applyEq" (formula "24") (term "1,0,0") (ifseqformula "16"))
               (rule "applyEq" (formula "31") (term "1,0") (ifseqformula "16"))
               (rule "replace_known_right" (formula "15") (term "1") (ifseqformula "31"))
               (builtin "One Step Simplification" (formula "15"))
               (rule "applyEq" (formula "11") (term "1,0,0") (ifseqformula "16"))
               (rule "applyEq" (formula "32") (term "0") (ifseqformula "16"))
               (rule "close" (formula "32") (ifseqformula "15"))
            )
         )
         (branch " ¬(IntNode)self.nodeseq[-1 + self.size] = null ∧ ¬ (IntNode)self.nodeseq[-1 + self.size].<created> = TRUE FALSE"
            (rule "applyEqReverse" (formula "25") (term "0,0") (ifseqformula "24"))
            (rule "hideAuxiliaryEq" (formula "24"))
            (rule "ifthenelse_split" (formula "14") (term "0"))
            (branch "self.size = 0 TRUE"
               (rule "eqSymm" (formula "15"))
               (rule "replace_known_left" (formula "17") (term "0,0") (ifseqformula "14"))
               (builtin "One Step Simplification" (formula "17"))
               (rule "eqSymm" (formula "17"))
               (rule "replace_known_left" (formula "16") (term "0") (ifseqformula "17"))
               (builtin "One Step Simplification" (formula "16"))
               (rule "true_left" (formula "16"))
               (rule "replace_known_left" (formula "13") (term "0") (ifseqformula "15"))
               (builtin "One Step Simplification" (formula "13"))
               (rule "true_left" (formula "13"))
               (rule "applyEq" (formula "8") (term "1,1,0") (ifseqformula "13"))
               (rule "applyEq" (formula "6") (term "1,1,0") (ifseqformula "13"))
               (rule "applyEq" (formula "5") (term "1,1,0") (ifseqformula "13"))
               (rule "applyEq" (formula "28") (term "1,1,1,0,0,1") (ifseqformula "13"))
               (rule "add_zero_right" (formula "28") (term "1,1,0,0,1"))
               (rule "applyEq" (formula "30") (term "1,1,0,0,1,0,1,0,1,0") (ifseqformula "13"))
               (rule "applyEq" (formula "28") (term "1,1,0,0,0") (ifseqformula "13"))
               (rule "add_zero_right" (formula "28") (term "1,0,0,0"))
               (rule "applyEq" (formula "17") (term "0") (ifseqformula "13"))
               (rule "qeq_literals" (formula "17"))
               (rule "true_left" (formula "17"))
               (rule "applyEq" (formula "29") (term "1,1,1,0,0,1,1,0,0,1,0,0,1,0,1,0") (ifseqformula "13"))
               (rule "add_zero_right" (formula "29") (term "1,1,0,0,1,1,0,0,1,0,0,1,0,1,0"))
               (rule "applyEq" (formula "29") (term "1,1,1,0,0,1,0,0,0,0,1") (ifseqformula "13"))
               (rule "add_literals" (formula "29") (term "1,1,0,0,1,0,0,0,0,1"))
               (rule "applyEq" (formula "29") (term "1,1,1,0,0,1,1,0,0,1,0,0,1") (ifseqformula "13"))
               (rule "add_literals" (formula "29") (term "1,1,0,0,1,1,0,0,1,0,0,1"))
               (rule "applyEq" (formula "22") (term "1,1,1,0,0,1,1,0,0,0,0,0") (ifseqformula "13"))
               (rule "add_zero_right" (formula "22") (term "1,1,0,0,1,1,0,0,0,0,0"))
               (rule "applyEq" (formula "21") (term "1,1,0") (ifseqformula "13"))
               (rule "applyEq" (formula "20") (term "1,1,0") (ifseqformula "13"))
               (rule "applyEq" (formula "29") (term "1,1,0,0,1,0") (ifseqformula "13"))
               (rule "applyEq" (formula "21") (term "1,1,1,0,0,1,1,0,0,0,0,0") (ifseqformula "13"))
               (rule "add_literals" (formula "21") (term "1,1,0,0,1,1,0,0,0,0,0"))
               (rule "applyEq" (formula "22") (term "1,1,1,0") (ifseqformula "13"))
               (rule "add_zero_right" (formula "22") (term "1,1,0"))
               (rule "applyEq" (formula "11") (term "1,1,1,0,0") (ifseqformula "13"))
               (rule "add_zero_right" (formula "11") (term "1,1,0,0"))
               (rule "applyEq" (formula "7") (term "1,1,1,0,0,1,0") (ifseqformula "13"))
               (rule "add_zero_right" (formula "7") (term "1,1,0,0,1,0"))
               (rule "applyEq" (formula "19") (term "1,1,0") (ifseqformula "13"))
               (rule "applyEq" (formula "9") (term "1,1,0") (ifseqformula "13"))
               (rule "applyEq" (formula "10") (term "1,1,0,0,0,0,0") (ifseqformula "13"))
               (rule "applyEq" (formula "24") (term "1,1,0,0") (ifseqformula "13"))
               (rule "applyEq" (formula "12") (term "1,1,1,0") (ifseqformula "13"))
               (rule "add_literals" (formula "12") (term "1,1,0"))
               (rule "applyEq" (formula "10") (term "1,1,0,0,0") (ifseqformula "13"))
               (rule "applyEq" (formula "29") (term "1,1,1,0,0,1,1,0,0,1,1,0,1,0") (ifseqformula "13"))
               (rule "add_zero_right" (formula "29") (term "1,1,0,0,1,1,0,0,1,1,0,1,0"))
               (rule "applyEq" (formula "29") (term "1,1,0,0,0,0") (ifseqformula "13"))
               (rule "applyEq" (formula "11") (term "0,1") (ifseqformula "13"))
               (rule "leq_literals" (formula "11") (term "1"))
               (builtin "One Step Simplification" (formula "11"))
               (rule "true_left" (formula "11"))
               (rule "applyEq" (formula "15") (term "1") (ifseqformula "12"))
               (rule "applyEq" (formula "22") (term "1") (ifseqformula "12"))
               (rule "applyEq" (formula "16") (term "1") (ifseqformula "12"))
               (rule "applyEq" (formula "28") (term "1,1,0,1,1,1,0,1,0") (ifseqformula "12"))
               (rule "add_literals" (formula "28") (term "1,0,1,1,1,0,1,0"))
               (rule "inEqSimp_or_tautInEq1" (formula "8") (term "0"))
               (rule "add_zero_right" (formula "8") (term "1,1,0"))
               (rule "qeq_literals" (formula "8") (term "1,0"))
               (builtin "One Step Simplification" (formula "8"))
               (rule "true_left" (formula "8"))
               (rule "inEqSimp_or_tautInEq1" (formula "6") (term "0"))
               (rule "add_zero_right" (formula "6") (term "1,1,0"))
               (rule "qeq_literals" (formula "6") (term "1,0"))
               (builtin "One Step Simplification" (formula "6"))
               (rule "true_left" (formula "6"))
               (rule "inEqSimp_or_tautInEq1" (formula "5") (term "0"))
               (rule "add_zero_right" (formula "5") (term "1,1,0"))
               (rule "qeq_literals" (formula "5") (term "1,0"))
               (builtin "One Step Simplification" (formula "5"))
               (rule "true_left" (formula "5"))
               (rule "inEqSimp_or_tautInEq0" (formula "25") (term "0,0,1,0,1,0,1,0"))
               (rule "add_zero_right" (formula "25") (term "1,1,0,0,1,0,1,0,1,0"))
               (rule "qeq_literals" (formula "25") (term "1,0,0,1,0,1,0,1,0"))
               (builtin "One Step Simplification" (formula "25"))
               (rule "inEqSimp_or_tautInEq1" (formula "16") (term "0"))
               (rule "add_zero_right" (formula "16") (term "1,1,0"))
               (rule "qeq_literals" (formula "16") (term "1,0"))
               (builtin "One Step Simplification" (formula "16"))
               (rule "true_left" (formula "16"))
               (rule "inEqSimp_or_tautInEq1" (formula "16") (term "0"))
               (rule "add_zero_right" (formula "16") (term "1,1,0"))
               (rule "qeq_literals" (formula "16") (term "1,0"))
               (builtin "One Step Simplification" (formula "16"))
               (rule "true_left" (formula "16"))
               (rule "inEqSimp_or_tautInEq1" (formula "16") (term "0"))
               (rule "add_literals" (formula "16") (term "1,1,0"))
               (rule "qeq_literals" (formula "16") (term "1,0"))
               (builtin "One Step Simplification" (formula "16"))
               (rule "true_left" (formula "16"))
               (rule "inEqSimp_or_tautInEq1" (formula "15") (term "0"))
               (rule "add_zero_right" (formula "15") (term "1,1,0"))
               (rule "qeq_literals" (formula "15") (term "1,0"))
               (builtin "One Step Simplification" (formula "15"))
               (rule "true_left" (formula "15"))
               (rule "inEqSimp_or_tautInEq1" (formula "6") (term "0"))
               (rule "add_zero_right" (formula "6") (term "1,1,0"))
               (rule "qeq_literals" (formula "6") (term "1,0"))
               (builtin "One Step Simplification" (formula "6"))
               (rule "true_left" (formula "6"))
               (rule "inEqSimp_or_tautInEq1" (formula "6") (term "0,0,0,0,0"))
               (rule "add_zero_right" (formula "6") (term "1,1,0,0,0,0,0"))
               (rule "qeq_literals" (formula "6") (term "1,0,0,0,0,0"))
               (builtin "One Step Simplification" (formula "6"))
               (rule "true_left" (formula "6"))
               (rule "inEqSimp_or_tautInEq0" (formula "14") (term "0,0"))
               (rule "add_zero_right" (formula "14") (term "1,1,0,0"))
               (rule "qeq_literals" (formula "14") (term "1,0,0"))
               (builtin "One Step Simplification" (formula "14"))
               (rule "true_left" (formula "14"))
               (rule "inEqSimp_or_tautInEq1" (formula "6") (term "0"))
               (rule "add_literals" (formula "6") (term "1,1,0"))
               (rule "qeq_literals" (formula "6") (term "1,0"))
               (builtin "One Step Simplification" (formula "6"))
               (rule "true_left" (formula "6"))
               (rule "inEqSimp_or_tautInEq0" (formula "17") (term "0,0,1,0"))
               (rule "add_zero_right" (formula "17") (term "1,1,0,0,1,0"))
               (rule "qeq_literals" (formula "17") (term "1,0,0,1,0"))
               (builtin "One Step Simplification" (formula "17"))
               (rule "inEqSimp_or_tautInEq0" (formula "17") (term "0,0,0"))
               (rule "add_zero_right" (formula "17") (term "1,1,0,0,0"))
               (rule "qeq_literals" (formula "17") (term "1,0,0,0"))
               (builtin "One Step Simplification" (formula "17"))
               (rule "allRight" (formula "17") (inst "sk=f_0"))
               (rule "allRight" (formula "17") (inst "sk=o_0"))
               (rule "orRight" (formula "17"))
               (rule "orRight" (formula "17"))
               (rule "orRight" (formula "17"))
               (rule "eqSymm" (formula "18") (term "0,1,0"))
               (rule "pullOutSelect" (formula "20") (term "0") (inst "selectSK=f_0_0"))
               (rule "simplifySelectOfAnon" (formula "1"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
               (rule "eqSymm" (formula "21"))
               (rule "elementOfUnion" (formula "1") (term "0,0,0"))
               (rule "elementOfInfiniteUnion" (formula "1") (term "1,0,0,0"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "elementOfSingleton" (formula "1") (term "1,0,1,0,0,0"))
               (rule "eqSymm" (formula "1") (term "0,1,0,1,0,0,0"))
               (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "19"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
               (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "18"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "21")))
               (rule "closeFalse" (formula "1"))
            )
            (branch "self.size = 0 FALSE"
               (rule "replace_known_right" (formula "16") (term "0,0") (ifseqformula "29"))
               (builtin "One Step Simplification" (formula "16"))
               (rule "applyEq" (formula "30") (term "1,0,0,1") (ifseqformula "16"))
               (rule "applyEq" (formula "11") (term "1,0,0") (ifseqformula "16"))
               (rule "applyEq" (formula "30") (term "0,0,0") (ifseqformula "16"))
               (rule "inEqSimp_strengthen1" (formula "18") (ifseqformula "29"))
               (rule "add_zero_right" (formula "18") (term "1"))
               (rule "inEqSimp_contradEq7" (formula "29") (ifseqformula "18"))
               (rule "times_zero_1" (formula "29") (term "1,0,0"))
               (rule "add_zero_right" (formula "29") (term "0,0"))
               (rule "leq_literals" (formula "29") (term "0"))
               (builtin "One Step Simplification" (formula "29"))
               (rule "false_right" (formula "29"))
               (rule "inEqSimp_contradInEq1" (formula "11") (term "1") (ifseqformula "18"))
               (rule "qeq_literals" (formula "11") (term "0,1"))
               (builtin "One Step Simplification" (formula "11"))
               (rule "andRight" (formula "31"))
               (branch
                  (rule "andRight" (formula "31"))
                  (branch
                     (rule "allRight" (formula "31") (inst "sk=i_1_0"))
                     (rule "orRight" (formula "31"))
                     (rule "orRight" (formula "31"))
                     (rule "inEqSimp_geqRight" (formula "32"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0"))
                     (rule "inEqSimp_leqRight" (formula "32"))
                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0"))
                     (rule "add_zero_left" (formula "1") (term "0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                     (rule "polySimp_elimOne" (formula "2") (term "0"))
                     (rule "allLeft" (formula "25") (inst "t=add(Z(neglit(1(#))),
    int::select(heap, self, IntLinkedList::$size))"))
                     (rule "inEqSimp_homoInEq1" (formula "25") (term "1"))
                     (rule "polySimp_mulComm0" (formula "25") (term "1,0,1"))
                     (rule "polySimp_rightDist" (formula "25") (term "1,0,1"))
                     (rule "mul_literals" (formula "25") (term "0,1,0,1"))
                     (rule "polySimp_addAssoc" (formula "25") (term "0,1"))
                     (rule "polySimp_addComm0" (formula "25") (term "0,0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,1"))
                     (rule "add_literals" (formula "25") (term "1,1,0,1"))
                     (rule "times_zero_1" (formula "25") (term "1,0,1"))
                     (rule "add_zero_right" (formula "25") (term "0,1"))
                     (rule "leq_literals" (formula "25") (term "1"))
                     (builtin "One Step Simplification" (formula "25"))
                     (rule "inEqSimp_homoInEq0" (formula "25") (term "1"))
                     (rule "polySimp_mulComm0" (formula "25") (term "1,0,1"))
                     (rule "polySimp_rightDist" (formula "25") (term "1,0,1"))
                     (rule "mul_literals" (formula "25") (term "0,1,0,1"))
                     (rule "polySimp_addAssoc" (formula "25") (term "0,1"))
                     (rule "add_literals" (formula "25") (term "0,0,1"))
                     (rule "add_zero_left" (formula "25") (term "0,1"))
                     (rule "applyEq" (formula "25") (term "1,0,0") (ifseqformula "18"))
                     (rule "inEqSimp_invertInEq1" (formula "25") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "25") (term "0,1"))
                     (rule "times_zero_2" (formula "25") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "25") (term "0,1"))
                     (rule "inEqSimp_contradInEq1" (formula "25") (term "1") (ifseqformula "20"))
                     (rule "qeq_literals" (formula "25") (term "0,1"))
                     (builtin "One Step Simplification" (formula "25"))
                     (rule "pullOutSelect" (formula "25") (term "0") (inst "selectSK=IntNode_data_0"))
                     (rule "simplifySelectOfAnon" (formula "25"))
                     (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "33")))
                     (rule "eqSymm" (formula "26"))
                     (rule "applyEqReverse" (formula "25") (term "1") (ifseqformula "26"))
                     (rule "hideAuxiliaryEq" (formula "26"))
                     (rule "elementOfUnion" (formula "25") (term "0,0"))
                     (rule "elementOfInfiniteUnion" (formula "25") (term "1,0,0"))
                     (builtin "One Step Simplification" (formula "25"))
                     (rule "elementOfSingleton" (formula "25") (term "0,0,0"))
                     (builtin "One Step Simplification" (formula "25"))
                     (rule "elementOfSingleton" (formula "25") (term "1,0,0,0"))
                     (builtin "One Step Simplification" (formula "25"))
                     (rule "eqSymm" (formula "25") (term "1,0,0,0"))
                     (rule "commute_and_2" (formula "25") (term "0,0,0"))
                     (rule "commute_and" (formula "25") (term "0,0,0,0"))
                     (rule "allLeft" (formula "26") (inst "t=Z(0(#))"))
                     (rule "leq_literals" (formula "26") (term "1,0"))
                     (builtin "One Step Simplification" (formula "26"))
                     (rule "inEqSimp_commuteGeq" (formula "26") (term "1"))
                     (rule "applyEq" (formula "26") (term "1,0,0") (ifseqformula "16"))
                     (rule "inEqSimp_contradInEq1" (formula "26") (term "1") (ifseqformula "20"))
                     (rule "qeq_literals" (formula "26") (term "0,1"))
                     (builtin "One Step Simplification" (formula "26"))
                     (rule "pullOutSelect" (formula "26") (term "0") (inst "selectSK=IntNode_data_1"))
                     (rule "simplifySelectOfAnon" (formula "26"))
                     (builtin "One Step Simplification" (formula "26"))
                     (rule "eqSymm" (formula "27"))
                     (rule "applyEqReverse" (formula "26") (term "1") (ifseqformula "27"))
                     (rule "hideAuxiliaryEq" (formula "27"))
                     (rule "elementOfUnion" (formula "26") (term "0,0,0"))
                     (rule "elementOfInfiniteUnion" (formula "26") (term "1,0,0,0"))
                     (builtin "One Step Simplification" (formula "26"))
                     (rule "elementOfSingleton" (formula "26") (term "1,0,1,0,0,0"))
                     (builtin "One Step Simplification" (formula "26"))
                     (rule "eqSymm" (formula "26") (term "1,0,1,0,0,0"))
                     (rule "elementOfSingleton" (formula "26") (term "0,0,0,0"))
                     (builtin "One Step Simplification" (formula "26"))
                     (rule "commute_and_2" (formula "26") (term "0,0,0,0"))
                     (rule "commute_and" (formula "26") (term "0,0,0,0,0"))
                     (rule "allLeft" (formula "27") (inst "t=i_1_0"))
                     (rule "inEqSimp_commuteGeq" (formula "27") (term "1"))
                     (rule "inEqSimp_contradInEq1" (formula "27") (term "1,0") (ifseqformula "1"))
                     (rule "qeq_literals" (formula "27") (term "0,1,0"))
                     (builtin "One Step Simplification" (formula "27"))
                     (rule "inEqSimp_contradInEq1" (formula "27") (term "1") (ifseqformula "2"))
                     (rule "inEqSimp_homoInEq1" (formula "27") (term "0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,1"))
                     (rule "add_literals" (formula "27") (term "1,1,0,0,1"))
                     (rule "times_zero_1" (formula "27") (term "1,0,0,1"))
                     (rule "add_zero_right" (formula "27") (term "0,0,1"))
                     (rule "leq_literals" (formula "27") (term "0,1"))
                     (builtin "One Step Simplification" (formula "27"))
                     (rule "typeEqDerived2" (formula "36") (term "0,1") (ifseqformula "27"))
                     (builtin "One Step Simplification" (formula "36"))
                     (rule "notRight" (formula "36"))
                     (rule "applyEq" (formula "28") (term "1") (ifseqformula "1"))
                     (builtin "One Step Simplification" (formula "28"))
                     (rule "closeFalse" (formula "28"))
                  )
                  (branch
                     (rule "allRight" (formula "31") (inst "sk=i_2_0"))
                     (rule "orRight" (formula "31"))
                     (rule "orRight" (formula "31"))
                     (rule "polySimp_homoEq" (formula "33") (term "0,1,1"))
                     (rule "polySimp_addComm1" (formula "33") (term "0,0,1,1"))
                     (rule "inEqSimp_leqRight" (formula "31"))
                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0"))
                     (rule "add_zero_left" (formula "1") (term "0"))
                     (rule "inEqSimp_geqRight" (formula "32"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0"))
                     (rule "polySimp_sepPosMonomial" (formula "33") (term "0,1,1"))
                     (rule "polySimp_mulComm0" (formula "33") (term "1,0,1,1"))
                     (rule "polySimp_rightDist" (formula "33") (term "1,0,1,1"))
                     (rule "mul_literals" (formula "33") (term "0,1,0,1,1"))
                     (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,1,1"))
                     (rule "polySimp_elimOne" (formula "33") (term "1,1,0,1,1"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                     (rule "polySimp_elimOne" (formula "1") (term "0"))
                     (rule "pullOutSelect" (formula "33") (term "0,1,0,0") (inst "selectSK=IntNode_data_0"))
                     (rule "simplifySelectOfAnon" (formula "1"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "eqSymm" (formula "34") (term "1,0,0"))
                     (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                     (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "elementOfInfiniteUnion" (formula "1") (term "0,0,0"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "elementOfSingleton" (formula "1") (term "1,0,0,0,0"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "eqSymm" (formula "1") (term "1,0,0,0,0"))
                     (rule "pullOutSelect" (formula "34") (term "0,1") (inst "selectSK=IntNode_next_1"))
                     (rule "simplifySelectOfAnon" (formula "1"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "eqSymm" (formula "35") (term "1"))
                     (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                     (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "elementOfInfiniteUnion" (formula "1") (term "0,0,0"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "elementOfSingleton" (formula "1") (term "1,0,0,0,0"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "commute_and_2" (formula "2") (term "0,0,0,0"))
                     (rule "commute_and" (formula "2") (term "0,0,0,0,0"))
                     (rule "allLeft" (formula "27") (inst "t=add(Z(neglit(1(#))),
    int::select(heap, self, IntLinkedList::$size))"))
                     (rule "inEqSimp_homoInEq0" (formula "27") (term "1,0"))
                     (rule "polySimp_mulComm0" (formula "27") (term "1,0,1,0"))
                     (rule "polySimp_rightDist" (formula "27") (term "1,0,1,0"))
                     (rule "mul_literals" (formula "27") (term "0,1,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "27") (term "0,1,0"))
                     (rule "add_literals" (formula "27") (term "0,0,1,0"))
                     (rule "add_zero_left" (formula "27") (term "0,1,0"))
                     (rule "inEqSimp_homoInEq1" (formula "27") (term "1"))
                     (rule "polySimp_mulComm0" (formula "27") (term "1,0,1"))
                     (rule "polySimp_rightDist" (formula "27") (term "1,0,1"))
                     (rule "mul_literals" (formula "27") (term "0,1,0,1"))
                     (rule "polySimp_addAssoc" (formula "27") (term "0,1"))
                     (rule "polySimp_addComm0" (formula "27") (term "0,0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,1"))
                     (rule "add_literals" (formula "27") (term "1,1,0,1"))
                     (rule "times_zero_1" (formula "27") (term "1,0,1"))
                     (rule "add_literals" (formula "27") (term "0,1"))
                     (rule "leq_literals" (formula "27") (term "1"))
                     (builtin "One Step Simplification" (formula "27"))
                     (rule "applyEq" (formula "27") (term "1,0,0") (ifseqformula "20"))
                     (rule "inEqSimp_invertInEq1" (formula "27") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "27") (term "0,1"))
                     (rule "times_zero_2" (formula "27") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "27") (term "0,1"))
                     (rule "inEqSimp_contradInEq1" (formula "27") (term "1") (ifseqformula "22"))
                     (rule "qeq_literals" (formula "27") (term "0,1"))
                     (builtin "One Step Simplification" (formula "27"))
                     (rule "pullOutSelect" (formula "27") (term "0") (inst "selectSK=IntNode_data_1"))
                     (rule "simplifySelectOfAnon" (formula "27"))
                     (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "35")))
                     (rule "eqSymm" (formula "28"))
                     (rule "applyEqReverse" (formula "27") (term "1") (ifseqformula "28"))
                     (rule "hideAuxiliaryEq" (formula "28"))
                     (rule "elementOfUnion" (formula "27") (term "0,0"))
                     (rule "elementOfInfiniteUnion" (formula "27") (term "1,0,0"))
                     (builtin "One Step Simplification" (formula "27"))
                     (rule "elementOfSingleton" (formula "27") (term "0,0,0"))
                     (builtin "One Step Simplification" (formula "27"))
                     (rule "elementOfSingleton" (formula "27") (term "1,0,0,0"))
                     (builtin "One Step Simplification" (formula "27"))
                     (rule "eqSymm" (formula "27") (term "1,0,0,0"))
                     (rule "commute_and_2" (formula "27") (term "0,0,0"))
                     (rule "commute_and" (formula "27") (term "0,0,0,0"))
                     (rule "allLeft" (formula "28") (inst "t=Z(0(#))"))
                     (rule "leq_literals" (formula "28") (term "1,0"))
                     (builtin "One Step Simplification" (formula "28"))
                     (rule "inEqSimp_commuteGeq" (formula "28") (term "1"))
                     (rule "applyEq" (formula "28") (term "1,0,0") (ifseqformula "18"))
                     (rule "inEqSimp_contradInEq1" (formula "28") (term "1") (ifseqformula "22"))
                     (rule "qeq_literals" (formula "28") (term "0,1"))
                     (builtin "One Step Simplification" (formula "28"))
                     (rule "pullOutSelect" (formula "28") (term "0") (inst "selectSK=IntNode_data_2"))
                     (rule "simplifySelectOfAnon" (formula "28"))
                     (builtin "One Step Simplification" (formula "28"))
                     (rule "eqSymm" (formula "29"))
                     (rule "applyEqReverse" (formula "28") (term "1") (ifseqformula "29"))
                     (rule "hideAuxiliaryEq" (formula "29"))
                     (rule "elementOfUnion" (formula "28") (term "0,0,0"))
                     (rule "elementOfSingleton" (formula "28") (term "0,0,0,0"))
                     (builtin "One Step Simplification" (formula "28"))
                     (rule "elementOfInfiniteUnion" (formula "28") (term "0,0,0"))
                     (builtin "One Step Simplification" (formula "28"))
                     (rule "elementOfSingleton" (formula "28") (term "1,0,0,0,0"))
                     (builtin "One Step Simplification" (formula "28"))
                     (rule "eqSymm" (formula "28") (term "1,0,0,0,0"))
                     (rule "commute_and_2" (formula "28") (term "0,0,0,0"))
                     (rule "commute_and" (formula "28") (term "0,0,0,0,0"))
                     (rule "allLeft" (formula "25") (inst "t=i_2_0"))
                     (rule "inEqSimp_commuteGeq" (formula "25") (term "1"))
                     (rule "inEqSimp_contradInEq1" (formula "25") (term "1") (ifseqformula "3"))
                     (rule "inEqSimp_homoInEq1" (formula "25") (term "0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,1"))
                     (rule "add_literals" (formula "25") (term "1,1,0,0,1"))
                     (rule "times_zero_1" (formula "25") (term "1,0,0,1"))
                     (rule "add_literals" (formula "25") (term "0,0,1"))
                     (rule "leq_literals" (formula "25") (term "0,1"))
                     (builtin "One Step Simplification" (formula "25"))
                     (rule "inEqSimp_contradInEq1" (formula "25") (term "1") (ifseqformula "4"))
                     (rule "qeq_literals" (formula "25") (term "0,1"))
                     (builtin "One Step Simplification" (formula "25"))
                     (rule "notLeft" (formula "25"))
                     (rule "allLeft" (formula "12") (inst "t=i_2_0"))
                     (rule "inEqSimp_commuteGeq" (formula "12") (term "1"))
                     (rule "inEqSimp_contradInEq1" (formula "12") (term "1,0") (ifseqformula "4"))
                     (rule "qeq_literals" (formula "12") (term "0,1,0"))
                     (builtin "One Step Simplification" (formula "12"))
                     (rule "inEqSimp_contradInEq1" (formula "12") (term "1") (ifseqformula "3"))
                     (rule "inEqSimp_homoInEq1" (formula "12") (term "0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0,1"))
                     (rule "add_literals" (formula "12") (term "1,1,0,0,1"))
                     (rule "times_zero_1" (formula "12") (term "1,0,0,1"))
                     (rule "add_zero_right" (formula "12") (term "0,0,1"))
                     (rule "leq_literals" (formula "12") (term "0,1"))
                     (builtin "One Step Simplification" (formula "12"))
                     (rule "notLeft" (formula "12"))
                     (rule "replace_known_right" (formula "2") (term "0,0,1,0,0") (ifseqformula "35"))
                     (builtin "One Step Simplification" (formula "2"))
                     (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "35"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "replace_known_right" (formula "39") (term "0,0,0,0") (ifseqformula "35"))
                     (builtin "One Step Simplification" (formula "39"))
                     (rule "ifthenelse_negated" (formula "1") (term "0"))
                     (rule "allLeft" (formula "29") (inst "t=i_2_0"))
                     (rule "replaceKnownSelect_taclet1011011_14" (formula "29") (term "0,0,0"))
                     (rule "eqSymm" (formula "29") (term "0,0"))
                     (rule "inEqSimp_commuteGeq" (formula "29") (term "1"))
                     (rule "inEqSimp_contradInEq1" (formula "29") (term "1") (ifseqformula "3"))
                     (rule "inEqSimp_homoInEq1" (formula "29") (term "0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,1"))
                     (rule "add_literals" (formula "29") (term "1,1,0,0,1"))
                     (rule "times_zero_1" (formula "29") (term "1,0,0,1"))
                     (rule "add_zero_right" (formula "29") (term "0,0,1"))
                     (rule "leq_literals" (formula "29") (term "0,1"))
                     (builtin "One Step Simplification" (formula "29"))
                     (rule "inEqSimp_contradInEq1" (formula "29") (term "1") (ifseqformula "4"))
                     (rule "qeq_literals" (formula "29") (term "0,1"))
                     (builtin "One Step Simplification" (formula "29"))
                     (rule "applyEqReverse" (formula "2") (term "1") (ifseqformula "29"))
                     (rule "applyEqReverse" (formula "40") (term "1,0,0") (ifseqformula "29"))
                     (builtin "One Step Simplification" (formula "40"))
                     (rule "hideAuxiliaryEq" (formula "29"))
                     (rule "allLeft" (formula "13") (inst "t=i_2_0"))
                     (rule "inEqSimp_commuteGeq" (formula "13") (term "1"))
                     (rule "inEqSimp_contradInEq1" (formula "13") (term "1") (ifseqformula "3"))
                     (rule "inEqSimp_homoInEq1" (formula "13") (term "0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0,1"))
                     (rule "add_literals" (formula "13") (term "1,1,0,0,1"))
                     (rule "times_zero_1" (formula "13") (term "1,0,0,1"))
                     (rule "add_zero_right" (formula "13") (term "0,0,1"))
                     (rule "leq_literals" (formula "13") (term "0,1"))
                     (builtin "One Step Simplification" (formula "13"))
                     (rule "inEqSimp_contradInEq1" (formula "13") (term "1") (ifseqformula "4"))
                     (rule "qeq_literals" (formula "13") (term "0,1"))
                     (builtin "One Step Simplification" (formula "13"))
                     (rule "allLeft" (formula "27") (inst "t=i_2_0"))
                     (rule "typeEqDerived2" (formula "27") (term "0,0,0") (ifseqformula "2"))
                     (builtin "One Step Simplification" (formula "27"))
                     (rule "true_left" (formula "27"))
                     (rule "allLeft" (formula "12") (inst "t=add(Z(neglit(1(#))),
    int::select(heap, self, IntLinkedList::$size))"))
                     (rule "inEqSimp_homoInEq0" (formula "12") (term "1,0"))
                     (rule "polySimp_mulComm0" (formula "12") (term "1,0,1,0"))
                     (rule "polySimp_rightDist" (formula "12") (term "1,0,1,0"))
                     (rule "mul_literals" (formula "12") (term "0,1,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "12") (term "0,1,0"))
                     (rule "add_literals" (formula "12") (term "0,0,1,0"))
                     (rule "add_zero_left" (formula "12") (term "0,1,0"))
                     (rule "inEqSimp_homoInEq1" (formula "12") (term "1"))
                     (rule "polySimp_mulComm0" (formula "12") (term "1,0,1"))
                     (rule "polySimp_rightDist" (formula "12") (term "1,0,1"))
                     (rule "mul_literals" (formula "12") (term "0,1,0,1"))
                     (rule "polySimp_addAssoc" (formula "12") (term "0,1"))
                     (rule "polySimp_addComm0" (formula "12") (term "0,0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,1"))
                     (rule "add_literals" (formula "12") (term "1,1,0,1"))
                     (rule "times_zero_1" (formula "12") (term "1,0,1"))
                     (rule "add_zero_right" (formula "12") (term "0,1"))
                     (rule "leq_literals" (formula "12") (term "1"))
                     (builtin "One Step Simplification" (formula "12"))
                     (rule "applyEq" (formula "12") (term "0,0,0") (ifseqformula "22"))
                     (rule "inEqSimp_invertInEq1" (formula "12") (term "1"))
                     (rule "mul_literals" (formula "12") (term "1,1"))
                     (rule "polySimp_mulLiterals" (formula "12") (term "0,1"))
                     (rule "polySimp_elimOne" (formula "12") (term "0,1"))
                     (rule "inEqSimp_contradInEq1" (formula "12") (term "1") (ifseqformula "24"))
                     (rule "qeq_literals" (formula "12") (term "0,1"))
                     (builtin "One Step Simplification" (formula "12"))
                     (rule "notLeft" (formula "12"))
                     (rule "replace_known_right" (formula "20") (term "0") (ifseqformula "36"))
                     (builtin "One Step Simplification" (formula "20"))
                     (rule "replace_known_right" (formula "39") (term "0,0") (ifseqformula "36"))
                     (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "20")))
                     (rule "false_right" (formula "39"))
                     (rule "allLeft" (formula "12") (inst "t=Z(0(#))"))
                     (rule "leq_literals" (formula "12") (term "1,0"))
                     (builtin "One Step Simplification" (formula "12"))
                     (rule "inEqSimp_commuteGeq" (formula "12") (term "1"))
                     (rule "applyEq" (formula "12") (term "0,0,0") (ifseqformula "20"))
                     (rule "inEqSimp_contradInEq1" (formula "12") (term "1") (ifseqformula "24"))
                     (rule "qeq_literals" (formula "12") (term "0,1"))
                     (builtin "One Step Simplification" (formula "12"))
                     (rule "notLeft" (formula "12"))
                     (rule "replace_known_right" (formula "29") (term "0,0,1,0,0") (ifseqformula "36"))
                     (builtin "One Step Simplification" (formula "29"))
                     (rule "replace_known_right" (formula "18") (term "0") (ifseqformula "36"))
                     (builtin "One Step Simplification" (formula "18"))
                     (rule "replace_known_left" (formula "29") (term "0,1,0,0") (ifseqformula "18"))
                     (builtin "One Step Simplification" (formula "29"))
                     (rule "allLeft" (formula "14") (inst "t=add(Z(neglit(1(#))),
    int::select(heap, self, IntLinkedList::$size))"))
                     (rule "inEqSimp_homoInEq1" (formula "14") (term "1"))
                     (rule "polySimp_mulComm0" (formula "14") (term "1,0,1"))
                     (rule "polySimp_rightDist" (formula "14") (term "1,0,1"))
                     (rule "mul_literals" (formula "14") (term "0,1,0,1"))
                     (rule "polySimp_addAssoc" (formula "14") (term "0,1"))
                     (rule "polySimp_addComm0" (formula "14") (term "0,0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,1"))
                     (rule "add_literals" (formula "14") (term "1,1,0,1"))
                     (rule "times_zero_1" (formula "14") (term "1,0,1"))
                     (rule "add_literals" (formula "14") (term "0,1"))
                     (rule "leq_literals" (formula "14") (term "1"))
                     (builtin "One Step Simplification" (formula "14"))
                     (rule "inEqSimp_homoInEq0" (formula "14") (term "1"))
                     (rule "polySimp_mulComm0" (formula "14") (term "1,0,1"))
                     (rule "polySimp_rightDist" (formula "14") (term "1,0,1"))
                     (rule "mul_literals" (formula "14") (term "0,1,0,1"))
                     (rule "polySimp_addAssoc" (formula "14") (term "0,1"))
                     (rule "add_literals" (formula "14") (term "0,0,1"))
                     (rule "add_zero_left" (formula "14") (term "0,1"))
                     (rule "applyEq" (formula "14") (term "1,1,0") (ifseqformula "22"))
                     (rule "inEqSimp_invertInEq1" (formula "14") (term "1"))
                     (rule "mul_literals" (formula "14") (term "1,1"))
                     (rule "polySimp_mulLiterals" (formula "14") (term "0,1"))
                     (rule "polySimp_elimOne" (formula "14") (term "0,1"))
                     (rule "inEqSimp_contradInEq1" (formula "14") (term "1") (ifseqformula "24"))
                     (rule "qeq_literals" (formula "14") (term "0,1"))
                     (builtin "One Step Simplification" (formula "14"))
                     (rule "allLeft" (formula "15") (inst "t=Z(0(#))"))
                     (rule "leq_literals" (formula "15") (term "1,0"))
                     (builtin "One Step Simplification" (formula "15"))
                     (rule "inEqSimp_commuteGeq" (formula "15") (term "1"))
                     (rule "applyEq" (formula "15") (term "1,1,0") (ifseqformula "21"))
                     (rule "inEqSimp_contradInEq1" (formula "15") (term "1") (ifseqformula "25"))
                     (rule "qeq_literals" (formula "15") (term "0,1"))
                     (builtin "One Step Simplification" (formula "15"))
                     (rule "ifthenelse_split" (formula "30") (term "0"))
                     (branch "∃ int j; ( (IntNode)self.nodeseq[j] = self.last ∧ j ≥ 0 ∧ j ≤ -1 + self.size) TRUE"
                        (rule "exLeft" (formula "30") (inst "sk=j_0"))
                        (rule "andLeft" (formula "30"))
                        (rule "andLeft" (formula "30"))
                        (rule "eqSymm" (formula "33"))
                        (rule "inEqSimp_homoInEq0" (formula "32"))
                        (rule "polySimp_addComm1" (formula "32") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "32"))
                        (rule "polySimp_mulComm0" (formula "32") (term "1"))
                        (rule "polySimp_rightDist" (formula "32") (term "1"))
                        (rule "mul_literals" (formula "32") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "32") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "32") (term "1,1"))
                        (rule "allLeft" (formula "28") (inst "t=Z(0(#))"))
                        (rule "leq_literals" (formula "28") (term "1,0"))
                        (builtin "One Step Simplification" (formula "28"))
                        (rule "inEqSimp_commuteGeq" (formula "28") (term "1"))
                        (rule "inEqSimp_contradInEq1" (formula "28") (term "1") (ifseqformula "25"))
                        (rule "qeq_literals" (formula "28") (term "0,1"))
                        (builtin "One Step Simplification" (formula "28"))
                        (rule "notLeft" (formula "28"))
                        (rule "allLeft" (formula "29") (inst "t=Z(0(#))"))
                        (rule "typeEqDerived2" (formula "29") (term "0,0,0") (ifseqformula "35"))
                        (builtin "One Step Simplification" (formula "29"))
                        (rule "true_left" (formula "29"))
                        (rule "allLeft" (formula "29") (inst "t=add(Z(neglit(1(#))),
    int::select(heap, self, IntLinkedList::$size))"))
                        (rule "typeEqDerived" (formula "29") (term "0,0,0") (ifseqformula "34"))
                        (builtin "One Step Simplification" (formula "29"))
                        (rule "true_left" (formula "29"))
                        (rule "allLeft" (formula "28") (inst "t=add(Z(neglit(1(#))),
    int::select(heap, self, IntLinkedList::$size))"))
                        (rule "inEqSimp_homoInEq0" (formula "28") (term "1,0"))
                        (rule "polySimp_mulComm0" (formula "28") (term "1,0,1,0"))
                        (rule "polySimp_rightDist" (formula "28") (term "1,0,1,0"))
                        (rule "mul_literals" (formula "28") (term "0,1,0,1,0"))
                        (rule "polySimp_addAssoc" (formula "28") (term "0,1,0"))
                        (rule "add_literals" (formula "28") (term "0,0,1,0"))
                        (rule "add_zero_left" (formula "28") (term "0,1,0"))
                        (rule "inEqSimp_homoInEq1" (formula "28") (term "1"))
                        (rule "polySimp_mulComm0" (formula "28") (term "1,0,1"))
                        (rule "polySimp_rightDist" (formula "28") (term "1,0,1"))
                        (rule "mul_literals" (formula "28") (term "0,1,0,1"))
                        (rule "polySimp_addAssoc" (formula "28") (term "0,1"))
                        (rule "polySimp_addComm0" (formula "28") (term "0,0,1"))
                        (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,1"))
                        (rule "add_literals" (formula "28") (term "1,1,0,1"))
                        (rule "times_zero_1" (formula "28") (term "1,0,1"))
                        (rule "add_zero_right" (formula "28") (term "0,1"))
                        (rule "leq_literals" (formula "28") (term "1"))
                        (builtin "One Step Simplification" (formula "28"))
                        (rule "applyEq" (formula "28") (term "0,0,0") (ifseqformula "34"))
                        (builtin "One Step Simplification" (formula "28"))
                        (rule "true_left" (formula "28"))
                        (rule "ifthenelse_split" (formula "1") (term "0"))
                        (branch "(IntNode)self.nodeseq[i_2_0].<created> = TRUE TRUE"
                           (rule "applyEqReverse" (formula "48") (term "1,1") (ifseqformula "2"))
                           (rule "hideAuxiliaryEq" (formula "2"))
                           (rule "replace_known_left" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                           (builtin "One Step Simplification" (formula "2"))
                           (rule "allLeft" (formula "19") (inst "t=Z(0(#))"))
                           (rule "add_zero_right" (formula "19") (term "1,1,0,0"))
                           (rule "leq_literals" (formula "19") (term "1,0"))
                           (builtin "One Step Simplification" (formula "19"))
                           (rule "inEqSimp_homoInEq1" (formula "19") (term "1"))
                           (rule "times_zero_2" (formula "19") (term "1,0,1"))
                           (rule "add_zero_right" (formula "19") (term "0,1"))
                           (rule "applyEq" (formula "19") (term "1,0,0") (ifseqformula "22"))
                           (rule "eqSymm" (formula "19") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1"))
                           (rule "mul_literals" (formula "19") (term "1,1"))
                           (rule "allLeft" (formula "37") (inst "t=Z(0(#))"))
                           (rule "add_zero_right" (formula "37") (term "1,1,0,0"))
                           (rule "leq_literals" (formula "37") (term "1,0"))
                           (builtin "One Step Simplification" (formula "37"))
                           (rule "inEqSimp_homoInEq1" (formula "37") (term "1"))
                           (rule "times_zero_2" (formula "37") (term "1,0,1"))
                           (rule "add_zero_right" (formula "37") (term "0,1"))
                           (rule "applyEq" (formula "37") (term "1,0,0") (ifseqformula "22"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1"))
                           (rule "mul_literals" (formula "37") (term "1,1"))
                           (rule "pullOutSelect" (formula "37") (term "0,0") (inst "selectSK=IntNode_next_2"))
                           (rule "simplifySelectOfAnon" (formula "37"))
                           (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "45")) (ifInst ""  (formula "21")))
                           (rule "eqSymm" (formula "38") (term "0"))
                           (rule "elementOfUnion" (formula "37") (term "0,0"))
                           (rule "elementOfSingleton" (formula "37") (term "0,0,0"))
                           (builtin "One Step Simplification" (formula "37"))
                           (rule "elementOfInfiniteUnion" (formula "37") (term "0,0"))
                           (builtin "One Step Simplification" (formula "37"))
                           (rule "elementOfSingleton" (formula "37") (term "1,0,0,0"))
                           (builtin "One Step Simplification" (formula "37"))
                           (rule "applyEqReverse" (formula "38") (term "1,0") (ifseqformula "37"))
                           (rule "hideAuxiliaryEq" (formula "37"))
                           (rule "allLeft" (formula "17") (inst "t=Z(0(#))"))
                           (rule "leq_literals" (formula "17") (term "1,0,0,0,0,0"))
                           (builtin "One Step Simplification" (formula "17"))
                           (rule "inEqSimp_commuteGeq" (formula "17") (term "1,0,0,0,0"))
                           (rule "applyEq" (formula "17") (term "1,0,0,0,0,0,0") (ifseqformula "23"))
                           (rule "inEqSimp_contradInEq1" (formula "17") (term "1,0,0,0,0") (ifseqformula "27"))
                           (rule "qeq_literals" (formula "17") (term "0,1,0,0,0,0"))
                           (builtin "One Step Simplification" (formula "17"))
                           (rule "commute_or_2" (formula "17") (term "0"))
                           (rule "inEqSimp_or_weaken2" (formula "17") (term "0,0"))
                           (rule "add_literals" (formula "17") (term "1,0,1,0,0"))
                           (builtin "One Step Simplification" (formula "17"))
                           (rule "allLeft" (formula "18") (inst "t=add(Z(neglit(1(#))),
    int::select(heap, self, IntLinkedList::$size))"))
                           (rule "inEqSimp_homoInEq0" (formula "18") (term "1,0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "18") (term "1,0,1,0,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "18") (term "1,0,1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "18") (term "0,1,0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "18") (term "0,1,0,0,0,0,0"))
                           (rule "add_literals" (formula "18") (term "0,0,1,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "18") (term "0,1,0,0,0,0,0"))
                           (rule "inEqSimp_homoInEq1" (formula "18") (term "1,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "18") (term "1,0,1,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "18") (term "1,0,1,0,0,0,0"))
                           (rule "mul_literals" (formula "18") (term "0,1,0,1,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "18") (term "0,1,0,0,0,0"))
                           (rule "polySimp_addComm0" (formula "18") (term "0,0,1,0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,1,0,0,0,0"))
                           (rule "add_literals" (formula "18") (term "1,1,0,1,0,0,0,0"))
                           (rule "times_zero_1" (formula "18") (term "1,0,1,0,0,0,0"))
                           (rule "add_zero_right" (formula "18") (term "0,1,0,0,0,0"))
                           (rule "leq_literals" (formula "18") (term "1,0,0,0,0"))
                           (builtin "One Step Simplification" (formula "18"))
                           (rule "applyEq" (formula "18") (term "1,0,0,0,0,0,0") (ifseqformula "26"))
                           (rule "inEqSimp_invertInEq1" (formula "18") (term "1,0,0,0,0"))
                           (rule "mul_literals" (formula "18") (term "1,1,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "18") (term "0,1,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "18") (term "0,1,0,0,0,0"))
                           (rule "inEqSimp_contradInEq1" (formula "18") (term "1,0,0,0,0") (ifseqformula "28"))
                           (rule "qeq_literals" (formula "18") (term "0,1,0,0,0,0"))
                           (builtin "One Step Simplification" (formula "18"))
                           (rule "commute_or_2" (formula "18") (term "0"))
                           (rule "inEqSimp_or_weaken3" (formula "18") (term "0"))
                           (rule "polySimp_addAssoc" (formula "18") (term "1,0,1,0"))
                           (rule "add_literals" (formula "18") (term "0,1,0,1,0"))
                           (rule "add_zero_left" (formula "18") (term "1,0,1,0"))
                           (builtin "One Step Simplification" (formula "18"))
                           (rule "ifthenelse_split" (formula "50") (term "0,1"))
                           (branch "self.size = 1 + i_2_0 TRUE"
                              (rule "eqSymm" (formula "51") (term "1"))
                              (rule "applyEq" (formula "4") (term "0") (ifseqformula "1"))
                              (rule "inEqSimp_homoInEq1" (formula "4"))
                              (rule "polySimp_pullOutFactor1" (formula "4") (term "0"))
                              (rule "add_literals" (formula "4") (term "1,0"))
                              (rule "times_zero_1" (formula "4") (term "0"))
                              (rule "leq_literals" (formula "4"))
                              (rule "true_left" (formula "4"))
                              (rule "applyEq" (formula "9") (term "1,1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "22") (term "1,1,1,0") (ifseqformula "1"))
                              (rule "polySimp_addAssoc" (formula "22") (term "1,1,0"))
                              (rule "add_literals" (formula "22") (term "0,1,1,0"))
                              (rule "add_zero_left" (formula "22") (term "1,1,0"))
                              (rule "applyEq" (formula "38") (term "1,1,1,0,0,1,1,0,0,0,0,0") (ifseqformula "1"))
                              (rule "polySimp_addAssoc" (formula "38") (term "1,1,0,0,1,1,0,0,0,0,0"))
                              (rule "add_literals" (formula "38") (term "0,1,1,0,0,1,1,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "38") (term "1,1,0,0,1,1,0,0,0,0,0"))
                              (rule "applyEq" (formula "32") (term "1,1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "41") (term "1,1,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "50") (term "1,1,0,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "3") (term "1,1,1,0,0,0") (ifseqformula "1"))
                              (rule "polySimp_addAssoc" (formula "3") (term "1,1,0,0,0"))
                              (rule "add_literals" (formula "3") (term "0,1,1,0,0,0"))
                              (rule "add_zero_left" (formula "3") (term "1,1,0,0,0"))
                              (rule "applyEq" (formula "18") (term "1,1,1,0") (ifseqformula "1"))
                              (rule "polySimp_addAssoc" (formula "18") (term "1,1,0"))
                              (rule "add_literals" (formula "18") (term "0,1,1,0"))
                              (rule "add_zero_left" (formula "18") (term "1,1,0"))
                              (rule "applyEq" (formula "28") (term "0") (ifseqformula "1"))
                              (rule "inEqSimp_homoInEq1" (formula "28"))
                              (rule "polySimp_mulComm0" (formula "28") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "28") (term "1,0"))
                              (rule "mul_literals" (formula "28") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "28") (term "0"))
                              (rule "add_literals" (formula "28") (term "0,0"))
                              (rule "add_zero_left" (formula "28") (term "0"))
                              (rule "applyEq" (formula "35") (term "0") (ifseqformula "1"))
                              (rule "inEqSimp_homoInEq1" (formula "35"))
                              (rule "polySimp_mulComm0" (formula "35") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "35") (term "1,0"))
                              (rule "mul_literals" (formula "35") (term "0,1,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0"))
                              (rule "polySimp_addAssoc" (formula "35") (term "0,0"))
                              (rule "add_literals" (formula "35") (term "0,0,0"))
                              (rule "add_zero_left" (formula "35") (term "0,0"))
                              (rule "applyEq" (formula "11") (term "1,1,1,0,0,1,0") (ifseqformula "1"))
                              (rule "polySimp_addAssoc" (formula "11") (term "1,1,0,0,1,0"))
                              (rule "add_literals" (formula "11") (term "0,1,1,0,0,1,0"))
                              (rule "add_zero_left" (formula "11") (term "1,1,0,0,1,0"))
                              (rule "applyEq" (formula "39") (term "1,1,1,0") (ifseqformula "1"))
                              (rule "polySimp_addAssoc" (formula "39") (term "1,1,0"))
                              (rule "add_literals" (formula "39") (term "0,1,1,0"))
                              (rule "add_zero_left" (formula "39") (term "1,1,0"))
                              (rule "applyEq" (formula "39") (term "1,1,1,0,0,1,1,0,0,0,0,0") (ifseqformula "1"))
                              (rule "polySimp_addAssoc" (formula "39") (term "1,1,0,0,1,1,0,0,0,0,0"))
                              (rule "add_literals" (formula "39") (term "0,1,1,0,0,1,1,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "39") (term "1,1,0,0,1,1,0,0,0,0,0"))
                              (rule "applyEq" (formula "21") (term "0,1") (ifseqformula "1"))
                              (rule "inEqSimp_homoInEq0" (formula "21") (term "1"))
                              (rule "polySimp_mulComm0" (formula "21") (term "1,0,1"))
                              (rule "polySimp_rightDist" (formula "21") (term "1,0,1"))
                              (rule "mul_literals" (formula "21") (term "0,1,0,1"))
                              (rule "polySimp_addAssoc" (formula "21") (term "0,1"))
                              (rule "add_literals" (formula "21") (term "0,0,1"))
                              (rule "add_zero_left" (formula "21") (term "0,1"))
                              (rule "applyEq" (formula "26") (term "1,1,0") (ifseqformula "1"))
                              (rule "polySimp_addAssoc" (formula "26") (term "1,0"))
                              (rule "add_literals" (formula "26") (term "0,1,0"))
                              (rule "add_zero_left" (formula "26") (term "1,0"))
                              (rule "applyEq" (formula "10") (term "1,1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "37") (term "1,1,1,0,0,0") (ifseqformula "1"))
                              (rule "polySimp_addAssoc" (formula "37") (term "1,1,0,0,0"))
                              (rule "add_literals" (formula "37") (term "0,1,1,0,0,0"))
                              (rule "add_zero_left" (formula "37") (term "1,1,0,0,0"))
                              (rule "applyEq" (formula "19") (term "1,1,0,0,0,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "16") (term "1,1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "36") (term "1,1,0") (ifseqformula "1"))
                              (rule "polySimp_addAssoc" (formula "36") (term "1,0"))
                              (rule "add_literals" (formula "36") (term "0,1,0"))
                              (rule "add_zero_left" (formula "36") (term "1,0"))
                              (rule "applyEq" (formula "19") (term "1,1,0,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "12") (term "1,1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "38") (term "1,1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "17") (term "1,1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "31") (term "1,1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "14") (term "1,1,0") (ifseqformula "1"))
                              (rule "polySimp_addAssoc" (formula "14") (term "1,0"))
                              (rule "add_literals" (formula "14") (term "0,1,0"))
                              (rule "add_zero_left" (formula "14") (term "1,0"))
                              (rule "applyEq" (formula "14") (term "0") (ifseqformula "13"))
                              (rule "applyEq" (formula "50") (term "1,0,0,1,0,0") (ifseqformula "26"))
                              (rule "applyEq" (formula "13") (term "1,1") (ifseqformula "26"))
                              (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "26"))
                              (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "25"))
                              (rule "applyEq" (formula "2") (term "1") (ifseqformula "35"))
                              (rule "applyEq" (formula "47") (term "0") (ifseqformula "35"))
                              (builtin "One Step Simplification" (formula "47"))
                              (rule "false_right" (formula "47"))
                              (rule "applyEq" (formula "46") (term "0") (ifseqformula "25"))
                              (rule "applyEq" (formula "2") (term "1,0,0,0,0,0") (ifseqformula "25"))
                              (rule "applyEq" (formula "47") (term "1,0,1") (ifseqformula "25"))
                              (rule "replace_known_left" (formula "47") (term "1") (ifseqformula "19"))
                              (builtin "One Step Simplification" (formula "47"))
                              (rule "allRight" (formula "47") (inst "sk=j_1_0"))
                              (rule "orRight" (formula "47"))
                              (rule "orRight" (formula "48"))
                              (rule "orRight" (formula "47"))
                              (rule "notRight" (formula "49"))
                              (rule "inEqSimp_geqRight" (formula "49"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                              (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                              (rule "add_literals" (formula "1") (term "0,0,0"))
                              (rule "add_zero_left" (formula "1") (term "0,0"))
                              (rule "inEqSimp_leqRight" (formula "49"))
                              (rule "mul_literals" (formula "1") (term "1,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0"))
                              (rule "add_zero_left" (formula "1") (term "0"))
                              (rule "applyEq" (formula "5") (term "1,1,0") (ifseqformula "28"))
                              (builtin "One Step Simplification" (formula "5"))
                              (rule "eqSymm" (formula "5") (term "1"))
                              (rule "applyEq" (formula "42") (term "1") (ifseqformula "4"))
                              (rule "applyEq" (formula "29") (term "1") (ifseqformula "4"))
                              (rule "applyEq" (formula "31") (term "1") (ifseqformula "4"))
                              (rule "applyEq" (formula "16") (term "1,0") (ifseqformula "28"))
                              (builtin "One Step Simplification" (formula "16"))
                              (rule "true_left" (formula "16"))
                              (rule "inEqSimp_invertInEq0" (formula "29"))
                              (rule "times_zero_2" (formula "29") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                              (rule "polySimp_elimOne" (formula "29") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "35"))
                              (rule "polySimp_mulLiterals" (formula "35") (term "1"))
                              (rule "polySimp_elimOne" (formula "35") (term "1"))
                              (rule "inEqSimp_invertInEq1" (formula "22") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "22") (term "0,1"))
                              (rule "mul_literals" (formula "22") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "22") (term "0,1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1"))
                              (rule "polySimp_elimOne" (formula "2") (term "1"))
                              (rule "inEqSimp_strengthen0" (formula "2") (ifseqformula "48"))
                              (rule "inEqSimp_contradEq3" (formula "48") (ifseqformula "2"))
                              (rule "polySimp_mulComm0" (formula "48") (term "1,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "48") (term "0,0"))
                              (rule "add_literals" (formula "48") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "48") (term "1,0,0"))
                              (rule "add_zero_right" (formula "48") (term "0,0"))
                              (rule "qeq_literals" (formula "48") (term "0"))
                              (builtin "One Step Simplification" (formula "48"))
                              (rule "false_right" (formula "48"))
                              (rule "inEqSimp_exactShadow3" (formula "34") (ifseqformula "35"))
                              (rule "times_zero_1" (formula "34") (term "0,0"))
                              (rule "add_zero_left" (formula "34") (term "0"))
                              (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                              (rule "times_zero_1" (formula "1") (term "0,0"))
                              (rule "add_zero_left" (formula "1") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                              (rule "mul_literals" (formula "1") (term "1"))
                              (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "1"))
                              (rule "leq_literals" (formula "7") (term "0"))
                              (builtin "One Step Simplification" (formula "7"))
                              (rule "true_left" (formula "7"))
                              (rule "inEqSimp_contradInEq1" (formula "22") (term "1") (ifseqformula "1"))
                              (rule "qeq_literals" (formula "22") (term "0,1"))
                              (builtin "One Step Simplification" (formula "22"))
                              (rule "seqGetAlphaCast" (formula "15") (term "0"))
                              (rule "castDel" (formula "15") (term "0"))
                              (builtin "One Step Simplification" (formula "15"))
                              (rule "true_left" (formula "15"))
                              (rule "seqGetAlphaCast" (formula "37") (term "1"))
                              (rule "castDel" (formula "37") (term "0"))
                              (builtin "One Step Simplification" (formula "37"))
                              (rule "true_left" (formula "37"))
                              (rule "seqGetAlphaCast" (formula "16") (term "0"))
                              (rule "castDel" (formula "16") (term "0"))
                              (builtin "One Step Simplification" (formula "16"))
                              (rule "true_left" (formula "16"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "21") (term "0") (ifseqformula "7"))
                              (rule "replace_known_left" (formula "21") (term "0") (ifseqformula "22"))
                              (builtin "One Step Simplification" (formula "21"))
                              (rule "true_left" (formula "21"))
                              (rule "seqGetAlphaCast" (formula "33") (term "0"))
                              (rule "castedGetAny" (formula "33") (term "0"))
                              (builtin "One Step Simplification" (formula "33"))
                              (rule "true_left" (formula "33"))
                              (rule "allLeft" (formula "19") (inst "t=j_1_0"))
                              (rule "replace_known_left" (formula "19") (term "0,0,0") (ifseqformula "4"))
                              (builtin "One Step Simplification" (formula "19"))
                              (rule "inEqSimp_contradInEq0" (formula "19") (term "1") (ifseqformula "3"))
                              (rule "inEqSimp_homoInEq1" (formula "19") (term "0,1"))
                              (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1"))
                              (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1"))
                              (rule "mul_literals" (formula "19") (term "0,1,0,0,1"))
                              (rule "polySimp_addAssoc" (formula "19") (term "0,0,1"))
                              (rule "polySimp_addComm0" (formula "19") (term "0,0,0,1"))
                              (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,1"))
                              (rule "add_literals" (formula "19") (term "1,1,0,0,1"))
                              (rule "times_zero_1" (formula "19") (term "1,0,0,1"))
                              (rule "add_zero_right" (formula "19") (term "0,0,1"))
                              (rule "leq_literals" (formula "19") (term "0,1"))
                              (builtin "One Step Simplification" (formula "19"))
                              (rule "inEqSimp_contradInEq1" (formula "19") (ifseqformula "2"))
                              (rule "qeq_literals" (formula "19") (term "0"))
                              (builtin "One Step Simplification" (formula "19"))
                              (rule "closeFalse" (formula "19"))
                           )
                           (branch "self.size = 1 + i_2_0 FALSE"
                              (rule "eqSymm" (formula "51") (term "1"))
                              (rule "inEqSimp_strengthen1" (formula "3") (ifseqformula "50"))
                              (rule "polySimp_addAssoc" (formula "3") (term "1"))
                              (rule "add_literals" (formula "3") (term "0,1"))
                              (rule "inEqSimp_contradEq7" (formula "50") (ifseqformula "3"))
                              (rule "polySimp_rightDist" (formula "50") (term "1,0,0"))
                              (rule "mul_literals" (formula "50") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "50") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "50") (term "0,0,0"))
                              (rule "add_literals" (formula "50") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "50") (term "0,0"))
                              (rule "add_literals" (formula "50") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "50") (term "1,0,0"))
                              (rule "add_zero_right" (formula "50") (term "0,0"))
                              (rule "leq_literals" (formula "50") (term "0"))
                              (builtin "One Step Simplification" (formula "50"))
                              (rule "false_right" (formula "50"))
                              (rule "seqGetAlphaCast" (formula "48") (term "0"))
                              (rule "castDel" (formula "1") (term "0"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "true_left" (formula "1"))
                              (rule "seqGetAlphaCast" (formula "47") (term "0"))
                              (rule "castedGetAny" (formula "1") (term "0"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "true_left" (formula "1"))
                              (rule "ifthenelse_split" (formula "37") (term "0"))
                              (branch "∃ int j; ( (IntNode)self.nodeseq[j] = self.first ∧ j ≥ 0 ∧ j ≤ -1 + self.size) TRUE"
                                 (rule "exLeft" (formula "37") (inst "sk=j_1"))
                                 (rule "andLeft" (formula "37"))
                                 (rule "andLeft" (formula "37"))
                                 (rule "eqSymm" (formula "40"))
                                 (rule "inEqSimp_homoInEq0" (formula "39"))
                                 (rule "polySimp_addComm1" (formula "39") (term "0"))
                                 (rule "applyEq" (formula "47") (term "0") (ifseqformula "40"))
                                 (builtin "One Step Simplification" (formula "47"))
                                 (rule "false_right" (formula "47"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "39"))
                                 (rule "polySimp_mulComm0" (formula "39") (term "1"))
                                 (rule "polySimp_rightDist" (formula "39") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "39") (term "1,1"))
                                 (rule "mul_literals" (formula "39") (term "0,1"))
                                 (rule "polySimp_elimOne" (formula "39") (term "1,1"))
                                 (rule "allLeft" (formula "22") (inst "t=add(Z(1(#)), i_2_0)"))
                                 (rule "polySimp_addAssoc" (formula "22") (term "1,1,0,0"))
                                 (rule "add_literals" (formula "22") (term "0,1,1,0,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "22") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "22") (term "1,0,1"))
                                 (rule "polySimp_rightDist" (formula "22") (term "1,0,1"))
                                 (rule "mul_literals" (formula "22") (term "0,1,0,1"))
                                 (rule "polySimp_addComm1" (formula "22") (term "0,1"))
                                 (rule "polySimp_addAssoc" (formula "22") (term "0,0,1"))
                                 (rule "add_literals" (formula "22") (term "0,0,0,1"))
                                 (rule "inEqSimp_homoInEq0" (formula "22") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "22") (term "1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "22") (term "1,0,1,0"))
                                 (rule "mul_literals" (formula "22") (term "0,1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "22") (term "0,1,0"))
                                 (rule "add_literals" (formula "22") (term "0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "22") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "22") (term "1,1"))
                                 (rule "mul_literals" (formula "22") (term "0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1"))
                                 (rule "polySimp_elimOne" (formula "22") (term "1,1,1"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "22") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "22") (term "0,1,0"))
                                 (rule "polySimp_elimOne" (formula "22") (term "0,1,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "22") (term "1,0") (ifseqformula "4"))
                                 (rule "qeq_literals" (formula "22") (term "0,1,0"))
                                 (builtin "One Step Simplification" (formula "22"))
                                 (rule "allLeft" (formula "16") (inst "t=add(Z(1(#)), i_2_0)"))
                                 (rule "inEqSimp_commuteGeq" (formula "16") (term "1"))
                                 (rule "inEqSimp_homoInEq0" (formula "16") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "16") (term "1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "16") (term "1,0,1,0"))
                                 (rule "mul_literals" (formula "16") (term "0,1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "16") (term "0,1,0"))
                                 (rule "add_literals" (formula "16") (term "0,0,1,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "16") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "16") (term "0,1,0"))
                                 (rule "polySimp_elimOne" (formula "16") (term "0,1,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "16") (term "1") (ifseqformula "3"))
                                 (rule "inEqSimp_homoInEq1" (formula "16") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1"))
                                 (rule "mul_literals" (formula "16") (term "0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "16") (term "0,0,1"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,1"))
                                 (rule "add_literals" (formula "16") (term "0,0,0,0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,1"))
                                 (rule "add_literals" (formula "16") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "16") (term "1,0,0,1"))
                                 (rule "add_literals" (formula "16") (term "0,0,1"))
                                 (rule "leq_literals" (formula "16") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "16"))
                                 (rule "inEqSimp_contradInEq1" (formula "16") (term "1") (ifseqformula "4"))
                                 (rule "qeq_literals" (formula "16") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "16"))
                                 (rule "allLeft" (formula "43") (inst "t=add(Z(1(#)), i_2_0)"))
                                 (rule "inEqSimp_commuteGeq" (formula "43") (term "1"))
                                 (rule "inEqSimp_homoInEq0" (formula "43") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "43") (term "1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "43") (term "1,0,1,0"))
                                 (rule "mul_literals" (formula "43") (term "0,1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "43") (term "0,1,0"))
                                 (rule "add_literals" (formula "43") (term "0,0,1,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "43") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "43") (term "0,1,0"))
                                 (rule "polySimp_elimOne" (formula "43") (term "0,1,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "43") (term "1,0") (ifseqformula "4"))
                                 (rule "qeq_literals" (formula "43") (term "0,1,0"))
                                 (builtin "One Step Simplification" (formula "43"))
                                 (rule "inEqSimp_contradInEq1" (formula "43") (term "1") (ifseqformula "3"))
                                 (rule "inEqSimp_homoInEq1" (formula "43") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "43") (term "1,0,0,1"))
                                 (rule "mul_literals" (formula "43") (term "0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "43") (term "0,0,1"))
                                 (rule "polySimp_addComm1" (formula "43") (term "0,0,0,1"))
                                 (rule "add_literals" (formula "43") (term "0,0,0,0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "43") (term "0,0,1"))
                                 (rule "add_literals" (formula "43") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "43") (term "1,0,0,1"))
                                 (rule "add_literals" (formula "43") (term "0,0,1"))
                                 (rule "leq_literals" (formula "43") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "43"))
                                 (rule "pullOutSelect" (formula "43") (term "0") (inst "selectSK=IntNode_data_3"))
                                 (rule "simplifySelectOfAnon" (formula "43"))
                                 (builtin "One Step Simplification" (formula "43"))
                                 (rule "eqSymm" (formula "44"))
                                 (rule "applyEqReverse" (formula "43") (term "1") (ifseqformula "44"))
                                 (rule "hideAuxiliaryEq" (formula "44"))
                                 (rule "elementOfUnion" (formula "43") (term "0,0,0"))
                                 (rule "elementOfSingleton" (formula "43") (term "0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "43"))
                                 (rule "elementOfInfiniteUnion" (formula "43") (term "0,0,0"))
                                 (builtin "One Step Simplification" (formula "43"))
                                 (rule "elementOfSingleton" (formula "43") (term "1,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "43"))
                                 (rule "eqSymm" (formula "43") (term "1,0,0,0,0"))
                                 (rule "allLeft" (formula "24") (inst "t=i_2_0"))
                                 (rule "inEqSimp_homoInEq1" (formula "24") (term "1"))
                                 (rule "polySimp_addComm1" (formula "24") (term "0,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "24") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "24") (term "1,1"))
                                 (rule "mul_literals" (formula "24") (term "0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1"))
                                 (rule "polySimp_elimOne" (formula "24") (term "1,1,1"))
                                 (rule "inEqSimp_contradInEq1" (formula "24") (term "1,0") (ifseqformula "4"))
                                 (rule "qeq_literals" (formula "24") (term "0,1,0"))
                                 (builtin "One Step Simplification" (formula "24"))
                                 (rule "inEqSimp_contradInEq1" (formula "24") (term "1") (ifseqformula "3"))
                                 (rule "inEqSimp_homoInEq1" (formula "24") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1"))
                                 (rule "mul_literals" (formula "24") (term "0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "24") (term "0,0,1"))
                                 (rule "polySimp_addComm1" (formula "24") (term "0,0,0,1"))
                                 (rule "add_literals" (formula "24") (term "0,0,0,0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,1"))
                                 (rule "add_literals" (formula "24") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "24") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "24") (term "0,0,1"))
                                 (rule "leq_literals" (formula "24") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "24"))
                                 (rule "replace_known_left" (formula "56") (term "1") (ifseqformula "24"))
                                 (builtin "One Step Simplification" (formula "56"))
                                 (rule "allRight" (formula "56") (inst "sk=j_1_0"))
                                 (rule "orRight" (formula "56"))
                                 (rule "orRight" (formula "57"))
                                 (rule "orRight" (formula "56"))
                                 (rule "notRight" (formula "58"))
                                 (rule "inEqSimp_geqRight" (formula "58"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0"))
                                 (rule "inEqSimp_leqRight" (formula "58"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                 (rule "polySimp_elimOne" (formula "2") (term "0"))
                                 (rule "allLeft" (formula "15") (inst "t=add(Z(1(#)), i_2_0)"))
                                 (rule "inEqSimp_commuteGeq" (formula "15") (term "1"))
                                 (rule "inEqSimp_homoInEq0" (formula "15") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "15") (term "1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "15") (term "1,0,1,0"))
                                 (rule "mul_literals" (formula "15") (term "0,1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "15") (term "0,1,0"))
                                 (rule "add_literals" (formula "15") (term "0,0,1,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "15") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "15") (term "0,1,0"))
                                 (rule "polySimp_elimOne" (formula "15") (term "0,1,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "15") (term "1,0") (ifseqformula "7"))
                                 (rule "qeq_literals" (formula "15") (term "0,1,0"))
                                 (builtin "One Step Simplification" (formula "15"))
                                 (rule "inEqSimp_contradInEq1" (formula "15") (term "1") (ifseqformula "6"))
                                 (rule "inEqSimp_homoInEq1" (formula "15") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1"))
                                 (rule "mul_literals" (formula "15") (term "0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "15") (term "0,0,1"))
                                 (rule "polySimp_addComm1" (formula "15") (term "0,0,0,1"))
                                 (rule "add_literals" (formula "15") (term "0,0,0,0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,1"))
                                 (rule "add_literals" (formula "15") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "15") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "15") (term "0,0,1"))
                                 (rule "leq_literals" (formula "15") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "15"))
                                 (rule "notLeft" (formula "15"))
                                 (rule "replace_known_right" (formula "47") (term "0,0,1,0,0") (ifseqformula "54"))
                                 (builtin "One Step Simplification" (formula "47"))
                                 (rule "allLeft" (formula "49") (inst "t=i_2_0"))
                                 (rule "replaceKnownSelect_taclet1011011_15" (formula "49") (term "0,0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet001011011_21" (formula "49") (term "0,0,0"))
                                 (rule "replace_known_left" (formula "49") (term "0,0") (ifseqformula "27"))
                                 (builtin "One Step Simplification" (formula "49"))
                                 (rule "true_left" (formula "49"))
                                 (rule "allLeft" (formula "23") (inst "t=i_2_0"))
                                 (rule "inEqSimp_commuteGeq" (formula "23") (term "1,0,0,0,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "23") (term "1,0,0,0,0,0") (ifseqformula "7"))
                                 (rule "qeq_literals" (formula "23") (term "0,1,0,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "23"))
                                 (rule "inEqSimp_contradInEq1" (formula "23") (term "1,0,0,0,0") (ifseqformula "6"))
                                 (rule "inEqSimp_homoInEq1" (formula "23") (term "0,1,0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1,0,0,0,0"))
                                 (rule "add_literals" (formula "23") (term "1,1,0,0,1,0,0,0,0"))
                                 (rule "times_zero_1" (formula "23") (term "1,0,0,1,0,0,0,0"))
                                 (rule "add_zero_right" (formula "23") (term "0,0,1,0,0,0,0"))
                                 (rule "leq_literals" (formula "23") (term "0,1,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "23"))
                                 (rule "allLeft" (formula "50") (inst "t=add(Z(1(#)), i_2_0)"))
                                 (rule "polySimp_addAssoc" (formula "50") (term "1,1,0,0"))
                                 (rule "add_literals" (formula "50") (term "0,1,1,0,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "50") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "50") (term "1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "50") (term "1,0,1,0"))
                                 (rule "mul_literals" (formula "50") (term "0,1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "50") (term "0,1,0"))
                                 (rule "add_literals" (formula "50") (term "0,0,1,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "50") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "50") (term "1,0,1"))
                                 (rule "polySimp_rightDist" (formula "50") (term "1,0,1"))
                                 (rule "mul_literals" (formula "50") (term "0,1,0,1"))
                                 (rule "polySimp_addComm1" (formula "50") (term "0,1"))
                                 (rule "polySimp_addAssoc" (formula "50") (term "0,0,1"))
                                 (rule "add_literals" (formula "50") (term "0,0,0,1"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "50") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "50") (term "0,1,0"))
                                 (rule "polySimp_elimOne" (formula "50") (term "0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "50") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "50") (term "1,1"))
                                 (rule "mul_literals" (formula "50") (term "0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "50") (term "1,1,1"))
                                 (rule "polySimp_elimOne" (formula "50") (term "1,1,1"))
                                 (rule "inEqSimp_contradInEq1" (formula "50") (term "1,0") (ifseqformula "7"))
                                 (rule "qeq_literals" (formula "50") (term "0,1,0"))
                                 (builtin "One Step Simplification" (formula "50"))
                                 (rule "pullOutSelect" (formula "50") (term "0,0") (inst "selectSK=IntNode_next_3"))
                                 (rule "simplifySelectOfAnon" (formula "50"))
                                 (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "57")))
                                 (rule "eqSymm" (formula "51") (term "0"))
                                 (rule "elementOfUnion" (formula "50") (term "0,0,0"))
                                 (rule "elementOfInfiniteUnion" (formula "50") (term "1,0,0,0"))
                                 (builtin "One Step Simplification" (formula "50"))
                                 (rule "elementOfSingleton" (formula "50") (term "1,0,1,0,0,0"))
                                 (builtin "One Step Simplification" (formula "50"))
                                 (rule "elementOfSingleton" (formula "50") (term "0,0,0"))
                                 (builtin "One Step Simplification" (formula "50"))
                                 (rule "ifthenelse_negated" (formula "50") (term "0"))
                                 (rule "allLeft" (formula "24") (inst "t=add(Z(1(#)), i_2_0)"))
                                 (rule "inEqSimp_commuteGeq" (formula "24") (term "1,0,0,0,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "24") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "24") (term "1,0,1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "24") (term "1,0,1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "24") (term "0,1,0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "24") (term "0,1,0,0,0,0,0"))
                                 (rule "add_literals" (formula "24") (term "0,0,1,0,0,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "24") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "24") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "24") (term "0,1,0,0,0,0,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "24") (term "1,0,0,0,0") (ifseqformula "6"))
                                 (rule "inEqSimp_homoInEq1" (formula "24") (term "0,1,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0,0,0"))
                                 (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "24") (term "0,0,0,1,0,0,0,0"))
                                 (rule "add_literals" (formula "24") (term "0,0,0,0,1,0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,1,0,0,0,0"))
                                 (rule "add_literals" (formula "24") (term "1,1,0,0,1,0,0,0,0"))
                                 (rule "times_zero_1" (formula "24") (term "1,0,0,1,0,0,0,0"))
                                 (rule "add_literals" (formula "24") (term "0,0,1,0,0,0,0"))
                                 (rule "leq_literals" (formula "24") (term "0,1,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "24"))
                                 (rule "inEqSimp_contradInEq1" (formula "24") (term "1,0,0,0,0") (ifseqformula "7"))
                                 (rule "qeq_literals" (formula "24") (term "0,1,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "24"))
                                 (rule "seqGetAlphaCast" (formula "16") (term "0"))
                                 (rule "castDel" (formula "16") (term "0"))
                                 (builtin "One Step Simplification" (formula "16"))
                                 (rule "true_left" (formula "16"))
                                 (rule "allLeft" (formula "12") (inst "t=Z(0(#))"))
                                 (rule "leq_literals" (formula "12") (term "1,0"))
                                 (builtin "One Step Simplification" (formula "12"))
                                 (rule "inEqSimp_commuteGeq" (formula "12") (term "1"))
                                 (rule "applyEq" (formula "12") (term "0,0,0") (ifseqformula "19"))
                                 (builtin "One Step Simplification" (formula "12"))
                                 (rule "true_left" (formula "12"))
                                 (rule "allLeft" (formula "12") (inst "t=add(Z(neglit(1(#))),
    int::select(heap, self, IntLinkedList::$size))"))
                                 (rule "inEqSimp_homoInEq0" (formula "12") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "12") (term "1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "12") (term "1,0,1,0"))
                                 (rule "mul_literals" (formula "12") (term "0,1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "12") (term "0,1,0"))
                                 (rule "add_literals" (formula "12") (term "0,0,1,0"))
                                 (rule "add_zero_left" (formula "12") (term "0,1,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "12") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "12") (term "1,0,1"))
                                 (rule "polySimp_rightDist" (formula "12") (term "1,0,1"))
                                 (rule "mul_literals" (formula "12") (term "0,1,0,1"))
                                 (rule "polySimp_addAssoc" (formula "12") (term "0,1"))
                                 (rule "polySimp_addComm0" (formula "12") (term "0,0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,1"))
                                 (rule "add_literals" (formula "12") (term "1,1,0,1"))
                                 (rule "times_zero_1" (formula "12") (term "1,0,1"))
                                 (rule "add_literals" (formula "12") (term "0,1"))
                                 (rule "leq_literals" (formula "12") (term "1"))
                                 (builtin "One Step Simplification" (formula "12"))
                                 (rule "applyEq" (formula "12") (term "0,0,0") (ifseqformula "18"))
                                 (builtin "One Step Simplification" (formula "12"))
                                 (rule "true_left" (formula "12"))
                                 (rule "allLeft" (formula "12") (inst "t=i_2_0"))
                                 (rule "inEqSimp_commuteGeq" (formula "12") (term "1"))
                                 (rule "applyEq" (formula "12") (term "0,0,0,0") (ifseqformula "17"))
                                 (builtin "One Step Simplification" (formula "12"))
                                 (rule "true_left" (formula "12"))
                                 (rule "allLeft" (formula "20") (inst "t=j_0"))
                                 (rule "inEqSimp_commuteGeq" (formula "20") (term "1"))
                                 (rule "applyEq" (formula "20") (term "1,1,0,0") (ifseqformula "42"))
                                 (rule "inEqSimp_contradInEq1" (formula "20") (term "1") (ifseqformula "44"))
                                 (rule "inEqSimp_homoInEq1" (formula "20") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,1"))
                                 (rule "add_literals" (formula "20") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "20") (term "1,0,0,1"))
                                 (rule "add_literals" (formula "20") (term "0,0,1"))
                                 (rule "leq_literals" (formula "20") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "20"))
                                 (rule "inEqSimp_contradInEq1" (formula "20") (term "1") (ifseqformula "43"))
                                 (rule "qeq_literals" (formula "20") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "20"))
                                 (rule "allLeft" (formula "13") (inst "t=Z(0(#))"))
                                 (rule "typeEqDerived" (formula "13") (term "0,0,0") (ifseqformula "19"))
                                 (builtin "One Step Simplification" (formula "13"))
                                 (rule "true_left" (formula "13"))
                                 (rule "allLeft" (formula "15") (inst "t=j_0"))
                                 (rule "inEqSimp_commuteGeq" (formula "15") (term "1"))
                                 (rule "applyEq" (formula "15") (term "0,0,0,0") (ifseqformula "43"))
                                 (rule "replace_known_right" (formula "15") (term "0,0,0") (ifseqformula "62"))
                                 (builtin "One Step Simplification" (formula "15"))
                                 (rule "true_left" (formula "15"))
                                 (rule "allLeft" (formula "13") (inst "t=add(Z(neglit(1(#))),
    int::select(heap, self, IntLinkedList::$size))"))
                                 (rule "typeEqDerived" (formula "13") (term "0,0,0") (ifseqformula "18"))
                                 (builtin "One Step Simplification" (formula "13"))
                                 (rule "true_left" (formula "13"))
                                 (rule "allLeft" (formula "13") (inst "t=i_2_0"))
                                 (rule "typeEqDerived" (formula "13") (term "0,0,0") (ifseqformula "17"))
                                 (builtin "One Step Simplification" (formula "13"))
                                 (rule "true_left" (formula "13"))
                                 (rule "allLeft" (formula "51") (inst "t=j_0"))
                                 (rule "inEqSimp_commuteGeq" (formula "51") (term "1"))
                                 (rule "applyEq" (formula "51") (term "1,0,0,0") (ifseqformula "42"))
                                 (rule "replaceKnownSelect_taclet1011011_16" (formula "51") (term "0,0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet1011011_17" (formula "51") (term "0,0,0"))
                                 (rule "applyEq" (formula "51") (term "0,0,0") (ifseqformula "45"))
                                 (rule "eqSymm" (formula "51") (term "0,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "51") (term "1") (ifseqformula "44"))
                                 (rule "inEqSimp_homoInEq1" (formula "51") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "51") (term "0,0,1"))
                                 (rule "add_literals" (formula "51") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "51") (term "1,0,0,1"))
                                 (rule "add_literals" (formula "51") (term "0,0,1"))
                                 (rule "leq_literals" (formula "51") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "51"))
                                 (rule "inEqSimp_contradInEq1" (formula "51") (term "1") (ifseqformula "43"))
                                 (rule "qeq_literals" (formula "51") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "51"))
                                 (rule "ifthenelse_split" (formula "5") (term "0"))
                                 (branch "∃ int j; ( (IntNode)self.nodeseq[j] = (IntNode)self.nodeseq[i_2_0] ∧ j ≥ 0 ∧ j ≤ -1 + self.size) TRUE"
                                    (rule "exLeft" (formula "5") (inst "sk=j_2"))
                                    (rule "andLeft" (formula "5"))
                                    (rule "andLeft" (formula "5"))
                                    (rule "eqSymm" (formula "8"))
                                    (rule "inEqSimp_homoInEq0" (formula "7"))
                                    (rule "polySimp_addComm1" (formula "7") (term "0"))
                                    (rule "applyEq" (formula "67") (term "0") (ifseqformula "8"))
                                    (builtin "One Step Simplification" (formula "67"))
                                    (rule "false_right" (formula "67"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                    (rule "polySimp_mulComm0" (formula "7") (term "1"))
                                    (rule "polySimp_rightDist" (formula "7") (term "1"))
                                    (rule "mul_literals" (formula "7") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "7") (term "1,1"))
                                    (rule "seqGetAlphaCast" (formula "20") (term "0"))
                                    (rule "castDel" (formula "20") (term "0"))
                                    (builtin "One Step Simplification" (formula "20"))
                                    (rule "true_left" (formula "20"))
                                    (rule "seqGetAlphaCast" (formula "21") (term "0"))
                                    (rule "castDel" (formula "21") (term "0"))
                                    (builtin "One Step Simplification" (formula "21"))
                                    (rule "true_left" (formula "21"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "30") (term "0") (ifseqformula "11"))
                                    (rule "replace_known_left" (formula "30") (term "0") (ifseqformula "31"))
                                    (builtin "One Step Simplification" (formula "30"))
                                    (rule "true_left" (formula "30"))
                                    (rule "seqGetAlphaCast" (formula "45") (term "0"))
                                    (rule "castedGetAny" (formula "45") (term "0"))
                                    (builtin "One Step Simplification" (formula "45"))
                                    (rule "true_left" (formula "45"))
                                    (rule "seqGetAlphaCast" (formula "48") (term "0"))
                                    (rule "castDel" (formula "48") (term "0"))
                                    (builtin "One Step Simplification" (formula "48"))
                                    (rule "true_left" (formula "48"))
                                    (rule "commute_or_2" (formula "27") (term "0"))
                                    (rule "seqGetAlphaCast" (formula "31") (term "0,0"))
                                    (rule "castedGetAny" (formula "31") (term "0"))
                                    (builtin "One Step Simplification" (formula "31"))
                                    (rule "true_left" (formula "31"))
                                    (rule "cut_direct" (formula "31") (term "1"))
                                    (branch "CUT: self.size ≤ 1 TRUE"
                                       (builtin "One Step Simplification" (formula "32"))
                                       (rule "true_left" (formula "32"))
                                       (rule "inEqSimp_antiSymm" (formula "40") (ifseqformula "31"))
                                       (rule "applyEq" (formula "16") (term "1,1,0") (ifseqformula "40"))
                                       (rule "applyEq" (formula "15") (term "1,1,0") (ifseqformula "40"))
                                       (rule "applyEq" (formula "7") (term "0") (ifseqformula "40"))
                                       (rule "inEqSimp_homoInEq1" (formula "7"))
                                       (rule "mul_literals" (formula "7") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "7") (term "0"))
                                       (rule "add_literals" (formula "7") (term "0,0"))
                                       (rule "add_zero_left" (formula "7") (term "0"))
                                       (rule "applyEq" (formula "9") (term "0") (ifseqformula "40"))
                                       (rule "inEqSimp_homoInEq1" (formula "9"))
                                       (rule "mul_literals" (formula "9") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "9") (term "0"))
                                       (rule "add_literals" (formula "9") (term "0,0"))
                                       (rule "applyEq" (formula "58") (term "0,1") (ifseqformula "40"))
                                       (rule "inEqSimp_homoInEq0" (formula "58") (term "1"))
                                       (rule "mul_literals" (formula "58") (term "1,0,1"))
                                       (rule "polySimp_addComm1" (formula "58") (term "0,1"))
                                       (rule "add_literals" (formula "58") (term "0,0,1"))
                                       (rule "applyEq" (formula "2") (term "0") (ifseqformula "40"))
                                       (rule "inEqSimp_homoInEq1" (formula "2"))
                                       (rule "mul_literals" (formula "2") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0"))
                                       (rule "add_literals" (formula "2") (term "0,0"))
                                       (rule "add_zero_left" (formula "2") (term "0"))
                                       (rule "applyEq" (formula "32") (term "0,1") (ifseqformula "40"))
                                       (rule "inEqSimp_homoInEq0" (formula "32") (term "1"))
                                       (rule "mul_literals" (formula "32") (term "1,0,1"))
                                       (rule "polySimp_addComm1" (formula "32") (term "0,1"))
                                       (rule "add_literals" (formula "32") (term "0,0,1"))
                                       (rule "applyEq" (formula "18") (term "1,1,0") (ifseqformula "40"))
                                       (rule "applyEq" (formula "44") (term "1,1,0") (ifseqformula "40"))
                                       (rule "applyEq" (formula "56") (term "1,1,0") (ifseqformula "40"))
                                       (rule "applyEq" (formula "20") (term "1,1,0") (ifseqformula "40"))
                                       (rule "add_literals" (formula "20") (term "1,0"))
                                       (rule "applyEq" (formula "54") (term "1,1,1,0,0,0,0,0") (ifseqformula "40"))
                                       (rule "add_literals" (formula "54") (term "1,1,0,0,0,0,0"))
                                       (rule "applyEq" (formula "31") (term "0") (ifseqformula "40"))
                                       (rule "leq_literals" (formula "31"))
                                       (rule "true_left" (formula "31"))
                                       (rule "applyEq" (formula "27") (term "1,1,0") (ifseqformula "39"))
                                       (rule "applyEq" (formula "58") (term "1,1,1,0,0,1,1,0,0,0,0,0") (ifseqformula "39"))
                                       (rule "add_literals" (formula "58") (term "1,1,0,0,1,1,0,0,0,0,0"))
                                       (rule "applyEq" (formula "55") (term "1,1,1,0,0,1,1,0,0,0,0,0") (ifseqformula "39"))
                                       (rule "add_literals" (formula "55") (term "1,1,0,0,1,1,0,0,0,0,0"))
                                       (rule "applyEq" (formula "28") (term "1,1,0,0") (ifseqformula "39"))
                                       (rule "applyEq" (formula "24") (term "1,1,0") (ifseqformula "39"))
                                       (rule "applyEq" (formula "51") (term "0") (ifseqformula "39"))
                                       (rule "inEqSimp_homoInEq1" (formula "51"))
                                       (rule "mul_literals" (formula "51") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "51") (term "0"))
                                       (rule "add_literals" (formula "51") (term "0,0"))
                                       (rule "add_zero_left" (formula "51") (term "0"))
                                       (rule "applyEq" (formula "60") (term "1,1,0,0") (ifseqformula "39"))
                                       (rule "applyEq" (formula "33") (term "1,1,1,0") (ifseqformula "39"))
                                       (rule "add_literals" (formula "33") (term "1,1,0"))
                                       (rule "applyEq" (formula "44") (term "1,1,0") (ifseqformula "39"))
                                       (rule "applyEq" (formula "29") (term "1,1,0,0,0") (ifseqformula "39"))
                                       (rule "applyEq" (formula "25") (term "1,1,0") (ifseqformula "39"))
                                       (rule "applyEq" (formula "47") (term "0") (ifseqformula "39"))
                                       (rule "inEqSimp_homoInEq1" (formula "47"))
                                       (rule "mul_literals" (formula "47") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "47") (term "0"))
                                       (rule "add_literals" (formula "47") (term "0,0"))
                                       (rule "add_zero_left" (formula "47") (term "0"))
                                       (rule "applyEq" (formula "26") (term "1,1,1,0") (ifseqformula "39"))
                                       (rule "add_literals" (formula "26") (term "1,1,0"))
                                       (rule "applyEq" (formula "37") (term "1,1,0") (ifseqformula "39"))
                                       (rule "add_literals" (formula "37") (term "1,0"))
                                       (rule "applyEq" (formula "29") (term "1,1,0,0,0,0,0") (ifseqformula "39"))
                                       (rule "applyEq" (formula "40") (term "0") (ifseqformula "39"))
                                       (rule "qeq_literals" (formula "40"))
                                       (rule "true_left" (formula "40"))
                                       (rule "applyEq" (formula "17") (term "1,1,1,0,0,1,0") (ifseqformula "39"))
                                       (rule "add_literals" (formula "17") (term "1,1,0,0,1,0"))
                                       (rule "applyEq" (formula "57") (term "1,1,1,0") (ifseqformula "39"))
                                       (rule "add_literals" (formula "57") (term "1,1,0"))
                                       (rule "applyEq" (formula "47") (term "1,1,0") (ifseqformula "39"))
                                       (rule "add_literals" (formula "47") (term "1,0"))
                                       (rule "applyEq" (formula "37") (term "0") (ifseqformula "35"))
                                       (rule "eqSymm" (formula "37"))
                                       (rule "applyEq" (formula "51") (term "0") (ifseqformula "47"))
                                       (rule "applyEq" (formula "21") (term "0") (ifseqformula "20"))
                                       (rule "applyEq" (formula "64") (term "0") (ifseqformula "37"))
                                       (rule "applyEq" (formula "20") (term "1,1") (ifseqformula "37"))
                                       (rule "applyEq" (formula "23") (term "1,1") (ifseqformula "37"))
                                       (rule "applyEq" (formula "36") (term "1,0") (ifseqformula "37"))
                                       (rule "applyEq" (formula "30") (term "1,0") (ifseqformula "36"))
                                       (rule "applyEq" (formula "43") (term "1") (ifseqformula "36"))
                                       (rule "applyEq" (formula "52") (term "1,1") (ifseqformula "36"))
                                       (rule "applyEq" (formula "26") (term "1,0,0,0,0") (ifseqformula "36"))
                                       (rule "applyEq" (formula "46") (term "1,1") (ifseqformula "36"))
                                       (rule "applyEq" (formula "50") (term "1,0") (ifseqformula "36"))
                                       (builtin "One Step Simplification" (formula "50"))
                                       (rule "true_left" (formula "50"))
                                       (rule "applyEq" (formula "39") (term "1") (ifseqformula "38"))
                                       (rule "applyEq" (formula "56") (term "1") (ifseqformula "38"))
                                       (rule "applyEq" (formula "37") (term "1") (ifseqformula "38"))
                                       (rule "applyEq" (formula "21") (term "1,0") (ifseqformula "36"))
                                       (builtin "One Step Simplification" (formula "21"))
                                       (rule "true_left" (formula "21"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "9"))
                                       (rule "mul_literals" (formula "9") (term "1"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "53") (term "1"))
                                       (rule "mul_literals" (formula "53") (term "1,1"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1"))
                                       (rule "mul_literals" (formula "30") (term "1,1"))
                                       (rule "inEqSimp_contradInEq0" (formula "10") (ifseqformula "9"))
                                       (rule "qeq_literals" (formula "10") (term "0"))
                                       (builtin "One Step Simplification" (formula "10"))
                                       (rule "closeFalse" (formula "10"))
                                    )
                                    (branch "CUT: self.size ≤ 1 FALSE"
                                       (builtin "One Step Simplification" (formula "31"))
                                       (rule "inEqSimp_leqRight" (formula "63"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                       (rule "mul_literals" (formula "1") (term "1"))
                                       (rule "inEqSimp_subsumption1" (formula "41") (ifseqformula "1"))
                                       (rule "leq_literals" (formula "41") (term "0"))
                                       (builtin "One Step Simplification" (formula "41"))
                                       (rule "true_left" (formula "41"))
                                       (rule "commute_or_2" (formula "29") (term "0"))
                                       (rule "commute_and_2" (formula "53") (term "0,0,0,0"))
                                       (rule "allLeft" (formula "58") (inst "t=j_0"))
                                       (rule "inEqSimp_homoInEq1" (formula "58") (term "1"))
                                       (rule "polySimp_addComm1" (formula "58") (term "0,1"))
                                       (rule "applyEq" (formula "58") (term "1,0,0,0") (ifseqformula "45"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "58") (term "1"))
                                       (rule "polySimp_mulComm0" (formula "58") (term "1,1"))
                                       (rule "polySimp_rightDist" (formula "58") (term "1,1"))
                                       (rule "mul_literals" (formula "58") (term "0,1,1"))
                                       (rule "polySimp_mulLiterals" (formula "58") (term "1,1,1"))
                                       (rule "polySimp_elimOne" (formula "58") (term "1,1,1"))
                                       (rule "inEqSimp_contradInEq1" (formula "58") (term "1,0") (ifseqformula "46"))
                                       (rule "qeq_literals" (formula "58") (term "0,1,0"))
                                       (builtin "One Step Simplification" (formula "58"))
                                       (rule "pullOutSelect" (formula "58") (term "0,0") (inst "selectSK=IntNode_next_4"))
                                       (rule "simplifySelectOfAnon" (formula "58"))
                                       (builtin "One Step Simplification" (formula "58") (ifInst ""  (formula "67")) (ifInst ""  (formula "38")))
                                       (rule "eqSymm" (formula "59") (term "0"))
                                       (rule "applyEq" (formula "58") (term "2,0") (ifseqformula "31"))
                                       (rule "elementOfUnion" (formula "58") (term "0,0"))
                                       (rule "elementOfInfiniteUnion" (formula "58") (term "1,0,0"))
                                       (builtin "One Step Simplification" (formula "58"))
                                       (rule "elementOfSingleton" (formula "58") (term "1,0,1,0,0"))
                                       (builtin "One Step Simplification" (formula "58"))
                                       (rule "elementOfSingleton" (formula "58") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "58"))
                                       (rule "applyEqReverse" (formula "59") (term "1,0") (ifseqformula "58"))
                                       (rule "hideAuxiliaryEq" (formula "58"))
                                       (rule "allLeft" (formula "30") (inst "t=j_0"))
                                       (rule "inEqSimp_commuteGeq" (formula "30") (term "1,0,0,0,0"))
                                       (rule "applyEq" (formula "30") (term "1,0,0,0,0,0,0,0") (ifseqformula "46"))
                                       (rule "inEqSimp_contradInEq1" (formula "30") (term "1,0,0,0,0") (ifseqformula "48"))
                                       (rule "inEqSimp_homoInEq1" (formula "30") (term "0,1,0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,1,0,0,0,0"))
                                       (rule "add_literals" (formula "30") (term "1,1,0,0,1,0,0,0,0"))
                                       (rule "times_zero_1" (formula "30") (term "1,0,0,1,0,0,0,0"))
                                       (rule "add_zero_right" (formula "30") (term "0,0,1,0,0,0,0"))
                                       (rule "leq_literals" (formula "30") (term "0,1,0,0,0,0"))
                                       (builtin "One Step Simplification" (formula "30"))
                                       (rule "inEqSimp_contradInEq1" (formula "30") (term "1,0,0,0,0") (ifseqformula "47"))
                                       (rule "qeq_literals" (formula "30") (term "0,1,0,0,0,0"))
                                       (builtin "One Step Simplification" (formula "30"))
                                       (rule "allLeft" (formula "36") (inst "t=j_0"))
                                       (rule "inEqSimp_homoInEq1" (formula "36") (term "1"))
                                       (rule "polySimp_addComm1" (formula "36") (term "0,1"))
                                       (rule "applyEq" (formula "36") (term "1,0,0,0") (ifseqformula "47"))
                                       (rule "eqSymm" (formula "36") (term "0,0"))
                                       (rule "applyEq" (formula "36") (term "1,0,0") (ifseqformula "32"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1"))
                                       (rule "polySimp_mulComm0" (formula "36") (term "1,1"))
                                       (rule "polySimp_rightDist" (formula "36") (term "1,1"))
                                       (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1"))
                                       (rule "mul_literals" (formula "36") (term "0,1,1"))
                                       (rule "polySimp_elimOne" (formula "36") (term "1,1,1"))
                                       (rule "inEqSimp_contradInEq1" (formula "36") (term "1,0") (ifseqformula "48"))
                                       (rule "qeq_literals" (formula "36") (term "0,1,0"))
                                       (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "60")))
                                       (rule "true_left" (formula "36"))
                                       (rule "seqGetAlphaCast" (formula "50") (term "0"))
                                       (rule "castedGetAny" (formula "50") (term "0"))
                                       (builtin "One Step Simplification" (formula "50"))
                                       (rule "true_left" (formula "50"))
                                       (rule "seqGetAlphaCast" (formula "53") (term "0"))
                                       (rule "castDel" (formula "53") (term "0"))
                                       (builtin "One Step Simplification" (formula "53"))
                                       (rule "true_left" (formula "53"))
                                       (rule "cut_direct" (formula "34") (term "1"))
                                       (branch "CUT: self.size ≤ 2 + i_2_0 TRUE"
                                          (builtin "One Step Simplification" (formula "35"))
                                          (rule "true_left" (formula "35"))
                                          (rule "replace_known_left" (formula "58") (term "1") (ifseqformula "34"))
                                          (builtin "One Step Simplification" (formula "58"))
                                          (rule "true_left" (formula "58"))
                                          (rule "inEqSimp_antiSymm" (formula "10") (ifseqformula "34"))
                                          (rule "applyEq" (formula "53") (term "0") (ifseqformula "10"))
                                          (rule "inEqSimp_homoInEq1" (formula "53"))
                                          (rule "polySimp_mulComm0" (formula "53") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "53") (term "1,0"))
                                          (rule "mul_literals" (formula "53") (term "0,1,0"))
                                          (rule "polySimp_addComm1" (formula "53") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "53") (term "0,0"))
                                          (rule "add_literals" (formula "53") (term "0,0,0"))
                                          (rule "applyEq" (formula "62") (term "1,1,0,0") (ifseqformula "10"))
                                          (rule "applyEq" (formula "60") (term "1,1,1,0,0,1,1,0,0,0,0,0") (ifseqformula "10"))
                                          (rule "polySimp_addAssoc" (formula "60") (term "1,1,0,0,1,1,0,0,0,0,0"))
                                          (rule "add_literals" (formula "60") (term "0,1,1,0,0,1,1,0,0,0,0,0"))
                                          (rule "applyEq" (formula "26") (term "1,1,0") (ifseqformula "10"))
                                          (rule "applyEq" (formula "32") (term "1,1,0,0,0,0,0") (ifseqformula "10"))
                                          (rule "applyEq" (formula "22") (term "1,1,0") (ifseqformula "10"))
                                          (rule "polySimp_addAssoc" (formula "22") (term "1,0"))
                                          (rule "add_literals" (formula "22") (term "0,1,0"))
                                          (rule "applyEq" (formula "1") (term "0") (ifseqformula "10"))
                                          (rule "inEqSimp_homoInEq1" (formula "1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                          (rule "mul_literals" (formula "1") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "applyEq" (formula "55") (term "1,1,1,0,0,0,0") (ifseqformula "10"))
                                          (rule "polySimp_addAssoc" (formula "55") (term "1,1,0,0,0,0"))
                                          (rule "add_literals" (formula "55") (term "0,1,1,0,0,0,0"))
                                          (rule "applyEq" (formula "29") (term "1,1,0") (ifseqformula "10"))
                                          (rule "applyEq" (formula "27") (term "1,1,0") (ifseqformula "10"))
                                          (rule "applyEq" (formula "57") (term "1,1,1,0,0,1,1,0,0,0,0,0") (ifseqformula "10"))
                                          (rule "polySimp_addAssoc" (formula "57") (term "1,1,0,0,1,1,0,0,0,0,0"))
                                          (rule "add_literals" (formula "57") (term "0,1,1,0,0,1,1,0,0,0,0,0"))
                                          (rule "applyEq" (formula "50") (term "1,1,0") (ifseqformula "10"))
                                          (rule "polySimp_addAssoc" (formula "50") (term "1,0"))
                                          (rule "add_literals" (formula "50") (term "0,1,0"))
                                          (rule "applyEq" (formula "8") (term "0") (ifseqformula "10"))
                                          (rule "inEqSimp_homoInEq1" (formula "8"))
                                          (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "8") (term "1,0"))
                                          (rule "mul_literals" (formula "8") (term "0,1,0"))
                                          (rule "polySimp_addComm1" (formula "8") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                                          (rule "add_literals" (formula "8") (term "0,0,0"))
                                          (rule "applyEq" (formula "60") (term "1,1,1,0") (ifseqformula "10"))
                                          (rule "polySimp_addAssoc" (formula "60") (term "1,1,0"))
                                          (rule "add_literals" (formula "60") (term "0,1,1,0"))
                                          (rule "applyEq" (formula "31") (term "1,1,0,0") (ifseqformula "10"))
                                          (rule "applyEq" (formula "11") (term "0") (ifseqformula "10"))
                                          (rule "inEqSimp_homoInEq1" (formula "11"))
                                          (rule "polySimp_pullOutFactor1" (formula "11") (term "0"))
                                          (rule "add_literals" (formula "11") (term "1,0"))
                                          (rule "times_zero_1" (formula "11") (term "0"))
                                          (rule "leq_literals" (formula "11"))
                                          (rule "true_left" (formula "11"))
                                          (rule "applyEq" (formula "58") (term "0,1") (ifseqformula "10"))
                                          (rule "inEqSimp_homoInEq0" (formula "58") (term "1"))
                                          (rule "polySimp_mulComm0" (formula "58") (term "1,0,1"))
                                          (rule "polySimp_rightDist" (formula "58") (term "1,0,1"))
                                          (rule "mul_literals" (formula "58") (term "0,1,0,1"))
                                          (rule "polySimp_addComm1" (formula "58") (term "0,1"))
                                          (rule "polySimp_addAssoc" (formula "58") (term "0,0,1"))
                                          (rule "add_literals" (formula "58") (term "0,0,0,1"))
                                          (rule "applyEq" (formula "18") (term "1,1,1,0,0,1,0") (ifseqformula "10"))
                                          (rule "polySimp_addAssoc" (formula "18") (term "1,1,0,0,1,0"))
                                          (rule "add_literals" (formula "18") (term "0,1,1,0,0,1,0"))
                                          (rule "applyEq" (formula "40") (term "1,1,0") (ifseqformula "10"))
                                          (rule "polySimp_addAssoc" (formula "40") (term "1,0"))
                                          (rule "add_literals" (formula "40") (term "0,1,0"))
                                          (rule "applyEq" (formula "27") (term "1,1,1,0") (ifseqformula "10"))
                                          (rule "polySimp_addAssoc" (formula "27") (term "1,1,0"))
                                          (rule "add_literals" (formula "27") (term "0,1,1,0"))
                                          (rule "applyEq" (formula "56") (term "1,1,0") (ifseqformula "10"))
                                          (rule "applyEq" (formula "19") (term "1,1,0") (ifseqformula "10"))
                                          (rule "applyEq" (formula "31") (term "1,1,0,0,0") (ifseqformula "10"))
                                          (rule "applyEq" (formula "44") (term "1,1,0") (ifseqformula "10"))
                                          (rule "applyEq" (formula "45") (term "1,1,0") (ifseqformula "10"))
                                          (rule "applyEq" (formula "34") (term "0") (ifseqformula "10"))
                                          (rule "inEqSimp_homoInEq0" (formula "34"))
                                          (rule "polySimp_pullOutFactor1" (formula "34") (term "0"))
                                          (rule "add_literals" (formula "34") (term "1,0"))
                                          (rule "times_zero_1" (formula "34") (term "0"))
                                          (rule "qeq_literals" (formula "34"))
                                          (rule "true_left" (formula "34"))
                                          (rule "applyEq" (formula "47") (term "0") (ifseqformula "10"))
                                          (rule "inEqSimp_homoInEq1" (formula "47"))
                                          (rule "polySimp_mulComm0" (formula "47") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "47") (term "1,0"))
                                          (rule "mul_literals" (formula "47") (term "0,1,0"))
                                          (rule "polySimp_addComm1" (formula "47") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "47") (term "0,0"))
                                          (rule "add_literals" (formula "47") (term "0,0,0"))
                                          (rule "applyEq" (formula "3") (term "0") (ifseqformula "10"))
                                          (rule "inEqSimp_homoInEq1" (formula "3"))
                                          (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                          (rule "mul_literals" (formula "3") (term "0,1,0"))
                                          (rule "polySimp_addComm1" (formula "3") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                          (rule "add_literals" (formula "3") (term "0,0,0"))
                                          (rule "applyEq" (formula "35") (term "1,1,1,0") (ifseqformula "10"))
                                          (rule "polySimp_addAssoc" (formula "35") (term "1,1,0"))
                                          (rule "add_literals" (formula "35") (term "0,1,1,0"))
                                          (rule "applyEq" (formula "29") (term "1,1,0") (ifseqformula "10"))
                                          (rule "applyEq" (formula "16") (term "1,1,0") (ifseqformula "10"))
                                          (rule "applyEq" (formula "17") (term "1,1,0") (ifseqformula "10"))
                                          (rule "applyEq" (formula "63") (term "0") (ifseqformula "39"))
                                          (rule "applyEq" (formula "29") (term "1,0,0,0,0,0") (ifseqformula "39"))
                                          (rule "applyEq" (formula "53") (term "1,1,0,0,0,0,0") (ifseqformula "39"))
                                          (rule "applyEq" (formula "53") (term "1,2,0") (ifseqformula "39"))
                                          (rule "applyEq" (formula "23") (term "0") (ifseqformula "21"))
                                          (rule "eqSymm" (formula "23"))
                                          (rule "applyEq" (formula "53") (term "1,0,0,1,0,0") (ifseqformula "39"))
                                          (rule "replace_known_left" (formula "53") (term "0,1,0,0") (ifseqformula "38"))
                                          (builtin "One Step Simplification" (formula "53"))
                                          (rule "applyEq" (formula "56") (term "1,0,0,0") (ifseqformula "39"))
                                          (rule "replace_known_left" (formula "56") (term "0,0") (ifseqformula "38"))
                                          (builtin "One Step Simplification" (formula "56"))
                                          (rule "hideAuxiliaryEq" (formula "56"))
                                          (rule "applyEq" (formula "34") (term "1") (ifseqformula "39"))
                                          (rule "applyEq" (formula "41") (term "1") (ifseqformula "10"))
                                          (rule "applyEq" (formula "58") (term "1") (ifseqformula "10"))
                                          (rule "applyEq" (formula "40") (term "1") (ifseqformula "10"))
                                          (rule "applyEq" (formula "23") (term "1,0") (ifseqformula "39"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "true_left" (formula "23"))
                                          (rule "applyEq" (formula "52") (term "1") (ifseqformula "47"))
                                          (rule "applyEq" (formula "52") (term "1,1,0") (ifseqformula "38"))
                                          (builtin "One Step Simplification" (formula "52"))
                                          (rule "eqSymm" (formula "52") (term "1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "50"))
                                          (rule "polySimp_mulComm0" (formula "50") (term "1"))
                                          (rule "polySimp_rightDist" (formula "50") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "50") (term "1,1"))
                                          (rule "mul_literals" (formula "50") (term "0,1"))
                                          (rule "polySimp_elimOne" (formula "50") (term "1,1"))
                                          (rule "inEqSimp_invertInEq0" (formula "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                          (rule "times_zero_2" (formula "1") (term "1"))
                                          (rule "polySimp_elimOne" (formula "1") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "7"))
                                          (rule "polySimp_mulComm0" (formula "7") (term "1"))
                                          (rule "polySimp_rightDist" (formula "7") (term "1"))
                                          (rule "mul_literals" (formula "7") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "7") (term "1,1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "54") (term "1"))
                                          (rule "polySimp_mulComm0" (formula "54") (term "1,1"))
                                          (rule "polySimp_rightDist" (formula "54") (term "1,1"))
                                          (rule "mul_literals" (formula "54") (term "0,1,1"))
                                          (rule "polySimp_mulLiterals" (formula "54") (term "1,1,1"))
                                          (rule "polySimp_elimOne" (formula "54") (term "1,1,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "45"))
                                          (rule "polySimp_mulComm0" (formula "45") (term "1"))
                                          (rule "polySimp_rightDist" (formula "45") (term "1"))
                                          (rule "mul_literals" (formula "45") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "45") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "45") (term "1,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                          (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                          (rule "polySimp_rightDist" (formula "2") (term "1"))
                                          (rule "mul_literals" (formula "2") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                          (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                                          (rule "times_zero_1" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                          (rule "mul_literals" (formula "1") (term "1"))
                                          (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "11"))
                                          (rule "leq_literals" (formula "1") (term "0"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "true_left" (formula "1"))
                                          (rule "inEqSimp_exactShadow3" (formula "44") (ifseqformula "45"))
                                          (rule "times_zero_1" (formula "44") (term "0,0"))
                                          (rule "add_zero_left" (formula "44") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "44"))
                                          (rule "mul_literals" (formula "44") (term "1"))
                                          (rule "inEqSimp_subsumption1" (formula "44") (ifseqformula "10"))
                                          (rule "leq_literals" (formula "44") (term "0"))
                                          (builtin "One Step Simplification" (formula "44"))
                                          (rule "true_left" (formula "44"))
                                          (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "7"))
                                          (rule "times_zero_1" (formula "6") (term "0,0"))
                                          (rule "add_zero_left" (formula "6") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                          (rule "mul_literals" (formula "6") (term "1"))
                                          (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "11"))
                                          (rule "leq_literals" (formula "6") (term "0"))
                                          (builtin "One Step Simplification" (formula "6"))
                                          (rule "true_left" (formula "6"))
                                          (rule "inEqSimp_exactShadow3" (formula "48") (ifseqformula "49"))
                                          (rule "times_zero_1" (formula "48") (term "0,0"))
                                          (rule "add_zero_left" (formula "48") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "48"))
                                          (rule "mul_literals" (formula "48") (term "1"))
                                          (rule "inEqSimp_subsumption1" (formula "48") (ifseqformula "10"))
                                          (rule "leq_literals" (formula "48") (term "0"))
                                          (builtin "One Step Simplification" (formula "48"))
                                          (rule "true_left" (formula "48"))
                                          (rule "inEqSimp_or_weaken3" (formula "27") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "27") (term "1,0,1,0"))
                                          (rule "add_literals" (formula "27") (term "0,1,0,1,0"))
                                          (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "25")))
                                          (rule "true_left" (formula "27"))
                                          (rule "seqGetAlphaCast" (formula "3") (term "0"))
                                          (rule "castedGetAny" (formula "3") (term "0"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "true_left" (formula "3"))
                                          (rule "seqGetAlphaCast" (formula "22") (term "0"))
                                          (rule "castDel" (formula "22") (term "0"))
                                          (builtin "One Step Simplification" (formula "22"))
                                          (rule "true_left" (formula "22"))
                                          (rule "seqGetAlphaCast" (formula "51") (term "0"))
                                          (rule "castDel" (formula "51") (term "0"))
                                          (builtin "One Step Simplification" (formula "51"))
                                          (rule "true_left" (formula "51"))
                                          (rule "seqGetAlphaCast" (formula "5") (term "0"))
                                          (rule "castedGetAny" (formula "5") (term "0"))
                                          (builtin "One Step Simplification" (formula "5"))
                                          (rule "true_left" (formula "5"))
                                          (rule "commute_and" (formula "50") (term "0,0,0"))
                                          (rule "allLeft" (formula "26") (inst "t=j_1_0"))
                                          (rule "replace_known_right" (formula "26") (term "1,0") (ifseqformula "64"))
                                          (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "3")))
                                          (rule "inEqSimp_contradInEq1" (formula "26") (term "0") (ifseqformula "1"))
                                          (rule "qeq_literals" (formula "26") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "26"))
                                          (rule "inEqSimp_contradEq7" (formula "64") (ifseqformula "26"))
                                          (rule "polySimp_mulComm0" (formula "64") (term "1,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "64") (term "0,0"))
                                          (rule "add_literals" (formula "64") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "64") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "64") (term "0,0"))
                                          (rule "leq_literals" (formula "64") (term "0"))
                                          (builtin "One Step Simplification" (formula "64"))
                                          (rule "false_right" (formula "64"))
                                          (rule "inEqSimp_contradInEq0" (formula "26") (ifseqformula "2"))
                                          (rule "andLeft" (formula "26"))
                                          (rule "inEqSimp_homoInEq1" (formula "26"))
                                          (rule "polySimp_mulComm0" (formula "26") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "26") (term "1,0"))
                                          (rule "mul_literals" (formula "26") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "26") (term "0"))
                                          (rule "polySimp_addComm1" (formula "26") (term "0,0"))
                                          (rule "add_literals" (formula "26") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "26") (term "0"))
                                          (rule "add_literals" (formula "26") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "26") (term "1,0"))
                                          (rule "add_literals" (formula "26") (term "0"))
                                          (rule "leq_literals" (formula "26"))
                                          (rule "closeFalse" (formula "26"))
                                       )
                                       (branch "CUT: self.size ≤ 2 + i_2_0 FALSE"
                                          (builtin "One Step Simplification" (formula "34"))
                                          (rule "replace_known_right" (formula "58") (term "1") (ifseqformula "65"))
                                          (builtin "One Step Simplification" (formula "58"))
                                          (rule "applyEqReverse" (formula "57") (term "1") (ifseqformula "58"))
                                          (rule "hideAuxiliaryEq" (formula "58"))
                                          (rule "inEqSimp_leqRight" (formula "64"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                          (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,0"))
                                          (rule "applyEq" (formula "58") (term "1,0") (ifseqformula "35"))
                                          (builtin "One Step Simplification" (formula "58"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1"))
                                          (rule "mul_literals" (formula "1") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                          (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "1"))
                                          (rule "inEqSimp_homoInEq0" (formula "11") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "11") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "11") (term "1,0,0"))
                                          (rule "mul_literals" (formula "11") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "11") (term "0,0"))
                                          (rule "polySimp_addComm1" (formula "11") (term "0,0,0"))
                                          (rule "add_literals" (formula "11") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0"))
                                          (rule "add_literals" (formula "11") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "11") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "11") (term "0,0"))
                                          (rule "qeq_literals" (formula "11") (term "0"))
                                          (builtin "One Step Simplification" (formula "11"))
                                          (rule "true_left" (formula "11"))
                                          (rule "seqGetAlphaCast" (formula "23") (term "0"))
                                          (rule "castDel" (formula "23") (term "0"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "true_left" (formula "23"))
                                          (rule "seqGetAlphaCast" (formula "23") (term "1,1"))
                                          (rule "castedGetAny" (formula "23") (term "0"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "true_left" (formula "23"))
                                          (rule "commute_or_2" (formula "30") (term "0"))
                                          (rule "seqGetAlphaCast" (formula "5") (term "0"))
                                          (rule "castedGetAny" (formula "5") (term "0"))
                                          (builtin "One Step Simplification" (formula "5"))
                                          (rule "true_left" (formula "5"))
                                          (rule "seqGetAlphaCast" (formula "54") (term "1"))
                                          (rule "castDel" (formula "54") (term "0"))
                                          (builtin "One Step Simplification" (formula "54"))
                                          (rule "true_left" (formula "54"))
                                          (rule "allLeft" (formula "45") (inst "t=add(Z(1(#)), i_2_0)"))
                                          (rule "typeEqDerived2" (formula "45") (term "0,0,0") (ifseqformula "55"))
                                          (builtin "One Step Simplification" (formula "45"))
                                          (rule "true_left" (formula "45"))
                                          (rule "allLeft" (formula "17") (inst "t=add(Z(1(#)), i_2_0)"))
                                          (rule "typeEqDerived" (formula "17") (term "0,0,0") (ifseqformula "24"))
                                          (builtin "One Step Simplification" (formula "17"))
                                          (rule "true_left" (formula "17"))
                                          (rule "allLeft" (formula "44") (inst "t=add(Z(1(#)), i_2_0)"))
                                          (rule "inEqSimp_commuteGeq" (formula "44") (term "1"))
                                          (rule "inEqSimp_homoInEq0" (formula "44") (term "1,0"))
                                          (rule "polySimp_mulComm0" (formula "44") (term "1,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "44") (term "1,0,1,0"))
                                          (rule "mul_literals" (formula "44") (term "0,1,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "44") (term "0,1,0"))
                                          (rule "add_literals" (formula "44") (term "0,0,1,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "44") (term "1,0"))
                                          (rule "polySimp_mulLiterals" (formula "44") (term "0,1,0"))
                                          (rule "polySimp_elimOne" (formula "44") (term "0,1,0"))
                                          (rule "inEqSimp_contradInEq1" (formula "44") (term "1") (ifseqformula "1"))
                                          (rule "inEqSimp_homoInEq1" (formula "44") (term "0,1"))
                                          (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "44") (term "1,0,0,1"))
                                          (rule "mul_literals" (formula "44") (term "0,1,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "44") (term "0,0,1"))
                                          (rule "polySimp_addComm1" (formula "44") (term "0,0,0,1"))
                                          (rule "add_literals" (formula "44") (term "0,0,0,0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "44") (term "0,0,1"))
                                          (rule "add_literals" (formula "44") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "44") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "44") (term "0,0,1"))
                                          (rule "leq_literals" (formula "44") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "44"))
                                          (rule "inEqSimp_contradInEq1" (formula "44") (term "1") (ifseqformula "11"))
                                          (rule "qeq_literals" (formula "44") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "44"))
                                          (rule "notLeft" (formula "44"))
                                          (rule "allLeft" (formula "19") (inst "t=j_1"))
                                          (rule "inEqSimp_commuteGeq" (formula "19") (term "1"))
                                          (rule "applyEq" (formula "19") (term "0,0,0,0") (ifseqformula "51"))
                                          (rule "replace_known_right" (formula "19") (term "0,0,0") (ifseqformula "67"))
                                          (builtin "One Step Simplification" (formula "19"))
                                          (rule "true_left" (formula "19"))
                                          (rule "allLeft" (formula "19") (inst "t=j_1_0"))
                                          (rule "inEqSimp_commuteGeq" (formula "19") (term "1"))
                                          (rule "applyEq" (formula "19") (term "0,0,0,0") (ifseqformula "5"))
                                          (rule "replace_known_right" (formula "19") (term "0,0,0") (ifseqformula "69"))
                                          (builtin "One Step Simplification" (formula "19"))
                                          (rule "true_left" (formula "19"))
                                          (rule "allLeft" (formula "16") (inst "t=add(Z(1(#)), i_2_0)"))
                                          (rule "inEqSimp_commuteGeq" (formula "16") (term "1"))
                                          (rule "inEqSimp_homoInEq0" (formula "16") (term "1,0"))
                                          (rule "polySimp_mulComm0" (formula "16") (term "1,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "16") (term "1,0,1,0"))
                                          (rule "mul_literals" (formula "16") (term "0,1,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "16") (term "0,1,0"))
                                          (rule "add_literals" (formula "16") (term "0,0,1,0"))
                                          (rule "applyEq" (formula "16") (term "0,0,0,0") (ifseqformula "24"))
                                          (builtin "One Step Simplification" (formula "16"))
                                          (rule "true_left" (formula "16"))
                                          (rule "allLeft" (formula "25") (inst "t=j_1"))
                                          (rule "inEqSimp_commuteGeq" (formula "25") (term "1"))
                                          (rule "applyEq" (formula "25") (term "1,1,0,0") (ifseqformula "51"))
                                          (rule "inEqSimp_contradInEq1" (formula "25") (term "1") (ifseqformula "53"))
                                          (rule "inEqSimp_homoInEq1" (formula "25") (term "0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,1"))
                                          (rule "add_literals" (formula "25") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "25") (term "1,0,0,1"))
                                          (rule "add_literals" (formula "25") (term "0,0,1"))
                                          (rule "leq_literals" (formula "25") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "25"))
                                          (rule "inEqSimp_contradInEq1" (formula "25") (term "1") (ifseqformula "52"))
                                          (rule "qeq_literals" (formula "25") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "25"))
                                          (rule "allLeft" (formula "26") (inst "t=j_1_0"))
                                          (rule "inEqSimp_commuteGeq" (formula "26") (term "1"))
                                          (rule "applyEq" (formula "26") (term "1,1,0,0") (ifseqformula "5"))
                                          (rule "inEqSimp_contradInEq1" (formula "26") (term "1,0") (ifseqformula "3"))
                                          (rule "qeq_literals" (formula "26") (term "0,1,0"))
                                          (builtin "One Step Simplification" (formula "26"))
                                          (rule "inEqSimp_contradInEq1" (formula "26") (term "1") (ifseqformula "4"))
                                          (rule "inEqSimp_homoInEq1" (formula "26") (term "0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,1"))
                                          (rule "add_literals" (formula "26") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "26") (term "1,0,0,1"))
                                          (rule "add_literals" (formula "26") (term "0,0,1"))
                                          (rule "leq_literals" (formula "26") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "26"))
                                          (rule "allLeft" (formula "58") (inst "t=j_1"))
                                          (rule "inEqSimp_commuteGeq" (formula "58") (term "1"))
                                          (rule "applyEq" (formula "58") (term "1,0,0,0") (ifseqformula "52"))
                                          (rule "replaceKnownSelect_taclet1011011_18" (formula "58") (term "0,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet1011011_19" (formula "58") (term "0,0,0"))
                                          (rule "eqSymm" (formula "58") (term "0,0"))
                                          (rule "applyEq" (formula "58") (term "1,0,0") (ifseqformula "55"))
                                          (rule "inEqSimp_contradInEq1" (formula "58") (term "1,0") (ifseqformula "53"))
                                          (rule "qeq_literals" (formula "58") (term "0,1,0"))
                                          (builtin "One Step Simplification" (formula "58"))
                                          (rule "inEqSimp_contradInEq1" (formula "58") (term "1") (ifseqformula "54"))
                                          (rule "inEqSimp_homoInEq1" (formula "58") (term "0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "58") (term "0,0,1"))
                                          (rule "add_literals" (formula "58") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "58") (term "1,0,0,1"))
                                          (rule "add_literals" (formula "58") (term "0,0,1"))
                                          (rule "leq_literals" (formula "58") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "58"))
                                          (rule "allLeft" (formula "59") (inst "t=j_1_0"))
                                          (rule "inEqSimp_commuteGeq" (formula "59") (term "1"))
                                          (rule "applyEq" (formula "59") (term "1,0,0,0") (ifseqformula "5"))
                                          (rule "replaceKnownSelect_taclet1011011_14" (formula "59") (term "0,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet1011011_20" (formula "59") (term "0,0,0"))
                                          (rule "eqSymm" (formula "59") (term "0,0"))
                                          (rule "applyEq" (formula "59") (term "1,0,0") (ifseqformula "10"))
                                          (rule "inEqSimp_contradInEq1" (formula "59") (term "1,0") (ifseqformula "3"))
                                          (rule "qeq_literals" (formula "59") (term "0,1,0"))
                                          (builtin "One Step Simplification" (formula "59"))
                                          (rule "inEqSimp_contradInEq1" (formula "59") (term "1") (ifseqformula "4"))
                                          (rule "inEqSimp_homoInEq1" (formula "59") (term "0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "59") (term "0,0,1"))
                                          (rule "add_literals" (formula "59") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "59") (term "1,0,0,1"))
                                          (rule "add_literals" (formula "59") (term "0,0,1"))
                                          (rule "leq_literals" (formula "59") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "59"))
                                          (rule "commute_and" (formula "56") (term "0,0,0,0,0"))
                                          (rule "allLeft" (formula "30") (inst "t=j_1_0"))
                                          (rule "replace_known_left" (formula "30") (term "0,0,0,0") (ifseqformula "5"))
                                          (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "75")))
                                          (rule "inEqSimp_commuteGeq" (formula "30") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "30") (term "0") (ifseqformula "3"))
                                          (rule "qeq_literals" (formula "30") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "30"))
                                          (rule "inEqSimp_contradInEq1" (formula "30") (ifseqformula "4"))
                                          (rule "andLeft" (formula "30"))
                                          (rule "inEqSimp_homoInEq1" (formula "30"))
                                          (rule "polySimp_pullOutFactor1b" (formula "30") (term "0"))
                                          (rule "add_literals" (formula "30") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "30") (term "1,0"))
                                          (rule "add_literals" (formula "30") (term "0"))
                                          (rule "leq_literals" (formula "30"))
                                          (rule "closeFalse" (formula "30"))
                                       )
                                    )
                                 )
                                 (branch "∃ int j; ( (IntNode)self.nodeseq[j] = (IntNode)self.nodeseq[i_2_0] ∧ j ≥ 0 ∧ j ≤ -1 + self.size) FALSE"
                                    (rule "eqSymm" (formula "5"))
                                    (rule "applyEq" (formula "65") (term "0") (ifseqformula "5"))
                                    (builtin "One Step Simplification" (formula "65"))
                                    (rule "false_right" (formula "65"))
                                    (rule "nnf_ex2all" (formula "60"))
                                    (rule "nnf_notAnd" (formula "1") (term "0"))
                                    (rule "inEqSimp_notLeq" (formula "1") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0"))
                                    (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,0,1,0"))
                                    (rule "add_zero_left" (formula "1") (term "0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1,1,0"))
                                    (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "1") (term "1,0,0"))
                                    (rule "times_zero_1" (formula "1") (term "1,0,0,1,0,0"))
                                    (rule "add_zero_right" (formula "1") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1,0,0"))
                                    (rule "mul_literals" (formula "1") (term "1,1,0,0"))
                                    (rule "seqGetAlphaCast" (formula "18") (term "0"))
                                    (rule "castDel" (formula "18") (term "0"))
                                    (builtin "One Step Simplification" (formula "18"))
                                    (rule "true_left" (formula "18"))
                                    (rule "seqGetAlphaCast" (formula "19") (term "0"))
                                    (rule "castDel" (formula "19") (term "0"))
                                    (builtin "One Step Simplification" (formula "19"))
                                    (rule "true_left" (formula "19"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "28") (term "0") (ifseqformula "9"))
                                    (rule "replace_known_left" (formula "28") (term "0") (ifseqformula "29"))
                                    (builtin "One Step Simplification" (formula "28"))
                                    (rule "true_left" (formula "28"))
                                    (rule "seqGetAlphaCast" (formula "43") (term "0"))
                                    (rule "castedGetAny" (formula "43") (term "0"))
                                    (builtin "One Step Simplification" (formula "43"))
                                    (rule "true_left" (formula "43"))
                                    (rule "seqGetAlphaCast" (formula "46") (term "0"))
                                    (rule "castDel" (formula "46") (term "0"))
                                    (builtin "One Step Simplification" (formula "46"))
                                    (rule "true_left" (formula "46"))
                                    (rule "commute_or_2" (formula "25") (term "0"))
                                    (rule "seqGetAlphaCast" (formula "29") (term "0,0"))
                                    (rule "castedGetAny" (formula "29") (term "0"))
                                    (builtin "One Step Simplification" (formula "29"))
                                    (rule "true_left" (formula "29"))
                                    (rule "cut_direct" (formula "29") (term "1"))
                                    (branch "CUT: self.size ≤ 1 TRUE"
                                       (builtin "One Step Simplification" (formula "30"))
                                       (rule "true_left" (formula "30"))
                                       (rule "inEqSimp_antiSymm" (formula "38") (ifseqformula "29"))
                                       (rule "applyEq" (formula "54") (term "1,1,0") (ifseqformula "38"))
                                       (rule "applyEq" (formula "57") (term "1,1,1,0") (ifseqformula "38"))
                                       (rule "add_literals" (formula "57") (term "1,1,0"))
                                       (rule "applyEq" (formula "32") (term "1,1,1,0") (ifseqformula "38"))
                                       (rule "add_literals" (formula "32") (term "1,1,0"))
                                       (rule "applyEq" (formula "50") (term "0") (ifseqformula "38"))
                                       (rule "inEqSimp_homoInEq1" (formula "50"))
                                       (rule "mul_literals" (formula "50") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "50") (term "0"))
                                       (rule "add_literals" (formula "50") (term "0,0"))
                                       (rule "add_zero_left" (formula "50") (term "0"))
                                       (rule "applyEq" (formula "54") (term "1,1,1,0,0,1,1,0,0,0,0,0") (ifseqformula "38"))
                                       (rule "add_literals" (formula "54") (term "1,1,0,0,1,1,0,0,0,0,0"))
                                       (rule "applyEq" (formula "24") (term "1,1,1,0") (ifseqformula "38"))
                                       (rule "add_literals" (formula "24") (term "1,1,0"))
                                       (rule "applyEq" (formula "3") (term "0") (ifseqformula "38"))
                                       (rule "inEqSimp_homoInEq1" (formula "3"))
                                       (rule "mul_literals" (formula "3") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "3") (term "0"))
                                       (rule "add_literals" (formula "3") (term "0,0"))
                                       (rule "add_zero_left" (formula "3") (term "0"))
                                       (rule "applyEq" (formula "47") (term "1,1,0") (ifseqformula "38"))
                                       (rule "add_literals" (formula "47") (term "1,0"))
                                       (rule "applyEq" (formula "56") (term "0,1") (ifseqformula "38"))
                                       (rule "inEqSimp_homoInEq0" (formula "56") (term "1"))
                                       (rule "mul_literals" (formula "56") (term "1,0,1"))
                                       (rule "polySimp_addComm1" (formula "56") (term "0,1"))
                                       (rule "add_literals" (formula "56") (term "0,0,1"))
                                       (rule "applyEq" (formula "59") (term "1,1,0,0") (ifseqformula "38"))
                                       (rule "applyEq" (formula "57") (term "1,1,1,0,0,1,1,0,0,0,0,0") (ifseqformula "38"))
                                       (rule "add_literals" (formula "57") (term "1,1,0,0,1,1,0,0,0,0,0"))
                                       (rule "applyEq" (formula "16") (term "1,1,0") (ifseqformula "38"))
                                       (rule "applyEq" (formula "14") (term "1,1,0") (ifseqformula "38"))
                                       (rule "applyEq" (formula "52") (term "1,1,1,0,0,0,0,0") (ifseqformula "38"))
                                       (rule "add_literals" (formula "52") (term "1,1,0,0,0,0,0"))
                                       (rule "applyEq" (formula "1") (term "1,1,0") (ifseqformula "38"))
                                       (rule "applyEq" (formula "30") (term "0,1") (ifseqformula "38"))
                                       (rule "inEqSimp_homoInEq0" (formula "30") (term "1"))
                                       (rule "mul_literals" (formula "30") (term "1,0,1"))
                                       (rule "polySimp_addComm1" (formula "30") (term "0,1"))
                                       (rule "add_literals" (formula "30") (term "0,0,1"))
                                       (rule "applyEq" (formula "46") (term "0") (ifseqformula "38"))
                                       (rule "inEqSimp_homoInEq1" (formula "46"))
                                       (rule "mul_literals" (formula "46") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "46") (term "0"))
                                       (rule "add_literals" (formula "46") (term "0,0"))
                                       (rule "add_zero_left" (formula "46") (term "0"))
                                       (rule "applyEq" (formula "43") (term "1,1,0") (ifseqformula "38"))
                                       (rule "applyEq" (formula "39") (term "0") (ifseqformula "38"))
                                       (rule "qeq_literals" (formula "39"))
                                       (rule "true_left" (formula "39"))
                                       (rule "applyEq" (formula "23") (term "1,1,0") (ifseqformula "38"))
                                       (rule "applyEq" (formula "26") (term "1,1,0,0") (ifseqformula "38"))
                                       (rule "applyEq" (formula "15") (term "1,1,1,0,0,1,0") (ifseqformula "38"))
                                       (rule "add_literals" (formula "15") (term "1,1,0,0,1,0"))
                                       (rule "applyEq" (formula "36") (term "1,1,0") (ifseqformula "38"))
                                       (rule "add_literals" (formula "36") (term "1,0"))
                                       (rule "applyEq" (formula "7") (term "0") (ifseqformula "38"))
                                       (rule "inEqSimp_homoInEq1" (formula "7"))
                                       (rule "mul_literals" (formula "7") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "7") (term "0"))
                                       (rule "add_literals" (formula "7") (term "0,0"))
                                       (rule "applyEq" (formula "18") (term "1,1,0") (ifseqformula "38"))
                                       (rule "add_literals" (formula "18") (term "1,0"))
                                       (rule "applyEq" (formula "27") (term "1,1,0,0,0") (ifseqformula "38"))
                                       (rule "applyEq" (formula "29") (term "0") (ifseqformula "38"))
                                       (rule "leq_literals" (formula "29"))
                                       (rule "true_left" (formula "29"))
                                       (rule "applyEq" (formula "40") (term "1,1,0") (ifseqformula "37"))
                                       (rule "applyEq" (formula "22") (term "1,1,0") (ifseqformula "37"))
                                       (rule "applyEq" (formula "27") (term "1,1,0,0,0,0,0") (ifseqformula "37"))
                                       (rule "applyEq" (formula "25") (term "1,1,0") (ifseqformula "37"))
                                       (rule "applyEq" (formula "13") (term "1,1,0") (ifseqformula "37"))
                                       (rule "applyEq" (formula "33") (term "0") (ifseqformula "35"))
                                       (rule "applyEq" (formula "18") (term "0") (ifseqformula "19"))
                                       (rule "eqSymm" (formula "18"))
                                       (rule "applyEq" (formula "49") (term "0") (ifseqformula "45"))
                                       (rule "applyEq" (formula "42") (term "1") (ifseqformula "33"))
                                       (rule "applyEq" (formula "51") (term "1,1") (ifseqformula "33"))
                                       (rule "applyEq" (formula "34") (term "1,0") (ifseqformula "33"))
                                       (rule "applyEq" (formula "28") (term "1,0") (ifseqformula "33"))
                                       (rule "applyEq" (formula "34") (term "1") (ifseqformula "33"))
                                       (rule "applyEq" (formula "44") (term "1,1") (ifseqformula "33"))
                                       (rule "applyEq" (formula "24") (term "1,0,0,0,0") (ifseqformula "33"))
                                       (rule "applyEq" (formula "61") (term "0") (ifseqformula "33"))
                                       (rule "applyEq" (formula "21") (term "1,1") (ifseqformula "33"))
                                       (rule "applyEq" (formula "55") (term "1") (ifseqformula "36"))
                                       (rule "applyEq" (formula "35") (term "1") (ifseqformula "36"))
                                       (rule "applyEq" (formula "37") (term "1") (ifseqformula "36"))
                                       (rule "applyEq" (formula "18") (term "1,0") (ifseqformula "33"))
                                       (builtin "One Step Simplification" (formula "18"))
                                       (rule "true_left" (formula "18"))
                                       (rule "applyEq" (formula "47") (term "1,0") (ifseqformula "32"))
                                       (builtin "One Step Simplification" (formula "47"))
                                       (rule "true_left" (formula "47"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "51") (term "1"))
                                       (rule "mul_literals" (formula "51") (term "1,1"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "1"))
                                       (rule "mul_literals" (formula "28") (term "1,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "7"))
                                       (rule "mul_literals" (formula "7") (term "1"))
                                       (rule "inEqSimp_contradInEq0" (formula "8") (ifseqformula "7"))
                                       (rule "qeq_literals" (formula "8") (term "0"))
                                       (builtin "One Step Simplification" (formula "8"))
                                       (rule "closeFalse" (formula "8"))
                                    )
                                    (branch "CUT: self.size ≤ 1 FALSE"
                                       (builtin "One Step Simplification" (formula "29"))
                                       (rule "inEqSimp_leqRight" (formula "61"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                       (rule "mul_literals" (formula "1") (term "1"))
                                       (rule "inEqSimp_subsumption1" (formula "39") (ifseqformula "1"))
                                       (rule "leq_literals" (formula "39") (term "0"))
                                       (builtin "One Step Simplification" (formula "39"))
                                       (rule "true_left" (formula "39"))
                                       (rule "commute_or_2" (formula "27") (term "0"))
                                       (rule "commute_and_2" (formula "51") (term "0,0,0,0"))
                                       (rule "allLeft" (formula "33") (inst "t=j_0"))
                                       (rule "inEqSimp_homoInEq1" (formula "33") (term "1"))
                                       (rule "polySimp_addComm1" (formula "33") (term "0,1"))
                                       (rule "applyEq" (formula "33") (term "1,0,0,0") (ifseqformula "44"))
                                       (rule "eqSymm" (formula "33") (term "0,0"))
                                       (rule "applyEq" (formula "33") (term "1,0,0") (ifseqformula "29"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1"))
                                       (rule "polySimp_mulComm0" (formula "33") (term "1,1"))
                                       (rule "polySimp_rightDist" (formula "33") (term "1,1"))
                                       (rule "mul_literals" (formula "33") (term "0,1,1"))
                                       (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1"))
                                       (rule "polySimp_elimOne" (formula "33") (term "1,1,1"))
                                       (rule "inEqSimp_contradInEq1" (formula "33") (term "1,0") (ifseqformula "45"))
                                       (rule "qeq_literals" (formula "33") (term "0,1,0"))
                                       (builtin "One Step Simplification" (formula "33"))
                                       (rule "allLeft" (formula "28") (inst "t=j_0"))
                                       (rule "inEqSimp_commuteGeq" (formula "28") (term "1,0,0,0,0"))
                                       (rule "applyEq" (formula "28") (term "1,0,0,0,0,0,0,0") (ifseqformula "45"))
                                       (rule "inEqSimp_contradInEq1" (formula "28") (term "1,0,0,0,0,0") (ifseqformula "46"))
                                       (rule "qeq_literals" (formula "28") (term "0,1,0,0,0,0,0"))
                                       (builtin "One Step Simplification" (formula "28"))
                                       (rule "inEqSimp_contradInEq1" (formula "28") (term "1,0,0,0,0") (ifseqformula "47"))
                                       (rule "inEqSimp_homoInEq1" (formula "28") (term "0,1,0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,1,0,0,0,0"))
                                       (rule "add_literals" (formula "28") (term "1,1,0,0,1,0,0,0,0"))
                                       (rule "times_zero_1" (formula "28") (term "1,0,0,1,0,0,0,0"))
                                       (rule "add_zero_right" (formula "28") (term "0,0,1,0,0,0,0"))
                                       (rule "leq_literals" (formula "28") (term "0,1,0,0,0,0"))
                                       (builtin "One Step Simplification" (formula "28"))
                                       (rule "allLeft" (formula "58") (inst "t=j_0"))
                                       (rule "inEqSimp_homoInEq1" (formula "58") (term "1"))
                                       (rule "polySimp_addComm1" (formula "58") (term "0,1"))
                                       (rule "applyEq" (formula "58") (term "1,0,0,0") (ifseqformula "45"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "58") (term "1"))
                                       (rule "polySimp_mulComm0" (formula "58") (term "1,1"))
                                       (rule "polySimp_rightDist" (formula "58") (term "1,1"))
                                       (rule "mul_literals" (formula "58") (term "0,1,1"))
                                       (rule "polySimp_mulLiterals" (formula "58") (term "1,1,1"))
                                       (rule "polySimp_elimOne" (formula "58") (term "1,1,1"))
                                       (rule "inEqSimp_contradInEq1" (formula "58") (term "1,0") (ifseqformula "46"))
                                       (rule "qeq_literals" (formula "58") (term "0,1,0"))
                                       (builtin "One Step Simplification" (formula "58"))
                                       (rule "pullOutSelect" (formula "58") (term "0,0") (inst "selectSK=IntNode_next_4"))
                                       (rule "simplifySelectOfAnon" (formula "58"))
                                       (builtin "One Step Simplification" (formula "58") (ifInst ""  (formula "67")) (ifInst ""  (formula "38")))
                                       (rule "eqSymm" (formula "59") (term "0"))
                                       (rule "applyEq" (formula "58") (term "2,0") (ifseqformula "30"))
                                       (rule "elementOfUnion" (formula "58") (term "0,0"))
                                       (rule "elementOfSingleton" (formula "58") (term "0,0,0"))
                                       (builtin "One Step Simplification" (formula "58"))
                                       (rule "elementOfInfiniteUnion" (formula "58") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "58"))
                                       (rule "elementOfSingleton" (formula "58") (term "1,0,0,0"))
                                       (builtin "One Step Simplification" (formula "58"))
                                       (rule "applyEqReverse" (formula "59") (term "1,0") (ifseqformula "58"))
                                       (rule "hideAuxiliaryEq" (formula "58"))
                                       (rule "seqGetAlphaCast" (formula "49") (term "0"))
                                       (rule "castedGetAny" (formula "49") (term "0"))
                                       (builtin "One Step Simplification" (formula "49"))
                                       (rule "true_left" (formula "49"))
                                       (rule "seqGetAlphaCast" (formula "52") (term "0"))
                                       (rule "castDel" (formula "52") (term "0"))
                                       (builtin "One Step Simplification" (formula "52"))
                                       (rule "true_left" (formula "52"))
                                       (rule "seqGetAlphaCast" (formula "32") (term "1,0"))
                                       (rule "castedGetAny" (formula "32") (term "0"))
                                       (builtin "One Step Simplification" (formula "32"))
                                       (rule "true_left" (formula "32"))
                                       (rule "seqGetAlphaCast" (formula "32") (term "1,0,0"))
                                       (rule "castedGetAny" (formula "32") (term "0"))
                                       (builtin "One Step Simplification" (formula "32"))
                                       (rule "true_left" (formula "32"))
                                       (rule "cut_direct" (formula "32") (term "1"))
                                       (branch "CUT: self.size ≤ 2 + i_2_0 TRUE"
                                          (builtin "One Step Simplification" (formula "33"))
                                          (rule "true_left" (formula "33"))
                                          (rule "replace_known_left" (formula "57") (term "1") (ifseqformula "32"))
                                          (builtin "One Step Simplification" (formula "57"))
                                          (rule "true_left" (formula "57"))
                                          (rule "inEqSimp_antiSymm" (formula "8") (ifseqformula "32"))
                                          (rule "applyEq" (formula "30") (term "1,1,0,0,0") (ifseqformula "8"))
                                          (rule "applyEq" (formula "18") (term "1,1,0") (ifseqformula "8"))
                                          (rule "applyEq" (formula "25") (term "1,1,0") (ifseqformula "8"))
                                          (rule "applyEq" (formula "1") (term "0") (ifseqformula "8"))
                                          (rule "inEqSimp_homoInEq1" (formula "1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                          (rule "mul_literals" (formula "1") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "applyEq" (formula "36") (term "1,1,1,0") (ifseqformula "8"))
                                          (rule "polySimp_addAssoc" (formula "36") (term "1,1,0"))
                                          (rule "add_literals" (formula "36") (term "0,1,1,0"))
                                          (rule "applyEq" (formula "44") (term "1,1,0") (ifseqformula "8"))
                                          (rule "applyEq" (formula "58") (term "1,1,1,0,0,1,1,0,0,0,0,0") (ifseqformula "8"))
                                          (rule "polySimp_addAssoc" (formula "58") (term "1,1,0,0,1,1,0,0,0,0,0"))
                                          (rule "add_literals" (formula "58") (term "0,1,1,0,0,1,1,0,0,0,0,0"))
                                          (rule "applyEq" (formula "54") (term "1,1,1,0,0,0,0") (ifseqformula "8"))
                                          (rule "polySimp_addAssoc" (formula "54") (term "1,1,0,0,0,0"))
                                          (rule "add_literals" (formula "54") (term "0,1,1,0,0,0,0"))
                                          (rule "applyEq" (formula "35") (term "0,1") (ifseqformula "8"))
                                          (rule "inEqSimp_homoInEq0" (formula "35") (term "1"))
                                          (rule "polySimp_mulComm0" (formula "35") (term "1,0,1"))
                                          (rule "polySimp_rightDist" (formula "35") (term "1,0,1"))
                                          (rule "mul_literals" (formula "35") (term "0,1,0,1"))
                                          (rule "polySimp_addComm1" (formula "35") (term "0,1"))
                                          (rule "polySimp_addAssoc" (formula "35") (term "0,0,1"))
                                          (rule "add_literals" (formula "35") (term "0,0,0,1"))
                                          (rule "applyEq" (formula "40") (term "1,1,0") (ifseqformula "8"))
                                          (rule "polySimp_addAssoc" (formula "40") (term "1,0"))
                                          (rule "add_literals" (formula "40") (term "0,1,0"))
                                          (rule "applyEq" (formula "28") (term "1,1,0") (ifseqformula "8"))
                                          (rule "applyEq" (formula "45") (term "1,1,0") (ifseqformula "8"))
                                          (rule "applyEq" (formula "56") (term "1,1,1,0,0,1,1,0,0,0,0,0") (ifseqformula "8"))
                                          (rule "polySimp_addAssoc" (formula "56") (term "1,1,0,0,1,1,0,0,0,0,0"))
                                          (rule "add_literals" (formula "56") (term "0,1,1,0,0,1,1,0,0,0,0,0"))
                                          (rule "applyEq" (formula "9") (term "0") (ifseqformula "8"))
                                          (rule "inEqSimp_homoInEq1" (formula "9"))
                                          (rule "polySimp_pullOutFactor1" (formula "9") (term "0"))
                                          (rule "add_literals" (formula "9") (term "1,0"))
                                          (rule "times_zero_1" (formula "9") (term "0"))
                                          (rule "leq_literals" (formula "9"))
                                          (rule "true_left" (formula "9"))
                                          (rule "applyEq" (formula "26") (term "1,1,0") (ifseqformula "8"))
                                          (rule "applyEq" (formula "29") (term "1,1,0,0,0,0,0") (ifseqformula "8"))
                                          (rule "applyEq" (formula "47") (term "0") (ifseqformula "8"))
                                          (rule "inEqSimp_homoInEq1" (formula "47"))
                                          (rule "polySimp_mulComm0" (formula "47") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "47") (term "1,0"))
                                          (rule "mul_literals" (formula "47") (term "0,1,0"))
                                          (rule "polySimp_addComm1" (formula "47") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "47") (term "0,0"))
                                          (rule "add_literals" (formula "47") (term "0,0,0"))
                                          (rule "applyEq" (formula "51") (term "0") (ifseqformula "8"))
                                          (rule "inEqSimp_homoInEq1" (formula "51"))
                                          (rule "polySimp_mulComm0" (formula "51") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "51") (term "1,0"))
                                          (rule "mul_literals" (formula "51") (term "0,1,0"))
                                          (rule "polySimp_addComm1" (formula "51") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "51") (term "0,0"))
                                          (rule "add_literals" (formula "51") (term "0,0,0"))
                                          (rule "applyEq" (formula "23") (term "1,1,0") (ifseqformula "8"))
                                          (rule "applyEq" (formula "48") (term "1,1,0") (ifseqformula "8"))
                                          (rule "polySimp_addAssoc" (formula "48") (term "1,0"))
                                          (rule "add_literals" (formula "48") (term "0,1,0"))
                                          (rule "applyEq" (formula "57") (term "1,1,1,0") (ifseqformula "8"))
                                          (rule "polySimp_addAssoc" (formula "57") (term "1,1,0"))
                                          (rule "add_literals" (formula "57") (term "0,1,1,0"))
                                          (rule "applyEq" (formula "32") (term "0") (ifseqformula "8"))
                                          (rule "inEqSimp_homoInEq0" (formula "32"))
                                          (rule "polySimp_pullOutFactor1" (formula "32") (term "0"))
                                          (rule "add_literals" (formula "32") (term "1,0"))
                                          (rule "times_zero_1" (formula "32") (term "0"))
                                          (rule "qeq_literals" (formula "32"))
                                          (rule "true_left" (formula "32"))
                                          (rule "applyEq" (formula "14") (term "1,1,0") (ifseqformula "8"))
                                          (rule "applyEq" (formula "54") (term "1,1,0") (ifseqformula "8"))
                                          (rule "applyEq" (formula "2") (term "1,1,0") (ifseqformula "8"))
                                          (rule "applyEq" (formula "19") (term "1,1,0") (ifseqformula "8"))
                                          (rule "polySimp_addAssoc" (formula "19") (term "1,0"))
                                          (rule "add_literals" (formula "19") (term "0,1,0"))
                                          (rule "applyEq" (formula "4") (term "0") (ifseqformula "8"))
                                          (rule "inEqSimp_homoInEq1" (formula "4"))
                                          (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                                          (rule "mul_literals" (formula "4") (term "0,1,0"))
                                          (rule "polySimp_addComm1" (formula "4") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                          (rule "add_literals" (formula "4") (term "0,0,0"))
                                          (rule "applyEq" (formula "28") (term "1,1,0,0") (ifseqformula "8"))
                                          (rule "applyEq" (formula "16") (term "1,1,1,0,0,1,0") (ifseqformula "8"))
                                          (rule "polySimp_addAssoc" (formula "16") (term "1,1,0,0,1,0"))
                                          (rule "add_literals" (formula "16") (term "0,1,1,0,0,1,0"))
                                          (rule "applyEq" (formula "15") (term "1,1,0") (ifseqformula "8"))
                                          (rule "applyEq" (formula "58") (term "1,1,0,0") (ifseqformula "8"))
                                          (rule "applyEq" (formula "25") (term "1,1,1,0") (ifseqformula "8"))
                                          (rule "polySimp_addAssoc" (formula "25") (term "1,1,0"))
                                          (rule "add_literals" (formula "25") (term "0,1,1,0"))
                                          (rule "applyEq" (formula "55") (term "1,1,0") (ifseqformula "38"))
                                          (rule "applyEq" (formula "52") (term "1") (ifseqformula "47"))
                                          (rule "applyEq" (formula "21") (term "1,1") (ifseqformula "38"))
                                          (rule "applyEq" (formula "54") (term "1,0,0,0") (ifseqformula "37"))
                                          (rule "replace_known_left" (formula "54") (term "0,0") (ifseqformula "36"))
                                          (builtin "One Step Simplification" (formula "54"))
                                          (rule "hideAuxiliaryEq" (formula "54"))
                                          (rule "applyEq" (formula "51") (term "1,0,0,1,0,0") (ifseqformula "37"))
                                          (rule "replace_known_left" (formula "51") (term "0,1,0,0") (ifseqformula "36"))
                                          (builtin "One Step Simplification" (formula "51"))
                                          (rule "applyEq" (formula "31") (term "1") (ifseqformula "37"))
                                          (rule "applyEq" (formula "59") (term "0") (ifseqformula "37"))
                                          (rule "applyEq" (formula "26") (term "1,0,0,0,0,0") (ifseqformula "37"))
                                          (rule "applyEq" (formula "39") (term "1") (ifseqformula "8"))
                                          (rule "applyEq" (formula "55") (term "1") (ifseqformula "8"))
                                          (rule "applyEq" (formula "38") (term "1") (ifseqformula "8"))
                                          (rule "applyEq" (formula "51") (term "1,1,0,0,0,0") (ifseqformula "37"))
                                          (rule "applyEq" (formula "51") (term "1,1,0") (ifseqformula "37"))
                                          (builtin "One Step Simplification" (formula "51"))
                                          (rule "applyEq" (formula "51") (term "1,0,1") (ifseqformula "37"))
                                          (rule "eqSymm" (formula "51") (term "1"))
                                          (rule "inEqSimp_invertInEq0" (formula "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                          (rule "times_zero_2" (formula "1") (term "1"))
                                          (rule "polySimp_elimOne" (formula "1") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "1"))
                                          (rule "polySimp_mulComm0" (formula "31") (term "1,1"))
                                          (rule "polySimp_rightDist" (formula "31") (term "1,1"))
                                          (rule "mul_literals" (formula "31") (term "0,1,1"))
                                          (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1"))
                                          (rule "polySimp_elimOne" (formula "31") (term "1,1,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "44"))
                                          (rule "polySimp_mulComm0" (formula "44") (term "1"))
                                          (rule "polySimp_rightDist" (formula "44") (term "1"))
                                          (rule "mul_literals" (formula "44") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "44") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "44") (term "1,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "48"))
                                          (rule "polySimp_mulComm0" (formula "48") (term "1"))
                                          (rule "polySimp_rightDist" (formula "48") (term "1"))
                                          (rule "mul_literals" (formula "48") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "48") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "48") (term "1,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                          (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                          (rule "polySimp_rightDist" (formula "3") (term "1"))
                                          (rule "mul_literals" (formula "3") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                          (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "3"))
                                          (rule "times_zero_1" (formula "2") (term "0,0"))
                                          (rule "add_zero_left" (formula "2") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                          (rule "mul_literals" (formula "2") (term "1"))
                                          (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "9"))
                                          (rule "leq_literals" (formula "2") (term "0"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "true_left" (formula "2"))
                                          (rule "inEqSimp_exactShadow3" (formula "47") (ifseqformula "48"))
                                          (rule "times_zero_1" (formula "47") (term "0,0"))
                                          (rule "add_zero_left" (formula "47") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "47"))
                                          (rule "mul_literals" (formula "47") (term "1"))
                                          (rule "inEqSimp_subsumption1" (formula "47") (ifseqformula "8"))
                                          (rule "leq_literals" (formula "47") (term "0"))
                                          (builtin "One Step Simplification" (formula "47"))
                                          (rule "true_left" (formula "47"))
                                          (rule "inEqSimp_exactShadow3" (formula "43") (ifseqformula "44"))
                                          (rule "times_zero_1" (formula "43") (term "0,0"))
                                          (rule "add_zero_left" (formula "43") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "43"))
                                          (rule "mul_literals" (formula "43") (term "1"))
                                          (rule "inEqSimp_subsumption1" (formula "43") (ifseqformula "8"))
                                          (rule "leq_literals" (formula "43") (term "0"))
                                          (builtin "One Step Simplification" (formula "43"))
                                          (rule "true_left" (formula "43"))
                                          (rule "inEqSimp_or_weaken3" (formula "25") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "25") (term "1,0,1,0"))
                                          (rule "add_literals" (formula "25") (term "0,1,0,1,0"))
                                          (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "23")))
                                          (rule "true_left" (formula "25"))
                                          (rule "seqGetAlphaCast" (formula "4") (term "0"))
                                          (rule "castedGetAny" (formula "4") (term "0"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "true_left" (formula "4"))
                                          (rule "seqGetAlphaCast" (formula "20") (term "0"))
                                          (rule "castDel" (formula "20") (term "0"))
                                          (builtin "One Step Simplification" (formula "20"))
                                          (rule "true_left" (formula "20"))
                                          (rule "seqGetAlphaCast" (formula "50") (term "0"))
                                          (rule "castDel" (formula "50") (term "0"))
                                          (builtin "One Step Simplification" (formula "50"))
                                          (rule "true_left" (formula "50"))
                                          (rule "commute_and" (formula "49") (term "0,0,0"))
                                          (rule "seqGetAlphaCast" (formula "30") (term "0,0"))
                                          (rule "castedGetAny" (formula "30") (term "0"))
                                          (builtin "One Step Simplification" (formula "30"))
                                          (rule "true_left" (formula "30"))
                                          (rule "allLeft" (formula "24") (inst "t=j_1_0"))
                                          (rule "replace_known_left" (formula "24") (term "0,0,0,0") (ifseqformula "4"))
                                          (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "62")))
                                          (rule "inEqSimp_contradInEq1" (formula "24") (term "0") (ifseqformula "2"))
                                          (rule "qeq_literals" (formula "24") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "24"))
                                          (rule "inEqSimp_contradEq7" (formula "62") (ifseqformula "24"))
                                          (rule "polySimp_mulComm0" (formula "62") (term "1,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "62") (term "0,0"))
                                          (rule "add_literals" (formula "62") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "62") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "62") (term "0,0"))
                                          (rule "leq_literals" (formula "62") (term "0"))
                                          (builtin "One Step Simplification" (formula "62"))
                                          (rule "false_right" (formula "62"))
                                          (rule "inEqSimp_contradInEq0" (formula "24") (ifseqformula "3"))
                                          (rule "andLeft" (formula "24"))
                                          (rule "inEqSimp_homoInEq1" (formula "24"))
                                          (rule "polySimp_mulComm0" (formula "24") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "24") (term "1,0"))
                                          (rule "mul_literals" (formula "24") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "24") (term "0"))
                                          (rule "polySimp_addComm1" (formula "24") (term "0,0"))
                                          (rule "add_literals" (formula "24") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "24") (term "0"))
                                          (rule "add_literals" (formula "24") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "24") (term "1,0"))
                                          (rule "add_literals" (formula "24") (term "0"))
                                          (rule "leq_literals" (formula "24"))
                                          (rule "closeFalse" (formula "24"))
                                       )
                                       (branch "CUT: self.size ≤ 2 + i_2_0 FALSE"
                                          (builtin "One Step Simplification" (formula "32"))
                                          (rule "replace_known_right" (formula "57") (term "1") (ifseqformula "63"))
                                          (builtin "One Step Simplification" (formula "57"))
                                          (rule "applyEqReverse" (formula "56") (term "1") (ifseqformula "57"))
                                          (rule "hideAuxiliaryEq" (formula "57"))
                                          (rule "inEqSimp_leqRight" (formula "62"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                          (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,0"))
                                          (rule "applyEq" (formula "57") (term "1,0") (ifseqformula "33"))
                                          (builtin "One Step Simplification" (formula "57"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                          (rule "mul_literals" (formula "1") (term "0,1"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                          (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "1"))
                                          (rule "inEqSimp_homoInEq0" (formula "9") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "9") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "9") (term "1,0,0"))
                                          (rule "mul_literals" (formula "9") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
                                          (rule "polySimp_addComm1" (formula "9") (term "0,0,0"))
                                          (rule "add_literals" (formula "9") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0"))
                                          (rule "add_literals" (formula "9") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "9") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "9") (term "0,0"))
                                          (rule "qeq_literals" (formula "9") (term "0"))
                                          (builtin "One Step Simplification" (formula "9"))
                                          (rule "true_left" (formula "9"))
                                          (rule "seqGetAlphaCast" (formula "21") (term "0"))
                                          (rule "castDel" (formula "21") (term "0"))
                                          (builtin "One Step Simplification" (formula "21"))
                                          (rule "true_left" (formula "21"))
                                          (rule "commute_or_2" (formula "28") (term "0"))
                                          (rule "seqGetAlphaCast" (formula "6") (term "0"))
                                          (rule "castedGetAny" (formula "6") (term "0"))
                                          (builtin "One Step Simplification" (formula "6"))
                                          (rule "true_left" (formula "6"))
                                          (rule "seqGetAlphaCast" (formula "53") (term "1"))
                                          (rule "castDel" (formula "53") (term "0"))
                                          (builtin "One Step Simplification" (formula "53"))
                                          (rule "true_left" (formula "53"))
                                          (rule "allLeft" (formula "43") (inst "t=add(Z(1(#)), i_2_0)"))
                                          (rule "inEqSimp_commuteGeq" (formula "43") (term "1"))
                                          (rule "inEqSimp_homoInEq0" (formula "43") (term "1,0"))
                                          (rule "polySimp_mulComm0" (formula "43") (term "1,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "43") (term "1,0,1,0"))
                                          (rule "mul_literals" (formula "43") (term "0,1,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "43") (term "0,1,0"))
                                          (rule "add_literals" (formula "43") (term "0,0,1,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "43") (term "1,0"))
                                          (rule "polySimp_mulLiterals" (formula "43") (term "0,1,0"))
                                          (rule "polySimp_elimOne" (formula "43") (term "0,1,0"))
                                          (rule "inEqSimp_contradInEq1" (formula "43") (term "1") (ifseqformula "1"))
                                          (rule "inEqSimp_homoInEq1" (formula "43") (term "0,1"))
                                          (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "43") (term "1,0,0,1"))
                                          (rule "mul_literals" (formula "43") (term "0,1,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "43") (term "0,0,1"))
                                          (rule "polySimp_addComm1" (formula "43") (term "0,0,0,1"))
                                          (rule "add_literals" (formula "43") (term "0,0,0,0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "43") (term "0,0,1"))
                                          (rule "add_literals" (formula "43") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "43") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "43") (term "0,0,1"))
                                          (rule "leq_literals" (formula "43") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "43"))
                                          (rule "inEqSimp_contradInEq1" (formula "43") (term "1") (ifseqformula "9"))
                                          (rule "qeq_literals" (formula "43") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "43"))
                                          (rule "notLeft" (formula "43"))
                                          (rule "allLeft" (formula "15") (inst "t=add(Z(1(#)), i_2_0)"))
                                          (rule "typeEqDerived" (formula "15") (term "0,0,0") (ifseqformula "22"))
                                          (builtin "One Step Simplification" (formula "15"))
                                          (rule "true_left" (formula "15"))
                                          (rule "allLeft" (formula "44") (inst "t=add(Z(1(#)), i_2_0)"))
                                          (rule "typeEqDerived2" (formula "44") (term "0,0,0") (ifseqformula "54"))
                                          (builtin "One Step Simplification" (formula "44"))
                                          (rule "true_left" (formula "44"))
                                          (rule "allLeft" (formula "23") (inst "t=j_1"))
                                          (rule "inEqSimp_commuteGeq" (formula "23") (term "1"))
                                          (rule "applyEq" (formula "23") (term "1,1,0,0") (ifseqformula "50"))
                                          (rule "inEqSimp_contradInEq1" (formula "23") (term "1,0") (ifseqformula "51"))
                                          (rule "qeq_literals" (formula "23") (term "0,1,0"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "inEqSimp_contradInEq1" (formula "23") (term "1") (ifseqformula "52"))
                                          (rule "inEqSimp_homoInEq1" (formula "23") (term "0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1"))
                                          (rule "add_literals" (formula "23") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "23") (term "1,0,0,1"))
                                          (rule "add_literals" (formula "23") (term "0,0,1"))
                                          (rule "leq_literals" (formula "23") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "allLeft" (formula "14") (inst "t=add(Z(1(#)), i_2_0)"))
                                          (rule "inEqSimp_commuteGeq" (formula "14") (term "1"))
                                          (rule "inEqSimp_homoInEq0" (formula "14") (term "1,0"))
                                          (rule "polySimp_mulComm0" (formula "14") (term "1,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "14") (term "1,0,1,0"))
                                          (rule "mul_literals" (formula "14") (term "0,1,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "14") (term "0,1,0"))
                                          (rule "add_literals" (formula "14") (term "0,0,1,0"))
                                          (rule "applyEq" (formula "14") (term "0,0,0,0") (ifseqformula "22"))
                                          (builtin "One Step Simplification" (formula "14"))
                                          (rule "true_left" (formula "14"))
                                          (rule "allLeft" (formula "24") (inst "t=j_1_0"))
                                          (rule "inEqSimp_commuteGeq" (formula "24") (term "1"))
                                          (rule "applyEq" (formula "24") (term "1,1,0,0") (ifseqformula "6"))
                                          (rule "inEqSimp_contradInEq1" (formula "24") (term "1") (ifseqformula "5"))
                                          (rule "inEqSimp_homoInEq1" (formula "24") (term "0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,1"))
                                          (rule "add_literals" (formula "24") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "24") (term "1,0,0,1"))
                                          (rule "add_literals" (formula "24") (term "0,0,1"))
                                          (rule "leq_literals" (formula "24") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "24"))
                                          (rule "inEqSimp_contradInEq1" (formula "24") (term "1") (ifseqformula "4"))
                                          (rule "qeq_literals" (formula "24") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "24"))
                                          (rule "allLeft" (formula "57") (inst "t=j_1"))
                                          (rule "inEqSimp_commuteGeq" (formula "57") (term "1"))
                                          (rule "applyEq" (formula "57") (term "1,0,0,0") (ifseqformula "51"))
                                          (rule "replaceKnownSelect_taclet1011011_18" (formula "57") (term "0,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet1011011_19" (formula "57") (term "0,0,0"))
                                          (rule "eqSymm" (formula "57") (term "0,0"))
                                          (rule "applyEq" (formula "57") (term "1,0,0") (ifseqformula "54"))
                                          (rule "inEqSimp_contradInEq1" (formula "57") (term "1,0") (ifseqformula "52"))
                                          (rule "qeq_literals" (formula "57") (term "0,1,0"))
                                          (builtin "One Step Simplification" (formula "57"))
                                          (rule "inEqSimp_contradInEq1" (formula "57") (term "1") (ifseqformula "53"))
                                          (rule "inEqSimp_homoInEq1" (formula "57") (term "0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "57") (term "0,0,1"))
                                          (rule "add_literals" (formula "57") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "57") (term "1,0,0,1"))
                                          (rule "add_literals" (formula "57") (term "0,0,1"))
                                          (rule "leq_literals" (formula "57") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "57"))
                                          (rule "allLeft" (formula "58") (inst "t=j_1_0"))
                                          (rule "inEqSimp_commuteGeq" (formula "58") (term "1"))
                                          (rule "applyEq" (formula "58") (term "1,0,0,0") (ifseqformula "6"))
                                          (rule "replaceKnownSelect_taclet1011011_14" (formula "58") (term "0,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet1011011_20" (formula "58") (term "0,0,0"))
                                          (rule "eqSymm" (formula "58") (term "0,0"))
                                          (rule "applyEq" (formula "58") (term "1,0,0") (ifseqformula "8"))
                                          (rule "inEqSimp_contradInEq1" (formula "58") (term "1") (ifseqformula "5"))
                                          (rule "inEqSimp_homoInEq1" (formula "58") (term "0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "58") (term "0,0,1"))
                                          (rule "add_literals" (formula "58") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "58") (term "1,0,0,1"))
                                          (rule "add_literals" (formula "58") (term "0,0,1"))
                                          (rule "leq_literals" (formula "58") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "58"))
                                          (rule "inEqSimp_contradInEq1" (formula "58") (term "1") (ifseqformula "4"))
                                          (rule "qeq_literals" (formula "58") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "58"))
                                          (rule "allLeft" (formula "17") (inst "t=j_1"))
                                          (rule "inEqSimp_commuteGeq" (formula "17") (term "1"))
                                          (rule "applyEq" (formula "17") (term "0,0,0,0") (ifseqformula "52"))
                                          (rule "replace_known_right" (formula "17") (term "0,0,0") (ifseqformula "69"))
                                          (builtin "One Step Simplification" (formula "17"))
                                          (rule "true_left" (formula "17"))
                                          (rule "allLeft" (formula "17") (inst "t=j_1_0"))
                                          (rule "inEqSimp_commuteGeq" (formula "17") (term "1"))
                                          (rule "applyEq" (formula "17") (term "0,0,0,0") (ifseqformula "6"))
                                          (rule "replace_known_right" (formula "17") (term "0,0,0") (ifseqformula "71"))
                                          (builtin "One Step Simplification" (formula "17"))
                                          (rule "true_left" (formula "17"))
                                          (rule "commute_and" (formula "55") (term "0,0,0,0,0"))
                                          (rule "allLeft" (formula "3") (inst "t=i_2_0"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "inEqSimp_commuteGeq" (formula "3") (term "1"))
                                          (rule "allLeft" (formula "4") (inst "t=j_1_0"))
                                          (rule "replace_known_left" (formula "4") (term "0,0,0") (ifseqformula "8"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "inEqSimp_commuteGeq" (formula "4") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "4") (term "1") (ifseqformula "7"))
                                          (rule "inEqSimp_homoInEq1" (formula "4") (term "0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,1"))
                                          (rule "add_literals" (formula "4") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "4") (term "1,0,0,1"))
                                          (rule "add_literals" (formula "4") (term "0,0,1"))
                                          (rule "leq_literals" (formula "4") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "inEqSimp_contradInEq1" (formula "3") (term "1") (ifseqformula "1"))
                                          (rule "inEqSimp_homoInEq1" (formula "3") (term "0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0,1"))
                                          (rule "add_literals" (formula "3") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "3") (term "1,0,0,1"))
                                          (rule "add_literals" (formula "3") (term "0,0,1"))
                                          (rule "leq_literals" (formula "3") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "inEqSimp_contradInEq0" (formula "6") (ifseqformula "4"))
                                          (rule "qeq_literals" (formula "6") (term "0"))
                                          (builtin "One Step Simplification" (formula "6"))
                                          (rule "closeFalse" (formula "6"))
                                       )
                                    )
                                 )
                              )
                              (branch "∃ int j; ( (IntNode)self.nodeseq[j] = self.first ∧ j ≥ 0 ∧ j ≤ -1 + self.size) FALSE"
                                 (rule "eqSymm" (formula "37"))
                                 (rule "applyEq" (formula "45") (term "0") (ifseqformula "37"))
                                 (builtin "One Step Simplification" (formula "45"))
                                 (rule "false_right" (formula "45"))
                                 (rule "nnf_ex2all" (formula "44"))
                                 (rule "nnf_notAnd" (formula "1") (term "0"))
                                 (rule "inEqSimp_notLeq" (formula "1") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0"))
                                 (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0"))
                                 (rule "add_literals" (formula "1") (term "0,0,0,1,0"))
                                 (rule "add_zero_left" (formula "1") (term "0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "1,1,0"))
                                 (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "1") (term "1,0,0"))
                                 (rule "times_zero_1" (formula "1") (term "1,0,0,1,0,0"))
                                 (rule "add_zero_right" (formula "1") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1,0,0"))
                                 (rule "mul_literals" (formula "1") (term "1,1,0,0"))
                                 (rule "allLeft" (formula "23") (inst "t=add(Z(1(#)), i_2_0)"))
                                 (rule "polySimp_addAssoc" (formula "23") (term "1,1,0,0"))
                                 (rule "add_literals" (formula "23") (term "0,1,1,0,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "23") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "23") (term "1,0,1"))
                                 (rule "polySimp_rightDist" (formula "23") (term "1,0,1"))
                                 (rule "mul_literals" (formula "23") (term "0,1,0,1"))
                                 (rule "polySimp_addComm1" (formula "23") (term "0,1"))
                                 (rule "polySimp_addAssoc" (formula "23") (term "0,0,1"))
                                 (rule "add_literals" (formula "23") (term "0,0,0,1"))
                                 (rule "inEqSimp_homoInEq0" (formula "23") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "23") (term "1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "23") (term "1,0,1,0"))
                                 (rule "mul_literals" (formula "23") (term "0,1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "23") (term "0,1,0"))
                                 (rule "add_literals" (formula "23") (term "0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "23") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "23") (term "1,1"))
                                 (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1"))
                                 (rule "mul_literals" (formula "23") (term "0,1,1"))
                                 (rule "polySimp_elimOne" (formula "23") (term "1,1,1"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "23") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "23") (term "0,1,0"))
                                 (rule "polySimp_elimOne" (formula "23") (term "0,1,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "23") (term "1,0") (ifseqformula "5"))
                                 (rule "qeq_literals" (formula "23") (term "0,1,0"))
                                 (builtin "One Step Simplification" (formula "23"))
                                 (rule "allLeft" (formula "17") (inst "t=add(Z(1(#)), i_2_0)"))
                                 (rule "inEqSimp_commuteGeq" (formula "17") (term "1"))
                                 (rule "inEqSimp_homoInEq0" (formula "17") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "17") (term "1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "17") (term "1,0,1,0"))
                                 (rule "mul_literals" (formula "17") (term "0,1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "17") (term "0,1,0"))
                                 (rule "add_literals" (formula "17") (term "0,0,1,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "17") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "17") (term "0,1,0"))
                                 (rule "polySimp_elimOne" (formula "17") (term "0,1,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "17") (term "1") (ifseqformula "4"))
                                 (rule "inEqSimp_homoInEq1" (formula "17") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1"))
                                 (rule "mul_literals" (formula "17") (term "0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "17") (term "0,0,1"))
                                 (rule "polySimp_addComm1" (formula "17") (term "0,0,0,1"))
                                 (rule "add_literals" (formula "17") (term "0,0,0,0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,1"))
                                 (rule "add_literals" (formula "17") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "17") (term "1,0,0,1"))
                                 (rule "add_literals" (formula "17") (term "0,0,1"))
                                 (rule "leq_literals" (formula "17") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "17"))
                                 (rule "inEqSimp_contradInEq1" (formula "17") (term "1") (ifseqformula "5"))
                                 (rule "qeq_literals" (formula "17") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "17"))
                                 (rule "allLeft" (formula "41") (inst "t=add(Z(1(#)), i_2_0)"))
                                 (rule "inEqSimp_commuteGeq" (formula "41") (term "1"))
                                 (rule "inEqSimp_homoInEq0" (formula "41") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "41") (term "1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "41") (term "1,0,1,0"))
                                 (rule "mul_literals" (formula "41") (term "0,1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "41") (term "0,1,0"))
                                 (rule "add_literals" (formula "41") (term "0,0,1,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "41") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "41") (term "0,1,0"))
                                 (rule "polySimp_elimOne" (formula "41") (term "0,1,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "41") (term "1,0") (ifseqformula "5"))
                                 (rule "qeq_literals" (formula "41") (term "0,1,0"))
                                 (builtin "One Step Simplification" (formula "41"))
                                 (rule "inEqSimp_contradInEq1" (formula "41") (term "1") (ifseqformula "4"))
                                 (rule "inEqSimp_homoInEq1" (formula "41") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "41") (term "1,0,0,1"))
                                 (rule "mul_literals" (formula "41") (term "0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "41") (term "0,0,1"))
                                 (rule "polySimp_addComm1" (formula "41") (term "0,0,0,1"))
                                 (rule "add_literals" (formula "41") (term "0,0,0,0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "41") (term "0,0,1"))
                                 (rule "add_literals" (formula "41") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "41") (term "1,0,0,1"))
                                 (rule "add_literals" (formula "41") (term "0,0,1"))
                                 (rule "leq_literals" (formula "41") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "41"))
                                 (rule "pullOutSelect" (formula "41") (term "0") (inst "selectSK=IntNode_data_3"))
                                 (rule "simplifySelectOfAnon" (formula "41"))
                                 (builtin "One Step Simplification" (formula "41"))
                                 (rule "eqSymm" (formula "42"))
                                 (rule "applyEqReverse" (formula "41") (term "1") (ifseqformula "42"))
                                 (rule "hideAuxiliaryEq" (formula "42"))
                                 (rule "elementOfUnion" (formula "41") (term "0,0,0"))
                                 (rule "elementOfSingleton" (formula "41") (term "0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "41"))
                                 (rule "elementOfInfiniteUnion" (formula "41") (term "0,0,0"))
                                 (builtin "One Step Simplification" (formula "41"))
                                 (rule "elementOfSingleton" (formula "41") (term "1,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "41"))
                                 (rule "eqSymm" (formula "41") (term "1,0,0,0,0"))
                                 (rule "allLeft" (formula "25") (inst "t=i_2_0"))
                                 (rule "inEqSimp_homoInEq1" (formula "25") (term "1"))
                                 (rule "polySimp_addComm1" (formula "25") (term "0,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "25") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "25") (term "1,1"))
                                 (rule "mul_literals" (formula "25") (term "0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1"))
                                 (rule "polySimp_elimOne" (formula "25") (term "1,1,1"))
                                 (rule "inEqSimp_contradInEq1" (formula "25") (term "1,0") (ifseqformula "5"))
                                 (rule "qeq_literals" (formula "25") (term "0,1,0"))
                                 (builtin "One Step Simplification" (formula "25"))
                                 (rule "inEqSimp_contradInEq1" (formula "25") (term "1") (ifseqformula "4"))
                                 (rule "inEqSimp_homoInEq1" (formula "25") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1"))
                                 (rule "mul_literals" (formula "25") (term "0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "25") (term "0,0,1"))
                                 (rule "polySimp_addComm1" (formula "25") (term "0,0,0,1"))
                                 (rule "add_literals" (formula "25") (term "0,0,0,0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,1"))
                                 (rule "add_literals" (formula "25") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "25") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "25") (term "0,0,1"))
                                 (rule "leq_literals" (formula "25") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "25"))
                                 (rule "replace_known_left" (formula "54") (term "1") (ifseqformula "25"))
                                 (builtin "One Step Simplification" (formula "54"))
                                 (rule "allRight" (formula "54") (inst "sk=j_1_0"))
                                 (rule "orRight" (formula "54"))
                                 (rule "orRight" (formula "55"))
                                 (rule "orRight" (formula "54"))
                                 (rule "notRight" (formula "56"))
                                 (rule "inEqSimp_leqRight" (formula "55"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0"))
                                 (rule "inEqSimp_geqRight" (formula "56"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "0"))
                                 (rule "allLeft" (formula "16") (inst "t=add(Z(1(#)), i_2_0)"))
                                 (rule "inEqSimp_commuteGeq" (formula "16") (term "1"))
                                 (rule "inEqSimp_homoInEq0" (formula "16") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "16") (term "1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "16") (term "1,0,1,0"))
                                 (rule "mul_literals" (formula "16") (term "0,1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "16") (term "0,1,0"))
                                 (rule "add_literals" (formula "16") (term "0,0,1,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "16") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "16") (term "0,1,0"))
                                 (rule "polySimp_elimOne" (formula "16") (term "0,1,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "16") (term "1") (ifseqformula "7"))
                                 (rule "inEqSimp_homoInEq1" (formula "16") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1"))
                                 (rule "mul_literals" (formula "16") (term "0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "16") (term "0,0,1"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,1"))
                                 (rule "add_literals" (formula "16") (term "0,0,0,0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,1"))
                                 (rule "add_literals" (formula "16") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "16") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "16") (term "0,0,1"))
                                 (rule "leq_literals" (formula "16") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "16"))
                                 (rule "inEqSimp_contradInEq1" (formula "16") (term "1") (ifseqformula "8"))
                                 (rule "qeq_literals" (formula "16") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "16"))
                                 (rule "notLeft" (formula "16"))
                                 (rule "replace_known_right" (formula "45") (term "0,0,1,0,0") (ifseqformula "52"))
                                 (builtin "One Step Simplification" (formula "45"))
                                 (rule "allLeft" (formula "47") (inst "t=i_2_0"))
                                 (rule "replaceKnownSelect_taclet1011011_15" (formula "47") (term "0,0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet001011011_21" (formula "47") (term "0,0,0"))
                                 (rule "replace_known_left" (formula "47") (term "0,0") (ifseqformula "28"))
                                 (builtin "One Step Simplification" (formula "47"))
                                 (rule "true_left" (formula "47"))
                                 (rule "allLeft" (formula "24") (inst "t=i_2_0"))
                                 (rule "inEqSimp_commuteGeq" (formula "24") (term "1,0,0,0,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "24") (term "1,0,0,0,0") (ifseqformula "7"))
                                 (rule "inEqSimp_homoInEq1" (formula "24") (term "0,1,0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,1,0,0,0,0"))
                                 (rule "add_literals" (formula "24") (term "1,1,0,0,1,0,0,0,0"))
                                 (rule "times_zero_1" (formula "24") (term "1,0,0,1,0,0,0,0"))
                                 (rule "add_zero_right" (formula "24") (term "0,0,1,0,0,0,0"))
                                 (rule "leq_literals" (formula "24") (term "0,1,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "24"))
                                 (rule "inEqSimp_contradInEq1" (formula "24") (term "1,0,0,0,0") (ifseqformula "8"))
                                 (rule "qeq_literals" (formula "24") (term "0,1,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "24"))
                                 (rule "allLeft" (formula "48") (inst "t=add(Z(1(#)), i_2_0)"))
                                 (rule "polySimp_addAssoc" (formula "48") (term "1,1,0,0"))
                                 (rule "add_literals" (formula "48") (term "0,1,1,0,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "48") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "48") (term "1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "48") (term "1,0,1,0"))
                                 (rule "mul_literals" (formula "48") (term "0,1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "48") (term "0,1,0"))
                                 (rule "add_literals" (formula "48") (term "0,0,1,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "48") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "48") (term "1,0,1"))
                                 (rule "polySimp_rightDist" (formula "48") (term "1,0,1"))
                                 (rule "mul_literals" (formula "48") (term "0,1,0,1"))
                                 (rule "polySimp_addComm1" (formula "48") (term "0,1"))
                                 (rule "polySimp_addAssoc" (formula "48") (term "0,0,1"))
                                 (rule "add_literals" (formula "48") (term "0,0,0,1"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "48") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "48") (term "0,1,0"))
                                 (rule "polySimp_elimOne" (formula "48") (term "0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "48") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "48") (term "1,1"))
                                 (rule "polySimp_mulLiterals" (formula "48") (term "1,1,1"))
                                 (rule "mul_literals" (formula "48") (term "0,1,1"))
                                 (rule "polySimp_elimOne" (formula "48") (term "1,1,1"))
                                 (rule "inEqSimp_contradInEq1" (formula "48") (term "1,0") (ifseqformula "8"))
                                 (rule "qeq_literals" (formula "48") (term "0,1,0"))
                                 (builtin "One Step Simplification" (formula "48"))
                                 (rule "pullOutSelect" (formula "48") (term "0,0") (inst "selectSK=IntNode_next_3"))
                                 (rule "simplifySelectOfAnon" (formula "48"))
                                 (builtin "One Step Simplification" (formula "48") (ifInst ""  (formula "55")))
                                 (rule "eqSymm" (formula "49") (term "0"))
                                 (rule "elementOfUnion" (formula "48") (term "0,0,0"))
                                 (rule "elementOfSingleton" (formula "48") (term "0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "48"))
                                 (rule "elementOfInfiniteUnion" (formula "48") (term "0,0,0"))
                                 (builtin "One Step Simplification" (formula "48"))
                                 (rule "elementOfSingleton" (formula "48") (term "1,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "48"))
                                 (rule "ifthenelse_negated" (formula "48") (term "0"))
                                 (rule "allLeft" (formula "25") (inst "t=add(Z(1(#)), i_2_0)"))
                                 (rule "inEqSimp_commuteGeq" (formula "25") (term "1,0,0,0,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "25") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "25") (term "1,0,1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "25") (term "1,0,1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "25") (term "0,1,0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "25") (term "0,1,0,0,0,0,0"))
                                 (rule "add_literals" (formula "25") (term "0,0,1,0,0,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "25") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "25") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "25") (term "0,1,0,0,0,0,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "25") (term "1,0,0,0,0,0") (ifseqformula "8"))
                                 (rule "qeq_literals" (formula "25") (term "0,1,0,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "25"))
                                 (rule "inEqSimp_contradInEq1" (formula "25") (term "1,0,0,0,0") (ifseqformula "7"))
                                 (rule "inEqSimp_homoInEq1" (formula "25") (term "0,1,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,0,0,0"))
                                 (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "25") (term "0,0,0,1,0,0,0,0"))
                                 (rule "add_literals" (formula "25") (term "0,0,0,0,1,0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,1,0,0,0,0"))
                                 (rule "add_literals" (formula "25") (term "1,1,0,0,1,0,0,0,0"))
                                 (rule "times_zero_1" (formula "25") (term "1,0,0,1,0,0,0,0"))
                                 (rule "add_literals" (formula "25") (term "0,0,1,0,0,0,0"))
                                 (rule "leq_literals" (formula "25") (term "0,1,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "25"))
                                 (rule "seqGetAlphaCast" (formula "17") (term "0"))
                                 (rule "castDel" (formula "17") (term "0"))
                                 (builtin "One Step Simplification" (formula "17"))
                                 (rule "true_left" (formula "17"))
                                 (rule "allLeft" (formula "48") (inst "t=j_0"))
                                 (rule "inEqSimp_commuteGeq" (formula "48") (term "1"))
                                 (rule "applyEq" (formula "48") (term "1,0,0,0") (ifseqformula "42"))
                                 (rule "replaceKnownSelect_taclet1011011_16" (formula "48") (term "0,0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet1011011_17" (formula "48") (term "0,0,0"))
                                 (rule "applyEq" (formula "48") (term "0,0,0") (ifseqformula "45"))
                                 (rule "eqSymm" (formula "48") (term "0,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "48") (term "1") (ifseqformula "44"))
                                 (rule "inEqSimp_homoInEq1" (formula "48") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "48") (term "0,0,1"))
                                 (rule "add_literals" (formula "48") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "48") (term "1,0,0,1"))
                                 (rule "add_literals" (formula "48") (term "0,0,1"))
                                 (rule "leq_literals" (formula "48") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "48"))
                                 (rule "inEqSimp_contradInEq1" (formula "48") (term "1") (ifseqformula "43"))
                                 (rule "qeq_literals" (formula "48") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "48"))
                                 (rule "allLeft" (formula "13") (inst "t=Z(0(#))"))
                                 (rule "leq_literals" (formula "13") (term "1,0"))
                                 (builtin "One Step Simplification" (formula "13"))
                                 (rule "inEqSimp_commuteGeq" (formula "13") (term "1"))
                                 (rule "applyEq" (formula "13") (term "0,0,0") (ifseqformula "20"))
                                 (builtin "One Step Simplification" (formula "13"))
                                 (rule "true_left" (formula "13"))
                                 (rule "allLeft" (formula "13") (inst "t=add(Z(neglit(1(#))),
    int::select(heap, self, IntLinkedList::$size))"))
                                 (rule "inEqSimp_homoInEq1" (formula "13") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "13") (term "1,0,1"))
                                 (rule "polySimp_rightDist" (formula "13") (term "1,0,1"))
                                 (rule "mul_literals" (formula "13") (term "0,1,0,1"))
                                 (rule "polySimp_addAssoc" (formula "13") (term "0,1"))
                                 (rule "polySimp_addComm0" (formula "13") (term "0,0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,1"))
                                 (rule "add_literals" (formula "13") (term "1,1,0,1"))
                                 (rule "times_zero_1" (formula "13") (term "1,0,1"))
                                 (rule "add_literals" (formula "13") (term "0,1"))
                                 (rule "leq_literals" (formula "13") (term "1"))
                                 (builtin "One Step Simplification" (formula "13"))
                                 (rule "inEqSimp_homoInEq0" (formula "13") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "13") (term "1,0,1"))
                                 (rule "polySimp_rightDist" (formula "13") (term "1,0,1"))
                                 (rule "mul_literals" (formula "13") (term "0,1,0,1"))
                                 (rule "polySimp_addAssoc" (formula "13") (term "0,1"))
                                 (rule "add_literals" (formula "13") (term "0,0,1"))
                                 (rule "add_zero_left" (formula "13") (term "0,1"))
                                 (rule "applyEq" (formula "13") (term "0,0,0") (ifseqformula "19"))
                                 (builtin "One Step Simplification" (formula "13"))
                                 (rule "true_left" (formula "13"))
                                 (rule "allLeft" (formula "13") (inst "t=i_2_0"))
                                 (rule "inEqSimp_commuteGeq" (formula "13") (term "1"))
                                 (rule "applyEq" (formula "13") (term "0,0,0,0") (ifseqformula "18"))
                                 (builtin "One Step Simplification" (formula "13"))
                                 (rule "true_left" (formula "13"))
                                 (rule "allLeft" (formula "16") (inst "t=j_0"))
                                 (rule "inEqSimp_commuteGeq" (formula "16") (term "1"))
                                 (rule "applyEq" (formula "16") (term "0,0,0,0") (ifseqformula "43"))
                                 (rule "replace_known_right" (formula "16") (term "0,0,0") (ifseqformula "60"))
                                 (builtin "One Step Simplification" (formula "16"))
                                 (rule "true_left" (formula "16"))
                                 (rule "allLeft" (formula "21") (inst "t=j_0"))
                                 (rule "inEqSimp_commuteGeq" (formula "21") (term "1"))
                                 (rule "applyEq" (formula "21") (term "1,1,0,0") (ifseqformula "43"))
                                 (rule "inEqSimp_contradInEq1" (formula "21") (term "1") (ifseqformula "45"))
                                 (rule "inEqSimp_homoInEq1" (formula "21") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,1"))
                                 (rule "add_literals" (formula "21") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "21") (term "1,0,0,1"))
                                 (rule "add_literals" (formula "21") (term "0,0,1"))
                                 (rule "leq_literals" (formula "21") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "21"))
                                 (rule "inEqSimp_contradInEq1" (formula "21") (term "1") (ifseqformula "44"))
                                 (rule "qeq_literals" (formula "21") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "21"))
                                 (rule "allLeft" (formula "14") (inst "t=Z(0(#))"))
                                 (rule "typeEqDerived" (formula "14") (term "0,0,0") (ifseqformula "20"))
                                 (builtin "One Step Simplification" (formula "14"))
                                 (rule "true_left" (formula "14"))
                                 (rule "allLeft" (formula "14") (inst "t=add(Z(neglit(1(#))),
    int::select(heap, self, IntLinkedList::$size))"))
                                 (rule "typeEqDerived" (formula "14") (term "0,0,0") (ifseqformula "19"))
                                 (builtin "One Step Simplification" (formula "14"))
                                 (rule "true_left" (formula "14"))
                                 (rule "allLeft" (formula "14") (inst "t=i_2_0"))
                                 (rule "typeEqDerived" (formula "14") (term "0,0,0") (ifseqformula "18"))
                                 (builtin "One Step Simplification" (formula "14"))
                                 (rule "true_left" (formula "14"))
                                 (rule "ifthenelse_split" (formula "6") (term "0"))
                                 (branch "∃ int j; ( (IntNode)self.nodeseq[j] = (IntNode)self.nodeseq[i_2_0] ∧ j ≥ 0 ∧ j ≤ -1 + self.size) TRUE"
                                    (rule "exLeft" (formula "6") (inst "sk=j_1"))
                                    (rule "andLeft" (formula "6"))
                                    (rule "andLeft" (formula "6"))
                                    (rule "eqSymm" (formula "9"))
                                    (rule "inEqSimp_homoInEq0" (formula "8"))
                                    (rule "polySimp_addComm1" (formula "8") (term "0"))
                                    (rule "applyEq" (formula "65") (term "0") (ifseqformula "9"))
                                    (builtin "One Step Simplification" (formula "65"))
                                    (rule "false_right" (formula "65"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                    (rule "polySimp_mulComm0" (formula "8") (term "1"))
                                    (rule "polySimp_rightDist" (formula "8") (term "1"))
                                    (rule "mul_literals" (formula "8") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "8") (term "1,1"))
                                    (rule "seqGetAlphaCast" (formula "21") (term "0"))
                                    (rule "castDel" (formula "21") (term "0"))
                                    (builtin "One Step Simplification" (formula "21"))
                                    (rule "true_left" (formula "21"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "31") (term "0") (ifseqformula "12"))
                                    (rule "replace_known_left" (formula "31") (term "0") (ifseqformula "32"))
                                    (builtin "One Step Simplification" (formula "31"))
                                    (rule "true_left" (formula "31"))
                                    (rule "seqGetAlphaCast" (formula "22") (term "0"))
                                    (rule "castDel" (formula "22") (term "0"))
                                    (builtin "One Step Simplification" (formula "22"))
                                    (rule "true_left" (formula "22"))
                                    (rule "seqGetAlphaCast" (formula "46") (term "0"))
                                    (rule "castedGetAny" (formula "46") (term "0"))
                                    (builtin "One Step Simplification" (formula "46"))
                                    (rule "true_left" (formula "46"))
                                    (rule "seqGetAlphaCast" (formula "49") (term "0"))
                                    (rule "castDel" (formula "49") (term "0"))
                                    (builtin "One Step Simplification" (formula "49"))
                                    (rule "true_left" (formula "49"))
                                    (rule "commute_or_2" (formula "28") (term "0"))
                                    (rule "seqGetAlphaCast" (formula "32") (term "0,0"))
                                    (rule "castedGetAny" (formula "32") (term "0"))
                                    (builtin "One Step Simplification" (formula "32"))
                                    (rule "true_left" (formula "32"))
                                    (rule "cut_direct" (formula "32") (term "1"))
                                    (branch "CUT: self.size ≤ 1 TRUE"
                                       (builtin "One Step Simplification" (formula "33"))
                                       (rule "true_left" (formula "33"))
                                       (rule "inEqSimp_antiSymm" (formula "41") (ifseqformula "32"))
                                       (rule "applyEq" (formula "30") (term "1,1,0,0,0,0,0") (ifseqformula "41"))
                                       (rule "applyEq" (formula "49") (term "0") (ifseqformula "41"))
                                       (rule "inEqSimp_homoInEq1" (formula "49"))
                                       (rule "mul_literals" (formula "49") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "49") (term "0"))
                                       (rule "add_literals" (formula "49") (term "0,0"))
                                       (rule "add_zero_left" (formula "49") (term "0"))
                                       (rule "applyEq" (formula "8") (term "0") (ifseqformula "41"))
                                       (rule "inEqSimp_homoInEq1" (formula "8"))
                                       (rule "mul_literals" (formula "8") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "8") (term "0"))
                                       (rule "add_literals" (formula "8") (term "0,0"))
                                       (rule "add_zero_left" (formula "8") (term "0"))
                                       (rule "applyEq" (formula "45") (term "1,1,0") (ifseqformula "41"))
                                       (rule "applyEq" (formula "52") (term "1,1,1,0,0,0,0,0") (ifseqformula "41"))
                                       (rule "add_literals" (formula "52") (term "1,1,0,0,0,0,0"))
                                       (rule "applyEq" (formula "59") (term "1,1,0,0") (ifseqformula "41"))
                                       (rule "applyEq" (formula "27") (term "1,1,1,0") (ifseqformula "41"))
                                       (rule "add_literals" (formula "27") (term "1,1,0"))
                                       (rule "applyEq" (formula "54") (term "1,1,1,0,0,1,1,0,0,0,0,0") (ifseqformula "41"))
                                       (rule "add_literals" (formula "54") (term "1,1,0,0,1,1,0,0,0,0,0"))
                                       (rule "applyEq" (formula "39") (term "1,1,0") (ifseqformula "41"))
                                       (rule "add_literals" (formula "39") (term "1,0"))
                                       (rule "applyEq" (formula "57") (term "1,1,1,0,0,1,1,0,0,0,0,0") (ifseqformula "41"))
                                       (rule "add_literals" (formula "57") (term "1,1,0,0,1,1,0,0,0,0,0"))
                                       (rule "applyEq" (formula "25") (term "1,1,0") (ifseqformula "41"))
                                       (rule "applyEq" (formula "10") (term "0") (ifseqformula "41"))
                                       (rule "inEqSimp_homoInEq1" (formula "10"))
                                       (rule "mul_literals" (formula "10") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "10") (term "0"))
                                       (rule "add_literals" (formula "10") (term "0,0"))
                                       (rule "applyEq" (formula "19") (term "1,1,0") (ifseqformula "41"))
                                       (rule "applyEq" (formula "4") (term "1,1,0") (ifseqformula "41"))
                                       (rule "applyEq" (formula "33") (term "0,1") (ifseqformula "41"))
                                       (rule "inEqSimp_homoInEq0" (formula "33") (term "1"))
                                       (rule "mul_literals" (formula "33") (term "1,0,1"))
                                       (rule "polySimp_addComm1" (formula "33") (term "0,1"))
                                       (rule "add_literals" (formula "33") (term "0,0,1"))
                                       (rule "applyEq" (formula "32") (term "0") (ifseqformula "41"))
                                       (rule "leq_literals" (formula "32"))
                                       (rule "true_left" (formula "32"))
                                       (rule "applyEq" (formula "34") (term "1,1,1,0") (ifseqformula "40"))
                                       (rule "add_literals" (formula "34") (term "1,1,0"))
                                       (rule "applyEq" (formula "30") (term "1,1,0,0,0") (ifseqformula "40"))
                                       (rule "applyEq" (formula "53") (term "1,1,0") (ifseqformula "40"))
                                       (rule "applyEq" (formula "29") (term "1,1,0,0") (ifseqformula "40"))
                                       (rule "applyEq" (formula "16") (term "1,1,0") (ifseqformula "40"))
                                       (rule "applyEq" (formula "18") (term "1,1,1,0,0,1,0") (ifseqformula "40"))
                                       (rule "add_literals" (formula "18") (term "1,1,0,0,1,0"))
                                       (rule "applyEq" (formula "26") (term "1,1,0") (ifseqformula "40"))
                                       (rule "applyEq" (formula "21") (term "1,1,0") (ifseqformula "40"))
                                       (rule "add_literals" (formula "21") (term "1,0"))
                                       (rule "applyEq" (formula "17") (term "1,1,0") (ifseqformula "40"))
                                       (rule "applyEq" (formula "1") (term "0") (ifseqformula "40"))
                                       (rule "inEqSimp_homoInEq1" (formula "1"))
                                       (rule "mul_literals" (formula "1") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0"))
                                       (rule "applyEq" (formula "55") (term "0,1") (ifseqformula "40"))
                                       (rule "inEqSimp_homoInEq0" (formula "55") (term "1"))
                                       (rule "mul_literals" (formula "55") (term "1,0,1"))
                                       (rule "polySimp_addComm1" (formula "55") (term "0,1"))
                                       (rule "add_literals" (formula "55") (term "0,0,1"))
                                       (rule "applyEq" (formula "45") (term "1,1,0") (ifseqformula "40"))
                                       (rule "applyEq" (formula "28") (term "1,1,0") (ifseqformula "40"))
                                       (rule "applyEq" (formula "56") (term "1,1,1,0") (ifseqformula "40"))
                                       (rule "add_literals" (formula "56") (term "1,1,0"))
                                       (rule "applyEq" (formula "49") (term "1,1,0") (ifseqformula "40"))
                                       (rule "add_literals" (formula "49") (term "1,0"))
                                       (rule "applyEq" (formula "41") (term "0") (ifseqformula "40"))
                                       (rule "qeq_literals" (formula "41"))
                                       (rule "true_left" (formula "41"))
                                       (rule "applyEq" (formula "36") (term "0") (ifseqformula "38"))
                                       (rule "applyEq" (formula "49") (term "0") (ifseqformula "48"))
                                       (rule "applyEq" (formula "22") (term "0") (ifseqformula "21"))
                                       (rule "applyEq" (formula "48") (term "1,1") (ifseqformula "36"))
                                       (rule "applyEq" (formula "38") (term "1") (ifseqformula "36"))
                                       (rule "applyEq" (formula "24") (term "1,1") (ifseqformula "36"))
                                       (rule "applyEq" (formula "37") (term "1,0") (ifseqformula "36"))
                                       (rule "applyEq" (formula "61") (term "0") (ifseqformula "36"))
                                       (rule "applyEq" (formula "50") (term "1,1") (ifseqformula "36"))
                                       (rule "applyEq" (formula "27") (term "1,0,0,0,0") (ifseqformula "36"))
                                       (rule "applyEq" (formula "44") (term "1") (ifseqformula "36"))
                                       (rule "applyEq" (formula "21") (term "1,1") (ifseqformula "36"))
                                       (rule "applyEq" (formula "31") (term "1,0") (ifseqformula "36"))
                                       (rule "applyEq" (formula "38") (term "1") (ifseqformula "39"))
                                       (rule "applyEq" (formula "55") (term "1") (ifseqformula "39"))
                                       (rule "applyEq" (formula "40") (term "1") (ifseqformula "39"))
                                       (rule "applyEq" (formula "48") (term "1,0") (ifseqformula "36"))
                                       (rule "applyEq" (formula "22") (term "1,0") (ifseqformula "36"))
                                       (builtin "One Step Simplification" (formula "22"))
                                       (rule "true_left" (formula "22"))
                                       (rule "applyEq" (formula "46") (term "1") (ifseqformula "47"))
                                       (rule "applyEq" (formula "49") (term "1") (ifseqformula "47"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "10"))
                                       (rule "mul_literals" (formula "10") (term "1"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "1"))
                                       (rule "mul_literals" (formula "31") (term "1,1"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "52") (term "1"))
                                       (rule "mul_literals" (formula "52") (term "1,1"))
                                       (rule "inEqSimp_contradInEq1" (formula "10") (ifseqformula "11"))
                                       (rule "qeq_literals" (formula "10") (term "0"))
                                       (builtin "One Step Simplification" (formula "10"))
                                       (rule "closeFalse" (formula "10"))
                                    )
                                    (branch "CUT: self.size ≤ 1 FALSE"
                                       (builtin "One Step Simplification" (formula "32"))
                                       (rule "inEqSimp_leqRight" (formula "61"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                       (rule "mul_literals" (formula "1") (term "1"))
                                       (rule "inEqSimp_subsumption1" (formula "42") (ifseqformula "1"))
                                       (rule "leq_literals" (formula "42") (term "0"))
                                       (builtin "One Step Simplification" (formula "42"))
                                       (rule "true_left" (formula "42"))
                                       (rule "allLeft" (formula "5") (inst "t=Z(0(#))"))
                                       (rule "leq_literals" (formula "5") (term "1,0"))
                                       (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "39")))
                                       (rule "inEqSimp_commuteGeq" (formula "5"))
                                       (rule "inEqSimp_contradInEq1" (formula "5") (ifseqformula "1"))
                                       (rule "qeq_literals" (formula "5") (term "0"))
                                       (builtin "One Step Simplification" (formula "5"))
                                       (rule "closeFalse" (formula "5"))
                                    )
                                 )
                                 (branch "∃ int j; ( (IntNode)self.nodeseq[j] = (IntNode)self.nodeseq[i_2_0] ∧ j ≥ 0 ∧ j ≤ -1 + self.size) FALSE"
                                    (rule "eqSymm" (formula "6"))
                                    (rule "applyEq" (formula "63") (term "0") (ifseqformula "6"))
                                    (builtin "One Step Simplification" (formula "63"))
                                    (rule "false_right" (formula "63"))
                                    (rule "nnf_ex2all" (formula "58"))
                                    (rule "nnf_notAnd" (formula "1") (term "0"))
                                    (rule "inEqSimp_notLeq" (formula "1") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0"))
                                    (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,0,1,0"))
                                    (rule "add_zero_left" (formula "1") (term "0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1,1,0"))
                                    (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "1") (term "1,0,0"))
                                    (rule "times_zero_1" (formula "1") (term "1,0,0,1,0,0"))
                                    (rule "add_zero_right" (formula "1") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1,0,0"))
                                    (rule "mul_literals" (formula "1") (term "1,1,0,0"))
                                    (rule "seqGetAlphaCast" (formula "19") (term "0"))
                                    (rule "castDel" (formula "19") (term "0"))
                                    (builtin "One Step Simplification" (formula "19"))
                                    (rule "true_left" (formula "19"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "29") (term "0") (ifseqformula "10"))
                                    (rule "replace_known_left" (formula "29") (term "0") (ifseqformula "30"))
                                    (builtin "One Step Simplification" (formula "29"))
                                    (rule "true_left" (formula "29"))
                                    (rule "seqGetAlphaCast" (formula "20") (term "0"))
                                    (rule "castDel" (formula "20") (term "0"))
                                    (builtin "One Step Simplification" (formula "20"))
                                    (rule "true_left" (formula "20"))
                                    (rule "seqGetAlphaCast" (formula "44") (term "0"))
                                    (rule "castedGetAny" (formula "44") (term "0"))
                                    (builtin "One Step Simplification" (formula "44"))
                                    (rule "true_left" (formula "44"))
                                    (rule "seqGetAlphaCast" (formula "47") (term "0"))
                                    (rule "castDel" (formula "47") (term "0"))
                                    (builtin "One Step Simplification" (formula "47"))
                                    (rule "true_left" (formula "47"))
                                    (rule "commute_or_2" (formula "26") (term "0"))
                                    (rule "seqGetAlphaCast" (formula "30") (term "0,0"))
                                    (rule "castedGetAny" (formula "30") (term "0"))
                                    (builtin "One Step Simplification" (formula "30"))
                                    (rule "true_left" (formula "30"))
                                    (rule "cut_direct" (formula "30") (term "1"))
                                    (branch "CUT: self.size ≤ 1 TRUE"
                                       (builtin "One Step Simplification" (formula "31"))
                                       (rule "true_left" (formula "31"))
                                       (rule "inEqSimp_antiSymm" (formula "39") (ifseqformula "30"))
                                       (rule "applyEq" (formula "5") (term "1,1,0") (ifseqformula "39"))
                                       (rule "applyEq" (formula "14") (term "1,1,0") (ifseqformula "39"))
                                       (rule "applyEq" (formula "28") (term "1,1,0,0,0") (ifseqformula "39"))
                                       (rule "applyEq" (formula "28") (term "1,1,0,0,0,0,0") (ifseqformula "39"))
                                       (rule "applyEq" (formula "19") (term "1,1,0") (ifseqformula "39"))
                                       (rule "add_literals" (formula "19") (term "1,0"))
                                       (rule "applyEq" (formula "2") (term "0") (ifseqformula "39"))
                                       (rule "inEqSimp_homoInEq1" (formula "2"))
                                       (rule "mul_literals" (formula "2") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0"))
                                       (rule "add_literals" (formula "2") (term "0,0"))
                                       (rule "add_zero_left" (formula "2") (term "0"))
                                       (rule "applyEq" (formula "43") (term "1,1,0") (ifseqformula "39"))
                                       (rule "applyEq" (formula "48") (term "1,1,0") (ifseqformula "39"))
                                       (rule "add_literals" (formula "48") (term "1,0"))
                                       (rule "applyEq" (formula "44") (term "1,1,0") (ifseqformula "39"))
                                       (rule "applyEq" (formula "57") (term "1,1,0,0") (ifseqformula "39"))
                                       (rule "applyEq" (formula "47") (term "0") (ifseqformula "39"))
                                       (rule "inEqSimp_homoInEq1" (formula "47"))
                                       (rule "mul_literals" (formula "47") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "47") (term "0"))
                                       (rule "add_literals" (formula "47") (term "0,0"))
                                       (rule "add_zero_left" (formula "47") (term "0"))
                                       (rule "applyEq" (formula "16") (term "1,1,1,0,0,1,0") (ifseqformula "39"))
                                       (rule "add_literals" (formula "16") (term "1,1,0,0,1,0"))
                                       (rule "applyEq" (formula "37") (term "1,1,0") (ifseqformula "39"))
                                       (rule "add_literals" (formula "37") (term "1,0"))
                                       (rule "applyEq" (formula "8") (term "0") (ifseqformula "39"))
                                       (rule "inEqSimp_homoInEq1" (formula "8"))
                                       (rule "mul_literals" (formula "8") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "8") (term "0"))
                                       (rule "add_literals" (formula "8") (term "0,0"))
                                       (rule "applyEq" (formula "52") (term "1,1,0") (ifseqformula "39"))
                                       (rule "applyEq" (formula "25") (term "1,1,1,0") (ifseqformula "39"))
                                       (rule "add_literals" (formula "25") (term "1,1,0"))
                                       (rule "applyEq" (formula "52") (term "1,1,1,0,0,1,1,0,0,0,0,0") (ifseqformula "39"))
                                       (rule "add_literals" (formula "52") (term "1,1,0,0,1,1,0,0,0,0,0"))
                                       (rule "applyEq" (formula "54") (term "0,1") (ifseqformula "39"))
                                       (rule "inEqSimp_homoInEq0" (formula "54") (term "1"))
                                       (rule "mul_literals" (formula "54") (term "1,0,1"))
                                       (rule "polySimp_addComm1" (formula "54") (term "0,1"))
                                       (rule "add_literals" (formula "54") (term "0,0,1"))
                                       (rule "applyEq" (formula "50") (term "1,1,1,0,0,0,0,0") (ifseqformula "39"))
                                       (rule "add_literals" (formula "50") (term "1,1,0,0,0,0,0"))
                                       (rule "applyEq" (formula "1") (term "1,1,0") (ifseqformula "39"))
                                       (rule "applyEq" (formula "33") (term "1,1,1,0") (ifseqformula "39"))
                                       (rule "add_literals" (formula "33") (term "1,1,0"))
                                       (rule "applyEq" (formula "31") (term "0,1") (ifseqformula "39"))
                                       (rule "inEqSimp_homoInEq0" (formula "31") (term "1"))
                                       (rule "mul_literals" (formula "31") (term "1,0,1"))
                                       (rule "polySimp_addComm1" (formula "31") (term "0,1"))
                                       (rule "add_literals" (formula "31") (term "0,0,1"))
                                       (rule "applyEq" (formula "15") (term "1,1,0") (ifseqformula "39"))
                                       (rule "applyEq" (formula "24") (term "1,1,0") (ifseqformula "39"))
                                       (rule "applyEq" (formula "55") (term "1,1,1,0") (ifseqformula "39"))
                                       (rule "add_literals" (formula "55") (term "1,1,0"))
                                       (rule "applyEq" (formula "17") (term "1,1,0") (ifseqformula "39"))
                                       (rule "applyEq" (formula "23") (term "1,1,0") (ifseqformula "39"))
                                       (rule "applyEq" (formula "40") (term "0") (ifseqformula "39"))
                                       (rule "qeq_literals" (formula "40"))
                                       (rule "true_left" (formula "40"))
                                       (rule "applyEq" (formula "26") (term "1,1,0") (ifseqformula "39"))
                                       (rule "applyEq" (formula "30") (term "0") (ifseqformula "39"))
                                       (rule "leq_literals" (formula "30"))
                                       (rule "true_left" (formula "30"))
                                       (rule "applyEq" (formula "27") (term "1,1,0,0") (ifseqformula "38"))
                                       (rule "applyEq" (formula "53") (term "1,1,1,0,0,1,1,0,0,0,0,0") (ifseqformula "38"))
                                       (rule "add_literals" (formula "53") (term "1,1,0,0,1,1,0,0,0,0,0"))
                                       (rule "applyEq" (formula "19") (term "0") (ifseqformula "20"))
                                       (rule "eqSymm" (formula "19"))
                                       (rule "applyEq" (formula "47") (term "0") (ifseqformula "46"))
                                       (rule "applyEq" (formula "34") (term "0") (ifseqformula "36"))
                                       (rule "applyEq" (formula "49") (term "1,1") (ifseqformula "34"))
                                       (rule "applyEq" (formula "60") (term "0") (ifseqformula "34"))
                                       (rule "applyEq" (formula "29") (term "1,0") (ifseqformula "34"))
                                       (rule "applyEq" (formula "46") (term "1,1") (ifseqformula "34"))
                                       (rule "applyEq" (formula "25") (term "1,0,0,0,0") (ifseqformula "34"))
                                       (rule "applyEq" (formula "47") (term "1,0") (ifseqformula "34"))
                                       (rule "applyEq" (formula "35") (term "1,0") (ifseqformula "34"))
                                       (rule "applyEq" (formula "42") (term "1") (ifseqformula "34"))
                                       (rule "applyEq" (formula "19") (term "1,0") (ifseqformula "34"))
                                       (builtin "One Step Simplification" (formula "19"))
                                       (rule "true_left" (formula "19"))
                                       (rule "applyEq" (formula "21") (term "1,1") (ifseqformula "33"))
                                       (rule "applyEq" (formula "34") (term "1") (ifseqformula "33"))
                                       (rule "applyEq" (formula "52") (term "1") (ifseqformula "36"))
                                       (rule "applyEq" (formula "37") (term "1") (ifseqformula "36"))
                                       (rule "applyEq" (formula "35") (term "1") (ifseqformula "36"))
                                       (rule "applyEq" (formula "47") (term "1") (ifseqformula "45"))
                                       (rule "applyEq" (formula "44") (term "1") (ifseqformula "45"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "8"))
                                       (rule "mul_literals" (formula "8") (term "1"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "50") (term "1"))
                                       (rule "mul_literals" (formula "50") (term "1,1"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "1"))
                                       (rule "mul_literals" (formula "29") (term "1,1"))
                                       (rule "inEqSimp_subsumption1" (formula "50") (term "1") (ifseqformula "9"))
                                       (rule "leq_literals" (formula "50") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "50"))
                                       (rule "true_left" (formula "50"))
                                       (rule "inEqSimp_subsumption1" (formula "29") (term "1") (ifseqformula "9"))
                                       (rule "leq_literals" (formula "29") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "29"))
                                       (rule "true_left" (formula "29"))
                                       (rule "inEqSimp_contradInEq0" (formula "9") (ifseqformula "8"))
                                       (rule "qeq_literals" (formula "9") (term "0"))
                                       (builtin "One Step Simplification" (formula "9"))
                                       (rule "closeFalse" (formula "9"))
                                    )
                                    (branch "CUT: self.size ≤ 1 FALSE"
                                       (builtin "One Step Simplification" (formula "30"))
                                       (rule "inEqSimp_leqRight" (formula "59"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                       (rule "mul_literals" (formula "1") (term "1"))
                                       (rule "inEqSimp_subsumption1" (formula "40") (ifseqformula "1"))
                                       (rule "leq_literals" (formula "40") (term "0"))
                                       (builtin "One Step Simplification" (formula "40"))
                                       (rule "true_left" (formula "40"))
                                       (rule "allLeft" (formula "6") (inst "t=Z(0(#))"))
                                       (rule "leq_literals" (formula "6") (term "1,0"))
                                       (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "37")))
                                       (rule "inEqSimp_commuteGeq" (formula "6"))
                                       (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "6"))
                                       (rule "qeq_literals" (formula "1") (term "0"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "closeFalse" (formula "1"))
                                    )
                                 )
                              )
                           )
                        )
                        (branch "(IntNode)self.nodeseq[i_2_0].<created> = TRUE FALSE"
                           (rule "applyEqReverse" (formula "48") (term "1,1") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "replace_known_right" (formula "1") (term "0,1,0,0") (ifseqformula "40"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "eqSymm" (formula "1"))
                           (rule "applyEq" (formula "45") (term "0") (ifseqformula "1"))
                           (builtin "One Step Simplification" (formula "45"))
                           (rule "false_right" (formula "45"))
                           (rule "allLeft" (formula "18") (inst "t=Z(0(#))"))
                           (rule "add_zero_right" (formula "18") (term "1,1,0,0"))
                           (rule "leq_literals" (formula "18") (term "1,0"))
                           (builtin "One Step Simplification" (formula "18"))
                           (rule "inEqSimp_homoInEq1" (formula "18") (term "1"))
                           (rule "times_zero_2" (formula "18") (term "1,0,1"))
                           (rule "add_zero_right" (formula "18") (term "0,1"))
                           (rule "applyEq" (formula "18") (term "1,0,0") (ifseqformula "21"))
                           (rule "eqSymm" (formula "18") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1"))
                           (rule "mul_literals" (formula "18") (term "1,1"))
                           (rule "allLeft" (formula "36") (inst "t=Z(0(#))"))
                           (rule "add_zero_right" (formula "36") (term "1,1,0,0"))
                           (rule "leq_literals" (formula "36") (term "1,0"))
                           (builtin "One Step Simplification" (formula "36"))
                           (rule "inEqSimp_homoInEq1" (formula "36") (term "1"))
                           (rule "times_zero_2" (formula "36") (term "1,0,1"))
                           (rule "add_zero_right" (formula "36") (term "0,1"))
                           (rule "applyEq" (formula "36") (term "1,0,0") (ifseqformula "21"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1"))
                           (rule "mul_literals" (formula "36") (term "1,1"))
                           (rule "pullOutSelect" (formula "36") (term "0,0") (inst "selectSK=IntNode_next_2"))
                           (rule "simplifySelectOfAnon" (formula "36"))
                           (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "45")) (ifInst ""  (formula "20")))
                           (rule "eqSymm" (formula "37") (term "0"))
                           (rule "elementOfUnion" (formula "36") (term "0,0"))
                           (rule "elementOfInfiniteUnion" (formula "36") (term "1,0,0"))
                           (builtin "One Step Simplification" (formula "36"))
                           (rule "elementOfSingleton" (formula "36") (term "0,0,0"))
                           (builtin "One Step Simplification" (formula "36"))
                           (rule "elementOfSingleton" (formula "36") (term "1,0,0,0"))
                           (builtin "One Step Simplification" (formula "36"))
                           (rule "applyEqReverse" (formula "37") (term "1,0") (ifseqformula "36"))
                           (rule "hideAuxiliaryEq" (formula "36"))
                           (rule "allLeft" (formula "16") (inst "t=Z(0(#))"))
                           (rule "leq_literals" (formula "16") (term "1,0,0,0,0,0"))
                           (builtin "One Step Simplification" (formula "16"))
                           (rule "inEqSimp_commuteGeq" (formula "16") (term "1,0,0,0,0"))
                           (rule "applyEq" (formula "16") (term "1,0,0,0,0,0,0") (ifseqformula "22"))
                           (rule "inEqSimp_contradInEq1" (formula "16") (term "1,0,0,0,0") (ifseqformula "26"))
                           (rule "qeq_literals" (formula "16") (term "0,1,0,0,0,0"))
                           (builtin "One Step Simplification" (formula "16"))
                           (rule "commute_or_2" (formula "16") (term "0"))
                           (rule "inEqSimp_or_weaken2" (formula "16") (term "0,0"))
                           (rule "add_literals" (formula "16") (term "1,0,1,0,0"))
                           (builtin "One Step Simplification" (formula "16"))
                           (rule "allLeft" (formula "17") (inst "t=add(Z(neglit(1(#))),
    int::select(heap, self, IntLinkedList::$size))"))
                           (rule "inEqSimp_homoInEq1" (formula "17") (term "1,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "17") (term "1,0,1,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "17") (term "1,0,1,0,0,0,0"))
                           (rule "mul_literals" (formula "17") (term "0,1,0,1,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "17") (term "0,1,0,0,0,0"))
                           (rule "polySimp_addComm0" (formula "17") (term "0,0,1,0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,1,0,0,0,0"))
                           (rule "add_literals" (formula "17") (term "1,1,0,1,0,0,0,0"))
                           (rule "times_zero_1" (formula "17") (term "1,0,1,0,0,0,0"))
                           (rule "add_zero_right" (formula "17") (term "0,1,0,0,0,0"))
                           (rule "leq_literals" (formula "17") (term "1,0,0,0,0"))
                           (builtin "One Step Simplification" (formula "17"))
                           (rule "inEqSimp_homoInEq0" (formula "17") (term "1,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "17") (term "1,0,1,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "17") (term "1,0,1,0,0,0,0"))
                           (rule "mul_literals" (formula "17") (term "0,1,0,1,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "17") (term "0,1,0,0,0,0"))
                           (rule "add_literals" (formula "17") (term "0,0,1,0,0,0,0"))
                           (rule "add_zero_left" (formula "17") (term "0,1,0,0,0,0"))
                           (rule "applyEq" (formula "17") (term "1,0,0,0,0,0,0") (ifseqformula "25"))
                           (rule "inEqSimp_invertInEq1" (formula "17") (term "1,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "17") (term "0,1,0,0,0,0"))
                           (rule "times_zero_2" (formula "17") (term "1,1,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "17") (term "0,1,0,0,0,0"))
                           (rule "inEqSimp_contradInEq1" (formula "17") (term "1,0,0,0,0") (ifseqformula "27"))
                           (rule "qeq_literals" (formula "17") (term "0,1,0,0,0,0"))
                           (builtin "One Step Simplification" (formula "17"))
                           (rule "commute_or_2" (formula "17") (term "0"))
                           (rule "inEqSimp_or_weaken3" (formula "17") (term "0"))
                           (rule "polySimp_addAssoc" (formula "17") (term "1,0,1,0"))
                           (rule "add_literals" (formula "17") (term "0,1,0,1,0"))
                           (rule "add_zero_left" (formula "17") (term "1,0,1,0"))
                           (builtin "One Step Simplification" (formula "17"))
                           (rule "ifthenelse_split" (formula "49") (term "0,1"))
                           (branch "self.size = 1 + i_2_0 TRUE"
                              (rule "eqSymm" (formula "50") (term "1"))
                              (rule "applyEq" (formula "28") (term "0") (ifseqformula "1"))
                              (rule "inEqSimp_homoInEq1" (formula "28"))
                              (rule "polySimp_mulComm0" (formula "28") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "28") (term "1,0"))
                              (rule "mul_literals" (formula "28") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "28") (term "0"))
                              (rule "add_literals" (formula "28") (term "0,0"))
                              (rule "add_zero_left" (formula "28") (term "0"))
                              (rule "applyEq" (formula "38") (term "1,1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "50") (term "1,1,0,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "41") (term "1,1,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "36") (term "1,1,0") (ifseqformula "1"))
                              (rule "polySimp_addAssoc" (formula "36") (term "1,0"))
                              (rule "add_literals" (formula "36") (term "0,1,0"))
                              (rule "add_zero_left" (formula "36") (term "1,0"))
                              (rule "applyEq" (formula "31") (term "1,1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "12") (term "1,1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "22") (term "1,1,1,0") (ifseqformula "1"))
                              (rule "polySimp_addAssoc" (formula "22") (term "1,1,0"))
                              (rule "add_literals" (formula "22") (term "0,1,1,0"))
                              (rule "add_zero_left" (formula "22") (term "1,1,0"))
                              (rule "applyEq" (formula "39") (term "1,1,1,0") (ifseqformula "1"))
                              (rule "polySimp_addAssoc" (formula "39") (term "1,1,0"))
                              (rule "add_literals" (formula "39") (term "0,1,1,0"))
                              (rule "add_zero_left" (formula "39") (term "1,1,0"))
                              (rule "applyEq" (formula "18") (term "1,1,1,0") (ifseqformula "1"))
                              (rule "polySimp_addAssoc" (formula "18") (term "1,1,0"))
                              (rule "add_literals" (formula "18") (term "0,1,1,0"))
                              (rule "add_zero_left" (formula "18") (term "1,1,0"))
                              (rule "applyEq" (formula "11") (term "1,1,1,0,0,1,0") (ifseqformula "1"))
                              (rule "polySimp_addAssoc" (formula "11") (term "1,1,0,0,1,0"))
                              (rule "add_literals" (formula "11") (term "0,1,1,0,0,1,0"))
                              (rule "add_zero_left" (formula "11") (term "1,1,0,0,1,0"))
                              (rule "applyEq" (formula "32") (term "1,1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "16") (term "1,1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "21") (term "0,1") (ifseqformula "1"))
                              (rule "inEqSimp_homoInEq0" (formula "21") (term "1"))
                              (rule "polySimp_mulComm0" (formula "21") (term "1,0,1"))
                              (rule "polySimp_rightDist" (formula "21") (term "1,0,1"))
                              (rule "mul_literals" (formula "21") (term "0,1,0,1"))
                              (rule "polySimp_addAssoc" (formula "21") (term "0,1"))
                              (rule "add_literals" (formula "21") (term "0,0,1"))
                              (rule "add_zero_left" (formula "21") (term "0,1"))
                              (rule "applyEq" (formula "26") (term "1,1,0") (ifseqformula "1"))
                              (rule "polySimp_addAssoc" (formula "26") (term "1,0"))
                              (rule "add_literals" (formula "26") (term "0,1,0"))
                              (rule "add_zero_left" (formula "26") (term "1,0"))
                              (rule "applyEq" (formula "14") (term "1,1,0") (ifseqformula "1"))
                              (rule "polySimp_addAssoc" (formula "14") (term "1,0"))
                              (rule "add_literals" (formula "14") (term "0,1,0"))
                              (rule "add_zero_left" (formula "14") (term "1,0"))
                              (rule "applyEq" (formula "17") (term "1,1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "3") (term "0") (ifseqformula "1"))
                              (rule "inEqSimp_homoInEq1" (formula "3"))
                              (rule "polySimp_pullOutFactor1" (formula "3") (term "0"))
                              (rule "add_literals" (formula "3") (term "1,0"))
                              (rule "times_zero_1" (formula "3") (term "0"))
                              (rule "leq_literals" (formula "3"))
                              (rule "true_left" (formula "3"))
                              (rule "applyEq" (formula "34") (term "0") (ifseqformula "1"))
                              (rule "inEqSimp_homoInEq1" (formula "34"))
                              (rule "polySimp_mulComm0" (formula "34") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "34") (term "1,0"))
                              (rule "mul_literals" (formula "34") (term "0,1,0"))
                              (rule "polySimp_addComm1" (formula "34") (term "0"))
                              (rule "polySimp_addAssoc" (formula "34") (term "0,0"))
                              (rule "add_literals" (formula "34") (term "0,0,0"))
                              (rule "add_zero_left" (formula "34") (term "0,0"))
                              (rule "applyEq" (formula "18") (term "1,1,0,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "37") (term "1,1,1,0,0,1,1,0,0,0,0,0") (ifseqformula "1"))
                              (rule "polySimp_addAssoc" (formula "37") (term "1,1,0,0,1,1,0,0,0,0,0"))
                              (rule "add_literals" (formula "37") (term "0,1,1,0,0,1,1,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "37") (term "1,1,0,0,1,1,0,0,0,0,0"))
                              (rule "applyEq" (formula "18") (term "1,1,0,0,0,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "9") (term "1,1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "36") (term "1,1,1,0,0,0") (ifseqformula "1"))
                              (rule "polySimp_addAssoc" (formula "36") (term "1,1,0,0,0"))
                              (rule "add_literals" (formula "36") (term "0,1,1,0,0,0"))
                              (rule "add_zero_left" (formula "36") (term "1,1,0,0,0"))
                              (rule "applyEq" (formula "38") (term "1,1,1,0,0,1,1,0,0,0,0,0") (ifseqformula "1"))
                              (rule "polySimp_addAssoc" (formula "38") (term "1,1,0,0,1,1,0,0,0,0,0"))
                              (rule "add_literals" (formula "38") (term "0,1,1,0,0,1,1,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "38") (term "1,1,0,0,1,1,0,0,0,0,0"))
                              (rule "applyEq" (formula "8") (term "1,1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "49") (term "1,0,0,1,0,0") (ifseqformula "25"))
                              (rule "applyEq" (formula "2") (term "0") (ifseqformula "35"))
                              (rule "eqSymm" (formula "2"))
                              (rule "applyEq" (formula "49") (term "1,0,1") (ifseqformula "25"))
                              (rule "applyEq" (formula "43") (term "1,0") (ifseqformula "25"))
                              (rule "close" (formula "43") (ifseqformula "24"))
                           )
                           (branch "self.size = 1 + i_2_0 FALSE"
                              (rule "eqSymm" (formula "50") (term "1"))
                              (rule "inEqSimp_strengthen1" (formula "2") (ifseqformula "49"))
                              (rule "polySimp_addAssoc" (formula "2") (term "1"))
                              (rule "add_literals" (formula "2") (term "0,1"))
                              (rule "inEqSimp_contradEq7" (formula "49") (ifseqformula "2"))
                              (rule "polySimp_rightDist" (formula "49") (term "1,0,0"))
                              (rule "mul_literals" (formula "49") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "49") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "49") (term "0,0,0"))
                              (rule "add_literals" (formula "49") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "49") (term "0,0"))
                              (rule "add_literals" (formula "49") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "49") (term "1,0,0"))
                              (rule "add_zero_right" (formula "49") (term "0,0"))
                              (rule "leq_literals" (formula "49") (term "0"))
                              (builtin "One Step Simplification" (formula "49"))
                              (rule "false_right" (formula "49"))
                              (rule "seqGetAlphaCast" (formula "47") (term "0"))
                              (rule "castedGetAny" (formula "1") (term "0"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "true_left" (formula "1"))
                              (rule "ifthenelse_split" (formula "36") (term "0"))
                              (branch "∃ int j; ( (IntNode)self.nodeseq[j] = self.first ∧ j ≥ 0 ∧ j ≤ -1 + self.size) TRUE"
                                 (rule "exLeft" (formula "36") (inst "sk=j_1"))
                                 (rule "andLeft" (formula "36"))
                                 (rule "andLeft" (formula "36"))
                                 (rule "eqSymm" (formula "39"))
                                 (rule "inEqSimp_homoInEq0" (formula "38"))
                                 (rule "polySimp_addComm1" (formula "38") (term "0"))
                                 (rule "applyEq" (formula "47") (term "0") (ifseqformula "39"))
                                 (builtin "One Step Simplification" (formula "47"))
                                 (rule "false_right" (formula "47"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "38"))
                                 (rule "polySimp_mulComm0" (formula "38") (term "1"))
                                 (rule "polySimp_rightDist" (formula "38") (term "1"))
                                 (rule "mul_literals" (formula "38") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "38") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "38") (term "1,1"))
                                 (rule "allLeft" (formula "18") (inst "t=i_2_0"))
                                 (rule "inEqSimp_commuteGeq" (formula "18") (term "1,0,0,0,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "18") (term "1,0,0,0,0") (ifseqformula "2"))
                                 (rule "inEqSimp_homoInEq1" (formula "18") (term "0,1,0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1,0,0,0,0"))
                                 (rule "add_literals" (formula "18") (term "1,1,0,0,1,0,0,0,0"))
                                 (rule "times_zero_1" (formula "18") (term "1,0,0,1,0,0,0,0"))
                                 (rule "add_zero_right" (formula "18") (term "0,0,1,0,0,0,0"))
                                 (rule "leq_literals" (formula "18") (term "0,1,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "18"))
                                 (rule "inEqSimp_contradInEq1" (formula "18") (term "1,0,0,0,0") (ifseqformula "3"))
                                 (rule "qeq_literals" (formula "18") (term "0,1,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "18"))
                                 (rule "commute_or_2" (formula "18") (term "0"))
                                 (rule "allLeft" (formula "41") (inst "t=add(Z(1(#)), i_2_0)"))
                                 (rule "inEqSimp_commuteGeq" (formula "41") (term "1"))
                                 (rule "inEqSimp_homoInEq0" (formula "41") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "41") (term "1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "41") (term "1,0,1,0"))
                                 (rule "mul_literals" (formula "41") (term "0,1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "41") (term "0,1,0"))
                                 (rule "add_literals" (formula "41") (term "0,0,1,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "41") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "41") (term "0,1,0"))
                                 (rule "polySimp_elimOne" (formula "41") (term "0,1,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "41") (term "1,0") (ifseqformula "3"))
                                 (rule "qeq_literals" (formula "41") (term "0,1,0"))
                                 (builtin "One Step Simplification" (formula "41"))
                                 (rule "inEqSimp_contradInEq1" (formula "41") (term "1") (ifseqformula "2"))
                                 (rule "inEqSimp_homoInEq1" (formula "41") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "41") (term "1,0,0,1"))
                                 (rule "mul_literals" (formula "41") (term "0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "41") (term "0,0,1"))
                                 (rule "polySimp_addComm1" (formula "41") (term "0,0,0,1"))
                                 (rule "add_literals" (formula "41") (term "0,0,0,0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "41") (term "0,0,1"))
                                 (rule "add_literals" (formula "41") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "41") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "41") (term "0,0,1"))
                                 (rule "leq_literals" (formula "41") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "41"))
                                 (rule "pullOutSelect" (formula "41") (term "0") (inst "selectSK=IntNode_data_3"))
                                 (rule "simplifySelectOfAnon" (formula "41"))
                                 (builtin "One Step Simplification" (formula "41"))
                                 (rule "eqSymm" (formula "42"))
                                 (rule "applyEqReverse" (formula "41") (term "1") (ifseqformula "42"))
                                 (rule "hideAuxiliaryEq" (formula "42"))
                                 (rule "elementOfUnion" (formula "41") (term "0,0,0"))
                                 (rule "elementOfSingleton" (formula "41") (term "0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "41"))
                                 (rule "elementOfInfiniteUnion" (formula "41") (term "0,0,0"))
                                 (builtin "One Step Simplification" (formula "41"))
                                 (rule "elementOfSingleton" (formula "41") (term "1,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "41"))
                                 (rule "eqSymm" (formula "41") (term "1,0,0,0,0"))
                                 (rule "allLeft" (formula "43") (inst "t=add(Z(1(#)), i_2_0)"))
                                 (rule "polySimp_addAssoc" (formula "43") (term "1,1,0,0"))
                                 (rule "add_literals" (formula "43") (term "0,1,1,0,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "43") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "43") (term "1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "43") (term "1,0,1,0"))
                                 (rule "mul_literals" (formula "43") (term "0,1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "43") (term "0,1,0"))
                                 (rule "add_literals" (formula "43") (term "0,0,1,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "43") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "43") (term "1,0,1"))
                                 (rule "polySimp_rightDist" (formula "43") (term "1,0,1"))
                                 (rule "mul_literals" (formula "43") (term "0,1,0,1"))
                                 (rule "polySimp_addComm1" (formula "43") (term "0,1"))
                                 (rule "polySimp_addAssoc" (formula "43") (term "0,0,1"))
                                 (rule "add_literals" (formula "43") (term "0,0,0,1"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "43") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "43") (term "0,1,0"))
                                 (rule "polySimp_elimOne" (formula "43") (term "0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "43") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "43") (term "1,1"))
                                 (rule "mul_literals" (formula "43") (term "0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "43") (term "1,1,1"))
                                 (rule "polySimp_elimOne" (formula "43") (term "1,1,1"))
                                 (rule "inEqSimp_contradInEq1" (formula "43") (term "1,0") (ifseqformula "3"))
                                 (rule "qeq_literals" (formula "43") (term "0,1,0"))
                                 (builtin "One Step Simplification" (formula "43"))
                                 (rule "pullOutSelect" (formula "43") (term "0,0") (inst "selectSK=IntNode_next_3"))
                                 (rule "simplifySelectOfAnon" (formula "43"))
                                 (builtin "One Step Simplification" (formula "43"))
                                 (rule "eqSymm" (formula "44") (term "0"))
                                 (rule "elementOfUnion" (formula "43") (term "0,0,0"))
                                 (rule "elementOfInfiniteUnion" (formula "43") (term "1,0,0,0"))
                                 (builtin "One Step Simplification" (formula "43"))
                                 (rule "elementOfSingleton" (formula "43") (term "0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "43"))
                                 (rule "elementOfSingleton" (formula "43") (term "1,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "43"))
                                 (rule "allLeft" (formula "19") (inst "t=add(Z(1(#)), i_2_0)"))
                                 (rule "inEqSimp_commuteGeq" (formula "19") (term "1,0,0,0,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "19") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "19") (term "1,0,1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "19") (term "1,0,1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "19") (term "0,1,0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "19") (term "0,1,0,0,0,0,0"))
                                 (rule "add_literals" (formula "19") (term "0,0,1,0,0,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "19") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "19") (term "0,1,0,0,0,0,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "19") (term "1,0,0,0,0") (ifseqformula "2"))
                                 (rule "inEqSimp_homoInEq1" (formula "19") (term "0,1,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0,0,0"))
                                 (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "19") (term "0,0,0,1,0,0,0,0"))
                                 (rule "add_literals" (formula "19") (term "0,0,0,0,1,0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,1,0,0,0,0"))
                                 (rule "add_literals" (formula "19") (term "1,1,0,0,1,0,0,0,0"))
                                 (rule "times_zero_1" (formula "19") (term "1,0,0,1,0,0,0,0"))
                                 (rule "add_literals" (formula "19") (term "0,0,1,0,0,0,0"))
                                 (rule "leq_literals" (formula "19") (term "0,1,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "19"))
                                 (rule "inEqSimp_contradInEq1" (formula "19") (term "1,0,0,0,0") (ifseqformula "3"))
                                 (rule "qeq_literals" (formula "19") (term "0,1,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "19"))
                                 (rule "allLeft" (formula "23") (inst "t=add(Z(1(#)), i_2_0)"))
                                 (rule "polySimp_addAssoc" (formula "23") (term "1,1,0,0"))
                                 (rule "add_literals" (formula "23") (term "0,1,1,0,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "23") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "23") (term "1,0,1"))
                                 (rule "polySimp_rightDist" (formula "23") (term "1,0,1"))
                                 (rule "mul_literals" (formula "23") (term "0,1,0,1"))
                                 (rule "polySimp_addComm1" (formula "23") (term "0,1"))
                                 (rule "polySimp_addAssoc" (formula "23") (term "0,0,1"))
                                 (rule "add_literals" (formula "23") (term "0,0,0,1"))
                                 (rule "inEqSimp_homoInEq0" (formula "23") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "23") (term "1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "23") (term "1,0,1,0"))
                                 (rule "mul_literals" (formula "23") (term "0,1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "23") (term "0,1,0"))
                                 (rule "add_literals" (formula "23") (term "0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "23") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "23") (term "1,1"))
                                 (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1"))
                                 (rule "mul_literals" (formula "23") (term "0,1,1"))
                                 (rule "polySimp_elimOne" (formula "23") (term "1,1,1"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "23") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "23") (term "0,1,0"))
                                 (rule "polySimp_elimOne" (formula "23") (term "0,1,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "23") (term "1,0") (ifseqformula "3"))
                                 (rule "qeq_literals" (formula "23") (term "0,1,0"))
                                 (builtin "One Step Simplification" (formula "23"))
                                 (rule "allLeft" (formula "15") (inst "t=add(Z(1(#)), i_2_0)"))
                                 (rule "inEqSimp_commuteGeq" (formula "15") (term "1"))
                                 (rule "inEqSimp_homoInEq0" (formula "15") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "15") (term "1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "15") (term "1,0,1,0"))
                                 (rule "mul_literals" (formula "15") (term "0,1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "15") (term "0,1,0"))
                                 (rule "add_literals" (formula "15") (term "0,0,1,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "15") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "15") (term "0,1,0"))
                                 (rule "polySimp_elimOne" (formula "15") (term "0,1,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "15") (term "1") (ifseqformula "2"))
                                 (rule "inEqSimp_homoInEq1" (formula "15") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1"))
                                 (rule "mul_literals" (formula "15") (term "0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "15") (term "0,0,1"))
                                 (rule "polySimp_addComm1" (formula "15") (term "0,0,0,1"))
                                 (rule "add_literals" (formula "15") (term "0,0,0,0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,1"))
                                 (rule "add_literals" (formula "15") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "15") (term "1,0,0,1"))
                                 (rule "add_literals" (formula "15") (term "0,0,1"))
                                 (rule "leq_literals" (formula "15") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "15"))
                                 (rule "inEqSimp_contradInEq1" (formula "15") (term "1") (ifseqformula "3"))
                                 (rule "qeq_literals" (formula "15") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "15"))
                                 (rule "allLeft" (formula "11") (inst "t=add(Z(1(#)), i_2_0)"))
                                 (rule "inEqSimp_commuteGeq" (formula "11") (term "1"))
                                 (rule "inEqSimp_homoInEq0" (formula "11") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "11") (term "1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "11") (term "1,0,1,0"))
                                 (rule "mul_literals" (formula "11") (term "0,1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "11") (term "0,1,0"))
                                 (rule "add_literals" (formula "11") (term "0,0,1,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "11") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "11") (term "0,1,0"))
                                 (rule "polySimp_elimOne" (formula "11") (term "0,1,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "11") (term "1,0") (ifseqformula "3"))
                                 (rule "qeq_literals" (formula "11") (term "0,1,0"))
                                 (builtin "One Step Simplification" (formula "11"))
                                 (rule "inEqSimp_contradInEq1" (formula "11") (term "1") (ifseqformula "2"))
                                 (rule "inEqSimp_homoInEq1" (formula "11") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1"))
                                 (rule "mul_literals" (formula "11") (term "0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "11") (term "0,0,1"))
                                 (rule "polySimp_addComm1" (formula "11") (term "0,0,0,1"))
                                 (rule "add_literals" (formula "11") (term "0,0,0,0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,1"))
                                 (rule "add_literals" (formula "11") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "11") (term "1,0,0,1"))
                                 (rule "add_literals" (formula "11") (term "0,0,1"))
                                 (rule "leq_literals" (formula "11") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "11"))
                                 (rule "notLeft" (formula "11"))
                                 (rule "replace_known_right" (formula "46") (term "0,0,0,0") (ifseqformula "53"))
                                 (builtin "One Step Simplification" (formula "46"))
                                 (rule "replace_known_right" (formula "44") (term "0,0,1,0,0") (ifseqformula "53"))
                                 (builtin "One Step Simplification" (formula "44"))
                                 (rule "ifthenelse_negated" (formula "46") (term "0"))
                                 (rule "allLeft" (formula "48") (inst "t=i_2_0"))
                                 (rule "replaceKnownSelect_taclet1011011_15" (formula "48") (term "0,0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet101011011_21" (formula "48") (term "0,0,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "48") (term "1"))
                                 (rule "polySimp_addComm1" (formula "48") (term "0,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "48") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "48") (term "1,1"))
                                 (rule "mul_literals" (formula "48") (term "0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "48") (term "1,1,1"))
                                 (rule "polySimp_elimOne" (formula "48") (term "1,1,1"))
                                 (rule "inEqSimp_contradInEq1" (formula "48") (term "1") (ifseqformula "2"))
                                 (rule "inEqSimp_homoInEq1" (formula "48") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "48") (term "1,0,0,1"))
                                 (rule "mul_literals" (formula "48") (term "0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "48") (term "0,0,1"))
                                 (rule "polySimp_addComm1" (formula "48") (term "0,0,0,1"))
                                 (rule "add_literals" (formula "48") (term "0,0,0,0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "48") (term "0,0,1"))
                                 (rule "add_literals" (formula "48") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "48") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "48") (term "0,0,1"))
                                 (rule "leq_literals" (formula "48") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "48"))
                                 (rule "inEqSimp_contradInEq1" (formula "48") (term "1") (ifseqformula "3"))
                                 (rule "qeq_literals" (formula "48") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "48"))
                                 (rule "replace_known_left" (formula "60") (term "1") (ifseqformula "48"))
                                 (builtin "One Step Simplification" (formula "60"))
                                 (rule "allRight" (formula "60") (inst "sk=j_1_0"))
                                 (rule "orRight" (formula "60"))
                                 (rule "orRight" (formula "60"))
                                 (rule "orRight" (formula "62"))
                                 (rule "notRight" (formula "62"))
                                 (rule "inEqSimp_leqRight" (formula "61"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0"))
                                 (rule "inEqSimp_geqRight" (formula "62"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "0"))
                                 (rule "allLeft" (formula "28") (inst "t=i_2_0"))
                                 (rule "inEqSimp_homoInEq1" (formula "28") (term "1"))
                                 (rule "polySimp_addComm1" (formula "28") (term "0,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "28") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "28") (term "1,1"))
                                 (rule "mul_literals" (formula "28") (term "0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1"))
                                 (rule "polySimp_elimOne" (formula "28") (term "1,1,1"))
                                 (rule "inEqSimp_contradInEq1" (formula "28") (term "1") (ifseqformula "5"))
                                 (rule "inEqSimp_homoInEq1" (formula "28") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1"))
                                 (rule "mul_literals" (formula "28") (term "0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "28") (term "0,0,1"))
                                 (rule "polySimp_addComm1" (formula "28") (term "0,0,0,1"))
                                 (rule "add_literals" (formula "28") (term "0,0,0,0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,1"))
                                 (rule "add_literals" (formula "28") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "28") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "28") (term "0,0,1"))
                                 (rule "leq_literals" (formula "28") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "28"))
                                 (rule "inEqSimp_contradInEq1" (formula "28") (term "1") (ifseqformula "6"))
                                 (rule "qeq_literals" (formula "28") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "28"))
                                 (rule "seqGetAlphaCast" (formula "15") (term "0"))
                                 (rule "castDel" (formula "15") (term "0"))
                                 (builtin "One Step Simplification" (formula "15"))
                                 (rule "true_left" (formula "15"))
                                 (rule "allLeft" (formula "11") (inst "t=Z(0(#))"))
                                 (rule "leq_literals" (formula "11") (term "1,0"))
                                 (builtin "One Step Simplification" (formula "11"))
                                 (rule "inEqSimp_commuteGeq" (formula "11") (term "1"))
                                 (rule "applyEq" (formula "11") (term "0,0,0") (ifseqformula "18"))
                                 (builtin "One Step Simplification" (formula "11"))
                                 (rule "true_left" (formula "11"))
                                 (rule "allLeft" (formula "19") (inst "t=j_0"))
                                 (rule "inEqSimp_commuteGeq" (formula "19") (term "1"))
                                 (rule "applyEq" (formula "19") (term "1,1,0,0") (ifseqformula "41"))
                                 (rule "inEqSimp_contradInEq1" (formula "19") (term "1,0") (ifseqformula "42"))
                                 (rule "qeq_literals" (formula "19") (term "0,1,0"))
                                 (builtin "One Step Simplification" (formula "19"))
                                 (rule "inEqSimp_contradInEq1" (formula "19") (term "1") (ifseqformula "43"))
                                 (rule "inEqSimp_homoInEq1" (formula "19") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,1"))
                                 (rule "add_literals" (formula "19") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "19") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "19") (term "0,0,1"))
                                 (rule "leq_literals" (formula "19") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "19"))
                                 (rule "allLeft" (formula "12") (inst "t=Z(0(#))"))
                                 (rule "typeEqDerived" (formula "12") (term "0,0,0") (ifseqformula "18"))
                                 (builtin "One Step Simplification" (formula "12"))
                                 (rule "true_left" (formula "12"))
                                 (rule "allLeft" (formula "12") (inst "t=add(Z(neglit(1(#))),
    int::select(heap, self, IntLinkedList::$size))"))
                                 (rule "typeEqDerived" (formula "12") (term "0,0,0") (ifseqformula "17"))
                                 (builtin "One Step Simplification" (formula "12"))
                                 (rule "true_left" (formula "12"))
                                 (rule "allLeft" (formula "12") (inst "t=i_2_0"))
                                 (rule "typeEqDerived" (formula "12") (term "0,0,0") (ifseqformula "16"))
                                 (builtin "One Step Simplification" (formula "12"))
                                 (rule "true_left" (formula "12"))
                                 (rule "allLeft" (formula "14") (inst "t=j_0"))
                                 (rule "inEqSimp_commuteGeq" (formula "14") (term "1"))
                                 (rule "applyEq" (formula "14") (term "0,0,0,0") (ifseqformula "42"))
                                 (rule "replace_known_right" (formula "14") (term "0,0,0") (ifseqformula "63"))
                                 (builtin "One Step Simplification" (formula "14"))
                                 (rule "true_left" (formula "14"))
                                 (rule "allLeft" (formula "11") (inst "t=add(Z(neglit(1(#))),
    int::select(heap, self, IntLinkedList::$size))"))
                                 (rule "inEqSimp_homoInEq0" (formula "11") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "11") (term "1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "11") (term "1,0,1,0"))
                                 (rule "mul_literals" (formula "11") (term "0,1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "11") (term "0,1,0"))
                                 (rule "add_literals" (formula "11") (term "0,0,1,0"))
                                 (rule "add_zero_left" (formula "11") (term "0,1,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "11") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "11") (term "1,0,1"))
                                 (rule "polySimp_rightDist" (formula "11") (term "1,0,1"))
                                 (rule "mul_literals" (formula "11") (term "0,1,0,1"))
                                 (rule "polySimp_addAssoc" (formula "11") (term "0,1"))
                                 (rule "polySimp_addComm0" (formula "11") (term "0,0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,1"))
                                 (rule "add_literals" (formula "11") (term "1,1,0,1"))
                                 (rule "times_zero_1" (formula "11") (term "1,0,1"))
                                 (rule "add_zero_right" (formula "11") (term "0,1"))
                                 (rule "leq_literals" (formula "11") (term "1"))
                                 (builtin "One Step Simplification" (formula "11"))
                                 (rule "applyEq" (formula "11") (term "0,0,0") (ifseqformula "17"))
                                 (builtin "One Step Simplification" (formula "11"))
                                 (rule "true_left" (formula "11"))
                                 (rule "allLeft" (formula "11") (inst "t=i_2_0"))
                                 (rule "inEqSimp_commuteGeq" (formula "11") (term "1"))
                                 (rule "applyEq" (formula "11") (term "0,0,0,0") (ifseqformula "16"))
                                 (builtin "One Step Simplification" (formula "11"))
                                 (rule "true_left" (formula "11"))
                                 (rule "allLeft" (formula "50") (inst "t=j_0"))
                                 (rule "inEqSimp_commuteGeq" (formula "50") (term "1"))
                                 (rule "applyEq" (formula "50") (term "1,0,0,0") (ifseqformula "41"))
                                 (rule "replaceKnownSelect_taclet1011011_16" (formula "50") (term "0,0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet1011011_17" (formula "50") (term "0,0,0"))
                                 (rule "applyEq" (formula "50") (term "0,0,0") (ifseqformula "44"))
                                 (rule "eqSymm" (formula "50") (term "0,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "50") (term "1,0") (ifseqformula "42"))
                                 (rule "qeq_literals" (formula "50") (term "0,1,0"))
                                 (builtin "One Step Simplification" (formula "50"))
                                 (rule "inEqSimp_contradInEq1" (formula "50") (term "1") (ifseqformula "43"))
                                 (rule "inEqSimp_homoInEq1" (formula "50") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "50") (term "0,0,1"))
                                 (rule "add_literals" (formula "50") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "50") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "50") (term "0,0,1"))
                                 (rule "leq_literals" (formula "50") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "50"))
                                 (rule "commute_or_2" (formula "24") (term "0"))
                                 (rule "seqGetAlphaCast" (formula "16") (term "0"))
                                 (rule "castDel" (formula "16") (term "0"))
                                 (builtin "One Step Simplification" (formula "16"))
                                 (rule "true_left" (formula "16"))
                                 (rule "seqGetAlphaCast" (formula "17") (term "0"))
                                 (rule "castDel" (formula "17") (term "0"))
                                 (builtin "One Step Simplification" (formula "17"))
                                 (rule "true_left" (formula "17"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "26") (term "0") (ifseqformula "7"))
                                 (rule "replace_known_left" (formula "26") (term "0") (ifseqformula "27"))
                                 (builtin "One Step Simplification" (formula "26"))
                                 (rule "true_left" (formula "26"))
                                 (rule "seqGetAlphaCast" (formula "41") (term "0"))
                                 (rule "castedGetAny" (formula "41") (term "0"))
                                 (builtin "One Step Simplification" (formula "41"))
                                 (rule "true_left" (formula "41"))
                                 (rule "seqGetAlphaCast" (formula "44") (term "0"))
                                 (rule "castDel" (formula "44") (term "0"))
                                 (builtin "One Step Simplification" (formula "44"))
                                 (rule "true_left" (formula "44"))
                                 (rule "seqGetAlphaCast" (formula "4") (term "0"))
                                 (rule "castDel" (formula "4") (term "0"))
                                 (builtin "One Step Simplification" (formula "4"))
                                 (rule "true_left" (formula "4"))
                                 (rule "seqGetAlphaCast" (formula "27") (term "0,0"))
                                 (rule "castedGetAny" (formula "27") (term "0"))
                                 (builtin "One Step Simplification" (formula "27"))
                                 (rule "true_left" (formula "27"))
                                 (rule "cut_direct" (formula "27") (term "1"))
                                 (branch "CUT: self.size ≤ 1 TRUE"
                                    (builtin "One Step Simplification" (formula "28"))
                                    (rule "true_left" (formula "28"))
                                    (rule "inEqSimp_antiSymm" (formula "36") (ifseqformula "27"))
                                    (rule "applyEq" (formula "50") (term "1,1,1,0,0,0,0,0") (ifseqformula "36"))
                                    (rule "add_literals" (formula "50") (term "1,1,0,0,0,0,0"))
                                    (rule "applyEq" (formula "11") (term "1,1,0") (ifseqformula "36"))
                                    (rule "applyEq" (formula "24") (term "1,1,0") (ifseqformula "36"))
                                    (rule "applyEq" (formula "27") (term "0") (ifseqformula "36"))
                                    (rule "leq_literals" (formula "27"))
                                    (rule "true_left" (formula "27"))
                                    (rule "applyEq" (formula "53") (term "0,1") (ifseqformula "35"))
                                    (rule "inEqSimp_homoInEq0" (formula "53") (term "1"))
                                    (rule "mul_literals" (formula "53") (term "1,0,1"))
                                    (rule "polySimp_addComm1" (formula "53") (term "0,1"))
                                    (rule "add_literals" (formula "53") (term "0,0,1"))
                                    (rule "applyEq" (formula "25") (term "1,1,0,0,0,0,0") (ifseqformula "35"))
                                    (rule "applyEq" (formula "55") (term "1,1,1,0") (ifseqformula "35"))
                                    (rule "add_literals" (formula "55") (term "1,1,0"))
                                    (rule "applyEq" (formula "39") (term "1,1,0") (ifseqformula "35"))
                                    (rule "applyEq" (formula "25") (term "1,1,0,0,0") (ifseqformula "35"))
                                    (rule "applyEq" (formula "33") (term "1,1,0") (ifseqformula "35"))
                                    (rule "add_literals" (formula "33") (term "1,0"))
                                    (rule "applyEq" (formula "16") (term "1,1,0") (ifseqformula "35"))
                                    (rule "add_literals" (formula "16") (term "1,0"))
                                    (rule "applyEq" (formula "40") (term "1,1,0") (ifseqformula "35"))
                                    (rule "applyEq" (formula "1") (term "0") (ifseqformula "35"))
                                    (rule "inEqSimp_homoInEq1" (formula "1"))
                                    (rule "mul_literals" (formula "1") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "1") (term "0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0"))
                                    (rule "applyEq" (formula "43") (term "0") (ifseqformula "35"))
                                    (rule "inEqSimp_homoInEq1" (formula "43"))
                                    (rule "mul_literals" (formula "43") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "43") (term "0"))
                                    (rule "add_literals" (formula "43") (term "0,0"))
                                    (rule "add_zero_left" (formula "43") (term "0"))
                                    (rule "applyEq" (formula "14") (term "1,1,0") (ifseqformula "35"))
                                    (rule "applyEq" (formula "12") (term "1,1,0") (ifseqformula "35"))
                                    (rule "applyEq" (formula "55") (term "1,1,1,0,0,1,1,0,0,0,0,0") (ifseqformula "35"))
                                    (rule "add_literals" (formula "55") (term "1,1,0,0,1,1,0,0,0,0,0"))
                                    (rule "applyEq" (formula "27") (term "0,1") (ifseqformula "35"))
                                    (rule "inEqSimp_homoInEq0" (formula "27") (term "1"))
                                    (rule "mul_literals" (formula "27") (term "1,0,1"))
                                    (rule "polySimp_addComm1" (formula "27") (term "0,1"))
                                    (rule "add_literals" (formula "27") (term "0,0,1"))
                                    (rule "applyEq" (formula "21") (term "1,1,0") (ifseqformula "35"))
                                    (rule "applyEq" (formula "23") (term "1,1,0") (ifseqformula "35"))
                                    (rule "applyEq" (formula "13") (term "1,1,1,0,0,1,0") (ifseqformula "35"))
                                    (rule "add_literals" (formula "13") (term "1,1,0,0,1,0"))
                                    (rule "applyEq" (formula "57") (term "1,1,0,0") (ifseqformula "35"))
                                    (rule "applyEq" (formula "20") (term "1,1,0") (ifseqformula "35"))
                                    (rule "applyEq" (formula "47") (term "0") (ifseqformula "35"))
                                    (rule "inEqSimp_homoInEq1" (formula "47"))
                                    (rule "mul_literals" (formula "47") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "47") (term "0"))
                                    (rule "add_literals" (formula "47") (term "0,0"))
                                    (rule "add_zero_left" (formula "47") (term "0"))
                                    (rule "applyEq" (formula "5") (term "0") (ifseqformula "35"))
                                    (rule "inEqSimp_homoInEq1" (formula "5"))
                                    (rule "mul_literals" (formula "5") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "5") (term "0"))
                                    (rule "add_literals" (formula "5") (term "0,0"))
                                    (rule "applyEq" (formula "22") (term "1,1,1,0") (ifseqformula "35"))
                                    (rule "add_literals" (formula "22") (term "1,1,0"))
                                    (rule "applyEq" (formula "51") (term "1,1,1,0,0,1,1,0,0,0,0,0") (ifseqformula "35"))
                                    (rule "add_literals" (formula "51") (term "1,1,0,0,1,1,0,0,0,0,0"))
                                    (rule "applyEq" (formula "36") (term "0") (ifseqformula "35"))
                                    (rule "qeq_literals" (formula "36"))
                                    (rule "true_left" (formula "36"))
                                    (rule "applyEq" (formula "50") (term "1,1,0") (ifseqformula "35"))
                                    (rule "applyEq" (formula "43") (term "1,1,0") (ifseqformula "35"))
                                    (rule "add_literals" (formula "43") (term "1,0"))
                                    (rule "applyEq" (formula "29") (term "1,1,1,0") (ifseqformula "35"))
                                    (rule "add_literals" (formula "29") (term "1,1,0"))
                                    (rule "applyEq" (formula "43") (term "0") (ifseqformula "47"))
                                    (rule "eqSymm" (formula "43"))
                                    (rule "applyEq" (formula "16") (term "0") (ifseqformula "17"))
                                    (rule "eqSymm" (formula "16"))
                                    (rule "applyEq" (formula "33") (term "0") (ifseqformula "31"))
                                    (rule "eqSymm" (formula "33"))
                                    (rule "applyEq" (formula "34") (term "1") (ifseqformula "35"))
                                    (rule "applyEq" (formula "55") (term "1") (ifseqformula "35"))
                                    (rule "applyEq" (formula "36") (term "1") (ifseqformula "35"))
                                    (rule "applyEq" (formula "32") (term "1,0") (ifseqformula "33"))
                                    (rule "applyEq" (formula "42") (term "1,0") (ifseqformula "32"))
                                    (builtin "One Step Simplification" (formula "42"))
                                    (rule "true_left" (formula "42"))
                                    (rule "applyEq" (formula "19") (term "1,1") (ifseqformula "32"))
                                    (rule "applyEq" (formula "22") (term "1,0,0,0,0") (ifseqformula "32"))
                                    (rule "applyEq" (formula "16") (term "1,0") (ifseqformula "32"))
                                    (builtin "One Step Simplification" (formula "16"))
                                    (rule "true_left" (formula "16"))
                                    (rule "applyEq" (formula "46") (term "1,1") (ifseqformula "31"))
                                    (rule "applyEq" (formula "25") (term "1,0") (ifseqformula "31"))
                                    (rule "applyEq" (formula "38") (term "1") (ifseqformula "31"))
                                    (rule "applyEq" (formula "59") (term "0") (ifseqformula "31"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "49") (term "1"))
                                    (rule "mul_literals" (formula "49") (term "1,1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "1"))
                                    (rule "mul_literals" (formula "26") (term "1,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                                    (rule "mul_literals" (formula "5") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "5") (ifseqformula "6"))
                                    (rule "qeq_literals" (formula "5") (term "0"))
                                    (builtin "One Step Simplification" (formula "5"))
                                    (rule "closeFalse" (formula "5"))
                                 )
                                 (branch "CUT: self.size ≤ 1 FALSE"
                                    (builtin "One Step Simplification" (formula "27"))
                                    (rule "inEqSimp_leqRight" (formula "60"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                    (rule "mul_literals" (formula "1") (term "1"))
                                    (rule "inEqSimp_subsumption1" (formula "37") (ifseqformula "1"))
                                    (rule "leq_literals" (formula "37") (term "0"))
                                    (builtin "One Step Simplification" (formula "37"))
                                    (rule "true_left" (formula "37"))
                                    (rule "allLeft" (formula "24") (inst "t=j_1_0"))
                                    (rule "replace_known_left" (formula "24") (term "0,0,0,0") (ifseqformula "4"))
                                    (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "67")))
                                    (rule "inEqSimp_commuteGeq" (formula "24") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "24") (term "0") (ifseqformula "3"))
                                    (rule "qeq_literals" (formula "24") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "24"))
                                    (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "24"))
                                    (rule "andLeft" (formula "2"))
                                    (rule "inEqSimp_homoInEq1" (formula "2"))
                                    (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                    (rule "add_literals" (formula "2") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "2") (term "1,0"))
                                    (rule "add_zero_right" (formula "2") (term "0"))
                                    (rule "leq_literals" (formula "2"))
                                    (rule "closeFalse" (formula "2"))
                                 )
                              )
                              (branch "∃ int j; ( (IntNode)self.nodeseq[j] = self.first ∧ j ≥ 0 ∧ j ≤ -1 + self.size) FALSE"
                                 (rule "eqSymm" (formula "36"))
                                 (rule "applyEq" (formula "45") (term "0") (ifseqformula "36"))
                                 (builtin "One Step Simplification" (formula "45"))
                                 (rule "false_right" (formula "45"))
                                 (rule "nnf_ex2all" (formula "43"))
                                 (rule "nnf_notAnd" (formula "1") (term "0"))
                                 (rule "inEqSimp_notLeq" (formula "1") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0"))
                                 (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0"))
                                 (rule "add_literals" (formula "1") (term "0,0,0,1,0"))
                                 (rule "add_zero_left" (formula "1") (term "0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "1,1,0"))
                                 (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "1") (term "1,0,0"))
                                 (rule "times_zero_1" (formula "1") (term "1,0,0,1,0,0"))
                                 (rule "add_zero_right" (formula "1") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1,0,0"))
                                 (rule "mul_literals" (formula "1") (term "1,1,0,0"))
                                 (rule "allLeft" (formula "38") (inst "t=add(Z(1(#)), i_2_0)"))
                                 (rule "inEqSimp_commuteGeq" (formula "38") (term "1"))
                                 (rule "inEqSimp_homoInEq0" (formula "38") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "38") (term "1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "38") (term "1,0,1,0"))
                                 (rule "mul_literals" (formula "38") (term "0,1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "38") (term "0,1,0"))
                                 (rule "add_literals" (formula "38") (term "0,0,1,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "38") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "38") (term "0,1,0"))
                                 (rule "polySimp_elimOne" (formula "38") (term "0,1,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "38") (term "1") (ifseqformula "3"))
                                 (rule "inEqSimp_homoInEq1" (formula "38") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "38") (term "1,0,0,1"))
                                 (rule "mul_literals" (formula "38") (term "0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "38") (term "0,0,1"))
                                 (rule "polySimp_addComm1" (formula "38") (term "0,0,0,1"))
                                 (rule "add_literals" (formula "38") (term "0,0,0,0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "38") (term "0,0,1"))
                                 (rule "add_literals" (formula "38") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "38") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "38") (term "0,0,1"))
                                 (rule "leq_literals" (formula "38") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "38"))
                                 (rule "inEqSimp_contradInEq1" (formula "38") (term "1") (ifseqformula "4"))
                                 (rule "qeq_literals" (formula "38") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "38"))
                                 (rule "pullOutSelect" (formula "38") (term "0") (inst "selectSK=IntNode_data_3"))
                                 (rule "simplifySelectOfAnon" (formula "38"))
                                 (builtin "One Step Simplification" (formula "38"))
                                 (rule "eqSymm" (formula "39"))
                                 (rule "applyEqReverse" (formula "38") (term "1") (ifseqformula "39"))
                                 (rule "hideAuxiliaryEq" (formula "39"))
                                 (rule "elementOfUnion" (formula "38") (term "0,0,0"))
                                 (rule "elementOfSingleton" (formula "38") (term "0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "38"))
                                 (rule "elementOfInfiniteUnion" (formula "38") (term "0,0,0"))
                                 (builtin "One Step Simplification" (formula "38"))
                                 (rule "elementOfSingleton" (formula "38") (term "1,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "38"))
                                 (rule "eqSymm" (formula "38") (term "1,0,0,0,0"))
                                 (rule "allLeft" (formula "19") (inst "t=i_2_0"))
                                 (rule "inEqSimp_commuteGeq" (formula "19") (term "1,0,0,0,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "19") (term "1,0,0,0,0") (ifseqformula "3"))
                                 (rule "inEqSimp_homoInEq1" (formula "19") (term "0,1,0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,1,0,0,0,0"))
                                 (rule "add_literals" (formula "19") (term "1,1,0,0,1,0,0,0,0"))
                                 (rule "times_zero_1" (formula "19") (term "1,0,0,1,0,0,0,0"))
                                 (rule "add_zero_right" (formula "19") (term "0,0,1,0,0,0,0"))
                                 (rule "leq_literals" (formula "19") (term "0,1,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "19"))
                                 (rule "inEqSimp_contradInEq1" (formula "19") (term "1,0,0,0,0") (ifseqformula "4"))
                                 (rule "qeq_literals" (formula "19") (term "0,1,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "19"))
                                 (rule "allLeft" (formula "41") (inst "t=add(Z(1(#)), i_2_0)"))
                                 (rule "polySimp_addAssoc" (formula "41") (term "1,1,0,0"))
                                 (rule "add_literals" (formula "41") (term "0,1,1,0,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "41") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "41") (term "1,0,1"))
                                 (rule "polySimp_rightDist" (formula "41") (term "1,0,1"))
                                 (rule "mul_literals" (formula "41") (term "0,1,0,1"))
                                 (rule "polySimp_addComm1" (formula "41") (term "0,1"))
                                 (rule "polySimp_addAssoc" (formula "41") (term "0,0,1"))
                                 (rule "add_literals" (formula "41") (term "0,0,0,1"))
                                 (rule "inEqSimp_homoInEq0" (formula "41") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "41") (term "1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "41") (term "1,0,1,0"))
                                 (rule "mul_literals" (formula "41") (term "0,1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "41") (term "0,1,0"))
                                 (rule "add_literals" (formula "41") (term "0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "41") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "41") (term "1,1"))
                                 (rule "mul_literals" (formula "41") (term "0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "41") (term "1,1,1"))
                                 (rule "polySimp_elimOne" (formula "41") (term "1,1,1"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "41") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "41") (term "0,1,0"))
                                 (rule "polySimp_elimOne" (formula "41") (term "0,1,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "41") (term "1,0") (ifseqformula "4"))
                                 (rule "qeq_literals" (formula "41") (term "0,1,0"))
                                 (builtin "One Step Simplification" (formula "41"))
                                 (rule "pullOutSelect" (formula "41") (term "0,0") (inst "selectSK=IntNode_next_3"))
                                 (rule "simplifySelectOfAnon" (formula "41"))
                                 (builtin "One Step Simplification" (formula "41"))
                                 (rule "eqSymm" (formula "42") (term "0"))
                                 (rule "elementOfUnion" (formula "41") (term "0,0,0"))
                                 (rule "elementOfSingleton" (formula "41") (term "0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "41"))
                                 (rule "elementOfInfiniteUnion" (formula "41") (term "0,0,0"))
                                 (builtin "One Step Simplification" (formula "41"))
                                 (rule "elementOfSingleton" (formula "41") (term "1,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "41"))
                                 (rule "allLeft" (formula "12") (inst "t=add(Z(1(#)), i_2_0)"))
                                 (rule "inEqSimp_commuteGeq" (formula "12") (term "1"))
                                 (rule "inEqSimp_homoInEq0" (formula "12") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "12") (term "1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "12") (term "1,0,1,0"))
                                 (rule "mul_literals" (formula "12") (term "0,1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "12") (term "0,1,0"))
                                 (rule "add_literals" (formula "12") (term "0,0,1,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "12") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "12") (term "0,1,0"))
                                 (rule "polySimp_elimOne" (formula "12") (term "0,1,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "12") (term "1,0") (ifseqformula "4"))
                                 (rule "qeq_literals" (formula "12") (term "0,1,0"))
                                 (builtin "One Step Simplification" (formula "12"))
                                 (rule "inEqSimp_contradInEq1" (formula "12") (term "1") (ifseqformula "3"))
                                 (rule "inEqSimp_homoInEq1" (formula "12") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1"))
                                 (rule "mul_literals" (formula "12") (term "0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "12") (term "0,0,1"))
                                 (rule "polySimp_addComm1" (formula "12") (term "0,0,0,1"))
                                 (rule "add_literals" (formula "12") (term "0,0,0,0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0,1"))
                                 (rule "add_literals" (formula "12") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "12") (term "1,0,0,1"))
                                 (rule "add_literals" (formula "12") (term "0,0,1"))
                                 (rule "leq_literals" (formula "12") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "12"))
                                 (rule "notLeft" (formula "12"))
                                 (rule "replace_known_right" (formula "41") (term "0,0,0,0") (ifseqformula "48"))
                                 (builtin "One Step Simplification" (formula "41"))
                                 (rule "replace_known_right" (formula "39") (term "0,0,1,0,0") (ifseqformula "48"))
                                 (builtin "One Step Simplification" (formula "39"))
                                 (rule "ifthenelse_negated" (formula "41") (term "0"))
                                 (rule "allLeft" (formula "43") (inst "t=i_2_0"))
                                 (rule "replaceKnownSelect_taclet1011011_15" (formula "43") (term "0,0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet101011011_21" (formula "43") (term "0,0,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "43") (term "1"))
                                 (rule "polySimp_addComm1" (formula "43") (term "0,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "43") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "43") (term "1,1"))
                                 (rule "mul_literals" (formula "43") (term "0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "43") (term "1,1,1"))
                                 (rule "polySimp_elimOne" (formula "43") (term "1,1,1"))
                                 (rule "inEqSimp_contradInEq1" (formula "43") (term "1") (ifseqformula "3"))
                                 (rule "inEqSimp_homoInEq1" (formula "43") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "43") (term "1,0,0,1"))
                                 (rule "mul_literals" (formula "43") (term "0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "43") (term "0,0,1"))
                                 (rule "polySimp_addComm1" (formula "43") (term "0,0,0,1"))
                                 (rule "add_literals" (formula "43") (term "0,0,0,0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "43") (term "0,0,1"))
                                 (rule "add_literals" (formula "43") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "43") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "43") (term "0,0,1"))
                                 (rule "leq_literals" (formula "43") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "43"))
                                 (rule "inEqSimp_contradInEq1" (formula "43") (term "1") (ifseqformula "4"))
                                 (rule "qeq_literals" (formula "43") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "43"))
                                 (rule "replace_known_left" (formula "55") (term "1") (ifseqformula "43"))
                                 (builtin "One Step Simplification" (formula "55"))
                                 (rule "allRight" (formula "55") (inst "sk=j_1_0"))
                                 (rule "orRight" (formula "55"))
                                 (rule "orRight" (formula "55"))
                                 (rule "orRight" (formula "57"))
                                 (rule "notRight" (formula "57"))
                                 (rule "inEqSimp_geqRight" (formula "57"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0"))
                                 (rule "inEqSimp_leqRight" (formula "57"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                 (rule "polySimp_elimOne" (formula "2") (term "0"))
                                 (rule "allLeft" (formula "26") (inst "t=add(Z(1(#)), i_2_0)"))
                                 (rule "polySimp_addAssoc" (formula "26") (term "1,1,0,0"))
                                 (rule "add_literals" (formula "26") (term "0,1,1,0,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "26") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "26") (term "1,0,1"))
                                 (rule "polySimp_rightDist" (formula "26") (term "1,0,1"))
                                 (rule "mul_literals" (formula "26") (term "0,1,0,1"))
                                 (rule "polySimp_addComm1" (formula "26") (term "0,1"))
                                 (rule "polySimp_addAssoc" (formula "26") (term "0,0,1"))
                                 (rule "add_literals" (formula "26") (term "0,0,0,1"))
                                 (rule "inEqSimp_homoInEq0" (formula "26") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "26") (term "1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "26") (term "1,0,1,0"))
                                 (rule "mul_literals" (formula "26") (term "0,1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "26") (term "0,1,0"))
                                 (rule "add_literals" (formula "26") (term "0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "26") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "26") (term "1,1"))
                                 (rule "mul_literals" (formula "26") (term "0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1"))
                                 (rule "polySimp_elimOne" (formula "26") (term "1,1,1"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "26") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "26") (term "0,1,0"))
                                 (rule "polySimp_elimOne" (formula "26") (term "0,1,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "26") (term "1,0") (ifseqformula "7"))
                                 (rule "qeq_literals" (formula "26") (term "0,1,0"))
                                 (builtin "One Step Simplification" (formula "26"))
                                 (rule "allLeft" (formula "23") (inst "t=add(Z(1(#)), i_2_0)"))
                                 (rule "inEqSimp_commuteGeq" (formula "23") (term "1,0,0,0,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "23") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "23") (term "1,0,1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "23") (term "1,0,1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "23") (term "0,1,0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "23") (term "0,1,0,0,0,0,0"))
                                 (rule "add_literals" (formula "23") (term "0,0,1,0,0,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "23") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "23") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "23") (term "0,1,0,0,0,0,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "23") (term "1,0,0,0,0") (ifseqformula "6"))
                                 (rule "inEqSimp_homoInEq1" (formula "23") (term "0,1,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,0,0,0"))
                                 (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "23") (term "0,0,0,1,0,0,0,0"))
                                 (rule "add_literals" (formula "23") (term "0,0,0,0,1,0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1,0,0,0,0"))
                                 (rule "add_literals" (formula "23") (term "1,1,0,0,1,0,0,0,0"))
                                 (rule "times_zero_1" (formula "23") (term "1,0,0,1,0,0,0,0"))
                                 (rule "add_zero_right" (formula "23") (term "0,0,1,0,0,0,0"))
                                 (rule "leq_literals" (formula "23") (term "0,1,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "23"))
                                 (rule "inEqSimp_contradInEq1" (formula "23") (term "1,0,0,0,0") (ifseqformula "7"))
                                 (rule "qeq_literals" (formula "23") (term "0,1,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "23"))
                                 (rule "allLeft" (formula "28") (inst "t=i_2_0"))
                                 (rule "inEqSimp_homoInEq1" (formula "28") (term "1"))
                                 (rule "polySimp_addComm1" (formula "28") (term "0,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "28") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "28") (term "1,1"))
                                 (rule "mul_literals" (formula "28") (term "0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1"))
                                 (rule "polySimp_elimOne" (formula "28") (term "1,1,1"))
                                 (rule "inEqSimp_contradInEq1" (formula "28") (term "1,0") (ifseqformula "7"))
                                 (rule "qeq_literals" (formula "28") (term "0,1,0"))
                                 (builtin "One Step Simplification" (formula "28"))
                                 (rule "inEqSimp_contradInEq1" (formula "28") (term "1") (ifseqformula "6"))
                                 (rule "inEqSimp_homoInEq1" (formula "28") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1"))
                                 (rule "mul_literals" (formula "28") (term "0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "28") (term "0,0,1"))
                                 (rule "polySimp_addComm1" (formula "28") (term "0,0,0,1"))
                                 (rule "add_literals" (formula "28") (term "0,0,0,0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,1"))
                                 (rule "add_literals" (formula "28") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "28") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "28") (term "0,0,1"))
                                 (rule "leq_literals" (formula "28") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "28"))
                                 (rule "allLeft" (formula "19") (inst "t=add(Z(1(#)), i_2_0)"))
                                 (rule "inEqSimp_commuteGeq" (formula "19") (term "1"))
                                 (rule "inEqSimp_homoInEq0" (formula "19") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "19") (term "1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "19") (term "1,0,1,0"))
                                 (rule "mul_literals" (formula "19") (term "0,1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "19") (term "0,1,0"))
                                 (rule "add_literals" (formula "19") (term "0,0,1,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "19") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "0,1,0"))
                                 (rule "polySimp_elimOne" (formula "19") (term "0,1,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "19") (term "1,0") (ifseqformula "7"))
                                 (rule "qeq_literals" (formula "19") (term "0,1,0"))
                                 (builtin "One Step Simplification" (formula "19"))
                                 (rule "inEqSimp_contradInEq1" (formula "19") (term "1") (ifseqformula "6"))
                                 (rule "inEqSimp_homoInEq1" (formula "19") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1"))
                                 (rule "mul_literals" (formula "19") (term "0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "19") (term "0,0,1"))
                                 (rule "polySimp_addComm1" (formula "19") (term "0,0,0,1"))
                                 (rule "add_literals" (formula "19") (term "0,0,0,0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,1"))
                                 (rule "add_literals" (formula "19") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "19") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "19") (term "0,0,1"))
                                 (rule "leq_literals" (formula "19") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "19"))
                                 (rule "commute_or_2" (formula "23") (term "0"))
                                 (rule "seqGetAlphaCast" (formula "16") (term "0"))
                                 (rule "castDel" (formula "16") (term "0"))
                                 (builtin "One Step Simplification" (formula "16"))
                                 (rule "true_left" (formula "16"))
                                 (rule "allLeft" (formula "15") (inst "t=j_0"))
                                 (rule "inEqSimp_commuteGeq" (formula "15") (term "1"))
                                 (rule "applyEq" (formula "15") (term "0,0,0,0") (ifseqformula "42"))
                                 (rule "replace_known_right" (formula "15") (term "0,0,0") (ifseqformula "60"))
                                 (builtin "One Step Simplification" (formula "15"))
                                 (rule "true_left" (formula "15"))
                                 (rule "allLeft" (formula "13") (inst "t=Z(0(#))"))
                                 (rule "typeEqDerived" (formula "13") (term "0,0,0") (ifseqformula "19"))
                                 (builtin "One Step Simplification" (formula "13"))
                                 (rule "true_left" (formula "13"))
                                 (rule "allLeft" (formula "13") (inst "t=add(Z(neglit(1(#))),
    int::select(heap, self, IntLinkedList::$size))"))
                                 (rule "typeEqDerived" (formula "13") (term "0,0,0") (ifseqformula "18"))
                                 (builtin "One Step Simplification" (formula "13"))
                                 (rule "true_left" (formula "13"))
                                 (rule "allLeft" (formula "20") (inst "t=j_0"))
                                 (rule "inEqSimp_commuteGeq" (formula "20") (term "1"))
                                 (rule "applyEq" (formula "20") (term "1,1,0,0") (ifseqformula "42"))
                                 (rule "inEqSimp_contradInEq1" (formula "20") (term "1,0") (ifseqformula "43"))
                                 (rule "qeq_literals" (formula "20") (term "0,1,0"))
                                 (builtin "One Step Simplification" (formula "20"))
                                 (rule "inEqSimp_contradInEq1" (formula "20") (term "1") (ifseqformula "44"))
                                 (rule "inEqSimp_homoInEq1" (formula "20") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,1"))
                                 (rule "add_literals" (formula "20") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "20") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "20") (term "0,0,1"))
                                 (rule "leq_literals" (formula "20") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "20"))
                                 (rule "allLeft" (formula "13") (inst "t=i_2_0"))
                                 (rule "typeEqDerived" (formula "13") (term "0,0,0") (ifseqformula "17"))
                                 (builtin "One Step Simplification" (formula "13"))
                                 (rule "true_left" (formula "13"))
                                 (rule "allLeft" (formula "48") (inst "t=j_0"))
                                 (rule "inEqSimp_commuteGeq" (formula "48") (term "1"))
                                 (rule "applyEq" (formula "48") (term "1,0,0,0") (ifseqformula "42"))
                                 (rule "replaceKnownSelect_taclet1011011_16" (formula "48") (term "0,0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet1011011_17" (formula "48") (term "0,0,0"))
                                 (rule "applyEq" (formula "48") (term "0,0,0") (ifseqformula "45"))
                                 (rule "eqSymm" (formula "48") (term "0,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "48") (term "1") (ifseqformula "44"))
                                 (rule "inEqSimp_homoInEq1" (formula "48") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "48") (term "0,0,1"))
                                 (rule "add_literals" (formula "48") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "48") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "48") (term "0,0,1"))
                                 (rule "leq_literals" (formula "48") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "48"))
                                 (rule "inEqSimp_contradInEq1" (formula "48") (term "1") (ifseqformula "43"))
                                 (rule "qeq_literals" (formula "48") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "48"))
                                 (rule "allLeft" (formula "12") (inst "t=Z(0(#))"))
                                 (rule "leq_literals" (formula "12") (term "1,0"))
                                 (builtin "One Step Simplification" (formula "12"))
                                 (rule "inEqSimp_commuteGeq" (formula "12") (term "1"))
                                 (rule "applyEq" (formula "12") (term "0,0,0") (ifseqformula "19"))
                                 (builtin "One Step Simplification" (formula "12"))
                                 (rule "true_left" (formula "12"))
                                 (rule "allLeft" (formula "12") (inst "t=add(Z(neglit(1(#))),
    int::select(heap, self, IntLinkedList::$size))"))
                                 (rule "inEqSimp_homoInEq1" (formula "12") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "12") (term "1,0,1"))
                                 (rule "polySimp_rightDist" (formula "12") (term "1,0,1"))
                                 (rule "mul_literals" (formula "12") (term "0,1,0,1"))
                                 (rule "polySimp_addAssoc" (formula "12") (term "0,1"))
                                 (rule "polySimp_addComm0" (formula "12") (term "0,0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,1"))
                                 (rule "add_literals" (formula "12") (term "1,1,0,1"))
                                 (rule "times_zero_1" (formula "12") (term "1,0,1"))
                                 (rule "add_zero_right" (formula "12") (term "0,1"))
                                 (rule "leq_literals" (formula "12") (term "1"))
                                 (builtin "One Step Simplification" (formula "12"))
                                 (rule "inEqSimp_homoInEq0" (formula "12") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "12") (term "1,0,1"))
                                 (rule "polySimp_rightDist" (formula "12") (term "1,0,1"))
                                 (rule "mul_literals" (formula "12") (term "0,1,0,1"))
                                 (rule "polySimp_addAssoc" (formula "12") (term "0,1"))
                                 (rule "add_literals" (formula "12") (term "0,0,1"))
                                 (rule "add_zero_left" (formula "12") (term "0,1"))
                                 (rule "applyEq" (formula "12") (term "0,0,0") (ifseqformula "18"))
                                 (builtin "One Step Simplification" (formula "12"))
                                 (rule "true_left" (formula "12"))
                                 (rule "allLeft" (formula "12") (inst "t=i_2_0"))
                                 (rule "inEqSimp_commuteGeq" (formula "12") (term "1"))
                                 (rule "applyEq" (formula "12") (term "0,0,0,0") (ifseqformula "17"))
                                 (builtin "One Step Simplification" (formula "12"))
                                 (rule "true_left" (formula "12"))
                                 (rule "seqGetAlphaCast" (formula "17") (term "0"))
                                 (rule "castDel" (formula "17") (term "0"))
                                 (builtin "One Step Simplification" (formula "17"))
                                 (rule "true_left" (formula "17"))
                                 (rule "seqGetAlphaCast" (formula "18") (term "0"))
                                 (rule "castDel" (formula "18") (term "0"))
                                 (builtin "One Step Simplification" (formula "18"))
                                 (rule "true_left" (formula "18"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "27") (term "0") (ifseqformula "8"))
                                 (rule "replace_known_left" (formula "27") (term "0") (ifseqformula "28"))
                                 (builtin "One Step Simplification" (formula "27"))
                                 (rule "true_left" (formula "27"))
                                 (rule "seqGetAlphaCast" (formula "42") (term "0"))
                                 (rule "castedGetAny" (formula "42") (term "0"))
                                 (builtin "One Step Simplification" (formula "42"))
                                 (rule "true_left" (formula "42"))
                                 (rule "seqGetAlphaCast" (formula "45") (term "0"))
                                 (rule "castDel" (formula "45") (term "0"))
                                 (builtin "One Step Simplification" (formula "45"))
                                 (rule "true_left" (formula "45"))
                                 (rule "seqGetAlphaCast" (formula "5") (term "0"))
                                 (rule "castDel" (formula "5") (term "0"))
                                 (builtin "One Step Simplification" (formula "5"))
                                 (rule "true_left" (formula "5"))
                                 (rule "seqGetAlphaCast" (formula "28") (term "0,0"))
                                 (rule "castedGetAny" (formula "28") (term "0"))
                                 (builtin "One Step Simplification" (formula "28"))
                                 (rule "true_left" (formula "28"))
                                 (rule "cut_direct" (formula "28") (term "1"))
                                 (branch "CUT: self.size ≤ 1 TRUE"
                                    (builtin "One Step Simplification" (formula "29"))
                                    (rule "true_left" (formula "29"))
                                    (rule "inEqSimp_antiSymm" (formula "37") (ifseqformula "28"))
                                    (rule "applyEq" (formula "28") (term "0") (ifseqformula "37"))
                                    (rule "leq_literals" (formula "28"))
                                    (rule "true_left" (formula "28"))
                                    (rule "applyEq" (formula "49") (term "1,1,1,0,0,1,1,0,0,0,0,0") (ifseqformula "36"))
                                    (rule "add_literals" (formula "49") (term "1,1,0,0,1,1,0,0,0,0,0"))
                                    (rule "applyEq" (formula "53") (term "1,1,1,0,0,1,1,0,0,0,0,0") (ifseqformula "36"))
                                    (rule "add_literals" (formula "53") (term "1,1,0,0,1,1,0,0,0,0,0"))
                                    (rule "applyEq" (formula "53") (term "1,1,1,0") (ifseqformula "36"))
                                    (rule "add_literals" (formula "53") (term "1,1,0"))
                                    (rule "applyEq" (formula "12") (term "1,1,0") (ifseqformula "36"))
                                    (rule "applyEq" (formula "25") (term "1,1,0,0") (ifseqformula "36"))
                                    (rule "applyEq" (formula "40") (term "1,1,0") (ifseqformula "36"))
                                    (rule "applyEq" (formula "13") (term "1,1,0") (ifseqformula "36"))
                                    (rule "applyEq" (formula "17") (term "1,1,0") (ifseqformula "36"))
                                    (rule "add_literals" (formula "17") (term "1,0"))
                                    (rule "applyEq" (formula "21") (term "1,1,0") (ifseqformula "36"))
                                    (rule "applyEq" (formula "15") (term "1,1,0") (ifseqformula "36"))
                                    (rule "applyEq" (formula "44") (term "0") (ifseqformula "36"))
                                    (rule "inEqSimp_homoInEq1" (formula "44"))
                                    (rule "mul_literals" (formula "44") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "44") (term "0"))
                                    (rule "add_literals" (formula "44") (term "0,0"))
                                    (rule "add_zero_left" (formula "44") (term "0"))
                                    (rule "applyEq" (formula "2") (term "0") (ifseqformula "36"))
                                    (rule "inEqSimp_homoInEq1" (formula "2"))
                                    (rule "mul_literals" (formula "2") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0"))
                                    (rule "add_literals" (formula "2") (term "0,0"))
                                    (rule "add_zero_left" (formula "2") (term "0"))
                                    (rule "applyEq" (formula "22") (term "1,1,0") (ifseqformula "36"))
                                    (rule "applyEq" (formula "37") (term "0") (ifseqformula "36"))
                                    (rule "qeq_literals" (formula "37"))
                                    (rule "true_left" (formula "37"))
                                    (rule "applyEq" (formula "26") (term "1,1,0,0,0,0,0") (ifseqformula "36"))
                                    (rule "applyEq" (formula "26") (term "1,1,0,0,0") (ifseqformula "36"))
                                    (rule "applyEq" (formula "34") (term "1,1,0") (ifseqformula "36"))
                                    (rule "add_literals" (formula "34") (term "1,0"))
                                    (rule "applyEq" (formula "28") (term "0,1") (ifseqformula "36"))
                                    (rule "inEqSimp_homoInEq0" (formula "28") (term "1"))
                                    (rule "mul_literals" (formula "28") (term "1,0,1"))
                                    (rule "polySimp_addComm1" (formula "28") (term "0,1"))
                                    (rule "add_literals" (formula "28") (term "0,0,1"))
                                    (rule "applyEq" (formula "24") (term "1,1,0") (ifseqformula "36"))
                                    (rule "applyEq" (formula "46") (term "1,1,1,0,0,0,0,0") (ifseqformula "36"))
                                    (rule "add_literals" (formula "46") (term "1,1,0,0,0,0,0"))
                                    (rule "applyEq" (formula "54") (term "1,1,0,0") (ifseqformula "36"))
                                    (rule "applyEq" (formula "6") (term "0") (ifseqformula "36"))
                                    (rule "inEqSimp_homoInEq1" (formula "6"))
                                    (rule "mul_literals" (formula "6") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "6") (term "0"))
                                    (rule "add_literals" (formula "6") (term "0,0"))
                                    (rule "applyEq" (formula "14") (term "1,1,1,0,0,1,0") (ifseqformula "36"))
                                    (rule "add_literals" (formula "14") (term "1,1,0,0,1,0"))
                                    (rule "applyEq" (formula "30") (term "1,1,1,0") (ifseqformula "36"))
                                    (rule "add_literals" (formula "30") (term "1,1,0"))
                                    (rule "applyEq" (formula "40") (term "1,1,0") (ifseqformula "36"))
                                    (rule "applyEq" (formula "44") (term "1,1,0") (ifseqformula "36"))
                                    (rule "add_literals" (formula "44") (term "1,0"))
                                    (rule "applyEq" (formula "50") (term "0,1") (ifseqformula "36"))
                                    (rule "inEqSimp_homoInEq0" (formula "50") (term "1"))
                                    (rule "mul_literals" (formula "50") (term "1,0,1"))
                                    (rule "polySimp_addComm1" (formula "50") (term "0,1"))
                                    (rule "add_literals" (formula "50") (term "0,0,1"))
                                    (rule "applyEq" (formula "48") (term "1,1,0") (ifseqformula "36"))
                                    (rule "applyEq" (formula "4") (term "1,1,0") (ifseqformula "36"))
                                    (rule "applyEq" (formula "23") (term "1,1,1,0") (ifseqformula "36"))
                                    (rule "add_literals" (formula "23") (term "1,1,0"))
                                    (rule "applyEq" (formula "44") (term "0") (ifseqformula "45"))
                                    (rule "eqSymm" (formula "44"))
                                    (rule "applyEq" (formula "32") (term "0") (ifseqformula "34"))
                                    (rule "applyEq" (formula "17") (term "0") (ifseqformula "18"))
                                    (rule "eqSymm" (formula "17"))
                                    (rule "applyEq" (formula "37") (term "1") (ifseqformula "36"))
                                    (rule "applyEq" (formula "35") (term "1") (ifseqformula "36"))
                                    (rule "applyEq" (formula "20") (term "1,1") (ifseqformula "32"))
                                    (rule "applyEq" (formula "17") (term "1,0") (ifseqformula "32"))
                                    (builtin "One Step Simplification" (formula "17"))
                                    (rule "true_left" (formula "17"))
                                    (rule "applyEq" (formula "22") (term "1,0,0,0,0") (ifseqformula "31"))
                                    (rule "applyEq" (formula "46") (term "1,1") (ifseqformula "31"))
                                    (rule "applyEq" (formula "32") (term "1,0") (ifseqformula "31"))
                                    (rule "applyEq" (formula "26") (term "1,0") (ifseqformula "31"))
                                    (rule "applyEq" (formula "42") (term "1,0") (ifseqformula "31"))
                                    (rule "applyEq" (formula "39") (term "1") (ifseqformula "31"))
                                    (rule "applyEq" (formula "32") (term "1") (ifseqformula "31"))
                                    (rule "applyEq" (formula "58") (term "0") (ifseqformula "31"))
                                    (rule "applyEq" (formula "51") (term "1") (ifseqformula "34"))
                                    (rule "applyEq" (formula "45") (term "1") (ifseqformula "42"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "1"))
                                    (rule "mul_literals" (formula "27") (term "1,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                                    (rule "mul_literals" (formula "6") (term "1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "48") (term "1"))
                                    (rule "mul_literals" (formula "48") (term "1,1"))
                                    (rule "inEqSimp_subsumption1" (formula "27") (term "1") (ifseqformula "7"))
                                    (rule "leq_literals" (formula "27") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "27"))
                                    (rule "true_left" (formula "27"))
                                    (rule "inEqSimp_subsumption1" (formula "47") (term "1") (ifseqformula "7"))
                                    (rule "leq_literals" (formula "47") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "47"))
                                    (rule "true_left" (formula "47"))
                                    (rule "inEqSimp_contradInEq1" (formula "6") (ifseqformula "7"))
                                    (rule "qeq_literals" (formula "6") (term "0"))
                                    (builtin "One Step Simplification" (formula "6"))
                                    (rule "closeFalse" (formula "6"))
                                 )
                                 (branch "CUT: self.size ≤ 1 FALSE"
                                    (builtin "One Step Simplification" (formula "28"))
                                    (rule "inEqSimp_leqRight" (formula "58"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                    (rule "mul_literals" (formula "1") (term "1"))
                                    (rule "inEqSimp_subsumption1" (formula "38") (ifseqformula "1"))
                                    (rule "leq_literals" (formula "38") (term "0"))
                                    (builtin "One Step Simplification" (formula "38"))
                                    (rule "true_left" (formula "38"))
                                    (rule "commute_and_2" (formula "47") (term "0,0,0,0"))
                                    (rule "commute_or_2" (formula "26") (term "0"))
                                    (rule "allLeft" (formula "5") (inst "t=Z(0(#))"))
                                    (rule "leq_literals" (formula "5") (term "1,0"))
                                    (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "35")))
                                    (rule "inEqSimp_commuteGeq" (formula "5"))
                                    (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "5"))
                                    (rule "qeq_literals" (formula "1") (term "0"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "closeFalse" (formula "1"))
                                 )
                              )
                           )
                        )
                     )
                     (branch "∃ int j; ( (IntNode)self.nodeseq[j] = self.last ∧ j ≥ 0 ∧ j ≤ -1 + self.size) FALSE"
                        (rule "eqSymm" (formula "30"))
                        (rule "nnf_ex2all" (formula "38"))
                        (rule "nnf_notAnd" (formula "1") (term "0"))
                        (rule "inEqSimp_notLeq" (formula "1") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0"))
                        (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0"))
                        (rule "add_literals" (formula "1") (term "0,0,0,1,0"))
                        (rule "add_zero_left" (formula "1") (term "0,0,1,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                        (rule "polySimp_elimOne" (formula "1") (term "1,1,0"))
                        (rule "nnf_notAnd" (formula "1") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "1") (term "1,0,0"))
                        (rule "times_zero_1" (formula "1") (term "1,0,0,1,0,0"))
                        (rule "add_zero_right" (formula "1") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1,0,0"))
                        (rule "mul_literals" (formula "1") (term "1,1,0,0"))
                        (rule "allLeft" (formula "29") (inst "t=Z(0(#))"))
                        (rule "leq_literals" (formula "29") (term "1,0"))
                        (builtin "One Step Simplification" (formula "29"))
                        (rule "inEqSimp_commuteGeq" (formula "29") (term "1"))
                        (rule "inEqSimp_contradInEq1" (formula "29") (term "1") (ifseqformula "26"))
                        (rule "qeq_literals" (formula "29") (term "0,1"))
                        (builtin "One Step Simplification" (formula "29"))
                        (rule "notLeft" (formula "29"))
                        (rule "allLeft" (formula "30") (inst "t=add(Z(neglit(1(#))),
    int::select(heap, self, IntLinkedList::$size))"))
                        (rule "typeEqDerived" (formula "30") (term "0,0,0") (ifseqformula "32"))
                        (builtin "One Step Simplification" (formula "30"))
                        (rule "true_left" (formula "30"))
                        (rule "allLeft" (formula "30") (inst "t=Z(0(#))"))
                        (rule "typeEqDerived2" (formula "30") (term "0,0,0") (ifseqformula "33"))
                        (builtin "One Step Simplification" (formula "30"))
                        (rule "true_left" (formula "30"))
                        (rule "allLeft" (formula "29") (inst "t=add(Z(neglit(1(#))),
    int::select(heap, self, IntLinkedList::$size))"))
                        (rule "inEqSimp_homoInEq0" (formula "29") (term "1,0"))
                        (rule "polySimp_mulComm0" (formula "29") (term "1,0,1,0"))
                        (rule "polySimp_rightDist" (formula "29") (term "1,0,1,0"))
                        (rule "mul_literals" (formula "29") (term "0,1,0,1,0"))
                        (rule "polySimp_addAssoc" (formula "29") (term "0,1,0"))
                        (rule "add_literals" (formula "29") (term "0,0,1,0"))
                        (rule "add_zero_left" (formula "29") (term "0,1,0"))
                        (rule "inEqSimp_homoInEq1" (formula "29") (term "1"))
                        (rule "polySimp_mulComm0" (formula "29") (term "1,0,1"))
                        (rule "polySimp_rightDist" (formula "29") (term "1,0,1"))
                        (rule "mul_literals" (formula "29") (term "0,1,0,1"))
                        (rule "polySimp_addAssoc" (formula "29") (term "0,1"))
                        (rule "polySimp_addComm0" (formula "29") (term "0,0,1"))
                        (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,1"))
                        (rule "add_literals" (formula "29") (term "1,1,0,1"))
                        (rule "times_zero_1" (formula "29") (term "1,0,1"))
                        (rule "add_zero_right" (formula "29") (term "0,1"))
                        (rule "leq_literals" (formula "29") (term "1"))
                        (builtin "One Step Simplification" (formula "29"))
                        (rule "applyEq" (formula "29") (term "0,0,0") (ifseqformula "32"))
                        (builtin "One Step Simplification" (formula "29"))
                        (rule "true_left" (formula "29"))
                        (rule "ifthenelse_split" (formula "2") (term "0"))
                        (branch "(IntNode)self.nodeseq[i_2_0].<created> = TRUE TRUE"
                           (rule "applyEqReverse" (formula "46") (term "1,1") (ifseqformula "3"))
                           (rule "hideAuxiliaryEq" (formula "3"))
                           (rule "replace_known_left" (formula "3") (term "0,1,0,0") (ifseqformula "2"))
                           (builtin "One Step Simplification" (formula "3"))
                           (rule "allLeft" (formula "20") (inst "t=Z(0(#))"))
                           (rule "add_zero_right" (formula "20") (term "1,1,0,0"))
                           (rule "leq_literals" (formula "20") (term "1,0"))
                           (builtin "One Step Simplification" (formula "20"))
                           (rule "inEqSimp_homoInEq1" (formula "20") (term "1"))
                           (rule "mul_literals" (formula "20") (term "1,0,1"))
                           (rule "add_zero_right" (formula "20") (term "0,1"))
                           (rule "applyEq" (formula "20") (term "1,0,0") (ifseqformula "23"))
                           (rule "eqSymm" (formula "20") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1"))
                           (rule "mul_literals" (formula "20") (term "1,1"))
                           (rule "allLeft" (formula "35") (inst "t=Z(0(#))"))
                           (rule "leq_literals" (formula "35") (term "1,0"))
                           (builtin "One Step Simplification" (formula "35"))
                           (rule "add_zero_right" (formula "35") (term "1,1,0"))
                           (rule "inEqSimp_homoInEq1" (formula "35") (term "1"))
                           (rule "times_zero_2" (formula "35") (term "1,0,1"))
                           (rule "add_zero_right" (formula "35") (term "0,1"))
                           (rule "applyEq" (formula "35") (term "1,0,0") (ifseqformula "23"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1"))
                           (rule "mul_literals" (formula "35") (term "1,1"))
                           (rule "pullOutSelect" (formula "35") (term "0,0") (inst "selectSK=IntNode_next_2"))
                           (rule "simplifySelectOfAnon" (formula "35"))
                           (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "43")) (ifInst ""  (formula "22")))
                           (rule "eqSymm" (formula "36") (term "0"))
                           (rule "elementOfUnion" (formula "35") (term "0,0"))
                           (rule "elementOfSingleton" (formula "35") (term "0,0,0"))
                           (builtin "One Step Simplification" (formula "35"))
                           (rule "elementOfInfiniteUnion" (formula "35") (term "0,0"))
                           (builtin "One Step Simplification" (formula "35"))
                           (rule "elementOfSingleton" (formula "35") (term "1,0,0,0"))
                           (builtin "One Step Simplification" (formula "35"))
                           (rule "applyEqReverse" (formula "36") (term "1,0") (ifseqformula "35"))
                           (rule "hideAuxiliaryEq" (formula "35"))
                           (rule "allLeft" (formula "18") (inst "t=Z(0(#))"))
                           (rule "leq_literals" (formula "18") (term "1,0,0,0,0,0"))
                           (builtin "One Step Simplification" (formula "18"))
                           (rule "inEqSimp_commuteGeq" (formula "18") (term "1,0,0,0,0"))
                           (rule "applyEq" (formula "18") (term "1,0,0,0,0,0,0") (ifseqformula "24"))
                           (rule "inEqSimp_contradInEq1" (formula "18") (term "1,0,0,0,0") (ifseqformula "28"))
                           (rule "qeq_literals" (formula "18") (term "0,1,0,0,0,0"))
                           (builtin "One Step Simplification" (formula "18"))
                           (rule "commute_or_2" (formula "18") (term "0"))
                           (rule "inEqSimp_or_weaken2" (formula "18") (term "0,0"))
                           (rule "add_literals" (formula "18") (term "1,0,1,0,0"))
                           (builtin "One Step Simplification" (formula "18"))
                           (rule "allLeft" (formula "19") (inst "t=add(Z(neglit(1(#))),
    int::select(heap, self, IntLinkedList::$size))"))
                           (rule "inEqSimp_homoInEq1" (formula "19") (term "1,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "19") (term "1,0,1,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "19") (term "1,0,1,0,0,0,0"))
                           (rule "mul_literals" (formula "19") (term "0,1,0,1,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "19") (term "0,1,0,0,0,0"))
                           (rule "polySimp_addComm0" (formula "19") (term "0,0,1,0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,1,0,0,0,0"))
                           (rule "add_literals" (formula "19") (term "1,1,0,1,0,0,0,0"))
                           (rule "times_zero_1" (formula "19") (term "1,0,1,0,0,0,0"))
                           (rule "add_zero_right" (formula "19") (term "0,1,0,0,0,0"))
                           (rule "leq_literals" (formula "19") (term "1,0,0,0,0"))
                           (builtin "One Step Simplification" (formula "19"))
                           (rule "inEqSimp_homoInEq0" (formula "19") (term "1,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "19") (term "1,0,1,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "19") (term "1,0,1,0,0,0,0"))
                           (rule "mul_literals" (formula "19") (term "0,1,0,1,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "19") (term "0,1,0,0,0,0"))
                           (rule "add_literals" (formula "19") (term "0,0,1,0,0,0,0"))
                           (rule "add_zero_left" (formula "19") (term "0,1,0,0,0,0"))
                           (rule "applyEq" (formula "19") (term "1,0,0,0,0,0,0") (ifseqformula "27"))
                           (rule "inEqSimp_invertInEq1" (formula "19") (term "1,0,0,0,0"))
                           (rule "mul_literals" (formula "19") (term "1,1,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "19") (term "0,1,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "19") (term "0,1,0,0,0,0"))
                           (rule "inEqSimp_contradInEq1" (formula "19") (term "1,0,0,0,0") (ifseqformula "29"))
                           (rule "qeq_literals" (formula "19") (term "0,1,0,0,0,0"))
                           (builtin "One Step Simplification" (formula "19"))
                           (rule "commute_or_2" (formula "19") (term "0"))
                           (rule "inEqSimp_or_weaken3" (formula "19") (term "0"))
                           (rule "polySimp_addAssoc" (formula "19") (term "1,0,1,0"))
                           (rule "add_literals" (formula "19") (term "0,1,0,1,0"))
                           (rule "add_zero_left" (formula "19") (term "1,0,1,0"))
                           (builtin "One Step Simplification" (formula "19"))
                           (rule "ifthenelse_split" (formula "48") (term "0,1"))
                           (branch "self.size = 1 + i_2_0 TRUE"
                              (rule "eqSymm" (formula "49") (term "1"))
                              (rule "applyEq" (formula "12") (term "1,1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "49") (term "1,1,0,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "13") (term "1,1,1,0,0,1,0") (ifseqformula "1"))
                              (rule "polySimp_addAssoc" (formula "13") (term "1,1,0,0,1,0"))
                              (rule "add_literals" (formula "13") (term "0,1,1,0,0,1,0"))
                              (rule "add_zero_left" (formula "13") (term "1,1,0,0,1,0"))
                              (rule "applyEq" (formula "40") (term "1,1,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "28") (term "1,1,0") (ifseqformula "1"))
                              (rule "polySimp_addAssoc" (formula "28") (term "1,0"))
                              (rule "add_literals" (formula "28") (term "0,1,0"))
                              (rule "add_zero_left" (formula "28") (term "1,0"))
                              (rule "applyEq" (formula "24") (term "1,1,1,0") (ifseqformula "1"))
                              (rule "polySimp_addAssoc" (formula "24") (term "1,1,0"))
                              (rule "add_literals" (formula "24") (term "0,1,1,0"))
                              (rule "add_zero_left" (formula "24") (term "1,1,0"))
                              (rule "applyEq" (formula "19") (term "1,1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "37") (term "1,1,1,0,0,1,1,0,0,0,0,0") (ifseqformula "1"))
                              (rule "polySimp_addAssoc" (formula "37") (term "1,1,0,0,1,1,0,0,0,0,0"))
                              (rule "add_literals" (formula "37") (term "0,1,1,0,0,1,1,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "37") (term "1,1,0,0,1,1,0,0,0,0,0"))
                              (rule "applyEq" (formula "35") (term "1,1,0") (ifseqformula "1"))
                              (rule "polySimp_addAssoc" (formula "35") (term "1,0"))
                              (rule "add_literals" (formula "35") (term "0,1,0"))
                              (rule "add_zero_left" (formula "35") (term "1,0"))
                              (rule "applyEq" (formula "11") (term "1,1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "36") (term "1,1,1,0,0,0") (ifseqformula "1"))
                              (rule "polySimp_addAssoc" (formula "36") (term "1,1,0,0,0"))
                              (rule "add_literals" (formula "36") (term "0,1,1,0,0,0"))
                              (rule "add_zero_left" (formula "36") (term "1,1,0,0,0"))
                              (rule "applyEq" (formula "14") (term "1,1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "21") (term "1,1,0,0,0,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "37") (term "1,1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "34") (term "1,1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "23") (term "0,1") (ifseqformula "1"))
                              (rule "inEqSimp_homoInEq0" (formula "23") (term "1"))
                              (rule "polySimp_mulComm0" (formula "23") (term "1,0,1"))
                              (rule "polySimp_rightDist" (formula "23") (term "1,0,1"))
                              (rule "mul_literals" (formula "23") (term "0,1,0,1"))
                              (rule "polySimp_addAssoc" (formula "23") (term "0,1"))
                              (rule "add_literals" (formula "23") (term "0,0,1"))
                              (rule "add_zero_left" (formula "23") (term "0,1"))
                              (rule "applyEq" (formula "33") (term "1,1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "38") (term "1,1,1,0") (ifseqformula "1"))
                              (rule "polySimp_addAssoc" (formula "38") (term "1,1,0"))
                              (rule "add_literals" (formula "38") (term "0,1,1,0"))
                              (rule "add_zero_left" (formula "38") (term "1,1,0"))
                              (rule "applyEq" (formula "5") (term "0") (ifseqformula "1"))
                              (rule "inEqSimp_homoInEq1" (formula "5"))
                              (rule "polySimp_pullOutFactor1" (formula "5") (term "0"))
                              (rule "add_literals" (formula "5") (term "1,0"))
                              (rule "times_zero_1" (formula "5") (term "0"))
                              (rule "leq_literals" (formula "5"))
                              (rule "true_left" (formula "5"))
                              (rule "applyEq" (formula "29") (term "0") (ifseqformula "1"))
                              (rule "inEqSimp_homoInEq1" (formula "29"))
                              (rule "polySimp_mulComm0" (formula "29") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "29") (term "1,0"))
                              (rule "mul_literals" (formula "29") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "29") (term "0"))
                              (rule "add_literals" (formula "29") (term "0,0"))
                              (rule "add_zero_left" (formula "29") (term "0"))
                              (rule "applyEq" (formula "20") (term "1,1,0,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "19") (term "1,1,1,0") (ifseqformula "1"))
                              (rule "polySimp_addAssoc" (formula "19") (term "1,1,0"))
                              (rule "add_literals" (formula "19") (term "0,1,1,0"))
                              (rule "add_zero_left" (formula "19") (term "1,1,0"))
                              (rule "applyEq" (formula "4") (term "1,1,1,0,0,0") (ifseqformula "1"))
                              (rule "polySimp_addAssoc" (formula "4") (term "1,1,0,0,0"))
                              (rule "add_literals" (formula "4") (term "0,1,1,0,0,0"))
                              (rule "add_zero_left" (formula "4") (term "1,1,0,0,0"))
                              (rule "applyEq" (formula "37") (term "1,1,1,0,0,1,1,0,0,0,0,0") (ifseqformula "1"))
                              (rule "polySimp_addAssoc" (formula "37") (term "1,1,0,0,1,1,0,0,0,0,0"))
                              (rule "add_literals" (formula "37") (term "0,1,1,0,0,1,1,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "37") (term "1,1,0,0,1,1,0,0,0,0,0"))
                              (rule "applyEq" (formula "15") (term "1,1,0") (ifseqformula "1"))
                              (rule "polySimp_addAssoc" (formula "15") (term "1,0"))
                              (rule "add_literals" (formula "15") (term "0,1,0"))
                              (rule "add_zero_left" (formula "15") (term "1,0"))
                              (rule "applyEq" (formula "17") (term "1,1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "2") (term "1,1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "14") (term "0") (ifseqformula "15"))
                              (rule "eqSymm" (formula "14"))
                              (rule "applyEq" (formula "4") (term "1") (ifseqformula "34"))
                              (rule "applyEq" (formula "45") (term "0") (ifseqformula "27"))
                              (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "27"))
                              (rule "applyEq" (formula "46") (term "1,0,0,1,0,0") (ifseqformula "26"))
                              (rule "applyEq" (formula "3") (term "1,0,0,0,0,0") (ifseqformula "26"))
                              (rule "applyEq" (formula "3") (term "1,1,0") (ifseqformula "26"))
                              (rule "applyEq" (formula "44") (term "0") (ifseqformula "33"))
                              (builtin "One Step Simplification" (formula "44"))
                              (rule "false_right" (formula "44"))
                              (rule "applyEq" (formula "45") (term "1,0,1") (ifseqformula "26"))
                              (rule "replace_known_left" (formula "45") (term "1") (ifseqformula "20"))
                              (builtin "One Step Simplification" (formula "45"))
                              (rule "allRight" (formula "45") (inst "sk=j_1_0"))
                              (rule "orRight" (formula "45"))
                              (rule "orRight" (formula "46"))
                              (rule "orRight" (formula "45"))
                              (rule "notRight" (formula "47"))
                              (rule "inEqSimp_geqRight" (formula "47"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                              (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                              (rule "add_literals" (formula "1") (term "0,0,0"))
                              (rule "add_zero_left" (formula "1") (term "0,0"))
                              (rule "inEqSimp_leqRight" (formula "47"))
                              (rule "mul_literals" (formula "1") (term "1,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0"))
                              (rule "add_zero_left" (formula "1") (term "0"))
                              (rule "applyEq" (formula "6") (term "1,2,0") (ifseqformula "29"))
                              (builtin "One Step Simplification" (formula "6"))
                              (rule "applyEq" (formula "30") (term "1") (ifseqformula "4"))
                              (rule "applyEq" (formula "32") (term "1") (ifseqformula "4"))
                              (rule "applyEq" (formula "40") (term "1") (ifseqformula "4"))
                              (rule "applyEq" (formula "16") (term "1,0") (ifseqformula "29"))
                              (builtin "One Step Simplification" (formula "16"))
                              (rule "true_left" (formula "16"))
                              (rule "inEqSimp_invertInEq1" (formula "23") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "23") (term "0,1"))
                              (rule "mul_literals" (formula "23") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "23") (term "0,1"))
                              (rule "inEqSimp_invertInEq0" (formula "30"))
                              (rule "mul_literals" (formula "30") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "30") (term "0"))
                              (rule "polySimp_elimOne" (formula "30") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1"))
                              (rule "polySimp_elimOne" (formula "2") (term "1"))
                              (rule "inEqSimp_strengthen0" (formula "2") (ifseqformula "46"))
                              (rule "inEqSimp_contradEq3" (formula "46") (ifseqformula "2"))
                              (rule "polySimp_mulComm0" (formula "46") (term "1,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "46") (term "0,0"))
                              (rule "add_literals" (formula "46") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "46") (term "1,0,0"))
                              (rule "add_zero_right" (formula "46") (term "0,0"))
                              (rule "qeq_literals" (formula "46") (term "0"))
                              (builtin "One Step Simplification" (formula "46"))
                              (rule "false_right" (formula "46"))
                              (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                              (rule "times_zero_1" (formula "1") (term "0,0"))
                              (rule "add_zero_left" (formula "1") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                              (rule "mul_literals" (formula "1") (term "1"))
                              (rule "inEqSimp_contradInEq1" (formula "24") (term "1") (ifseqformula "1"))
                              (rule "qeq_literals" (formula "24") (term "0,1"))
                              (builtin "One Step Simplification" (formula "24"))
                              (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "1"))
                              (rule "leq_literals" (formula "8") (term "0"))
                              (builtin "One Step Simplification" (formula "8"))
                              (rule "true_left" (formula "8"))
                              (rule "seqGetAlphaCast" (formula "35") (term "1"))
                              (rule "castDel" (formula "35") (term "0"))
                              (builtin "One Step Simplification" (formula "35"))
                              (rule "true_left" (formula "35"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "22") (term "0") (ifseqformula "8"))
                              (rule "replace_known_left" (formula "22") (term "0") (ifseqformula "23"))
                              (builtin "One Step Simplification" (formula "22"))
                              (rule "true_left" (formula "22"))
                              (rule "seqGetAlphaCast" (formula "17") (term "0"))
                              (rule "castDel" (formula "17") (term "0"))
                              (builtin "One Step Simplification" (formula "17"))
                              (rule "true_left" (formula "17"))
                              (rule "ifthenelse_split" (formula "35") (term "0"))
                              (branch "∃ int j; ( (IntNode)self.nodeseq[j] = self.first ∧ j ≥ 0 ∧ j ≤ i_2_0) TRUE"
                                 (rule "exLeft" (formula "35") (inst "sk=j_0"))
                                 (rule "andLeft" (formula "35"))
                                 (rule "andLeft" (formula "35"))
                                 (rule "eqSymm" (formula "38"))
                                 (rule "applyEq" (formula "45") (term "0") (ifseqformula "38"))
                                 (builtin "One Step Simplification" (formula "45"))
                                 (rule "false_right" (formula "45"))
                                 (rule "inEqSimp_exactShadow3" (formula "36") (ifseqformula "37"))
                                 (rule "times_zero_1" (formula "36") (term "0,0"))
                                 (rule "add_zero_left" (formula "36") (term "0"))
                                 (rule "inEqSimp_subsumption1" (formula "36") (ifseqformula "1"))
                                 (rule "leq_literals" (formula "36") (term "0"))
                                 (builtin "One Step Simplification" (formula "36"))
                                 (rule "true_left" (formula "36"))
                                 (rule "allLeft" (formula "20") (inst "t=j_1_0"))
                                 (rule "replace_known_left" (formula "20") (term "0,0,0") (ifseqformula "4"))
                                 (builtin "One Step Simplification" (formula "20"))
                                 (rule "inEqSimp_contradInEq0" (formula "20") (term "1") (ifseqformula "3"))
                                 (rule "inEqSimp_homoInEq1" (formula "20") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1"))
                                 (rule "mul_literals" (formula "20") (term "0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "20") (term "0,0,1"))
                                 (rule "polySimp_addComm0" (formula "20") (term "0,0,0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,1"))
                                 (rule "add_literals" (formula "20") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "20") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "20") (term "0,0,1"))
                                 (rule "leq_literals" (formula "20") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "20"))
                                 (rule "inEqSimp_contradInEq1" (formula "20") (ifseqformula "2"))
                                 (rule "qeq_literals" (formula "20") (term "0"))
                                 (builtin "One Step Simplification" (formula "20"))
                                 (rule "closeFalse" (formula "20"))
                              )
                              (branch "∃ int j; ( (IntNode)self.nodeseq[j] = self.first ∧ j ≥ 0 ∧ j ≤ i_2_0) FALSE"
                                 (rule "eqSymm" (formula "35"))
                                 (rule "applyEq" (formula "43") (term "0") (ifseqformula "35"))
                                 (builtin "One Step Simplification" (formula "43"))
                                 (rule "false_right" (formula "43"))
                                 (rule "nnf_ex2all" (formula "42"))
                                 (rule "nnf_notAnd" (formula "1") (term "0"))
                                 (rule "inEqSimp_notLeq" (formula "1") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,1,0"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,1,0"))
                                 (rule "mul_literals" (formula "1") (term "0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0"))
                                 (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "1") (term "1,0,0"))
                                 (rule "times_zero_1" (formula "1") (term "1,0,0,1,0,0"))
                                 (rule "add_zero_right" (formula "1") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1,0,0"))
                                 (rule "mul_literals" (formula "1") (term "1,1,0,0"))
                                 (rule "allLeft" (formula "21") (inst "t=j_1_0"))
                                 (rule "replace_known_left" (formula "21") (term "0,0,0") (ifseqformula "5"))
                                 (builtin "One Step Simplification" (formula "21"))
                                 (rule "inEqSimp_contradInEq0" (formula "21") (term "1") (ifseqformula "4"))
                                 (rule "inEqSimp_homoInEq1" (formula "21") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1"))
                                 (rule "mul_literals" (formula "21") (term "0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "21") (term "0,0,1"))
                                 (rule "polySimp_addComm0" (formula "21") (term "0,0,0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,1"))
                                 (rule "add_literals" (formula "21") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "21") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "21") (term "0,0,1"))
                                 (rule "leq_literals" (formula "21") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "21"))
                                 (rule "inEqSimp_contradInEq1" (formula "21") (ifseqformula "3"))
                                 (rule "qeq_literals" (formula "21") (term "0"))
                                 (builtin "One Step Simplification" (formula "21"))
                                 (rule "closeFalse" (formula "21"))
                              )
                           )
                           (branch "self.size = 1 + i_2_0 FALSE"
                              (rule "eqSymm" (formula "49") (term "1"))
                              (rule "inEqSimp_strengthen1" (formula "4") (ifseqformula "48"))
                              (rule "polySimp_addAssoc" (formula "4") (term "1"))
                              (rule "add_literals" (formula "4") (term "0,1"))
                              (rule "inEqSimp_contradEq7" (formula "48") (ifseqformula "4"))
                              (rule "polySimp_rightDist" (formula "48") (term "1,0,0"))
                              (rule "mul_literals" (formula "48") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "48") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "48") (term "0,0,0"))
                              (rule "add_literals" (formula "48") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "48") (term "0,0"))
                              (rule "add_literals" (formula "48") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "48") (term "1,0,0"))
                              (rule "add_zero_right" (formula "48") (term "0,0"))
                              (rule "leq_literals" (formula "48") (term "0"))
                              (builtin "One Step Simplification" (formula "48"))
                              (rule "false_right" (formula "48"))
                              (rule "seqGetAlphaCast" (formula "46") (term "0"))
                              (rule "castDel" (formula "1") (term "0"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "true_left" (formula "1"))
                              (rule "seqGetAlphaCast" (formula "45") (term "0"))
                              (rule "castedGetAny" (formula "1") (term "0"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "true_left" (formula "1"))
                              (rule "ifthenelse_split" (formula "35") (term "0"))
                              (branch "∃ int j; ( (IntNode)self.nodeseq[j] = self.first ∧ j ≥ 0 ∧ j ≤ -1 + self.size) TRUE"
                                 (rule "exLeft" (formula "35") (inst "sk=j_0"))
                                 (rule "andLeft" (formula "35"))
                                 (rule "andLeft" (formula "35"))
                                 (rule "eqSymm" (formula "38"))
                                 (rule "inEqSimp_homoInEq0" (formula "37"))
                                 (rule "polySimp_addComm1" (formula "37") (term "0"))
                                 (rule "applyEq" (formula "45") (term "0") (ifseqformula "38"))
                                 (builtin "One Step Simplification" (formula "45"))
                                 (rule "false_right" (formula "45"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "37"))
                                 (rule "polySimp_mulComm0" (formula "37") (term "1"))
                                 (rule "polySimp_rightDist" (formula "37") (term "1"))
                                 (rule "mul_literals" (formula "37") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "37") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "37") (term "1,1"))
                                 (rule "allLeft" (formula "13") (inst "t=add(Z(1(#)), i_2_0)"))
                                 (rule "inEqSimp_commuteGeq" (formula "13") (term "1"))
                                 (rule "inEqSimp_homoInEq0" (formula "13") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "13") (term "1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "13") (term "1,0,1,0"))
                                 (rule "mul_literals" (formula "13") (term "0,1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "13") (term "0,1,0"))
                                 (rule "add_literals" (formula "13") (term "0,0,1,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "13") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "0,1,0"))
                                 (rule "polySimp_elimOne" (formula "13") (term "0,1,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "13") (term "1") (ifseqformula "4"))
                                 (rule "inEqSimp_homoInEq1" (formula "13") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1"))
                                 (rule "mul_literals" (formula "13") (term "0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "13") (term "0,0,1"))
                                 (rule "polySimp_addComm1" (formula "13") (term "0,0,0,1"))
                                 (rule "add_literals" (formula "13") (term "0,0,0,0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0,1"))
                                 (rule "add_literals" (formula "13") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "13") (term "1,0,0,1"))
                                 (rule "add_literals" (formula "13") (term "0,0,1"))
                                 (rule "leq_literals" (formula "13") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "13"))
                                 (rule "inEqSimp_contradInEq1" (formula "13") (term "1") (ifseqformula "5"))
                                 (rule "qeq_literals" (formula "13") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "13"))
                                 (rule "notLeft" (formula "13"))
                                 (rule "allLeft" (formula "40") (inst "t=i_2_0"))
                                 (rule "replaceKnownSelect_taclet1011011_15" (formula "40") (term "0,0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet011011011_21" (formula "40") (term "0,0,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "40") (term "1"))
                                 (rule "polySimp_addComm1" (formula "40") (term "0,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "40") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "40") (term "1,1"))
                                 (rule "mul_literals" (formula "40") (term "0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "40") (term "1,1,1"))
                                 (rule "polySimp_elimOne" (formula "40") (term "1,1,1"))
                                 (rule "inEqSimp_contradInEq1" (formula "40") (term "1") (ifseqformula "4"))
                                 (rule "inEqSimp_homoInEq1" (formula "40") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "40") (term "1,0,0,1"))
                                 (rule "mul_literals" (formula "40") (term "0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "40") (term "0,0,1"))
                                 (rule "polySimp_addComm1" (formula "40") (term "0,0,0,1"))
                                 (rule "add_literals" (formula "40") (term "0,0,0,0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "40") (term "0,0,1"))
                                 (rule "add_literals" (formula "40") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "40") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "40") (term "0,0,1"))
                                 (rule "leq_literals" (formula "40") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "40"))
                                 (rule "inEqSimp_contradInEq1" (formula "40") (term "1") (ifseqformula "5"))
                                 (rule "qeq_literals" (formula "40") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "40"))
                                 (rule "replace_known_left" (formula "52") (term "1") (ifseqformula "40"))
                                 (builtin "One Step Simplification" (formula "52"))
                                 (rule "allRight" (formula "52") (inst "sk=j_1_0"))
                                 (rule "orRight" (formula "52"))
                                 (rule "orRight" (formula "52"))
                                 (rule "orRight" (formula "54"))
                                 (rule "notRight" (formula "54"))
                                 (rule "inEqSimp_geqRight" (formula "54"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0"))
                                 (rule "inEqSimp_leqRight" (formula "54"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                 (rule "polySimp_elimOne" (formula "2") (term "0"))
                                 (rule "allLeft" (formula "42") (inst "t=add(Z(1(#)), i_2_0)"))
                                 (rule "inEqSimp_commuteGeq" (formula "42") (term "1"))
                                 (rule "inEqSimp_homoInEq0" (formula "42") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "42") (term "1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "42") (term "1,0,1,0"))
                                 (rule "mul_literals" (formula "42") (term "0,1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "42") (term "0,1,0"))
                                 (rule "add_literals" (formula "42") (term "0,0,1,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "42") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "42") (term "0,1,0"))
                                 (rule "polySimp_elimOne" (formula "42") (term "0,1,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "42") (term "1") (ifseqformula "7"))
                                 (rule "inEqSimp_homoInEq1" (formula "42") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "42") (term "1,0,0,1"))
                                 (rule "mul_literals" (formula "42") (term "0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "42") (term "0,0,1"))
                                 (rule "polySimp_addComm1" (formula "42") (term "0,0,0,1"))
                                 (rule "add_literals" (formula "42") (term "0,0,0,0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "42") (term "0,0,1"))
                                 (rule "add_literals" (formula "42") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "42") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "42") (term "0,0,1"))
                                 (rule "leq_literals" (formula "42") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "42"))
                                 (rule "inEqSimp_contradInEq1" (formula "42") (term "1") (ifseqformula "8"))
                                 (rule "qeq_literals" (formula "42") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "42"))
                                 (rule "pullOutSelect" (formula "42") (term "0") (inst "selectSK=IntNode_data_3"))
                                 (rule "simplifySelectOfAnon" (formula "42"))
                                 (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "51")))
                                 (rule "eqSymm" (formula "43"))
                                 (rule "applyEqReverse" (formula "42") (term "1") (ifseqformula "43"))
                                 (rule "hideAuxiliaryEq" (formula "43"))
                                 (rule "elementOfUnion" (formula "42") (term "0,0,0"))
                                 (rule "elementOfSingleton" (formula "42") (term "0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "42"))
                                 (rule "elementOfInfiniteUnion" (formula "42") (term "0,0,0"))
                                 (builtin "One Step Simplification" (formula "42"))
                                 (rule "elementOfSingleton" (formula "42") (term "1,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "42"))
                                 (rule "eqSymm" (formula "42") (term "1,0,0,0,0"))
                                 (rule "allLeft" (formula "23") (inst "t=i_2_0"))
                                 (rule "inEqSimp_commuteGeq" (formula "23") (term "1,0,0,0,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "23") (term "1,0,0,0,0,0") (ifseqformula "8"))
                                 (rule "qeq_literals" (formula "23") (term "0,1,0,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "23"))
                                 (rule "inEqSimp_contradInEq1" (formula "23") (term "1,0,0,0,0") (ifseqformula "7"))
                                 (rule "inEqSimp_homoInEq1" (formula "23") (term "0,1,0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1,0,0,0,0"))
                                 (rule "add_literals" (formula "23") (term "1,1,0,0,1,0,0,0,0"))
                                 (rule "times_zero_1" (formula "23") (term "1,0,0,1,0,0,0,0"))
                                 (rule "add_zero_right" (formula "23") (term "0,0,1,0,0,0,0"))
                                 (rule "leq_literals" (formula "23") (term "0,1,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "23"))
                                 (rule "allLeft" (formula "24") (inst "t=add(Z(1(#)), i_2_0)"))
                                 (rule "inEqSimp_commuteGeq" (formula "24") (term "1,0,0,0,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "24") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "24") (term "1,0,1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "24") (term "1,0,1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "24") (term "0,1,0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "24") (term "0,1,0,0,0,0,0"))
                                 (rule "add_literals" (formula "24") (term "0,0,1,0,0,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "24") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "24") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "24") (term "0,1,0,0,0,0,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "24") (term "1,0,0,0,0") (ifseqformula "7"))
                                 (rule "inEqSimp_homoInEq1" (formula "24") (term "0,1,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0,0,0"))
                                 (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "24") (term "0,0,0,1,0,0,0,0"))
                                 (rule "add_literals" (formula "24") (term "0,0,0,0,1,0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,1,0,0,0,0"))
                                 (rule "add_literals" (formula "24") (term "1,1,0,0,1,0,0,0,0"))
                                 (rule "times_zero_1" (formula "24") (term "1,0,0,1,0,0,0,0"))
                                 (rule "add_zero_right" (formula "24") (term "0,0,1,0,0,0,0"))
                                 (rule "leq_literals" (formula "24") (term "0,1,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "24"))
                                 (rule "inEqSimp_contradInEq1" (formula "24") (term "1,0,0,0,0") (ifseqformula "8"))
                                 (rule "qeq_literals" (formula "24") (term "0,1,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "24"))
                                 (rule "allLeft" (formula "28") (inst "t=add(Z(1(#)), i_2_0)"))
                                 (rule "polySimp_addAssoc" (formula "28") (term "1,1,0,0"))
                                 (rule "add_literals" (formula "28") (term "0,1,1,0,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "28") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "28") (term "1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "28") (term "1,0,1,0"))
                                 (rule "mul_literals" (formula "28") (term "0,1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "28") (term "0,1,0"))
                                 (rule "add_literals" (formula "28") (term "0,0,1,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "28") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "28") (term "1,0,1"))
                                 (rule "polySimp_rightDist" (formula "28") (term "1,0,1"))
                                 (rule "mul_literals" (formula "28") (term "0,1,0,1"))
                                 (rule "polySimp_addComm1" (formula "28") (term "0,1"))
                                 (rule "polySimp_addAssoc" (formula "28") (term "0,0,1"))
                                 (rule "add_literals" (formula "28") (term "0,0,0,1"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "28") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "28") (term "0,1,0"))
                                 (rule "polySimp_elimOne" (formula "28") (term "0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "28") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "28") (term "1,1"))
                                 (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1"))
                                 (rule "mul_literals" (formula "28") (term "0,1,1"))
                                 (rule "polySimp_elimOne" (formula "28") (term "1,1,1"))
                                 (rule "inEqSimp_contradInEq1" (formula "28") (term "1,0") (ifseqformula "8"))
                                 (rule "qeq_literals" (formula "28") (term "0,1,0"))
                                 (builtin "One Step Simplification" (formula "28"))
                                 (rule "allLeft" (formula "20") (inst "t=add(Z(1(#)), i_2_0)"))
                                 (rule "inEqSimp_commuteGeq" (formula "20") (term "1"))
                                 (rule "inEqSimp_homoInEq0" (formula "20") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "20") (term "1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "20") (term "1,0,1,0"))
                                 (rule "mul_literals" (formula "20") (term "0,1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "20") (term "0,1,0"))
                                 (rule "add_literals" (formula "20") (term "0,0,1,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "20") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "20") (term "0,1,0"))
                                 (rule "polySimp_elimOne" (formula "20") (term "0,1,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "20") (term "1,0") (ifseqformula "8"))
                                 (rule "qeq_literals" (formula "20") (term "0,1,0"))
                                 (builtin "One Step Simplification" (formula "20"))
                                 (rule "inEqSimp_contradInEq1" (formula "20") (term "1") (ifseqformula "7"))
                                 (rule "inEqSimp_homoInEq1" (formula "20") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1"))
                                 (rule "mul_literals" (formula "20") (term "0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "20") (term "0,0,1"))
                                 (rule "polySimp_addComm1" (formula "20") (term "0,0,0,1"))
                                 (rule "add_literals" (formula "20") (term "0,0,0,0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,1"))
                                 (rule "add_literals" (formula "20") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "20") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "20") (term "0,0,1"))
                                 (rule "leq_literals" (formula "20") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "20"))
                                 (rule "allLeft" (formula "49") (inst "t=add(Z(1(#)), i_2_0)"))
                                 (rule "polySimp_addAssoc" (formula "49") (term "1,1,0,0"))
                                 (rule "add_literals" (formula "49") (term "0,1,1,0,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "49") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "49") (term "1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "49") (term "1,0,1,0"))
                                 (rule "mul_literals" (formula "49") (term "0,1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "49") (term "0,1,0"))
                                 (rule "add_literals" (formula "49") (term "0,0,1,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "49") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "49") (term "1,0,1"))
                                 (rule "polySimp_rightDist" (formula "49") (term "1,0,1"))
                                 (rule "mul_literals" (formula "49") (term "0,1,0,1"))
                                 (rule "polySimp_addComm1" (formula "49") (term "0,1"))
                                 (rule "polySimp_addAssoc" (formula "49") (term "0,0,1"))
                                 (rule "add_literals" (formula "49") (term "0,0,0,1"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "49") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "49") (term "0,1,0"))
                                 (rule "polySimp_elimOne" (formula "49") (term "0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "49") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "49") (term "1,1"))
                                 (rule "mul_literals" (formula "49") (term "0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "49") (term "1,1,1"))
                                 (rule "polySimp_elimOne" (formula "49") (term "1,1,1"))
                                 (rule "inEqSimp_contradInEq1" (formula "49") (term "1,0") (ifseqformula "8"))
                                 (rule "qeq_literals" (formula "49") (term "0,1,0"))
                                 (builtin "One Step Simplification" (formula "49"))
                                 (rule "pullOutSelect" (formula "49") (term "0,0") (inst "selectSK=IntNode_next_3"))
                                 (rule "simplifySelectOfAnon" (formula "49"))
                                 (builtin "One Step Simplification" (formula "49") (ifInst ""  (formula "56")))
                                 (rule "eqSymm" (formula "50") (term "0"))
                                 (rule "elementOfUnion" (formula "49") (term "0,0,0"))
                                 (rule "elementOfInfiniteUnion" (formula "49") (term "1,0,0,0"))
                                 (builtin "One Step Simplification" (formula "49"))
                                 (rule "elementOfSingleton" (formula "49") (term "1,0,1,0,0,0"))
                                 (builtin "One Step Simplification" (formula "49"))
                                 (rule "elementOfSingleton" (formula "49") (term "0,0,0"))
                                 (builtin "One Step Simplification" (formula "49"))
                                 (rule "ifthenelse_negated" (formula "49") (term "0"))
                                 (rule "seqGetAlphaCast" (formula "17") (term "0"))
                                 (rule "castDel" (formula "17") (term "0"))
                                 (builtin "One Step Simplification" (formula "17"))
                                 (rule "true_left" (formula "17"))
                                 (rule "allLeft" (formula "4") (inst "t=add(Z(neglit(1(#))),
    int::select(heap, self, IntLinkedList::$size))"))
                                 (rule "replace_known_left" (formula "4") (term "0,0,0") (ifseqformula "35"))
                                 (builtin "One Step Simplification" (formula "4"))
                                 (rule "inEqSimp_homoInEq0" (formula "4") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                                 (rule "mul_literals" (formula "4") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                 (rule "add_literals" (formula "4") (term "0,0,0"))
                                 (rule "add_zero_left" (formula "4") (term "0,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "4") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "4") (term "1,0,1"))
                                 (rule "polySimp_rightDist" (formula "4") (term "1,0,1"))
                                 (rule "mul_literals" (formula "4") (term "0,1,0,1"))
                                 (rule "polySimp_addAssoc" (formula "4") (term "0,1"))
                                 (rule "polySimp_addComm0" (formula "4") (term "0,0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,1"))
                                 (rule "add_literals" (formula "4") (term "1,1,0,1"))
                                 (rule "times_zero_1" (formula "4") (term "1,0,1"))
                                 (rule "add_literals" (formula "4") (term "0,1"))
                                 (rule "leq_literals" (formula "4") (term "1"))
                                 (builtin "One Step Simplification" (formula "4"))
                                 (rule "inEqSimp_invertInEq1" (formula "4"))
                                 (rule "times_zero_2" (formula "4") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                 (rule "polySimp_elimOne" (formula "4") (term "0"))
                                 (rule "inEqSimp_contradInEq0" (formula "37") (ifseqformula "4"))
                                 (rule "qeq_literals" (formula "37") (term "0"))
                                 (builtin "One Step Simplification" (formula "37"))
                                 (rule "closeFalse" (formula "37"))
                              )
                              (branch "∃ int j; ( (IntNode)self.nodeseq[j] = self.first ∧ j ≥ 0 ∧ j ≤ -1 + self.size) FALSE"
                                 (rule "eqSymm" (formula "35"))
                                 (rule "applyEq" (formula "43") (term "0") (ifseqformula "35"))
                                 (builtin "One Step Simplification" (formula "43"))
                                 (rule "false_right" (formula "43"))
                                 (rule "nnf_ex2all" (formula "42"))
                                 (rule "nnf_notAnd" (formula "1") (term "0"))
                                 (rule "inEqSimp_notLeq" (formula "1") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0"))
                                 (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0"))
                                 (rule "add_literals" (formula "1") (term "0,0,0,1,0"))
                                 (rule "add_zero_left" (formula "1") (term "0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "1,1,0"))
                                 (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "1") (term "1,0,0"))
                                 (rule "times_zero_1" (formula "1") (term "1,0,0,1,0,0"))
                                 (rule "add_zero_right" (formula "1") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1,0,0"))
                                 (rule "mul_literals" (formula "1") (term "1,1,0,0"))
                                 (rule "allLeft" (formula "14") (inst "t=add(Z(1(#)), i_2_0)"))
                                 (rule "inEqSimp_commuteGeq" (formula "14") (term "1"))
                                 (rule "inEqSimp_homoInEq0" (formula "14") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "14") (term "1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "14") (term "1,0,1,0"))
                                 (rule "mul_literals" (formula "14") (term "0,1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "14") (term "0,1,0"))
                                 (rule "add_literals" (formula "14") (term "0,0,1,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "14") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "0,1,0"))
                                 (rule "polySimp_elimOne" (formula "14") (term "0,1,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "14") (term "1") (ifseqformula "5"))
                                 (rule "inEqSimp_homoInEq1" (formula "14") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1"))
                                 (rule "mul_literals" (formula "14") (term "0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "14") (term "0,0,1"))
                                 (rule "polySimp_addComm1" (formula "14") (term "0,0,0,1"))
                                 (rule "add_literals" (formula "14") (term "0,0,0,0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0,1"))
                                 (rule "add_literals" (formula "14") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "14") (term "1,0,0,1"))
                                 (rule "add_literals" (formula "14") (term "0,0,1"))
                                 (rule "leq_literals" (formula "14") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "14"))
                                 (rule "inEqSimp_contradInEq1" (formula "14") (term "1") (ifseqformula "6"))
                                 (rule "qeq_literals" (formula "14") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "14"))
                                 (rule "notLeft" (formula "14"))
                                 (rule "allLeft" (formula "21") (inst "t=add(Z(1(#)), i_2_0)"))
                                 (rule "inEqSimp_commuteGeq" (formula "21") (term "1,0,0,0,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "21") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "21") (term "1,0,1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "21") (term "1,0,1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "21") (term "0,1,0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "21") (term "0,1,0,0,0,0,0"))
                                 (rule "add_literals" (formula "21") (term "0,0,1,0,0,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "21") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "21") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "21") (term "0,1,0,0,0,0,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "21") (term "1,0,0,0,0") (ifseqformula "5"))
                                 (rule "inEqSimp_homoInEq1" (formula "21") (term "0,1,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,0,0,0,0"))
                                 (rule "mul_literals" (formula "21") (term "0,1,0,0,1,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "21") (term "0,0,0,1,0,0,0,0"))
                                 (rule "add_literals" (formula "21") (term "0,0,0,0,1,0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,1,0,0,0,0"))
                                 (rule "add_literals" (formula "21") (term "1,1,0,0,1,0,0,0,0"))
                                 (rule "times_zero_1" (formula "21") (term "1,0,0,1,0,0,0,0"))
                                 (rule "add_zero_right" (formula "21") (term "0,0,1,0,0,0,0"))
                                 (rule "leq_literals" (formula "21") (term "0,1,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "21"))
                                 (rule "inEqSimp_contradInEq1" (formula "21") (term "1,0,0,0,0") (ifseqformula "6"))
                                 (rule "qeq_literals" (formula "21") (term "0,1,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "21"))
                                 (rule "allLeft" (formula "39") (inst "t=i_2_0"))
                                 (rule "replaceKnownSelect_taclet1011011_15" (formula "39") (term "0,0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet011011011_21" (formula "39") (term "0,0,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "39") (term "1"))
                                 (rule "polySimp_addComm1" (formula "39") (term "0,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "39") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "39") (term "1,1"))
                                 (rule "mul_literals" (formula "39") (term "0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1"))
                                 (rule "polySimp_elimOne" (formula "39") (term "1,1,1"))
                                 (rule "inEqSimp_contradInEq1" (formula "39") (term "1,0") (ifseqformula "6"))
                                 (rule "qeq_literals" (formula "39") (term "0,1,0"))
                                 (builtin "One Step Simplification" (formula "39"))
                                 (rule "inEqSimp_contradInEq1" (formula "39") (term "1") (ifseqformula "5"))
                                 (rule "inEqSimp_homoInEq1" (formula "39") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "39") (term "1,0,0,1"))
                                 (rule "mul_literals" (formula "39") (term "0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "39") (term "0,0,1"))
                                 (rule "polySimp_addComm1" (formula "39") (term "0,0,0,1"))
                                 (rule "add_literals" (formula "39") (term "0,0,0,0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,0,1"))
                                 (rule "add_literals" (formula "39") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "39") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "39") (term "0,0,1"))
                                 (rule "leq_literals" (formula "39") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "39"))
                                 (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "39"))
                                 (builtin "One Step Simplification" (formula "51"))
                                 (rule "allRight" (formula "51") (inst "sk=j_1_0"))
                                 (rule "orRight" (formula "51"))
                                 (rule "orRight" (formula "51"))
                                 (rule "orRight" (formula "53"))
                                 (rule "notRight" (formula "53"))
                                 (rule "inEqSimp_leqRight" (formula "52"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0"))
                                 (rule "inEqSimp_geqRight" (formula "53"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "0"))
                                 (rule "allLeft" (formula "41") (inst "t=add(Z(1(#)), i_2_0)"))
                                 (rule "inEqSimp_commuteGeq" (formula "41") (term "1"))
                                 (rule "inEqSimp_homoInEq0" (formula "41") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "41") (term "1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "41") (term "1,0,1,0"))
                                 (rule "mul_literals" (formula "41") (term "0,1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "41") (term "0,1,0"))
                                 (rule "add_literals" (formula "41") (term "0,0,1,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "41") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "41") (term "0,1,0"))
                                 (rule "polySimp_elimOne" (formula "41") (term "0,1,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "41") (term "1") (ifseqformula "8"))
                                 (rule "inEqSimp_homoInEq1" (formula "41") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "41") (term "1,0,0,1"))
                                 (rule "mul_literals" (formula "41") (term "0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "41") (term "0,0,1"))
                                 (rule "polySimp_addComm1" (formula "41") (term "0,0,0,1"))
                                 (rule "add_literals" (formula "41") (term "0,0,0,0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "41") (term "0,0,1"))
                                 (rule "add_literals" (formula "41") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "41") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "41") (term "0,0,1"))
                                 (rule "leq_literals" (formula "41") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "41"))
                                 (rule "inEqSimp_contradInEq1" (formula "41") (term "1") (ifseqformula "9"))
                                 (rule "qeq_literals" (formula "41") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "41"))
                                 (rule "pullOutSelect" (formula "41") (term "0") (inst "selectSK=IntNode_data_3"))
                                 (rule "simplifySelectOfAnon" (formula "41"))
                                 (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "50")))
                                 (rule "eqSymm" (formula "42"))
                                 (rule "applyEqReverse" (formula "41") (term "1") (ifseqformula "42"))
                                 (rule "hideAuxiliaryEq" (formula "42"))
                                 (rule "elementOfUnion" (formula "41") (term "0,0,0"))
                                 (rule "elementOfSingleton" (formula "41") (term "0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "41"))
                                 (rule "elementOfInfiniteUnion" (formula "41") (term "0,0,0"))
                                 (builtin "One Step Simplification" (formula "41"))
                                 (rule "elementOfSingleton" (formula "41") (term "1,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "41"))
                                 (rule "eqSymm" (formula "41") (term "1,0,0,0,0"))
                                 (rule "allLeft" (formula "44") (inst "t=add(Z(1(#)), i_2_0)"))
                                 (rule "polySimp_addAssoc" (formula "44") (term "1,1,0,0"))
                                 (rule "add_literals" (formula "44") (term "0,1,1,0,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "44") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "44") (term "1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "44") (term "1,0,1,0"))
                                 (rule "mul_literals" (formula "44") (term "0,1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "44") (term "0,1,0"))
                                 (rule "add_literals" (formula "44") (term "0,0,1,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "44") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "44") (term "1,0,1"))
                                 (rule "polySimp_rightDist" (formula "44") (term "1,0,1"))
                                 (rule "mul_literals" (formula "44") (term "0,1,0,1"))
                                 (rule "polySimp_addComm1" (formula "44") (term "0,1"))
                                 (rule "polySimp_addAssoc" (formula "44") (term "0,0,1"))
                                 (rule "add_literals" (formula "44") (term "0,0,0,1"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "44") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "44") (term "0,1,0"))
                                 (rule "polySimp_elimOne" (formula "44") (term "0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "44") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "44") (term "1,1"))
                                 (rule "mul_literals" (formula "44") (term "0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "44") (term "1,1,1"))
                                 (rule "polySimp_elimOne" (formula "44") (term "1,1,1"))
                                 (rule "inEqSimp_contradInEq1" (formula "44") (term "1,0") (ifseqformula "9"))
                                 (rule "qeq_literals" (formula "44") (term "0,1,0"))
                                 (builtin "One Step Simplification" (formula "44"))
                                 (rule "pullOutSelect" (formula "44") (term "0,0") (inst "selectSK=IntNode_next_3"))
                                 (rule "simplifySelectOfAnon" (formula "44"))
                                 (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "51")))
                                 (rule "eqSymm" (formula "45") (term "0"))
                                 (rule "elementOfUnion" (formula "44") (term "0,0,0"))
                                 (rule "elementOfSingleton" (formula "44") (term "0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "44"))
                                 (rule "elementOfInfiniteUnion" (formula "44") (term "0,0,0"))
                                 (builtin "One Step Simplification" (formula "44"))
                                 (rule "elementOfSingleton" (formula "44") (term "1,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "44"))
                                 (rule "ifthenelse_negated" (formula "44") (term "0"))
                                 (rule "allLeft" (formula "25") (inst "t=i_2_0"))
                                 (rule "inEqSimp_commuteGeq" (formula "25") (term "1,0,0,0,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "25") (term "1,0,0,0,0") (ifseqformula "8"))
                                 (rule "inEqSimp_homoInEq1" (formula "25") (term "0,1,0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,1,0,0,0,0"))
                                 (rule "add_literals" (formula "25") (term "1,1,0,0,1,0,0,0,0"))
                                 (rule "times_zero_1" (formula "25") (term "1,0,0,1,0,0,0,0"))
                                 (rule "add_literals" (formula "25") (term "0,0,1,0,0,0,0"))
                                 (rule "leq_literals" (formula "25") (term "0,1,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "25"))
                                 (rule "inEqSimp_contradInEq1" (formula "25") (term "1,0,0,0,0") (ifseqformula "9"))
                                 (rule "qeq_literals" (formula "25") (term "0,1,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "25"))
                                 (rule "allLeft" (formula "29") (inst "t=add(Z(1(#)), i_2_0)"))
                                 (rule "polySimp_addAssoc" (formula "29") (term "1,1,0,0"))
                                 (rule "add_literals" (formula "29") (term "0,1,1,0,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "29") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "29") (term "1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "29") (term "1,0,1,0"))
                                 (rule "mul_literals" (formula "29") (term "0,1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "29") (term "0,1,0"))
                                 (rule "add_literals" (formula "29") (term "0,0,1,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "29") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "29") (term "1,0,1"))
                                 (rule "polySimp_rightDist" (formula "29") (term "1,0,1"))
                                 (rule "mul_literals" (formula "29") (term "0,1,0,1"))
                                 (rule "polySimp_addComm1" (formula "29") (term "0,1"))
                                 (rule "polySimp_addAssoc" (formula "29") (term "0,0,1"))
                                 (rule "add_literals" (formula "29") (term "0,0,0,1"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "29") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "29") (term "0,1,0"))
                                 (rule "polySimp_elimOne" (formula "29") (term "0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "29") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "29") (term "1,1"))
                                 (rule "mul_literals" (formula "29") (term "0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1"))
                                 (rule "polySimp_elimOne" (formula "29") (term "1,1,1"))
                                 (rule "inEqSimp_contradInEq1" (formula "29") (term "1,0") (ifseqformula "9"))
                                 (rule "qeq_literals" (formula "29") (term "0,1,0"))
                                 (builtin "One Step Simplification" (formula "29"))
                                 (rule "allLeft" (formula "21") (inst "t=add(Z(1(#)), i_2_0)"))
                                 (rule "inEqSimp_commuteGeq" (formula "21") (term "1"))
                                 (rule "inEqSimp_homoInEq0" (formula "21") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "21") (term "1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "21") (term "1,0,1,0"))
                                 (rule "mul_literals" (formula "21") (term "0,1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "21") (term "0,1,0"))
                                 (rule "add_literals" (formula "21") (term "0,0,1,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "21") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "21") (term "0,1,0"))
                                 (rule "polySimp_elimOne" (formula "21") (term "0,1,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "21") (term "1,0") (ifseqformula "9"))
                                 (rule "qeq_literals" (formula "21") (term "0,1,0"))
                                 (builtin "One Step Simplification" (formula "21"))
                                 (rule "inEqSimp_contradInEq1" (formula "21") (term "1") (ifseqformula "8"))
                                 (rule "inEqSimp_homoInEq1" (formula "21") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1"))
                                 (rule "mul_literals" (formula "21") (term "0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "21") (term "0,0,1"))
                                 (rule "polySimp_addComm1" (formula "21") (term "0,0,0,1"))
                                 (rule "add_literals" (formula "21") (term "0,0,0,0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,1"))
                                 (rule "add_literals" (formula "21") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "21") (term "1,0,0,1"))
                                 (rule "add_literals" (formula "21") (term "0,0,1"))
                                 (rule "leq_literals" (formula "21") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "21"))
                                 (rule "seqGetAlphaCast" (formula "18") (term "0"))
                                 (rule "castDel" (formula "18") (term "0"))
                                 (builtin "One Step Simplification" (formula "18"))
                                 (rule "true_left" (formula "18"))
                                 (rule "commute_or_2" (formula "25") (term "0"))
                                 (rule "allLeft" (formula "5") (inst "t=add(Z(neglit(1(#))),
    int::select(heap, self, IntLinkedList::$size))"))
                                 (rule "replace_known_left" (formula "5") (term "0,0,0") (ifseqformula "36"))
                                 (builtin "One Step Simplification" (formula "5"))
                                 (rule "inEqSimp_homoInEq1" (formula "5") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "5") (term "1,0,1"))
                                 (rule "polySimp_rightDist" (formula "5") (term "1,0,1"))
                                 (rule "mul_literals" (formula "5") (term "0,1,0,1"))
                                 (rule "polySimp_addAssoc" (formula "5") (term "0,1"))
                                 (rule "polySimp_addComm0" (formula "5") (term "0,0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,1"))
                                 (rule "add_literals" (formula "5") (term "1,1,0,1"))
                                 (rule "times_zero_1" (formula "5") (term "1,0,1"))
                                 (rule "add_literals" (formula "5") (term "0,1"))
                                 (rule "leq_literals" (formula "5") (term "1"))
                                 (builtin "One Step Simplification" (formula "5"))
                                 (rule "inEqSimp_homoInEq0" (formula "5"))
                                 (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                                 (rule "mul_literals" (formula "5") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                 (rule "add_literals" (formula "5") (term "0,0"))
                                 (rule "add_zero_left" (formula "5") (term "0"))
                                 (rule "inEqSimp_invertInEq1" (formula "5"))
                                 (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                 (rule "times_zero_2" (formula "5") (term "1"))
                                 (rule "polySimp_elimOne" (formula "5") (term "0"))
                                 (rule "inEqSimp_contradInEq0" (formula "38") (ifseqformula "5"))
                                 (rule "qeq_literals" (formula "38") (term "0"))
                                 (builtin "One Step Simplification" (formula "38"))
                                 (rule "closeFalse" (formula "38"))
                              )
                           )
                        )
                        (branch "(IntNode)self.nodeseq[i_2_0].<created> = TRUE FALSE"
                           (rule "applyEqReverse" (formula "46") (term "1,1") (ifseqformula "2"))
                           (rule "hideAuxiliaryEq" (formula "2"))
                           (rule "replace_known_right" (formula "2") (term "0,1,0,0") (ifseqformula "38"))
                           (builtin "One Step Simplification" (formula "2"))
                           (rule "eqSymm" (formula "2"))
                           (rule "applyEq" (formula "43") (term "0") (ifseqformula "2"))
                           (builtin "One Step Simplification" (formula "43"))
                           (rule "false_right" (formula "43"))
                           (rule "allLeft" (formula "19") (inst "t=Z(0(#))"))
                           (rule "leq_literals" (formula "19") (term "1,0"))
                           (builtin "One Step Simplification" (formula "19"))
                           (rule "add_zero_right" (formula "19") (term "1,1,0"))
                           (rule "inEqSimp_homoInEq1" (formula "19") (term "1"))
                           (rule "times_zero_2" (formula "19") (term "1,0,1"))
                           (rule "add_zero_right" (formula "19") (term "0,1"))
                           (rule "applyEq" (formula "19") (term "1,0,0") (ifseqformula "22"))
                           (rule "eqSymm" (formula "19") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1"))
                           (rule "mul_literals" (formula "19") (term "1,1"))
                           (rule "allLeft" (formula "34") (inst "t=Z(0(#))"))
                           (rule "add_zero_right" (formula "34") (term "1,1,0,0"))
                           (rule "leq_literals" (formula "34") (term "1,0"))
                           (builtin "One Step Simplification" (formula "34"))
                           (rule "inEqSimp_homoInEq1" (formula "34") (term "1"))
                           (rule "times_zero_2" (formula "34") (term "1,0,1"))
                           (rule "add_zero_right" (formula "34") (term "0,1"))
                           (rule "applyEq" (formula "34") (term "1,0,0") (ifseqformula "22"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "1"))
                           (rule "mul_literals" (formula "34") (term "1,1"))
                           (rule "pullOutSelect" (formula "34") (term "0,0") (inst "selectSK=IntNode_next_2"))
                           (rule "simplifySelectOfAnon" (formula "34"))
                           (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "43")) (ifInst ""  (formula "21")))
                           (rule "eqSymm" (formula "35") (term "0"))
                           (rule "elementOfUnion" (formula "34") (term "0,0"))
                           (rule "elementOfInfiniteUnion" (formula "34") (term "1,0,0"))
                           (builtin "One Step Simplification" (formula "34"))
                           (rule "elementOfSingleton" (formula "34") (term "1,0,1,0,0"))
                           (builtin "One Step Simplification" (formula "34"))
                           (rule "elementOfSingleton" (formula "34") (term "0,0"))
                           (builtin "One Step Simplification" (formula "34"))
                           (rule "applyEqReverse" (formula "35") (term "1,0") (ifseqformula "34"))
                           (rule "hideAuxiliaryEq" (formula "34"))
                           (rule "allLeft" (formula "17") (inst "t=Z(0(#))"))
                           (rule "leq_literals" (formula "17") (term "1,0,0,0,0,0"))
                           (builtin "One Step Simplification" (formula "17"))
                           (rule "inEqSimp_commuteGeq" (formula "17") (term "1,0,0,0,0"))
                           (rule "applyEq" (formula "17") (term "1,0,0,0,0,0,0") (ifseqformula "23"))
                           (rule "inEqSimp_contradInEq1" (formula "17") (term "1,0,0,0,0") (ifseqformula "27"))
                           (rule "qeq_literals" (formula "17") (term "0,1,0,0,0,0"))
                           (builtin "One Step Simplification" (formula "17"))
                           (rule "commute_or_2" (formula "17") (term "0"))
                           (rule "inEqSimp_or_weaken2" (formula "17") (term "0,0"))
                           (rule "add_literals" (formula "17") (term "1,0,1,0,0"))
                           (builtin "One Step Simplification" (formula "17"))
                           (rule "allLeft" (formula "18") (inst "t=add(Z(neglit(1(#))),
    int::select(heap, self, IntLinkedList::$size))"))
                           (rule "inEqSimp_homoInEq0" (formula "18") (term "1,0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "18") (term "1,0,1,0,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "18") (term "1,0,1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "18") (term "0,1,0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "18") (term "0,1,0,0,0,0,0"))
                           (rule "add_literals" (formula "18") (term "0,0,1,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "18") (term "0,1,0,0,0,0,0"))
                           (rule "inEqSimp_homoInEq1" (formula "18") (term "1,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "18") (term "1,0,1,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "18") (term "1,0,1,0,0,0,0"))
                           (rule "mul_literals" (formula "18") (term "0,1,0,1,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "18") (term "0,1,0,0,0,0"))
                           (rule "polySimp_addComm0" (formula "18") (term "0,0,1,0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,1,0,0,0,0"))
                           (rule "add_literals" (formula "18") (term "1,1,0,1,0,0,0,0"))
                           (rule "times_zero_1" (formula "18") (term "1,0,1,0,0,0,0"))
                           (rule "add_zero_right" (formula "18") (term "0,1,0,0,0,0"))
                           (rule "leq_literals" (formula "18") (term "1,0,0,0,0"))
                           (builtin "One Step Simplification" (formula "18"))
                           (rule "applyEq" (formula "18") (term "1,0,0,0,0,0,0") (ifseqformula "26"))
                           (rule "inEqSimp_invertInEq1" (formula "18") (term "1,0,0,0,0"))
                           (rule "times_zero_2" (formula "18") (term "1,1,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "18") (term "0,1,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "18") (term "0,1,0,0,0,0"))
                           (rule "inEqSimp_contradInEq1" (formula "18") (term "1,0,0,0,0") (ifseqformula "28"))
                           (rule "qeq_literals" (formula "18") (term "0,1,0,0,0,0"))
                           (builtin "One Step Simplification" (formula "18"))
                           (rule "commute_or_2" (formula "18") (term "0"))
                           (rule "inEqSimp_or_weaken3" (formula "18") (term "0"))
                           (rule "polySimp_addAssoc" (formula "18") (term "1,0,1,0"))
                           (rule "add_literals" (formula "18") (term "0,1,0,1,0"))
                           (rule "add_zero_left" (formula "18") (term "1,0,1,0"))
                           (builtin "One Step Simplification" (formula "18"))
                           (rule "ifthenelse_split" (formula "47") (term "0,1"))
                           (branch "self.size = 1 + i_2_0 TRUE"
                              (rule "eqSymm" (formula "48") (term "1"))
                              (rule "applyEq" (formula "20") (term "1,1,0,0,0,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "32") (term "1,1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "18") (term "1,1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "11") (term "1,1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "2") (term "1,1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "33") (term "1,1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "37") (term "1,1,1,0") (ifseqformula "1"))
                              (rule "polySimp_addAssoc" (formula "37") (term "1,1,0"))
                              (rule "add_literals" (formula "37") (term "0,1,1,0"))
                              (rule "add_zero_left" (formula "37") (term "1,1,0"))
                              (rule "applyEq" (formula "39") (term "1,1,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "13") (term "1,1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "23") (term "1,1,1,0") (ifseqformula "1"))
                              (rule "polySimp_addAssoc" (formula "23") (term "1,1,0"))
                              (rule "add_literals" (formula "23") (term "0,1,1,0"))
                              (rule "add_zero_left" (formula "23") (term "1,1,0"))
                              (rule "applyEq" (formula "37") (term "1,1,1,0,0,1,1,0,0,0,0,0") (ifseqformula "1"))
                              (rule "polySimp_addAssoc" (formula "37") (term "1,1,0,0,1,1,0,0,0,0,0"))
                              (rule "add_literals" (formula "37") (term "0,1,1,0,0,1,1,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "37") (term "1,1,0,0,1,1,0,0,0,0,0"))
                              (rule "applyEq" (formula "15") (term "1,1,0") (ifseqformula "1"))
                              (rule "polySimp_addAssoc" (formula "15") (term "1,0"))
                              (rule "add_literals" (formula "15") (term "0,1,0"))
                              (rule "add_zero_left" (formula "15") (term "1,0"))
                              (rule "applyEq" (formula "4") (term "0") (ifseqformula "1"))
                              (rule "inEqSimp_homoInEq1" (formula "4"))
                              (rule "polySimp_pullOutFactor1" (formula "4") (term "0"))
                              (rule "add_literals" (formula "4") (term "1,0"))
                              (rule "times_zero_1" (formula "4") (term "0"))
                              (rule "leq_literals" (formula "4"))
                              (rule "true_left" (formula "4"))
                              (rule "applyEq" (formula "34") (term "1,1,1,0,0,0") (ifseqformula "1"))
                              (rule "polySimp_addAssoc" (formula "34") (term "1,1,0,0,0"))
                              (rule "add_literals" (formula "34") (term "0,1,1,0,0,0"))
                              (rule "add_zero_left" (formula "34") (term "1,1,0,0,0"))
                              (rule "applyEq" (formula "11") (term "1,1,1,0,0,1,0") (ifseqformula "1"))
                              (rule "polySimp_addAssoc" (formula "11") (term "1,1,0,0,1,0"))
                              (rule "add_literals" (formula "11") (term "0,1,1,0,0,1,0"))
                              (rule "add_zero_left" (formula "11") (term "1,1,0,0,1,0"))
                              (rule "applyEq" (formula "28") (term "0") (ifseqformula "1"))
                              (rule "inEqSimp_homoInEq1" (formula "28"))
                              (rule "polySimp_mulComm0" (formula "28") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "28") (term "1,0"))
                              (rule "mul_literals" (formula "28") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "28") (term "0"))
                              (rule "add_literals" (formula "28") (term "0,0"))
                              (rule "add_zero_left" (formula "28") (term "0"))
                              (rule "applyEq" (formula "19") (term "1,1,0,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "33") (term "1,1,0") (ifseqformula "1"))
                              (rule "polySimp_addAssoc" (formula "33") (term "1,0"))
                              (rule "add_literals" (formula "33") (term "0,1,0"))
                              (rule "add_zero_left" (formula "33") (term "1,0"))
                              (rule "applyEq" (formula "9") (term "1,1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "16") (term "1,1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "18") (term "1,1,1,0") (ifseqformula "1"))
                              (rule "polySimp_addAssoc" (formula "18") (term "1,1,0"))
                              (rule "add_literals" (formula "18") (term "0,1,1,0"))
                              (rule "add_zero_left" (formula "18") (term "1,1,0"))
                              (rule "applyEq" (formula "35") (term "1,1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "21") (term "0,1") (ifseqformula "1"))
                              (rule "inEqSimp_homoInEq0" (formula "21") (term "1"))
                              (rule "polySimp_mulComm0" (formula "21") (term "1,0,1"))
                              (rule "polySimp_rightDist" (formula "21") (term "1,0,1"))
                              (rule "mul_literals" (formula "21") (term "0,1,0,1"))
                              (rule "polySimp_addAssoc" (formula "21") (term "0,1"))
                              (rule "add_literals" (formula "21") (term "0,0,1"))
                              (rule "add_zero_left" (formula "21") (term "0,1"))
                              (rule "applyEq" (formula "47") (term "1,1,0,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "35") (term "1,1,1,0,0,1,1,0,0,0,0,0") (ifseqformula "1"))
                              (rule "polySimp_addAssoc" (formula "35") (term "1,1,0,0,1,1,0,0,0,0,0"))
                              (rule "add_literals" (formula "35") (term "0,1,1,0,0,1,1,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "35") (term "1,1,0,0,1,1,0,0,0,0,0"))
                              (rule "applyEq" (formula "26") (term "1,1,0") (ifseqformula "1"))
                              (rule "polySimp_addAssoc" (formula "26") (term "1,0"))
                              (rule "add_literals" (formula "26") (term "0,1,0"))
                              (rule "add_zero_left" (formula "26") (term "1,0"))
                              (rule "applyEq" (formula "45") (term "0") (ifseqformula "26"))
                              (rule "applyEq" (formula "46") (term "1,0,1") (ifseqformula "26"))
                              (rule "applyEq" (formula "41") (term "1,0") (ifseqformula "26"))
                              (rule "close" (formula "41") (ifseqformula "25"))
                           )
                           (branch "self.size = 1 + i_2_0 FALSE"
                              (rule "eqSymm" (formula "48") (term "1"))
                              (rule "inEqSimp_strengthen1" (formula "3") (ifseqformula "47"))
                              (rule "polySimp_addAssoc" (formula "3") (term "1"))
                              (rule "add_literals" (formula "3") (term "0,1"))
                              (rule "inEqSimp_contradEq7" (formula "47") (ifseqformula "3"))
                              (rule "polySimp_rightDist" (formula "47") (term "1,0,0"))
                              (rule "mul_literals" (formula "47") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "47") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "47") (term "0,0,0"))
                              (rule "add_literals" (formula "47") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "47") (term "0,0"))
                              (rule "add_literals" (formula "47") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "47") (term "1,0,0"))
                              (rule "add_zero_right" (formula "47") (term "0,0"))
                              (rule "leq_literals" (formula "47") (term "0"))
                              (builtin "One Step Simplification" (formula "47"))
                              (rule "false_right" (formula "47"))
                              (rule "seqGetAlphaCast" (formula "45") (term "0"))
                              (rule "castedGetAny" (formula "1") (term "0"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "true_left" (formula "1"))
                              (rule "ifthenelse_split" (formula "34") (term "0"))
                              (branch "∃ int j; ( (IntNode)self.nodeseq[j] = self.first ∧ j ≥ 0 ∧ j ≤ -1 + self.size) TRUE"
                                 (rule "exLeft" (formula "34") (inst "sk=j_0"))
                                 (rule "andLeft" (formula "34"))
                                 (rule "andLeft" (formula "34"))
                                 (rule "eqSymm" (formula "37"))
                                 (rule "inEqSimp_homoInEq0" (formula "36"))
                                 (rule "polySimp_addComm1" (formula "36") (term "0"))
                                 (rule "applyEq" (formula "45") (term "0") (ifseqformula "37"))
                                 (builtin "One Step Simplification" (formula "45"))
                                 (rule "false_right" (formula "45"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "36"))
                                 (rule "polySimp_mulComm0" (formula "36") (term "1"))
                                 (rule "polySimp_rightDist" (formula "36") (term "1"))
                                 (rule "mul_literals" (formula "36") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "36") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "36") (term "1,1"))
                                 (rule "allLeft" (formula "12") (inst "t=add(Z(1(#)), i_2_0)"))
                                 (rule "inEqSimp_commuteGeq" (formula "12") (term "1"))
                                 (rule "inEqSimp_homoInEq0" (formula "12") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "12") (term "1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "12") (term "1,0,1,0"))
                                 (rule "mul_literals" (formula "12") (term "0,1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "12") (term "0,1,0"))
                                 (rule "add_literals" (formula "12") (term "0,0,1,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "12") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "12") (term "0,1,0"))
                                 (rule "polySimp_elimOne" (formula "12") (term "0,1,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "12") (term "1") (ifseqformula "3"))
                                 (rule "inEqSimp_homoInEq1" (formula "12") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1"))
                                 (rule "mul_literals" (formula "12") (term "0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "12") (term "0,0,1"))
                                 (rule "polySimp_addComm1" (formula "12") (term "0,0,0,1"))
                                 (rule "add_literals" (formula "12") (term "0,0,0,0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0,1"))
                                 (rule "add_literals" (formula "12") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "12") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "12") (term "0,0,1"))
                                 (rule "leq_literals" (formula "12") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "12"))
                                 (rule "inEqSimp_contradInEq1" (formula "12") (term "1") (ifseqformula "4"))
                                 (rule "qeq_literals" (formula "12") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "12"))
                                 (rule "notLeft" (formula "12"))
                                 (rule "allLeft" (formula "39") (inst "t=i_2_0"))
                                 (rule "replaceKnownSelect_taclet1011011_15" (formula "39") (term "0,0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet111011011_21" (formula "39") (term "0,0,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "39") (term "1"))
                                 (rule "polySimp_addComm1" (formula "39") (term "0,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "39") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "39") (term "1,1"))
                                 (rule "mul_literals" (formula "39") (term "0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1"))
                                 (rule "polySimp_elimOne" (formula "39") (term "1,1,1"))
                                 (rule "inEqSimp_contradInEq1" (formula "39") (term "1") (ifseqformula "3"))
                                 (rule "inEqSimp_homoInEq1" (formula "39") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "39") (term "1,0,0,1"))
                                 (rule "mul_literals" (formula "39") (term "0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "39") (term "0,0,1"))
                                 (rule "polySimp_addComm1" (formula "39") (term "0,0,0,1"))
                                 (rule "add_literals" (formula "39") (term "0,0,0,0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,0,1"))
                                 (rule "add_literals" (formula "39") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "39") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "39") (term "0,0,1"))
                                 (rule "leq_literals" (formula "39") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "39"))
                                 (rule "inEqSimp_contradInEq1" (formula "39") (term "1") (ifseqformula "4"))
                                 (rule "qeq_literals" (formula "39") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "39"))
                                 (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "39"))
                                 (builtin "One Step Simplification" (formula "51"))
                                 (rule "allRight" (formula "51") (inst "sk=j_1_0"))
                                 (rule "orRight" (formula "51"))
                                 (rule "orRight" (formula "51"))
                                 (rule "orRight" (formula "53"))
                                 (rule "notRight" (formula "53"))
                                 (rule "inEqSimp_geqRight" (formula "53"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0"))
                                 (rule "inEqSimp_leqRight" (formula "53"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                 (rule "polySimp_elimOne" (formula "2") (term "0"))
                                 (rule "allLeft" (formula "25") (inst "t=add(Z(1(#)), i_2_0)"))
                                 (rule "polySimp_addAssoc" (formula "25") (term "1,1,0,0"))
                                 (rule "add_literals" (formula "25") (term "0,1,1,0,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "25") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "25") (term "1,0,1"))
                                 (rule "polySimp_rightDist" (formula "25") (term "1,0,1"))
                                 (rule "mul_literals" (formula "25") (term "0,1,0,1"))
                                 (rule "polySimp_addComm1" (formula "25") (term "0,1"))
                                 (rule "polySimp_addAssoc" (formula "25") (term "0,0,1"))
                                 (rule "add_literals" (formula "25") (term "0,0,0,1"))
                                 (rule "inEqSimp_homoInEq0" (formula "25") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "25") (term "1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "25") (term "1,0,1,0"))
                                 (rule "mul_literals" (formula "25") (term "0,1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "25") (term "0,1,0"))
                                 (rule "add_literals" (formula "25") (term "0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "25") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "25") (term "1,1"))
                                 (rule "mul_literals" (formula "25") (term "0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1"))
                                 (rule "polySimp_elimOne" (formula "25") (term "1,1,1"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "25") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "25") (term "0,1,0"))
                                 (rule "polySimp_elimOne" (formula "25") (term "0,1,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "25") (term "1,0") (ifseqformula "7"))
                                 (rule "qeq_literals" (formula "25") (term "0,1,0"))
                                 (builtin "One Step Simplification" (formula "25"))
                                 (rule "allLeft" (formula "26") (inst "t=i_2_0"))
                                 (rule "inEqSimp_homoInEq1" (formula "26") (term "1"))
                                 (rule "polySimp_addComm1" (formula "26") (term "0,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "26") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "26") (term "1,1"))
                                 (rule "mul_literals" (formula "26") (term "0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1"))
                                 (rule "polySimp_elimOne" (formula "26") (term "1,1,1"))
                                 (rule "inEqSimp_contradInEq1" (formula "26") (term "1,0") (ifseqformula "7"))
                                 (rule "qeq_literals" (formula "26") (term "0,1,0"))
                                 (builtin "One Step Simplification" (formula "26"))
                                 (rule "inEqSimp_contradInEq1" (formula "26") (term "1") (ifseqformula "6"))
                                 (rule "inEqSimp_homoInEq1" (formula "26") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1"))
                                 (rule "mul_literals" (formula "26") (term "0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "26") (term "0,0,1"))
                                 (rule "polySimp_addComm1" (formula "26") (term "0,0,0,1"))
                                 (rule "add_literals" (formula "26") (term "0,0,0,0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,1"))
                                 (rule "add_literals" (formula "26") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "26") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "26") (term "0,0,1"))
                                 (rule "leq_literals" (formula "26") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "26"))
                                 (rule "allLeft" (formula "22") (inst "t=i_2_0"))
                                 (rule "inEqSimp_commuteGeq" (formula "22") (term "1,0,0,0,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "22") (term "1,0,0,0,0,0") (ifseqformula "7"))
                                 (rule "qeq_literals" (formula "22") (term "0,1,0,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "22"))
                                 (rule "inEqSimp_contradInEq1" (formula "22") (term "1,0,0,0,0") (ifseqformula "6"))
                                 (rule "inEqSimp_homoInEq1" (formula "22") (term "0,1,0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,1,0,0,0,0"))
                                 (rule "add_literals" (formula "22") (term "1,1,0,0,1,0,0,0,0"))
                                 (rule "times_zero_1" (formula "22") (term "1,0,0,1,0,0,0,0"))
                                 (rule "add_zero_right" (formula "22") (term "0,0,1,0,0,0,0"))
                                 (rule "leq_literals" (formula "22") (term "0,1,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "22"))
                                 (rule "allLeft" (formula "23") (inst "t=add(Z(1(#)), i_2_0)"))
                                 (rule "inEqSimp_commuteGeq" (formula "23") (term "1,0,0,0,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "23") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "23") (term "1,0,1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "23") (term "1,0,1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "23") (term "0,1,0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "23") (term "0,1,0,0,0,0,0"))
                                 (rule "add_literals" (formula "23") (term "0,0,1,0,0,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "23") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "23") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "23") (term "0,1,0,0,0,0,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "23") (term "1,0,0,0,0") (ifseqformula "6"))
                                 (rule "inEqSimp_homoInEq1" (formula "23") (term "0,1,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,0,0,0"))
                                 (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "23") (term "0,0,0,1,0,0,0,0"))
                                 (rule "add_literals" (formula "23") (term "0,0,0,0,1,0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1,0,0,0,0"))
                                 (rule "add_literals" (formula "23") (term "1,1,0,0,1,0,0,0,0"))
                                 (rule "times_zero_1" (formula "23") (term "1,0,0,1,0,0,0,0"))
                                 (rule "add_zero_right" (formula "23") (term "0,0,1,0,0,0,0"))
                                 (rule "leq_literals" (formula "23") (term "0,1,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "23"))
                                 (rule "inEqSimp_contradInEq1" (formula "23") (term "1,0,0,0,0") (ifseqformula "7"))
                                 (rule "qeq_literals" (formula "23") (term "0,1,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "23"))
                                 (rule "allLeft" (formula "19") (inst "t=add(Z(1(#)), i_2_0)"))
                                 (rule "inEqSimp_commuteGeq" (formula "19") (term "1"))
                                 (rule "inEqSimp_homoInEq0" (formula "19") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "19") (term "1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "19") (term "1,0,1,0"))
                                 (rule "mul_literals" (formula "19") (term "0,1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "19") (term "0,1,0"))
                                 (rule "add_literals" (formula "19") (term "0,0,1,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "19") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "0,1,0"))
                                 (rule "polySimp_elimOne" (formula "19") (term "0,1,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "19") (term "1") (ifseqformula "6"))
                                 (rule "inEqSimp_homoInEq1" (formula "19") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1"))
                                 (rule "mul_literals" (formula "19") (term "0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "19") (term "0,0,1"))
                                 (rule "polySimp_addComm1" (formula "19") (term "0,0,0,1"))
                                 (rule "add_literals" (formula "19") (term "0,0,0,0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,1"))
                                 (rule "add_literals" (formula "19") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "19") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "19") (term "0,0,1"))
                                 (rule "leq_literals" (formula "19") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "19"))
                                 (rule "inEqSimp_contradInEq1" (formula "19") (term "1") (ifseqformula "7"))
                                 (rule "qeq_literals" (formula "19") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "19"))
                                 (rule "allLeft" (formula "48") (inst "t=add(Z(1(#)), i_2_0)"))
                                 (rule "polySimp_addAssoc" (formula "48") (term "1,1,0,0"))
                                 (rule "add_literals" (formula "48") (term "0,1,1,0,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "48") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "48") (term "1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "48") (term "1,0,1,0"))
                                 (rule "mul_literals" (formula "48") (term "0,1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "48") (term "0,1,0"))
                                 (rule "add_literals" (formula "48") (term "0,0,1,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "48") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "48") (term "1,0,1"))
                                 (rule "polySimp_rightDist" (formula "48") (term "1,0,1"))
                                 (rule "mul_literals" (formula "48") (term "0,1,0,1"))
                                 (rule "polySimp_addComm1" (formula "48") (term "0,1"))
                                 (rule "polySimp_addAssoc" (formula "48") (term "0,0,1"))
                                 (rule "add_literals" (formula "48") (term "0,0,0,1"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "48") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "48") (term "0,1,0"))
                                 (rule "polySimp_elimOne" (formula "48") (term "0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "48") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "48") (term "1,1"))
                                 (rule "mul_literals" (formula "48") (term "0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "48") (term "1,1,1"))
                                 (rule "polySimp_elimOne" (formula "48") (term "1,1,1"))
                                 (rule "inEqSimp_contradInEq1" (formula "48") (term "1,0") (ifseqformula "7"))
                                 (rule "qeq_literals" (formula "48") (term "0,1,0"))
                                 (builtin "One Step Simplification" (formula "48"))
                                 (rule "pullOutSelect" (formula "48") (term "0,0") (inst "selectSK=IntNode_next_3"))
                                 (rule "simplifySelectOfAnon" (formula "48"))
                                 (builtin "One Step Simplification" (formula "48") (ifInst ""  (formula "55")))
                                 (rule "eqSymm" (formula "49") (term "0"))
                                 (rule "elementOfUnion" (formula "48") (term "0,0,0"))
                                 (rule "elementOfSingleton" (formula "48") (term "0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "48"))
                                 (rule "elementOfInfiniteUnion" (formula "48") (term "0,0,0"))
                                 (builtin "One Step Simplification" (formula "48"))
                                 (rule "elementOfSingleton" (formula "48") (term "1,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "48"))
                                 (rule "ifthenelse_negated" (formula "48") (term "0"))
                                 (rule "allLeft" (formula "46") (inst "t=add(Z(1(#)), i_2_0)"))
                                 (rule "inEqSimp_commuteGeq" (formula "46") (term "1"))
                                 (rule "inEqSimp_homoInEq0" (formula "46") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "46") (term "1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "46") (term "1,0,1,0"))
                                 (rule "mul_literals" (formula "46") (term "0,1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "46") (term "0,1,0"))
                                 (rule "add_literals" (formula "46") (term "0,0,1,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "46") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "46") (term "0,1,0"))
                                 (rule "polySimp_elimOne" (formula "46") (term "0,1,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "46") (term "1,0") (ifseqformula "7"))
                                 (rule "qeq_literals" (formula "46") (term "0,1,0"))
                                 (builtin "One Step Simplification" (formula "46"))
                                 (rule "inEqSimp_contradInEq1" (formula "46") (term "1") (ifseqformula "6"))
                                 (rule "inEqSimp_homoInEq1" (formula "46") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "46") (term "1,0,0,1"))
                                 (rule "mul_literals" (formula "46") (term "0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "46") (term "0,0,1"))
                                 (rule "polySimp_addComm1" (formula "46") (term "0,0,0,1"))
                                 (rule "add_literals" (formula "46") (term "0,0,0,0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "46") (term "0,0,1"))
                                 (rule "add_literals" (formula "46") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "46") (term "1,0,0,1"))
                                 (rule "add_literals" (formula "46") (term "0,0,1"))
                                 (rule "leq_literals" (formula "46") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "46"))
                                 (rule "pullOutSelect" (formula "46") (term "0") (inst "selectSK=IntNode_data_3"))
                                 (rule "simplifySelectOfAnon" (formula "46"))
                                 (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "57")))
                                 (rule "eqSymm" (formula "47"))
                                 (rule "applyEqReverse" (formula "46") (term "1") (ifseqformula "47"))
                                 (rule "hideAuxiliaryEq" (formula "47"))
                                 (rule "elementOfUnion" (formula "46") (term "0,0,0"))
                                 (rule "elementOfSingleton" (formula "46") (term "0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "46"))
                                 (rule "elementOfInfiniteUnion" (formula "46") (term "0,0,0"))
                                 (builtin "One Step Simplification" (formula "46"))
                                 (rule "elementOfSingleton" (formula "46") (term "1,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "46"))
                                 (rule "eqSymm" (formula "46") (term "1,0,0,0,0"))
                                 (rule "seqGetAlphaCast" (formula "16") (term "0"))
                                 (rule "castDel" (formula "16") (term "0"))
                                 (builtin "One Step Simplification" (formula "16"))
                                 (rule "true_left" (formula "16"))
                                 (rule "allLeft" (formula "4") (inst "t=add(Z(neglit(1(#))),
    int::select(heap, self, IntLinkedList::$size))"))
                                 (rule "replace_known_left" (formula "4") (term "0,0,0") (ifseqformula "35"))
                                 (builtin "One Step Simplification" (formula "4"))
                                 (rule "inEqSimp_homoInEq0" (formula "4") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                                 (rule "mul_literals" (formula "4") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                 (rule "add_literals" (formula "4") (term "0,0,0"))
                                 (rule "add_zero_left" (formula "4") (term "0,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "4") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "4") (term "1,0,1"))
                                 (rule "polySimp_rightDist" (formula "4") (term "1,0,1"))
                                 (rule "mul_literals" (formula "4") (term "0,1,0,1"))
                                 (rule "polySimp_addAssoc" (formula "4") (term "0,1"))
                                 (rule "polySimp_addComm0" (formula "4") (term "0,0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,1"))
                                 (rule "add_literals" (formula "4") (term "1,1,0,1"))
                                 (rule "times_zero_1" (formula "4") (term "1,0,1"))
                                 (rule "add_zero_right" (formula "4") (term "0,1"))
                                 (rule "leq_literals" (formula "4") (term "1"))
                                 (builtin "One Step Simplification" (formula "4"))
                                 (rule "inEqSimp_invertInEq1" (formula "4"))
                                 (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                 (rule "times_zero_2" (formula "4") (term "1"))
                                 (rule "polySimp_elimOne" (formula "4") (term "0"))
                                 (rule "inEqSimp_contradInEq1" (formula "4") (ifseqformula "37"))
                                 (rule "qeq_literals" (formula "4") (term "0"))
                                 (builtin "One Step Simplification" (formula "4"))
                                 (rule "closeFalse" (formula "4"))
                              )
                              (branch "∃ int j; ( (IntNode)self.nodeseq[j] = self.first ∧ j ≥ 0 ∧ j ≤ -1 + self.size) FALSE"
                                 (rule "eqSymm" (formula "34"))
                                 (rule "applyEq" (formula "43") (term "0") (ifseqformula "34"))
                                 (builtin "One Step Simplification" (formula "43"))
                                 (rule "false_right" (formula "43"))
                                 (rule "nnf_ex2all" (formula "41"))
                                 (rule "nnf_notAnd" (formula "1") (term "0"))
                                 (rule "inEqSimp_notLeq" (formula "1") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0"))
                                 (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0"))
                                 (rule "add_literals" (formula "1") (term "0,0,0,1,0"))
                                 (rule "add_zero_left" (formula "1") (term "0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "1,1,0"))
                                 (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "1") (term "1,0,0"))
                                 (rule "times_zero_1" (formula "1") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1,0,0"))
                                 (rule "mul_literals" (formula "1") (term "1,1,0,0"))
                                 (rule "allLeft" (formula "13") (inst "t=add(Z(1(#)), i_2_0)"))
                                 (rule "inEqSimp_commuteGeq" (formula "13") (term "1"))
                                 (rule "inEqSimp_homoInEq0" (formula "13") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "13") (term "1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "13") (term "1,0,1,0"))
                                 (rule "mul_literals" (formula "13") (term "0,1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "13") (term "0,1,0"))
                                 (rule "add_literals" (formula "13") (term "0,0,1,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "13") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "0,1,0"))
                                 (rule "polySimp_elimOne" (formula "13") (term "0,1,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "13") (term "1") (ifseqformula "4"))
                                 (rule "inEqSimp_homoInEq1" (formula "13") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1"))
                                 (rule "mul_literals" (formula "13") (term "0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "13") (term "0,0,1"))
                                 (rule "polySimp_addComm1" (formula "13") (term "0,0,0,1"))
                                 (rule "add_literals" (formula "13") (term "0,0,0,0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0,1"))
                                 (rule "add_literals" (formula "13") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "13") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "13") (term "0,0,1"))
                                 (rule "leq_literals" (formula "13") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "13"))
                                 (rule "inEqSimp_contradInEq1" (formula "13") (term "1") (ifseqformula "5"))
                                 (rule "qeq_literals" (formula "13") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "13"))
                                 (rule "notLeft" (formula "13"))
                                 (rule "allLeft" (formula "23") (inst "t=add(Z(1(#)), i_2_0)"))
                                 (rule "polySimp_addAssoc" (formula "23") (term "1,1,0,0"))
                                 (rule "add_literals" (formula "23") (term "0,1,1,0,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "23") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "23") (term "1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "23") (term "1,0,1,0"))
                                 (rule "mul_literals" (formula "23") (term "0,1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "23") (term "0,1,0"))
                                 (rule "add_literals" (formula "23") (term "0,0,1,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "23") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "23") (term "1,0,1"))
                                 (rule "polySimp_rightDist" (formula "23") (term "1,0,1"))
                                 (rule "mul_literals" (formula "23") (term "0,1,0,1"))
                                 (rule "polySimp_addComm1" (formula "23") (term "0,1"))
                                 (rule "polySimp_addAssoc" (formula "23") (term "0,0,1"))
                                 (rule "add_literals" (formula "23") (term "0,0,0,1"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "23") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "23") (term "0,1,0"))
                                 (rule "polySimp_elimOne" (formula "23") (term "0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "23") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "23") (term "1,1"))
                                 (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1"))
                                 (rule "mul_literals" (formula "23") (term "0,1,1"))
                                 (rule "polySimp_elimOne" (formula "23") (term "1,1,1"))
                                 (rule "inEqSimp_contradInEq1" (formula "23") (term "1,0") (ifseqformula "5"))
                                 (rule "qeq_literals" (formula "23") (term "0,1,0"))
                                 (builtin "One Step Simplification" (formula "23"))
                                 (rule "allLeft" (formula "17") (inst "t=add(Z(1(#)), i_2_0)"))
                                 (rule "inEqSimp_commuteGeq" (formula "17") (term "1"))
                                 (rule "inEqSimp_homoInEq0" (formula "17") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "17") (term "1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "17") (term "1,0,1,0"))
                                 (rule "mul_literals" (formula "17") (term "0,1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "17") (term "0,1,0"))
                                 (rule "add_literals" (formula "17") (term "0,0,1,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "17") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "17") (term "0,1,0"))
                                 (rule "polySimp_elimOne" (formula "17") (term "0,1,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "17") (term "1") (ifseqformula "4"))
                                 (rule "inEqSimp_homoInEq1" (formula "17") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1"))
                                 (rule "mul_literals" (formula "17") (term "0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "17") (term "0,0,1"))
                                 (rule "polySimp_addComm1" (formula "17") (term "0,0,0,1"))
                                 (rule "add_literals" (formula "17") (term "0,0,0,0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,1"))
                                 (rule "add_literals" (formula "17") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "17") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "17") (term "0,0,1"))
                                 (rule "leq_literals" (formula "17") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "17"))
                                 (rule "inEqSimp_contradInEq1" (formula "17") (term "1") (ifseqformula "5"))
                                 (rule "qeq_literals" (formula "17") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "17"))
                                 (rule "allLeft" (formula "39") (inst "t=i_2_0"))
                                 (rule "replaceKnownSelect_taclet1011011_15" (formula "39") (term "0,0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet111011011_21" (formula "39") (term "0,0,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "39") (term "1"))
                                 (rule "polySimp_addComm1" (formula "39") (term "0,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "39") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "39") (term "1,1"))
                                 (rule "mul_literals" (formula "39") (term "0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1"))
                                 (rule "polySimp_elimOne" (formula "39") (term "1,1,1"))
                                 (rule "inEqSimp_contradInEq1" (formula "39") (term "1,0") (ifseqformula "5"))
                                 (rule "qeq_literals" (formula "39") (term "0,1,0"))
                                 (builtin "One Step Simplification" (formula "39"))
                                 (rule "inEqSimp_contradInEq1" (formula "39") (term "1") (ifseqformula "4"))
                                 (rule "inEqSimp_homoInEq1" (formula "39") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "39") (term "1,0,0,1"))
                                 (rule "mul_literals" (formula "39") (term "0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "39") (term "0,0,1"))
                                 (rule "polySimp_addComm1" (formula "39") (term "0,0,0,1"))
                                 (rule "add_literals" (formula "39") (term "0,0,0,0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,0,1"))
                                 (rule "add_literals" (formula "39") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "39") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "39") (term "0,0,1"))
                                 (rule "leq_literals" (formula "39") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "39"))
                                 (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "39"))
                                 (builtin "One Step Simplification" (formula "51"))
                                 (rule "allRight" (formula "51") (inst "sk=j_1_0"))
                                 (rule "orRight" (formula "51"))
                                 (rule "orRight" (formula "52"))
                                 (rule "orRight" (formula "51"))
                                 (rule "notRight" (formula "53"))
                                 (rule "inEqSimp_leqRight" (formula "52"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0"))
                                 (rule "inEqSimp_geqRight" (formula "53"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "0"))
                                 (rule "allLeft" (formula "24") (inst "t=i_2_0"))
                                 (rule "inEqSimp_commuteGeq" (formula "24") (term "1,0,0,0,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "24") (term "1,0,0,0,0") (ifseqformula "7"))
                                 (rule "inEqSimp_homoInEq1" (formula "24") (term "0,1,0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,1,0,0,0,0"))
                                 (rule "add_literals" (formula "24") (term "1,1,0,0,1,0,0,0,0"))
                                 (rule "times_zero_1" (formula "24") (term "1,0,0,1,0,0,0,0"))
                                 (rule "add_zero_right" (formula "24") (term "0,0,1,0,0,0,0"))
                                 (rule "leq_literals" (formula "24") (term "0,1,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "24"))
                                 (rule "inEqSimp_contradInEq1" (formula "24") (term "1,0,0,0,0") (ifseqformula "8"))
                                 (rule "qeq_literals" (formula "24") (term "0,1,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "24"))
                                 (rule "allLeft" (formula "25") (inst "t=add(Z(1(#)), i_2_0)"))
                                 (rule "inEqSimp_commuteGeq" (formula "25") (term "1,0,0,0,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "25") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "25") (term "1,0,1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "25") (term "1,0,1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "25") (term "0,1,0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "25") (term "0,1,0,0,0,0,0"))
                                 (rule "add_literals" (formula "25") (term "0,0,1,0,0,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "25") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "25") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "25") (term "0,1,0,0,0,0,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "25") (term "1,0,0,0,0") (ifseqformula "7"))
                                 (rule "inEqSimp_homoInEq1" (formula "25") (term "0,1,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,0,0,0"))
                                 (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "25") (term "0,0,0,1,0,0,0,0"))
                                 (rule "add_literals" (formula "25") (term "0,0,0,0,1,0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,1,0,0,0,0"))
                                 (rule "add_literals" (formula "25") (term "1,1,0,0,1,0,0,0,0"))
                                 (rule "times_zero_1" (formula "25") (term "1,0,0,1,0,0,0,0"))
                                 (rule "add_zero_right" (formula "25") (term "0,0,1,0,0,0,0"))
                                 (rule "leq_literals" (formula "25") (term "0,1,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "25"))
                                 (rule "inEqSimp_contradInEq1" (formula "25") (term "1,0,0,0,0") (ifseqformula "8"))
                                 (rule "qeq_literals" (formula "25") (term "0,1,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "25"))
                                 (rule "allLeft" (formula "45") (inst "t=add(Z(1(#)), i_2_0)"))
                                 (rule "polySimp_addAssoc" (formula "45") (term "1,1,0,0"))
                                 (rule "add_literals" (formula "45") (term "0,1,1,0,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "45") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "45") (term "1,0,1"))
                                 (rule "polySimp_rightDist" (formula "45") (term "1,0,1"))
                                 (rule "mul_literals" (formula "45") (term "0,1,0,1"))
                                 (rule "polySimp_addComm1" (formula "45") (term "0,1"))
                                 (rule "polySimp_addAssoc" (formula "45") (term "0,0,1"))
                                 (rule "add_literals" (formula "45") (term "0,0,0,1"))
                                 (rule "inEqSimp_homoInEq0" (formula "45") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "45") (term "1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "45") (term "1,0,1,0"))
                                 (rule "mul_literals" (formula "45") (term "0,1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "45") (term "0,1,0"))
                                 (rule "add_literals" (formula "45") (term "0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "45") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "45") (term "1,1"))
                                 (rule "mul_literals" (formula "45") (term "0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "45") (term "1,1,1"))
                                 (rule "polySimp_elimOne" (formula "45") (term "1,1,1"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "45") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "45") (term "0,1,0"))
                                 (rule "polySimp_elimOne" (formula "45") (term "0,1,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "45") (term "1,0") (ifseqformula "8"))
                                 (rule "qeq_literals" (formula "45") (term "0,1,0"))
                                 (builtin "One Step Simplification" (formula "45"))
                                 (rule "pullOutSelect" (formula "45") (term "0,0") (inst "selectSK=IntNode_next_3"))
                                 (rule "simplifySelectOfAnon" (formula "45"))
                                 (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "52")))
                                 (rule "eqSymm" (formula "46") (term "0"))
                                 (rule "elementOfUnion" (formula "45") (term "0,0,0"))
                                 (rule "elementOfInfiniteUnion" (formula "45") (term "1,0,0,0"))
                                 (builtin "One Step Simplification" (formula "45"))
                                 (rule "elementOfSingleton" (formula "45") (term "1,0,1,0,0,0"))
                                 (builtin "One Step Simplification" (formula "45"))
                                 (rule "elementOfSingleton" (formula "45") (term "0,0,0"))
                                 (builtin "One Step Simplification" (formula "45"))
                                 (rule "ifthenelse_negated" (formula "45") (term "0"))
                                 (rule "allLeft" (formula "30") (inst "t=i_2_0"))
                                 (rule "inEqSimp_homoInEq1" (formula "30") (term "1"))
                                 (rule "polySimp_addComm1" (formula "30") (term "0,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "30") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "30") (term "1,1"))
                                 (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1"))
                                 (rule "mul_literals" (formula "30") (term "0,1,1"))
                                 (rule "polySimp_elimOne" (formula "30") (term "1,1,1"))
                                 (rule "inEqSimp_contradInEq1" (formula "30") (term "1,0") (ifseqformula "8"))
                                 (rule "qeq_literals" (formula "30") (term "0,1,0"))
                                 (builtin "One Step Simplification" (formula "30"))
                                 (rule "inEqSimp_contradInEq1" (formula "30") (term "1") (ifseqformula "7"))
                                 (rule "inEqSimp_homoInEq1" (formula "30") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1"))
                                 (rule "mul_literals" (formula "30") (term "0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "30") (term "0,0,1"))
                                 (rule "polySimp_addComm1" (formula "30") (term "0,0,0,1"))
                                 (rule "add_literals" (formula "30") (term "0,0,0,0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,1"))
                                 (rule "add_literals" (formula "30") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "30") (term "1,0,0,1"))
                                 (rule "add_literals" (formula "30") (term "0,0,1"))
                                 (rule "leq_literals" (formula "30") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "30"))
                                 (rule "allLeft" (formula "44") (inst "t=add(Z(1(#)), i_2_0)"))
                                 (rule "inEqSimp_commuteGeq" (formula "44") (term "1"))
                                 (rule "inEqSimp_homoInEq0" (formula "44") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "44") (term "1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "44") (term "1,0,1,0"))
                                 (rule "mul_literals" (formula "44") (term "0,1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "44") (term "0,1,0"))
                                 (rule "add_literals" (formula "44") (term "0,0,1,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "44") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "44") (term "0,1,0"))
                                 (rule "polySimp_elimOne" (formula "44") (term "0,1,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "44") (term "1") (ifseqformula "7"))
                                 (rule "inEqSimp_homoInEq1" (formula "44") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "44") (term "1,0,0,1"))
                                 (rule "mul_literals" (formula "44") (term "0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "44") (term "0,0,1"))
                                 (rule "polySimp_addComm1" (formula "44") (term "0,0,0,1"))
                                 (rule "add_literals" (formula "44") (term "0,0,0,0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "44") (term "0,0,1"))
                                 (rule "add_literals" (formula "44") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "44") (term "1,0,0,1"))
                                 (rule "add_literals" (formula "44") (term "0,0,1"))
                                 (rule "leq_literals" (formula "44") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "44"))
                                 (rule "inEqSimp_contradInEq1" (formula "44") (term "1") (ifseqformula "8"))
                                 (rule "qeq_literals" (formula "44") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "44"))
                                 (rule "pullOutSelect" (formula "44") (term "0") (inst "selectSK=IntNode_data_3"))
                                 (rule "simplifySelectOfAnon" (formula "44"))
                                 (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "55")))
                                 (rule "eqSymm" (formula "45"))
                                 (rule "applyEqReverse" (formula "44") (term "1") (ifseqformula "45"))
                                 (rule "hideAuxiliaryEq" (formula "45"))
                                 (rule "elementOfUnion" (formula "44") (term "0,0,0"))
                                 (rule "elementOfSingleton" (formula "44") (term "0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "44"))
                                 (rule "elementOfInfiniteUnion" (formula "44") (term "0,0,0"))
                                 (builtin "One Step Simplification" (formula "44"))
                                 (rule "elementOfSingleton" (formula "44") (term "1,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "44"))
                                 (rule "eqSymm" (formula "44") (term "1,0,0,0,0"))
                                 (rule "seqGetAlphaCast" (formula "17") (term "0"))
                                 (rule "castDel" (formula "17") (term "0"))
                                 (builtin "One Step Simplification" (formula "17"))
                                 (rule "true_left" (formula "17"))
                                 (rule "allLeft" (formula "5") (inst "t=add(Z(neglit(1(#))),
    int::select(heap, self, IntLinkedList::$size))"))
                                 (rule "replace_known_left" (formula "5") (term "0,0,0") (ifseqformula "36"))
                                 (builtin "One Step Simplification" (formula "5"))
                                 (rule "inEqSimp_homoInEq1" (formula "5") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "5") (term "1,0,1"))
                                 (rule "polySimp_rightDist" (formula "5") (term "1,0,1"))
                                 (rule "mul_literals" (formula "5") (term "0,1,0,1"))
                                 (rule "polySimp_addAssoc" (formula "5") (term "0,1"))
                                 (rule "polySimp_addComm0" (formula "5") (term "0,0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,1"))
                                 (rule "add_literals" (formula "5") (term "1,1,0,1"))
                                 (rule "times_zero_1" (formula "5") (term "1,0,1"))
                                 (rule "add_zero_right" (formula "5") (term "0,1"))
                                 (rule "leq_literals" (formula "5") (term "1"))
                                 (builtin "One Step Simplification" (formula "5"))
                                 (rule "inEqSimp_homoInEq0" (formula "5"))
                                 (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                                 (rule "mul_literals" (formula "5") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                 (rule "add_literals" (formula "5") (term "0,0"))
                                 (rule "add_zero_left" (formula "5") (term "0"))
                                 (rule "inEqSimp_invertInEq1" (formula "5"))
                                 (rule "times_zero_2" (formula "5") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                 (rule "polySimp_elimOne" (formula "5") (term "0"))
                                 (rule "inEqSimp_contradInEq1" (formula "5") (ifseqformula "38"))
                                 (rule "qeq_literals" (formula "5") (term "0"))
                                 (builtin "One Step Simplification" (formula "5"))
                                 (rule "closeFalse" (formula "5"))
                              )
                           )
                        )
                     )
                  )
               )
               (branch
                  (rule "allRight" (formula "31") (inst "sk=f_0"))
                  (rule "allRight" (formula "31") (inst "sk=o_0"))
                  (rule "orRight" (formula "31"))
                  (rule "orRight" (formula "31"))
                  (rule "orRight" (formula "31"))
                  (rule "eqSymm" (formula "32") (term "0,1,0"))
                  (rule "pullOutSelect" (formula "34") (term "0") (inst "selectSK=f_0_0"))
                  (rule "simplifySelectOfAnon" (formula "1"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "34")))
                  (rule "eqSymm" (formula "35"))
                  (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                  (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                  (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "32"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "elementOfInfiniteUnion" (formula "1") (term "0,0,0"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "elementOfSingleton" (formula "1") (term "1,0,0,0,0"))
                  (rule "eqSymm" (formula "1") (term "0,1,0,0,0,0"))
                  (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "33"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "35")))
                  (rule "closeFalse" (formula "1"))
               )
            )
         )
      )
      (branch "CUT: anonOut_current = null FALSE"
         (builtin "One Step Simplification" (formula "30"))
         (rule "ifthenelse_split" (formula "24") (term "0"))
         (branch " ¬(IntNode)self.nodeseq[-1 + self.size] = null ∧ ¬ (IntNode)self.nodeseq[-1 + self.size].<created> = TRUE TRUE"
            (rule "andLeft" (formula "24"))
            (rule "notLeft" (formula "25"))
            (rule "notLeft" (formula "24"))
            (rule "applyEqReverse" (formula "25") (term "0,0") (ifseqformula "24"))
            (rule "hideAuxiliaryEq" (formula "24"))
            (rule "ifthenelse_split" (formula "14") (term "0"))
            (branch "self.size = 0 TRUE"
               (rule "eqSymm" (formula "15"))
               (rule "replace_known_left" (formula "17") (term "0,0") (ifseqformula "14"))
               (builtin "One Step Simplification" (formula "17"))
               (rule "eqSymm" (formula "17"))
               (rule "replace_known_left" (formula "16") (term "0") (ifseqformula "17"))
               (builtin "One Step Simplification" (formula "16"))
               (rule "true_left" (formula "16"))
               (rule "replace_known_left" (formula "13") (term "0") (ifseqformula "15"))
               (builtin "One Step Simplification" (formula "13"))
               (rule "true_left" (formula "13"))
               (rule "applyEq" (formula "33") (term "1,1,1,0,0,1,0,0,0,0,1") (ifseqformula "13"))
               (rule "add_zero_right" (formula "33") (term "1,1,0,0,1,0,0,0,0,1"))
               (rule "applyEq" (formula "30") (term "1,1,1,0") (ifseqformula "13"))
               (rule "add_zero_right" (formula "30") (term "1,1,0"))
               (rule "applyEq" (formula "26") (term "1,1,0,0") (ifseqformula "13"))
               (rule "applyEq" (formula "29") (term "1,1,0") (ifseqformula "13"))
               (rule "add_zero_right" (formula "29") (term "1,0"))
               (rule "applyEq" (formula "8") (term "1,1,0") (ifseqformula "13"))
               (rule "applyEq" (formula "5") (term "1,1,0") (ifseqformula "13"))
               (rule "applyEq" (formula "6") (term "1,1,0") (ifseqformula "13"))
               (rule "applyEq" (formula "17") (term "0") (ifseqformula "13"))
               (rule "qeq_literals" (formula "17"))
               (rule "true_left" (formula "17"))
               (rule "applyEq" (formula "10") (term "1,1,0,0,0,0,0") (ifseqformula "13"))
               (rule "applyEq" (formula "32") (term "1,1,1,0,0,1,1,0,0,1,0,0,1,0,1,0") (ifseqformula "13"))
               (rule "add_zero_right" (formula "32") (term "1,1,0,0,1,1,0,0,1,0,0,1,0,1,0"))
               (rule "applyEq" (formula "21") (term "1,1,0") (ifseqformula "13"))
               (rule "applyEq" (formula "22") (term "0,1") (ifseqformula "13"))
               (rule "leq_literals" (formula "22") (term "1"))
               (builtin "One Step Simplification" (formula "22"))
               (rule "true_left" (formula "22"))
               (rule "applyEq" (formula "31") (term "1,1,0,0,0,0") (ifseqformula "13"))
               (rule "applyEq" (formula "22") (term "1,1,1,0") (ifseqformula "13"))
               (rule "add_literals" (formula "22") (term "1,1,0"))
               (rule "applyEq" (formula "10") (term "1,1,0,0,0") (ifseqformula "13"))
               (rule "applyEq" (formula "19") (term "1,1,0") (ifseqformula "13"))
               (rule "applyEq" (formula "31") (term "1,1,0,0,1,0") (ifseqformula "13"))
               (rule "applyEq" (formula "31") (term "1,1,0,0,1,0,1,0,1,0") (ifseqformula "13"))
               (rule "applyEq" (formula "7") (term "1,1,1,0,0,1,0") (ifseqformula "13"))
               (rule "add_literals" (formula "7") (term "1,1,0,0,1,0"))
               (rule "applyEq" (formula "21") (term "1,1,1,0,0,1,1,0,0,0,0,0") (ifseqformula "13"))
               (rule "add_zero_right" (formula "21") (term "1,1,0,0,1,1,0,0,0,0,0"))
               (rule "applyEq" (formula "22") (term "1,1,1,0,0,1,1,0,0,0,0,0") (ifseqformula "13"))
               (rule "add_zero_right" (formula "22") (term "1,1,0,0,1,1,0,0,0,0,0"))
               (rule "applyEq" (formula "20") (term "1,1,0") (ifseqformula "13"))
               (rule "applyEq" (formula "31") (term "1,1,1,0,0,1,1,0,0,1,1,0,1,0") (ifseqformula "13"))
               (rule "add_zero_right" (formula "31") (term "1,1,0,0,1,1,0,0,1,1,0,1,0"))
               (rule "applyEq" (formula "9") (term "1,1,0") (ifseqformula "13"))
               (rule "applyEq" (formula "11") (term "0,1") (ifseqformula "13"))
               (rule "leq_literals" (formula "11") (term "1"))
               (builtin "One Step Simplification" (formula "11"))
               (rule "true_left" (formula "11"))
               (rule "applyEq" (formula "11") (term "1,1,1,0") (ifseqformula "12"))
               (rule "add_zero_right" (formula "11") (term "1,1,0"))
               (rule "applyEq" (formula "30") (term "1,1,1,0,0,1,1,0,0,1,0,0,1") (ifseqformula "12"))
               (rule "add_zero_right" (formula "30") (term "1,1,0,0,1,1,0,0,1,0,0,1"))
               (rule "applyEq" (formula "16") (term "1") (ifseqformula "12"))
               (rule "applyEq" (formula "22") (term "1") (ifseqformula "12"))
               (rule "applyEq" (formula "15") (term "1") (ifseqformula "12"))
               (rule "applyEq" (formula "30") (term "1,1,0,1,1,1,0,1,0") (ifseqformula "12"))
               (rule "add_zero_right" (formula "30") (term "1,0,1,1,1,0,1,0"))
               (rule "inEqSimp_or_tautInEq0" (formula "23") (term "0,0"))
               (rule "add_zero_right" (formula "23") (term "1,1,0,0"))
               (rule "qeq_literals" (formula "23") (term "1,0,0"))
               (builtin "One Step Simplification" (formula "23"))
               (rule "true_left" (formula "23"))
               (rule "inEqSimp_or_tautInEq1" (formula "8") (term "0"))
               (rule "add_zero_right" (formula "8") (term "1,1,0"))
               (rule "qeq_literals" (formula "8") (term "1,0"))
               (builtin "One Step Simplification" (formula "8"))
               (rule "true_left" (formula "8"))
               (rule "inEqSimp_or_tautInEq1" (formula "5") (term "0"))
               (rule "add_zero_right" (formula "5") (term "1,1,0"))
               (rule "qeq_literals" (formula "5") (term "1,0"))
               (builtin "One Step Simplification" (formula "5"))
               (rule "true_left" (formula "5"))
               (rule "inEqSimp_or_tautInEq1" (formula "5") (term "0"))
               (rule "add_literals" (formula "5") (term "1,1,0"))
               (rule "qeq_literals" (formula "5") (term "1,0"))
               (builtin "One Step Simplification" (formula "5"))
               (rule "true_left" (formula "5"))
               (rule "inEqSimp_or_tautInEq1" (formula "7") (term "0,0,0,0,0"))
               (rule "add_zero_right" (formula "7") (term "1,1,0,0,0,0,0"))
               (rule "qeq_literals" (formula "7") (term "1,0,0,0,0,0"))
               (builtin "One Step Simplification" (formula "7"))
               (rule "true_left" (formula "7"))
               (rule "inEqSimp_or_tautInEq0" (formula "25") (term "0,0,0,0"))
               (rule "add_zero_right" (formula "25") (term "1,1,0,0,0,0"))
               (rule "qeq_literals" (formula "25") (term "1,0,0,0,0"))
               (builtin "One Step Simplification" (formula "25"))
               (rule "inEqSimp_or_tautInEq1" (formula "14") (term "0"))
               (rule "add_zero_right" (formula "14") (term "1,1,0"))
               (rule "qeq_literals" (formula "14") (term "1,0"))
               (builtin "One Step Simplification" (formula "14"))
               (rule "true_left" (formula "14"))
               (rule "inEqSimp_or_tautInEq1" (formula "15") (term "0"))
               (rule "add_zero_right" (formula "15") (term "1,1,0"))
               (rule "qeq_literals" (formula "15") (term "1,0"))
               (builtin "One Step Simplification" (formula "15"))
               (rule "true_left" (formula "15"))
               (rule "inEqSimp_or_tautInEq1" (formula "15") (term "0"))
               (rule "add_literals" (formula "15") (term "1,1,0"))
               (rule "qeq_literals" (formula "15") (term "1,0"))
               (builtin "One Step Simplification" (formula "15"))
               (rule "true_left" (formula "15"))
               (rule "inEqSimp_or_tautInEq1" (formula "14") (term "0"))
               (rule "add_zero_right" (formula "14") (term "1,1,0"))
               (rule "qeq_literals" (formula "14") (term "1,0"))
               (builtin "One Step Simplification" (formula "14"))
               (rule "true_left" (formula "14"))
               (rule "inEqSimp_or_tautInEq1" (formula "6") (term "0"))
               (rule "add_zero_right" (formula "6") (term "1,1,0"))
               (rule "qeq_literals" (formula "6") (term "1,0"))
               (builtin "One Step Simplification" (formula "6"))
               (rule "true_left" (formula "6"))
               (rule "inEqSimp_or_tautInEq1" (formula "6") (term "0"))
               (rule "add_literals" (formula "6") (term "1,1,0"))
               (rule "qeq_literals" (formula "6") (term "1,0"))
               (builtin "One Step Simplification" (formula "6"))
               (rule "true_left" (formula "6"))
               (rule "inEqSimp_or_tautInEq0" (formula "19") (term "0,0,0"))
               (rule "add_zero_right" (formula "19") (term "1,1,0,0,0"))
               (rule "qeq_literals" (formula "19") (term "1,0,0,0"))
               (builtin "One Step Simplification" (formula "19"))
               (rule "allRight" (formula "19") (inst "sk=f_0"))
               (rule "allRight" (formula "19") (inst "sk=o_0"))
               (rule "orRight" (formula "19"))
               (rule "orRight" (formula "19"))
               (rule "orRight" (formula "19"))
               (rule "eqSymm" (formula "20") (term "0,1,0"))
               (rule "pullOutSelect" (formula "22") (term "0") (inst "selectSK=f_0_0"))
               (rule "simplifySelectOfAnon" (formula "1"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "22")))
               (rule "eqSymm" (formula "23"))
               (rule "elementOfUnion" (formula "1") (term "0,0,0"))
               (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
               (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "20"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "elementOfInfiniteUnion" (formula "1") (term "0,0,0"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "elementOfSingleton" (formula "1") (term "1,0,0,0,0"))
               (rule "eqSymm" (formula "1") (term "0,1,0,0,0,0"))
               (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "21"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "23")))
               (rule "closeFalse" (formula "1"))
            )
            (branch "self.size = 0 FALSE"
               (rule "replace_known_right" (formula "16") (term "0,0") (ifseqformula "30"))
               (builtin "One Step Simplification" (formula "16"))
               (rule "applyEq" (formula "11") (term "1,0,0") (ifseqformula "16"))
               (rule "applyEq" (formula "24") (term "1,0,0") (ifseqformula "16"))
               (rule "applyEq" (formula "32") (term "1,0") (ifseqformula "16"))
               (rule "replace_known_right" (formula "15") (term "1") (ifseqformula "32"))
               (builtin "One Step Simplification" (formula "15"))
               (rule "applyEq" (formula "31") (term "0") (ifseqformula "16"))
               (rule "close" (formula "31") (ifseqformula "15"))
            )
         )
         (branch " ¬(IntNode)self.nodeseq[-1 + self.size] = null ∧ ¬ (IntNode)self.nodeseq[-1 + self.size].<created> = TRUE FALSE"
            (rule "applyEqReverse" (formula "25") (term "0,0") (ifseqformula "24"))
            (rule "hideAuxiliaryEq" (formula "24"))
            (rule "ifthenelse_split" (formula "14") (term "0"))
            (branch "self.size = 0 TRUE"
               (rule "eqSymm" (formula "15"))
               (rule "replace_known_left" (formula "17") (term "0,0") (ifseqformula "14"))
               (builtin "One Step Simplification" (formula "17"))
               (rule "eqSymm" (formula "17"))
               (rule "replace_known_left" (formula "16") (term "0") (ifseqformula "17"))
               (builtin "One Step Simplification" (formula "16"))
               (rule "true_left" (formula "16"))
               (rule "replace_known_left" (formula "13") (term "0") (ifseqformula "15"))
               (builtin "One Step Simplification" (formula "13"))
               (rule "true_left" (formula "13"))
               (rule "applyEq" (formula "6") (term "1,1,0") (ifseqformula "13"))
               (rule "applyEq" (formula "28") (term "1,1,1,0,0,1") (ifseqformula "13"))
               (rule "add_zero_right" (formula "28") (term "1,1,0,0,1"))
               (rule "applyEq" (formula "5") (term "1,1,0") (ifseqformula "13"))
               (rule "applyEq" (formula "22") (term "1,1,0") (ifseqformula "13"))
               (rule "applyEq" (formula "10") (term "1,1,0,0,0") (ifseqformula "13"))
               (rule "applyEq" (formula "21") (term "1,1,0") (ifseqformula "13"))
               (rule "applyEq" (formula "11") (term "1,1,1,0,0") (ifseqformula "13"))
               (rule "add_literals" (formula "11") (term "1,1,0,0"))
               (rule "applyEq" (formula "8") (term "1,1,0") (ifseqformula "13"))
               (rule "applyEq" (formula "17") (term "0") (ifseqformula "13"))
               (rule "qeq_literals" (formula "17"))
               (rule "true_left" (formula "17"))
               (rule "applyEq" (formula "30") (term "1,1,1,0,0,1,0,0,0,0,1") (ifseqformula "13"))
               (rule "add_zero_right" (formula "30") (term "1,1,0,0,1,0,0,0,0,1"))
               (rule "applyEq" (formula "9") (term "1,1,0") (ifseqformula "13"))
               (rule "applyEq" (formula "27") (term "1,1,0,0,0") (ifseqformula "13"))
               (rule "add_zero_right" (formula "27") (term "1,0,0,0"))
               (rule "applyEq" (formula "19") (term "1,1,0") (ifseqformula "13"))
               (rule "applyEq" (formula "22") (term "1,1,1,0,0,1,1,0,0,0,0,0") (ifseqformula "13"))
               (rule "add_zero_right" (formula "22") (term "1,1,0,0,1,1,0,0,0,0,0"))
               (rule "applyEq" (formula "11") (term "0,1") (ifseqformula "13"))
               (rule "leq_literals" (formula "11") (term "1"))
               (builtin "One Step Simplification" (formula "11"))
               (rule "true_left" (formula "11"))
               (rule "applyEq" (formula "23") (term "1,1,0,0") (ifseqformula "12"))
               (rule "applyEq" (formula "7") (term "1,1,1,0,0,1,0") (ifseqformula "12"))
               (rule "add_zero_right" (formula "7") (term "1,1,0,0,1,0"))
               (rule "applyEq" (formula "29") (term "1,1,1,0,0,1,1,0,0,1,0,0,1,0,1,0") (ifseqformula "12"))
               (rule "add_literals" (formula "29") (term "1,1,0,0,1,1,0,0,1,0,0,1,0,1,0"))
               (rule "applyEq" (formula "29") (term "1,1,0,0,1,0") (ifseqformula "12"))
               (rule "applyEq" (formula "20") (term "1,1,1,0,0,1,1,0,0,0,0,0") (ifseqformula "12"))
               (rule "add_zero_right" (formula "20") (term "1,1,0,0,1,1,0,0,0,0,0"))
               (rule "applyEq" (formula "29") (term "1,1,0,0,0,0") (ifseqformula "12"))
               (rule "applyEq" (formula "29") (term "1,1,1,0,0,1,1,0,0,1,0,0,1") (ifseqformula "12"))
               (rule "add_zero_right" (formula "29") (term "1,1,0,0,1,1,0,0,1,0,0,1"))
               (rule "applyEq" (formula "10") (term "1,1,0,0,0,0,0") (ifseqformula "12"))
               (rule "applyEq" (formula "21") (term "1,1,1,0") (ifseqformula "12"))
               (rule "add_zero_right" (formula "21") (term "1,1,0"))
               (rule "applyEq" (formula "29") (term "1,1,0,0,1,0,1,0,1,0") (ifseqformula "12"))
               (rule "applyEq" (formula "11") (term "1,1,1,0") (ifseqformula "12"))
               (rule "add_zero_right" (formula "11") (term "1,1,0"))
               (rule "applyEq" (formula "29") (term "1,1,1,0,0,1,1,0,0,1,1,0,1,0") (ifseqformula "12"))
               (rule "add_zero_right" (formula "29") (term "1,1,0,0,1,1,0,0,1,1,0,1,0"))
               (rule "applyEq" (formula "16") (term "1") (ifseqformula "12"))
               (rule "applyEq" (formula "22") (term "1") (ifseqformula "12"))
               (rule "applyEq" (formula "15") (term "1") (ifseqformula "12"))
               (rule "applyEq" (formula "29") (term "1,1,0,1,1,1,0,1,0") (ifseqformula "12"))
               (rule "add_zero_right" (formula "29") (term "1,0,1,1,1,0,1,0"))
               (rule "inEqSimp_or_tautInEq1" (formula "6") (term "0"))
               (rule "add_zero_right" (formula "6") (term "1,1,0"))
               (rule "qeq_literals" (formula "6") (term "1,0"))
               (builtin "One Step Simplification" (formula "6"))
               (rule "true_left" (formula "6"))
               (rule "inEqSimp_or_tautInEq1" (formula "5") (term "0"))
               (rule "add_literals" (formula "5") (term "1,1,0"))
               (rule "qeq_literals" (formula "5") (term "1,0"))
               (builtin "One Step Simplification" (formula "5"))
               (rule "true_left" (formula "5"))
               (rule "inEqSimp_or_tautInEq1" (formula "17") (term "0"))
               (rule "add_zero_right" (formula "17") (term "1,1,0"))
               (rule "qeq_literals" (formula "17") (term "1,0"))
               (builtin "One Step Simplification" (formula "17"))
               (rule "true_left" (formula "17"))
               (rule "inEqSimp_or_tautInEq1" (formula "6") (term "0"))
               (rule "add_zero_right" (formula "6") (term "1,1,0"))
               (rule "qeq_literals" (formula "6") (term "1,0"))
               (builtin "One Step Simplification" (formula "6"))
               (rule "true_left" (formula "6"))
               (rule "inEqSimp_or_tautInEq1" (formula "6") (term "0"))
               (rule "add_zero_right" (formula "6") (term "1,1,0"))
               (rule "qeq_literals" (formula "6") (term "1,0"))
               (builtin "One Step Simplification" (formula "6"))
               (rule "true_left" (formula "6"))
               (rule "inEqSimp_or_tautInEq1" (formula "14") (term "0"))
               (rule "add_literals" (formula "14") (term "1,1,0"))
               (rule "qeq_literals" (formula "14") (term "1,0"))
               (builtin "One Step Simplification" (formula "14"))
               (rule "true_left" (formula "14"))
               (rule "inEqSimp_or_tautInEq0" (formula "17") (term "0,0"))
               (rule "add_zero_right" (formula "17") (term "1,1,0,0"))
               (rule "qeq_literals" (formula "17") (term "1,0,0"))
               (builtin "One Step Simplification" (formula "17"))
               (rule "true_left" (formula "17"))
               (rule "inEqSimp_or_tautInEq0" (formula "22") (term "0,0,1,0"))
               (rule "add_zero_right" (formula "22") (term "1,1,0,0,1,0"))
               (rule "qeq_literals" (formula "22") (term "1,0,0,1,0"))
               (builtin "One Step Simplification" (formula "22"))
               (rule "inEqSimp_or_tautInEq1" (formula "14") (term "0"))
               (rule "add_zero_right" (formula "14") (term "1,1,0"))
               (rule "qeq_literals" (formula "14") (term "1,0"))
               (builtin "One Step Simplification" (formula "14"))
               (rule "true_left" (formula "14"))
               (rule "inEqSimp_or_tautInEq1" (formula "6") (term "0,0,0"))
               (rule "add_zero_right" (formula "6") (term "1,1,0,0,0"))
               (rule "qeq_literals" (formula "6") (term "1,0,0,0"))
               (builtin "One Step Simplification" (formula "6"))
               (rule "true_left" (formula "6"))
               (rule "inEqSimp_or_tautInEq1" (formula "13") (term "0"))
               (rule "add_literals" (formula "13") (term "1,1,0"))
               (rule "qeq_literals" (formula "13") (term "1,0"))
               (builtin "One Step Simplification" (formula "13"))
               (rule "true_left" (formula "13"))
               (rule "inEqSimp_or_tautInEq1" (formula "6") (term "0"))
               (rule "add_literals" (formula "6") (term "1,1,0"))
               (rule "qeq_literals" (formula "6") (term "1,0"))
               (builtin "One Step Simplification" (formula "6"))
               (rule "true_left" (formula "6"))
               (rule "inEqSimp_or_tautInEq0" (formula "18") (term "0,0,0"))
               (rule "add_zero_right" (formula "18") (term "1,1,0,0,0"))
               (rule "qeq_literals" (formula "18") (term "1,0,0,0"))
               (builtin "One Step Simplification" (formula "18"))
               (rule "allRight" (formula "18") (inst "sk=f_0"))
               (rule "allRight" (formula "18") (inst "sk=o_0"))
               (rule "orRight" (formula "18"))
               (rule "orRight" (formula "18"))
               (rule "orRight" (formula "18"))
               (rule "eqSymm" (formula "19") (term "0,1,0"))
               (rule "pullOutSelect" (formula "21") (term "0") (inst "selectSK=f_0_0"))
               (rule "simplifySelectOfAnon" (formula "1"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "21")))
               (rule "eqSymm" (formula "22"))
               (rule "elementOfUnion" (formula "1") (term "0,0,0"))
               (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
               (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "19"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "elementOfInfiniteUnion" (formula "1") (term "0,0,0"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "elementOfSingleton" (formula "1") (term "1,0,0,0,0"))
               (rule "eqSymm" (formula "1") (term "0,1,0,0,0,0"))
               (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "20"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "22")))
               (rule "closeFalse" (formula "1"))
            )
            (branch "self.size = 0 FALSE"
               (rule "replace_known_right" (formula "16") (term "0,0") (ifseqformula "29"))
               (builtin "One Step Simplification" (formula "16"))
               (rule "applyEq" (formula "11") (term "1,0,0") (ifseqformula "16"))
               (rule "applyEq" (formula "30") (term "0,0,0") (ifseqformula "16"))
               (rule "applyEq" (formula "30") (term "1,0,0,1") (ifseqformula "16"))
               (rule "inEqSimp_strengthen1" (formula "18") (ifseqformula "29"))
               (rule "add_zero_right" (formula "18") (term "1"))
               (rule "inEqSimp_contradEq7" (formula "29") (ifseqformula "18"))
               (rule "times_zero_1" (formula "29") (term "1,0,0"))
               (rule "add_zero_right" (formula "29") (term "0,0"))
               (rule "leq_literals" (formula "29") (term "0"))
               (builtin "One Step Simplification" (formula "29"))
               (rule "false_right" (formula "29"))
               (rule "inEqSimp_contradInEq1" (formula "11") (term "1") (ifseqformula "18"))
               (rule "qeq_literals" (formula "11") (term "0,1"))
               (builtin "One Step Simplification" (formula "11"))
               (rule "andRight" (formula "32"))
               (branch
                  (rule "andRight" (formula "32"))
                  (branch
                     (rule "allRight" (formula "32") (inst "sk=i_1_0"))
                     (rule "orRight" (formula "32"))
                     (rule "orRight" (formula "32"))
                     (rule "inEqSimp_leqRight" (formula "32"))
                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0"))
                     (rule "add_zero_left" (formula "1") (term "0"))
                     (rule "inEqSimp_geqRight" (formula "33"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                     (rule "polySimp_elimOne" (formula "1") (term "0"))
                     (rule "allLeft" (formula "25") (inst "t=add(Z(neglit(1(#))),
    int::select(heap, self, IntLinkedList::$size))"))
                     (rule "inEqSimp_homoInEq1" (formula "25") (term "1"))
                     (rule "polySimp_mulComm0" (formula "25") (term "1,0,1"))
                     (rule "polySimp_rightDist" (formula "25") (term "1,0,1"))
                     (rule "mul_literals" (formula "25") (term "0,1,0,1"))
                     (rule "polySimp_addAssoc" (formula "25") (term "0,1"))
                     (rule "polySimp_addComm0" (formula "25") (term "0,0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,1"))
                     (rule "add_literals" (formula "25") (term "1,1,0,1"))
                     (rule "times_zero_1" (formula "25") (term "1,0,1"))
                     (rule "add_literals" (formula "25") (term "0,1"))
                     (rule "leq_literals" (formula "25") (term "1"))
                     (builtin "One Step Simplification" (formula "25"))
                     (rule "inEqSimp_homoInEq0" (formula "25") (term "1"))
                     (rule "polySimp_mulComm0" (formula "25") (term "1,0,1"))
                     (rule "polySimp_rightDist" (formula "25") (term "1,0,1"))
                     (rule "mul_literals" (formula "25") (term "0,1,0,1"))
                     (rule "polySimp_addAssoc" (formula "25") (term "0,1"))
                     (rule "add_literals" (formula "25") (term "0,0,1"))
                     (rule "add_zero_left" (formula "25") (term "0,1"))
                     (rule "applyEq" (formula "25") (term "1,0,0") (ifseqformula "18"))
                     (rule "inEqSimp_invertInEq1" (formula "25") (term "1"))
                     (rule "times_zero_2" (formula "25") (term "1,1"))
                     (rule "polySimp_mulLiterals" (formula "25") (term "0,1"))
                     (rule "polySimp_elimOne" (formula "25") (term "0,1"))
                     (rule "inEqSimp_contradInEq1" (formula "25") (term "1") (ifseqformula "20"))
                     (rule "qeq_literals" (formula "25") (term "0,1"))
                     (builtin "One Step Simplification" (formula "25"))
                     (rule "pullOutSelect" (formula "25") (term "0") (inst "selectSK=IntNode_data_0"))
                     (rule "simplifySelectOfAnon" (formula "25"))
                     (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "33")))
                     (rule "eqSymm" (formula "26"))
                     (rule "applyEqReverse" (formula "25") (term "1") (ifseqformula "26"))
                     (rule "hideAuxiliaryEq" (formula "26"))
                     (rule "elementOfUnion" (formula "25") (term "0,0"))
                     (rule "elementOfSingleton" (formula "25") (term "0,0,0"))
                     (builtin "One Step Simplification" (formula "25"))
                     (rule "elementOfInfiniteUnion" (formula "25") (term "0,0"))
                     (builtin "One Step Simplification" (formula "25"))
                     (rule "elementOfSingleton" (formula "25") (term "1,0,0,0"))
                     (builtin "One Step Simplification" (formula "25"))
                     (rule "eqSymm" (formula "25") (term "1,0,0,0"))
                     (rule "commute_and_2" (formula "25") (term "0,0,0"))
                     (rule "commute_and" (formula "25") (term "0,0,0,0"))
                     (rule "allLeft" (formula "26") (inst "t=Z(0(#))"))
                     (rule "leq_literals" (formula "26") (term "1,0"))
                     (builtin "One Step Simplification" (formula "26"))
                     (rule "inEqSimp_commuteGeq" (formula "26") (term "1"))
                     (rule "applyEq" (formula "26") (term "1,0,0") (ifseqformula "16"))
                     (rule "inEqSimp_contradInEq1" (formula "26") (term "1") (ifseqformula "20"))
                     (rule "qeq_literals" (formula "26") (term "0,1"))
                     (builtin "One Step Simplification" (formula "26"))
                     (rule "pullOutSelect" (formula "26") (term "0") (inst "selectSK=IntNode_data_1"))
                     (rule "simplifySelectOfAnon" (formula "26"))
                     (builtin "One Step Simplification" (formula "26"))
                     (rule "eqSymm" (formula "27"))
                     (rule "applyEqReverse" (formula "26") (term "1") (ifseqformula "27"))
                     (rule "hideAuxiliaryEq" (formula "27"))
                     (rule "elementOfUnion" (formula "26") (term "0,0,0"))
                     (rule "elementOfSingleton" (formula "26") (term "0,0,0,0"))
                     (builtin "One Step Simplification" (formula "26"))
                     (rule "elementOfInfiniteUnion" (formula "26") (term "0,0,0"))
                     (builtin "One Step Simplification" (formula "26"))
                     (rule "elementOfSingleton" (formula "26") (term "1,0,0,0,0"))
                     (builtin "One Step Simplification" (formula "26"))
                     (rule "eqSymm" (formula "26") (term "1,0,0,0,0"))
                     (rule "commute_and_2" (formula "26") (term "0,0,0,0"))
                     (rule "commute_and" (formula "26") (term "0,0,0,0,0"))
                     (rule "allLeft" (formula "27") (inst "t=i_1_0"))
                     (rule "inEqSimp_commuteGeq" (formula "27") (term "1"))
                     (rule "inEqSimp_contradInEq1" (formula "27") (term "1,0") (ifseqformula "2"))
                     (rule "qeq_literals" (formula "27") (term "0,1,0"))
                     (builtin "One Step Simplification" (formula "27"))
                     (rule "inEqSimp_contradInEq1" (formula "27") (term "1") (ifseqformula "1"))
                     (rule "inEqSimp_homoInEq1" (formula "27") (term "0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,1"))
                     (rule "add_literals" (formula "27") (term "1,1,0,0,1"))
                     (rule "times_zero_1" (formula "27") (term "1,0,0,1"))
                     (rule "add_zero_right" (formula "27") (term "0,0,1"))
                     (rule "leq_literals" (formula "27") (term "0,1"))
                     (builtin "One Step Simplification" (formula "27"))
                     (rule "typeEqDerived2" (formula "37") (term "0,1") (ifseqformula "27"))
                     (builtin "One Step Simplification" (formula "37"))
                     (rule "notRight" (formula "37"))
                     (rule "applyEq" (formula "28") (term "1") (ifseqformula "1"))
                     (builtin "One Step Simplification" (formula "28"))
                     (rule "closeFalse" (formula "28"))
                  )
                  (branch
                     (rule "allRight" (formula "32") (inst "sk=i_2_0"))
                     (rule "orRight" (formula "32"))
                     (rule "orRight" (formula "32"))
                     (rule "polySimp_homoEq" (formula "34") (term "0,1,1"))
                     (rule "polySimp_addComm1" (formula "34") (term "0,0,1,1"))
                     (rule "inEqSimp_geqRight" (formula "33"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0"))
                     (rule "inEqSimp_leqRight" (formula "33"))
                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0"))
                     (rule "add_zero_left" (formula "1") (term "0"))
                     (rule "polySimp_sepPosMonomial" (formula "34") (term "0,1,1"))
                     (rule "polySimp_mulComm0" (formula "34") (term "1,0,1,1"))
                     (rule "polySimp_rightDist" (formula "34") (term "1,0,1,1"))
                     (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,1,1"))
                     (rule "mul_literals" (formula "34") (term "0,1,0,1,1"))
                     (rule "polySimp_elimOne" (formula "34") (term "1,1,0,1,1"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                     (rule "polySimp_elimOne" (formula "2") (term "0"))
                     (rule "pullOutSelect" (formula "34") (term "0,1") (inst "selectSK=IntNode_next_1"))
                     (rule "simplifySelectOfAnon" (formula "1"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "eqSymm" (formula "35") (term "1"))
                     (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                     (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "elementOfInfiniteUnion" (formula "1") (term "0,0,0"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "elementOfSingleton" (formula "1") (term "1,0,0,0,0"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "pullOutSelect" (formula "35") (term "0,1,0,0") (inst "selectSK=IntNode_data_0"))
                     (rule "simplifySelectOfAnon" (formula "1"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "eqSymm" (formula "36") (term "1,0,0"))
                     (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                     (rule "elementOfInfiniteUnion" (formula "1") (term "1,0,0,0"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "elementOfSingleton" (formula "1") (term "1,0,0,0,0"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "eqSymm" (formula "1") (term "1,0,0,0,0"))
                     (rule "commute_and_2" (formula "1") (term "0,0,0,0"))
                     (rule "commute_and" (formula "1") (term "0,0,0,0,0"))
                     (rule "allLeft" (formula "27") (inst "t=add(Z(neglit(1(#))),
    int::select(heap, self, IntLinkedList::$size))"))
                     (rule "inEqSimp_homoInEq1" (formula "27") (term "1"))
                     (rule "polySimp_mulComm0" (formula "27") (term "1,0,1"))
                     (rule "polySimp_rightDist" (formula "27") (term "1,0,1"))
                     (rule "mul_literals" (formula "27") (term "0,1,0,1"))
                     (rule "polySimp_addAssoc" (formula "27") (term "0,1"))
                     (rule "polySimp_addComm0" (formula "27") (term "0,0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,1"))
                     (rule "add_literals" (formula "27") (term "1,1,0,1"))
                     (rule "times_zero_1" (formula "27") (term "1,0,1"))
                     (rule "add_zero_right" (formula "27") (term "0,1"))
                     (rule "leq_literals" (formula "27") (term "1"))
                     (builtin "One Step Simplification" (formula "27"))
                     (rule "inEqSimp_homoInEq0" (formula "27") (term "1"))
                     (rule "polySimp_mulComm0" (formula "27") (term "1,0,1"))
                     (rule "polySimp_rightDist" (formula "27") (term "1,0,1"))
                     (rule "mul_literals" (formula "27") (term "0,1,0,1"))
                     (rule "polySimp_addAssoc" (formula "27") (term "0,1"))
                     (rule "add_literals" (formula "27") (term "0,0,1"))
                     (rule "add_zero_left" (formula "27") (term "0,1"))
                     (rule "applyEq" (formula "27") (term "1,0,0") (ifseqformula "20"))
                     (rule "inEqSimp_invertInEq1" (formula "27") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "27") (term "0,1"))
                     (rule "mul_literals" (formula "27") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "27") (term "0,1"))
                     (rule "inEqSimp_contradInEq1" (formula "27") (term "1") (ifseqformula "22"))
                     (rule "qeq_literals" (formula "27") (term "0,1"))
                     (builtin "One Step Simplification" (formula "27"))
                     (rule "pullOutSelect" (formula "27") (term "0") (inst "selectSK=IntNode_data_1"))
                     (rule "simplifySelectOfAnon" (formula "27"))
                     (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "35")))
                     (rule "eqSymm" (formula "28"))
                     (rule "applyEqReverse" (formula "27") (term "1") (ifseqformula "28"))
                     (rule "hideAuxiliaryEq" (formula "28"))
                     (rule "elementOfUnion" (formula "27") (term "0,0"))
                     (rule "elementOfInfiniteUnion" (formula "27") (term "1,0,0"))
                     (builtin "One Step Simplification" (formula "27"))
                     (rule "elementOfSingleton" (formula "27") (term "1,0,1,0,0"))
                     (builtin "One Step Simplification" (formula "27"))
                     (rule "eqSymm" (formula "27") (term "1,0,1,0,0"))
                     (rule "elementOfSingleton" (formula "27") (term "0,0,0"))
                     (builtin "One Step Simplification" (formula "27"))
                     (rule "commute_and_2" (formula "27") (term "0,0,0"))
                     (rule "commute_and" (formula "27") (term "0,0,0,0"))
                     (rule "allLeft" (formula "28") (inst "t=Z(0(#))"))
                     (rule "leq_literals" (formula "28") (term "1,0"))
                     (builtin "One Step Simplification" (formula "28"))
                     (rule "inEqSimp_commuteGeq" (formula "28") (term "1"))
                     (rule "applyEq" (formula "28") (term "1,0,0") (ifseqformula "18"))
                     (rule "inEqSimp_contradInEq1" (formula "28") (term "1") (ifseqformula "22"))
                     (rule "qeq_literals" (formula "28") (term "0,1"))
                     (builtin "One Step Simplification" (formula "28"))
                     (rule "pullOutSelect" (formula "28") (term "0") (inst "selectSK=IntNode_data_2"))
                     (rule "simplifySelectOfAnon" (formula "28"))
                     (builtin "One Step Simplification" (formula "28"))
                     (rule "eqSymm" (formula "29"))
                     (rule "applyEqReverse" (formula "28") (term "1") (ifseqformula "29"))
                     (rule "hideAuxiliaryEq" (formula "29"))
                     (rule "elementOfUnion" (formula "28") (term "0,0,0"))
                     (rule "elementOfSingleton" (formula "28") (term "0,0,0,0"))
                     (builtin "One Step Simplification" (formula "28"))
                     (rule "elementOfInfiniteUnion" (formula "28") (term "0,0,0"))
                     (builtin "One Step Simplification" (formula "28"))
                     (rule "elementOfSingleton" (formula "28") (term "1,0,0,0,0"))
                     (builtin "One Step Simplification" (formula "28"))
                     (rule "eqSymm" (formula "28") (term "1,0,0,0,0"))
                     (rule "commute_and_2" (formula "28") (term "0,0,0,0"))
                     (rule "commute_and" (formula "28") (term "0,0,0,0,0"))
                     (rule "ifthenelse_split" (formula "38") (term "0,1"))
                     (branch "self.size = 1 + i_2_0 TRUE"
                        (rule "eqSymm" (formula "39") (term "1"))
                        (rule "applyEq" (formula "21") (term "1,1,0") (ifseqformula "1"))
                        (rule "polySimp_addAssoc" (formula "21") (term "1,0"))
                        (rule "add_literals" (formula "21") (term "0,1,0"))
                        (rule "add_zero_left" (formula "21") (term "1,0"))
                        (rule "applyEq" (formula "26") (term "1,1,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "12") (term "1,1,1,0,0,1,0") (ifseqformula "1"))
                        (rule "polySimp_addAssoc" (formula "12") (term "1,1,0,0,1,0"))
                        (rule "add_literals" (formula "12") (term "0,1,1,0,0,1,0"))
                        (rule "add_zero_left" (formula "12") (term "1,1,0,0,1,0"))
                        (rule "applyEq" (formula "15") (term "1,1,0,0,0,0,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "13") (term "1,1,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "5") (term "0") (ifseqformula "1"))
                        (rule "inEqSimp_homoInEq1" (formula "5"))
                        (rule "polySimp_pullOutFactor1" (formula "5") (term "0"))
                        (rule "add_literals" (formula "5") (term "1,0"))
                        (rule "times_zero_1" (formula "5") (term "0"))
                        (rule "leq_literals" (formula "5"))
                        (rule "true_left" (formula "5"))
                        (rule "applyEq" (formula "14") (term "1,1,0,0,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "13") (term "1,1,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "10") (term "1,1,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "38") (term "1,1,0,0,1,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "29") (term "1,1,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "9") (term "1,1,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "30") (term "1,1,1,0,0,1,1,0,0,0,0,0") (ifseqformula "1"))
                        (rule "polySimp_addAssoc" (formula "30") (term "1,1,0,0,1,1,0,0,0,0,0"))
                        (rule "add_literals" (formula "30") (term "0,1,1,0,0,1,1,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "30") (term "1,1,0,0,1,1,0,0,0,0,0"))
                        (rule "applyEq" (formula "26") (term "1,1,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "22") (term "0") (ifseqformula "1"))
                        (rule "inEqSimp_homoInEq1" (formula "22"))
                        (rule "polySimp_mulComm0" (formula "22") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "22") (term "1,0"))
                        (rule "mul_literals" (formula "22") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "22") (term "0"))
                        (rule "add_literals" (formula "22") (term "0,0"))
                        (rule "add_zero_left" (formula "22") (term "0"))
                        (rule "applyEq" (formula "2") (term "1,1,1,0,0,0,0") (ifseqformula "1"))
                        (rule "polySimp_addAssoc" (formula "2") (term "1,1,0,0,0,0"))
                        (rule "add_literals" (formula "2") (term "0,1,1,0,0,0,0"))
                        (rule "add_zero_left" (formula "2") (term "1,1,0,0,0,0"))
                        (rule "applyEq" (formula "16") (term "1,1,1,0") (ifseqformula "1"))
                        (rule "polySimp_addAssoc" (formula "16") (term "1,1,0"))
                        (rule "add_literals" (formula "16") (term "0,1,1,0"))
                        (rule "add_zero_left" (formula "16") (term "1,1,0"))
                        (rule "applyEq" (formula "32") (term "1,1,0,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "27") (term "1,1,1,0,0,0") (ifseqformula "1"))
                        (rule "polySimp_addAssoc" (formula "27") (term "1,1,0,0,0"))
                        (rule "add_literals" (formula "27") (term "0,1,1,0,0,0"))
                        (rule "add_zero_left" (formula "27") (term "1,1,0,0,0"))
                        (rule "applyEq" (formula "30") (term "1,1,1,0") (ifseqformula "1"))
                        (rule "polySimp_addAssoc" (formula "30") (term "1,1,0"))
                        (rule "add_literals" (formula "30") (term "0,1,1,0"))
                        (rule "add_zero_left" (formula "30") (term "1,1,0"))
                        (rule "applyEq" (formula "28") (term "1,1,1,0,0,0,0") (ifseqformula "1"))
                        (rule "polySimp_addAssoc" (formula "28") (term "1,1,0,0,0,0"))
                        (rule "add_literals" (formula "28") (term "0,1,1,0,0,0,0"))
                        (rule "add_zero_left" (formula "28") (term "1,1,0,0,0,0"))
                        (rule "applyEq" (formula "29") (term "1,1,1,0,0,1,1,0,0,0,0,0") (ifseqformula "1"))
                        (rule "polySimp_addAssoc" (formula "29") (term "1,1,0,0,1,1,0,0,0,0,0"))
                        (rule "add_literals" (formula "29") (term "0,1,1,0,0,1,1,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "29") (term "1,1,0,0,1,1,0,0,0,0,0"))
                        (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "20"))
                        (rule "applyEq" (formula "3") (term "1,0,0,1,0,0") (ifseqformula "20"))
                        (rule "applyEq" (formula "3") (term "1,2,0") (ifseqformula "20"))
                        (rule "applyEq" (formula "3") (term "0,0,0,0,0") (ifseqformula "20"))
                        (rule "replace_known_right" (formula "3") (term "0,0") (ifseqformula "35"))
                        (builtin "One Step Simplification" (formula "3"))
                        (rule "applyEqReverse" (formula "38") (term "0,1") (ifseqformula "3"))
                        (rule "hideAuxiliaryEq" (formula "3"))
                        (rule "replace_known_left" (formula "37") (term "1") (ifseqformula "14"))
                        (builtin "One Step Simplification" (formula "37"))
                        (rule "applyEq" (formula "2") (term "1,0,0,1,1,0,0") (ifseqformula "19"))
                        (rule "applyEq" (formula "2") (term "1,1,0") (ifseqformula "19"))
                        (rule "applyEq" (formula "2") (term "0,0,0,1,0,0") (ifseqformula "19"))
                        (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "34"))
                        (builtin "One Step Simplification" (formula "2"))
                        (rule "applyEq" (formula "22") (term "1") (ifseqformula "1"))
                        (rule "applyEq" (formula "26") (term "1,1,1") (ifseqformula "1"))
                        (rule "polySimp_addAssoc" (formula "26") (term "1,1"))
                        (rule "add_literals" (formula "26") (term "0,1,1"))
                        (rule "add_zero_left" (formula "26") (term "1,1"))
                        (rule "applyEq" (formula "30") (term "1") (ifseqformula "1"))
                        (rule "applyEq" (formula "20") (term "1") (ifseqformula "1"))
                        (rule "applyEq" (formula "37") (term "1,0,0,1,0,1") (ifseqformula "19"))
                        (rule "applyEq" (formula "37") (term "0,0,0,0") (ifseqformula "19"))
                        (rule "applyEq" (formula "2") (term "1,0,0,0,0,0") (ifseqformula "19"))
                        (rule "applyEq" (formula "26") (term "0") (ifseqformula "2"))
                        (rule "eqSymm" (formula "26"))
                        (rule "applyEqReverse" (formula "2") (term "1") (ifseqformula "26"))
                        (rule "applyEqReverse" (formula "37") (term "1,1,0") (ifseqformula "26"))
                        (builtin "One Step Simplification" (formula "37"))
                        (rule "hideAuxiliaryEq" (formula "26"))
                        (rule "inEqSimp_invertInEq0" (formula "21"))
                        (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                        (rule "times_zero_2" (formula "21") (term "1"))
                        (rule "polySimp_elimOne" (formula "21") (term "0"))
                        (rule "cut_direct" (formula "18") (term "0"))
                        (branch "CUT: self.last = null TRUE"
                           (builtin "One Step Simplification" (formula "19"))
                           (rule "true_left" (formula "19"))
                           (rule "replace_known_left" (formula "35") (term "0,0") (ifseqformula "18"))
                           (builtin "One Step Simplification" (formula "35"))
                           (rule "false_right" (formula "35"))
                           (rule "replace_known_left" (formula "32") (term "0,0") (ifseqformula "18"))
                           (builtin "One Step Simplification" (formula "32"))
                           (rule "false_right" (formula "32"))
                           (rule "applyEq" (formula "19") (term "1") (ifseqformula "18"))
                           (rule "applyEq" (formula "2") (term "1,1,0") (ifseqformula "18"))
                           (rule "applyEq" (formula "2") (term "1,0,0,0,0,0") (ifseqformula "18"))
                           (rule "applyEq" (formula "14") (term "1,0") (ifseqformula "18"))
                           (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "18"))
                           (rule "cut_direct" (formula "16") (term "0"))
                           (branch "CUT: self.first = null TRUE"
                              (builtin "One Step Simplification" (formula "17"))
                              (rule "true_left" (formula "17"))
                              (rule "replace_known_left" (formula "25") (term "0,0,1,0,0") (ifseqformula "16"))
                              (builtin "One Step Simplification" (formula "25"))
                              (rule "applyEq" (formula "17") (term "1") (ifseqformula "16"))
                              (rule "applyEq" (formula "25") (term "1,0,0,0,0,0") (ifseqformula "16"))
                              (rule "applyEq" (formula "25") (term "1,2,0") (ifseqformula "16"))
                              (rule "applyEq" (formula "25") (term "1,1,0") (ifseqformula "16"))
                              (rule "applyEq" (formula "2") (term "0") (ifseqformula "25"))
                              (rule "eqSymm" (formula "2"))
                              (rule "cut_direct" (formula "31") (term "0"))
                              (branch "CUT: anonOut_current.<created> = TRUE TRUE"
                                 (builtin "One Step Simplification" (formula "32"))
                                 (rule "true_left" (formula "32"))
                                 (rule "allLeft" (formula "11") (inst "t=i_2_0"))
                                 (rule "replace_known_left" (formula "11") (term "0,0,0") (ifseqformula "20"))
                                 (builtin "One Step Simplification" (formula "11"))
                                 (rule "inEqSimp_homoInEq1" (formula "11") (term "1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,1"))
                                 (rule "add_literals" (formula "11") (term "1,1,0,1"))
                                 (rule "times_zero_1" (formula "11") (term "1,0,1"))
                                 (rule "add_zero_right" (formula "11") (term "0,1"))
                                 (rule "leq_literals" (formula "11") (term "1"))
                                 (builtin "One Step Simplification" (formula "11"))
                                 (rule "inEqSimp_contradInEq1" (formula "11") (ifseqformula "3"))
                                 (rule "qeq_literals" (formula "11") (term "0"))
                                 (builtin "One Step Simplification" (formula "11"))
                                 (rule "closeFalse" (formula "11"))
                              )
                              (branch "CUT: anonOut_current.<created> = TRUE FALSE"
                                 (builtin "One Step Simplification" (formula "31"))
                                 (rule "allLeft" (formula "11") (inst "t=i_2_0"))
                                 (rule "replace_known_left" (formula "11") (term "0,0,0") (ifseqformula "20"))
                                 (builtin "One Step Simplification" (formula "11"))
                                 (rule "inEqSimp_homoInEq1" (formula "11") (term "1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,1"))
                                 (rule "add_literals" (formula "11") (term "1,1,0,1"))
                                 (rule "times_zero_1" (formula "11") (term "1,0,1"))
                                 (rule "add_literals" (formula "11") (term "0,1"))
                                 (rule "leq_literals" (formula "11") (term "1"))
                                 (builtin "One Step Simplification" (formula "11"))
                                 (rule "inEqSimp_contradInEq1" (formula "11") (ifseqformula "3"))
                                 (rule "qeq_literals" (formula "11") (term "0"))
                                 (builtin "One Step Simplification" (formula "11"))
                                 (rule "closeFalse" (formula "11"))
                              )
                           )
                           (branch "CUT: self.first = null FALSE"
                              (builtin "One Step Simplification" (formula "16"))
                              (rule "replace_known_right" (formula "25") (term "0,0,1,0,0") (ifseqformula "32"))
                              (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "16")))
                              (rule "cut_direct" (formula "31") (term "0"))
                              (branch "CUT: anonOut_current.<created> = TRUE TRUE"
                                 (builtin "One Step Simplification" (formula "32"))
                                 (rule "true_left" (formula "32"))
                                 (rule "allLeft" (formula "11") (inst "t=i_2_0"))
                                 (rule "replace_known_left" (formula "11") (term "0,0,0") (ifseqformula "20"))
                                 (builtin "One Step Simplification" (formula "11"))
                                 (rule "inEqSimp_homoInEq1" (formula "11") (term "1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,1"))
                                 (rule "add_literals" (formula "11") (term "1,1,0,1"))
                                 (rule "times_zero_1" (formula "11") (term "1,0,1"))
                                 (rule "add_zero_right" (formula "11") (term "0,1"))
                                 (rule "leq_literals" (formula "11") (term "1"))
                                 (builtin "One Step Simplification" (formula "11"))
                                 (rule "inEqSimp_contradInEq1" (formula "11") (ifseqformula "3"))
                                 (rule "qeq_literals" (formula "11") (term "0"))
                                 (builtin "One Step Simplification" (formula "11"))
                                 (rule "closeFalse" (formula "11"))
                              )
                              (branch "CUT: anonOut_current.<created> = TRUE FALSE"
                                 (builtin "One Step Simplification" (formula "31"))
                                 (rule "allLeft" (formula "11") (inst "t=i_2_0"))
                                 (rule "replace_known_left" (formula "11") (term "0,0,0") (ifseqformula "20"))
                                 (builtin "One Step Simplification" (formula "11"))
                                 (rule "inEqSimp_homoInEq1" (formula "11") (term "1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,1"))
                                 (rule "add_literals" (formula "11") (term "1,1,0,1"))
                                 (rule "times_zero_1" (formula "11") (term "1,0,1"))
                                 (rule "add_zero_right" (formula "11") (term "0,1"))
                                 (rule "leq_literals" (formula "11") (term "1"))
                                 (builtin "One Step Simplification" (formula "11"))
                                 (rule "inEqSimp_contradInEq1" (formula "11") (ifseqformula "3"))
                                 (rule "qeq_literals" (formula "11") (term "0"))
                                 (builtin "One Step Simplification" (formula "11"))
                                 (rule "closeFalse" (formula "11"))
                              )
                           )
                        )
                        (branch "CUT: self.last = null FALSE"
                           (builtin "One Step Simplification" (formula "18"))
                           (rule "replace_known_right" (formula "36") (term "0,0") (ifseqformula "32"))
                           (builtin "One Step Simplification" (formula "36"))
                           (rule "allRight" (formula "36") (inst "sk=j_1_0"))
                           (rule "orRight" (formula "36"))
                           (rule "orRight" (formula "37"))
                           (rule "orRight" (formula "36"))
                           (rule "notRight" (formula "38"))
                           (rule "replace_known_right" (formula "34") (term "0,0") (ifseqformula "33"))
                           (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "19")))
                           (rule "false_right" (formula "34"))
                           (rule "inEqSimp_leqRight" (formula "36"))
                           (rule "mul_literals" (formula "1") (term "1,0,0"))
                           (rule "add_literals" (formula "1") (term "0,0"))
                           (rule "add_zero_left" (formula "1") (term "0"))
                           (rule "inEqSimp_geqRight" (formula "37"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                           (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                           (rule "add_literals" (formula "1") (term "0,0,0"))
                           (rule "add_zero_left" (formula "1") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                           (rule "polySimp_elimOne" (formula "1") (term "1"))
                           (rule "inEqSimp_strengthen0" (formula "1") (ifseqformula "38"))
                           (rule "inEqSimp_contradEq3" (formula "38") (ifseqformula "1"))
                           (rule "polySimp_mulComm0" (formula "38") (term "1,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "38") (term "0,0"))
                           (rule "add_literals" (formula "38") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "38") (term "1,0,0"))
                           (rule "add_literals" (formula "38") (term "0,0"))
                           (rule "qeq_literals" (formula "38") (term "0"))
                           (builtin "One Step Simplification" (formula "38"))
                           (rule "false_right" (formula "38"))
                           (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "1"))
                           (rule "times_zero_1" (formula "2") (term "0,0"))
                           (rule "add_zero_left" (formula "2") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                           (rule "mul_literals" (formula "2") (term "1"))
                           (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "2"))
                           (rule "leq_literals" (formula "7") (term "0"))
                           (builtin "One Step Simplification" (formula "7"))
                           (rule "true_left" (formula "7"))
                           (rule "cut_direct" (formula "19") (term "0"))
                           (branch "CUT: self.first = null TRUE"
                              (builtin "One Step Simplification" (formula "20"))
                              (rule "true_left" (formula "20"))
                              (rule "replace_known_left" (formula "28") (term "0,0,1,0,0") (ifseqformula "19"))
                              (builtin "One Step Simplification" (formula "28"))
                              (rule "applyEq" (formula "28") (term "1,2,0") (ifseqformula "19"))
                              (rule "applyEq" (formula "20") (term "1") (ifseqformula "19"))
                              (rule "applyEq" (formula "28") (term "1,0,0,0,0,0") (ifseqformula "19"))
                              (rule "applyEq" (formula "28") (term "1,1,0") (ifseqformula "19"))
                              (rule "cut_direct" (formula "34") (term "0"))
                              (branch "CUT: anonOut_current.<created> = TRUE TRUE"
                                 (builtin "One Step Simplification" (formula "35"))
                                 (rule "true_left" (formula "35"))
                                 (rule "allLeft" (formula "14") (inst "t=Z(0(#))"))
                                 (rule "leq_literals" (formula "14") (term "1,0"))
                                 (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "21")))
                                 (rule "inEqSimp_homoInEq1" (formula "14"))
                                 (rule "times_zero_2" (formula "14") (term "1,0"))
                                 (rule "add_zero_right" (formula "14") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "14"))
                                 (rule "mul_literals" (formula "14") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "14") (ifseqformula "2"))
                                 (rule "qeq_literals" (formula "14") (term "0"))
                                 (builtin "One Step Simplification" (formula "14"))
                                 (rule "closeFalse" (formula "14"))
                              )
                              (branch "CUT: anonOut_current.<created> = TRUE FALSE"
                                 (builtin "One Step Simplification" (formula "34"))
                                 (rule "allLeft" (formula "14") (inst "t=Z(0(#))"))
                                 (rule "leq_literals" (formula "14") (term "1,0"))
                                 (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "21")))
                                 (rule "inEqSimp_homoInEq1" (formula "14"))
                                 (rule "times_zero_2" (formula "14") (term "1,0"))
                                 (rule "add_zero_right" (formula "14") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "14"))
                                 (rule "mul_literals" (formula "14") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "14") (ifseqformula "2"))
                                 (rule "qeq_literals" (formula "14") (term "0"))
                                 (builtin "One Step Simplification" (formula "14"))
                                 (rule "closeFalse" (formula "14"))
                              )
                           )
                           (branch "CUT: self.first = null FALSE"
                              (builtin "One Step Simplification" (formula "19"))
                              (rule "replace_known_left" (formula "28") (term "0,1,1,0,0") (ifseqformula "19"))
                              (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "35")))
                              (rule "cut_direct" (formula "34") (term "0"))
                              (branch "CUT: anonOut_current.<created> = TRUE TRUE"
                                 (builtin "One Step Simplification" (formula "35"))
                                 (rule "true_left" (formula "35"))
                                 (rule "ifthenelse_split" (formula "6") (term "0"))
                                 (branch "∃ int j; ( (IntNode)self.nodeseq[j] = self.last ∧ j ≥ 0 ∧ j ≤ i_2_0) TRUE"
                                    (rule "exLeft" (formula "6") (inst "sk=j_0"))
                                    (rule "andLeft" (formula "6"))
                                    (rule "andLeft" (formula "6"))
                                    (rule "eqSymm" (formula "9"))
                                    (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "8"))
                                    (rule "times_zero_1" (formula "7") (term "0,0"))
                                    (rule "add_zero_left" (formula "7") (term "0"))
                                    (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "2"))
                                    (rule "leq_literals" (formula "7") (term "0"))
                                    (builtin "One Step Simplification" (formula "7"))
                                    (rule "true_left" (formula "7"))
                                    (rule "seqGetAlphaCast" (formula "25") (term "0"))
                                    (rule "castedGetAny" (formula "25") (term "0"))
                                    (builtin "One Step Simplification" (formula "25"))
                                    (rule "true_left" (formula "25"))
                                    (rule "allLeft" (formula "32") (inst "t=Z(0(#))"))
                                    (rule "leq_literals" (formula "32") (term "1,0"))
                                    (builtin "One Step Simplification" (formula "32"))
                                    (rule "inEqSimp_homoInEq1" (formula "32") (term "1"))
                                    (rule "times_zero_2" (formula "32") (term "1,0,1"))
                                    (rule "add_zero_right" (formula "32") (term "0,1"))
                                    (rule "applyEq" (formula "32") (term "1,0,0") (ifseqformula "23"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1"))
                                    (rule "mul_literals" (formula "32") (term "1,1"))
                                    (rule "inEqSimp_contradInEq1" (formula "32") (term "1") (ifseqformula "2"))
                                    (rule "qeq_literals" (formula "32") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "32"))
                                    (rule "pullOutSelect" (formula "32") (term "0") (inst "selectSK=IntNode_data_3"))
                                    (rule "simplifySelectOfAnon" (formula "32"))
                                    (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "40")) (ifInst ""  (formula "22")))
                                    (rule "eqSymm" (formula "33"))
                                    (rule "applyEqReverse" (formula "32") (term "1") (ifseqformula "33"))
                                    (rule "hideAuxiliaryEq" (formula "33"))
                                    (rule "elementOfUnion" (formula "32") (term "0,0"))
                                    (rule "elementOfSingleton" (formula "32") (term "0,0,0"))
                                    (builtin "One Step Simplification" (formula "32"))
                                    (rule "elementOfInfiniteUnion" (formula "32") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "32"))
                                    (rule "elementOfSingleton" (formula "32") (term "1,0,0,0"))
                                    (builtin "One Step Simplification" (formula "32"))
                                    (rule "eqSymm" (formula "32") (term "1,0,0,0"))
                                    (rule "commute_and_2" (formula "32") (term "0,0,0"))
                                    (rule "commute_and" (formula "32") (term "0,0,0,0"))
                                    (rule "allLeft" (formula "33") (inst "t=Z(0(#))"))
                                    (rule "add_zero_right" (formula "33") (term "1,1,0,0"))
                                    (rule "leq_literals" (formula "33") (term "1,0"))
                                    (builtin "One Step Simplification" (formula "33"))
                                    (rule "inEqSimp_commuteGeq" (formula "33") (term "1"))
                                    (rule "applyEq" (formula "33") (term "1,0,0") (ifseqformula "23"))
                                    (rule "inEqSimp_contradInEq1" (formula "33") (term "1") (ifseqformula "2"))
                                    (rule "qeq_literals" (formula "33") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "33"))
                                    (rule "pullOutSelect" (formula "33") (term "0") (inst "selectSK=IntNode_next_2"))
                                    (rule "simplifySelectOfAnon" (formula "33"))
                                    (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "40")) (ifInst ""  (formula "22")))
                                    (rule "eqSymm" (formula "34"))
                                    (rule "applyEqReverse" (formula "33") (term "1") (ifseqformula "34"))
                                    (rule "hideAuxiliaryEq" (formula "34"))
                                    (rule "elementOfUnion" (formula "33") (term "0,0"))
                                    (rule "elementOfInfiniteUnion" (formula "33") (term "1,0,0"))
                                    (builtin "One Step Simplification" (formula "33"))
                                    (rule "elementOfSingleton" (formula "33") (term "0,0,0"))
                                    (builtin "One Step Simplification" (formula "33"))
                                    (rule "elementOfSingleton" (formula "33") (term "1,0,0,0"))
                                    (builtin "One Step Simplification" (formula "33"))
                                    (rule "eqSymm" (formula "33"))
                                    (rule "allLeft" (formula "21") (inst "t=Z(0(#))"))
                                    (rule "add_zero_right" (formula "21") (term "1,1,0,0"))
                                    (rule "leq_literals" (formula "21") (term "1,0"))
                                    (builtin "One Step Simplification" (formula "21"))
                                    (rule "inEqSimp_commuteGeq" (formula "21") (term "1"))
                                    (rule "applyEq" (formula "21") (term "1,0") (ifseqformula "34"))
                                    (rule "applyEq" (formula "21") (term "1,0,0") (ifseqformula "24"))
                                    (builtin "One Step Simplification" (formula "21"))
                                    (rule "true_left" (formula "21"))
                                    (rule "allLeft" (formula "30") (inst "t=Z(0(#))"))
                                    (rule "typeEqDerived2" (formula "30") (term "0,0,0") (ifseqformula "32"))
                                    (builtin "One Step Simplification" (formula "30"))
                                    (rule "true_left" (formula "30"))
                                    (rule "allLeft" (formula "18") (inst "t=i_2_0"))
                                    (rule "inEqSimp_homoInEq1" (formula "18") (term "1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,1"))
                                    (rule "add_literals" (formula "18") (term "1,1,0,1"))
                                    (rule "times_zero_1" (formula "18") (term "1,0,1"))
                                    (rule "add_zero_right" (formula "18") (term "0,1"))
                                    (rule "leq_literals" (formula "18") (term "1"))
                                    (builtin "One Step Simplification" (formula "18"))
                                    (rule "applyEq" (formula "18") (term "1,1,0") (ifseqformula "26"))
                                    (rule "inEqSimp_contradInEq1" (formula "18") (term "1") (ifseqformula "2"))
                                    (rule "qeq_literals" (formula "18") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "18"))
                                    (rule "allLeft" (formula "35") (inst "t=j_1_0"))
                                    (rule "applyEq" (formula "35") (term "1,0,0,0") (ifseqformula "4"))
                                    (rule "inEqSimp_contradInEq0" (formula "35") (term "1") (ifseqformula "1"))
                                    (rule "inEqSimp_homoInEq1" (formula "35") (term "0,1"))
                                    (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "35") (term "1,0,0,1"))
                                    (rule "mul_literals" (formula "35") (term "0,1,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "35") (term "0,0,1"))
                                    (rule "polySimp_addComm0" (formula "35") (term "0,0,0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,1"))
                                    (rule "add_literals" (formula "35") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "35") (term "1,0,0,1"))
                                    (rule "add_literals" (formula "35") (term "0,0,1"))
                                    (rule "leq_literals" (formula "35") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "35"))
                                    (rule "inEqSimp_contradInEq1" (formula "35") (term "1") (ifseqformula "3"))
                                    (rule "qeq_literals" (formula "35") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "35"))
                                    (rule "pullOutSelect" (formula "35") (term "0") (inst "selectSK=IntNode_next_3"))
                                    (rule "simplifySelectOfAnon" (formula "35"))
                                    (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "43")) (ifInst ""  (formula "25")))
                                    (rule "eqSymm" (formula "36"))
                                    (rule "applyEqReverse" (formula "35") (term "1") (ifseqformula "36"))
                                    (rule "hideAuxiliaryEq" (formula "36"))
                                    (rule "applyEq" (formula "35") (term "2,0") (ifseqformula "21"))
                                    (rule "elementOfUnion" (formula "35") (term "0,0"))
                                    (rule "elementOfInfiniteUnion" (formula "35") (term "1,0,0"))
                                    (builtin "One Step Simplification" (formula "35"))
                                    (rule "elementOfSingleton" (formula "35") (term "0,0,0"))
                                    (builtin "One Step Simplification" (formula "35"))
                                    (rule "elementOfSingleton" (formula "35") (term "1,0,0,0"))
                                    (builtin "One Step Simplification" (formula "35"))
                                    (rule "eqSymm" (formula "35"))
                                    (rule "allLeft" (formula "17") (inst "t=Z(0(#))"))
                                    (rule "leq_literals" (formula "17") (term "1,0"))
                                    (builtin "One Step Simplification" (formula "17"))
                                    (rule "inEqSimp_homoInEq1" (formula "17") (term "1"))
                                    (rule "times_zero_2" (formula "17") (term "1,0,1"))
                                    (rule "add_zero_right" (formula "17") (term "0,1"))
                                    (rule "applyEq" (formula "17") (term "0,0,0") (ifseqformula "25"))
                                    (rule "replace_known_right" (formula "17") (term "0,0") (ifseqformula "42"))
                                    (builtin "One Step Simplification" (formula "17"))
                                    (rule "true_left" (formula "17"))
                                    (rule "allLeft" (formula "33") (inst "t=j_1_0"))
                                    (rule "applyEq" (formula "33") (term "1,0,0,0") (ifseqformula "4"))
                                    (rule "inEqSimp_contradInEq1" (formula "33") (term "1,0") (ifseqformula "3"))
                                    (rule "qeq_literals" (formula "33") (term "0,1,0"))
                                    (builtin "One Step Simplification" (formula "33"))
                                    (rule "inEqSimp_contradInEq0" (formula "33") (term "1") (ifseqformula "1"))
                                    (rule "inEqSimp_homoInEq1" (formula "33") (term "0,1"))
                                    (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "33") (term "1,0,0,1"))
                                    (rule "mul_literals" (formula "33") (term "0,1,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "33") (term "0,0,1"))
                                    (rule "polySimp_addComm1" (formula "33") (term "0,0,0,1"))
                                    (rule "add_literals" (formula "33") (term "0,0,0,0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0,1"))
                                    (rule "add_literals" (formula "33") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "33") (term "1,0,0,1"))
                                    (rule "add_literals" (formula "33") (term "0,0,1"))
                                    (rule "leq_literals" (formula "33") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "33"))
                                    (rule "pullOutSelect" (formula "33") (term "0") (inst "selectSK=IntNode_data_4"))
                                    (rule "simplifySelectOfAnon" (formula "33"))
                                    (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "44")) (ifInst ""  (formula "25")))
                                    (rule "eqSymm" (formula "34"))
                                    (rule "applyEqReverse" (formula "33") (term "1") (ifseqformula "34"))
                                    (rule "hideAuxiliaryEq" (formula "34"))
                                    (rule "elementOfUnion" (formula "33") (term "0,0"))
                                    (rule "elementOfSingleton" (formula "33") (term "0,0,0"))
                                    (builtin "One Step Simplification" (formula "33"))
                                    (rule "elementOfInfiniteUnion" (formula "33") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "33"))
                                    (rule "elementOfSingleton" (formula "33") (term "1,0,0,0"))
                                    (builtin "One Step Simplification" (formula "33"))
                                    (rule "eqSymm" (formula "33") (term "1,0,0,0"))
                                    (rule "allLeft" (formula "34") (inst "t=i_2_0"))
                                    (rule "inEqSimp_homoInEq1" (formula "34") (term "1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,1"))
                                    (rule "add_literals" (formula "34") (term "1,1,0,1"))
                                    (rule "times_zero_1" (formula "34") (term "1,0,1"))
                                    (rule "add_zero_right" (formula "34") (term "0,1"))
                                    (rule "leq_literals" (formula "34") (term "1"))
                                    (builtin "One Step Simplification" (formula "34"))
                                    (rule "applyEq" (formula "34") (term "1,0,0") (ifseqformula "26"))
                                    (rule "replaceKnownSelect_taclet001101011111_28" (formula "34") (term "0,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet001101011111_29" (formula "34") (term "0,0"))
                                    (rule "applyEq" (formula "34") (term "1,0") (ifseqformula "9"))
                                    (rule "inEqSimp_contradInEq1" (formula "34") (term "1") (ifseqformula "2"))
                                    (rule "qeq_literals" (formula "34") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "34"))
                                    (rule "applyEq" (formula "33") (term "1") (ifseqformula "34"))
                                    (builtin "One Step Simplification" (formula "33"))
                                    (rule "eqSymm" (formula "33") (term "1"))
                                    (rule "allLeft" (formula "17") (inst "t=j_1_0"))
                                    (rule "applyEq" (formula "17") (term "0,0,0,0") (ifseqformula "4"))
                                    (rule "replace_known_right" (formula "17") (term "0,0,0") (ifseqformula "45"))
                                    (builtin "One Step Simplification" (formula "17"))
                                    (rule "true_left" (formula "17"))
                                    (rule "allLeft" (formula "30") (inst "t=Z(0(#))"))
                                    (rule "leq_literals" (formula "30") (term "1,0"))
                                    (builtin "One Step Simplification" (formula "30"))
                                    (rule "inEqSimp_homoInEq1" (formula "30") (term "1"))
                                    (rule "mul_literals" (formula "30") (term "1,0,1"))
                                    (rule "add_zero_right" (formula "30") (term "0,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1"))
                                    (rule "mul_literals" (formula "30") (term "1,1"))
                                    (rule "inEqSimp_contradInEq1" (formula "30") (term "1") (ifseqformula "2"))
                                    (rule "qeq_literals" (formula "30") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "30"))
                                    (rule "notLeft" (formula "30"))
                                    (rule "allLeft" (formula "17") (inst "t=i_2_0"))
                                    (rule "inEqSimp_homoInEq1" (formula "17") (term "1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,1"))
                                    (rule "add_literals" (formula "17") (term "1,1,0,1"))
                                    (rule "times_zero_1" (formula "17") (term "1,0,1"))
                                    (rule "add_literals" (formula "17") (term "0,1"))
                                    (rule "leq_literals" (formula "17") (term "1"))
                                    (builtin "One Step Simplification" (formula "17"))
                                    (rule "applyEq" (formula "17") (term "0,0,0") (ifseqformula "27"))
                                    (rule "replace_known_right" (formula "17") (term "0,0") (ifseqformula "46"))
                                    (builtin "One Step Simplification" (formula "17"))
                                    (rule "true_left" (formula "17"))
                                    (rule "allLeft" (formula "19") (inst "t=j_1_0"))
                                    (rule "applyEq" (formula "19") (term "1,1,0,0") (ifseqformula "4"))
                                    (rule "inEqSimp_contradInEq1" (formula "19") (term "1,0") (ifseqformula "3"))
                                    (rule "qeq_literals" (formula "19") (term "0,1,0"))
                                    (builtin "One Step Simplification" (formula "19"))
                                    (rule "inEqSimp_contradInEq0" (formula "19") (term "1") (ifseqformula "1"))
                                    (rule "inEqSimp_homoInEq1" (formula "19") (term "0,1"))
                                    (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1"))
                                    (rule "mul_literals" (formula "19") (term "0,1,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "19") (term "0,0,1"))
                                    (rule "polySimp_addComm1" (formula "19") (term "0,0,0,1"))
                                    (rule "add_literals" (formula "19") (term "0,0,0,0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,1"))
                                    (rule "add_literals" (formula "19") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "19") (term "1,0,0,1"))
                                    (rule "add_literals" (formula "19") (term "0,0,1"))
                                    (rule "leq_literals" (formula "19") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "19"))
                                    (rule "allLeft" (formula "20") (inst "t=Z(0(#))"))
                                    (rule "leq_literals" (formula "20") (term "1,0"))
                                    (builtin "One Step Simplification" (formula "20"))
                                    (rule "inEqSimp_homoInEq1" (formula "20") (term "1"))
                                    (rule "times_zero_2" (formula "20") (term "1,0,1"))
                                    (rule "add_zero_right" (formula "20") (term "0,1"))
                                    (rule "applyEq" (formula "20") (term "1,1,0") (ifseqformula "26"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1"))
                                    (rule "mul_literals" (formula "20") (term "1,1"))
                                    (rule "inEqSimp_contradInEq1" (formula "20") (term "1") (ifseqformula "2"))
                                    (rule "qeq_literals" (formula "20") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "20"))
                                    (rule "allLeft" (formula "24") (inst "t=j_1_0"))
                                    (rule "applyEq" (formula "24") (term "1,0,0,0") (ifseqformula "4"))
                                    (rule "eqSymm" (formula "24") (term "0,0"))
                                    (rule "applyEq" (formula "24") (term "0,0,0") (ifseqformula "40"))
                                    (rule "eqSymm" (formula "24") (term "0,0"))
                                    (rule "replace_known_left" (formula "24") (term "0,0") (ifseqformula "23"))
                                    (builtin "One Step Simplification" (formula "24"))
                                    (rule "true_left" (formula "24"))
                                    (rule "allLeft" (formula "32") (inst "t=i_2_0"))
                                    (rule "inEqSimp_homoInEq1" (formula "32") (term "1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,1"))
                                    (rule "add_literals" (formula "32") (term "1,1,0,1"))
                                    (rule "times_zero_1" (formula "32") (term "1,0,1"))
                                    (rule "add_literals" (formula "32") (term "0,1"))
                                    (rule "leq_literals" (formula "32") (term "1"))
                                    (builtin "One Step Simplification" (formula "32"))
                                    (rule "applyEq" (formula "32") (term "0,0,0") (ifseqformula "9"))
                                    (builtin "One Step Simplification" (formula "32"))
                                    (rule "true_left" (formula "32"))
                                    (rule "allLeft" (formula "33") (inst "t=i_2_0"))
                                    (rule "typeEqDerived" (formula "33") (term "0,0,0") (ifseqformula "9"))
                                    (builtin "One Step Simplification" (formula "33"))
                                    (rule "true_left" (formula "33"))
                                    (rule "ifthenelse_split" (formula "34") (term "0"))
                                    (branch "∃ int j; ( (IntNode)self.nodeseq[j] = self.first ∧ j ≥ 0 ∧ j ≤ i_2_0) TRUE"
                                       (rule "exLeft" (formula "34") (inst "sk=j_1"))
                                       (rule "andLeft" (formula "34"))
                                       (rule "andLeft" (formula "34"))
                                       (rule "eqSymm" (formula "37"))
                                       (rule "applyEq" (formula "48") (term "0") (ifseqformula "37"))
                                       (builtin "One Step Simplification" (formula "48"))
                                       (rule "false_right" (formula "48"))
                                       (rule "inEqSimp_exactShadow3" (formula "35") (ifseqformula "36"))
                                       (rule "times_zero_1" (formula "35") (term "0,0"))
                                       (rule "add_zero_left" (formula "35") (term "0"))
                                       (rule "inEqSimp_subsumption1" (formula "35") (ifseqformula "2"))
                                       (rule "leq_literals" (formula "35") (term "0"))
                                       (builtin "One Step Simplification" (formula "35"))
                                       (rule "true_left" (formula "35"))
                                       (rule "commute_and_2" (formula "38") (term "0,0"))
                                       (rule "allLeft" (formula "17") (inst "t=add(Z(1(#)), j_1_0)"))
                                       (rule "replace_known_left" (formula "17") (term "0,0,0") (ifseqformula "43"))
                                       (builtin "One Step Simplification" (formula "17"))
                                       (rule "inEqSimp_homoInEq1" (formula "17") (term "1"))
                                       (rule "polySimp_mulComm0" (formula "17") (term "1,0,1"))
                                       (rule "polySimp_rightDist" (formula "17") (term "1,0,1"))
                                       (rule "mul_literals" (formula "17") (term "0,1,0,1"))
                                       (rule "polySimp_addAssoc" (formula "17") (term "0,1"))
                                       (rule "polySimp_addComm1" (formula "17") (term "0,0,1"))
                                       (rule "add_literals" (formula "17") (term "0,0,0,1"))
                                       (rule "add_zero_left" (formula "17") (term "0,0,1"))
                                       (rule "inEqSimp_homoInEq0" (formula "17") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "17") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "17") (term "1,0,0"))
                                       (rule "mul_literals" (formula "17") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "17") (term "0,0"))
                                       (rule "add_literals" (formula "17") (term "0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "17") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "17") (term "0,1"))
                                       (rule "polySimp_elimOne" (formula "17") (term "0,1"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "17") (term "0"))
                                       (rule "polySimp_mulLiterals" (formula "17") (term "0,0"))
                                       (rule "polySimp_elimOne" (formula "17") (term "0,0"))
                                       (rule "inEqSimp_contradInEq0" (formula "17") (term "1") (ifseqformula "1"))
                                       (rule "inEqSimp_homoInEq1" (formula "17") (term "0,1"))
                                       (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1"))
                                       (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1"))
                                       (rule "mul_literals" (formula "17") (term "0,1,0,0,1"))
                                       (rule "polySimp_addAssoc" (formula "17") (term "0,0,1"))
                                       (rule "polySimp_addComm0" (formula "17") (term "0,0,0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,1"))
                                       (rule "add_literals" (formula "17") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "17") (term "1,0,0,1"))
                                       (rule "add_literals" (formula "17") (term "0,0,1"))
                                       (rule "leq_literals" (formula "17") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "17"))
                                       (rule "inEqSimp_contradInEq1" (formula "17") (ifseqformula "3"))
                                       (rule "qeq_literals" (formula "17") (term "0"))
                                       (builtin "One Step Simplification" (formula "17"))
                                       (rule "closeFalse" (formula "17"))
                                    )
                                    (branch "∃ int j; ( (IntNode)self.nodeseq[j] = self.first ∧ j ≥ 0 ∧ j ≤ i_2_0) FALSE"
                                       (rule "eqSymm" (formula "34"))
                                       (rule "applyEq" (formula "46") (term "0") (ifseqformula "34"))
                                       (builtin "One Step Simplification" (formula "46"))
                                       (rule "false_right" (formula "46"))
                                       (rule "nnf_ex2all" (formula "45"))
                                       (rule "nnf_notAnd" (formula "1") (term "0"))
                                       (rule "inEqSimp_notLeq" (formula "1") (term "1,0"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,1,0"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0"))
                                       (rule "mul_literals" (formula "1") (term "0,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0"))
                                       (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_notGeq" (formula "1") (term "1,0,0"))
                                       (rule "times_zero_1" (formula "1") (term "1,0,0,1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1,0,0"))
                                       (rule "mul_literals" (formula "1") (term "1,1,0,0"))
                                       (rule "commute_and_2" (formula "36") (term "0,0"))
                                       (rule "allLeft" (formula "18") (inst "t=add(Z(1(#)), j_1_0)"))
                                       (rule "replace_known_left" (formula "18") (term "0,0,0") (ifseqformula "41"))
                                       (builtin "One Step Simplification" (formula "18"))
                                       (rule "inEqSimp_homoInEq0" (formula "18") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "18") (term "1,0,0"))
                                       (rule "mul_literals" (formula "18") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "18") (term "0,0"))
                                       (rule "add_literals" (formula "18") (term "0,0,0"))
                                       (rule "inEqSimp_homoInEq1" (formula "18") (term "1"))
                                       (rule "polySimp_mulComm0" (formula "18") (term "1,0,1"))
                                       (rule "polySimp_rightDist" (formula "18") (term "1,0,1"))
                                       (rule "mul_literals" (formula "18") (term "0,1,0,1"))
                                       (rule "polySimp_addAssoc" (formula "18") (term "0,1"))
                                       (rule "polySimp_addComm1" (formula "18") (term "0,0,1"))
                                       (rule "add_literals" (formula "18") (term "0,0,0,1"))
                                       (rule "add_zero_left" (formula "18") (term "0,0,1"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "18") (term "0"))
                                       (rule "polySimp_mulLiterals" (formula "18") (term "0,0"))
                                       (rule "polySimp_elimOne" (formula "18") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "18") (term "0,1"))
                                       (rule "polySimp_elimOne" (formula "18") (term "0,1"))
                                       (rule "inEqSimp_contradInEq0" (formula "18") (term "1") (ifseqformula "2"))
                                       (rule "inEqSimp_homoInEq1" (formula "18") (term "0,1"))
                                       (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1"))
                                       (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1"))
                                       (rule "mul_literals" (formula "18") (term "0,1,0,0,1"))
                                       (rule "polySimp_addAssoc" (formula "18") (term "0,0,1"))
                                       (rule "polySimp_addComm0" (formula "18") (term "0,0,0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1"))
                                       (rule "add_literals" (formula "18") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "18") (term "1,0,0,1"))
                                       (rule "add_literals" (formula "18") (term "0,0,1"))
                                       (rule "leq_literals" (formula "18") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "18"))
                                       (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "18"))
                                       (rule "qeq_literals" (formula "4") (term "0"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "closeFalse" (formula "4"))
                                    )
                                 )
                                 (branch "∃ int j; ( (IntNode)self.nodeseq[j] = self.last ∧ j ≥ 0 ∧ j ≤ i_2_0) FALSE"
                                    (rule "eqSymm" (formula "6"))
                                    (rule "nnf_ex2all" (formula "35"))
                                    (rule "nnf_notAnd" (formula "1") (term "0"))
                                    (rule "inEqSimp_notLeq" (formula "1") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,1,0"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,1,0"))
                                    (rule "mul_literals" (formula "1") (term "0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0"))
                                    (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "1") (term "1,0,0"))
                                    (rule "times_zero_1" (formula "1") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1,0,0"))
                                    (rule "mul_literals" (formula "1") (term "1,1,0,0"))
                                    (rule "seqGetAlphaCast" (formula "23") (term "0"))
                                    (rule "castedGetAny" (formula "23") (term "0"))
                                    (builtin "One Step Simplification" (formula "23"))
                                    (rule "true_left" (formula "23"))
                                    (rule "allLeft" (formula "15") (inst "t=j_1_0"))
                                    (rule "applyEq" (formula "15") (term "0,0,0,0") (ifseqformula "5"))
                                    (rule "replace_known_right" (formula "15") (term "0,0,0") (ifseqformula "38"))
                                    (builtin "One Step Simplification" (formula "15"))
                                    (rule "true_left" (formula "15"))
                                    (rule "allLeft" (formula "15") (inst "t=Z(0(#))"))
                                    (rule "leq_literals" (formula "15") (term "1,0"))
                                    (builtin "One Step Simplification" (formula "15"))
                                    (rule "inEqSimp_homoInEq1" (formula "15") (term "1"))
                                    (rule "times_zero_2" (formula "15") (term "1,0,1"))
                                    (rule "add_zero_right" (formula "15") (term "0,1"))
                                    (rule "applyEq" (formula "15") (term "0,0,0") (ifseqformula "22"))
                                    (rule "replace_known_right" (formula "15") (term "0,0") (ifseqformula "37"))
                                    (builtin "One Step Simplification" (formula "15"))
                                    (rule "true_left" (formula "15"))
                                    (rule "allLeft" (formula "15") (inst "t=i_2_0"))
                                    (rule "inEqSimp_homoInEq1" (formula "15") (term "1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,1"))
                                    (rule "add_literals" (formula "15") (term "1,1,0,1"))
                                    (rule "times_zero_1" (formula "15") (term "1,0,1"))
                                    (rule "add_zero_right" (formula "15") (term "0,1"))
                                    (rule "leq_literals" (formula "15") (term "1"))
                                    (builtin "One Step Simplification" (formula "15"))
                                    (rule "applyEq" (formula "15") (term "0,0,0") (ifseqformula "24"))
                                    (rule "replace_known_right" (formula "15") (term "0,0") (ifseqformula "38"))
                                    (builtin "One Step Simplification" (formula "15"))
                                    (rule "true_left" (formula "15"))
                                    (rule "allLeft" (formula "28") (inst "t=i_2_0"))
                                    (rule "typeEqDerived" (formula "28") (term "0,0,0") (ifseqformula "7"))
                                    (builtin "One Step Simplification" (formula "28"))
                                    (rule "true_left" (formula "28"))
                                    (rule "allLeft" (formula "30") (inst "t=j_1_0"))
                                    (rule "applyEq" (formula "30") (term "1,0,0,0") (ifseqformula "5"))
                                    (rule "inEqSimp_contradInEq1" (formula "30") (term "1,0") (ifseqformula "4"))
                                    (rule "qeq_literals" (formula "30") (term "0,1,0"))
                                    (builtin "One Step Simplification" (formula "30"))
                                    (rule "inEqSimp_contradInEq0" (formula "30") (term "1") (ifseqformula "2"))
                                    (rule "inEqSimp_homoInEq1" (formula "30") (term "0,1"))
                                    (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1"))
                                    (rule "mul_literals" (formula "30") (term "0,1,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "30") (term "0,0,1"))
                                    (rule "polySimp_addComm1" (formula "30") (term "0,0,0,1"))
                                    (rule "add_literals" (formula "30") (term "0,0,0,0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,1"))
                                    (rule "add_literals" (formula "30") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "30") (term "1,0,0,1"))
                                    (rule "add_literals" (formula "30") (term "0,0,1"))
                                    (rule "leq_literals" (formula "30") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "30"))
                                    (rule "pullOutSelect" (formula "30") (term "0") (inst "selectSK=IntNode_data_3"))
                                    (rule "simplifySelectOfAnon" (formula "30"))
                                    (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "39")) (ifInst ""  (formula "22")))
                                    (rule "eqSymm" (formula "31"))
                                    (rule "applyEqReverse" (formula "30") (term "1") (ifseqformula "31"))
                                    (rule "hideAuxiliaryEq" (formula "31"))
                                    (rule "elementOfUnion" (formula "30") (term "0,0"))
                                    (rule "elementOfInfiniteUnion" (formula "30") (term "1,0,0"))
                                    (builtin "One Step Simplification" (formula "30"))
                                    (rule "elementOfSingleton" (formula "30") (term "0,0,0"))
                                    (builtin "One Step Simplification" (formula "30"))
                                    (rule "elementOfSingleton" (formula "30") (term "1,0,0,0"))
                                    (builtin "One Step Simplification" (formula "30"))
                                    (rule "eqSymm" (formula "30") (term "1,0,0,0"))
                                    (rule "commute_and_2" (formula "30") (term "0,0,0"))
                                    (rule "commute_and" (formula "30") (term "0,0,0,0"))
                                    (rule "allLeft" (formula "31") (inst "t=i_2_0"))
                                    (rule "inEqSimp_homoInEq1" (formula "31") (term "1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,1"))
                                    (rule "add_literals" (formula "31") (term "1,1,0,1"))
                                    (rule "times_zero_1" (formula "31") (term "1,0,1"))
                                    (rule "add_zero_right" (formula "31") (term "0,1"))
                                    (rule "leq_literals" (formula "31") (term "1"))
                                    (builtin "One Step Simplification" (formula "31"))
                                    (rule "applyEq" (formula "31") (term "1,0") (ifseqformula "7"))
                                    (rule "applyEq" (formula "31") (term "1,0,0") (ifseqformula "23"))
                                    (rule "replaceKnownSelect_taclet101101011111_22" (formula "31") (term "0,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet101101011111_23" (formula "31") (term "0,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "31") (term "1") (ifseqformula "3"))
                                    (rule "qeq_literals" (formula "31") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "31"))
                                    (rule "applyEq" (formula "30") (term "1") (ifseqformula "31"))
                                    (builtin "One Step Simplification" (formula "30"))
                                    (rule "allLeft" (formula "33") (inst "t=j_1_0"))
                                    (rule "applyEq" (formula "33") (term "1,0,0,0") (ifseqformula "5"))
                                    (rule "inEqSimp_contradInEq0" (formula "33") (term "1") (ifseqformula "2"))
                                    (rule "inEqSimp_homoInEq1" (formula "33") (term "0,1"))
                                    (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "33") (term "1,0,0,1"))
                                    (rule "mul_literals" (formula "33") (term "0,1,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "33") (term "0,0,1"))
                                    (rule "polySimp_addComm0" (formula "33") (term "0,0,0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0,1"))
                                    (rule "add_literals" (formula "33") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "33") (term "1,0,0,1"))
                                    (rule "add_literals" (formula "33") (term "0,0,1"))
                                    (rule "leq_literals" (formula "33") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "33"))
                                    (rule "inEqSimp_contradInEq1" (formula "33") (term "1") (ifseqformula "4"))
                                    (rule "qeq_literals" (formula "33") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "33"))
                                    (rule "pullOutSelect" (formula "33") (term "0") (inst "selectSK=IntNode_next_2"))
                                    (rule "simplifySelectOfAnon" (formula "33"))
                                    (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "41")) (ifInst ""  (formula "22")))
                                    (rule "eqSymm" (formula "34"))
                                    (rule "applyEqReverse" (formula "33") (term "1") (ifseqformula "34"))
                                    (rule "hideAuxiliaryEq" (formula "34"))
                                    (rule "applyEq" (formula "33") (term "2,0") (ifseqformula "18"))
                                    (rule "elementOfUnion" (formula "33") (term "0,0"))
                                    (rule "elementOfInfiniteUnion" (formula "33") (term "1,0,0"))
                                    (builtin "One Step Simplification" (formula "33"))
                                    (rule "elementOfSingleton" (formula "33") (term "0,0,0"))
                                    (builtin "One Step Simplification" (formula "33"))
                                    (rule "elementOfSingleton" (formula "33") (term "1,0,0,0"))
                                    (builtin "One Step Simplification" (formula "33"))
                                    (rule "eqSymm" (formula "33"))
                                    (rule "allLeft" (formula "27") (inst "t=Z(0(#))"))
                                    (rule "leq_literals" (formula "27") (term "1,0"))
                                    (builtin "One Step Simplification" (formula "27"))
                                    (rule "inEqSimp_homoInEq1" (formula "27") (term "1"))
                                    (rule "times_zero_2" (formula "27") (term "1,0,1"))
                                    (rule "add_zero_right" (formula "27") (term "0,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1"))
                                    (rule "mul_literals" (formula "27") (term "1,1"))
                                    (rule "inEqSimp_contradInEq1" (formula "27") (term "1") (ifseqformula "3"))
                                    (rule "qeq_literals" (formula "27") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "27"))
                                    (rule "notLeft" (formula "27"))
                                    (rule "allLeft" (formula "19") (inst "t=j_1_0"))
                                    (rule "applyEq" (formula "19") (term "1,0,0") (ifseqformula "34"))
                                    (rule "applyEq" (formula "19") (term "1,0,0,0") (ifseqformula "5"))
                                    (rule "replace_known_left" (formula "19") (term "0,0") (ifseqformula "18"))
                                    (builtin "One Step Simplification" (formula "19"))
                                    (rule "true_left" (formula "19"))
                                    (rule "allLeft" (formula "16") (inst "t=Z(0(#))"))
                                    (rule "leq_literals" (formula "16") (term "1,0"))
                                    (builtin "One Step Simplification" (formula "16"))
                                    (rule "inEqSimp_homoInEq1" (formula "16") (term "1"))
                                    (rule "times_zero_2" (formula "16") (term "1,0,1"))
                                    (rule "add_zero_right" (formula "16") (term "0,1"))
                                    (rule "applyEq" (formula "16") (term "1,1,0") (ifseqformula "22"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1"))
                                    (rule "mul_literals" (formula "16") (term "1,1"))
                                    (rule "inEqSimp_contradInEq1" (formula "16") (term "1") (ifseqformula "3"))
                                    (rule "qeq_literals" (formula "16") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "16"))
                                    (rule "allLeft" (formula "33") (inst "t=Z(0(#))"))
                                    (rule "leq_literals" (formula "33") (term "1,0"))
                                    (builtin "One Step Simplification" (formula "33"))
                                    (rule "inEqSimp_homoInEq1" (formula "33") (term "1"))
                                    (rule "times_zero_2" (formula "33") (term "1,0,1"))
                                    (rule "add_zero_right" (formula "33") (term "0,1"))
                                    (rule "applyEq" (formula "33") (term "1,0,0") (ifseqformula "22"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1"))
                                    (rule "mul_literals" (formula "33") (term "1,1"))
                                    (rule "inEqSimp_contradInEq1" (formula "33") (term "1") (ifseqformula "3"))
                                    (rule "qeq_literals" (formula "33") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "33"))
                                    (rule "pullOutSelect" (formula "33") (term "0") (inst "selectSK=IntNode_data_4"))
                                    (rule "simplifySelectOfAnon" (formula "33"))
                                    (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "43")) (ifInst ""  (formula "21")))
                                    (rule "eqSymm" (formula "34"))
                                    (rule "applyEqReverse" (formula "33") (term "1") (ifseqformula "34"))
                                    (rule "hideAuxiliaryEq" (formula "34"))
                                    (rule "elementOfUnion" (formula "33") (term "0,0"))
                                    (rule "elementOfSingleton" (formula "33") (term "0,0,0"))
                                    (builtin "One Step Simplification" (formula "33"))
                                    (rule "elementOfInfiniteUnion" (formula "33") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "33"))
                                    (rule "elementOfSingleton" (formula "33") (term "1,0,0,0"))
                                    (builtin "One Step Simplification" (formula "33"))
                                    (rule "eqSymm" (formula "33") (term "1,0,0,0"))
                                    (rule "allLeft" (formula "36") (inst "t=Z(0(#))"))
                                    (rule "leq_literals" (formula "36") (term "1,0"))
                                    (builtin "One Step Simplification" (formula "36"))
                                    (rule "add_zero_right" (formula "36") (term "1,1,0"))
                                    (rule "inEqSimp_commuteGeq" (formula "36") (term "1"))
                                    (rule "applyEq" (formula "36") (term "1,0,0") (ifseqformula "22"))
                                    (rule "inEqSimp_contradInEq1" (formula "36") (term "1") (ifseqformula "3"))
                                    (rule "qeq_literals" (formula "36") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "36"))
                                    (rule "pullOutSelect" (formula "36") (term "0") (inst "selectSK=IntNode_next_3"))
                                    (rule "simplifySelectOfAnon" (formula "36"))
                                    (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "44")) (ifInst ""  (formula "21")))
                                    (rule "eqSymm" (formula "37"))
                                    (rule "applyEqReverse" (formula "36") (term "1") (ifseqformula "37"))
                                    (rule "hideAuxiliaryEq" (formula "37"))
                                    (rule "elementOfUnion" (formula "36") (term "0,0"))
                                    (rule "elementOfInfiniteUnion" (formula "36") (term "1,0,0"))
                                    (builtin "One Step Simplification" (formula "36"))
                                    (rule "elementOfSingleton" (formula "36") (term "0,0,0"))
                                    (builtin "One Step Simplification" (formula "36"))
                                    (rule "elementOfSingleton" (formula "36") (term "1,0,0,0"))
                                    (builtin "One Step Simplification" (formula "36"))
                                    (rule "eqSymm" (formula "36"))
                                    (rule "allLeft" (formula "28") (inst "t=i_2_0"))
                                    (rule "inEqSimp_homoInEq1" (formula "28") (term "1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,1"))
                                    (rule "add_literals" (formula "28") (term "1,1,0,1"))
                                    (rule "times_zero_1" (formula "28") (term "1,0,1"))
                                    (rule "add_literals" (formula "28") (term "0,1"))
                                    (rule "leq_literals" (formula "28") (term "1"))
                                    (builtin "One Step Simplification" (formula "28"))
                                    (rule "applyEq" (formula "28") (term "0,0,0") (ifseqformula "7"))
                                    (builtin "One Step Simplification" (formula "28"))
                                    (rule "true_left" (formula "28"))
                                    (rule "allLeft" (formula "20") (inst "t=Z(0(#))"))
                                    (rule "leq_literals" (formula "20") (term "1,0"))
                                    (builtin "One Step Simplification" (formula "20"))
                                    (rule "add_zero_right" (formula "20") (term "1,1,0"))
                                    (rule "inEqSimp_commuteGeq" (formula "20") (term "1"))
                                    (rule "applyEq" (formula "20") (term "1,0,0") (ifseqformula "23"))
                                    (rule "eqSymm" (formula "20") (term "0"))
                                    (rule "replace_known_left" (formula "20") (term "0") (ifseqformula "37"))
                                    (builtin "One Step Simplification" (formula "20"))
                                    (rule "true_left" (formula "20"))
                                    (rule "allLeft" (formula "29") (inst "t=Z(0(#))"))
                                    (rule "typeEqDerived2" (formula "29") (term "0,0,0") (ifseqformula "31"))
                                    (builtin "One Step Simplification" (formula "29"))
                                    (rule "true_left" (formula "29"))
                                    (rule "allLeft" (formula "17") (inst "t=i_2_0"))
                                    (rule "inEqSimp_homoInEq1" (formula "17") (term "1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,1"))
                                    (rule "add_literals" (formula "17") (term "1,1,0,1"))
                                    (rule "times_zero_1" (formula "17") (term "1,0,1"))
                                    (rule "add_literals" (formula "17") (term "0,1"))
                                    (rule "leq_literals" (formula "17") (term "1"))
                                    (builtin "One Step Simplification" (formula "17"))
                                    (rule "applyEq" (formula "17") (term "1,1,0") (ifseqformula "25"))
                                    (rule "inEqSimp_contradInEq1" (formula "17") (term "1") (ifseqformula "3"))
                                    (rule "qeq_literals" (formula "17") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "17"))
                                    (rule "allLeft" (formula "18") (inst "t=j_1_0"))
                                    (rule "applyEq" (formula "18") (term "1,1,0,0") (ifseqformula "5"))
                                    (rule "inEqSimp_contradInEq1" (formula "18") (term "1,0") (ifseqformula "4"))
                                    (rule "qeq_literals" (formula "18") (term "0,1,0"))
                                    (builtin "One Step Simplification" (formula "18"))
                                    (rule "inEqSimp_contradInEq0" (formula "18") (term "1") (ifseqformula "2"))
                                    (rule "inEqSimp_homoInEq1" (formula "18") (term "0,1"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1"))
                                    (rule "mul_literals" (formula "18") (term "0,1,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "18") (term "0,0,1"))
                                    (rule "polySimp_addComm1" (formula "18") (term "0,0,0,1"))
                                    (rule "add_literals" (formula "18") (term "0,0,0,0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1"))
                                    (rule "add_literals" (formula "18") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "18") (term "1,0,0,1"))
                                    (rule "add_literals" (formula "18") (term "0,0,1"))
                                    (rule "leq_literals" (formula "18") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "18"))
                                    (rule "ifthenelse_split" (formula "32") (term "0"))
                                    (branch "∃ int j; ( (IntNode)self.nodeseq[j] = self.first ∧ j ≥ 0 ∧ j ≤ i_2_0) TRUE"
                                       (rule "exLeft" (formula "32") (inst "sk=j_0"))
                                       (rule "andLeft" (formula "32"))
                                       (rule "andLeft" (formula "32"))
                                       (rule "eqSymm" (formula "35"))
                                       (rule "applyEq" (formula "38") (term "1") (ifseqformula "35"))
                                       (builtin "One Step Simplification" (formula "38"))
                                       (rule "eqSymm" (formula "38") (term "1"))
                                       (rule "applyEq" (formula "47") (term "0") (ifseqformula "35"))
                                       (builtin "One Step Simplification" (formula "47"))
                                       (rule "false_right" (formula "47"))
                                       (rule "inEqSimp_exactShadow3" (formula "33") (ifseqformula "34"))
                                       (rule "times_zero_1" (formula "33") (term "0,0"))
                                       (rule "add_zero_left" (formula "33") (term "0"))
                                       (rule "inEqSimp_subsumption1" (formula "33") (ifseqformula "3"))
                                       (rule "leq_literals" (formula "33") (term "0"))
                                       (builtin "One Step Simplification" (formula "33"))
                                       (rule "true_left" (formula "33"))
                                       (rule "allLeft" (formula "1") (inst "t=i_2_0"))
                                       (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "27"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "inEqSimp_homoInEq1" (formula "1") (term "1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,1"))
                                       (rule "add_literals" (formula "1") (term "1,1,0,1"))
                                       (rule "times_zero_1" (formula "1") (term "1,0,1"))
                                       (rule "add_zero_right" (formula "1") (term "0,1"))
                                       (rule "leq_literals" (formula "1") (term "1"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "allLeft" (formula "2") (inst "t=j_1_0"))
                                       (rule "replace_known_left" (formula "2") (term "0,0,0") (ifseqformula "7"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "inEqSimp_contradInEq0" (formula "2") (term "1") (ifseqformula "4"))
                                       (rule "inEqSimp_homoInEq1" (formula "2") (term "0,1"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1"))
                                       (rule "polySimp_rightDist" (formula "2") (term "1,0,0,1"))
                                       (rule "mul_literals" (formula "2") (term "0,1,0,0,1"))
                                       (rule "polySimp_addAssoc" (formula "2") (term "0,0,1"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0,0,0,1"))
                                       (rule "add_literals" (formula "2") (term "0,0,0,0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,1"))
                                       (rule "add_literals" (formula "2") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "2") (term "1,0,0,1"))
                                       (rule "add_literals" (formula "2") (term "0,0,1"))
                                       (rule "leq_literals" (formula "2") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "5"))
                                       (rule "qeq_literals" (formula "1") (term "0"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "closeFalse" (formula "1"))
                                    )
                                    (branch "∃ int j; ( (IntNode)self.nodeseq[j] = self.first ∧ j ≥ 0 ∧ j ≤ i_2_0) FALSE"
                                       (rule "eqSymm" (formula "32"))
                                       (rule "applyEq" (formula "35") (term "1") (ifseqformula "32"))
                                       (builtin "One Step Simplification" (formula "35"))
                                       (rule "applyEq" (formula "45") (term "0") (ifseqformula "32"))
                                       (builtin "One Step Simplification" (formula "45"))
                                       (rule "false_right" (formula "45"))
                                       (rule "nnf_ex2all" (formula "44"))
                                       (rule "nnf_notAnd" (formula "1") (term "0"))
                                       (rule "inEqSimp_notLeq" (formula "1") (term "1,0"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,1,0"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,1,0"))
                                       (rule "mul_literals" (formula "1") (term "0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0"))
                                       (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_notGeq" (formula "1") (term "1,0,0"))
                                       (rule "times_zero_1" (formula "1") (term "1,0,0,1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1,0,0"))
                                       (rule "mul_literals" (formula "1") (term "1,1,0,0"))
                                       (rule "allLeft" (formula "2") (inst "t=i_2_0"))
                                       (rule "replace_known_left" (formula "2") (term "0,0,0") (ifseqformula "28"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "inEqSimp_homoInEq1" (formula "2") (term "1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,1"))
                                       (rule "add_literals" (formula "2") (term "1,1,0,1"))
                                       (rule "times_zero_1" (formula "2") (term "1,0,1"))
                                       (rule "add_zero_right" (formula "2") (term "0,1"))
                                       (rule "leq_literals" (formula "2") (term "1"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "allLeft" (formula "3") (inst "t=j_1_0"))
                                       (rule "replace_known_left" (formula "3") (term "0,0,0") (ifseqformula "8"))
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "inEqSimp_contradInEq1" (formula "3") (term "0") (ifseqformula "7"))
                                       (rule "qeq_literals" (formula "3") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "inEqSimp_contradInEq0" (formula "6") (ifseqformula "2"))
                                       (rule "qeq_literals" (formula "6") (term "0"))
                                       (builtin "One Step Simplification" (formula "6"))
                                       (rule "closeFalse" (formula "6"))
                                    )
                                 )
                              )
                              (branch "CUT: anonOut_current.<created> = TRUE FALSE"
                                 (builtin "One Step Simplification" (formula "34"))
                                 (rule "ifthenelse_split" (formula "6") (term "0"))
                                 (branch "∃ int j; ( (IntNode)self.nodeseq[j] = self.last ∧ j ≥ 0 ∧ j ≤ i_2_0) TRUE"
                                    (rule "exLeft" (formula "6") (inst "sk=j_0"))
                                    (rule "andLeft" (formula "6"))
                                    (rule "andLeft" (formula "6"))
                                    (rule "eqSymm" (formula "9"))
                                    (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "8"))
                                    (rule "times_zero_1" (formula "7") (term "0,0"))
                                    (rule "add_zero_left" (formula "7") (term "0"))
                                    (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "2"))
                                    (rule "leq_literals" (formula "7") (term "0"))
                                    (builtin "One Step Simplification" (formula "7"))
                                    (rule "true_left" (formula "7"))
                                    (rule "seqGetAlphaCast" (formula "25") (term "0"))
                                    (rule "castedGetAny" (formula "25") (term "0"))
                                    (builtin "One Step Simplification" (formula "25"))
                                    (rule "true_left" (formula "25"))
                                    (rule "allLeft" (formula "18") (inst "t=Z(0(#))"))
                                    (rule "leq_literals" (formula "18") (term "1,0"))
                                    (builtin "One Step Simplification" (formula "18"))
                                    (rule "inEqSimp_homoInEq1" (formula "18") (term "1"))
                                    (rule "times_zero_2" (formula "18") (term "1,0,1"))
                                    (rule "add_zero_right" (formula "18") (term "0,1"))
                                    (rule "applyEq" (formula "18") (term "1,1,0") (ifseqformula "24"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1"))
                                    (rule "mul_literals" (formula "18") (term "1,1"))
                                    (rule "inEqSimp_contradInEq1" (formula "18") (term "1") (ifseqformula "2"))
                                    (rule "qeq_literals" (formula "18") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "18"))
                                    (rule "allLeft" (formula "17") (inst "t=Z(0(#))"))
                                    (rule "leq_literals" (formula "17") (term "1,0"))
                                    (builtin "One Step Simplification" (formula "17"))
                                    (rule "inEqSimp_homoInEq1" (formula "17") (term "1"))
                                    (rule "times_zero_2" (formula "17") (term "1,0,1"))
                                    (rule "add_zero_right" (formula "17") (term "0,1"))
                                    (rule "applyEq" (formula "17") (term "0,0,0") (ifseqformula "25"))
                                    (rule "replace_known_right" (formula "17") (term "0,0") (ifseqformula "41"))
                                    (builtin "One Step Simplification" (formula "17"))
                                    (rule "true_left" (formula "17"))
                                    (rule "allLeft" (formula "17") (inst "t=j_1_0"))
                                    (rule "applyEq" (formula "17") (term "0,0,0,0") (ifseqformula "4"))
                                    (rule "replace_known_right" (formula "17") (term "0,0,0") (ifseqformula "42"))
                                    (builtin "One Step Simplification" (formula "17"))
                                    (rule "true_left" (formula "17"))
                                    (rule "allLeft" (formula "33") (inst "t=j_1_0"))
                                    (rule "applyEq" (formula "33") (term "1,0,0,0") (ifseqformula "4"))
                                    (rule "inEqSimp_contradInEq1" (formula "33") (term "1,0") (ifseqformula "3"))
                                    (rule "qeq_literals" (formula "33") (term "0,1,0"))
                                    (builtin "One Step Simplification" (formula "33"))
                                    (rule "inEqSimp_contradInEq0" (formula "33") (term "1") (ifseqformula "1"))
                                    (rule "inEqSimp_homoInEq1" (formula "33") (term "0,1"))
                                    (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "33") (term "1,0,0,1"))
                                    (rule "mul_literals" (formula "33") (term "0,1,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "33") (term "0,0,1"))
                                    (rule "polySimp_addComm1" (formula "33") (term "0,0,0,1"))
                                    (rule "add_literals" (formula "33") (term "0,0,0,0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0,1"))
                                    (rule "add_literals" (formula "33") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "33") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "33") (term "0,0,1"))
                                    (rule "leq_literals" (formula "33") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "33"))
                                    (rule "pullOutSelect" (formula "33") (term "0") (inst "selectSK=IntNode_data_3"))
                                    (rule "simplifySelectOfAnon" (formula "33"))
                                    (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "43")) (ifInst ""  (formula "25")))
                                    (rule "eqSymm" (formula "34"))
                                    (rule "applyEqReverse" (formula "33") (term "1") (ifseqformula "34"))
                                    (rule "hideAuxiliaryEq" (formula "34"))
                                    (rule "elementOfUnion" (formula "33") (term "0,0"))
                                    (rule "elementOfInfiniteUnion" (formula "33") (term "1,0,0"))
                                    (builtin "One Step Simplification" (formula "33"))
                                    (rule "elementOfSingleton" (formula "33") (term "1,0,1,0,0"))
                                    (builtin "One Step Simplification" (formula "33"))
                                    (rule "eqSymm" (formula "33") (term "1,0,1,0,0"))
                                    (rule "elementOfSingleton" (formula "33") (term "0,0,0"))
                                    (builtin "One Step Simplification" (formula "33"))
                                    (rule "commute_and_2" (formula "33") (term "0,0,0"))
                                    (rule "commute_and" (formula "33") (term "0,0,0,0"))
                                    (rule "allLeft" (formula "34") (inst "t=i_2_0"))
                                    (rule "inEqSimp_homoInEq1" (formula "34") (term "1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,1"))
                                    (rule "add_literals" (formula "34") (term "1,1,0,1"))
                                    (rule "times_zero_1" (formula "34") (term "1,0,1"))
                                    (rule "add_zero_right" (formula "34") (term "0,1"))
                                    (rule "leq_literals" (formula "34") (term "1"))
                                    (builtin "One Step Simplification" (formula "34"))
                                    (rule "applyEq" (formula "34") (term "1,0,0") (ifseqformula "26"))
                                    (rule "replaceKnownSelect_taclet011101011111_22" (formula "34") (term "0,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet011101011111_23" (formula "34") (term "0,0"))
                                    (rule "applyEq" (formula "34") (term "1,0") (ifseqformula "9"))
                                    (rule "inEqSimp_contradInEq1" (formula "34") (term "1") (ifseqformula "2"))
                                    (rule "qeq_literals" (formula "34") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "34"))
                                    (rule "applyEq" (formula "33") (term "1") (ifseqformula "34"))
                                    (builtin "One Step Simplification" (formula "33"))
                                    (rule "eqSymm" (formula "33") (term "1"))
                                    (rule "allLeft" (formula "35") (inst "t=Z(0(#))"))
                                    (rule "leq_literals" (formula "35") (term "1,0"))
                                    (builtin "One Step Simplification" (formula "35"))
                                    (rule "inEqSimp_homoInEq1" (formula "35") (term "1"))
                                    (rule "times_zero_2" (formula "35") (term "1,0,1"))
                                    (rule "add_zero_right" (formula "35") (term "0,1"))
                                    (rule "applyEq" (formula "35") (term "1,0,0") (ifseqformula "24"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1"))
                                    (rule "mul_literals" (formula "35") (term "1,1"))
                                    (rule "inEqSimp_contradInEq1" (formula "35") (term "1") (ifseqformula "2"))
                                    (rule "qeq_literals" (formula "35") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "35"))
                                    (rule "pullOutSelect" (formula "35") (term "0") (inst "selectSK=IntNode_data_4"))
                                    (rule "simplifySelectOfAnon" (formula "35"))
                                    (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "44")) (ifInst ""  (formula "23")))
                                    (rule "eqSymm" (formula "36"))
                                    (rule "applyEqReverse" (formula "35") (term "1") (ifseqformula "36"))
                                    (rule "hideAuxiliaryEq" (formula "36"))
                                    (rule "elementOfUnion" (formula "35") (term "0,0"))
                                    (rule "elementOfInfiniteUnion" (formula "35") (term "1,0,0"))
                                    (builtin "One Step Simplification" (formula "35"))
                                    (rule "elementOfSingleton" (formula "35") (term "0,0,0"))
                                    (builtin "One Step Simplification" (formula "35"))
                                    (rule "elementOfSingleton" (formula "35") (term "1,0,0,0"))
                                    (builtin "One Step Simplification" (formula "35"))
                                    (rule "eqSymm" (formula "35") (term "1,0,0,0"))
                                    (rule "commute_and_2" (formula "35") (term "0,0,0"))
                                    (rule "commute_and" (formula "35") (term "0,0,0,0"))
                                    (rule "allLeft" (formula "36") (inst "t=Z(0(#))"))
                                    (rule "add_zero_right" (formula "36") (term "1,1,0,0"))
                                    (rule "leq_literals" (formula "36") (term "1,0"))
                                    (builtin "One Step Simplification" (formula "36"))
                                    (rule "inEqSimp_commuteGeq" (formula "36") (term "1"))
                                    (rule "applyEq" (formula "36") (term "1,0,0") (ifseqformula "24"))
                                    (rule "inEqSimp_contradInEq1" (formula "36") (term "1") (ifseqformula "2"))
                                    (rule "qeq_literals" (formula "36") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "36"))
                                    (rule "pullOutSelect" (formula "36") (term "0") (inst "selectSK=IntNode_next_2"))
                                    (rule "simplifySelectOfAnon" (formula "36"))
                                    (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "44")) (ifInst ""  (formula "23")))
                                    (rule "eqSymm" (formula "37"))
                                    (rule "applyEqReverse" (formula "36") (term "1") (ifseqformula "37"))
                                    (rule "hideAuxiliaryEq" (formula "37"))
                                    (rule "elementOfUnion" (formula "36") (term "0,0"))
                                    (rule "elementOfSingleton" (formula "36") (term "0,0,0"))
                                    (builtin "One Step Simplification" (formula "36"))
                                    (rule "elementOfInfiniteUnion" (formula "36") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "36"))
                                    (rule "elementOfSingleton" (formula "36") (term "1,0,0,0"))
                                    (builtin "One Step Simplification" (formula "36"))
                                    (rule "eqSymm" (formula "36"))
                                    (rule "allLeft" (formula "22") (inst "t=Z(0(#))"))
                                    (rule "add_zero_right" (formula "22") (term "1,1,0,0"))
                                    (rule "leq_literals" (formula "22") (term "1,0"))
                                    (builtin "One Step Simplification" (formula "22"))
                                    (rule "inEqSimp_commuteGeq" (formula "22") (term "1"))
                                    (rule "applyEq" (formula "22") (term "1,0") (ifseqformula "37"))
                                    (rule "applyEq" (formula "22") (term "1,0,0") (ifseqformula "25"))
                                    (builtin "One Step Simplification" (formula "22"))
                                    (rule "true_left" (formula "22"))
                                    (rule "allLeft" (formula "30") (inst "t=i_2_0"))
                                    (rule "inEqSimp_homoInEq1" (formula "30") (term "1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,1"))
                                    (rule "add_literals" (formula "30") (term "1,1,0,1"))
                                    (rule "times_zero_1" (formula "30") (term "1,0,1"))
                                    (rule "add_zero_right" (formula "30") (term "0,1"))
                                    (rule "leq_literals" (formula "30") (term "1"))
                                    (builtin "One Step Simplification" (formula "30"))
                                    (rule "applyEq" (formula "30") (term "0,0,0") (ifseqformula "9"))
                                    (builtin "One Step Simplification" (formula "30"))
                                    (rule "true_left" (formula "30"))
                                    (rule "allLeft" (formula "30") (inst "t=Z(0(#))"))
                                    (rule "leq_literals" (formula "30") (term "1,0"))
                                    (builtin "One Step Simplification" (formula "30"))
                                    (rule "inEqSimp_homoInEq1" (formula "30") (term "1"))
                                    (rule "times_zero_2" (formula "30") (term "1,0,1"))
                                    (rule "add_zero_right" (formula "30") (term "0,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1"))
                                    (rule "mul_literals" (formula "30") (term "1,1"))
                                    (rule "inEqSimp_contradInEq1" (formula "30") (term "1") (ifseqformula "2"))
                                    (rule "qeq_literals" (formula "30") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "30"))
                                    (rule "notLeft" (formula "30"))
                                    (rule "allLeft" (formula "31") (inst "t=Z(0(#))"))
                                    (rule "typeEqDerived2" (formula "31") (term "0,0,0") (ifseqformula "33"))
                                    (builtin "One Step Simplification" (formula "31"))
                                    (rule "true_left" (formula "31"))
                                    (rule "allLeft" (formula "19") (inst "t=i_2_0"))
                                    (rule "inEqSimp_homoInEq1" (formula "19") (term "1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,1"))
                                    (rule "add_literals" (formula "19") (term "1,1,0,1"))
                                    (rule "times_zero_1" (formula "19") (term "1,0,1"))
                                    (rule "add_zero_right" (formula "19") (term "0,1"))
                                    (rule "leq_literals" (formula "19") (term "1"))
                                    (builtin "One Step Simplification" (formula "19"))
                                    (rule "applyEq" (formula "19") (term "1,1,0") (ifseqformula "27"))
                                    (rule "inEqSimp_contradInEq1" (formula "19") (term "1") (ifseqformula "2"))
                                    (rule "qeq_literals" (formula "19") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "19"))
                                    (rule "allLeft" (formula "20") (inst "t=j_1_0"))
                                    (rule "applyEq" (formula "20") (term "1,1,0,0") (ifseqformula "4"))
                                    (rule "inEqSimp_contradInEq1" (formula "20") (term "1,0") (ifseqformula "3"))
                                    (rule "qeq_literals" (formula "20") (term "0,1,0"))
                                    (builtin "One Step Simplification" (formula "20"))
                                    (rule "inEqSimp_contradInEq0" (formula "20") (term "1") (ifseqformula "1"))
                                    (rule "inEqSimp_homoInEq1" (formula "20") (term "0,1"))
                                    (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1"))
                                    (rule "mul_literals" (formula "20") (term "0,1,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "20") (term "0,0,1"))
                                    (rule "polySimp_addComm1" (formula "20") (term "0,0,0,1"))
                                    (rule "add_literals" (formula "20") (term "0,0,0,0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,1"))
                                    (rule "add_literals" (formula "20") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "20") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "20") (term "0,0,1"))
                                    (rule "leq_literals" (formula "20") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "20"))
                                    (rule "allLeft" (formula "33") (inst "t=i_2_0"))
                                    (rule "typeEqDerived" (formula "33") (term "0,0,0") (ifseqformula "9"))
                                    (builtin "One Step Simplification" (formula "33"))
                                    (rule "true_left" (formula "33"))
                                    (rule "allLeft" (formula "24") (inst "t=j_1_0"))
                                    (rule "applyEq" (formula "24") (term "1,0,0,0") (ifseqformula "4"))
                                    (rule "eqSymm" (formula "24") (term "0,0"))
                                    (rule "applyEq" (formula "24") (term "1,0,0") (ifseqformula "23"))
                                    (rule "inEqSimp_contradInEq1" (formula "24") (term "1,0") (ifseqformula "3"))
                                    (rule "qeq_literals" (formula "24") (term "0,1,0"))
                                    (builtin "One Step Simplification" (formula "24"))
                                    (rule "inEqSimp_contradInEq0" (formula "24") (term "1") (ifseqformula "1"))
                                    (rule "inEqSimp_homoInEq1" (formula "24") (term "0,1"))
                                    (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1"))
                                    (rule "mul_literals" (formula "24") (term "0,1,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "24") (term "0,0,1"))
                                    (rule "polySimp_addComm0" (formula "24") (term "0,0,0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,1"))
                                    (rule "add_literals" (formula "24") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "24") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "24") (term "0,0,1"))
                                    (rule "leq_literals" (formula "24") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "24"))
                                    (rule "allLeft" (formula "40") (inst "t=j_1_0"))
                                    (rule "applyEq" (formula "40") (term "1,0,0") (ifseqformula "24"))
                                    (rule "applyEq" (formula "40") (term "1,0,0,0") (ifseqformula "4"))
                                    (rule "inEqSimp_contradInEq0" (formula "40") (term "1") (ifseqformula "1"))
                                    (rule "inEqSimp_homoInEq1" (formula "40") (term "0,1"))
                                    (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "40") (term "1,0,0,1"))
                                    (rule "mul_literals" (formula "40") (term "0,1,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "40") (term "0,0,1"))
                                    (rule "polySimp_addComm0" (formula "40") (term "0,0,0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "40") (term "0,0,1"))
                                    (rule "add_literals" (formula "40") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "40") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "40") (term "0,0,1"))
                                    (rule "leq_literals" (formula "40") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "40"))
                                    (rule "inEqSimp_contradInEq1" (formula "40") (term "1") (ifseqformula "3"))
                                    (rule "qeq_literals" (formula "40") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "40"))
                                    (rule "pullOutSelect" (formula "40") (term "0") (inst "selectSK=IntNode_next_3"))
                                    (rule "simplifySelectOfAnon" (formula "40"))
                                    (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "50")) (ifInst ""  (formula "28")))
                                    (rule "applyEqRigid" (formula "40") (term "1") (ifseqformula "41"))
                                    (rule "ifEqualsNull" (formula "40"))
                                    (rule "replace_known_left" (formula "40") (term "1,1") (ifseqformula "23"))
                                    (builtin "One Step Simplification" (formula "40"))
                                    (rule "elementOfUnion" (formula "40") (term "0,1"))
                                    (rule "elementOfSingleton" (formula "40") (term "0,0,1"))
                                    (builtin "One Step Simplification" (formula "40"))
                                    (rule "elementOfInfiniteUnion" (formula "40") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "40"))
                                    (rule "elementOfSingleton" (formula "40") (term "1,0,0,1"))
                                    (builtin "One Step Simplification" (formula "40"))
                                    (rule "true_left" (formula "40"))
                                    (rule "allLeft" (formula "17") (inst "t=i_2_0"))
                                    (rule "inEqSimp_homoInEq1" (formula "17") (term "1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,1"))
                                    (rule "add_literals" (formula "17") (term "1,1,0,1"))
                                    (rule "times_zero_1" (formula "17") (term "1,0,1"))
                                    (rule "add_zero_right" (formula "17") (term "0,1"))
                                    (rule "leq_literals" (formula "17") (term "1"))
                                    (builtin "One Step Simplification" (formula "17"))
                                    (rule "applyEq" (formula "17") (term "0,0,0") (ifseqformula "30"))
                                    (rule "replace_known_right" (formula "17") (term "0,0") (ifseqformula "50"))
                                    (builtin "One Step Simplification" (formula "17"))
                                    (rule "true_left" (formula "17"))
                                    (rule "ifthenelse_split" (formula "35") (term "0"))
                                    (branch "∃ int j; ( (IntNode)self.nodeseq[j] = self.first ∧ j ≥ 0 ∧ j ≤ i_2_0) TRUE"
                                       (rule "exLeft" (formula "35") (inst "sk=j_1"))
                                       (rule "andLeft" (formula "35"))
                                       (rule "andLeft" (formula "35"))
                                       (rule "eqSymm" (formula "38"))
                                       (rule "applyEq" (formula "49") (term "0") (ifseqformula "38"))
                                       (builtin "One Step Simplification" (formula "49"))
                                       (rule "false_right" (formula "49"))
                                       (rule "inEqSimp_exactShadow3" (formula "36") (ifseqformula "37"))
                                       (rule "mul_literals" (formula "36") (term "0,0"))
                                       (rule "add_zero_left" (formula "36") (term "0"))
                                       (rule "inEqSimp_subsumption1" (formula "36") (ifseqformula "2"))
                                       (rule "leq_literals" (formula "36") (term "0"))
                                       (builtin "One Step Simplification" (formula "36"))
                                       (rule "true_left" (formula "36"))
                                       (rule "allLeft" (formula "17") (inst "t=add(Z(1(#)), j_1_0)"))
                                       (rule "replace_known_left" (formula "17") (term "0,0,0") (ifseqformula "25"))
                                       (builtin "One Step Simplification" (formula "17"))
                                       (rule "inEqSimp_homoInEq1" (formula "17") (term "1"))
                                       (rule "polySimp_mulComm0" (formula "17") (term "1,0,1"))
                                       (rule "polySimp_rightDist" (formula "17") (term "1,0,1"))
                                       (rule "mul_literals" (formula "17") (term "0,1,0,1"))
                                       (rule "polySimp_addAssoc" (formula "17") (term "0,1"))
                                       (rule "polySimp_addComm1" (formula "17") (term "0,0,1"))
                                       (rule "add_literals" (formula "17") (term "0,0,0,1"))
                                       (rule "add_zero_left" (formula "17") (term "0,0,1"))
                                       (rule "inEqSimp_homoInEq0" (formula "17") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "17") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "17") (term "1,0,0"))
                                       (rule "mul_literals" (formula "17") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "17") (term "0,0"))
                                       (rule "add_literals" (formula "17") (term "0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "17") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "17") (term "0,1"))
                                       (rule "polySimp_elimOne" (formula "17") (term "0,1"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "17") (term "0"))
                                       (rule "polySimp_mulLiterals" (formula "17") (term "0,0"))
                                       (rule "polySimp_elimOne" (formula "17") (term "0,0"))
                                       (rule "inEqSimp_contradInEq1" (formula "17") (term "0") (ifseqformula "3"))
                                       (rule "qeq_literals" (formula "17") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "17"))
                                       (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "17"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "inEqSimp_homoInEq1" (formula "1"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                       (rule "mul_literals" (formula "1") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                       (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                       (rule "add_literals" (formula "1") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "1") (term "1,0"))
                                       (rule "add_literals" (formula "1") (term "0"))
                                       (rule "leq_literals" (formula "1"))
                                       (rule "closeFalse" (formula "1"))
                                    )
                                    (branch "∃ int j; ( (IntNode)self.nodeseq[j] = self.first ∧ j ≥ 0 ∧ j ≤ i_2_0) FALSE"
                                       (rule "eqSymm" (formula "35"))
                                       (rule "applyEq" (formula "47") (term "0") (ifseqformula "35"))
                                       (builtin "One Step Simplification" (formula "47"))
                                       (rule "false_right" (formula "47"))
                                       (rule "nnf_ex2all" (formula "46"))
                                       (rule "nnf_notAnd" (formula "1") (term "0"))
                                       (rule "inEqSimp_notLeq" (formula "1") (term "1,0"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,1,0"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0"))
                                       (rule "mul_literals" (formula "1") (term "0,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0"))
                                       (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_notGeq" (formula "1") (term "1,0,0"))
                                       (rule "times_zero_1" (formula "1") (term "1,0,0,1,0,0"))
                                       (rule "add_zero_right" (formula "1") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1,0,0"))
                                       (rule "mul_literals" (formula "1") (term "1,1,0,0"))
                                       (rule "allLeft" (formula "18") (inst "t=add(Z(1(#)), j_1_0)"))
                                       (rule "replace_known_left" (formula "18") (term "0,0,0") (ifseqformula "26"))
                                       (builtin "One Step Simplification" (formula "18"))
                                       (rule "inEqSimp_homoInEq0" (formula "18") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "18") (term "1,0,0"))
                                       (rule "mul_literals" (formula "18") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "18") (term "0,0"))
                                       (rule "add_literals" (formula "18") (term "0,0,0"))
                                       (rule "inEqSimp_homoInEq1" (formula "18") (term "1"))
                                       (rule "polySimp_mulComm0" (formula "18") (term "1,0,1"))
                                       (rule "polySimp_rightDist" (formula "18") (term "1,0,1"))
                                       (rule "mul_literals" (formula "18") (term "0,1,0,1"))
                                       (rule "polySimp_addAssoc" (formula "18") (term "0,1"))
                                       (rule "polySimp_addComm1" (formula "18") (term "0,0,1"))
                                       (rule "add_literals" (formula "18") (term "0,0,0,1"))
                                       (rule "add_zero_left" (formula "18") (term "0,0,1"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "18") (term "0"))
                                       (rule "polySimp_mulLiterals" (formula "18") (term "0,0"))
                                       (rule "polySimp_elimOne" (formula "18") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "18") (term "0,1"))
                                       (rule "polySimp_elimOne" (formula "18") (term "0,1"))
                                       (rule "inEqSimp_contradInEq1" (formula "18") (term "0") (ifseqformula "4"))
                                       (rule "qeq_literals" (formula "18") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "18"))
                                       (rule "inEqSimp_contradInEq0" (formula "18") (ifseqformula "2"))
                                       (rule "andLeft" (formula "18"))
                                       (rule "inEqSimp_homoInEq1" (formula "18"))
                                       (rule "polySimp_mulComm0" (formula "18") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "18") (term "1,0"))
                                       (rule "mul_literals" (formula "18") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "18") (term "0"))
                                       (rule "polySimp_addComm0" (formula "18") (term "0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "18") (term "0"))
                                       (rule "add_literals" (formula "18") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "18") (term "1,0"))
                                       (rule "add_zero_right" (formula "18") (term "0"))
                                       (rule "leq_literals" (formula "18"))
                                       (rule "closeFalse" (formula "18"))
                                    )
                                 )
                                 (branch "∃ int j; ( (IntNode)self.nodeseq[j] = self.last ∧ j ≥ 0 ∧ j ≤ i_2_0) FALSE"
                                    (rule "eqSymm" (formula "6"))
                                    (rule "nnf_ex2all" (formula "35"))
                                    (rule "nnf_notAnd" (formula "1") (term "0"))
                                    (rule "inEqSimp_notLeq" (formula "1") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,1,0"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0"))
                                    (rule "mul_literals" (formula "1") (term "0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0"))
                                    (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "1") (term "1,0,0"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0,1,0,0"))
                                    (rule "add_zero_right" (formula "1") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1,0,0"))
                                    (rule "mul_literals" (formula "1") (term "1,1,0,0"))
                                    (rule "seqGetAlphaCast" (formula "23") (term "0"))
                                    (rule "castedGetAny" (formula "23") (term "0"))
                                    (builtin "One Step Simplification" (formula "23"))
                                    (rule "true_left" (formula "23"))
                                    (rule "allLeft" (formula "27") (inst "t=i_2_0"))
                                    (rule "inEqSimp_homoInEq1" (formula "27") (term "1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,1"))
                                    (rule "add_literals" (formula "27") (term "1,1,0,1"))
                                    (rule "times_zero_1" (formula "27") (term "1,0,1"))
                                    (rule "add_zero_right" (formula "27") (term "0,1"))
                                    (rule "leq_literals" (formula "27") (term "1"))
                                    (builtin "One Step Simplification" (formula "27"))
                                    (rule "applyEq" (formula "27") (term "0,0,0") (ifseqformula "7"))
                                    (builtin "One Step Simplification" (formula "27"))
                                    (rule "true_left" (formula "27"))
                                    (rule "allLeft" (formula "15") (inst "t=j_1_0"))
                                    (rule "applyEq" (formula "15") (term "0,0,0,0") (ifseqformula "5"))
                                    (rule "replace_known_right" (formula "15") (term "0,0,0") (ifseqformula "39"))
                                    (builtin "One Step Simplification" (formula "15"))
                                    (rule "true_left" (formula "15"))
                                    (rule "allLeft" (formula "15") (inst "t=Z(0(#))"))
                                    (rule "leq_literals" (formula "15") (term "1,0"))
                                    (builtin "One Step Simplification" (formula "15"))
                                    (rule "inEqSimp_homoInEq1" (formula "15") (term "1"))
                                    (rule "times_zero_2" (formula "15") (term "1,0,1"))
                                    (rule "add_zero_right" (formula "15") (term "0,1"))
                                    (rule "applyEq" (formula "15") (term "0,0,0") (ifseqformula "22"))
                                    (rule "replace_known_right" (formula "15") (term "0,0") (ifseqformula "38"))
                                    (builtin "One Step Simplification" (formula "15"))
                                    (rule "true_left" (formula "15"))
                                    (rule "allLeft" (formula "27") (inst "t=Z(0(#))"))
                                    (rule "leq_literals" (formula "27") (term "1,0"))
                                    (builtin "One Step Simplification" (formula "27"))
                                    (rule "inEqSimp_homoInEq1" (formula "27") (term "1"))
                                    (rule "times_zero_2" (formula "27") (term "1,0,1"))
                                    (rule "add_zero_right" (formula "27") (term "0,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1"))
                                    (rule "mul_literals" (formula "27") (term "1,1"))
                                    (rule "inEqSimp_contradInEq1" (formula "27") (term "1") (ifseqformula "3"))
                                    (rule "qeq_literals" (formula "27") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "27"))
                                    (rule "notLeft" (formula "27"))
                                    (rule "allLeft" (formula "15") (inst "t=i_2_0"))
                                    (rule "inEqSimp_homoInEq1" (formula "15") (term "1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,1"))
                                    (rule "add_literals" (formula "15") (term "1,1,0,1"))
                                    (rule "times_zero_1" (formula "15") (term "1,0,1"))
                                    (rule "add_zero_right" (formula "15") (term "0,1"))
                                    (rule "leq_literals" (formula "15") (term "1"))
                                    (builtin "One Step Simplification" (formula "15"))
                                    (rule "applyEq" (formula "15") (term "0,0,0") (ifseqformula "24"))
                                    (rule "replace_known_right" (formula "15") (term "0,0") (ifseqformula "40"))
                                    (builtin "One Step Simplification" (formula "15"))
                                    (rule "true_left" (formula "15"))
                                    (rule "allLeft" (formula "28") (inst "t=i_2_0"))
                                    (rule "typeEqDerived" (formula "28") (term "0,0,0") (ifseqformula "7"))
                                    (builtin "One Step Simplification" (formula "28"))
                                    (rule "true_left" (formula "28"))
                                    (rule "allLeft" (formula "16") (inst "t=Z(0(#))"))
                                    (rule "leq_literals" (formula "16") (term "1,0"))
                                    (builtin "One Step Simplification" (formula "16"))
                                    (rule "inEqSimp_homoInEq1" (formula "16") (term "1"))
                                    (rule "times_zero_2" (formula "16") (term "1,0,1"))
                                    (rule "add_zero_right" (formula "16") (term "0,1"))
                                    (rule "applyEq" (formula "16") (term "1,1,0") (ifseqformula "22"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1"))
                                    (rule "mul_literals" (formula "16") (term "1,1"))
                                    (rule "inEqSimp_contradInEq1" (formula "16") (term "1") (ifseqformula "3"))
                                    (rule "qeq_literals" (formula "16") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "16"))
                                    (rule "allLeft" (formula "31") (inst "t=Z(0(#))"))
                                    (rule "leq_literals" (formula "31") (term "1,0"))
                                    (builtin "One Step Simplification" (formula "31"))
                                    (rule "inEqSimp_homoInEq1" (formula "31") (term "1"))
                                    (rule "times_zero_2" (formula "31") (term "1,0,1"))
                                    (rule "add_zero_right" (formula "31") (term "0,1"))
                                    (rule "applyEq" (formula "31") (term "1,0,0") (ifseqformula "22"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1"))
                                    (rule "mul_literals" (formula "31") (term "1,1"))
                                    (rule "inEqSimp_contradInEq1" (formula "31") (term "1") (ifseqformula "3"))
                                    (rule "qeq_literals" (formula "31") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "31"))
                                    (rule "pullOutSelect" (formula "31") (term "0") (inst "selectSK=IntNode_data_3"))
                                    (rule "simplifySelectOfAnon" (formula "31"))
                                    (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "41")) (ifInst ""  (formula "21")))
                                    (rule "eqSymm" (formula "32"))
                                    (rule "applyEqReverse" (formula "31") (term "1") (ifseqformula "32"))
                                    (rule "hideAuxiliaryEq" (formula "32"))
                                    (rule "elementOfUnion" (formula "31") (term "0,0"))
                                    (rule "elementOfSingleton" (formula "31") (term "0,0,0"))
                                    (builtin "One Step Simplification" (formula "31"))
                                    (rule "elementOfInfiniteUnion" (formula "31") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "31"))
                                    (rule "elementOfSingleton" (formula "31") (term "1,0,0,0"))
                                    (builtin "One Step Simplification" (formula "31"))
                                    (rule "eqSymm" (formula "31") (term "1,0,0,0"))
                                    (rule "commute_and_2" (formula "31") (term "0,0,0"))
                                    (rule "commute_and" (formula "31") (term "0,0,0,0"))
                                    (rule "allLeft" (formula "31") (inst "t=j_1_0"))
                                    (rule "applyEq" (formula "31") (term "1,0,0,0") (ifseqformula "5"))
                                    (rule "inEqSimp_contradInEq0" (formula "31") (term "1") (ifseqformula "2"))
                                    (rule "inEqSimp_homoInEq1" (formula "31") (term "0,1"))
                                    (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1"))
                                    (rule "mul_literals" (formula "31") (term "0,1,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "31") (term "0,0,1"))
                                    (rule "polySimp_addComm1" (formula "31") (term "0,0,0,1"))
                                    (rule "add_literals" (formula "31") (term "0,0,0,0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0,1"))
                                    (rule "add_literals" (formula "31") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "31") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "31") (term "0,0,1"))
                                    (rule "leq_literals" (formula "31") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "31"))
                                    (rule "inEqSimp_contradInEq1" (formula "31") (term "1") (ifseqformula "4"))
                                    (rule "qeq_literals" (formula "31") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "31"))
                                    (rule "pullOutSelect" (formula "31") (term "0") (inst "selectSK=IntNode_data_4"))
                                    (rule "simplifySelectOfAnon" (formula "31"))
                                    (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "42")) (ifInst ""  (formula "23")))
                                    (rule "eqSymm" (formula "32"))
                                    (rule "applyEqReverse" (formula "31") (term "1") (ifseqformula "32"))
                                    (rule "hideAuxiliaryEq" (formula "32"))
                                    (rule "elementOfUnion" (formula "31") (term "0,0"))
                                    (rule "elementOfSingleton" (formula "31") (term "0,0,0"))
                                    (builtin "One Step Simplification" (formula "31"))
                                    (rule "elementOfInfiniteUnion" (formula "31") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "31"))
                                    (rule "elementOfSingleton" (formula "31") (term "1,0,0,0"))
                                    (builtin "One Step Simplification" (formula "31"))
                                    (rule "eqSymm" (formula "31") (term "1,0,0,0"))
                                    (rule "commute_and_2" (formula "31") (term "0,0,0"))
                                    (rule "allLeft" (formula "32") (inst "t=i_2_0"))
                                    (rule "inEqSimp_homoInEq1" (formula "32") (term "1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,1"))
                                    (rule "add_literals" (formula "32") (term "1,1,0,1"))
                                    (rule "times_zero_1" (formula "32") (term "1,0,1"))
                                    (rule "add_zero_right" (formula "32") (term "0,1"))
                                    (rule "leq_literals" (formula "32") (term "1"))
                                    (builtin "One Step Simplification" (formula "32"))
                                    (rule "applyEq" (formula "32") (term "1,0,0") (ifseqformula "24"))
                                    (rule "replaceKnownSelect_taclet111101011111_24" (formula "32") (term "0,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet111101011111_25" (formula "32") (term "0,0"))
                                    (rule "applyEq" (formula "32") (term "1,0") (ifseqformula "7"))
                                    (rule "inEqSimp_contradInEq1" (formula "32") (term "1") (ifseqformula "3"))
                                    (rule "qeq_literals" (formula "32") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "32"))
                                    (rule "applyEq" (formula "31") (term "1") (ifseqformula "32"))
                                    (builtin "One Step Simplification" (formula "31"))
                                    (rule "allLeft" (formula "34") (inst "t=Z(0(#))"))
                                    (rule "add_zero_right" (formula "34") (term "1,1,0,0"))
                                    (rule "leq_literals" (formula "34") (term "1,0"))
                                    (builtin "One Step Simplification" (formula "34"))
                                    (rule "inEqSimp_commuteGeq" (formula "34") (term "1"))
                                    (rule "applyEq" (formula "34") (term "1,0,0") (ifseqformula "22"))
                                    (rule "inEqSimp_contradInEq1" (formula "34") (term "1") (ifseqformula "3"))
                                    (rule "qeq_literals" (formula "34") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "34"))
                                    (rule "pullOutSelect" (formula "34") (term "0") (inst "selectSK=IntNode_next_2"))
                                    (rule "simplifySelectOfAnon" (formula "34"))
                                    (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "43")) (ifInst ""  (formula "21")))
                                    (rule "eqSymm" (formula "35"))
                                    (rule "applyEqReverse" (formula "34") (term "1") (ifseqformula "35"))
                                    (rule "hideAuxiliaryEq" (formula "35"))
                                    (rule "elementOfUnion" (formula "34") (term "0,0"))
                                    (rule "elementOfSingleton" (formula "34") (term "0,0,0"))
                                    (builtin "One Step Simplification" (formula "34"))
                                    (rule "elementOfInfiniteUnion" (formula "34") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "34"))
                                    (rule "elementOfSingleton" (formula "34") (term "1,0,0,0"))
                                    (builtin "One Step Simplification" (formula "34"))
                                    (rule "eqSymm" (formula "34"))
                                    (rule "allLeft" (formula "20") (inst "t=Z(0(#))"))
                                    (rule "add_zero_right" (formula "20") (term "1,1,0,0"))
                                    (rule "leq_literals" (formula "20") (term "1,0"))
                                    (builtin "One Step Simplification" (formula "20"))
                                    (rule "inEqSimp_commuteGeq" (formula "20") (term "1"))
                                    (rule "applyEq" (formula "20") (term "1,0") (ifseqformula "35"))
                                    (rule "applyEq" (formula "20") (term "1,0,0") (ifseqformula "23"))
                                    (builtin "One Step Simplification" (formula "20"))
                                    (rule "true_left" (formula "20"))
                                    (rule "allLeft" (formula "29") (inst "t=Z(0(#))"))
                                    (rule "typeEqDerived2" (formula "29") (term "0,0,0") (ifseqformula "31"))
                                    (builtin "One Step Simplification" (formula "29"))
                                    (rule "true_left" (formula "29"))
                                    (rule "allLeft" (formula "20") (inst "t=j_1_0"))
                                    (rule "applyEq" (formula "20") (term "1,0,0,0") (ifseqformula "5"))
                                    (rule "eqSymm" (formula "20") (term "0,0"))
                                    (rule "applyEq" (formula "20") (term "1,0,0") (ifseqformula "19"))
                                    (rule "inEqSimp_contradInEq1" (formula "20") (term "1,0") (ifseqformula "4"))
                                    (rule "qeq_literals" (formula "20") (term "0,1,0"))
                                    (builtin "One Step Simplification" (formula "20"))
                                    (rule "inEqSimp_contradInEq0" (formula "20") (term "1") (ifseqformula "2"))
                                    (rule "inEqSimp_homoInEq1" (formula "20") (term "0,1"))
                                    (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1"))
                                    (rule "mul_literals" (formula "20") (term "0,1,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "20") (term "0,0,1"))
                                    (rule "polySimp_addComm0" (formula "20") (term "0,0,0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,1"))
                                    (rule "add_literals" (formula "20") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "20") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "20") (term "0,0,1"))
                                    (rule "leq_literals" (formula "20") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "20"))
                                    (rule "allLeft" (formula "36") (inst "t=j_1_0"))
                                    (rule "applyEq" (formula "36") (term "1,0,0") (ifseqformula "20"))
                                    (rule "applyEq" (formula "36") (term "1,0,0,0") (ifseqformula "5"))
                                    (rule "inEqSimp_contradInEq0" (formula "36") (term "1") (ifseqformula "2"))
                                    (rule "inEqSimp_homoInEq1" (formula "36") (term "0,1"))
                                    (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "36") (term "1,0,0,1"))
                                    (rule "mul_literals" (formula "36") (term "0,1,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "36") (term "0,0,1"))
                                    (rule "polySimp_addComm0" (formula "36") (term "0,0,0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0,1"))
                                    (rule "add_literals" (formula "36") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "36") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "36") (term "0,0,1"))
                                    (rule "leq_literals" (formula "36") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "36"))
                                    (rule "inEqSimp_contradInEq1" (formula "36") (term "1") (ifseqformula "4"))
                                    (rule "qeq_literals" (formula "36") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "36"))
                                    (rule "pullOutSelect" (formula "36") (term "0") (inst "selectSK=IntNode_next_3"))
                                    (rule "simplifySelectOfAnon" (formula "36"))
                                    (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "46")) (ifInst ""  (formula "24")))
                                    (rule "applyEq" (formula "36") (term "2,0") (ifseqformula "19"))
                                    (rule "applyEq" (formula "36") (term "1") (ifseqformula "37"))
                                    (builtin "One Step Simplification" (formula "36"))
                                    (rule "elementOfUnion" (formula "36") (term "0,0"))
                                    (rule "elementOfInfiniteUnion" (formula "36") (term "1,0,0"))
                                    (builtin "One Step Simplification" (formula "36"))
                                    (rule "elementOfSingleton" (formula "36") (term "1,0,1,0,0"))
                                    (builtin "One Step Simplification" (formula "36"))
                                    (rule "elementOfSingleton" (formula "36") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "36"))
                                    (rule "true_left" (formula "36"))
                                    (rule "allLeft" (formula "17") (inst "t=i_2_0"))
                                    (rule "inEqSimp_homoInEq1" (formula "17") (term "1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,1"))
                                    (rule "add_literals" (formula "17") (term "1,1,0,1"))
                                    (rule "times_zero_1" (formula "17") (term "1,0,1"))
                                    (rule "add_zero_right" (formula "17") (term "0,1"))
                                    (rule "leq_literals" (formula "17") (term "1"))
                                    (builtin "One Step Simplification" (formula "17"))
                                    (rule "applyEq" (formula "17") (term "1,1,0") (ifseqformula "26"))
                                    (rule "inEqSimp_contradInEq1" (formula "17") (term "1") (ifseqformula "3"))
                                    (rule "qeq_literals" (formula "17") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "17"))
                                    (rule "allLeft" (formula "18") (inst "t=j_1_0"))
                                    (rule "applyEq" (formula "18") (term "1,1,0,0") (ifseqformula "5"))
                                    (rule "inEqSimp_contradInEq0" (formula "18") (term "1") (ifseqformula "2"))
                                    (rule "inEqSimp_homoInEq1" (formula "18") (term "0,1"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1"))
                                    (rule "mul_literals" (formula "18") (term "0,1,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "18") (term "0,0,1"))
                                    (rule "polySimp_addComm1" (formula "18") (term "0,0,0,1"))
                                    (rule "add_literals" (formula "18") (term "0,0,0,0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1"))
                                    (rule "add_literals" (formula "18") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "18") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "18") (term "0,0,1"))
                                    (rule "leq_literals" (formula "18") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "18"))
                                    (rule "inEqSimp_contradInEq1" (formula "18") (term "1") (ifseqformula "4"))
                                    (rule "qeq_literals" (formula "18") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "18"))
                                    (rule "ifthenelse_split" (formula "33") (term "0"))
                                    (branch "∃ int j; ( (IntNode)self.nodeseq[j] = self.first ∧ j ≥ 0 ∧ j ≤ i_2_0) TRUE"
                                       (rule "exLeft" (formula "33") (inst "sk=j_0"))
                                       (rule "andLeft" (formula "33"))
                                       (rule "andLeft" (formula "33"))
                                       (rule "eqSymm" (formula "36"))
                                       (rule "applyEq" (formula "47") (term "0") (ifseqformula "36"))
                                       (builtin "One Step Simplification" (formula "47"))
                                       (rule "false_right" (formula "47"))
                                       (rule "inEqSimp_exactShadow3" (formula "34") (ifseqformula "35"))
                                       (rule "times_zero_1" (formula "34") (term "0,0"))
                                       (rule "add_zero_left" (formula "34") (term "0"))
                                       (rule "inEqSimp_subsumption1" (formula "34") (ifseqformula "3"))
                                       (rule "leq_literals" (formula "34") (term "0"))
                                       (builtin "One Step Simplification" (formula "34"))
                                       (rule "true_left" (formula "34"))
                                       (rule "allLeft" (formula "1") (inst "t=i_2_0"))
                                       (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "28"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "inEqSimp_homoInEq1" (formula "1") (term "1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,1"))
                                       (rule "add_literals" (formula "1") (term "1,1,0,1"))
                                       (rule "times_zero_1" (formula "1") (term "1,0,1"))
                                       (rule "add_zero_right" (formula "1") (term "0,1"))
                                       (rule "leq_literals" (formula "1") (term "1"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "allLeft" (formula "2") (inst "t=j_1_0"))
                                       (rule "replace_known_left" (formula "2") (term "0,0,0") (ifseqformula "7"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "inEqSimp_contradInEq0" (formula "2") (term "1") (ifseqformula "4"))
                                       (rule "inEqSimp_homoInEq1" (formula "2") (term "0,1"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1"))
                                       (rule "polySimp_rightDist" (formula "2") (term "1,0,0,1"))
                                       (rule "mul_literals" (formula "2") (term "0,1,0,0,1"))
                                       (rule "polySimp_addAssoc" (formula "2") (term "0,0,1"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0,0,0,1"))
                                       (rule "add_literals" (formula "2") (term "0,0,0,0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,1"))
                                       (rule "add_literals" (formula "2") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "2") (term "1,0,0,1"))
                                       (rule "add_zero_right" (formula "2") (term "0,0,1"))
                                       (rule "leq_literals" (formula "2") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "5"))
                                       (rule "qeq_literals" (formula "1") (term "0"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "closeFalse" (formula "1"))
                                    )
                                    (branch "∃ int j; ( (IntNode)self.nodeseq[j] = self.first ∧ j ≥ 0 ∧ j ≤ i_2_0) FALSE"
                                       (rule "eqSymm" (formula "33"))
                                       (rule "applyEq" (formula "45") (term "0") (ifseqformula "33"))
                                       (builtin "One Step Simplification" (formula "45"))
                                       (rule "false_right" (formula "45"))
                                       (rule "nnf_ex2all" (formula "44"))
                                       (rule "nnf_notAnd" (formula "1") (term "0"))
                                       (rule "inEqSimp_notLeq" (formula "1") (term "1,0"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,1,0"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,1,0"))
                                       (rule "mul_literals" (formula "1") (term "0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0"))
                                       (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_notGeq" (formula "1") (term "1,0,0"))
                                       (rule "times_zero_1" (formula "1") (term "1,0,0,1,0,0"))
                                       (rule "add_zero_right" (formula "1") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1,0,0"))
                                       (rule "mul_literals" (formula "1") (term "1,1,0,0"))
                                       (rule "allLeft" (formula "2") (inst "t=i_2_0"))
                                       (rule "replace_known_left" (formula "2") (term "0,0,0") (ifseqformula "29"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "inEqSimp_homoInEq1" (formula "2") (term "1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,1"))
                                       (rule "add_literals" (formula "2") (term "1,1,0,1"))
                                       (rule "times_zero_1" (formula "2") (term "1,0,1"))
                                       (rule "add_literals" (formula "2") (term "0,1"))
                                       (rule "leq_literals" (formula "2") (term "1"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "allLeft" (formula "3") (inst "t=j_1_0"))
                                       (rule "replace_known_left" (formula "3") (term "0,0,0") (ifseqformula "8"))
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "inEqSimp_contradInEq0" (formula "3") (term "1") (ifseqformula "5"))
                                       (rule "inEqSimp_homoInEq1" (formula "3") (term "0,1"))
                                       (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1"))
                                       (rule "polySimp_rightDist" (formula "3") (term "1,0,0,1"))
                                       (rule "mul_literals" (formula "3") (term "0,1,0,0,1"))
                                       (rule "polySimp_addAssoc" (formula "3") (term "0,0,1"))
                                       (rule "polySimp_addComm1" (formula "3") (term "0,0,0,1"))
                                       (rule "add_literals" (formula "3") (term "0,0,0,0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0,1"))
                                       (rule "add_literals" (formula "3") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "3") (term "1,0,0,1"))
                                       (rule "add_zero_right" (formula "3") (term "0,0,1"))
                                       (rule "leq_literals" (formula "3") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "6"))
                                       (rule "qeq_literals" (formula "2") (term "0"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "closeFalse" (formula "2"))
                                    )
                                 )
                              )
                           )
                        )
                     )
                     (branch "self.size = 1 + i_2_0 FALSE"
                        (rule "inEqSimp_strengthen1" (formula "4") (ifseqformula "38"))
                        (rule "polySimp_addAssoc" (formula "4") (term "1"))
                        (rule "add_literals" (formula "4") (term "0,1"))
                        (rule "inEqSimp_contradEq7" (formula "38") (ifseqformula "4"))
                        (rule "polySimp_rightDist" (formula "38") (term "1,0,0"))
                        (rule "mul_literals" (formula "38") (term "0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "38") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "38") (term "0,0,0"))
                        (rule "add_literals" (formula "38") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "38") (term "0,0"))
                        (rule "add_literals" (formula "38") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "38") (term "1,0,0"))
                        (rule "add_zero_right" (formula "38") (term "0,0"))
                        (rule "leq_literals" (formula "38") (term "0"))
                        (builtin "One Step Simplification" (formula "38"))
                        (rule "false_right" (formula "38"))
                        (rule "allLeft" (formula "26") (inst "t=i_2_0"))
                        (rule "inEqSimp_commuteGeq" (formula "26") (term "1"))
                        (rule "inEqSimp_contradInEq1" (formula "26") (term "1,0") (ifseqformula "3"))
                        (rule "qeq_literals" (formula "26") (term "0,1,0"))
                        (builtin "One Step Simplification" (formula "26"))
                        (rule "inEqSimp_contradInEq1" (formula "26") (term "1") (ifseqformula "4"))
                        (rule "inEqSimp_homoInEq1" (formula "26") (term "0,1"))
                        (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,1"))
                        (rule "add_literals" (formula "26") (term "1,1,0,0,1"))
                        (rule "times_zero_1" (formula "26") (term "1,0,0,1"))
                        (rule "add_zero_right" (formula "26") (term "0,0,1"))
                        (rule "leq_literals" (formula "26") (term "0,1"))
                        (builtin "One Step Simplification" (formula "26"))
                        (rule "allLeft" (formula "30") (inst "t=i_2_0"))
                        (rule "replaceKnownSelect_taclet1011111_15" (formula "30") (term "0,0,0"))
                        (rule "eqSymm" (formula "30") (term "0,0"))
                        (rule "inEqSimp_commuteGeq" (formula "30") (term "1"))
                        (rule "inEqSimp_contradInEq1" (formula "30") (term "1,0") (ifseqformula "3"))
                        (rule "qeq_literals" (formula "30") (term "0,1,0"))
                        (builtin "One Step Simplification" (formula "30"))
                        (rule "inEqSimp_contradInEq1" (formula "30") (term "1") (ifseqformula "4"))
                        (rule "inEqSimp_homoInEq1" (formula "30") (term "0,1"))
                        (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,1"))
                        (rule "add_literals" (formula "30") (term "1,1,0,0,1"))
                        (rule "times_zero_1" (formula "30") (term "1,0,0,1"))
                        (rule "add_literals" (formula "30") (term "0,0,1"))
                        (rule "leq_literals" (formula "30") (term "0,1"))
                        (builtin "One Step Simplification" (formula "30"))
                        (rule "typeEqDerived" (formula "26") (term "0") (ifseqformula "30"))
                        (builtin "One Step Simplification" (formula "26"))
                        (rule "true_left" (formula "26"))
                        (rule "applyEqReverse" (formula "39") (term "1,1,0,0") (ifseqformula "29"))
                        (builtin "One Step Simplification" (formula "39"))
                        (rule "applyEqReverse" (formula "1") (term "1") (ifseqformula "29"))
                        (rule "hideAuxiliaryEq" (formula "29"))
                        (rule "allLeft" (formula "25") (inst "t=i_2_0"))
                        (rule "inEqSimp_commuteGeq" (formula "25") (term "1"))
                        (rule "inEqSimp_contradInEq1" (formula "25") (term "1,0") (ifseqformula "3"))
                        (rule "qeq_literals" (formula "25") (term "0,1,0"))
                        (builtin "One Step Simplification" (formula "25"))
                        (rule "inEqSimp_contradInEq1" (formula "25") (term "1") (ifseqformula "4"))
                        (rule "inEqSimp_homoInEq1" (formula "25") (term "0,1"))
                        (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,1"))
                        (rule "add_literals" (formula "25") (term "1,1,0,0,1"))
                        (rule "times_zero_1" (formula "25") (term "1,0,0,1"))
                        (rule "add_literals" (formula "25") (term "0,0,1"))
                        (rule "leq_literals" (formula "25") (term "0,1"))
                        (builtin "One Step Simplification" (formula "25"))
                        (rule "notLeft" (formula "25"))
                        (rule "allLeft" (formula "13") (inst "t=i_2_0"))
                        (rule "inEqSimp_commuteGeq" (formula "13") (term "1"))
                        (rule "inEqSimp_contradInEq1" (formula "13") (term "1") (ifseqformula "4"))
                        (rule "inEqSimp_homoInEq1" (formula "13") (term "0,1"))
                        (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0,1"))
                        (rule "add_literals" (formula "13") (term "1,1,0,0,1"))
                        (rule "times_zero_1" (formula "13") (term "1,0,0,1"))
                        (rule "add_zero_right" (formula "13") (term "0,0,1"))
                        (rule "leq_literals" (formula "13") (term "0,1"))
                        (builtin "One Step Simplification" (formula "13"))
                        (rule "inEqSimp_contradInEq1" (formula "13") (term "1") (ifseqformula "3"))
                        (rule "qeq_literals" (formula "13") (term "0,1"))
                        (builtin "One Step Simplification" (formula "13"))
                        (rule "allLeft" (formula "12") (inst "t=i_2_0"))
                        (rule "inEqSimp_commuteGeq" (formula "12") (term "1"))
                        (rule "inEqSimp_contradInEq1" (formula "12") (term "1") (ifseqformula "4"))
                        (rule "inEqSimp_homoInEq1" (formula "12") (term "0,1"))
                        (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0,1"))
                        (rule "add_literals" (formula "12") (term "1,1,0,0,1"))
                        (rule "times_zero_1" (formula "12") (term "1,0,0,1"))
                        (rule "add_zero_right" (formula "12") (term "0,0,1"))
                        (rule "leq_literals" (formula "12") (term "0,1"))
                        (builtin "One Step Simplification" (formula "12"))
                        (rule "inEqSimp_contradInEq1" (formula "12") (term "1") (ifseqformula "3"))
                        (rule "qeq_literals" (formula "12") (term "0,1"))
                        (builtin "One Step Simplification" (formula "12"))
                        (rule "notLeft" (formula "12"))
                        (rule "replace_known_right" (formula "1") (term "0,0,1,0,0") (ifseqformula "36"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "36"))
                        (builtin "One Step Simplification" (formula "2"))
                        (rule "replace_known_right" (formula "41") (term "0,0,0") (ifseqformula "36"))
                        (builtin "One Step Simplification" (formula "41"))
                        (rule "ifthenelse_negated" (formula "2") (term "0"))
                        (rule "allLeft" (formula "12") (inst "t=add(Z(neglit(1(#))),
    int::select(heap, self, IntLinkedList::$size))"))
                        (rule "inEqSimp_homoInEq0" (formula "12") (term "1,0"))
                        (rule "polySimp_mulComm0" (formula "12") (term "1,0,1,0"))
                        (rule "polySimp_rightDist" (formula "12") (term "1,0,1,0"))
                        (rule "mul_literals" (formula "12") (term "0,1,0,1,0"))
                        (rule "polySimp_addAssoc" (formula "12") (term "0,1,0"))
                        (rule "add_literals" (formula "12") (term "0,0,1,0"))
                        (rule "add_zero_left" (formula "12") (term "0,1,0"))
                        (rule "inEqSimp_homoInEq1" (formula "12") (term "1"))
                        (rule "polySimp_mulComm0" (formula "12") (term "1,0,1"))
                        (rule "polySimp_rightDist" (formula "12") (term "1,0,1"))
                        (rule "mul_literals" (formula "12") (term "0,1,0,1"))
                        (rule "polySimp_addAssoc" (formula "12") (term "0,1"))
                        (rule "polySimp_addComm0" (formula "12") (term "0,0,1"))
                        (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,1"))
                        (rule "add_literals" (formula "12") (term "1,1,0,1"))
                        (rule "times_zero_1" (formula "12") (term "1,0,1"))
                        (rule "add_zero_right" (formula "12") (term "0,1"))
                        (rule "leq_literals" (formula "12") (term "1"))
                        (builtin "One Step Simplification" (formula "12"))
                        (rule "applyEq" (formula "12") (term "0,0,0") (ifseqformula "22"))
                        (rule "inEqSimp_invertInEq1" (formula "12") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "12") (term "0,1"))
                        (rule "times_zero_2" (formula "12") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "12") (term "0,1"))
                        (rule "inEqSimp_contradInEq1" (formula "12") (term "1") (ifseqformula "24"))
                        (rule "qeq_literals" (formula "12") (term "0,1"))
                        (builtin "One Step Simplification" (formula "12"))
                        (rule "notLeft" (formula "12"))
                        (rule "replace_known_right" (formula "20") (term "0") (ifseqformula "36"))
                        (builtin "One Step Simplification" (formula "20"))
                        (rule "replace_known_right" (formula "39") (term "0,0") (ifseqformula "36"))
                        (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "20")))
                        (rule "false_right" (formula "39"))
                        (rule "allLeft" (formula "12") (inst "t=Z(0(#))"))
                        (rule "leq_literals" (formula "12") (term "1,0"))
                        (builtin "One Step Simplification" (formula "12"))
                        (rule "inEqSimp_commuteGeq" (formula "12") (term "1"))
                        (rule "applyEq" (formula "12") (term "0,0,0") (ifseqformula "20"))
                        (rule "inEqSimp_contradInEq1" (formula "12") (term "1") (ifseqformula "24"))
                        (rule "qeq_literals" (formula "12") (term "0,1"))
                        (builtin "One Step Simplification" (formula "12"))
                        (rule "notLeft" (formula "12"))
                        (rule "replace_known_right" (formula "29") (term "0,0,1,0,0") (ifseqformula "36"))
                        (builtin "One Step Simplification" (formula "29"))
                        (rule "replace_known_right" (formula "18") (term "0") (ifseqformula "36"))
                        (builtin "One Step Simplification" (formula "18"))
                        (rule "replace_known_left" (formula "29") (term "0,1,0,0") (ifseqformula "18"))
                        (builtin "One Step Simplification" (formula "29"))
                        (rule "allLeft" (formula "14") (inst "t=add(Z(neglit(1(#))),
    int::select(heap, self, IntLinkedList::$size))"))
                        (rule "inEqSimp_homoInEq0" (formula "14") (term "1,0"))
                        (rule "polySimp_mulComm0" (formula "14") (term "1,0,1,0"))
                        (rule "polySimp_rightDist" (formula "14") (term "1,0,1,0"))
                        (rule "mul_literals" (formula "14") (term "0,1,0,1,0"))
                        (rule "polySimp_addAssoc" (formula "14") (term "0,1,0"))
                        (rule "add_literals" (formula "14") (term "0,0,1,0"))
                        (rule "add_zero_left" (formula "14") (term "0,1,0"))
                        (rule "inEqSimp_homoInEq1" (formula "14") (term "1"))
                        (rule "polySimp_mulComm0" (formula "14") (term "1,0,1"))
                        (rule "polySimp_rightDist" (formula "14") (term "1,0,1"))
                        (rule "mul_literals" (formula "14") (term "0,1,0,1"))
                        (rule "polySimp_addAssoc" (formula "14") (term "0,1"))
                        (rule "polySimp_addComm0" (formula "14") (term "0,0,1"))
                        (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,1"))
                        (rule "add_literals" (formula "14") (term "1,1,0,1"))
                        (rule "times_zero_1" (formula "14") (term "1,0,1"))
                        (rule "add_zero_right" (formula "14") (term "0,1"))
                        (rule "leq_literals" (formula "14") (term "1"))
                        (builtin "One Step Simplification" (formula "14"))
                        (rule "applyEq" (formula "14") (term "1,1,0") (ifseqformula "22"))
                        (rule "inEqSimp_invertInEq1" (formula "14") (term "1"))
                        (rule "mul_literals" (formula "14") (term "1,1"))
                        (rule "polySimp_mulLiterals" (formula "14") (term "0,1"))
                        (rule "polySimp_elimOne" (formula "14") (term "0,1"))
                        (rule "inEqSimp_contradInEq1" (formula "14") (term "1") (ifseqformula "24"))
                        (rule "qeq_literals" (formula "14") (term "0,1"))
                        (builtin "One Step Simplification" (formula "14"))
                        (rule "allLeft" (formula "15") (inst "t=Z(0(#))"))
                        (rule "leq_literals" (formula "15") (term "1,0"))
                        (builtin "One Step Simplification" (formula "15"))
                        (rule "inEqSimp_commuteGeq" (formula "15") (term "1"))
                        (rule "applyEq" (formula "15") (term "1,1,0") (ifseqformula "21"))
                        (rule "inEqSimp_contradInEq1" (formula "15") (term "1") (ifseqformula "25"))
                        (rule "qeq_literals" (formula "15") (term "0,1"))
                        (builtin "One Step Simplification" (formula "15"))
                        (rule "cut_direct" (formula "37") (term "0"))
                        (branch "CUT: anonOut_current.<created> = TRUE TRUE"
                           (builtin "One Step Simplification" (formula "38"))
                           (rule "true_left" (formula "38"))
                           (rule "ifthenelse_split" (formula "30") (term "0"))
                           (branch "∃ int j; ( (IntNode)self.nodeseq[j] = self.last ∧ j ≥ 0 ∧ j ≤ -1 + self.size) TRUE"
                              (rule "exLeft" (formula "30") (inst "sk=j_0"))
                              (rule "andLeft" (formula "30"))
                              (rule "andLeft" (formula "30"))
                              (rule "eqSymm" (formula "33"))
                              (rule "inEqSimp_homoInEq0" (formula "32"))
                              (rule "polySimp_addComm1" (formula "32") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "32"))
                              (rule "polySimp_mulComm0" (formula "32") (term "1"))
                              (rule "polySimp_rightDist" (formula "32") (term "1"))
                              (rule "mul_literals" (formula "32") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "32") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "32") (term "1,1"))
                              (rule "allLeft" (formula "28") (inst "t=Z(0(#))"))
                              (rule "leq_literals" (formula "28") (term "1,0"))
                              (builtin "One Step Simplification" (formula "28"))
                              (rule "inEqSimp_commuteGeq" (formula "28") (term "1"))
                              (rule "inEqSimp_contradInEq1" (formula "28") (term "1") (ifseqformula "25"))
                              (rule "qeq_literals" (formula "28") (term "0,1"))
                              (builtin "One Step Simplification" (formula "28"))
                              (rule "notLeft" (formula "28"))
                              (rule "allLeft" (formula "29") (inst "t=Z(0(#))"))
                              (rule "typeEqDerived2" (formula "29") (term "0,0,0") (ifseqformula "35"))
                              (builtin "One Step Simplification" (formula "29"))
                              (rule "true_left" (formula "29"))
                              (rule "allLeft" (formula "29") (inst "t=add(Z(neglit(1(#))),
    int::select(heap, self, IntLinkedList::$size))"))
                              (rule "typeEqDerived" (formula "29") (term "0,0,0") (ifseqformula "34"))
                              (builtin "One Step Simplification" (formula "29"))
                              (rule "true_left" (formula "29"))
                              (rule "allLeft" (formula "28") (inst "t=add(Z(neglit(1(#))),
    int::select(heap, self, IntLinkedList::$size))"))
                              (rule "inEqSimp_homoInEq1" (formula "28") (term "1"))
                              (rule "polySimp_mulComm0" (formula "28") (term "1,0,1"))
                              (rule "polySimp_rightDist" (formula "28") (term "1,0,1"))
                              (rule "mul_literals" (formula "28") (term "0,1,0,1"))
                              (rule "polySimp_addAssoc" (formula "28") (term "0,1"))
                              (rule "polySimp_addComm0" (formula "28") (term "0,0,1"))
                              (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,1"))
                              (rule "add_literals" (formula "28") (term "1,1,0,1"))
                              (rule "times_zero_1" (formula "28") (term "1,0,1"))
                              (rule "add_zero_right" (formula "28") (term "0,1"))
                              (rule "leq_literals" (formula "28") (term "1"))
                              (builtin "One Step Simplification" (formula "28"))
                              (rule "inEqSimp_homoInEq0" (formula "28") (term "1"))
                              (rule "polySimp_mulComm0" (formula "28") (term "1,0,1"))
                              (rule "polySimp_rightDist" (formula "28") (term "1,0,1"))
                              (rule "mul_literals" (formula "28") (term "0,1,0,1"))
                              (rule "polySimp_addAssoc" (formula "28") (term "0,1"))
                              (rule "add_literals" (formula "28") (term "0,0,1"))
                              (rule "add_zero_left" (formula "28") (term "0,1"))
                              (rule "applyEq" (formula "28") (term "0,0,0") (ifseqformula "34"))
                              (builtin "One Step Simplification" (formula "28"))
                              (rule "true_left" (formula "28"))
                              (rule "allLeft" (formula "19") (inst "t=Z(0(#))"))
                              (rule "add_zero_right" (formula "19") (term "1,1,0,0"))
                              (rule "leq_literals" (formula "19") (term "1,0"))
                              (builtin "One Step Simplification" (formula "19"))
                              (rule "inEqSimp_homoInEq1" (formula "19") (term "1"))
                              (rule "mul_literals" (formula "19") (term "1,0,1"))
                              (rule "add_zero_right" (formula "19") (term "0,1"))
                              (rule "applyEq" (formula "19") (term "1,0,0") (ifseqformula "22"))
                              (rule "eqSymm" (formula "19") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1"))
                              (rule "mul_literals" (formula "19") (term "1,1"))
                              (rule "allLeft" (formula "37") (inst "t=Z(0(#))"))
                              (rule "add_zero_right" (formula "37") (term "1,1,0,0"))
                              (rule "leq_literals" (formula "37") (term "1,0"))
                              (builtin "One Step Simplification" (formula "37"))
                              (rule "inEqSimp_homoInEq1" (formula "37") (term "1"))
                              (rule "times_zero_2" (formula "37") (term "1,0,1"))
                              (rule "add_zero_right" (formula "37") (term "0,1"))
                              (rule "applyEq" (formula "37") (term "1,0,0") (ifseqformula "22"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1"))
                              (rule "mul_literals" (formula "37") (term "1,1"))
                              (rule "pullOutSelect" (formula "37") (term "0,0") (inst "selectSK=IntNode_next_2"))
                              (rule "simplifySelectOfAnon" (formula "37"))
                              (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "45")) (ifInst ""  (formula "21")))
                              (rule "eqSymm" (formula "38") (term "0"))
                              (rule "elementOfUnion" (formula "37") (term "0,0"))
                              (rule "elementOfSingleton" (formula "37") (term "0,0,0"))
                              (builtin "One Step Simplification" (formula "37"))
                              (rule "elementOfInfiniteUnion" (formula "37") (term "0,0"))
                              (builtin "One Step Simplification" (formula "37"))
                              (rule "elementOfSingleton" (formula "37") (term "1,0,0,0"))
                              (builtin "One Step Simplification" (formula "37"))
                              (rule "applyEqReverse" (formula "38") (term "1,0") (ifseqformula "37"))
                              (rule "hideAuxiliaryEq" (formula "37"))
                              (rule "allLeft" (formula "17") (inst "t=Z(0(#))"))
                              (rule "leq_literals" (formula "17") (term "1,0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "17"))
                              (rule "inEqSimp_commuteGeq" (formula "17") (term "1,0,0,0,0"))
                              (rule "applyEq" (formula "17") (term "1,0,0,0,0,0,0") (ifseqformula "23"))
                              (rule "inEqSimp_contradInEq1" (formula "17") (term "1,0,0,0,0") (ifseqformula "27"))
                              (rule "qeq_literals" (formula "17") (term "0,1,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "17"))
                              (rule "commute_or_2" (formula "17") (term "0"))
                              (rule "inEqSimp_or_weaken2" (formula "17") (term "0,0"))
                              (rule "add_literals" (formula "17") (term "1,0,1,0,0"))
                              (builtin "One Step Simplification" (formula "17"))
                              (rule "allLeft" (formula "18") (inst "t=add(Z(neglit(1(#))),
    int::select(heap, self, IntLinkedList::$size))"))
                              (rule "inEqSimp_homoInEq0" (formula "18") (term "1,0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "18") (term "1,0,1,0,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "18") (term "1,0,1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "18") (term "0,1,0,1,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "18") (term "0,1,0,0,0,0,0"))
                              (rule "add_literals" (formula "18") (term "0,0,1,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "18") (term "0,1,0,0,0,0,0"))
                              (rule "inEqSimp_homoInEq1" (formula "18") (term "1,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "18") (term "1,0,1,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "18") (term "1,0,1,0,0,0,0"))
                              (rule "mul_literals" (formula "18") (term "0,1,0,1,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "18") (term "0,1,0,0,0,0"))
                              (rule "polySimp_addComm0" (formula "18") (term "0,0,1,0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,1,0,0,0,0"))
                              (rule "add_literals" (formula "18") (term "1,1,0,1,0,0,0,0"))
                              (rule "times_zero_1" (formula "18") (term "1,0,1,0,0,0,0"))
                              (rule "add_zero_right" (formula "18") (term "0,1,0,0,0,0"))
                              (rule "leq_literals" (formula "18") (term "1,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "18"))
                              (rule "applyEq" (formula "18") (term "1,0,0,0,0,0,0") (ifseqformula "26"))
                              (rule "inEqSimp_invertInEq1" (formula "18") (term "1,0,0,0,0"))
                              (rule "times_zero_2" (formula "18") (term "1,1,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "18") (term "0,1,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "18") (term "0,1,0,0,0,0"))
                              (rule "inEqSimp_contradInEq1" (formula "18") (term "1,0,0,0,0") (ifseqformula "28"))
                              (rule "qeq_literals" (formula "18") (term "0,1,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "18"))
                              (rule "commute_or_2" (formula "18") (term "0"))
                              (rule "inEqSimp_or_weaken3" (formula "18") (term "0"))
                              (rule "polySimp_addAssoc" (formula "18") (term "1,0,1,0"))
                              (rule "add_literals" (formula "18") (term "0,1,0,1,0"))
                              (rule "add_zero_left" (formula "18") (term "1,0,1,0"))
                              (builtin "One Step Simplification" (formula "18"))
                              (rule "ifthenelse_split" (formula "2") (term "0"))
                              (branch "(IntNode)self.nodeseq[i_2_0].<created> = TRUE TRUE"
                                 (rule "applyEqReverse" (formula "52") (term "1,1") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "eqSymm" (formula "51") (term "1"))
                                 (rule "replace_known_left" (formula "1") (term "0,1,0,0") (ifseqformula "2"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "allLeft" (formula "39") (inst "t=i_2_0"))
                                 (rule "replaceKnownSelect_taclet1011111_14" (formula "39") (term "0,0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet00011011111_23" (formula "39") (term "0,0,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "39") (term "1"))
                                 (rule "polySimp_addComm1" (formula "39") (term "0,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "39") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "39") (term "1,1"))
                                 (rule "mul_literals" (formula "39") (term "0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1"))
                                 (rule "polySimp_elimOne" (formula "39") (term "1,1,1"))
                                 (rule "inEqSimp_contradInEq1" (formula "39") (term "1") (ifseqformula "4"))
                                 (rule "inEqSimp_homoInEq1" (formula "39") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "39") (term "1,0,0,1"))
                                 (rule "mul_literals" (formula "39") (term "0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "39") (term "0,0,1"))
                                 (rule "polySimp_addComm1" (formula "39") (term "0,0,0,1"))
                                 (rule "add_literals" (formula "39") (term "0,0,0,0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,0,1"))
                                 (rule "add_literals" (formula "39") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "39") (term "1,0,0,1"))
                                 (rule "add_literals" (formula "39") (term "0,0,1"))
                                 (rule "leq_literals" (formula "39") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "39"))
                                 (rule "inEqSimp_contradInEq1" (formula "39") (term "1") (ifseqformula "3"))
                                 (rule "qeq_literals" (formula "39") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "39"))
                                 (rule "replace_known_left" (formula "52") (term "1") (ifseqformula "39"))
                                 (builtin "One Step Simplification" (formula "52"))
                                 (rule "allRight" (formula "52") (inst "sk=j_1_0"))
                                 (rule "orRight" (formula "52"))
                                 (rule "orRight" (formula "52"))
                                 (rule "orRight" (formula "54"))
                                 (rule "notRight" (formula "54"))
                                 (rule "inEqSimp_geqRight" (formula "54"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0"))
                                 (rule "inEqSimp_leqRight" (formula "54"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                 (rule "polySimp_elimOne" (formula "2") (term "0"))
                                 (rule "allLeft" (formula "22") (inst "t=add(Z(1(#)), i_2_0)"))
                                 (rule "inEqSimp_commuteGeq" (formula "22") (term "1,0,0,0,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "22") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "22") (term "1,0,1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "22") (term "1,0,1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "22") (term "0,1,0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "22") (term "0,1,0,0,0,0,0"))
                                 (rule "add_literals" (formula "22") (term "0,0,1,0,0,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "22") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "22") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "22") (term "0,1,0,0,0,0,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "22") (term "1,0,0,0,0") (ifseqformula "7"))
                                 (rule "inEqSimp_homoInEq1" (formula "22") (term "0,1,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0,0,0,0"))
                                 (rule "mul_literals" (formula "22") (term "0,1,0,0,1,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "22") (term "0,0,0,1,0,0,0,0"))
                                 (rule "add_literals" (formula "22") (term "0,0,0,0,1,0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,1,0,0,0,0"))
                                 (rule "add_literals" (formula "22") (term "1,1,0,0,1,0,0,0,0"))
                                 (rule "times_zero_1" (formula "22") (term "1,0,0,1,0,0,0,0"))
                                 (rule "add_zero_right" (formula "22") (term "0,0,1,0,0,0,0"))
                                 (rule "leq_literals" (formula "22") (term "0,1,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "22"))
                                 (rule "inEqSimp_contradInEq1" (formula "22") (term "1,0,0,0,0") (ifseqformula "6"))
                                 (rule "qeq_literals" (formula "22") (term "0,1,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "22"))
                                 (rule "allLeft" (formula "26") (inst "t=add(Z(1(#)), i_2_0)"))
                                 (rule "polySimp_addAssoc" (formula "26") (term "1,1,0,0"))
                                 (rule "add_literals" (formula "26") (term "0,1,1,0,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "26") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "26") (term "1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "26") (term "1,0,1,0"))
                                 (rule "mul_literals" (formula "26") (term "0,1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "26") (term "0,1,0"))
                                 (rule "add_literals" (formula "26") (term "0,0,1,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "26") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "26") (term "1,0,1"))
                                 (rule "polySimp_rightDist" (formula "26") (term "1,0,1"))
                                 (rule "mul_literals" (formula "26") (term "0,1,0,1"))
                                 (rule "polySimp_addComm1" (formula "26") (term "0,1"))
                                 (rule "polySimp_addAssoc" (formula "26") (term "0,0,1"))
                                 (rule "add_literals" (formula "26") (term "0,0,0,1"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "26") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "26") (term "0,1,0"))
                                 (rule "polySimp_elimOne" (formula "26") (term "0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "26") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "26") (term "1,1"))
                                 (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1"))
                                 (rule "mul_literals" (formula "26") (term "0,1,1"))
                                 (rule "polySimp_elimOne" (formula "26") (term "1,1,1"))
                                 (rule "inEqSimp_contradInEq1" (formula "26") (term "1,0") (ifseqformula "6"))
                                 (rule "qeq_literals" (formula "26") (term "0,1,0"))
                                 (builtin "One Step Simplification" (formula "26"))
                                 (rule "allLeft" (formula "19") (inst "t=add(Z(1(#)), i_2_0)"))
                                 (rule "inEqSimp_commuteGeq" (formula "19") (term "1"))
                                 (rule "inEqSimp_homoInEq0" (formula "19") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "19") (term "1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "19") (term "1,0,1,0"))
                                 (rule "mul_literals" (formula "19") (term "0,1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "19") (term "0,1,0"))
                                 (rule "add_literals" (formula "19") (term "0,0,1,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "19") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "0,1,0"))
                                 (rule "polySimp_elimOne" (formula "19") (term "0,1,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "19") (term "1") (ifseqformula "7"))
                                 (rule "inEqSimp_homoInEq1" (formula "19") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1"))
                                 (rule "mul_literals" (formula "19") (term "0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "19") (term "0,0,1"))
                                 (rule "polySimp_addComm1" (formula "19") (term "0,0,0,1"))
                                 (rule "add_literals" (formula "19") (term "0,0,0,0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,1"))
                                 (rule "add_literals" (formula "19") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "19") (term "1,0,0,1"))
                                 (rule "add_literals" (formula "19") (term "0,0,1"))
                                 (rule "leq_literals" (formula "19") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "19"))
                                 (rule "inEqSimp_contradInEq1" (formula "19") (term "1") (ifseqformula "6"))
                                 (rule "qeq_literals" (formula "19") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "19"))
                                 (rule "allLeft" (formula "46") (inst "t=add(Z(1(#)), i_2_0)"))
                                 (rule "polySimp_addAssoc" (formula "46") (term "1,1,0,0"))
                                 (rule "add_literals" (formula "46") (term "0,1,1,0,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "46") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "46") (term "1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "46") (term "1,0,1,0"))
                                 (rule "mul_literals" (formula "46") (term "0,1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "46") (term "0,1,0"))
                                 (rule "add_literals" (formula "46") (term "0,0,1,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "46") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "46") (term "1,0,1"))
                                 (rule "polySimp_rightDist" (formula "46") (term "1,0,1"))
                                 (rule "mul_literals" (formula "46") (term "0,1,0,1"))
                                 (rule "polySimp_addComm1" (formula "46") (term "0,1"))
                                 (rule "polySimp_addAssoc" (formula "46") (term "0,0,1"))
                                 (rule "add_literals" (formula "46") (term "0,0,0,1"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "46") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "46") (term "0,1,0"))
                                 (rule "polySimp_elimOne" (formula "46") (term "0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "46") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "46") (term "1,1"))
                                 (rule "polySimp_mulLiterals" (formula "46") (term "1,1,1"))
                                 (rule "mul_literals" (formula "46") (term "0,1,1"))
                                 (rule "polySimp_elimOne" (formula "46") (term "1,1,1"))
                                 (rule "inEqSimp_contradInEq1" (formula "46") (term "1,0") (ifseqformula "6"))
                                 (rule "qeq_literals" (formula "46") (term "0,1,0"))
                                 (builtin "One Step Simplification" (formula "46"))
                                 (rule "pullOutSelect" (formula "46") (term "0,0") (inst "selectSK=IntNode_next_3"))
                                 (rule "simplifySelectOfAnon" (formula "46"))
                                 (builtin "One Step Simplification" (formula "46"))
                                 (rule "eqSymm" (formula "47") (term "0"))
                                 (rule "elementOfUnion" (formula "46") (term "0,0,0"))
                                 (rule "elementOfSingleton" (formula "46") (term "0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "46"))
                                 (rule "elementOfInfiniteUnion" (formula "46") (term "0,0,0"))
                                 (builtin "One Step Simplification" (formula "46"))
                                 (rule "elementOfSingleton" (formula "46") (term "1,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "46"))
                                 (rule "allLeft" (formula "24") (inst "t=i_2_0"))
                                 (rule "inEqSimp_commuteGeq" (formula "24") (term "1,0,0,0,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "24") (term "1,0,0,0,0,0") (ifseqformula "6"))
                                 (rule "qeq_literals" (formula "24") (term "0,1,0,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "24"))
                                 (rule "inEqSimp_contradInEq1" (formula "24") (term "1,0,0,0,0") (ifseqformula "7"))
                                 (rule "inEqSimp_homoInEq1" (formula "24") (term "0,1,0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,1,0,0,0,0"))
                                 (rule "add_literals" (formula "24") (term "1,1,0,0,1,0,0,0,0"))
                                 (rule "times_zero_1" (formula "24") (term "1,0,0,1,0,0,0,0"))
                                 (rule "add_zero_right" (formula "24") (term "0,0,1,0,0,0,0"))
                                 (rule "leq_literals" (formula "24") (term "0,1,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "24"))
                                 (rule "allLeft" (formula "45") (inst "t=add(Z(1(#)), i_2_0)"))
                                 (rule "inEqSimp_commuteGeq" (formula "45") (term "1"))
                                 (rule "inEqSimp_homoInEq0" (formula "45") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "45") (term "1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "45") (term "1,0,1,0"))
                                 (rule "mul_literals" (formula "45") (term "0,1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "45") (term "0,1,0"))
                                 (rule "add_literals" (formula "45") (term "0,0,1,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "45") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "45") (term "0,1,0"))
                                 (rule "polySimp_elimOne" (formula "45") (term "0,1,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "45") (term "1") (ifseqformula "7"))
                                 (rule "inEqSimp_homoInEq1" (formula "45") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "45") (term "1,0,0,1"))
                                 (rule "mul_literals" (formula "45") (term "0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "45") (term "0,0,1"))
                                 (rule "polySimp_addComm1" (formula "45") (term "0,0,0,1"))
                                 (rule "add_literals" (formula "45") (term "0,0,0,0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "45") (term "0,0,1"))
                                 (rule "add_literals" (formula "45") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "45") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "45") (term "0,0,1"))
                                 (rule "leq_literals" (formula "45") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "45"))
                                 (rule "inEqSimp_contradInEq1" (formula "45") (term "1") (ifseqformula "6"))
                                 (rule "qeq_literals" (formula "45") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "45"))
                                 (rule "pullOutSelect" (formula "45") (term "0") (inst "selectSK=IntNode_data_3"))
                                 (rule "simplifySelectOfAnon" (formula "45"))
                                 (builtin "One Step Simplification" (formula "45"))
                                 (rule "eqSymm" (formula "46"))
                                 (rule "applyEqReverse" (formula "45") (term "1") (ifseqformula "46"))
                                 (rule "hideAuxiliaryEq" (formula "46"))
                                 (rule "elementOfUnion" (formula "45") (term "0,0,0"))
                                 (rule "elementOfInfiniteUnion" (formula "45") (term "1,0,0,0"))
                                 (builtin "One Step Simplification" (formula "45"))
                                 (rule "elementOfSingleton" (formula "45") (term "1,0,1,0,0,0"))
                                 (builtin "One Step Simplification" (formula "45"))
                                 (rule "eqSymm" (formula "45") (term "1,0,1,0,0,0"))
                                 (rule "elementOfSingleton" (formula "45") (term "0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "45"))
                                 (rule "allLeft" (formula "15") (inst "t=add(Z(1(#)), i_2_0)"))
                                 (rule "inEqSimp_commuteGeq" (formula "15") (term "1"))
                                 (rule "inEqSimp_homoInEq0" (formula "15") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "15") (term "1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "15") (term "1,0,1,0"))
                                 (rule "mul_literals" (formula "15") (term "0,1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "15") (term "0,1,0"))
                                 (rule "add_literals" (formula "15") (term "0,0,1,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "15") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "15") (term "0,1,0"))
                                 (rule "polySimp_elimOne" (formula "15") (term "0,1,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "15") (term "1") (ifseqformula "7"))
                                 (rule "inEqSimp_homoInEq1" (formula "15") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1"))
                                 (rule "mul_literals" (formula "15") (term "0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "15") (term "0,0,1"))
                                 (rule "polySimp_addComm1" (formula "15") (term "0,0,0,1"))
                                 (rule "add_literals" (formula "15") (term "0,0,0,0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,1"))
                                 (rule "add_literals" (formula "15") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "15") (term "1,0,0,1"))
                                 (rule "add_literals" (formula "15") (term "0,0,1"))
                                 (rule "leq_literals" (formula "15") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "15"))
                                 (rule "inEqSimp_contradInEq1" (formula "15") (term "1") (ifseqformula "6"))
                                 (rule "qeq_literals" (formula "15") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "15"))
                                 (rule "notLeft" (formula "15"))
                                 (rule "replace_known_right" (formula "48") (term "0,0,0,0") (ifseqformula "55"))
                                 (builtin "One Step Simplification" (formula "48"))
                                 (rule "replace_known_right" (formula "45") (term "0,0,1,0,0") (ifseqformula "55"))
                                 (builtin "One Step Simplification" (formula "45"))
                                 (rule "ifthenelse_negated" (formula "48") (term "0"))
                                 (rule "ifthenelse_split" (formula "44") (term "0"))
                                 (branch "∃ int j; ( (IntNode)self.nodeseq[j] = self.first ∧ j ≥ 0 ∧ j ≤ -1 + self.size) TRUE"
                                    (rule "exLeft" (formula "44") (inst "sk=j_1"))
                                    (rule "andLeft" (formula "44"))
                                    (rule "andLeft" (formula "44"))
                                    (rule "eqSymm" (formula "47"))
                                    (rule "inEqSimp_homoInEq0" (formula "46"))
                                    (rule "polySimp_addComm1" (formula "46") (term "0"))
                                    (rule "applyEq" (formula "59") (term "0") (ifseqformula "47"))
                                    (builtin "One Step Simplification" (formula "59"))
                                    (rule "false_right" (formula "59"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "46"))
                                    (rule "polySimp_mulComm0" (formula "46") (term "1"))
                                    (rule "polySimp_rightDist" (formula "46") (term "1"))
                                    (rule "mul_literals" (formula "46") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "46") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "46") (term "1,1"))
                                    (rule "seqGetAlphaCast" (formula "62") (term "0"))
                                    (rule "castDel" (formula "1") (term "0"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "true_left" (formula "1"))
                                    (rule "commute_or_2" (formula "23") (term "0"))
                                    (rule "seqGetAlphaCast" (formula "16") (term "0"))
                                    (rule "castDel" (formula "16") (term "0"))
                                    (builtin "One Step Simplification" (formula "16"))
                                    (rule "true_left" (formula "16"))
                                    (rule "seqGetAlphaCast" (formula "16") (term "1,1"))
                                    (rule "castedGetAny" (formula "16") (term "0"))
                                    (builtin "One Step Simplification" (formula "16"))
                                    (rule "true_left" (formula "16"))
                                    (rule "allLeft" (formula "20") (inst "t=j_0"))
                                    (rule "inEqSimp_commuteGeq" (formula "20") (term "1"))
                                    (rule "applyEq" (formula "20") (term "1,1,0,0") (ifseqformula "41"))
                                    (rule "inEqSimp_contradInEq1" (formula "20") (term "1,0") (ifseqformula "42"))
                                    (rule "qeq_literals" (formula "20") (term "0,1,0"))
                                    (builtin "One Step Simplification" (formula "20"))
                                    (rule "inEqSimp_contradInEq1" (formula "20") (term "1") (ifseqformula "43"))
                                    (rule "inEqSimp_homoInEq1" (formula "20") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,1"))
                                    (rule "add_literals" (formula "20") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "20") (term "1,0,0,1"))
                                    (rule "add_literals" (formula "20") (term "0,0,1"))
                                    (rule "leq_literals" (formula "20") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "20"))
                                    (rule "allLeft" (formula "12") (inst "t=Z(0(#))"))
                                    (rule "leq_literals" (formula "12") (term "1,0"))
                                    (builtin "One Step Simplification" (formula "12"))
                                    (rule "inEqSimp_commuteGeq" (formula "12") (term "1"))
                                    (rule "applyEq" (formula "12") (term "0,0,0") (ifseqformula "19"))
                                    (builtin "One Step Simplification" (formula "12"))
                                    (rule "true_left" (formula "12"))
                                    (rule "allLeft" (formula "12") (inst "t=i_2_0"))
                                    (rule "inEqSimp_commuteGeq" (formula "12") (term "1"))
                                    (rule "applyEq" (formula "12") (term "0,0,0,0") (ifseqformula "17"))
                                    (builtin "One Step Simplification" (formula "12"))
                                    (rule "true_left" (formula "12"))
                                    (rule "allLeft" (formula "50") (inst "t=j_0"))
                                    (rule "inEqSimp_commuteGeq" (formula "50") (term "1"))
                                    (rule "applyEq" (formula "50") (term "1,0,0,0") (ifseqformula "41"))
                                    (rule "replaceKnownSelect_taclet1011111_16" (formula "50") (term "0,0,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet1011111_17" (formula "50") (term "0,0,0"))
                                    (rule "applyEq" (formula "50") (term "0,0,0") (ifseqformula "44"))
                                    (rule "eqSymm" (formula "50") (term "0,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "50") (term "1,0") (ifseqformula "42"))
                                    (rule "qeq_literals" (formula "50") (term "0,1,0"))
                                    (builtin "One Step Simplification" (formula "50"))
                                    (rule "inEqSimp_contradInEq1" (formula "50") (term "1") (ifseqformula "43"))
                                    (rule "inEqSimp_homoInEq1" (formula "50") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "50") (term "0,0,1"))
                                    (rule "add_literals" (formula "50") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "50") (term "1,0,0,1"))
                                    (rule "add_literals" (formula "50") (term "0,0,1"))
                                    (rule "leq_literals" (formula "50") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "50"))
                                    (rule "allLeft" (formula "15") (inst "t=j_0"))
                                    (rule "inEqSimp_commuteGeq" (formula "15") (term "1"))
                                    (rule "applyEq" (formula "15") (term "0,0,0,0") (ifseqformula "42"))
                                    (rule "replace_known_right" (formula "15") (term "0,0,0") (ifseqformula "63"))
                                    (builtin "One Step Simplification" (formula "15"))
                                    (rule "true_left" (formula "15"))
                                    (rule "allLeft" (formula "12") (inst "t=add(Z(neglit(1(#))),
    int::select(heap, self, IntLinkedList::$size))"))
                                    (rule "inEqSimp_homoInEq1" (formula "12") (term "1"))
                                    (rule "polySimp_mulComm0" (formula "12") (term "1,0,1"))
                                    (rule "polySimp_rightDist" (formula "12") (term "1,0,1"))
                                    (rule "mul_literals" (formula "12") (term "0,1,0,1"))
                                    (rule "polySimp_addAssoc" (formula "12") (term "0,1"))
                                    (rule "polySimp_addComm0" (formula "12") (term "0,0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,1"))
                                    (rule "add_literals" (formula "12") (term "1,1,0,1"))
                                    (rule "times_zero_1" (formula "12") (term "1,0,1"))
                                    (rule "add_zero_right" (formula "12") (term "0,1"))
                                    (rule "leq_literals" (formula "12") (term "1"))
                                    (builtin "One Step Simplification" (formula "12"))
                                    (rule "inEqSimp_homoInEq0" (formula "12") (term "1"))
                                    (rule "polySimp_mulComm0" (formula "12") (term "1,0,1"))
                                    (rule "polySimp_rightDist" (formula "12") (term "1,0,1"))
                                    (rule "mul_literals" (formula "12") (term "0,1,0,1"))
                                    (rule "polySimp_addAssoc" (formula "12") (term "0,1"))
                                    (rule "add_literals" (formula "12") (term "0,0,1"))
                                    (rule "add_zero_left" (formula "12") (term "0,1"))
                                    (rule "applyEq" (formula "12") (term "0,0,0") (ifseqformula "18"))
                                    (builtin "One Step Simplification" (formula "12"))
                                    (rule "true_left" (formula "12"))
                                    (rule "allLeft" (formula "13") (inst "t=Z(0(#))"))
                                    (rule "typeEqDerived" (formula "13") (term "0,0,0") (ifseqformula "19"))
                                    (builtin "One Step Simplification" (formula "13"))
                                    (rule "true_left" (formula "13"))
                                    (rule "allLeft" (formula "13") (inst "t=add(Z(neglit(1(#))),
    int::select(heap, self, IntLinkedList::$size))"))
                                    (rule "typeEqDerived" (formula "13") (term "0,0,0") (ifseqformula "18"))
                                    (builtin "One Step Simplification" (formula "13"))
                                    (rule "true_left" (formula "13"))
                                    (rule "allLeft" (formula "13") (inst "t=i_2_0"))
                                    (rule "typeEqDerived" (formula "13") (term "0,0,0") (ifseqformula "17"))
                                    (builtin "One Step Simplification" (formula "13"))
                                    (rule "true_left" (formula "13"))
                                    (rule "commute_or_2" (formula "25") (term "0"))
                                    (rule "seqGetAlphaCast" (formula "17") (term "0"))
                                    (rule "castDel" (formula "17") (term "0"))
                                    (builtin "One Step Simplification" (formula "17"))
                                    (rule "true_left" (formula "17"))
                                    (rule "seqGetAlphaCast" (formula "18") (term "0"))
                                    (rule "castDel" (formula "18") (term "0"))
                                    (builtin "One Step Simplification" (formula "18"))
                                    (rule "true_left" (formula "18"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "27") (term "0") (ifseqformula "8"))
                                    (rule "replace_known_left" (formula "27") (term "0") (ifseqformula "28"))
                                    (builtin "One Step Simplification" (formula "27"))
                                    (rule "true_left" (formula "27"))
                                    (rule "seqGetAlphaCast" (formula "41") (term "0"))
                                    (rule "castedGetAny" (formula "41") (term "0"))
                                    (builtin "One Step Simplification" (formula "41"))
                                    (rule "true_left" (formula "41"))
                                    (rule "seqGetAlphaCast" (formula "44") (term "0"))
                                    (rule "castDel" (formula "44") (term "0"))
                                    (builtin "One Step Simplification" (formula "44"))
                                    (rule "true_left" (formula "44"))
                                    (rule "ifthenelse_split" (formula "4") (term "0"))
                                    (branch "∃ int j; ( (IntNode)self.nodeseq[j] = (IntNode)self.nodeseq[i_2_0] ∧ j ≥ 0 ∧ j ≤ -1 + self.size) TRUE"
                                       (rule "exLeft" (formula "4") (inst "sk=j_2"))
                                       (rule "andLeft" (formula "4"))
                                       (rule "andLeft" (formula "4"))
                                       (rule "eqSymm" (formula "7"))
                                       (rule "inEqSimp_homoInEq0" (formula "6"))
                                       (rule "polySimp_addComm1" (formula "6") (term "0"))
                                       (rule "applyEq" (formula "67") (term "0") (ifseqformula "7"))
                                       (builtin "One Step Simplification" (formula "67"))
                                       (rule "false_right" (formula "67"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                       (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                       (rule "polySimp_rightDist" (formula "6") (term "1"))
                                       (rule "mul_literals" (formula "6") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                                       (rule "seqGetAlphaCast" (formula "31") (term "0,0"))
                                       (rule "castedGetAny" (formula "31") (term "0"))
                                       (builtin "One Step Simplification" (formula "31"))
                                       (rule "true_left" (formula "31"))
                                       (rule "cut_direct" (formula "31") (term "1"))
                                       (branch "CUT: self.size ≤ 1 TRUE"
                                          (builtin "One Step Simplification" (formula "32"))
                                          (rule "true_left" (formula "32"))
                                          (rule "inEqSimp_antiSymm" (formula "39") (ifseqformula "31"))
                                          (rule "applyEq" (formula "20") (term "1,1,0") (ifseqformula "39"))
                                          (rule "add_literals" (formula "20") (term "1,0"))
                                          (rule "applyEq" (formula "29") (term "1,1,0,0,0,0,0") (ifseqformula "39"))
                                          (rule "applyEq" (formula "43") (term "1,1,0") (ifseqformula "39"))
                                          (rule "applyEq" (formula "53") (term "1,1,1,0,0,0,0,0") (ifseqformula "39"))
                                          (rule "add_literals" (formula "53") (term "1,1,0,0,0,0,0"))
                                          (rule "applyEq" (formula "59") (term "1,1,1,0") (ifseqformula "39"))
                                          (rule "add_literals" (formula "59") (term "1,1,0"))
                                          (rule "applyEq" (formula "55") (term "1,1,1,0,0,1,1,0,0,0,0,0") (ifseqformula "39"))
                                          (rule "add_literals" (formula "55") (term "1,1,0,0,1,1,0,0,0,0,0"))
                                          (rule "applyEq" (formula "48") (term "1,1,0") (ifseqformula "39"))
                                          (rule "add_literals" (formula "48") (term "1,0"))
                                          (rule "applyEq" (formula "31") (term "0") (ifseqformula "39"))
                                          (rule "leq_literals" (formula "31"))
                                          (rule "true_left" (formula "31"))
                                          (rule "applyEq" (formula "50") (term "0") (ifseqformula "38"))
                                          (rule "inEqSimp_homoInEq1" (formula "50"))
                                          (rule "mul_literals" (formula "50") (term "1,0"))
                                          (rule "polySimp_addComm1" (formula "50") (term "0"))
                                          (rule "add_literals" (formula "50") (term "0,0"))
                                          (rule "add_zero_left" (formula "50") (term "0"))
                                          (rule "applyEq" (formula "18") (term "1,1,0") (ifseqformula "38"))
                                          (rule "applyEq" (formula "31") (term "0,1") (ifseqformula "38"))
                                          (rule "inEqSimp_homoInEq0" (formula "31") (term "1"))
                                          (rule "mul_literals" (formula "31") (term "1,0,1"))
                                          (rule "polySimp_addComm1" (formula "31") (term "0,1"))
                                          (rule "add_literals" (formula "31") (term "0,0,1"))
                                          (rule "applyEq" (formula "24") (term "1,1,0") (ifseqformula "38"))
                                          (rule "applyEq" (formula "28") (term "1,1,0") (ifseqformula "38"))
                                          (rule "applyEq" (formula "54") (term "1,1,0") (ifseqformula "38"))
                                          (rule "applyEq" (formula "58") (term "1,1,1,0,0,1,1,0,0,0,0,0") (ifseqformula "38"))
                                          (rule "add_literals" (formula "58") (term "1,1,0,0,1,1,0,0,0,0,0"))
                                          (rule "applyEq" (formula "39") (term "0") (ifseqformula "38"))
                                          (rule "qeq_literals" (formula "39"))
                                          (rule "true_left" (formula "39"))
                                          (rule "applyEq" (formula "42") (term "1,1,0") (ifseqformula "38"))
                                          (rule "applyEq" (formula "45") (term "0") (ifseqformula "38"))
                                          (rule "inEqSimp_homoInEq1" (formula "45"))
                                          (rule "mul_literals" (formula "45") (term "1,0"))
                                          (rule "polySimp_addComm1" (formula "45") (term "0"))
                                          (rule "add_literals" (formula "45") (term "0,0"))
                                          (rule "add_zero_left" (formula "45") (term "0"))
                                          (rule "applyEq" (formula "29") (term "1,1,0,0,0") (ifseqformula "38"))
                                          (rule "applyEq" (formula "10") (term "0") (ifseqformula "38"))
                                          (rule "inEqSimp_homoInEq1" (formula "10"))
                                          (rule "mul_literals" (formula "10") (term "1,0"))
                                          (rule "polySimp_addComm1" (formula "10") (term "0"))
                                          (rule "add_literals" (formula "10") (term "0,0"))
                                          (rule "applyEq" (formula "15") (term "1,1,0") (ifseqformula "38"))
                                          (rule "applyEq" (formula "25") (term "1,1,0") (ifseqformula "38"))
                                          (rule "applyEq" (formula "27") (term "1,1,0") (ifseqformula "38"))
                                          (rule "applyEq" (formula "16") (term "1,1,0") (ifseqformula "38"))
                                          (rule "applyEq" (formula "17") (term "1,1,1,0,0,1,0") (ifseqformula "38"))
                                          (rule "add_literals" (formula "17") (term "1,1,0,0,1,0"))
                                          (rule "applyEq" (formula "6") (term "0") (ifseqformula "38"))
                                          (rule "inEqSimp_homoInEq1" (formula "6"))
                                          (rule "mul_literals" (formula "6") (term "1,0"))
                                          (rule "polySimp_addComm1" (formula "6") (term "0"))
                                          (rule "add_literals" (formula "6") (term "0,0"))
                                          (rule "add_zero_left" (formula "6") (term "0"))
                                          (rule "applyEq" (formula "56") (term "0,1") (ifseqformula "38"))
                                          (rule "inEqSimp_homoInEq0" (formula "56") (term "1"))
                                          (rule "mul_literals" (formula "56") (term "1,0,1"))
                                          (rule "polySimp_addComm1" (formula "56") (term "0,1"))
                                          (rule "add_literals" (formula "56") (term "0,0,1"))
                                          (rule "applyEq" (formula "59") (term "1,1,0,0") (ifseqformula "38"))
                                          (rule "applyEq" (formula "36") (term "1,1,0") (ifseqformula "38"))
                                          (rule "add_literals" (formula "36") (term "1,0"))
                                          (rule "applyEq" (formula "26") (term "1,1,1,0") (ifseqformula "38"))
                                          (rule "add_literals" (formula "26") (term "1,1,0"))
                                          (rule "applyEq" (formula "2") (term "0") (ifseqformula "38"))
                                          (rule "inEqSimp_homoInEq1" (formula "2"))
                                          (rule "mul_literals" (formula "2") (term "1,0"))
                                          (rule "polySimp_addComm1" (formula "2") (term "0"))
                                          (rule "add_literals" (formula "2") (term "0,0"))
                                          (rule "add_zero_left" (formula "2") (term "0"))
                                          (rule "applyEq" (formula "32") (term "1,1,1,0") (ifseqformula "38"))
                                          (rule "add_literals" (formula "32") (term "1,1,0"))
                                          (rule "applyEq" (formula "21") (term "0") (ifseqformula "20"))
                                          (rule "applyEq" (formula "34") (term "0") (ifseqformula "36"))
                                          (rule "applyEq" (formula "50") (term "0") (ifseqformula "46"))
                                          (rule "applyEq" (formula "64") (term "0") (ifseqformula "34"))
                                          (rule "applyEq" (formula "35") (term "1,0") (ifseqformula "34"))
                                          (rule "applyEq" (formula "20") (term "1,1") (ifseqformula "34"))
                                          (rule "applyEq" (formula "23") (term "1,1") (ifseqformula "34"))
                                          (rule "applyEq" (formula "21") (term "1,0") (ifseqformula "34"))
                                          (builtin "One Step Simplification" (formula "21"))
                                          (rule "true_left" (formula "21"))
                                          (rule "applyEq" (formula "48") (term "1,0") (ifseqformula "33"))
                                          (builtin "One Step Simplification" (formula "48"))
                                          (rule "true_left" (formula "48"))
                                          (rule "applyEq" (formula "44") (term "1,1") (ifseqformula "33"))
                                          (rule "applyEq" (formula "29") (term "1,0") (ifseqformula "33"))
                                          (rule "applyEq" (formula "25") (term "1,0,0,0,0") (ifseqformula "33"))
                                          (rule "applyEq" (formula "49") (term "1,1") (ifseqformula "33"))
                                          (rule "applyEq" (formula "41") (term "1") (ifseqformula "33"))
                                          (rule "applyEq" (formula "34") (term "1") (ifseqformula "33"))
                                          (rule "applyEq" (formula "35") (term "1") (ifseqformula "36"))
                                          (rule "applyEq" (formula "55") (term "1") (ifseqformula "36"))
                                          (rule "applyEq" (formula "37") (term "1") (ifseqformula "36"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1"))
                                          (rule "mul_literals" (formula "30") (term "1,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "10"))
                                          (rule "mul_literals" (formula "10") (term "1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "53") (term "1"))
                                          (rule "mul_literals" (formula "53") (term "1,1"))
                                          (rule "inEqSimp_subsumption1" (formula "30") (term "1") (ifseqformula "9"))
                                          (rule "leq_literals" (formula "30") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "30"))
                                          (rule "true_left" (formula "30"))
                                          (rule "inEqSimp_subsumption1" (formula "52") (term "1") (ifseqformula "9"))
                                          (rule "leq_literals" (formula "52") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "52"))
                                          (rule "true_left" (formula "52"))
                                          (rule "inEqSimp_contradInEq0" (formula "9") (ifseqformula "10"))
                                          (rule "qeq_literals" (formula "9") (term "0"))
                                          (builtin "One Step Simplification" (formula "9"))
                                          (rule "closeFalse" (formula "9"))
                                       )
                                       (branch "CUT: self.size ≤ 1 FALSE"
                                          (builtin "One Step Simplification" (formula "31"))
                                          (rule "inEqSimp_leqRight" (formula "63"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                          (rule "mul_literals" (formula "1") (term "1"))
                                          (rule "inEqSimp_subsumption1" (formula "40") (ifseqformula "1"))
                                          (rule "leq_literals" (formula "40") (term "0"))
                                          (builtin "One Step Simplification" (formula "40"))
                                          (rule "true_left" (formula "40"))
                                          (rule "allLeft" (formula "30") (inst "t=j_0"))
                                          (rule "inEqSimp_commuteGeq" (formula "30") (term "1,0,0,0,0"))
                                          (rule "applyEq" (formula "30") (term "1,0,0,0,0,0,0,0") (ifseqformula "45"))
                                          (rule "inEqSimp_contradInEq1" (formula "30") (term "1,0,0,0,0") (ifseqformula "47"))
                                          (rule "inEqSimp_homoInEq1" (formula "30") (term "0,1,0,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,1,0,0,0,0"))
                                          (rule "add_literals" (formula "30") (term "1,1,0,0,1,0,0,0,0"))
                                          (rule "times_zero_1" (formula "30") (term "1,0,0,1,0,0,0,0"))
                                          (rule "add_zero_right" (formula "30") (term "0,0,1,0,0,0,0"))
                                          (rule "leq_literals" (formula "30") (term "0,1,0,0,0,0"))
                                          (builtin "One Step Simplification" (formula "30"))
                                          (rule "inEqSimp_contradInEq1" (formula "30") (term "1,0,0,0,0") (ifseqformula "46"))
                                          (rule "qeq_literals" (formula "30") (term "0,1,0,0,0,0"))
                                          (builtin "One Step Simplification" (formula "30"))
                                          (rule "allLeft" (formula "59") (inst "t=j_0"))
                                          (rule "inEqSimp_homoInEq1" (formula "59") (term "1"))
                                          (rule "polySimp_addComm1" (formula "59") (term "0,1"))
                                          (rule "applyEq" (formula "59") (term "1,0,0,0") (ifseqformula "45"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "59") (term "1"))
                                          (rule "polySimp_mulComm0" (formula "59") (term "1,1"))
                                          (rule "polySimp_rightDist" (formula "59") (term "1,1"))
                                          (rule "mul_literals" (formula "59") (term "0,1,1"))
                                          (rule "polySimp_mulLiterals" (formula "59") (term "1,1,1"))
                                          (rule "polySimp_elimOne" (formula "59") (term "1,1,1"))
                                          (rule "inEqSimp_contradInEq1" (formula "59") (term "1,0") (ifseqformula "46"))
                                          (rule "qeq_literals" (formula "59") (term "0,1,0"))
                                          (builtin "One Step Simplification" (formula "59"))
                                          (rule "pullOutSelect" (formula "59") (term "0,0") (inst "selectSK=IntNode_next_4"))
                                          (rule "simplifySelectOfAnon" (formula "59"))
                                          (builtin "One Step Simplification" (formula "59") (ifInst ""  (formula "68")) (ifInst ""  (formula "38")))
                                          (rule "eqSymm" (formula "60") (term "0"))
                                          (rule "applyEq" (formula "59") (term "2,0") (ifseqformula "32"))
                                          (rule "elementOfUnion" (formula "59") (term "0,0"))
                                          (rule "elementOfSingleton" (formula "59") (term "0,0,0"))
                                          (builtin "One Step Simplification" (formula "59"))
                                          (rule "elementOfInfiniteUnion" (formula "59") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "59"))
                                          (rule "elementOfSingleton" (formula "59") (term "1,0,0,0"))
                                          (builtin "One Step Simplification" (formula "59"))
                                          (rule "applyEqReverse" (formula "60") (term "1,0") (ifseqformula "59"))
                                          (rule "hideAuxiliaryEq" (formula "59"))
                                          (rule "allLeft" (formula "35") (inst "t=j_0"))
                                          (rule "inEqSimp_homoInEq1" (formula "35") (term "1"))
                                          (rule "polySimp_addComm1" (formula "35") (term "0,1"))
                                          (rule "applyEq" (formula "35") (term "1,0,0,0") (ifseqformula "46"))
                                          (rule "eqSymm" (formula "35") (term "0,0"))
                                          (rule "applyEq" (formula "35") (term "1,0,0") (ifseqformula "32"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1"))
                                          (rule "polySimp_mulComm0" (formula "35") (term "1,1"))
                                          (rule "polySimp_rightDist" (formula "35") (term "1,1"))
                                          (rule "mul_literals" (formula "35") (term "0,1,1"))
                                          (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1"))
                                          (rule "polySimp_elimOne" (formula "35") (term "1,1,1"))
                                          (rule "inEqSimp_contradInEq1" (formula "35") (term "1,0") (ifseqformula "47"))
                                          (rule "qeq_literals" (formula "35") (term "0,1,0"))
                                          (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "60")))
                                          (rule "true_left" (formula "35"))
                                          (rule "commute_and_2" (formula "53") (term "0,0,0,0"))
                                          (rule "seqGetAlphaCast" (formula "56") (term "1"))
                                          (rule "castedGetAny" (formula "56") (term "0"))
                                          (builtin "One Step Simplification" (formula "56"))
                                          (rule "true_left" (formula "56"))
                                          (rule "seqGetAlphaCast" (formula "4") (term "0"))
                                          (rule "castedGetAny" (formula "4") (term "0"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "true_left" (formula "4"))
                                          (rule "seqGetAlphaCast" (formula "34") (term "1,0"))
                                          (rule "castedGetAny" (formula "34") (term "0"))
                                          (builtin "One Step Simplification" (formula "34"))
                                          (rule "true_left" (formula "34"))
                                          (rule "cut_direct" (formula "34") (term "1"))
                                          (branch "CUT: self.size ≤ 2 + i_2_0 TRUE"
                                             (builtin "One Step Simplification" (formula "35"))
                                             (rule "true_left" (formula "35"))
                                             (rule "replace_known_left" (formula "58") (term "1") (ifseqformula "34"))
                                             (builtin "One Step Simplification" (formula "58"))
                                             (rule "true_left" (formula "58"))
                                             (rule "inEqSimp_antiSymm" (formula "11") (ifseqformula "34"))
                                             (rule "applyEq" (formula "17") (term "1,1,0") (ifseqformula "11"))
                                             (rule "applyEq" (formula "36") (term "1,1,1,0") (ifseqformula "11"))
                                             (rule "polySimp_addAssoc" (formula "36") (term "1,1,0"))
                                             (rule "add_literals" (formula "36") (term "0,1,1,0"))
                                             (rule "applyEq" (formula "22") (term "1,1,0") (ifseqformula "11"))
                                             (rule "polySimp_addAssoc" (formula "22") (term "1,0"))
                                             (rule "add_literals" (formula "22") (term "0,1,0"))
                                             (rule "applyEq" (formula "29") (term "1,1,0") (ifseqformula "11"))
                                             (rule "applyEq" (formula "26") (term "1,1,0") (ifseqformula "11"))
                                             (rule "applyEq" (formula "56") (term "1,1,1,0,0,1,1,0,0,0,0,0") (ifseqformula "11"))
                                             (rule "polySimp_addAssoc" (formula "56") (term "1,1,0,0,1,1,0,0,0,0,0"))
                                             (rule "add_literals" (formula "56") (term "0,1,1,0,0,1,1,0,0,0,0,0"))
                                             (rule "applyEq" (formula "7") (term "0") (ifseqformula "11"))
                                             (rule "inEqSimp_homoInEq1" (formula "7"))
                                             (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "7") (term "1,0"))
                                             (rule "mul_literals" (formula "7") (term "0,1,0"))
                                             (rule "polySimp_addComm1" (formula "7") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                                             (rule "add_literals" (formula "7") (term "0,0,0"))
                                             (rule "applyEq" (formula "1") (term "0") (ifseqformula "11"))
                                             (rule "inEqSimp_homoInEq1" (formula "1"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                             (rule "mul_literals" (formula "1") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                             (rule "add_literals" (formula "1") (term "0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0"))
                                             (rule "applyEq" (formula "3") (term "0") (ifseqformula "11"))
                                             (rule "inEqSimp_homoInEq1" (formula "3"))
                                             (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                             (rule "mul_literals" (formula "3") (term "0,1,0"))
                                             (rule "polySimp_addComm1" (formula "3") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                             (rule "add_literals" (formula "3") (term "0,0,0"))
                                             (rule "applyEq" (formula "35") (term "0") (ifseqformula "11"))
                                             (rule "inEqSimp_homoInEq0" (formula "35"))
                                             (rule "polySimp_pullOutFactor1" (formula "35") (term "0"))
                                             (rule "add_literals" (formula "35") (term "1,0"))
                                             (rule "times_zero_1" (formula "35") (term "0"))
                                             (rule "qeq_literals" (formula "35"))
                                             (rule "true_left" (formula "35"))
                                             (rule "applyEq" (formula "43") (term "1,1,0") (ifseqformula "11"))
                                             (rule "applyEq" (formula "51") (term "0") (ifseqformula "11"))
                                             (rule "inEqSimp_homoInEq1" (formula "51"))
                                             (rule "polySimp_mulComm0" (formula "51") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "51") (term "1,0"))
                                             (rule "mul_literals" (formula "51") (term "0,1,0"))
                                             (rule "polySimp_addComm1" (formula "51") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "51") (term "0,0"))
                                             (rule "add_literals" (formula "51") (term "0,0,0"))
                                             (rule "applyEq" (formula "59") (term "1,1,1,0,0,1,1,0,0,0,0,0") (ifseqformula "11"))
                                             (rule "polySimp_addAssoc" (formula "59") (term "1,1,0,0,1,1,0,0,0,0,0"))
                                             (rule "add_literals" (formula "59") (term "0,1,1,0,0,1,1,0,0,0,0,0"))
                                             (rule "applyEq" (formula "32") (term "1,1,0,0,0,0,0") (ifseqformula "11"))
                                             (rule "applyEq" (formula "31") (term "1,1,0,0") (ifseqformula "11"))
                                             (rule "applyEq" (formula "61") (term "1,1,0,0") (ifseqformula "11"))
                                             (rule "applyEq" (formula "20") (term "1,1,0") (ifseqformula "11"))
                                             (rule "applyEq" (formula "27") (term "1,1,0") (ifseqformula "11"))
                                             (rule "applyEq" (formula "18") (term "1,1,0") (ifseqformula "11"))
                                             (rule "applyEq" (formula "30") (term "1,1,0") (ifseqformula "11"))
                                             (rule "applyEq" (formula "19") (term "1,1,1,0,0,1,0") (ifseqformula "11"))
                                             (rule "polySimp_addAssoc" (formula "19") (term "1,1,0,0,1,0"))
                                             (rule "add_literals" (formula "19") (term "0,1,1,0,0,1,0"))
                                             (rule "applyEq" (formula "28") (term "1,1,1,0") (ifseqformula "11"))
                                             (rule "polySimp_addAssoc" (formula "28") (term "1,1,0"))
                                             (rule "add_literals" (formula "28") (term "0,1,1,0"))
                                             (rule "applyEq" (formula "59") (term "1,1,1,0") (ifseqformula "11"))
                                             (rule "polySimp_addAssoc" (formula "59") (term "1,1,0"))
                                             (rule "add_literals" (formula "59") (term "0,1,1,0"))
                                             (rule "applyEq" (formula "39") (term "1,1,0") (ifseqformula "11"))
                                             (rule "polySimp_addAssoc" (formula "39") (term "1,0"))
                                             (rule "add_literals" (formula "39") (term "0,1,0"))
                                             (rule "applyEq" (formula "48") (term "1,1,0") (ifseqformula "11"))
                                             (rule "polySimp_addAssoc" (formula "48") (term "1,0"))
                                             (rule "add_literals" (formula "48") (term "0,1,0"))
                                             (rule "applyEq" (formula "47") (term "0") (ifseqformula "11"))
                                             (rule "inEqSimp_homoInEq1" (formula "47"))
                                             (rule "polySimp_mulComm0" (formula "47") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "47") (term "1,0"))
                                             (rule "mul_literals" (formula "47") (term "0,1,0"))
                                             (rule "polySimp_addComm1" (formula "47") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "47") (term "0,0"))
                                             (rule "add_literals" (formula "47") (term "0,0,0"))
                                             (rule "applyEq" (formula "53") (term "1,1,1,0,0,0,0") (ifseqformula "11"))
                                             (rule "polySimp_addAssoc" (formula "53") (term "1,1,0,0,0,0"))
                                             (rule "add_literals" (formula "53") (term "0,1,1,0,0,0,0"))
                                             (rule "applyEq" (formula "44") (term "1,1,0") (ifseqformula "11"))
                                             (rule "applyEq" (formula "58") (term "0,1") (ifseqformula "11"))
                                             (rule "inEqSimp_homoInEq0" (formula "58") (term "1"))
                                             (rule "polySimp_mulComm0" (formula "58") (term "1,0,1"))
                                             (rule "polySimp_rightDist" (formula "58") (term "1,0,1"))
                                             (rule "mul_literals" (formula "58") (term "0,1,0,1"))
                                             (rule "polySimp_addComm1" (formula "58") (term "0,1"))
                                             (rule "polySimp_addAssoc" (formula "58") (term "0,0,1"))
                                             (rule "add_literals" (formula "58") (term "0,0,0,1"))
                                             (rule "applyEq" (formula "12") (term "0") (ifseqformula "11"))
                                             (rule "inEqSimp_homoInEq1" (formula "12"))
                                             (rule "polySimp_pullOutFactor1" (formula "12") (term "0"))
                                             (rule "add_literals" (formula "12") (term "1,0"))
                                             (rule "times_zero_1" (formula "12") (term "0"))
                                             (rule "leq_literals" (formula "12"))
                                             (rule "true_left" (formula "12"))
                                             (rule "applyEq" (formula "31") (term "1,1,0,0,0") (ifseqformula "11"))
                                             (rule "applyEq" (formula "54") (term "1,1,0") (ifseqformula "11"))
                                             (rule "applyEq" (formula "21") (term "0") (ifseqformula "23"))
                                             (rule "applyEq" (formula "56") (term "1,1,0") (ifseqformula "38"))
                                             (rule "applyEq" (formula "63") (term "0") (ifseqformula "38"))
                                             (rule "applyEq" (formula "52") (term "1,0,0,1,0,0") (ifseqformula "38"))
                                             (rule "replace_known_left" (formula "52") (term "0,1,0,0") (ifseqformula "37"))
                                             (builtin "One Step Simplification" (formula "52"))
                                             (rule "applyEq" (formula "56") (term "1,0,0,0") (ifseqformula "38"))
                                             (rule "replace_known_left" (formula "56") (term "0,0") (ifseqformula "37"))
                                             (builtin "One Step Simplification" (formula "56"))
                                             (rule "hideAuxiliaryEq" (formula "56"))
                                             (rule "applyEq" (formula "55") (term "1") (ifseqformula "38"))
                                             (rule "applyEq" (formula "23") (term "1,1") (ifseqformula "38"))
                                             (rule "applyEq" (formula "28") (term "1,0,0,0,0,0") (ifseqformula "38"))
                                             (rule "applyEq" (formula "39") (term "1") (ifseqformula "11"))
                                             (rule "applyEq" (formula "58") (term "1") (ifseqformula "11"))
                                             (rule "applyEq" (formula "40") (term "1") (ifseqformula "11"))
                                             (rule "applyEq" (formula "21") (term "1,0") (ifseqformula "38"))
                                             (builtin "One Step Simplification" (formula "21"))
                                             (rule "true_left" (formula "21"))
                                             (rule "applyEq" (formula "51") (term "1,1,0,0,0,0") (ifseqformula "37"))
                                             (rule "applyEq" (formula "51") (term "1,1,0") (ifseqformula "37"))
                                             (rule "applyEq" (formula "51") (term "1,2,0") (ifseqformula "37"))
                                             (rule "applyEq" (formula "51") (term "1") (ifseqformula "46"))
                                             (builtin "One Step Simplification" (formula "51"))
                                             (rule "eqSymm" (formula "51") (term "1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "7"))
                                             (rule "polySimp_mulComm0" (formula "7") (term "1"))
                                             (rule "polySimp_rightDist" (formula "7") (term "1"))
                                             (rule "mul_literals" (formula "7") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "7") (term "1,1"))
                                             (rule "inEqSimp_invertInEq0" (formula "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                             (rule "times_zero_2" (formula "1") (term "1"))
                                             (rule "polySimp_elimOne" (formula "1") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                             (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                             (rule "polySimp_rightDist" (formula "2") (term "1"))
                                             (rule "mul_literals" (formula "2") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "48"))
                                             (rule "polySimp_mulComm0" (formula "48") (term "1"))
                                             (rule "polySimp_rightDist" (formula "48") (term "1"))
                                             (rule "mul_literals" (formula "48") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "48") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "48") (term "1,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "44"))
                                             (rule "polySimp_mulComm0" (formula "44") (term "1"))
                                             (rule "polySimp_rightDist" (formula "44") (term "1"))
                                             (rule "mul_literals" (formula "44") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "44") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "44") (term "1,1"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "54") (term "1"))
                                             (rule "polySimp_mulComm0" (formula "54") (term "1,1"))
                                             (rule "polySimp_rightDist" (formula "54") (term "1,1"))
                                             (rule "mul_literals" (formula "54") (term "0,1,1"))
                                             (rule "polySimp_mulLiterals" (formula "54") (term "1,1,1"))
                                             (rule "polySimp_elimOne" (formula "54") (term "1,1,1"))
                                             (rule "inEqSimp_exactShadow3" (formula "43") (ifseqformula "44"))
                                             (rule "times_zero_1" (formula "43") (term "0,0"))
                                             (rule "add_zero_left" (formula "43") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "43"))
                                             (rule "mul_literals" (formula "43") (term "1"))
                                             (rule "inEqSimp_subsumption1" (formula "43") (ifseqformula "9"))
                                             (rule "leq_literals" (formula "43") (term "0"))
                                             (builtin "One Step Simplification" (formula "43"))
                                             (rule "true_left" (formula "43"))
                                             (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "6"))
                                             (rule "times_zero_1" (formula "5") (term "0,0"))
                                             (rule "add_zero_left" (formula "5") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                             (rule "mul_literals" (formula "5") (term "1"))
                                             (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "10"))
                                             (rule "leq_literals" (formula "5") (term "0"))
                                             (builtin "One Step Simplification" (formula "5"))
                                             (rule "true_left" (formula "5"))
                                             (rule "inEqSimp_exactShadow3" (formula "47") (ifseqformula "48"))
                                             (rule "times_zero_1" (formula "47") (term "0,0"))
                                             (rule "add_zero_left" (formula "47") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "47"))
                                             (rule "mul_literals" (formula "47") (term "1"))
                                             (rule "inEqSimp_subsumption1" (formula "47") (ifseqformula "9"))
                                             (rule "leq_literals" (formula "47") (term "0"))
                                             (builtin "One Step Simplification" (formula "47"))
                                             (rule "true_left" (formula "47"))
                                             (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                                             (rule "times_zero_1" (formula "1") (term "0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                             (rule "mul_literals" (formula "1") (term "1"))
                                             (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "10"))
                                             (rule "leq_literals" (formula "1") (term "0"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "true_left" (formula "1"))
                                             (rule "inEqSimp_or_weaken3" (formula "26") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "26") (term "1,0,1,0"))
                                             (rule "add_literals" (formula "26") (term "0,1,0,1,0"))
                                             (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "25")))
                                             (rule "true_left" (formula "26"))
                                             (rule "seqGetAlphaCast" (formula "21") (term "0"))
                                             (rule "castDel" (formula "21") (term "0"))
                                             (builtin "One Step Simplification" (formula "21"))
                                             (rule "true_left" (formula "21"))
                                             (rule "seqGetAlphaCast" (formula "45") (term "0"))
                                             (rule "castedGetAny" (formula "45") (term "0"))
                                             (builtin "One Step Simplification" (formula "45"))
                                             (rule "true_left" (formula "45"))
                                             (rule "seqGetAlphaCast" (formula "48") (term "0"))
                                             (rule "castDel" (formula "48") (term "0"))
                                             (builtin "One Step Simplification" (formula "48"))
                                             (rule "true_left" (formula "48"))
                                             (rule "seqGetAlphaCast" (formula "22") (term "0"))
                                             (rule "castDel" (formula "22") (term "0"))
                                             (builtin "One Step Simplification" (formula "22"))
                                             (rule "true_left" (formula "22"))
                                             (rule "seqGetAlphaCast" (formula "50") (term "0"))
                                             (rule "castDel" (formula "50") (term "0"))
                                             (builtin "One Step Simplification" (formula "50"))
                                             (rule "true_left" (formula "50"))
                                             (rule "commute_and" (formula "49") (term "0,0,0"))
                                             (rule "seqGetAlphaCast" (formula "4") (term "0"))
                                             (rule "castedGetAny" (formula "4") (term "0"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "true_left" (formula "4"))
                                             (rule "seqGetAlphaCast" (formula "53") (term "0,0"))
                                             (rule "castedGetAny" (formula "53") (term "0"))
                                             (builtin "One Step Simplification" (formula "53"))
                                             (rule "true_left" (formula "53"))
                                             (rule "allLeft" (formula "26") (inst "t=j_1_0"))
                                             (rule "replace_known_left" (formula "26") (term "0,0,0,0") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "65")))
                                             (rule "inEqSimp_contradInEq1" (formula "26") (term "0") (ifseqformula "1"))
                                             (rule "qeq_literals" (formula "26") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "26"))
                                             (rule "inEqSimp_contradEq7" (formula "65") (ifseqformula "26"))
                                             (rule "polySimp_mulComm0" (formula "65") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "65") (term "0,0"))
                                             (rule "add_literals" (formula "65") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "65") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "65") (term "0,0"))
                                             (rule "leq_literals" (formula "65") (term "0"))
                                             (builtin "One Step Simplification" (formula "65"))
                                             (rule "false_right" (formula "65"))
                                             (rule "inEqSimp_contradInEq0" (formula "26") (ifseqformula "2"))
                                             (rule "andLeft" (formula "26"))
                                             (rule "inEqSimp_homoInEq1" (formula "26"))
                                             (rule "polySimp_mulComm0" (formula "26") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "26") (term "1,0"))
                                             (rule "mul_literals" (formula "26") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "26") (term "0"))
                                             (rule "polySimp_addComm1" (formula "26") (term "0,0"))
                                             (rule "add_literals" (formula "26") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "26") (term "0"))
                                             (rule "add_literals" (formula "26") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "26") (term "1,0"))
                                             (rule "add_literals" (formula "26") (term "0"))
                                             (rule "leq_literals" (formula "26"))
                                             (rule "closeFalse" (formula "26"))
                                          )
                                          (branch "CUT: self.size ≤ 2 + i_2_0 FALSE"
                                             (builtin "One Step Simplification" (formula "34"))
                                             (rule "replace_known_right" (formula "58") (term "1") (ifseqformula "65"))
                                             (builtin "One Step Simplification" (formula "58"))
                                             (rule "applyEqReverse" (formula "57") (term "1") (ifseqformula "58"))
                                             (rule "hideAuxiliaryEq" (formula "58"))
                                             (rule "inEqSimp_leqRight" (formula "64"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                             (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0,0"))
                                             (rule "applyEq" (formula "58") (term "1,0") (ifseqformula "35"))
                                             (builtin "One Step Simplification" (formula "58"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1"))
                                             (rule "mul_literals" (formula "1") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                             (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "1"))
                                             (rule "inEqSimp_homoInEq0" (formula "12") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "12") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "12") (term "1,0,0"))
                                             (rule "mul_literals" (formula "12") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "12") (term "0,0"))
                                             (rule "polySimp_addComm1" (formula "12") (term "0,0,0"))
                                             (rule "add_literals" (formula "12") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0"))
                                             (rule "add_literals" (formula "12") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "12") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "12") (term "0,0"))
                                             (rule "qeq_literals" (formula "12") (term "0"))
                                             (builtin "One Step Simplification" (formula "12"))
                                             (rule "true_left" (formula "12"))
                                             (rule "commute_or_2" (formula "30") (term "0"))
                                             (rule "seqGetAlphaCast" (formula "23") (term "0"))
                                             (rule "castDel" (formula "23") (term "0"))
                                             (builtin "One Step Simplification" (formula "23"))
                                             (rule "true_left" (formula "23"))
                                             (rule "allLeft" (formula "19") (inst "t=j_1_0"))
                                             (rule "inEqSimp_commuteGeq" (formula "19") (term "1"))
                                             (rule "applyEq" (formula "19") (term "0,0,0,0") (ifseqformula "5"))
                                             (rule "replace_known_right" (formula "19") (term "0,0,0") (ifseqformula "68"))
                                             (builtin "One Step Simplification" (formula "19"))
                                             (rule "true_left" (formula "19"))
                                             (rule "allLeft" (formula "44") (inst "t=add(Z(1(#)), i_2_0)"))
                                             (rule "typeEqDerived2" (formula "44") (term "0,0,0") (ifseqformula "54"))
                                             (builtin "One Step Simplification" (formula "44"))
                                             (rule "true_left" (formula "44"))
                                             (rule "allLeft" (formula "55") (inst "t=j_1"))
                                             (rule "inEqSimp_commuteGeq" (formula "55") (term "1"))
                                             (rule "applyEq" (formula "55") (term "1,0,0,0") (ifseqformula "49"))
                                             (rule "replaceKnownSelect_taclet1011111_18" (formula "55") (term "0,0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet1011111_19" (formula "55") (term "0,0,0"))
                                             (rule "eqSymm" (formula "55") (term "0,0"))
                                             (rule "applyEq" (formula "55") (term "1,0,0") (ifseqformula "52"))
                                             (rule "inEqSimp_contradInEq1" (formula "55") (term "1,0") (ifseqformula "50"))
                                             (rule "qeq_literals" (formula "55") (term "0,1,0"))
                                             (builtin "One Step Simplification" (formula "55"))
                                             (rule "inEqSimp_contradInEq1" (formula "55") (term "1") (ifseqformula "51"))
                                             (rule "inEqSimp_homoInEq1" (formula "55") (term "0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "55") (term "0,0,1"))
                                             (rule "add_literals" (formula "55") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "55") (term "1,0,0,1"))
                                             (rule "add_zero_right" (formula "55") (term "0,0,1"))
                                             (rule "leq_literals" (formula "55") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "55"))
                                             (rule "allLeft" (formula "17") (inst "t=add(Z(1(#)), i_2_0)"))
                                             (rule "typeEqDerived" (formula "17") (term "0,0,0") (ifseqformula "24"))
                                             (builtin "One Step Simplification" (formula "17"))
                                             (rule "true_left" (formula "17"))
                                             (rule "allLeft" (formula "56") (inst "t=j_1_0"))
                                             (rule "inEqSimp_commuteGeq" (formula "56") (term "1"))
                                             (rule "applyEq" (formula "56") (term "1,0,0,0") (ifseqformula "5"))
                                             (rule "replaceKnownSelect_taclet1011111_15" (formula "56") (term "0,0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet11011111_20" (formula "56") (term "0,0,0"))
                                             (rule "eqSymm" (formula "56") (term "0,0"))
                                             (rule "applyEq" (formula "56") (term "1,0,0") (ifseqformula "9"))
                                             (rule "inEqSimp_contradInEq1" (formula "56") (term "1,0") (ifseqformula "3"))
                                             (rule "qeq_literals" (formula "56") (term "0,1,0"))
                                             (builtin "One Step Simplification" (formula "56"))
                                             (rule "inEqSimp_contradInEq1" (formula "56") (term "1") (ifseqformula "4"))
                                             (rule "inEqSimp_homoInEq1" (formula "56") (term "0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "56") (term "0,0,1"))
                                             (rule "add_literals" (formula "56") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "56") (term "1,0,0,1"))
                                             (rule "add_zero_right" (formula "56") (term "0,0,1"))
                                             (rule "leq_literals" (formula "56") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "56"))
                                             (rule "allLeft" (formula "43") (inst "t=add(Z(1(#)), i_2_0)"))
                                             (rule "inEqSimp_commuteGeq" (formula "43") (term "1"))
                                             (rule "inEqSimp_homoInEq0" (formula "43") (term "1,0"))
                                             (rule "polySimp_mulComm0" (formula "43") (term "1,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "43") (term "1,0,1,0"))
                                             (rule "mul_literals" (formula "43") (term "0,1,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "43") (term "0,1,0"))
                                             (rule "add_literals" (formula "43") (term "0,0,1,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "43") (term "1,0"))
                                             (rule "polySimp_mulLiterals" (formula "43") (term "0,1,0"))
                                             (rule "polySimp_elimOne" (formula "43") (term "0,1,0"))
                                             (rule "inEqSimp_contradInEq1" (formula "43") (term "1") (ifseqformula "1"))
                                             (rule "inEqSimp_homoInEq1" (formula "43") (term "0,1"))
                                             (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "43") (term "1,0,0,1"))
                                             (rule "mul_literals" (formula "43") (term "0,1,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "43") (term "0,0,1"))
                                             (rule "polySimp_addComm1" (formula "43") (term "0,0,0,1"))
                                             (rule "add_literals" (formula "43") (term "0,0,0,0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "43") (term "0,0,1"))
                                             (rule "add_literals" (formula "43") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "43") (term "1,0,0,1"))
                                             (rule "add_zero_right" (formula "43") (term "0,0,1"))
                                             (rule "leq_literals" (formula "43") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "43"))
                                             (rule "inEqSimp_contradInEq1" (formula "43") (term "1") (ifseqformula "11"))
                                             (rule "qeq_literals" (formula "43") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "43"))
                                             (rule "notLeft" (formula "43"))
                                             (rule "allLeft" (formula "16") (inst "t=add(Z(1(#)), i_2_0)"))
                                             (rule "inEqSimp_commuteGeq" (formula "16") (term "1"))
                                             (rule "inEqSimp_homoInEq0" (formula "16") (term "1,0"))
                                             (rule "polySimp_mulComm0" (formula "16") (term "1,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "16") (term "1,0,1,0"))
                                             (rule "mul_literals" (formula "16") (term "0,1,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "16") (term "0,1,0"))
                                             (rule "add_literals" (formula "16") (term "0,0,1,0"))
                                             (rule "applyEq" (formula "16") (term "0,0,0,0") (ifseqformula "24"))
                                             (builtin "One Step Simplification" (formula "16"))
                                             (rule "true_left" (formula "16"))
                                             (rule "allLeft" (formula "19") (inst "t=j_1"))
                                             (rule "inEqSimp_commuteGeq" (formula "19") (term "1"))
                                             (rule "applyEq" (formula "19") (term "0,0,0,0") (ifseqformula "50"))
                                             (rule "replace_known_right" (formula "19") (term "0,0,0") (ifseqformula "69"))
                                             (builtin "One Step Simplification" (formula "19"))
                                             (rule "true_left" (formula "19"))
                                             (rule "allLeft" (formula "25") (inst "t=j_1"))
                                             (rule "inEqSimp_commuteGeq" (formula "25") (term "1"))
                                             (rule "applyEq" (formula "25") (term "1,1,0,0") (ifseqformula "50"))
                                             (rule "inEqSimp_contradInEq1" (formula "25") (term "1") (ifseqformula "52"))
                                             (rule "inEqSimp_homoInEq1" (formula "25") (term "0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,1"))
                                             (rule "add_literals" (formula "25") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "25") (term "1,0,0,1"))
                                             (rule "add_literals" (formula "25") (term "0,0,1"))
                                             (rule "leq_literals" (formula "25") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "25"))
                                             (rule "inEqSimp_contradInEq1" (formula "25") (term "1") (ifseqformula "51"))
                                             (rule "qeq_literals" (formula "25") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "25"))
                                             (rule "allLeft" (formula "26") (inst "t=j_1_0"))
                                             (rule "inEqSimp_commuteGeq" (formula "26") (term "1"))
                                             (rule "applyEq" (formula "26") (term "1,1,0,0") (ifseqformula "5"))
                                             (rule "inEqSimp_contradInEq1" (formula "26") (term "1") (ifseqformula "4"))
                                             (rule "inEqSimp_homoInEq1" (formula "26") (term "0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,1"))
                                             (rule "add_literals" (formula "26") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "26") (term "1,0,0,1"))
                                             (rule "add_literals" (formula "26") (term "0,0,1"))
                                             (rule "leq_literals" (formula "26") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "26"))
                                             (rule "inEqSimp_contradInEq1" (formula "26") (term "1") (ifseqformula "3"))
                                             (rule "qeq_literals" (formula "26") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "26"))
                                             (rule "seqGetAlphaCast" (formula "55") (term "1"))
                                             (rule "castDel" (formula "55") (term "0"))
                                             (builtin "One Step Simplification" (formula "55"))
                                             (rule "true_left" (formula "55"))
                                             (rule "seqGetAlphaCast" (formula "51") (term "0"))
                                             (rule "castedGetAny" (formula "51") (term "0"))
                                             (builtin "One Step Simplification" (formula "51"))
                                             (rule "true_left" (formula "51"))
                                             (rule "seqGetAlphaCast" (formula "54") (term "0"))
                                             (rule "castDel" (formula "54") (term "0"))
                                             (builtin "One Step Simplification" (formula "54"))
                                             (rule "true_left" (formula "54"))
                                             (rule "commute_and" (formula "55") (term "0,0,0,0,0"))
                                             (rule "allLeft" (formula "31") (inst "t=j_1_0"))
                                             (rule "replace_known_right" (formula "31") (term "1,0") (ifseqformula "76"))
                                             (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "5")))
                                             (rule "inEqSimp_commuteGeq" (formula "31") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "31") (term "0") (ifseqformula "3"))
                                             (rule "qeq_literals" (formula "31") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "31"))
                                             (rule "inEqSimp_contradInEq1" (formula "31") (ifseqformula "4"))
                                             (rule "andLeft" (formula "31"))
                                             (rule "inEqSimp_homoInEq1" (formula "31"))
                                             (rule "polySimp_pullOutFactor1b" (formula "31") (term "0"))
                                             (rule "add_literals" (formula "31") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "31") (term "1,0"))
                                             (rule "add_zero_right" (formula "31") (term "0"))
                                             (rule "leq_literals" (formula "31"))
                                             (rule "closeFalse" (formula "31"))
                                          )
                                       )
                                    )
                                    (branch "∃ int j; ( (IntNode)self.nodeseq[j] = (IntNode)self.nodeseq[i_2_0] ∧ j ≥ 0 ∧ j ≤ -1 + self.size) FALSE"
                                       (rule "eqSymm" (formula "4"))
                                       (rule "applyEq" (formula "65") (term "0") (ifseqformula "4"))
                                       (builtin "One Step Simplification" (formula "65"))
                                       (rule "false_right" (formula "65"))
                                       (rule "nnf_ex2all" (formula "60"))
                                       (rule "nnf_notAnd" (formula "1") (term "0"))
                                       (rule "inEqSimp_notLeq" (formula "1") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0"))
                                       (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0,1,0"))
                                       (rule "add_zero_left" (formula "1") (term "0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1,1,0"))
                                       (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_notGeq" (formula "1") (term "1,0,0"))
                                       (rule "times_zero_1" (formula "1") (term "1,0,0,1,0,0"))
                                       (rule "add_zero_right" (formula "1") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1,0,0"))
                                       (rule "mul_literals" (formula "1") (term "1,1,0,0"))
                                       (rule "seqGetAlphaCast" (formula "29") (term "0,0"))
                                       (rule "castedGetAny" (formula "29") (term "0"))
                                       (builtin "One Step Simplification" (formula "29"))
                                       (rule "true_left" (formula "29"))
                                       (rule "cut_direct" (formula "29") (term "1"))
                                       (branch "CUT: self.size ≤ 1 TRUE"
                                          (builtin "One Step Simplification" (formula "30"))
                                          (rule "true_left" (formula "30"))
                                          (rule "inEqSimp_antiSymm" (formula "37") (ifseqformula "29"))
                                          (rule "applyEq" (formula "42") (term "1,1,0") (ifseqformula "37"))
                                          (rule "applyEq" (formula "29") (term "0") (ifseqformula "37"))
                                          (rule "leq_literals" (formula "29"))
                                          (rule "true_left" (formula "29"))
                                          (rule "applyEq" (formula "3") (term "0") (ifseqformula "36"))
                                          (rule "inEqSimp_homoInEq1" (formula "3"))
                                          (rule "mul_literals" (formula "3") (term "1,0"))
                                          (rule "polySimp_addComm1" (formula "3") (term "0"))
                                          (rule "add_literals" (formula "3") (term "0,0"))
                                          (rule "add_zero_left" (formula "3") (term "0"))
                                          (rule "applyEq" (formula "55") (term "0,1") (ifseqformula "36"))
                                          (rule "inEqSimp_homoInEq0" (formula "55") (term "1"))
                                          (rule "mul_literals" (formula "55") (term "1,0,1"))
                                          (rule "polySimp_addComm1" (formula "55") (term "0,1"))
                                          (rule "add_literals" (formula "55") (term "0,0,1"))
                                          (rule "applyEq" (formula "48") (term "0") (ifseqformula "36"))
                                          (rule "inEqSimp_homoInEq1" (formula "48"))
                                          (rule "mul_literals" (formula "48") (term "1,0"))
                                          (rule "polySimp_addComm1" (formula "48") (term "0"))
                                          (rule "add_literals" (formula "48") (term "0,0"))
                                          (rule "add_zero_left" (formula "48") (term "0"))
                                          (rule "applyEq" (formula "56") (term "1,1,1,0,0,1,1,0,0,0,0,0") (ifseqformula "36"))
                                          (rule "add_literals" (formula "56") (term "1,1,0,0,1,1,0,0,0,0,0"))
                                          (rule "applyEq" (formula "14") (term "1,1,0") (ifseqformula "36"))
                                          (rule "applyEq" (formula "15") (term "1,1,1,0,0,1,0") (ifseqformula "36"))
                                          (rule "add_literals" (formula "15") (term "1,1,0,0,1,0"))
                                          (rule "applyEq" (formula "56") (term "1,1,1,0") (ifseqformula "36"))
                                          (rule "add_literals" (formula "56") (term "1,1,0"))
                                          (rule "applyEq" (formula "13") (term "1,1,0") (ifseqformula "36"))
                                          (rule "applyEq" (formula "16") (term "1,1,0") (ifseqformula "36"))
                                          (rule "applyEq" (formula "23") (term "1,1,0") (ifseqformula "36"))
                                          (rule "applyEq" (formula "1") (term "1,1,0") (ifseqformula "36"))
                                          (rule "applyEq" (formula "24") (term "1,1,1,0") (ifseqformula "36"))
                                          (rule "add_literals" (formula "24") (term "1,1,0"))
                                          (rule "applyEq" (formula "8") (term "0") (ifseqformula "36"))
                                          (rule "inEqSimp_homoInEq1" (formula "8"))
                                          (rule "mul_literals" (formula "8") (term "1,0"))
                                          (rule "polySimp_addComm1" (formula "8") (term "0"))
                                          (rule "add_literals" (formula "8") (term "0,0"))
                                          (rule "applyEq" (formula "25") (term "1,1,0") (ifseqformula "36"))
                                          (rule "applyEq" (formula "37") (term "0") (ifseqformula "36"))
                                          (rule "qeq_literals" (formula "37"))
                                          (rule "true_left" (formula "37"))
                                          (rule "applyEq" (formula "57") (term "1,1,0,0") (ifseqformula "36"))
                                          (rule "applyEq" (formula "51") (term "1,1,0") (ifseqformula "36"))
                                          (rule "applyEq" (formula "26") (term "1,1,0") (ifseqformula "36"))
                                          (rule "applyEq" (formula "18") (term "1,1,0") (ifseqformula "36"))
                                          (rule "add_literals" (formula "18") (term "1,0"))
                                          (rule "applyEq" (formula "39") (term "1,1,0") (ifseqformula "36"))
                                          (rule "applyEq" (formula "44") (term "1,1,0") (ifseqformula "36"))
                                          (rule "add_literals" (formula "44") (term "1,0"))
                                          (rule "applyEq" (formula "29") (term "0,1") (ifseqformula "36"))
                                          (rule "inEqSimp_homoInEq0" (formula "29") (term "1"))
                                          (rule "mul_literals" (formula "29") (term "1,0,1"))
                                          (rule "polySimp_addComm1" (formula "29") (term "0,1"))
                                          (rule "add_literals" (formula "29") (term "0,0,1"))
                                          (rule "applyEq" (formula "43") (term "0") (ifseqformula "36"))
                                          (rule "inEqSimp_homoInEq1" (formula "43"))
                                          (rule "mul_literals" (formula "43") (term "1,0"))
                                          (rule "polySimp_addComm1" (formula "43") (term "0"))
                                          (rule "add_literals" (formula "43") (term "0,0"))
                                          (rule "add_zero_left" (formula "43") (term "0"))
                                          (rule "applyEq" (formula "51") (term "1,1,1,0,0,1,1,0,0,0,0,0") (ifseqformula "36"))
                                          (rule "add_literals" (formula "51") (term "1,1,0,0,1,1,0,0,0,0,0"))
                                          (rule "applyEq" (formula "27") (term "1,1,0,0,0,0,0") (ifseqformula "36"))
                                          (rule "applyEq" (formula "22") (term "1,1,0") (ifseqformula "36"))
                                          (rule "applyEq" (formula "34") (term "1,1,0") (ifseqformula "36"))
                                          (rule "add_literals" (formula "34") (term "1,0"))
                                          (rule "applyEq" (formula "27") (term "1,1,0,0,0") (ifseqformula "36"))
                                          (rule "applyEq" (formula "49") (term "1,1,1,0,0,0,0,0") (ifseqformula "36"))
                                          (rule "add_literals" (formula "49") (term "1,1,0,0,0,0,0"))
                                          (rule "applyEq" (formula "30") (term "1,1,1,0") (ifseqformula "36"))
                                          (rule "add_literals" (formula "30") (term "1,1,0"))
                                          (rule "applyEq" (formula "48") (term "0") (ifseqformula "44"))
                                          (rule "applyEq" (formula "19") (term "0") (ifseqformula "18"))
                                          (rule "applyEq" (formula "32") (term "0") (ifseqformula "34"))
                                          (rule "applyEq" (formula "28") (term "1,0") (ifseqformula "32"))
                                          (rule "applyEq" (formula "48") (term "1,0") (ifseqformula "32"))
                                          (builtin "One Step Simplification" (formula "48"))
                                          (rule "true_left" (formula "48"))
                                          (rule "applyEq" (formula "19") (term "1,0") (ifseqformula "32"))
                                          (builtin "One Step Simplification" (formula "19"))
                                          (rule "true_left" (formula "19"))
                                          (rule "applyEq" (formula "43") (term "1,1") (ifseqformula "31"))
                                          (rule "applyEq" (formula "23") (term "1,0,0,0,0") (ifseqformula "31"))
                                          (rule "applyEq" (formula "60") (term "0") (ifseqformula "31"))
                                          (rule "applyEq" (formula "20") (term "1,1") (ifseqformula "31"))
                                          (rule "applyEq" (formula "32") (term "1,0") (ifseqformula "31"))
                                          (rule "applyEq" (formula "18") (term "1,1") (ifseqformula "31"))
                                          (rule "applyEq" (formula "39") (term "1") (ifseqformula "31"))
                                          (rule "applyEq" (formula "32") (term "1") (ifseqformula "31"))
                                          (rule "applyEq" (formula "47") (term "1,1") (ifseqformula "31"))
                                          (rule "applyEq" (formula "35") (term "1") (ifseqformula "34"))
                                          (rule "applyEq" (formula "53") (term "1") (ifseqformula "34"))
                                          (rule "applyEq" (formula "33") (term "1") (ifseqformula "34"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "51") (term "1"))
                                          (rule "mul_literals" (formula "51") (term "1,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "8"))
                                          (rule "mul_literals" (formula "8") (term "1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "1"))
                                          (rule "mul_literals" (formula "28") (term "1,1"))
                                          (rule "inEqSimp_contradInEq0" (formula "7") (ifseqformula "8"))
                                          (rule "qeq_literals" (formula "7") (term "0"))
                                          (builtin "One Step Simplification" (formula "7"))
                                          (rule "closeFalse" (formula "7"))
                                       )
                                       (branch "CUT: self.size ≤ 1 FALSE"
                                          (builtin "One Step Simplification" (formula "29"))
                                          (rule "inEqSimp_leqRight" (formula "61"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                          (rule "mul_literals" (formula "1") (term "1"))
                                          (rule "inEqSimp_subsumption1" (formula "38") (ifseqformula "1"))
                                          (rule "leq_literals" (formula "38") (term "0"))
                                          (builtin "One Step Simplification" (formula "38"))
                                          (rule "true_left" (formula "38"))
                                          (rule "allLeft" (formula "28") (inst "t=j_0"))
                                          (rule "inEqSimp_commuteGeq" (formula "28") (term "1,0,0,0,0"))
                                          (rule "applyEq" (formula "28") (term "1,0,0,0,0,0,0,0") (ifseqformula "43"))
                                          (rule "inEqSimp_contradInEq1" (formula "28") (term "1,0,0,0,0") (ifseqformula "45"))
                                          (rule "inEqSimp_homoInEq1" (formula "28") (term "0,1,0,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,1,0,0,0,0"))
                                          (rule "add_literals" (formula "28") (term "1,1,0,0,1,0,0,0,0"))
                                          (rule "times_zero_1" (formula "28") (term "1,0,0,1,0,0,0,0"))
                                          (rule "add_zero_right" (formula "28") (term "0,0,1,0,0,0,0"))
                                          (rule "leq_literals" (formula "28") (term "0,1,0,0,0,0"))
                                          (builtin "One Step Simplification" (formula "28"))
                                          (rule "inEqSimp_contradInEq1" (formula "28") (term "1,0,0,0,0") (ifseqformula "44"))
                                          (rule "qeq_literals" (formula "28") (term "0,1,0,0,0,0"))
                                          (builtin "One Step Simplification" (formula "28"))
                                          (rule "allLeft" (formula "33") (inst "t=j_0"))
                                          (rule "inEqSimp_homoInEq1" (formula "33") (term "1"))
                                          (rule "polySimp_addComm1" (formula "33") (term "0,1"))
                                          (rule "applyEq" (formula "33") (term "1,0,0,0") (ifseqformula "44"))
                                          (rule "eqSymm" (formula "33") (term "0,0"))
                                          (rule "applyEq" (formula "33") (term "1,0,0") (ifseqformula "30"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1"))
                                          (rule "polySimp_mulComm0" (formula "33") (term "1,1"))
                                          (rule "polySimp_rightDist" (formula "33") (term "1,1"))
                                          (rule "mul_literals" (formula "33") (term "0,1,1"))
                                          (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1"))
                                          (rule "polySimp_elimOne" (formula "33") (term "1,1,1"))
                                          (rule "inEqSimp_contradInEq1" (formula "33") (term "1,0") (ifseqformula "45"))
                                          (rule "qeq_literals" (formula "33") (term "0,1,0"))
                                          (builtin "One Step Simplification" (formula "33"))
                                          (rule "allLeft" (formula "58") (inst "t=j_0"))
                                          (rule "inEqSimp_homoInEq1" (formula "58") (term "1"))
                                          (rule "polySimp_addComm1" (formula "58") (term "0,1"))
                                          (rule "applyEq" (formula "58") (term "1,0,0,0") (ifseqformula "44"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "58") (term "1"))
                                          (rule "polySimp_mulComm0" (formula "58") (term "1,1"))
                                          (rule "polySimp_rightDist" (formula "58") (term "1,1"))
                                          (rule "polySimp_mulLiterals" (formula "58") (term "1,1,1"))
                                          (rule "mul_literals" (formula "58") (term "0,1,1"))
                                          (rule "polySimp_elimOne" (formula "58") (term "1,1,1"))
                                          (rule "inEqSimp_contradInEq1" (formula "58") (term "1,0") (ifseqformula "45"))
                                          (rule "qeq_literals" (formula "58") (term "0,1,0"))
                                          (builtin "One Step Simplification" (formula "58"))
                                          (rule "pullOutSelect" (formula "58") (term "0,0") (inst "selectSK=IntNode_next_4"))
                                          (rule "simplifySelectOfAnon" (formula "58"))
                                          (builtin "One Step Simplification" (formula "58") (ifInst ""  (formula "67")) (ifInst ""  (formula "37")))
                                          (rule "eqSymm" (formula "59") (term "0"))
                                          (rule "applyEq" (formula "58") (term "2,0") (ifseqformula "30"))
                                          (rule "elementOfUnion" (formula "58") (term "0,0"))
                                          (rule "elementOfInfiniteUnion" (formula "58") (term "1,0,0"))
                                          (builtin "One Step Simplification" (formula "58"))
                                          (rule "elementOfSingleton" (formula "58") (term "0,0,0"))
                                          (builtin "One Step Simplification" (formula "58"))
                                          (rule "elementOfSingleton" (formula "58") (term "1,0,0,0"))
                                          (builtin "One Step Simplification" (formula "58"))
                                          (rule "applyEqReverse" (formula "59") (term "1,0") (ifseqformula "58"))
                                          (rule "hideAuxiliaryEq" (formula "58"))
                                          (rule "commute_and_2" (formula "52") (term "0,0,0,0"))
                                          (rule "seqGetAlphaCast" (formula "55") (term "1"))
                                          (rule "castedGetAny" (formula "55") (term "0"))
                                          (builtin "One Step Simplification" (formula "55"))
                                          (rule "true_left" (formula "55"))
                                          (rule "seqGetAlphaCast" (formula "5") (term "0"))
                                          (rule "castedGetAny" (formula "5") (term "0"))
                                          (builtin "One Step Simplification" (formula "5"))
                                          (rule "true_left" (formula "5"))
                                          (rule "seqGetAlphaCast" (formula "32") (term "1,0"))
                                          (rule "castedGetAny" (formula "32") (term "0"))
                                          (builtin "One Step Simplification" (formula "32"))
                                          (rule "true_left" (formula "32"))
                                          (rule "cut_direct" (formula "32") (term "1"))
                                          (branch "CUT: self.size ≤ 2 + i_2_0 TRUE"
                                             (builtin "One Step Simplification" (formula "33"))
                                             (rule "true_left" (formula "33"))
                                             (rule "replace_known_left" (formula "57") (term "1") (ifseqformula "32"))
                                             (builtin "One Step Simplification" (formula "57"))
                                             (rule "true_left" (formula "57"))
                                             (rule "inEqSimp_antiSymm" (formula "9") (ifseqformula "32"))
                                             (rule "applyEq" (formula "29") (term "1,1,0,0") (ifseqformula "9"))
                                             (rule "applyEq" (formula "28") (term "1,1,0") (ifseqformula "9"))
                                             (rule "applyEq" (formula "17") (term "1,1,1,0,0,1,0") (ifseqformula "9"))
                                             (rule "polySimp_addAssoc" (formula "17") (term "1,1,0,0,1,0"))
                                             (rule "add_literals" (formula "17") (term "0,1,1,0,0,1,0"))
                                             (rule "applyEq" (formula "51") (term "0") (ifseqformula "9"))
                                             (rule "inEqSimp_homoInEq1" (formula "51"))
                                             (rule "polySimp_mulComm0" (formula "51") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "51") (term "1,0"))
                                             (rule "mul_literals" (formula "51") (term "0,1,0"))
                                             (rule "polySimp_addComm1" (formula "51") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "51") (term "0,0"))
                                             (rule "add_literals" (formula "51") (term "0,0,0"))
                                             (rule "applyEq" (formula "58") (term "1,1,1,0,0,1,1,0,0,0,0,0") (ifseqformula "9"))
                                             (rule "polySimp_addAssoc" (formula "58") (term "1,1,0,0,1,1,0,0,0,0,0"))
                                             (rule "add_literals" (formula "58") (term "0,1,1,0,0,1,1,0,0,0,0,0"))
                                             (rule "applyEq" (formula "26") (term "1,1,1,0") (ifseqformula "9"))
                                             (rule "polySimp_addAssoc" (formula "26") (term "1,1,0"))
                                             (rule "add_literals" (formula "26") (term "0,1,1,0"))
                                             (rule "applyEq" (formula "18") (term "1,1,0") (ifseqformula "9"))
                                             (rule "applyEq" (formula "39") (term "1,1,0") (ifseqformula "9"))
                                             (rule "polySimp_addAssoc" (formula "39") (term "1,0"))
                                             (rule "add_literals" (formula "39") (term "0,1,0"))
                                             (rule "applyEq" (formula "10") (term "0") (ifseqformula "9"))
                                             (rule "inEqSimp_homoInEq1" (formula "10"))
                                             (rule "polySimp_pullOutFactor1" (formula "10") (term "0"))
                                             (rule "add_literals" (formula "10") (term "1,0"))
                                             (rule "times_zero_1" (formula "10") (term "0"))
                                             (rule "leq_literals" (formula "10"))
                                             (rule "true_left" (formula "10"))
                                             (rule "applyEq" (formula "2") (term "1,1,0") (ifseqformula "9"))
                                             (rule "applyEq" (formula "19") (term "1,1,0") (ifseqformula "9"))
                                             (rule "polySimp_addAssoc" (formula "19") (term "1,0"))
                                             (rule "add_literals" (formula "19") (term "0,1,0"))
                                             (rule "applyEq" (formula "57") (term "1,1,1,0") (ifseqformula "9"))
                                             (rule "polySimp_addAssoc" (formula "57") (term "1,1,0"))
                                             (rule "add_literals" (formula "57") (term "0,1,1,0"))
                                             (rule "applyEq" (formula "23") (term "1,1,0") (ifseqformula "9"))
                                             (rule "applyEq" (formula "34") (term "1,1,1,0") (ifseqformula "9"))
                                             (rule "polySimp_addAssoc" (formula "34") (term "1,1,0"))
                                             (rule "add_literals" (formula "34") (term "0,1,1,0"))
                                             (rule "applyEq" (formula "42") (term "1,1,0") (ifseqformula "9"))
                                             (rule "applyEq" (formula "24") (term "1,1,0") (ifseqformula "9"))
                                             (rule "applyEq" (formula "32") (term "0") (ifseqformula "9"))
                                             (rule "inEqSimp_homoInEq0" (formula "32"))
                                             (rule "polySimp_pullOutFactor1" (formula "32") (term "0"))
                                             (rule "add_literals" (formula "32") (term "1,0"))
                                             (rule "times_zero_1" (formula "32") (term "0"))
                                             (rule "qeq_literals" (formula "32"))
                                             (rule "true_left" (formula "32"))
                                             (rule "applyEq" (formula "53") (term "1,1,0") (ifseqformula "9"))
                                             (rule "applyEq" (formula "14") (term "1,1,0") (ifseqformula "9"))
                                             (rule "applyEq" (formula "53") (term "1,1,1,0,0,1,1,0,0,0,0,0") (ifseqformula "9"))
                                             (rule "polySimp_addAssoc" (formula "53") (term "1,1,0,0,1,1,0,0,0,0,0"))
                                             (rule "add_literals" (formula "53") (term "0,1,1,0,0,1,1,0,0,0,0,0"))
                                             (rule "applyEq" (formula "4") (term "0") (ifseqformula "9"))
                                             (rule "inEqSimp_homoInEq1" (formula "4"))
                                             (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                                             (rule "mul_literals" (formula "4") (term "0,1,0"))
                                             (rule "polySimp_addComm1" (formula "4") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                             (rule "add_literals" (formula "4") (term "0,0,0"))
                                             (rule "applyEq" (formula "15") (term "1,1,0") (ifseqformula "9"))
                                             (rule "applyEq" (formula "58") (term "1,1,0,0") (ifseqformula "9"))
                                             (rule "applyEq" (formula "1") (term "0") (ifseqformula "9"))
                                             (rule "inEqSimp_homoInEq1" (formula "1"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                             (rule "mul_literals" (formula "1") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                             (rule "add_literals" (formula "1") (term "0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0"))
                                             (rule "applyEq" (formula "51") (term "1,1,1,0,0,0,0") (ifseqformula "9"))
                                             (rule "polySimp_addAssoc" (formula "51") (term "1,1,0,0,0,0"))
                                             (rule "add_literals" (formula "51") (term "0,1,1,0,0,0,0"))
                                             (rule "applyEq" (formula "26") (term "1,1,0") (ifseqformula "9"))
                                             (rule "applyEq" (formula "42") (term "1,1,0") (ifseqformula "9"))
                                             (rule "applyEq" (formula "45") (term "0") (ifseqformula "9"))
                                             (rule "inEqSimp_homoInEq1" (formula "45"))
                                             (rule "polySimp_mulComm0" (formula "45") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "45") (term "1,0"))
                                             (rule "mul_literals" (formula "45") (term "0,1,0"))
                                             (rule "polySimp_addComm1" (formula "45") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "45") (term "0,0"))
                                             (rule "add_literals" (formula "45") (term "0,0,0"))
                                             (rule "applyEq" (formula "32") (term "0,1") (ifseqformula "9"))
                                             (rule "inEqSimp_homoInEq0" (formula "32") (term "1"))
                                             (rule "polySimp_mulComm0" (formula "32") (term "1,0,1"))
                                             (rule "polySimp_rightDist" (formula "32") (term "1,0,1"))
                                             (rule "mul_literals" (formula "32") (term "0,1,0,1"))
                                             (rule "polySimp_addComm1" (formula "32") (term "0,1"))
                                             (rule "polySimp_addAssoc" (formula "32") (term "0,0,1"))
                                             (rule "add_literals" (formula "32") (term "0,0,0,1"))
                                             (rule "applyEq" (formula "46") (term "1,1,0") (ifseqformula "9"))
                                             (rule "polySimp_addAssoc" (formula "46") (term "1,0"))
                                             (rule "add_literals" (formula "46") (term "0,1,0"))
                                             (rule "applyEq" (formula "29") (term "1,1,0,0,0,0,0") (ifseqformula "9"))
                                             (rule "applyEq" (formula "29") (term "1,1,0,0,0") (ifseqformula "9"))
                                             (rule "applyEq" (formula "51") (term "1") (ifseqformula "46"))
                                             (rule "applyEq" (formula "21") (term "0") (ifseqformula "19"))
                                             (rule "eqSymm" (formula "21"))
                                             (rule "applyEq" (formula "55") (term "1,1,0") (ifseqformula "37"))
                                             (rule "applyEq" (formula "54") (term "1") (ifseqformula "37"))
                                             (rule "applyEq" (formula "51") (term "1,0,0,1,0,0") (ifseqformula "37"))
                                             (rule "replace_known_left" (formula "51") (term "0,1,0,0") (ifseqformula "36"))
                                             (builtin "One Step Simplification" (formula "51"))
                                             (rule "applyEq" (formula "55") (term "1,0,0,0") (ifseqformula "37"))
                                             (rule "replace_known_left" (formula "55") (term "0,0") (ifseqformula "36"))
                                             (builtin "One Step Simplification" (formula "55"))
                                             (rule "hideAuxiliaryEq" (formula "55"))
                                             (rule "applyEq" (formula "60") (term "0") (ifseqformula "37"))
                                             (rule "applyEq" (formula "26") (term "1,0,0,0,0,0") (ifseqformula "37"))
                                             (rule "applyEq" (formula "56") (term "1") (ifseqformula "9"))
                                             (rule "applyEq" (formula "39") (term "1") (ifseqformula "9"))
                                             (rule "applyEq" (formula "38") (term "1") (ifseqformula "9"))
                                             (rule "applyEq" (formula "21") (term "1,0") (ifseqformula "37"))
                                             (builtin "One Step Simplification" (formula "21"))
                                             (rule "true_left" (formula "21"))
                                             (rule "applyEq" (formula "50") (term "1,2,0") (ifseqformula "36"))
                                             (rule "applyEq" (formula "50") (term "1,1,0,0,0,0") (ifseqformula "36"))
                                             (rule "applyEq" (formula "50") (term "1,1,0") (ifseqformula "36"))
                                             (builtin "One Step Simplification" (formula "50"))
                                             (rule "eqSymm" (formula "50") (term "1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "48"))
                                             (rule "polySimp_mulComm0" (formula "48") (term "1"))
                                             (rule "polySimp_rightDist" (formula "48") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "48") (term "1,1"))
                                             (rule "mul_literals" (formula "48") (term "0,1"))
                                             (rule "polySimp_elimOne" (formula "48") (term "1,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                             (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                             (rule "polySimp_rightDist" (formula "4") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                             (rule "mul_literals" (formula "4") (term "0,1"))
                                             (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                             (rule "inEqSimp_invertInEq0" (formula "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                             (rule "times_zero_2" (formula "1") (term "1"))
                                             (rule "polySimp_elimOne" (formula "1") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "43"))
                                             (rule "polySimp_mulComm0" (formula "43") (term "1"))
                                             (rule "polySimp_rightDist" (formula "43") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "43") (term "1,1"))
                                             (rule "mul_literals" (formula "43") (term "0,1"))
                                             (rule "polySimp_elimOne" (formula "43") (term "1,1"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1"))
                                             (rule "polySimp_mulComm0" (formula "30") (term "1,1"))
                                             (rule "polySimp_rightDist" (formula "30") (term "1,1"))
                                             (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1"))
                                             (rule "mul_literals" (formula "30") (term "0,1,1"))
                                             (rule "polySimp_elimOne" (formula "30") (term "1,1,1"))
                                             (rule "inEqSimp_exactShadow3" (formula "42") (ifseqformula "43"))
                                             (rule "times_zero_1" (formula "42") (term "0,0"))
                                             (rule "add_zero_left" (formula "42") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "42"))
                                             (rule "mul_literals" (formula "42") (term "1"))
                                             (rule "inEqSimp_subsumption1" (formula "42") (ifseqformula "7"))
                                             (rule "leq_literals" (formula "42") (term "0"))
                                             (builtin "One Step Simplification" (formula "42"))
                                             (rule "true_left" (formula "42"))
                                             (rule "inEqSimp_exactShadow3" (formula "46") (ifseqformula "47"))
                                             (rule "times_zero_1" (formula "46") (term "0,0"))
                                             (rule "add_zero_left" (formula "46") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "46"))
                                             (rule "mul_literals" (formula "46") (term "1"))
                                             (rule "inEqSimp_subsumption1" (formula "46") (ifseqformula "7"))
                                             (rule "leq_literals" (formula "46") (term "0"))
                                             (builtin "One Step Simplification" (formula "46"))
                                             (rule "true_left" (formula "46"))
                                             (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "3"))
                                             (rule "times_zero_1" (formula "2") (term "0,0"))
                                             (rule "add_zero_left" (formula "2") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                             (rule "mul_literals" (formula "2") (term "1"))
                                             (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "8"))
                                             (rule "leq_literals" (formula "2") (term "0"))
                                             (builtin "One Step Simplification" (formula "2"))
                                             (rule "true_left" (formula "2"))
                                             (rule "inEqSimp_or_weaken3" (formula "24") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "24") (term "1,0,1,0"))
                                             (rule "add_literals" (formula "24") (term "0,1,0,1,0"))
                                             (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "23")))
                                             (rule "true_left" (formula "24"))
                                             (rule "seqGetAlphaCast" (formula "44") (term "0"))
                                             (rule "castedGetAny" (formula "44") (term "0"))
                                             (builtin "One Step Simplification" (formula "44"))
                                             (rule "true_left" (formula "44"))
                                             (rule "seqGetAlphaCast" (formula "47") (term "0"))
                                             (rule "castDel" (formula "47") (term "0"))
                                             (builtin "One Step Simplification" (formula "47"))
                                             (rule "true_left" (formula "47"))
                                             (rule "seqGetAlphaCast" (formula "20") (term "0"))
                                             (rule "castDel" (formula "20") (term "0"))
                                             (builtin "One Step Simplification" (formula "20"))
                                             (rule "true_left" (formula "20"))
                                             (rule "seqGetAlphaCast" (formula "49") (term "0"))
                                             (rule "castDel" (formula "49") (term "0"))
                                             (builtin "One Step Simplification" (formula "49"))
                                             (rule "true_left" (formula "49"))
                                             (rule "commute_and" (formula "48") (term "0,0,0"))
                                             (rule "allLeft" (formula "24") (inst "t=j_1_0"))
                                             (rule "replace_known_left" (formula "24") (term "0,0,0,0") (ifseqformula "4"))
                                             (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "63")))
                                             (rule "inEqSimp_contradInEq0" (formula "24") (term "1") (ifseqformula "3"))
                                             (rule "inEqSimp_homoInEq1" (formula "24") (term "0,1"))
                                             (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1"))
                                             (rule "mul_literals" (formula "24") (term "0,1,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "24") (term "0,0,1"))
                                             (rule "polySimp_addComm1" (formula "24") (term "0,0,0,1"))
                                             (rule "add_literals" (formula "24") (term "0,0,0,0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,1"))
                                             (rule "add_literals" (formula "24") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "24") (term "1,0,0,1"))
                                             (rule "add_zero_right" (formula "24") (term "0,0,1"))
                                             (rule "leq_literals" (formula "24") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "24"))
                                             (rule "inEqSimp_contradInEq1" (formula "24") (ifseqformula "2"))
                                             (rule "qeq_literals" (formula "24") (term "0"))
                                             (builtin "One Step Simplification" (formula "24"))
                                             (rule "closeFalse" (formula "24"))
                                          )
                                          (branch "CUT: self.size ≤ 2 + i_2_0 FALSE"
                                             (builtin "One Step Simplification" (formula "32"))
                                             (rule "replace_known_right" (formula "57") (term "1") (ifseqformula "63"))
                                             (builtin "One Step Simplification" (formula "57"))
                                             (rule "applyEqReverse" (formula "56") (term "1") (ifseqformula "57"))
                                             (rule "hideAuxiliaryEq" (formula "57"))
                                             (rule "inEqSimp_leqRight" (formula "62"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                             (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0,0"))
                                             (rule "applyEq" (formula "57") (term "1,0") (ifseqformula "33"))
                                             (builtin "One Step Simplification" (formula "57"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1"))
                                             (rule "mul_literals" (formula "1") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                             (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "1"))
                                             (rule "inEqSimp_homoInEq0" (formula "10") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "10") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "10") (term "1,0,0"))
                                             (rule "mul_literals" (formula "10") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "10") (term "0,0"))
                                             (rule "polySimp_addComm1" (formula "10") (term "0,0,0"))
                                             (rule "add_literals" (formula "10") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0"))
                                             (rule "add_literals" (formula "10") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "10") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "10") (term "0,0"))
                                             (rule "qeq_literals" (formula "10") (term "0"))
                                             (builtin "One Step Simplification" (formula "10"))
                                             (rule "true_left" (formula "10"))
                                             (rule "commute_or_2" (formula "28") (term "0"))
                                             (rule "seqGetAlphaCast" (formula "21") (term "0"))
                                             (rule "castDel" (formula "21") (term "0"))
                                             (builtin "One Step Simplification" (formula "21"))
                                             (rule "true_left" (formula "21"))
                                             (rule "allLeft" (formula "54") (inst "t=j_1"))
                                             (rule "inEqSimp_commuteGeq" (formula "54") (term "1"))
                                             (rule "applyEq" (formula "54") (term "1,0,0,0") (ifseqformula "48"))
                                             (rule "replaceKnownSelect_taclet1011111_18" (formula "54") (term "0,0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet1011111_19" (formula "54") (term "0,0,0"))
                                             (rule "eqSymm" (formula "54") (term "0,0"))
                                             (rule "applyEq" (formula "54") (term "1,0,0") (ifseqformula "51"))
                                             (rule "inEqSimp_contradInEq1" (formula "54") (term "1") (ifseqformula "50"))
                                             (rule "inEqSimp_homoInEq1" (formula "54") (term "0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "54") (term "0,0,1"))
                                             (rule "add_literals" (formula "54") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "54") (term "1,0,0,1"))
                                             (rule "add_zero_right" (formula "54") (term "0,0,1"))
                                             (rule "leq_literals" (formula "54") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "54"))
                                             (rule "inEqSimp_contradInEq1" (formula "54") (term "1") (ifseqformula "49"))
                                             (rule "qeq_literals" (formula "54") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "54"))
                                             (rule "allLeft" (formula "14") (inst "t=add(Z(1(#)), i_2_0)"))
                                             (rule "inEqSimp_commuteGeq" (formula "14") (term "1"))
                                             (rule "inEqSimp_homoInEq0" (formula "14") (term "1,0"))
                                             (rule "polySimp_mulComm0" (formula "14") (term "1,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "14") (term "1,0,1,0"))
                                             (rule "mul_literals" (formula "14") (term "0,1,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "14") (term "0,1,0"))
                                             (rule "add_literals" (formula "14") (term "0,0,1,0"))
                                             (rule "applyEq" (formula "14") (term "0,0,0,0") (ifseqformula "22"))
                                             (builtin "One Step Simplification" (formula "14"))
                                             (rule "true_left" (formula "14"))
                                             (rule "allLeft" (formula "42") (inst "t=add(Z(1(#)), i_2_0)"))
                                             (rule "inEqSimp_commuteGeq" (formula "42") (term "1"))
                                             (rule "inEqSimp_homoInEq0" (formula "42") (term "1,0"))
                                             (rule "polySimp_mulComm0" (formula "42") (term "1,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "42") (term "1,0,1,0"))
                                             (rule "mul_literals" (formula "42") (term "0,1,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "42") (term "0,1,0"))
                                             (rule "add_literals" (formula "42") (term "0,0,1,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "42") (term "1,0"))
                                             (rule "polySimp_mulLiterals" (formula "42") (term "0,1,0"))
                                             (rule "polySimp_elimOne" (formula "42") (term "0,1,0"))
                                             (rule "inEqSimp_contradInEq1" (formula "42") (term "1") (ifseqformula "1"))
                                             (rule "inEqSimp_homoInEq1" (formula "42") (term "0,1"))
                                             (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "42") (term "1,0,0,1"))
                                             (rule "mul_literals" (formula "42") (term "0,1,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "42") (term "0,0,1"))
                                             (rule "polySimp_addComm1" (formula "42") (term "0,0,0,1"))
                                             (rule "add_literals" (formula "42") (term "0,0,0,0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "42") (term "0,0,1"))
                                             (rule "add_literals" (formula "42") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "42") (term "1,0,0,1"))
                                             (rule "add_zero_right" (formula "42") (term "0,0,1"))
                                             (rule "leq_literals" (formula "42") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "42"))
                                             (rule "inEqSimp_contradInEq1" (formula "42") (term "1") (ifseqformula "9"))
                                             (rule "qeq_literals" (formula "42") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "42"))
                                             (rule "notLeft" (formula "42"))
                                             (rule "allLeft" (formula "17") (inst "t=j_1"))
                                             (rule "inEqSimp_commuteGeq" (formula "17") (term "1"))
                                             (rule "applyEq" (formula "17") (term "0,0,0,0") (ifseqformula "49"))
                                             (rule "replace_known_right" (formula "17") (term "0,0,0") (ifseqformula "66"))
                                             (builtin "One Step Simplification" (formula "17"))
                                             (rule "true_left" (formula "17"))
                                             (rule "allLeft" (formula "15") (inst "t=add(Z(1(#)), i_2_0)"))
                                             (rule "typeEqDerived" (formula "15") (term "0,0,0") (ifseqformula "22"))
                                             (builtin "One Step Simplification" (formula "15"))
                                             (rule "true_left" (formula "15"))
                                             (rule "allLeft" (formula "23") (inst "t=j_1"))
                                             (rule "inEqSimp_commuteGeq" (formula "23") (term "1"))
                                             (rule "applyEq" (formula "23") (term "1,1,0,0") (ifseqformula "49"))
                                             (rule "inEqSimp_contradInEq1" (formula "23") (term "1,0") (ifseqformula "50"))
                                             (rule "qeq_literals" (formula "23") (term "0,1,0"))
                                             (builtin "One Step Simplification" (formula "23"))
                                             (rule "inEqSimp_contradInEq1" (formula "23") (term "1") (ifseqformula "51"))
                                             (rule "inEqSimp_homoInEq1" (formula "23") (term "0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1"))
                                             (rule "add_literals" (formula "23") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "23") (term "1,0,0,1"))
                                             (rule "add_literals" (formula "23") (term "0,0,1"))
                                             (rule "leq_literals" (formula "23") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "23"))
                                             (rule "allLeft" (formula "24") (inst "t=j_1_0"))
                                             (rule "inEqSimp_commuteGeq" (formula "24") (term "1"))
                                             (rule "applyEq" (formula "24") (term "1,1,0,0") (ifseqformula "6"))
                                             (rule "inEqSimp_contradInEq1" (formula "24") (term "1") (ifseqformula "5"))
                                             (rule "inEqSimp_homoInEq1" (formula "24") (term "0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,1"))
                                             (rule "add_literals" (formula "24") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "24") (term "1,0,0,1"))
                                             (rule "add_literals" (formula "24") (term "0,0,1"))
                                             (rule "leq_literals" (formula "24") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "24"))
                                             (rule "inEqSimp_contradInEq1" (formula "24") (term "1") (ifseqformula "4"))
                                             (rule "qeq_literals" (formula "24") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "24"))
                                             (rule "allLeft" (formula "57") (inst "t=j_1_0"))
                                             (rule "inEqSimp_commuteGeq" (formula "57") (term "1"))
                                             (rule "applyEq" (formula "57") (term "1,0,0,0") (ifseqformula "6"))
                                             (rule "replaceKnownSelect_taclet1011111_15" (formula "57") (term "0,0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet11011111_20" (formula "57") (term "0,0,0"))
                                             (rule "eqSymm" (formula "57") (term "0,0"))
                                             (rule "applyEq" (formula "57") (term "1,0,0") (ifseqformula "7"))
                                             (rule "inEqSimp_contradInEq1" (formula "57") (term "1") (ifseqformula "5"))
                                             (rule "inEqSimp_homoInEq1" (formula "57") (term "0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "57") (term "0,0,1"))
                                             (rule "add_literals" (formula "57") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "57") (term "1,0,0,1"))
                                             (rule "add_literals" (formula "57") (term "0,0,1"))
                                             (rule "leq_literals" (formula "57") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "57"))
                                             (rule "inEqSimp_contradInEq1" (formula "57") (term "1") (ifseqformula "4"))
                                             (rule "qeq_literals" (formula "57") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "57"))
                                             (rule "allLeft" (formula "17") (inst "t=j_1_0"))
                                             (rule "inEqSimp_commuteGeq" (formula "17") (term "1"))
                                             (rule "applyEq" (formula "17") (term "0,0,0,0") (ifseqformula "6"))
                                             (rule "replace_known_right" (formula "17") (term "0,0,0") (ifseqformula "71"))
                                             (builtin "One Step Simplification" (formula "17"))
                                             (rule "true_left" (formula "17"))
                                             (rule "allLeft" (formula "45") (inst "t=add(Z(1(#)), i_2_0)"))
                                             (rule "typeEqDerived2" (formula "45") (term "0,0,0") (ifseqformula "55"))
                                             (builtin "One Step Simplification" (formula "45"))
                                             (rule "true_left" (formula "45"))
                                             (rule "seqGetAlphaCast" (formula "54") (term "1"))
                                             (rule "castDel" (formula "54") (term "0"))
                                             (builtin "One Step Simplification" (formula "54"))
                                             (rule "true_left" (formula "54"))
                                             (rule "seqGetAlphaCast" (formula "50") (term "0"))
                                             (rule "castedGetAny" (formula "50") (term "0"))
                                             (builtin "One Step Simplification" (formula "50"))
                                             (rule "true_left" (formula "50"))
                                             (rule "seqGetAlphaCast" (formula "53") (term "0"))
                                             (rule "castDel" (formula "53") (term "0"))
                                             (builtin "One Step Simplification" (formula "53"))
                                             (rule "true_left" (formula "53"))
                                             (rule "allLeft" (formula "29") (inst "t=j_1_0"))
                                             (rule "replace_known_right" (formula "29") (term "1,0") (ifseqformula "74"))
                                             (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "6")))
                                             (rule "inEqSimp_commuteGeq" (formula "29") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "29") (term "0") (ifseqformula "4"))
                                             (rule "qeq_literals" (formula "29") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "29"))
                                             (rule "inEqSimp_contradInEq0" (formula "5") (ifseqformula "29"))
                                             (rule "andLeft" (formula "5"))
                                             (rule "inEqSimp_homoInEq1" (formula "5"))
                                             (rule "polySimp_pullOutFactor1b" (formula "5") (term "0"))
                                             (rule "add_literals" (formula "5") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "5") (term "1,0"))
                                             (rule "add_zero_right" (formula "5") (term "0"))
                                             (rule "leq_literals" (formula "5"))
                                             (rule "closeFalse" (formula "5"))
                                          )
                                       )
                                    )
                                 )
                                 (branch "∃ int j; ( (IntNode)self.nodeseq[j] = self.first ∧ j ≥ 0 ∧ j ≤ -1 + self.size) FALSE"
                                    (rule "eqSymm" (formula "44"))
                                    (rule "applyEq" (formula "57") (term "0") (ifseqformula "44"))
                                    (builtin "One Step Simplification" (formula "57"))
                                    (rule "false_right" (formula "57"))
                                    (rule "nnf_ex2all" (formula "55"))
                                    (rule "nnf_notAnd" (formula "1") (term "0"))
                                    (rule "inEqSimp_notLeq" (formula "1") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0"))
                                    (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,0,1,0"))
                                    (rule "add_zero_left" (formula "1") (term "0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1,1,0"))
                                    (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "1") (term "1,0,0"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1,0,0"))
                                    (rule "mul_literals" (formula "1") (term "1,1,0,0"))
                                    (rule "seqGetAlphaCast" (formula "60") (term "0"))
                                    (rule "castDel" (formula "1") (term "0"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "true_left" (formula "1"))
                                    (rule "commute_or_2" (formula "24") (term "0"))
                                    (rule "seqGetAlphaCast" (formula "17") (term "0"))
                                    (rule "castDel" (formula "17") (term "0"))
                                    (builtin "One Step Simplification" (formula "17"))
                                    (rule "true_left" (formula "17"))
                                    (rule "seqGetAlphaCast" (formula "17") (term "1,1"))
                                    (rule "castedGetAny" (formula "17") (term "0"))
                                    (builtin "One Step Simplification" (formula "17"))
                                    (rule "true_left" (formula "17"))
                                    (rule "allLeft" (formula "21") (inst "t=j_0"))
                                    (rule "inEqSimp_commuteGeq" (formula "21") (term "1"))
                                    (rule "applyEq" (formula "21") (term "1,1,0,0") (ifseqformula "42"))
                                    (rule "inEqSimp_contradInEq1" (formula "21") (term "1") (ifseqformula "44"))
                                    (rule "inEqSimp_homoInEq1" (formula "21") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,1"))
                                    (rule "add_literals" (formula "21") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "21") (term "1,0,0,1"))
                                    (rule "add_literals" (formula "21") (term "0,0,1"))
                                    (rule "leq_literals" (formula "21") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "21"))
                                    (rule "inEqSimp_contradInEq1" (formula "21") (term "1") (ifseqformula "43"))
                                    (rule "qeq_literals" (formula "21") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "21"))
                                    (rule "allLeft" (formula "16") (inst "t=j_0"))
                                    (rule "inEqSimp_commuteGeq" (formula "16") (term "1"))
                                    (rule "applyEq" (formula "16") (term "0,0,0,0") (ifseqformula "43"))
                                    (rule "replace_known_right" (formula "16") (term "0,0,0") (ifseqformula "60"))
                                    (builtin "One Step Simplification" (formula "16"))
                                    (rule "true_left" (formula "16"))
                                    (rule "allLeft" (formula "13") (inst "t=Z(0(#))"))
                                    (rule "leq_literals" (formula "13") (term "1,0"))
                                    (builtin "One Step Simplification" (formula "13"))
                                    (rule "inEqSimp_commuteGeq" (formula "13") (term "1"))
                                    (rule "applyEq" (formula "13") (term "0,0,0") (ifseqformula "20"))
                                    (builtin "One Step Simplification" (formula "13"))
                                    (rule "true_left" (formula "13"))
                                    (rule "allLeft" (formula "13") (inst "t=i_2_0"))
                                    (rule "inEqSimp_commuteGeq" (formula "13") (term "1"))
                                    (rule "applyEq" (formula "13") (term "0,0,0,0") (ifseqformula "18"))
                                    (builtin "One Step Simplification" (formula "13"))
                                    (rule "true_left" (formula "13"))
                                    (rule "allLeft" (formula "13") (inst "t=add(Z(neglit(1(#))),
    int::select(heap, self, IntLinkedList::$size))"))
                                    (rule "inEqSimp_homoInEq0" (formula "13") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "13") (term "1,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "13") (term "1,0,1,0"))
                                    (rule "mul_literals" (formula "13") (term "0,1,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "13") (term "0,1,0"))
                                    (rule "add_literals" (formula "13") (term "0,0,1,0"))
                                    (rule "add_zero_left" (formula "13") (term "0,1,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "13") (term "1"))
                                    (rule "polySimp_mulComm0" (formula "13") (term "1,0,1"))
                                    (rule "polySimp_rightDist" (formula "13") (term "1,0,1"))
                                    (rule "mul_literals" (formula "13") (term "0,1,0,1"))
                                    (rule "polySimp_addAssoc" (formula "13") (term "0,1"))
                                    (rule "polySimp_addComm0" (formula "13") (term "0,0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,1"))
                                    (rule "add_literals" (formula "13") (term "1,1,0,1"))
                                    (rule "times_zero_1" (formula "13") (term "1,0,1"))
                                    (rule "add_zero_right" (formula "13") (term "0,1"))
                                    (rule "leq_literals" (formula "13") (term "1"))
                                    (builtin "One Step Simplification" (formula "13"))
                                    (rule "applyEq" (formula "13") (term "0,0,0") (ifseqformula "19"))
                                    (builtin "One Step Simplification" (formula "13"))
                                    (rule "true_left" (formula "13"))
                                    (rule "allLeft" (formula "48") (inst "t=j_0"))
                                    (rule "inEqSimp_commuteGeq" (formula "48") (term "1"))
                                    (rule "applyEq" (formula "48") (term "1,0,0,0") (ifseqformula "42"))
                                    (rule "replaceKnownSelect_taclet1011111_16" (formula "48") (term "0,0,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet1011111_17" (formula "48") (term "0,0,0"))
                                    (rule "applyEq" (formula "48") (term "0,0,0") (ifseqformula "45"))
                                    (rule "eqSymm" (formula "48") (term "0,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "48") (term "1") (ifseqformula "44"))
                                    (rule "inEqSimp_homoInEq1" (formula "48") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "48") (term "0,0,1"))
                                    (rule "add_literals" (formula "48") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "48") (term "1,0,0,1"))
                                    (rule "add_literals" (formula "48") (term "0,0,1"))
                                    (rule "leq_literals" (formula "48") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "48"))
                                    (rule "inEqSimp_contradInEq1" (formula "48") (term "1") (ifseqformula "43"))
                                    (rule "qeq_literals" (formula "48") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "48"))
                                    (rule "allLeft" (formula "14") (inst "t=Z(0(#))"))
                                    (rule "typeEqDerived" (formula "14") (term "0,0,0") (ifseqformula "20"))
                                    (builtin "One Step Simplification" (formula "14"))
                                    (rule "true_left" (formula "14"))
                                    (rule "allLeft" (formula "14") (inst "t=add(Z(neglit(1(#))),
    int::select(heap, self, IntLinkedList::$size))"))
                                    (rule "typeEqDerived" (formula "14") (term "0,0,0") (ifseqformula "19"))
                                    (builtin "One Step Simplification" (formula "14"))
                                    (rule "true_left" (formula "14"))
                                    (rule "allLeft" (formula "14") (inst "t=i_2_0"))
                                    (rule "typeEqDerived" (formula "14") (term "0,0,0") (ifseqformula "18"))
                                    (builtin "One Step Simplification" (formula "14"))
                                    (rule "true_left" (formula "14"))
                                    (rule "commute_or_2" (formula "26") (term "0"))
                                    (rule "seqGetAlphaCast" (formula "18") (term "0"))
                                    (rule "castDel" (formula "18") (term "0"))
                                    (builtin "One Step Simplification" (formula "18"))
                                    (rule "true_left" (formula "18"))
                                    (rule "seqGetAlphaCast" (formula "19") (term "0"))
                                    (rule "castDel" (formula "19") (term "0"))
                                    (builtin "One Step Simplification" (formula "19"))
                                    (rule "true_left" (formula "19"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "28") (term "0") (ifseqformula "9"))
                                    (rule "replace_known_left" (formula "28") (term "0") (ifseqformula "29"))
                                    (builtin "One Step Simplification" (formula "28"))
                                    (rule "true_left" (formula "28"))
                                    (rule "seqGetAlphaCast" (formula "42") (term "0"))
                                    (rule "castedGetAny" (formula "42") (term "0"))
                                    (builtin "One Step Simplification" (formula "42"))
                                    (rule "true_left" (formula "42"))
                                    (rule "seqGetAlphaCast" (formula "45") (term "0"))
                                    (rule "castDel" (formula "45") (term "0"))
                                    (builtin "One Step Simplification" (formula "45"))
                                    (rule "true_left" (formula "45"))
                                    (rule "ifthenelse_split" (formula "5") (term "0"))
                                    (branch "∃ int j; ( (IntNode)self.nodeseq[j] = (IntNode)self.nodeseq[i_2_0] ∧ j ≥ 0 ∧ j ≤ -1 + self.size) TRUE"
                                       (rule "exLeft" (formula "5") (inst "sk=j_1"))
                                       (rule "andLeft" (formula "5"))
                                       (rule "andLeft" (formula "5"))
                                       (rule "eqSymm" (formula "8"))
                                       (rule "inEqSimp_homoInEq0" (formula "7"))
                                       (rule "polySimp_addComm1" (formula "7") (term "0"))
                                       (rule "applyEq" (formula "65") (term "0") (ifseqformula "8"))
                                       (builtin "One Step Simplification" (formula "65"))
                                       (rule "false_right" (formula "65"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                       (rule "polySimp_mulComm0" (formula "7") (term "1"))
                                       (rule "polySimp_rightDist" (formula "7") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                                       (rule "mul_literals" (formula "7") (term "0,1"))
                                       (rule "polySimp_elimOne" (formula "7") (term "1,1"))
                                       (rule "seqGetAlphaCast" (formula "32") (term "0,0"))
                                       (rule "castedGetAny" (formula "32") (term "0"))
                                       (builtin "One Step Simplification" (formula "32"))
                                       (rule "true_left" (formula "32"))
                                       (rule "cut_direct" (formula "32") (term "1"))
                                       (branch "CUT: self.size ≤ 1 TRUE"
                                          (builtin "One Step Simplification" (formula "33"))
                                          (rule "true_left" (formula "33"))
                                          (rule "inEqSimp_antiSymm" (formula "40") (ifseqformula "32"))
                                          (rule "applyEq" (formula "41") (term "0") (ifseqformula "40"))
                                          (rule "qeq_literals" (formula "41"))
                                          (rule "true_left" (formula "41"))
                                          (rule "applyEq" (formula "32") (term "0") (ifseqformula "40"))
                                          (rule "leq_literals" (formula "32"))
                                          (rule "true_left" (formula "32"))
                                          (rule "applyEq" (formula "3") (term "0") (ifseqformula "39"))
                                          (rule "inEqSimp_homoInEq1" (formula "3"))
                                          (rule "mul_literals" (formula "3") (term "1,0"))
                                          (rule "polySimp_addComm1" (formula "3") (term "0"))
                                          (rule "add_literals" (formula "3") (term "0,0"))
                                          (rule "add_zero_left" (formula "3") (term "0"))
                                          (rule "applyEq" (formula "29") (term "1,1,0") (ifseqformula "39"))
                                          (rule "applyEq" (formula "57") (term "1,1,0,0") (ifseqformula "39"))
                                          (rule "applyEq" (formula "26") (term "1,1,0") (ifseqformula "39"))
                                          (rule "applyEq" (formula "19") (term "1,1,0") (ifseqformula "39"))
                                          (rule "applyEq" (formula "47") (term "1,1,0") (ifseqformula "39"))
                                          (rule "add_literals" (formula "47") (term "1,0"))
                                          (rule "applyEq" (formula "28") (term "1,1,0") (ifseqformula "39"))
                                          (rule "applyEq" (formula "18") (term "1,1,1,0,0,1,0") (ifseqformula "39"))
                                          (rule "add_literals" (formula "18") (term "1,1,0,0,1,0"))
                                          (rule "applyEq" (formula "1") (term "1,1,0") (ifseqformula "39"))
                                          (rule "applyEq" (formula "16") (term "1,1,0") (ifseqformula "39"))
                                          (rule "applyEq" (formula "7") (term "0") (ifseqformula "39"))
                                          (rule "inEqSimp_homoInEq1" (formula "7"))
                                          (rule "mul_literals" (formula "7") (term "1,0"))
                                          (rule "polySimp_addComm1" (formula "7") (term "0"))
                                          (rule "add_literals" (formula "7") (term "0,0"))
                                          (rule "add_zero_left" (formula "7") (term "0"))
                                          (rule "applyEq" (formula "55") (term "1,1,1,0") (ifseqformula "39"))
                                          (rule "add_literals" (formula "55") (term "1,1,0"))
                                          (rule "applyEq" (formula "27") (term "1,1,1,0") (ifseqformula "39"))
                                          (rule "add_literals" (formula "27") (term "1,1,0"))
                                          (rule "applyEq" (formula "46") (term "0") (ifseqformula "39"))
                                          (rule "inEqSimp_homoInEq1" (formula "46"))
                                          (rule "mul_literals" (formula "46") (term "1,0"))
                                          (rule "polySimp_addComm1" (formula "46") (term "0"))
                                          (rule "add_literals" (formula "46") (term "0,0"))
                                          (rule "add_zero_left" (formula "46") (term "0"))
                                          (rule "applyEq" (formula "17") (term "1,1,0") (ifseqformula "39"))
                                          (rule "applyEq" (formula "30") (term "1,1,0,0,0") (ifseqformula "39"))
                                          (rule "applyEq" (formula "33") (term "1,1,1,0") (ifseqformula "39"))
                                          (rule "add_literals" (formula "33") (term "1,1,0"))
                                          (rule "applyEq" (formula "51") (term "1,1,1,0,0,1,1,0,0,0,0,0") (ifseqformula "39"))
                                          (rule "add_literals" (formula "51") (term "1,1,0,0,1,1,0,0,0,0,0"))
                                          (rule "applyEq" (formula "30") (term "1,1,0,0,0,0,0") (ifseqformula "39"))
                                          (rule "applyEq" (formula "21") (term "1,1,0") (ifseqformula "39"))
                                          (rule "add_literals" (formula "21") (term "1,0"))
                                          (rule "applyEq" (formula "51") (term "1,1,0") (ifseqformula "39"))
                                          (rule "applyEq" (formula "42") (term "1,1,0") (ifseqformula "39"))
                                          (rule "applyEq" (formula "37") (term "1,1,0") (ifseqformula "39"))
                                          (rule "add_literals" (formula "37") (term "1,0"))
                                          (rule "applyEq" (formula "11") (term "0") (ifseqformula "39"))
                                          (rule "inEqSimp_homoInEq1" (formula "11"))
                                          (rule "mul_literals" (formula "11") (term "1,0"))
                                          (rule "polySimp_addComm1" (formula "11") (term "0"))
                                          (rule "add_literals" (formula "11") (term "0,0"))
                                          (rule "applyEq" (formula "55") (term "1,1,1,0,0,1,1,0,0,0,0,0") (ifseqformula "39"))
                                          (rule "add_literals" (formula "55") (term "1,1,0,0,1,1,0,0,0,0,0"))
                                          (rule "applyEq" (formula "54") (term "0,1") (ifseqformula "39"))
                                          (rule "inEqSimp_homoInEq0" (formula "54") (term "1"))
                                          (rule "mul_literals" (formula "54") (term "1,0,1"))
                                          (rule "polySimp_addComm1" (formula "54") (term "0,1"))
                                          (rule "add_literals" (formula "54") (term "0,0,1"))
                                          (rule "applyEq" (formula "32") (term "0,1") (ifseqformula "39"))
                                          (rule "inEqSimp_homoInEq0" (formula "32") (term "1"))
                                          (rule "mul_literals" (formula "32") (term "1,0,1"))
                                          (rule "polySimp_addComm1" (formula "32") (term "0,1"))
                                          (rule "add_literals" (formula "32") (term "0,0,1"))
                                          (rule "applyEq" (formula "43") (term "1,1,0") (ifseqformula "39"))
                                          (rule "applyEq" (formula "25") (term "1,1,0") (ifseqformula "39"))
                                          (rule "applyEq" (formula "49") (term "1,1,1,0,0,0,0,0") (ifseqformula "39"))
                                          (rule "add_literals" (formula "49") (term "1,1,0,0,0,0,0"))
                                          (rule "applyEq" (formula "37") (term "0") (ifseqformula "35"))
                                          (rule "eqSymm" (formula "37"))
                                          (rule "applyEq" (formula "47") (term "0") (ifseqformula "48"))
                                          (rule "eqSymm" (formula "47"))
                                          (rule "applyEq" (formula "22") (term "0") (ifseqformula "21"))
                                          (rule "applyEq" (formula "62") (term "0") (ifseqformula "37"))
                                          (rule "applyEq" (formula "50") (term "1,1") (ifseqformula "37"))
                                          (rule "applyEq" (formula "44") (term "1") (ifseqformula "37"))
                                          (rule "applyEq" (formula "24") (term "1,1") (ifseqformula "37"))
                                          (rule "applyEq" (formula "21") (term "1,1") (ifseqformula "37"))
                                          (rule "applyEq" (formula "27") (term "1,0,0,0,0") (ifseqformula "37"))
                                          (rule "applyEq" (formula "31") (term "1,0") (ifseqformula "37"))
                                          (rule "applyEq" (formula "36") (term "1,0") (ifseqformula "37"))
                                          (rule "applyEq" (formula "55") (term "1") (ifseqformula "38"))
                                          (rule "applyEq" (formula "39") (term "1") (ifseqformula "38"))
                                          (rule "applyEq" (formula "37") (term "1") (ifseqformula "38"))
                                          (rule "applyEq" (formula "22") (term "1,0") (ifseqformula "36"))
                                          (builtin "One Step Simplification" (formula "22"))
                                          (rule "true_left" (formula "22"))
                                          (rule "applyEq" (formula "45") (term "1,0") (ifseqformula "35"))
                                          (rule "applyEq" (formula "48") (term "1") (ifseqformula "45"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "11"))
                                          (rule "mul_literals" (formula "11") (term "1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "52") (term "1"))
                                          (rule "mul_literals" (formula "52") (term "1,1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "1"))
                                          (rule "mul_literals" (formula "31") (term "1,1"))
                                          (rule "inEqSimp_contradInEq1" (formula "11") (ifseqformula "10"))
                                          (rule "qeq_literals" (formula "11") (term "0"))
                                          (builtin "One Step Simplification" (formula "11"))
                                          (rule "closeFalse" (formula "11"))
                                       )
                                       (branch "CUT: self.size ≤ 1 FALSE"
                                          (builtin "One Step Simplification" (formula "32"))
                                          (rule "inEqSimp_leqRight" (formula "61"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                          (rule "mul_literals" (formula "1") (term "1"))
                                          (rule "inEqSimp_subsumption1" (formula "41") (ifseqformula "1"))
                                          (rule "leq_literals" (formula "41") (term "0"))
                                          (builtin "One Step Simplification" (formula "41"))
                                          (rule "true_left" (formula "41"))
                                          (rule "allLeft" (formula "56") (inst "t=j_0"))
                                          (rule "inEqSimp_homoInEq1" (formula "56") (term "1"))
                                          (rule "polySimp_addComm1" (formula "56") (term "0,1"))
                                          (rule "applyEq" (formula "56") (term "1,0,0,0") (ifseqformula "45"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "1"))
                                          (rule "polySimp_mulComm0" (formula "56") (term "1,1"))
                                          (rule "polySimp_rightDist" (formula "56") (term "1,1"))
                                          (rule "mul_literals" (formula "56") (term "0,1,1"))
                                          (rule "polySimp_mulLiterals" (formula "56") (term "1,1,1"))
                                          (rule "polySimp_elimOne" (formula "56") (term "1,1,1"))
                                          (rule "inEqSimp_contradInEq1" (formula "56") (term "1,0") (ifseqformula "46"))
                                          (rule "qeq_literals" (formula "56") (term "0,1,0"))
                                          (builtin "One Step Simplification" (formula "56"))
                                          (rule "pullOutSelect" (formula "56") (term "0,0") (inst "selectSK=IntNode_next_4"))
                                          (rule "simplifySelectOfAnon" (formula "56"))
                                          (builtin "One Step Simplification" (formula "56") (ifInst ""  (formula "65")) (ifInst ""  (formula "38")))
                                          (rule "eqSymm" (formula "57") (term "0"))
                                          (rule "applyEq" (formula "56") (term "2,0") (ifseqformula "32"))
                                          (rule "elementOfUnion" (formula "56") (term "0,0"))
                                          (rule "elementOfSingleton" (formula "56") (term "0,0,0"))
                                          (builtin "One Step Simplification" (formula "56"))
                                          (rule "elementOfInfiniteUnion" (formula "56") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "56"))
                                          (rule "elementOfSingleton" (formula "56") (term "1,0,0,0"))
                                          (builtin "One Step Simplification" (formula "56"))
                                          (rule "applyEqReverse" (formula "57") (term "1,0") (ifseqformula "56"))
                                          (rule "hideAuxiliaryEq" (formula "56"))
                                          (rule "allLeft" (formula "31") (inst "t=j_0"))
                                          (rule "inEqSimp_commuteGeq" (formula "31") (term "1,0,0,0,0"))
                                          (rule "applyEq" (formula "31") (term "1,0,0,0,0,0,0,0") (ifseqformula "46"))
                                          (rule "inEqSimp_contradInEq1" (formula "31") (term "1,0,0,0,0,0") (ifseqformula "47"))
                                          (rule "qeq_literals" (formula "31") (term "0,1,0,0,0,0,0"))
                                          (builtin "One Step Simplification" (formula "31"))
                                          (rule "inEqSimp_contradInEq1" (formula "31") (term "1,0,0,0,0") (ifseqformula "48"))
                                          (rule "inEqSimp_homoInEq1" (formula "31") (term "0,1,0,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0,1,0,0,0,0"))
                                          (rule "add_literals" (formula "31") (term "1,1,0,0,1,0,0,0,0"))
                                          (rule "times_zero_1" (formula "31") (term "1,0,0,1,0,0,0,0"))
                                          (rule "add_zero_right" (formula "31") (term "0,0,1,0,0,0,0"))
                                          (rule "leq_literals" (formula "31") (term "0,1,0,0,0,0"))
                                          (builtin "One Step Simplification" (formula "31"))
                                          (rule "allLeft" (formula "36") (inst "t=j_0"))
                                          (rule "inEqSimp_homoInEq1" (formula "36") (term "1"))
                                          (rule "polySimp_addComm1" (formula "36") (term "0,1"))
                                          (rule "applyEq" (formula "36") (term "1,0,0,0") (ifseqformula "47"))
                                          (rule "eqSymm" (formula "36") (term "0,0"))
                                          (rule "applyEq" (formula "36") (term "1,0,0") (ifseqformula "33"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1"))
                                          (rule "polySimp_mulComm0" (formula "36") (term "1,1"))
                                          (rule "polySimp_rightDist" (formula "36") (term "1,1"))
                                          (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1"))
                                          (rule "mul_literals" (formula "36") (term "0,1,1"))
                                          (rule "polySimp_elimOne" (formula "36") (term "1,1,1"))
                                          (rule "inEqSimp_contradInEq1" (formula "36") (term "1,0") (ifseqformula "48"))
                                          (rule "qeq_literals" (formula "36") (term "0,1,0"))
                                          (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "58")))
                                          (rule "true_left" (formula "36"))
                                          (rule "commute_and_2" (formula "51") (term "0,0,0,0"))
                                          (rule "seqGetAlphaCast" (formula "54") (term "1"))
                                          (rule "castedGetAny" (formula "54") (term "0"))
                                          (builtin "One Step Simplification" (formula "54"))
                                          (rule "true_left" (formula "54"))
                                          (rule "seqGetAlphaCast" (formula "5") (term "0"))
                                          (rule "castedGetAny" (formula "5") (term "0"))
                                          (builtin "One Step Simplification" (formula "5"))
                                          (rule "true_left" (formula "5"))
                                          (rule "cut_direct" (formula "35") (term "1"))
                                          (branch "CUT: self.size ≤ 2 + i_2_0 TRUE"
                                             (builtin "One Step Simplification" (formula "36"))
                                             (rule "true_left" (formula "36"))
                                             (rule "replace_known_left" (formula "56") (term "1") (ifseqformula "35"))
                                             (builtin "One Step Simplification" (formula "56"))
                                             (rule "true_left" (formula "56"))
                                             (rule "inEqSimp_antiSymm" (formula "12") (ifseqformula "35"))
                                             (rule "applyEq" (formula "52") (term "1,1,1,0,0,0,0") (ifseqformula "12"))
                                             (rule "polySimp_addAssoc" (formula "52") (term "1,1,0,0,0,0"))
                                             (rule "add_literals" (formula "52") (term "0,1,1,0,0,0,0"))
                                             (rule "applyEq" (formula "30") (term "1,1,0") (ifseqformula "12"))
                                             (rule "applyEq" (formula "2") (term "1,1,0") (ifseqformula "12"))
                                             (rule "applyEq" (formula "54") (term "1,1,0") (ifseqformula "12"))
                                             (rule "applyEq" (formula "28") (term "1,1,0") (ifseqformula "12"))
                                             (rule "applyEq" (formula "29") (term "1,1,1,0") (ifseqformula "12"))
                                             (rule "polySimp_addAssoc" (formula "29") (term "1,1,0"))
                                             (rule "add_literals" (formula "29") (term "0,1,1,0"))
                                             (rule "applyEq" (formula "33") (term "1,1,0,0,0,0,0") (ifseqformula "12"))
                                             (rule "applyEq" (formula "49") (term "0") (ifseqformula "12"))
                                             (rule "inEqSimp_homoInEq1" (formula "49"))
                                             (rule "polySimp_mulComm0" (formula "49") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "49") (term "1,0"))
                                             (rule "mul_literals" (formula "49") (term "0,1,0"))
                                             (rule "polySimp_addComm1" (formula "49") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "49") (term "0,0"))
                                             (rule "add_literals" (formula "49") (term "0,0,0"))
                                             (rule "applyEq" (formula "58") (term "1,1,1,0") (ifseqformula "12"))
                                             (rule "polySimp_addAssoc" (formula "58") (term "1,1,0"))
                                             (rule "add_literals" (formula "58") (term "0,1,1,0"))
                                             (rule "applyEq" (formula "60") (term "1,1,0,0") (ifseqformula "12"))
                                             (rule "applyEq" (formula "18") (term "1,1,0") (ifseqformula "12"))
                                             (rule "applyEq" (formula "20") (term "1,1,1,0,0,1,0") (ifseqformula "12"))
                                             (rule "polySimp_addAssoc" (formula "20") (term "1,1,0,0,1,0"))
                                             (rule "add_literals" (formula "20") (term "0,1,1,0,0,1,0"))
                                             (rule "applyEq" (formula "1") (term "0") (ifseqformula "12"))
                                             (rule "inEqSimp_homoInEq1" (formula "1"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                             (rule "mul_literals" (formula "1") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                             (rule "add_literals" (formula "1") (term "0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0"))
                                             (rule "applyEq" (formula "19") (term "1,1,0") (ifseqformula "12"))
                                             (rule "applyEq" (formula "32") (term "1,1,0,0") (ifseqformula "12"))
                                             (rule "applyEq" (formula "23") (term "1,1,0") (ifseqformula "12"))
                                             (rule "polySimp_addAssoc" (formula "23") (term "1,0"))
                                             (rule "add_literals" (formula "23") (term "0,1,0"))
                                             (rule "applyEq" (formula "13") (term "0") (ifseqformula "12"))
                                             (rule "inEqSimp_homoInEq1" (formula "13"))
                                             (rule "polySimp_pullOutFactor1" (formula "13") (term "0"))
                                             (rule "add_literals" (formula "13") (term "1,0"))
                                             (rule "times_zero_1" (formula "13") (term "0"))
                                             (rule "leq_literals" (formula "13"))
                                             (rule "true_left" (formula "13"))
                                             (rule "applyEq" (formula "49") (term "1,1,0") (ifseqformula "12"))
                                             (rule "polySimp_addAssoc" (formula "49") (term "1,0"))
                                             (rule "add_literals" (formula "49") (term "0,1,0"))
                                             (rule "applyEq" (formula "57") (term "1,1,1,0,0,1,1,0,0,0,0,0") (ifseqformula "12"))
                                             (rule "polySimp_addAssoc" (formula "57") (term "1,1,0,0,1,1,0,0,0,0,0"))
                                             (rule "add_literals" (formula "57") (term "0,1,1,0,0,1,1,0,0,0,0,0"))
                                             (rule "applyEq" (formula "53") (term "1,1,1,0,0,1,1,0,0,0,0,0") (ifseqformula "12"))
                                             (rule "polySimp_addAssoc" (formula "53") (term "1,1,0,0,1,1,0,0,0,0,0"))
                                             (rule "add_literals" (formula "53") (term "0,1,1,0,0,1,1,0,0,0,0,0"))
                                             (rule "applyEq" (formula "40") (term "1,1,0") (ifseqformula "12"))
                                             (rule "polySimp_addAssoc" (formula "40") (term "1,0"))
                                             (rule "add_literals" (formula "40") (term "0,1,0"))
                                             (rule "applyEq" (formula "30") (term "1,1,0") (ifseqformula "12"))
                                             (rule "applyEq" (formula "4") (term "0") (ifseqformula "12"))
                                             (rule "inEqSimp_homoInEq1" (formula "4"))
                                             (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                                             (rule "mul_literals" (formula "4") (term "0,1,0"))
                                             (rule "polySimp_addComm1" (formula "4") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                             (rule "add_literals" (formula "4") (term "0,0,0"))
                                             (rule "applyEq" (formula "32") (term "1,1,0,0,0") (ifseqformula "12"))
                                             (rule "applyEq" (formula "44") (term "1,1,0") (ifseqformula "12"))
                                             (rule "applyEq" (formula "45") (term "1,1,0") (ifseqformula "12"))
                                             (rule "applyEq" (formula "20") (term "1,1,0") (ifseqformula "12"))
                                             (rule "applyEq" (formula "8") (term "0") (ifseqformula "12"))
                                             (rule "inEqSimp_homoInEq1" (formula "8"))
                                             (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "8") (term "1,0"))
                                             (rule "mul_literals" (formula "8") (term "0,1,0"))
                                             (rule "polySimp_addComm1" (formula "8") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                                             (rule "add_literals" (formula "8") (term "0,0,0"))
                                             (rule "applyEq" (formula "26") (term "1,1,0") (ifseqformula "12"))
                                             (rule "applyEq" (formula "36") (term "1,1,1,0") (ifseqformula "12"))
                                             (rule "polySimp_addAssoc" (formula "36") (term "1,1,0"))
                                             (rule "add_literals" (formula "36") (term "0,1,1,0"))
                                             (rule "applyEq" (formula "56") (term "0,1") (ifseqformula "12"))
                                             (rule "inEqSimp_homoInEq0" (formula "56") (term "1"))
                                             (rule "polySimp_mulComm0" (formula "56") (term "1,0,1"))
                                             (rule "polySimp_rightDist" (formula "56") (term "1,0,1"))
                                             (rule "mul_literals" (formula "56") (term "0,1,0,1"))
                                             (rule "polySimp_addComm1" (formula "56") (term "0,1"))
                                             (rule "polySimp_addAssoc" (formula "56") (term "0,0,1"))
                                             (rule "add_literals" (formula "56") (term "0,0,0,1"))
                                             (rule "applyEq" (formula "35") (term "0") (ifseqformula "12"))
                                             (rule "inEqSimp_homoInEq0" (formula "35"))
                                             (rule "polySimp_pullOutFactor1" (formula "35") (term "0"))
                                             (rule "add_literals" (formula "35") (term "1,0"))
                                             (rule "times_zero_1" (formula "35") (term "0"))
                                             (rule "qeq_literals" (formula "35"))
                                             (rule "true_left" (formula "35"))
                                             (rule "applyEq" (formula "50") (term "1,1,0") (ifseqformula "39"))
                                             (rule "applyEq" (formula "50") (term "1") (ifseqformula "48"))
                                             (builtin "One Step Simplification" (formula "50"))
                                             (rule "applyEq" (formula "53") (term "1") (ifseqformula "39"))
                                             (rule "applyEq" (formula "54") (term "1,1,0") (ifseqformula "39"))
                                             (rule "applyEq" (formula "22") (term "0") (ifseqformula "24"))
                                             (rule "applyEq" (formula "54") (term "1,2,0") (ifseqformula "39"))
                                             (rule "applyEq" (formula "29") (term "1,0,0,0,0,0") (ifseqformula "39"))
                                             (rule "applyEq" (formula "54") (term "1,0,0,0") (ifseqformula "39"))
                                             (rule "replace_known_left" (formula "54") (term "0,0") (ifseqformula "38"))
                                             (builtin "One Step Simplification" (formula "54"))
                                             (rule "hideAuxiliaryEq" (formula "54"))
                                             (rule "applyEq" (formula "24") (term "1,1") (ifseqformula "39"))
                                             (rule "applyEq" (formula "60") (term "0") (ifseqformula "39"))
                                             (rule "applyEq" (formula "41") (term "1") (ifseqformula "12"))
                                             (rule "applyEq" (formula "56") (term "1") (ifseqformula "12"))
                                             (rule "applyEq" (formula "40") (term "1") (ifseqformula "12"))
                                             (rule "applyEq" (formula "50") (term "1,0,0,1,0") (ifseqformula "39"))
                                             (rule "replace_known_left" (formula "50") (term "0,1,0") (ifseqformula "38"))
                                             (builtin "One Step Simplification" (formula "50"))
                                             (rule "applyEq" (formula "22") (term "1,0") (ifseqformula "39"))
                                             (builtin "One Step Simplification" (formula "22"))
                                             (rule "true_left" (formula "22"))
                                             (rule "applyEq" (formula "49") (term "1,1,0,0,0") (ifseqformula "38"))
                                             (rule "applyEq" (formula "49") (term "1,0,1") (ifseqformula "38"))
                                             (rule "eqSymm" (formula "49") (term "1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "46"))
                                             (rule "polySimp_mulComm0" (formula "46") (term "1"))
                                             (rule "polySimp_rightDist" (formula "46") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "46") (term "1,1"))
                                             (rule "mul_literals" (formula "46") (term "0,1"))
                                             (rule "polySimp_elimOne" (formula "46") (term "1,1"))
                                             (rule "inEqSimp_invertInEq0" (formula "1"))
                                             (rule "mul_literals" (formula "1") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                             (rule "polySimp_elimOne" (formula "1") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                             (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                             (rule "polySimp_rightDist" (formula "3") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                             (rule "mul_literals" (formula "3") (term "0,1"))
                                             (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "7"))
                                             (rule "polySimp_mulComm0" (formula "7") (term "1"))
                                             (rule "polySimp_rightDist" (formula "7") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                                             (rule "mul_literals" (formula "7") (term "0,1"))
                                             (rule "polySimp_elimOne" (formula "7") (term "1,1"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "52") (term "1"))
                                             (rule "polySimp_mulComm0" (formula "52") (term "1,1"))
                                             (rule "polySimp_rightDist" (formula "52") (term "1,1"))
                                             (rule "polySimp_mulLiterals" (formula "52") (term "1,1,1"))
                                             (rule "mul_literals" (formula "52") (term "0,1,1"))
                                             (rule "polySimp_elimOne" (formula "52") (term "1,1,1"))
                                             (rule "inEqSimp_exactShadow3" (formula "44") (ifseqformula "45"))
                                             (rule "times_zero_1" (formula "44") (term "0,0"))
                                             (rule "add_zero_left" (formula "44") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "44"))
                                             (rule "mul_literals" (formula "44") (term "1"))
                                             (rule "inEqSimp_subsumption1" (formula "44") (ifseqformula "10"))
                                             (rule "leq_literals" (formula "44") (term "0"))
                                             (builtin "One Step Simplification" (formula "44"))
                                             (rule "true_left" (formula "44"))
                                             (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "3"))
                                             (rule "times_zero_1" (formula "2") (term "0,0"))
                                             (rule "add_zero_left" (formula "2") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                             (rule "mul_literals" (formula "2") (term "1"))
                                             (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "11"))
                                             (rule "leq_literals" (formula "2") (term "0"))
                                             (builtin "One Step Simplification" (formula "2"))
                                             (rule "true_left" (formula "2"))
                                             (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "7"))
                                             (rule "times_zero_1" (formula "6") (term "0,0"))
                                             (rule "add_zero_left" (formula "6") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                             (rule "mul_literals" (formula "6") (term "1"))
                                             (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "11"))
                                             (rule "leq_literals" (formula "6") (term "0"))
                                             (builtin "One Step Simplification" (formula "6"))
                                             (rule "true_left" (formula "6"))
                                             (rule "inEqSimp_or_weaken3" (formula "27") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "27") (term "1,0,1,0"))
                                             (rule "add_literals" (formula "27") (term "0,1,0,1,0"))
                                             (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "26")))
                                             (rule "true_left" (formula "27"))
                                             (rule "seqGetAlphaCast" (formula "22") (term "0"))
                                             (rule "castDel" (formula "22") (term "0"))
                                             (builtin "One Step Simplification" (formula "22"))
                                             (rule "true_left" (formula "22"))
                                             (rule "seqGetAlphaCast" (formula "46") (term "0"))
                                             (rule "castDel" (formula "46") (term "0"))
                                             (builtin "One Step Simplification" (formula "46"))
                                             (rule "true_left" (formula "46"))
                                             (rule "seqGetAlphaCast" (formula "23") (term "0"))
                                             (rule "castDel" (formula "23") (term "0"))
                                             (builtin "One Step Simplification" (formula "23"))
                                             (rule "true_left" (formula "23"))
                                             (rule "seqGetAlphaCast" (formula "48") (term "0"))
                                             (rule "castDel" (formula "48") (term "0"))
                                             (builtin "One Step Simplification" (formula "48"))
                                             (rule "true_left" (formula "48"))
                                             (rule "commute_and" (formula "47") (term "0,0,0"))
                                             (rule "seqGetAlphaCast" (formula "5") (term "0"))
                                             (rule "castedGetAny" (formula "5") (term "0"))
                                             (builtin "One Step Simplification" (formula "5"))
                                             (rule "true_left" (formula "5"))
                                             (rule "allLeft" (formula "1") (inst "t=Z(0(#))"))
                                             (rule "leq_literals" (formula "1") (term "1,0"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "35")))
                                             (rule "inEqSimp_homoInEq1" (formula "1"))
                                             (rule "times_zero_2" (formula "1") (term "1,0"))
                                             (rule "add_zero_right" (formula "1") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                             (rule "mul_literals" (formula "1") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "11"))
                                             (rule "qeq_literals" (formula "1") (term "0"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "closeFalse" (formula "1"))
                                          )
                                          (branch "CUT: self.size ≤ 2 + i_2_0 FALSE"
                                             (builtin "One Step Simplification" (formula "35"))
                                             (rule "replace_known_right" (formula "56") (term "1") (ifseqformula "63"))
                                             (builtin "One Step Simplification" (formula "56"))
                                             (rule "applyEqReverse" (formula "55") (term "1") (ifseqformula "56"))
                                             (rule "hideAuxiliaryEq" (formula "56"))
                                             (rule "inEqSimp_leqRight" (formula "62"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                             (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0,0"))
                                             (rule "applyEq" (formula "56") (term "1,0") (ifseqformula "36"))
                                             (builtin "One Step Simplification" (formula "56"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1"))
                                             (rule "mul_literals" (formula "1") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                             (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "1"))
                                             (rule "inEqSimp_homoInEq0" (formula "13") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "13") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "13") (term "1,0,0"))
                                             (rule "mul_literals" (formula "13") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "13") (term "0,0"))
                                             (rule "polySimp_addComm1" (formula "13") (term "0,0,0"))
                                             (rule "add_literals" (formula "13") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0"))
                                             (rule "add_literals" (formula "13") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "13") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "13") (term "0,0"))
                                             (rule "qeq_literals" (formula "13") (term "0"))
                                             (builtin "One Step Simplification" (formula "13"))
                                             (rule "true_left" (formula "13"))
                                             (rule "seqGetAlphaCast" (formula "24") (term "0"))
                                             (rule "castDel" (formula "24") (term "0"))
                                             (builtin "One Step Simplification" (formula "24"))
                                             (rule "true_left" (formula "24"))
                                             (rule "commute_or_2" (formula "31") (term "0"))
                                             (rule "allLeft" (formula "3") (inst "t=Z(0(#))"))
                                             (rule "leq_literals" (formula "3") (term "1,0"))
                                             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "39")))
                                             (rule "inEqSimp_commuteGeq" (formula "3"))
                                             (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "3"))
                                             (rule "qeq_literals" (formula "2") (term "0"))
                                             (builtin "One Step Simplification" (formula "2"))
                                             (rule "closeFalse" (formula "2"))
                                          )
                                       )
                                    )
                                    (branch "∃ int j; ( (IntNode)self.nodeseq[j] = (IntNode)self.nodeseq[i_2_0] ∧ j ≥ 0 ∧ j ≤ -1 + self.size) FALSE"
                                       (rule "eqSymm" (formula "5"))
                                       (rule "applyEq" (formula "63") (term "0") (ifseqformula "5"))
                                       (builtin "One Step Simplification" (formula "63"))
                                       (rule "false_right" (formula "63"))
                                       (rule "nnf_ex2all" (formula "58"))
                                       (rule "nnf_notAnd" (formula "1") (term "0"))
                                       (rule "inEqSimp_notLeq" (formula "1") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0"))
                                       (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0,1,0"))
                                       (rule "add_zero_left" (formula "1") (term "0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1,1,0"))
                                       (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_notGeq" (formula "1") (term "1,0,0"))
                                       (rule "times_zero_1" (formula "1") (term "1,0,0,1,0,0"))
                                       (rule "add_zero_right" (formula "1") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1,0,0"))
                                       (rule "mul_literals" (formula "1") (term "1,1,0,0"))
                                       (rule "seqGetAlphaCast" (formula "30") (term "0,0"))
                                       (rule "castedGetAny" (formula "30") (term "0"))
                                       (builtin "One Step Simplification" (formula "30"))
                                       (rule "true_left" (formula "30"))
                                       (rule "cut_direct" (formula "30") (term "1"))
                                       (branch "CUT: self.size ≤ 1 TRUE"
                                          (builtin "One Step Simplification" (formula "31"))
                                          (rule "true_left" (formula "31"))
                                          (rule "inEqSimp_antiSymm" (formula "38") (ifseqformula "30"))
                                          (rule "applyEq" (formula "28") (term "1,1,0,0,0") (ifseqformula "38"))
                                          (rule "applyEq" (formula "2") (term "1,1,0") (ifseqformula "38"))
                                          (rule "applyEq" (formula "1") (term "1,1,0") (ifseqformula "38"))
                                          (rule "applyEq" (formula "24") (term "1,1,0") (ifseqformula "38"))
                                          (rule "applyEq" (formula "28") (term "1,1,0,0,0,0,0") (ifseqformula "38"))
                                          (rule "applyEq" (formula "27") (term "1,1,0") (ifseqformula "38"))
                                          (rule "applyEq" (formula "57") (term "1,1,0,0") (ifseqformula "38"))
                                          (rule "applyEq" (formula "54") (term "0,1") (ifseqformula "38"))
                                          (rule "inEqSimp_homoInEq0" (formula "54") (term "1"))
                                          (rule "mul_literals" (formula "54") (term "1,0,1"))
                                          (rule "polySimp_addComm1" (formula "54") (term "0,1"))
                                          (rule "add_literals" (formula "54") (term "0,0,1"))
                                          (rule "applyEq" (formula "31") (term "0,1") (ifseqformula "38"))
                                          (rule "inEqSimp_homoInEq0" (formula "31") (term "1"))
                                          (rule "mul_literals" (formula "31") (term "1,0,1"))
                                          (rule "polySimp_addComm1" (formula "31") (term "0,1"))
                                          (rule "add_literals" (formula "31") (term "0,0,1"))
                                          (rule "applyEq" (formula "47") (term "1,1,0") (ifseqformula "38"))
                                          (rule "add_literals" (formula "47") (term "1,0"))
                                          (rule "applyEq" (formula "46") (term "0") (ifseqformula "38"))
                                          (rule "inEqSimp_homoInEq1" (formula "46"))
                                          (rule "mul_literals" (formula "46") (term "1,0"))
                                          (rule "polySimp_addComm1" (formula "46") (term "0"))
                                          (rule "add_literals" (formula "46") (term "0,0"))
                                          (rule "add_zero_left" (formula "46") (term "0"))
                                          (rule "applyEq" (formula "25") (term "1,1,1,0") (ifseqformula "38"))
                                          (rule "add_literals" (formula "25") (term "1,1,0"))
                                          (rule "applyEq" (formula "19") (term "1,1,0") (ifseqformula "38"))
                                          (rule "add_literals" (formula "19") (term "1,0"))
                                          (rule "applyEq" (formula "32") (term "1,1,1,0") (ifseqformula "38"))
                                          (rule "add_literals" (formula "32") (term "1,1,0"))
                                          (rule "applyEq" (formula "23") (term "1,1,0") (ifseqformula "38"))
                                          (rule "applyEq" (formula "9") (term "0") (ifseqformula "38"))
                                          (rule "inEqSimp_homoInEq1" (formula "9"))
                                          (rule "mul_literals" (formula "9") (term "1,0"))
                                          (rule "polySimp_addComm1" (formula "9") (term "0"))
                                          (rule "add_literals" (formula "9") (term "0,0"))
                                          (rule "applyEq" (formula "42") (term "1,1,0") (ifseqformula "38"))
                                          (rule "applyEq" (formula "51") (term "1,1,1,0,0,1,1,0,0,0,0,0") (ifseqformula "38"))
                                          (rule "add_literals" (formula "51") (term "1,1,0,0,1,1,0,0,0,0,0"))
                                          (rule "applyEq" (formula "30") (term "0") (ifseqformula "38"))
                                          (rule "leq_literals" (formula "30"))
                                          (rule "true_left" (formula "30"))
                                          (rule "applyEq" (formula "48") (term "1,1,1,0,0,0,0,0") (ifseqformula "37"))
                                          (rule "add_literals" (formula "48") (term "1,1,0,0,0,0,0"))
                                          (rule "applyEq" (formula "54") (term "1,1,1,0,0,1,1,0,0,0,0,0") (ifseqformula "37"))
                                          (rule "add_literals" (formula "54") (term "1,1,0,0,1,1,0,0,0,0,0"))
                                          (rule "applyEq" (formula "38") (term "0") (ifseqformula "37"))
                                          (rule "qeq_literals" (formula "38"))
                                          (rule "true_left" (formula "38"))
                                          (rule "applyEq" (formula "49") (term "1,1,0") (ifseqformula "37"))
                                          (rule "applyEq" (formula "35") (term "1,1,0") (ifseqformula "37"))
                                          (rule "add_literals" (formula "35") (term "1,0"))
                                          (rule "applyEq" (formula "16") (term "1,1,1,0,0,1,0") (ifseqformula "37"))
                                          (rule "add_literals" (formula "16") (term "1,1,0,0,1,0"))
                                          (rule "applyEq" (formula "41") (term "1,1,0") (ifseqformula "37"))
                                          (rule "applyEq" (formula "4") (term "0") (ifseqformula "37"))
                                          (rule "inEqSimp_homoInEq1" (formula "4"))
                                          (rule "mul_literals" (formula "4") (term "1,0"))
                                          (rule "polySimp_addComm1" (formula "4") (term "0"))
                                          (rule "add_literals" (formula "4") (term "0,0"))
                                          (rule "add_zero_left" (formula "4") (term "0"))
                                          (rule "applyEq" (formula "15") (term "1,1,0") (ifseqformula "37"))
                                          (rule "applyEq" (formula "17") (term "1,1,0") (ifseqformula "37"))
                                          (rule "applyEq" (formula "26") (term "1,1,0") (ifseqformula "37"))
                                          (rule "applyEq" (formula "14") (term "1,1,0") (ifseqformula "37"))
                                          (rule "applyEq" (formula "53") (term "1,1,1,0") (ifseqformula "37"))
                                          (rule "add_literals" (formula "53") (term "1,1,0"))
                                          (rule "applyEq" (formula "35") (term "0") (ifseqformula "33"))
                                          (rule "eqSymm" (formula "35"))
                                          (rule "applyEq" (formula "19") (term "0") (ifseqformula "20"))
                                          (rule "eqSymm" (formula "19"))
                                          (rule "applyEq" (formula "45") (term "0") (ifseqformula "46"))
                                          (rule "eqSymm" (formula "45"))
                                          (rule "applyEq" (formula "48") (term "1,1") (ifseqformula "35"))
                                          (rule "applyEq" (formula "34") (term "1,0") (ifseqformula "35"))
                                          (rule "applyEq" (formula "25") (term "1,0,0,0,0") (ifseqformula "34"))
                                          (rule "applyEq" (formula "22") (term "1,1") (ifseqformula "34"))
                                          (rule "applyEq" (formula "29") (term "1,0") (ifseqformula "34"))
                                          (rule "applyEq" (formula "41") (term "1") (ifseqformula "34"))
                                          (rule "applyEq" (formula "59") (term "0") (ifseqformula "34"))
                                          (rule "applyEq" (formula "35") (term "1") (ifseqformula "36"))
                                          (rule "applyEq" (formula "53") (term "1") (ifseqformula "36"))
                                          (rule "applyEq" (formula "37") (term "1") (ifseqformula "36"))
                                          (rule "applyEq" (formula "19") (term "1,0") (ifseqformula "34"))
                                          (builtin "One Step Simplification" (formula "19"))
                                          (rule "true_left" (formula "19"))
                                          (rule "applyEq" (formula "43") (term "1,0") (ifseqformula "33"))
                                          (rule "applyEq" (formula "46") (term "1") (ifseqformula "43"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "50") (term "1"))
                                          (rule "mul_literals" (formula "50") (term "1,1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "1"))
                                          (rule "mul_literals" (formula "29") (term "1,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "9"))
                                          (rule "mul_literals" (formula "9") (term "1"))
                                          (rule "inEqSimp_subsumption1" (formula "50") (term "1") (ifseqformula "8"))
                                          (rule "leq_literals" (formula "50") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "50"))
                                          (rule "true_left" (formula "50"))
                                          (rule "inEqSimp_contradInEq0" (formula "8") (ifseqformula "9"))
                                          (rule "qeq_literals" (formula "8") (term "0"))
                                          (builtin "One Step Simplification" (formula "8"))
                                          (rule "closeFalse" (formula "8"))
                                       )
                                       (branch "CUT: self.size ≤ 1 FALSE"
                                          (builtin "One Step Simplification" (formula "30"))
                                          (rule "inEqSimp_leqRight" (formula "59"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                          (rule "mul_literals" (formula "1") (term "1"))
                                          (rule "inEqSimp_subsumption1" (formula "39") (ifseqformula "1"))
                                          (rule "leq_literals" (formula "39") (term "0"))
                                          (builtin "One Step Simplification" (formula "39"))
                                          (rule "true_left" (formula "39"))
                                          (rule "allLeft" (formula "33") (inst "t=j_0"))
                                          (rule "inEqSimp_homoInEq1" (formula "33") (term "1"))
                                          (rule "polySimp_addComm1" (formula "33") (term "0,1"))
                                          (rule "applyEq" (formula "33") (term "1,0,0,0") (ifseqformula "44"))
                                          (rule "eqSymm" (formula "33") (term "0,0"))
                                          (rule "applyEq" (formula "33") (term "1,0,0") (ifseqformula "30"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1"))
                                          (rule "polySimp_mulComm0" (formula "33") (term "1,1"))
                                          (rule "polySimp_rightDist" (formula "33") (term "1,1"))
                                          (rule "mul_literals" (formula "33") (term "0,1,1"))
                                          (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1"))
                                          (rule "polySimp_elimOne" (formula "33") (term "1,1,1"))
                                          (rule "inEqSimp_contradInEq1" (formula "33") (term "1,0") (ifseqformula "45"))
                                          (rule "qeq_literals" (formula "33") (term "0,1,0"))
                                          (builtin "One Step Simplification" (formula "33"))
                                          (rule "allLeft" (formula "55") (inst "t=j_0"))
                                          (rule "inEqSimp_homoInEq1" (formula "55") (term "1"))
                                          (rule "polySimp_addComm1" (formula "55") (term "0,1"))
                                          (rule "applyEq" (formula "55") (term "1,0,0,0") (ifseqformula "44"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "1"))
                                          (rule "polySimp_mulComm0" (formula "55") (term "1,1"))
                                          (rule "polySimp_rightDist" (formula "55") (term "1,1"))
                                          (rule "mul_literals" (formula "55") (term "0,1,1"))
                                          (rule "polySimp_mulLiterals" (formula "55") (term "1,1,1"))
                                          (rule "polySimp_elimOne" (formula "55") (term "1,1,1"))
                                          (rule "inEqSimp_contradInEq1" (formula "55") (term "1,0") (ifseqformula "45"))
                                          (rule "qeq_literals" (formula "55") (term "0,1,0"))
                                          (builtin "One Step Simplification" (formula "55"))
                                          (rule "pullOutSelect" (formula "55") (term "0,0") (inst "selectSK=IntNode_next_4"))
                                          (rule "simplifySelectOfAnon" (formula "55"))
                                          (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "64")) (ifInst ""  (formula "37")))
                                          (rule "eqSymm" (formula "56") (term "0"))
                                          (rule "applyEq" (formula "55") (term "2,0") (ifseqformula "30"))
                                          (rule "elementOfUnion" (formula "55") (term "0,0"))
                                          (rule "elementOfInfiniteUnion" (formula "55") (term "1,0,0"))
                                          (builtin "One Step Simplification" (formula "55"))
                                          (rule "elementOfSingleton" (formula "55") (term "0,0,0"))
                                          (builtin "One Step Simplification" (formula "55"))
                                          (rule "elementOfSingleton" (formula "55") (term "1,0,0,0"))
                                          (builtin "One Step Simplification" (formula "55"))
                                          (rule "applyEqReverse" (formula "56") (term "1,0") (ifseqformula "55"))
                                          (rule "hideAuxiliaryEq" (formula "55"))
                                          (rule "allLeft" (formula "29") (inst "t=j_0"))
                                          (rule "inEqSimp_commuteGeq" (formula "29") (term "1,0,0,0,0"))
                                          (rule "applyEq" (formula "29") (term "1,0,0,0,0,0,0,0") (ifseqformula "45"))
                                          (rule "inEqSimp_contradInEq1" (formula "29") (term "1,0,0,0,0,0") (ifseqformula "46"))
                                          (rule "qeq_literals" (formula "29") (term "0,1,0,0,0,0,0"))
                                          (builtin "One Step Simplification" (formula "29"))
                                          (rule "inEqSimp_contradInEq1" (formula "29") (term "1,0,0,0,0") (ifseqformula "47"))
                                          (rule "inEqSimp_homoInEq1" (formula "29") (term "0,1,0,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,1,0,0,0,0"))
                                          (rule "add_literals" (formula "29") (term "1,1,0,0,1,0,0,0,0"))
                                          (rule "times_zero_1" (formula "29") (term "1,0,0,1,0,0,0,0"))
                                          (rule "add_zero_right" (formula "29") (term "0,0,1,0,0,0,0"))
                                          (rule "leq_literals" (formula "29") (term "0,1,0,0,0,0"))
                                          (builtin "One Step Simplification" (formula "29"))
                                          (rule "commute_and_2" (formula "50") (term "0,0,0,0"))
                                          (rule "seqGetAlphaCast" (formula "53") (term "1"))
                                          (rule "castedGetAny" (formula "53") (term "0"))
                                          (builtin "One Step Simplification" (formula "53"))
                                          (rule "true_left" (formula "53"))
                                          (rule "seqGetAlphaCast" (formula "6") (term "0"))
                                          (rule "castedGetAny" (formula "6") (term "0"))
                                          (builtin "One Step Simplification" (formula "6"))
                                          (rule "true_left" (formula "6"))
                                          (rule "cut_direct" (formula "33") (term "1"))
                                          (branch "CUT: self.size ≤ 2 + i_2_0 TRUE"
                                             (builtin "One Step Simplification" (formula "34"))
                                             (rule "true_left" (formula "34"))
                                             (rule "replace_known_left" (formula "55") (term "1") (ifseqformula "33"))
                                             (builtin "One Step Simplification" (formula "55"))
                                             (rule "true_left" (formula "55"))
                                             (rule "inEqSimp_antiSymm" (formula "10") (ifseqformula "33"))
                                             (rule "applyEq" (formula "19") (term "1,1,0") (ifseqformula "10"))
                                             (rule "applyEq" (formula "48") (term "0") (ifseqformula "10"))
                                             (rule "inEqSimp_homoInEq1" (formula "48"))
                                             (rule "polySimp_mulComm0" (formula "48") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "48") (term "1,0"))
                                             (rule "mul_literals" (formula "48") (term "0,1,0"))
                                             (rule "polySimp_addComm1" (formula "48") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "48") (term "0,0"))
                                             (rule "add_literals" (formula "48") (term "0,0,0"))
                                             (rule "applyEq" (formula "56") (term "1,1,1,0") (ifseqformula "10"))
                                             (rule "polySimp_addAssoc" (formula "56") (term "1,1,0"))
                                             (rule "add_literals" (formula "56") (term "0,1,1,0"))
                                             (rule "applyEq" (formula "44") (term "1,1,0") (ifseqformula "10"))
                                             (rule "applyEq" (formula "40") (term "1,1,0") (ifseqformula "10"))
                                             (rule "polySimp_addAssoc" (formula "40") (term "1,0"))
                                             (rule "add_literals" (formula "40") (term "0,1,0"))
                                             (rule "applyEq" (formula "3") (term "1,1,0") (ifseqformula "10"))
                                             (rule "applyEq" (formula "31") (term "1,1,0,0,0") (ifseqformula "10"))
                                             (rule "applyEq" (formula "51") (term "1,1,1,0,0,0,0") (ifseqformula "10"))
                                             (rule "polySimp_addAssoc" (formula "51") (term "1,1,0,0,0,0"))
                                             (rule "add_literals" (formula "51") (term "0,1,1,0,0,0,0"))
                                             (rule "applyEq" (formula "5") (term "0") (ifseqformula "10"))
                                             (rule "inEqSimp_homoInEq1" (formula "5"))
                                             (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                                             (rule "mul_literals" (formula "5") (term "0,1,0"))
                                             (rule "polySimp_addComm1" (formula "5") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                             (rule "add_literals" (formula "5") (term "0,0,0"))
                                             (rule "applyEq" (formula "25") (term "1,1,0") (ifseqformula "10"))
                                             (rule "applyEq" (formula "36") (term "1,1,1,0") (ifseqformula "10"))
                                             (rule "polySimp_addAssoc" (formula "36") (term "1,1,0"))
                                             (rule "add_literals" (formula "36") (term "0,1,1,0"))
                                             (rule "applyEq" (formula "45") (term "1,1,0") (ifseqformula "10"))
                                             (rule "applyEq" (formula "28") (term "1,1,0") (ifseqformula "10"))
                                             (rule "applyEq" (formula "56") (term "1,1,1,0,0,1,1,0,0,0,0,0") (ifseqformula "10"))
                                             (rule "polySimp_addAssoc" (formula "56") (term "1,1,0,0,1,1,0,0,0,0,0"))
                                             (rule "add_literals" (formula "56") (term "0,1,1,0,0,1,1,0,0,0,0,0"))
                                             (rule "applyEq" (formula "53") (term "1,1,1,0,0,1,1,0,0,0,0,0") (ifseqformula "10"))
                                             (rule "polySimp_addAssoc" (formula "53") (term "1,1,0,0,1,1,0,0,0,0,0"))
                                             (rule "add_literals" (formula "53") (term "0,1,1,0,0,1,1,0,0,0,0,0"))
                                             (rule "applyEq" (formula "26") (term "1,1,0") (ifseqformula "10"))
                                             (rule "applyEq" (formula "16") (term "1,1,0") (ifseqformula "10"))
                                             (rule "applyEq" (formula "31") (term "1,1,0,0,0,0,0") (ifseqformula "10"))
                                             (rule "applyEq" (formula "2") (term "1,1,0") (ifseqformula "10"))
                                             (rule "applyEq" (formula "1") (term "0") (ifseqformula "10"))
                                             (rule "inEqSimp_homoInEq1" (formula "1"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                             (rule "mul_literals" (formula "1") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                             (rule "add_literals" (formula "1") (term "0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0"))
                                             (rule "applyEq" (formula "11") (term "0") (ifseqformula "10"))
                                             (rule "inEqSimp_homoInEq1" (formula "11"))
                                             (rule "polySimp_pullOutFactor1" (formula "11") (term "0"))
                                             (rule "add_literals" (formula "11") (term "1,0"))
                                             (rule "times_zero_1" (formula "11") (term "0"))
                                             (rule "leq_literals" (formula "11"))
                                             (rule "true_left" (formula "11"))
                                             (rule "applyEq" (formula "57") (term "1,1,0,0") (ifseqformula "10"))
                                             (rule "applyEq" (formula "48") (term "1,1,0") (ifseqformula "10"))
                                             (rule "polySimp_addAssoc" (formula "48") (term "1,0"))
                                             (rule "add_literals" (formula "48") (term "0,1,0"))
                                             (rule "applyEq" (formula "34") (term "0,1") (ifseqformula "10"))
                                             (rule "inEqSimp_homoInEq0" (formula "34") (term "1"))
                                             (rule "polySimp_mulComm0" (formula "34") (term "1,0,1"))
                                             (rule "polySimp_rightDist" (formula "34") (term "1,0,1"))
                                             (rule "mul_literals" (formula "34") (term "0,1,0,1"))
                                             (rule "polySimp_addComm1" (formula "34") (term "0,1"))
                                             (rule "polySimp_addAssoc" (formula "34") (term "0,0,1"))
                                             (rule "add_literals" (formula "34") (term "0,0,0,1"))
                                             (rule "applyEq" (formula "28") (term "1,1,0") (ifseqformula "10"))
                                             (rule "applyEq" (formula "26") (term "1,1,1,0") (ifseqformula "10"))
                                             (rule "polySimp_addAssoc" (formula "26") (term "1,1,0"))
                                             (rule "add_literals" (formula "26") (term "0,1,1,0"))
                                             (rule "applyEq" (formula "20") (term "1,1,0") (ifseqformula "10"))
                                             (rule "polySimp_addAssoc" (formula "20") (term "1,0"))
                                             (rule "add_literals" (formula "20") (term "0,1,0"))
                                             (rule "applyEq" (formula "16") (term "1,1,0") (ifseqformula "10"))
                                             (rule "applyEq" (formula "52") (term "1,1,0") (ifseqformula "10"))
                                             (rule "applyEq" (formula "33") (term "0") (ifseqformula "10"))
                                             (rule "inEqSimp_homoInEq0" (formula "33"))
                                             (rule "polySimp_pullOutFactor1" (formula "33") (term "0"))
                                             (rule "add_literals" (formula "33") (term "1,0"))
                                             (rule "times_zero_1" (formula "33") (term "0"))
                                             (rule "qeq_literals" (formula "33"))
                                             (rule "true_left" (formula "33"))
                                             (rule "applyEq" (formula "29") (term "1,1,0,0") (ifseqformula "10"))
                                             (rule "applyEq" (formula "17") (term "1,1,1,0,0,1,0") (ifseqformula "10"))
                                             (rule "polySimp_addAssoc" (formula "17") (term "1,1,0,0,1,0"))
                                             (rule "add_literals" (formula "17") (term "0,1,1,0,0,1,0"))
                                             (rule "applyEq" (formula "49") (term "1,1,0,0,0,0,0") (ifseqformula "38"))
                                             (rule "applyEq" (formula "53") (term "1,0,0,0") (ifseqformula "38"))
                                             (rule "replace_known_left" (formula "53") (term "0,0") (ifseqformula "37"))
                                             (builtin "One Step Simplification" (formula "53"))
                                             (rule "hideAuxiliaryEq" (formula "53"))
                                             (rule "applyEq" (formula "52") (term "1") (ifseqformula "38"))
                                             (rule "applyEq" (formula "58") (term "0") (ifseqformula "38"))
                                             (rule "applyEq" (formula "49") (term "1,1,0") (ifseqformula "38"))
                                             (rule "applyEq" (formula "49") (term "1,0,0,1,0,0") (ifseqformula "38"))
                                             (rule "replace_known_left" (formula "49") (term "0,1,0,0") (ifseqformula "37"))
                                             (builtin "One Step Simplification" (formula "49"))
                                             (rule "applyEq" (formula "22") (term "1,1") (ifseqformula "38"))
                                             (rule "applyEq" (formula "26") (term "1,0,0,0,0,0") (ifseqformula "37"))
                                             (rule "applyEq" (formula "39") (term "1") (ifseqformula "10"))
                                             (rule "applyEq" (formula "38") (term "1") (ifseqformula "10"))
                                             (rule "applyEq" (formula "53") (term "1") (ifseqformula "10"))
                                             (rule "applyEq" (formula "48") (term "1,2,0") (ifseqformula "37"))
                                             (rule "applyEq" (formula "48") (term "1") (ifseqformula "46"))
                                             (builtin "One Step Simplification" (formula "48"))
                                             (rule "eqSymm" (formula "48") (term "1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "45"))
                                             (rule "polySimp_mulComm0" (formula "45") (term "1"))
                                             (rule "polySimp_rightDist" (formula "45") (term "1"))
                                             (rule "mul_literals" (formula "45") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "45") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "45") (term "1,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                                             (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                             (rule "polySimp_rightDist" (formula "5") (term "1"))
                                             (rule "mul_literals" (formula "5") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                             (rule "inEqSimp_invertInEq0" (formula "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                             (rule "times_zero_2" (formula "1") (term "1"))
                                             (rule "polySimp_elimOne" (formula "1") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "1"))
                                             (rule "polySimp_mulComm0" (formula "31") (term "1,1"))
                                             (rule "polySimp_rightDist" (formula "31") (term "1,1"))
                                             (rule "mul_literals" (formula "31") (term "0,1,1"))
                                             (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1"))
                                             (rule "polySimp_elimOne" (formula "31") (term "1,1,1"))
                                             (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "4"))
                                             (rule "times_zero_1" (formula "3") (term "0,0"))
                                             (rule "add_zero_left" (formula "3") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                             (rule "mul_literals" (formula "3") (term "1"))
                                             (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "9"))
                                             (rule "leq_literals" (formula "3") (term "0"))
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "true_left" (formula "3"))
                                             (rule "inEqSimp_exactShadow3" (formula "43") (ifseqformula "44"))
                                             (rule "mul_literals" (formula "43") (term "0,0"))
                                             (rule "add_zero_left" (formula "43") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "43"))
                                             (rule "mul_literals" (formula "43") (term "1"))
                                             (rule "inEqSimp_subsumption1" (formula "43") (ifseqformula "8"))
                                             (rule "leq_literals" (formula "43") (term "0"))
                                             (builtin "One Step Simplification" (formula "43"))
                                             (rule "true_left" (formula "43"))
                                             (rule "inEqSimp_or_weaken3" (formula "25") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "25") (term "1,0,1,0"))
                                             (rule "add_literals" (formula "25") (term "0,1,0,1,0"))
                                             (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "24")))
                                             (rule "true_left" (formula "25"))
                                             (rule "seqGetAlphaCast" (formula "45") (term "0"))
                                             (rule "castDel" (formula "45") (term "0"))
                                             (builtin "One Step Simplification" (formula "45"))
                                             (rule "true_left" (formula "45"))
                                             (rule "seqGetAlphaCast" (formula "21") (term "0"))
                                             (rule "castDel" (formula "21") (term "0"))
                                             (builtin "One Step Simplification" (formula "21"))
                                             (rule "true_left" (formula "21"))
                                             (rule "seqGetAlphaCast" (formula "47") (term "0"))
                                             (rule "castDel" (formula "47") (term "0"))
                                             (builtin "One Step Simplification" (formula "47"))
                                             (rule "true_left" (formula "47"))
                                             (rule "commute_and" (formula "46") (term "0,0,0"))
                                             (rule "allLeft" (formula "2") (inst "t=Z(0(#))"))
                                             (rule "leq_literals" (formula "2") (term "1,0"))
                                             (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "34")))
                                             (rule "inEqSimp_homoInEq1" (formula "2"))
                                             (rule "times_zero_2" (formula "2") (term "1,0"))
                                             (rule "add_zero_right" (formula "2") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                             (rule "mul_literals" (formula "2") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "9"))
                                             (rule "qeq_literals" (formula "2") (term "0"))
                                             (builtin "One Step Simplification" (formula "2"))
                                             (rule "closeFalse" (formula "2"))
                                          )
                                          (branch "CUT: self.size ≤ 2 + i_2_0 FALSE"
                                             (builtin "One Step Simplification" (formula "33"))
                                             (rule "replace_known_right" (formula "55") (term "1") (ifseqformula "61"))
                                             (builtin "One Step Simplification" (formula "55"))
                                             (rule "applyEqReverse" (formula "54") (term "1") (ifseqformula "55"))
                                             (rule "hideAuxiliaryEq" (formula "55"))
                                             (rule "inEqSimp_leqRight" (formula "60"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                             (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0,0"))
                                             (rule "applyEq" (formula "55") (term "1,0") (ifseqformula "34"))
                                             (builtin "One Step Simplification" (formula "55"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                             (rule "mul_literals" (formula "1") (term "0,1"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                             (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "1"))
                                             (rule "inEqSimp_homoInEq0" (formula "11") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "11") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "11") (term "1,0,0"))
                                             (rule "mul_literals" (formula "11") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "11") (term "0,0"))
                                             (rule "polySimp_addComm1" (formula "11") (term "0,0,0"))
                                             (rule "add_literals" (formula "11") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0"))
                                             (rule "add_literals" (formula "11") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "11") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "11") (term "0,0"))
                                             (rule "qeq_literals" (formula "11") (term "0"))
                                             (builtin "One Step Simplification" (formula "11"))
                                             (rule "true_left" (formula "11"))
                                             (rule "seqGetAlphaCast" (formula "22") (term "0"))
                                             (rule "castDel" (formula "22") (term "0"))
                                             (builtin "One Step Simplification" (formula "22"))
                                             (rule "true_left" (formula "22"))
                                             (rule "commute_or_2" (formula "29") (term "0"))
                                             (rule "allLeft" (formula "4") (inst "t=Z(0(#))"))
                                             (rule "leq_literals" (formula "4") (term "1,0"))
                                             (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "38")))
                                             (rule "inEqSimp_commuteGeq" (formula "4"))
                                             (rule "inEqSimp_contradInEq1" (formula "4") (ifseqformula "2"))
                                             (rule "qeq_literals" (formula "4") (term "0"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "closeFalse" (formula "4"))
                                          )
                                       )
                                    )
                                 )
                              )
                              (branch "(IntNode)self.nodeseq[i_2_0].<created> = TRUE FALSE"
                                 (rule "applyEqReverse" (formula "52") (term "1,1") (ifseqformula "2"))
                                 (rule "hideAuxiliaryEq" (formula "2"))
                                 (rule "eqSymm" (formula "51") (term "1"))
                                 (rule "replace_known_right" (formula "1") (term "0,1,0,0") (ifseqformula "43"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "eqSymm" (formula "1"))
                                 (rule "applyEq" (formula "48") (term "0") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "48"))
                                 (rule "false_right" (formula "48"))
                                 (rule "allLeft" (formula "38") (inst "t=i_2_0"))
                                 (rule "replaceKnownSelect_taclet1011111_14" (formula "38") (term "0,0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet10011011111_23" (formula "38") (term "0,0,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "38") (term "1"))
                                 (rule "polySimp_addComm1" (formula "38") (term "0,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "38") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "38") (term "1,1"))
                                 (rule "mul_literals" (formula "38") (term "0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1"))
                                 (rule "polySimp_elimOne" (formula "38") (term "1,1,1"))
                                 (rule "inEqSimp_contradInEq1" (formula "38") (term "1,0") (ifseqformula "2"))
                                 (rule "qeq_literals" (formula "38") (term "0,1,0"))
                                 (builtin "One Step Simplification" (formula "38"))
                                 (rule "inEqSimp_contradInEq1" (formula "38") (term "1") (ifseqformula "3"))
                                 (rule "inEqSimp_homoInEq1" (formula "38") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "38") (term "1,0,0,1"))
                                 (rule "mul_literals" (formula "38") (term "0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "38") (term "0,0,1"))
                                 (rule "polySimp_addComm1" (formula "38") (term "0,0,0,1"))
                                 (rule "add_literals" (formula "38") (term "0,0,0,0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "38") (term "0,0,1"))
                                 (rule "add_literals" (formula "38") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "38") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "38") (term "0,0,1"))
                                 (rule "leq_literals" (formula "38") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "38"))
                                 (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "38"))
                                 (builtin "One Step Simplification" (formula "51"))
                                 (rule "allRight" (formula "51") (inst "sk=j_1_0"))
                                 (rule "orRight" (formula "51"))
                                 (rule "orRight" (formula "51"))
                                 (rule "orRight" (formula "53"))
                                 (rule "notRight" (formula "53"))
                                 (rule "inEqSimp_geqRight" (formula "53"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0"))
                                 (rule "inEqSimp_leqRight" (formula "53"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                 (rule "polySimp_elimOne" (formula "2") (term "0"))
                                 (rule "allLeft" (formula "21") (inst "t=add(Z(1(#)), i_2_0)"))
                                 (rule "inEqSimp_commuteGeq" (formula "21") (term "1,0,0,0,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "21") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "21") (term "1,0,1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "21") (term "1,0,1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "21") (term "0,1,0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "21") (term "0,1,0,0,0,0,0"))
                                 (rule "add_literals" (formula "21") (term "0,0,1,0,0,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "21") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "21") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "21") (term "0,1,0,0,0,0,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "21") (term "1,0,0,0,0") (ifseqformula "6"))
                                 (rule "inEqSimp_homoInEq1" (formula "21") (term "0,1,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,0,0,0,0"))
                                 (rule "mul_literals" (formula "21") (term "0,1,0,0,1,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "21") (term "0,0,0,1,0,0,0,0"))
                                 (rule "add_literals" (formula "21") (term "0,0,0,0,1,0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,1,0,0,0,0"))
                                 (rule "add_literals" (formula "21") (term "1,1,0,0,1,0,0,0,0"))
                                 (rule "times_zero_1" (formula "21") (term "1,0,0,1,0,0,0,0"))
                                 (rule "add_zero_right" (formula "21") (term "0,0,1,0,0,0,0"))
                                 (rule "leq_literals" (formula "21") (term "0,1,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "21"))
                                 (rule "inEqSimp_contradInEq1" (formula "21") (term "1,0,0,0,0") (ifseqformula "5"))
                                 (rule "qeq_literals" (formula "21") (term "0,1,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "21"))
                                 (rule "allLeft" (formula "43") (inst "t=add(Z(1(#)), i_2_0)"))
                                 (rule "polySimp_addAssoc" (formula "43") (term "1,1,0,0"))
                                 (rule "add_literals" (formula "43") (term "0,1,1,0,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "43") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "43") (term "1,0,1"))
                                 (rule "polySimp_rightDist" (formula "43") (term "1,0,1"))
                                 (rule "mul_literals" (formula "43") (term "0,1,0,1"))
                                 (rule "polySimp_addComm1" (formula "43") (term "0,1"))
                                 (rule "polySimp_addAssoc" (formula "43") (term "0,0,1"))
                                 (rule "add_literals" (formula "43") (term "0,0,0,1"))
                                 (rule "inEqSimp_homoInEq0" (formula "43") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "43") (term "1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "43") (term "1,0,1,0"))
                                 (rule "mul_literals" (formula "43") (term "0,1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "43") (term "0,1,0"))
                                 (rule "add_literals" (formula "43") (term "0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "43") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "43") (term "1,1"))
                                 (rule "mul_literals" (formula "43") (term "0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "43") (term "1,1,1"))
                                 (rule "polySimp_elimOne" (formula "43") (term "1,1,1"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "43") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "43") (term "0,1,0"))
                                 (rule "polySimp_elimOne" (formula "43") (term "0,1,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "43") (term "1,0") (ifseqformula "5"))
                                 (rule "qeq_literals" (formula "43") (term "0,1,0"))
                                 (builtin "One Step Simplification" (formula "43"))
                                 (rule "pullOutSelect" (formula "43") (term "0,0") (inst "selectSK=IntNode_next_3"))
                                 (rule "simplifySelectOfAnon" (formula "43"))
                                 (builtin "One Step Simplification" (formula "43"))
                                 (rule "eqSymm" (formula "44") (term "0"))
                                 (rule "elementOfUnion" (formula "43") (term "0,0,0"))
                                 (rule "elementOfSingleton" (formula "43") (term "0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "43"))
                                 (rule "elementOfInfiniteUnion" (formula "43") (term "0,0,0"))
                                 (builtin "One Step Simplification" (formula "43"))
                                 (rule "elementOfSingleton" (formula "43") (term "1,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "43"))
                                 (rule "allLeft" (formula "25") (inst "t=add(Z(1(#)), i_2_0)"))
                                 (rule "polySimp_addAssoc" (formula "25") (term "1,1,0,0"))
                                 (rule "add_literals" (formula "25") (term "0,1,1,0,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "25") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "25") (term "1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "25") (term "1,0,1,0"))
                                 (rule "mul_literals" (formula "25") (term "0,1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "25") (term "0,1,0"))
                                 (rule "add_literals" (formula "25") (term "0,0,1,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "25") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "25") (term "1,0,1"))
                                 (rule "polySimp_rightDist" (formula "25") (term "1,0,1"))
                                 (rule "mul_literals" (formula "25") (term "0,1,0,1"))
                                 (rule "polySimp_addComm1" (formula "25") (term "0,1"))
                                 (rule "polySimp_addAssoc" (formula "25") (term "0,0,1"))
                                 (rule "add_literals" (formula "25") (term "0,0,0,1"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "25") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "25") (term "0,1,0"))
                                 (rule "polySimp_elimOne" (formula "25") (term "0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "25") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "25") (term "1,1"))
                                 (rule "mul_literals" (formula "25") (term "0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1"))
                                 (rule "polySimp_elimOne" (formula "25") (term "1,1,1"))
                                 (rule "inEqSimp_contradInEq1" (formula "25") (term "1,0") (ifseqformula "5"))
                                 (rule "qeq_literals" (formula "25") (term "0,1,0"))
                                 (builtin "One Step Simplification" (formula "25"))
                                 (rule "allLeft" (formula "18") (inst "t=add(Z(1(#)), i_2_0)"))
                                 (rule "inEqSimp_commuteGeq" (formula "18") (term "1"))
                                 (rule "inEqSimp_homoInEq0" (formula "18") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "18") (term "1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "18") (term "1,0,1,0"))
                                 (rule "mul_literals" (formula "18") (term "0,1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "18") (term "0,1,0"))
                                 (rule "add_literals" (formula "18") (term "0,0,1,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "18") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "18") (term "0,1,0"))
                                 (rule "polySimp_elimOne" (formula "18") (term "0,1,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "18") (term "1") (ifseqformula "6"))
                                 (rule "inEqSimp_homoInEq1" (formula "18") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1"))
                                 (rule "mul_literals" (formula "18") (term "0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "18") (term "0,0,1"))
                                 (rule "polySimp_addComm1" (formula "18") (term "0,0,0,1"))
                                 (rule "add_literals" (formula "18") (term "0,0,0,0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1"))
                                 (rule "add_literals" (formula "18") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "18") (term "1,0,0,1"))
                                 (rule "add_literals" (formula "18") (term "0,0,1"))
                                 (rule "leq_literals" (formula "18") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "18"))
                                 (rule "inEqSimp_contradInEq1" (formula "18") (term "1") (ifseqformula "5"))
                                 (rule "qeq_literals" (formula "18") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "18"))
                                 (rule "allLeft" (formula "27") (inst "t=i_2_0"))
                                 (rule "inEqSimp_homoInEq1" (formula "27") (term "1"))
                                 (rule "polySimp_addComm1" (formula "27") (term "0,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "27") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "27") (term "1,1"))
                                 (rule "mul_literals" (formula "27") (term "0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1"))
                                 (rule "polySimp_elimOne" (formula "27") (term "1,1,1"))
                                 (rule "inEqSimp_contradInEq1" (formula "27") (term "1") (ifseqformula "6"))
                                 (rule "inEqSimp_homoInEq1" (formula "27") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1"))
                                 (rule "mul_literals" (formula "27") (term "0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "27") (term "0,0,1"))
                                 (rule "polySimp_addComm1" (formula "27") (term "0,0,0,1"))
                                 (rule "add_literals" (formula "27") (term "0,0,0,0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,1"))
                                 (rule "add_literals" (formula "27") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "27") (term "1,0,0,1"))
                                 (rule "add_literals" (formula "27") (term "0,0,1"))
                                 (rule "leq_literals" (formula "27") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "27"))
                                 (rule "inEqSimp_contradInEq1" (formula "27") (term "1") (ifseqformula "5"))
                                 (rule "qeq_literals" (formula "27") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "27"))
                                 (rule "allLeft" (formula "23") (inst "t=i_2_0"))
                                 (rule "inEqSimp_commuteGeq" (formula "23") (term "1,0,0,0,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "23") (term "1,0,0,0,0") (ifseqformula "6"))
                                 (rule "inEqSimp_homoInEq1" (formula "23") (term "0,1,0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1,0,0,0,0"))
                                 (rule "add_literals" (formula "23") (term "1,1,0,0,1,0,0,0,0"))
                                 (rule "times_zero_1" (formula "23") (term "1,0,0,1,0,0,0,0"))
                                 (rule "add_zero_right" (formula "23") (term "0,0,1,0,0,0,0"))
                                 (rule "leq_literals" (formula "23") (term "0,1,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "23"))
                                 (rule "inEqSimp_contradInEq1" (formula "23") (term "1,0,0,0,0") (ifseqformula "5"))
                                 (rule "qeq_literals" (formula "23") (term "0,1,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "23"))
                                 (rule "allLeft" (formula "45") (inst "t=add(Z(1(#)), i_2_0)"))
                                 (rule "inEqSimp_commuteGeq" (formula "45") (term "1"))
                                 (rule "inEqSimp_homoInEq0" (formula "45") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "45") (term "1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "45") (term "1,0,1,0"))
                                 (rule "mul_literals" (formula "45") (term "0,1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "45") (term "0,1,0"))
                                 (rule "add_literals" (formula "45") (term "0,0,1,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "45") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "45") (term "0,1,0"))
                                 (rule "polySimp_elimOne" (formula "45") (term "0,1,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "45") (term "1") (ifseqformula "6"))
                                 (rule "inEqSimp_homoInEq1" (formula "45") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "45") (term "1,0,0,1"))
                                 (rule "mul_literals" (formula "45") (term "0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "45") (term "0,0,1"))
                                 (rule "polySimp_addComm1" (formula "45") (term "0,0,0,1"))
                                 (rule "add_literals" (formula "45") (term "0,0,0,0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "45") (term "0,0,1"))
                                 (rule "add_literals" (formula "45") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "45") (term "1,0,0,1"))
                                 (rule "add_literals" (formula "45") (term "0,0,1"))
                                 (rule "leq_literals" (formula "45") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "45"))
                                 (rule "inEqSimp_contradInEq1" (formula "45") (term "1") (ifseqformula "5"))
                                 (rule "qeq_literals" (formula "45") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "45"))
                                 (rule "pullOutSelect" (formula "45") (term "0") (inst "selectSK=IntNode_data_3"))
                                 (rule "simplifySelectOfAnon" (formula "45"))
                                 (builtin "One Step Simplification" (formula "45"))
                                 (rule "eqSymm" (formula "46"))
                                 (rule "applyEqReverse" (formula "45") (term "1") (ifseqformula "46"))
                                 (rule "hideAuxiliaryEq" (formula "46"))
                                 (rule "elementOfUnion" (formula "45") (term "0,0,0"))
                                 (rule "elementOfSingleton" (formula "45") (term "0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "45"))
                                 (rule "elementOfInfiniteUnion" (formula "45") (term "0,0,0"))
                                 (builtin "One Step Simplification" (formula "45"))
                                 (rule "elementOfSingleton" (formula "45") (term "1,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "45"))
                                 (rule "eqSymm" (formula "45") (term "1,0,0,0,0"))
                                 (rule "allLeft" (formula "14") (inst "t=add(Z(1(#)), i_2_0)"))
                                 (rule "inEqSimp_commuteGeq" (formula "14") (term "1"))
                                 (rule "inEqSimp_homoInEq0" (formula "14") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "14") (term "1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "14") (term "1,0,1,0"))
                                 (rule "mul_literals" (formula "14") (term "0,1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "14") (term "0,1,0"))
                                 (rule "add_literals" (formula "14") (term "0,0,1,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "14") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "0,1,0"))
                                 (rule "polySimp_elimOne" (formula "14") (term "0,1,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "14") (term "1") (ifseqformula "6"))
                                 (rule "inEqSimp_homoInEq1" (formula "14") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1"))
                                 (rule "mul_literals" (formula "14") (term "0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "14") (term "0,0,1"))
                                 (rule "polySimp_addComm1" (formula "14") (term "0,0,0,1"))
                                 (rule "add_literals" (formula "14") (term "0,0,0,0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0,1"))
                                 (rule "add_literals" (formula "14") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "14") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "14") (term "0,0,1"))
                                 (rule "leq_literals" (formula "14") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "14"))
                                 (rule "inEqSimp_contradInEq1" (formula "14") (term "1") (ifseqformula "5"))
                                 (rule "qeq_literals" (formula "14") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "14"))
                                 (rule "notLeft" (formula "14"))
                                 (rule "replace_known_right" (formula "45") (term "0,0,1,0,0") (ifseqformula "55"))
                                 (builtin "One Step Simplification" (formula "45"))
                                 (rule "replace_known_right" (formula "48") (term "0,0,0,0") (ifseqformula "55"))
                                 (builtin "One Step Simplification" (formula "48"))
                                 (rule "ifthenelse_negated" (formula "48") (term "0"))
                                 (rule "ifthenelse_split" (formula "44") (term "0"))
                                 (branch "∃ int j; ( (IntNode)self.nodeseq[j] = self.first ∧ j ≥ 0 ∧ j ≤ -1 + self.size) TRUE"
                                    (rule "exLeft" (formula "44") (inst "sk=j_1"))
                                    (rule "andLeft" (formula "44"))
                                    (rule "andLeft" (formula "44"))
                                    (rule "eqSymm" (formula "47"))
                                    (rule "inEqSimp_homoInEq0" (formula "46"))
                                    (rule "polySimp_addComm1" (formula "46") (term "0"))
                                    (rule "applyEq" (formula "60") (term "0") (ifseqformula "47"))
                                    (builtin "One Step Simplification" (formula "60"))
                                    (rule "false_right" (formula "60"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "46"))
                                    (rule "polySimp_mulComm0" (formula "46") (term "1"))
                                    (rule "polySimp_rightDist" (formula "46") (term "1"))
                                    (rule "mul_literals" (formula "46") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "46") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "46") (term "1,1"))
                                    (rule "commute_or_2" (formula "22") (term "0"))
                                    (rule "seqGetAlphaCast" (formula "15") (term "1,1"))
                                    (rule "castedGetAny" (formula "15") (term "0"))
                                    (builtin "One Step Simplification" (formula "15"))
                                    (rule "true_left" (formula "15"))
                                    (rule "seqGetAlphaCast" (formula "15") (term "0"))
                                    (rule "castDel" (formula "15") (term "0"))
                                    (builtin "One Step Simplification" (formula "15"))
                                    (rule "true_left" (formula "15"))
                                    (rule "allLeft" (formula "11") (inst "t=Z(0(#))"))
                                    (rule "leq_literals" (formula "11") (term "1,0"))
                                    (builtin "One Step Simplification" (formula "11"))
                                    (rule "inEqSimp_commuteGeq" (formula "11") (term "1"))
                                    (rule "applyEq" (formula "11") (term "0,0,0") (ifseqformula "18"))
                                    (builtin "One Step Simplification" (formula "11"))
                                    (rule "true_left" (formula "11"))
                                    (rule "allLeft" (formula "19") (inst "t=j_0"))
                                    (rule "inEqSimp_commuteGeq" (formula "19") (term "1"))
                                    (rule "applyEq" (formula "19") (term "1,1,0,0") (ifseqformula "41"))
                                    (rule "inEqSimp_contradInEq1" (formula "19") (term "1,0") (ifseqformula "42"))
                                    (rule "qeq_literals" (formula "19") (term "0,1,0"))
                                    (builtin "One Step Simplification" (formula "19"))
                                    (rule "inEqSimp_contradInEq1" (formula "19") (term "1") (ifseqformula "43"))
                                    (rule "inEqSimp_homoInEq1" (formula "19") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,1"))
                                    (rule "add_literals" (formula "19") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "19") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "19") (term "0,0,1"))
                                    (rule "leq_literals" (formula "19") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "19"))
                                    (rule "allLeft" (formula "12") (inst "t=Z(0(#))"))
                                    (rule "typeEqDerived" (formula "12") (term "0,0,0") (ifseqformula "18"))
                                    (builtin "One Step Simplification" (formula "12"))
                                    (rule "true_left" (formula "12"))
                                    (rule "allLeft" (formula "12") (inst "t=add(Z(neglit(1(#))),
    int::select(heap, self, IntLinkedList::$size))"))
                                    (rule "typeEqDerived" (formula "12") (term "0,0,0") (ifseqformula "17"))
                                    (builtin "One Step Simplification" (formula "12"))
                                    (rule "true_left" (formula "12"))
                                    (rule "allLeft" (formula "12") (inst "t=i_2_0"))
                                    (rule "typeEqDerived" (formula "12") (term "0,0,0") (ifseqformula "16"))
                                    (builtin "One Step Simplification" (formula "12"))
                                    (rule "true_left" (formula "12"))
                                    (rule "allLeft" (formula "11") (inst "t=i_2_0"))
                                    (rule "inEqSimp_commuteGeq" (formula "11") (term "1"))
                                    (rule "applyEq" (formula "11") (term "0,0,0,0") (ifseqformula "16"))
                                    (builtin "One Step Simplification" (formula "11"))
                                    (rule "true_left" (formula "11"))
                                    (rule "allLeft" (formula "11") (inst "t=add(Z(neglit(1(#))),
    int::select(heap, self, IntLinkedList::$size))"))
                                    (rule "inEqSimp_homoInEq0" (formula "11") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "11") (term "1,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "11") (term "1,0,1,0"))
                                    (rule "mul_literals" (formula "11") (term "0,1,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "11") (term "0,1,0"))
                                    (rule "add_literals" (formula "11") (term "0,0,1,0"))
                                    (rule "add_zero_left" (formula "11") (term "0,1,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "11") (term "1"))
                                    (rule "polySimp_mulComm0" (formula "11") (term "1,0,1"))
                                    (rule "polySimp_rightDist" (formula "11") (term "1,0,1"))
                                    (rule "mul_literals" (formula "11") (term "0,1,0,1"))
                                    (rule "polySimp_addAssoc" (formula "11") (term "0,1"))
                                    (rule "polySimp_addComm0" (formula "11") (term "0,0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,1"))
                                    (rule "add_literals" (formula "11") (term "1,1,0,1"))
                                    (rule "times_zero_1" (formula "11") (term "1,0,1"))
                                    (rule "add_literals" (formula "11") (term "0,1"))
                                    (rule "leq_literals" (formula "11") (term "1"))
                                    (builtin "One Step Simplification" (formula "11"))
                                    (rule "applyEq" (formula "11") (term "0,0,0") (ifseqformula "17"))
                                    (builtin "One Step Simplification" (formula "11"))
                                    (rule "true_left" (formula "11"))
                                    (rule "allLeft" (formula "14") (inst "t=j_0"))
                                    (rule "inEqSimp_commuteGeq" (formula "14") (term "1"))
                                    (rule "applyEq" (formula "14") (term "0,0,0,0") (ifseqformula "42"))
                                    (rule "replace_known_right" (formula "14") (term "0,0,0") (ifseqformula "63"))
                                    (builtin "One Step Simplification" (formula "14"))
                                    (rule "true_left" (formula "14"))
                                    (rule "allLeft" (formula "50") (inst "t=j_0"))
                                    (rule "inEqSimp_commuteGeq" (formula "50") (term "1"))
                                    (rule "applyEq" (formula "50") (term "1,0,0,0") (ifseqformula "41"))
                                    (rule "replaceKnownSelect_taclet1011111_16" (formula "50") (term "0,0,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet1011111_17" (formula "50") (term "0,0,0"))
                                    (rule "applyEq" (formula "50") (term "0,0,0") (ifseqformula "44"))
                                    (rule "eqSymm" (formula "50") (term "0,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "50") (term "1") (ifseqformula "43"))
                                    (rule "inEqSimp_homoInEq1" (formula "50") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "50") (term "0,0,1"))
                                    (rule "add_literals" (formula "50") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "50") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "50") (term "0,0,1"))
                                    (rule "leq_literals" (formula "50") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "50"))
                                    (rule "inEqSimp_contradInEq1" (formula "50") (term "1") (ifseqformula "42"))
                                    (rule "qeq_literals" (formula "50") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "50"))
                                    (rule "seqGetAlphaCast" (formula "16") (term "0"))
                                    (rule "castDel" (formula "16") (term "0"))
                                    (builtin "One Step Simplification" (formula "16"))
                                    (rule "true_left" (formula "16"))
                                    (rule "seqGetAlphaCast" (formula "17") (term "0"))
                                    (rule "castDel" (formula "17") (term "0"))
                                    (builtin "One Step Simplification" (formula "17"))
                                    (rule "true_left" (formula "17"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "26") (term "0") (ifseqformula "7"))
                                    (rule "replace_known_left" (formula "26") (term "0") (ifseqformula "27"))
                                    (builtin "One Step Simplification" (formula "26"))
                                    (rule "true_left" (formula "26"))
                                    (rule "seqGetAlphaCast" (formula "41") (term "0"))
                                    (rule "castedGetAny" (formula "41") (term "0"))
                                    (builtin "One Step Simplification" (formula "41"))
                                    (rule "true_left" (formula "41"))
                                    (rule "seqGetAlphaCast" (formula "44") (term "0"))
                                    (rule "castDel" (formula "44") (term "0"))
                                    (builtin "One Step Simplification" (formula "44"))
                                    (rule "true_left" (formula "44"))
                                    (rule "commute_or_2" (formula "24") (term "0"))
                                    (rule "seqGetAlphaCast" (formula "27") (term "0,0"))
                                    (rule "castedGetAny" (formula "27") (term "0"))
                                    (builtin "One Step Simplification" (formula "27"))
                                    (rule "true_left" (formula "27"))
                                    (rule "cut_direct" (formula "27") (term "1"))
                                    (branch "CUT: self.size ≤ 1 TRUE"
                                       (builtin "One Step Simplification" (formula "28"))
                                       (rule "true_left" (formula "28"))
                                       (rule "inEqSimp_antiSymm" (formula "36") (ifseqformula "27"))
                                       (rule "applyEq" (formula "28") (term "0,1") (ifseqformula "36"))
                                       (rule "inEqSimp_homoInEq0" (formula "28") (term "1"))
                                       (rule "mul_literals" (formula "28") (term "1,0,1"))
                                       (rule "polySimp_addComm1" (formula "28") (term "0,1"))
                                       (rule "add_literals" (formula "28") (term "0,0,1"))
                                       (rule "applyEq" (formula "27") (term "0") (ifseqformula "36"))
                                       (rule "leq_literals" (formula "27"))
                                       (rule "true_left" (formula "27"))
                                       (rule "applyEq" (formula "40") (term "1,1,0") (ifseqformula "35"))
                                       (rule "applyEq" (formula "54") (term "0,1") (ifseqformula "35"))
                                       (rule "inEqSimp_homoInEq0" (formula "54") (term "1"))
                                       (rule "mul_literals" (formula "54") (term "1,0,1"))
                                       (rule "polySimp_addComm1" (formula "54") (term "0,1"))
                                       (rule "add_literals" (formula "54") (term "0,0,1"))
                                       (rule "applyEq" (formula "22") (term "1,1,1,0") (ifseqformula "35"))
                                       (rule "add_literals" (formula "22") (term "1,1,0"))
                                       (rule "applyEq" (formula "57") (term "1,1,0,0") (ifseqformula "35"))
                                       (rule "applyEq" (formula "13") (term "1,1,1,0,0,1,0") (ifseqformula "35"))
                                       (rule "add_literals" (formula "13") (term "1,1,0,0,1,0"))
                                       (rule "applyEq" (formula "43") (term "0") (ifseqformula "35"))
                                       (rule "inEqSimp_homoInEq1" (formula "43"))
                                       (rule "mul_literals" (formula "43") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "43") (term "0"))
                                       (rule "add_literals" (formula "43") (term "0,0"))
                                       (rule "add_zero_left" (formula "43") (term "0"))
                                       (rule "applyEq" (formula "20") (term "1,1,0") (ifseqformula "35"))
                                       (rule "applyEq" (formula "25") (term "1,1,0,0,0,0,0") (ifseqformula "35"))
                                       (rule "applyEq" (formula "44") (term "1,1,0") (ifseqformula "35"))
                                       (rule "add_literals" (formula "44") (term "1,0"))
                                       (rule "applyEq" (formula "16") (term "1,1,0") (ifseqformula "35"))
                                       (rule "add_literals" (formula "16") (term "1,0"))
                                       (rule "applyEq" (formula "21") (term "1,1,0") (ifseqformula "35"))
                                       (rule "applyEq" (formula "36") (term "0") (ifseqformula "35"))
                                       (rule "qeq_literals" (formula "36"))
                                       (rule "true_left" (formula "36"))
                                       (rule "applyEq" (formula "46") (term "0") (ifseqformula "35"))
                                       (rule "inEqSimp_homoInEq1" (formula "46"))
                                       (rule "mul_literals" (formula "46") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "46") (term "0"))
                                       (rule "add_literals" (formula "46") (term "0,0"))
                                       (rule "add_zero_left" (formula "46") (term "0"))
                                       (rule "applyEq" (formula "54") (term "1,1,1,0") (ifseqformula "35"))
                                       (rule "add_literals" (formula "54") (term "1,1,0"))
                                       (rule "applyEq" (formula "2") (term "0") (ifseqformula "35"))
                                       (rule "inEqSimp_homoInEq1" (formula "2"))
                                       (rule "mul_literals" (formula "2") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0"))
                                       (rule "add_literals" (formula "2") (term "0,0"))
                                       (rule "add_zero_left" (formula "2") (term "0"))
                                       (rule "applyEq" (formula "48") (term "1,1,1,0,0,0,0,0") (ifseqformula "35"))
                                       (rule "add_literals" (formula "48") (term "1,1,0,0,0,0,0"))
                                       (rule "applyEq" (formula "38") (term "1,1,0") (ifseqformula "35"))
                                       (rule "applyEq" (formula "14") (term "1,1,0") (ifseqformula "35"))
                                       (rule "applyEq" (formula "11") (term "1,1,0") (ifseqformula "35"))
                                       (rule "applyEq" (formula "50") (term "1,1,0") (ifseqformula "35"))
                                       (rule "applyEq" (formula "6") (term "0") (ifseqformula "35"))
                                       (rule "inEqSimp_homoInEq1" (formula "6"))
                                       (rule "mul_literals" (formula "6") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "6") (term "0"))
                                       (rule "add_literals" (formula "6") (term "0,0"))
                                       (rule "applyEq" (formula "25") (term "1,1,0,0,0") (ifseqformula "35"))
                                       (rule "applyEq" (formula "50") (term "1,1,1,0,0,1,1,0,0,0,0,0") (ifseqformula "35"))
                                       (rule "add_literals" (formula "50") (term "1,1,0,0,1,1,0,0,0,0,0"))
                                       (rule "applyEq" (formula "24") (term "1,1,0") (ifseqformula "35"))
                                       (rule "applyEq" (formula "54") (term "1,1,1,0,0,1,1,0,0,0,0,0") (ifseqformula "35"))
                                       (rule "add_literals" (formula "54") (term "1,1,0,0,1,1,0,0,0,0,0"))
                                       (rule "applyEq" (formula "29") (term "1,1,1,0") (ifseqformula "35"))
                                       (rule "add_literals" (formula "29") (term "1,1,0"))
                                       (rule "applyEq" (formula "33") (term "1,1,0") (ifseqformula "35"))
                                       (rule "add_literals" (formula "33") (term "1,0"))
                                       (rule "applyEq" (formula "12") (term "1,1,0") (ifseqformula "35"))
                                       (rule "applyEq" (formula "23") (term "1,1,0") (ifseqformula "35"))
                                       (rule "applyEq" (formula "33") (term "0") (ifseqformula "31"))
                                       (rule "eqSymm" (formula "33"))
                                       (rule "applyEq" (formula "47") (term "0") (ifseqformula "43"))
                                       (rule "applyEq" (formula "17") (term "0") (ifseqformula "16"))
                                       (rule "applyEq" (formula "19") (term "1,1") (ifseqformula "33"))
                                       (rule "applyEq" (formula "62") (term "0") (ifseqformula "33"))
                                       (rule "applyEq" (formula "26") (term "1,0") (ifseqformula "33"))
                                       (rule "applyEq" (formula "32") (term "1,0") (ifseqformula "33"))
                                       (rule "applyEq" (formula "39") (term "1") (ifseqformula "32"))
                                       (rule "applyEq" (formula "16") (term "1,1") (ifseqformula "32"))
                                       (rule "applyEq" (formula "48") (term "1,1") (ifseqformula "32"))
                                       (rule "applyEq" (formula "42") (term "1,1") (ifseqformula "32"))
                                       (rule "applyEq" (formula "22") (term "1,0,0,0,0") (ifseqformula "32"))
                                       (rule "applyEq" (formula "54") (term "1") (ifseqformula "34"))
                                       (rule "applyEq" (formula "33") (term "1") (ifseqformula "34"))
                                       (rule "applyEq" (formula "35") (term "1") (ifseqformula "34"))
                                       (rule "applyEq" (formula "46") (term "1,0") (ifseqformula "32"))
                                       (builtin "One Step Simplification" (formula "46"))
                                       (rule "true_left" (formula "46"))
                                       (rule "applyEq" (formula "17") (term "1,0") (ifseqformula "32"))
                                       (builtin "One Step Simplification" (formula "17"))
                                       (rule "true_left" (formula "17"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "1"))
                                       (rule "mul_literals" (formula "26") (term "1,1"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "50") (term "1"))
                                       (rule "mul_literals" (formula "50") (term "1,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                                       (rule "mul_literals" (formula "6") (term "1"))
                                       (rule "inEqSimp_subsumption1" (formula "26") (term "1") (ifseqformula "5"))
                                       (rule "leq_literals" (formula "26") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "26"))
                                       (rule "true_left" (formula "26"))
                                       (rule "inEqSimp_contradInEq0" (formula "5") (ifseqformula "6"))
                                       (rule "qeq_literals" (formula "5") (term "0"))
                                       (builtin "One Step Simplification" (formula "5"))
                                       (rule "closeFalse" (formula "5"))
                                    )
                                    (branch "CUT: self.size ≤ 1 FALSE"
                                       (builtin "One Step Simplification" (formula "27"))
                                       (rule "inEqSimp_leqRight" (formula "60"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                       (rule "mul_literals" (formula "1") (term "1"))
                                       (rule "inEqSimp_subsumption1" (formula "37") (ifseqformula "1"))
                                       (rule "leq_literals" (formula "37") (term "0"))
                                       (builtin "One Step Simplification" (formula "37"))
                                       (rule "true_left" (formula "37"))
                                       (rule "allLeft" (formula "26") (inst "t=j_0"))
                                       (rule "inEqSimp_commuteGeq" (formula "26") (term "1,0,0,0,0"))
                                       (rule "applyEq" (formula "26") (term "1,0,0,0,0,0,0,0") (ifseqformula "42"))
                                       (rule "inEqSimp_contradInEq1" (formula "26") (term "1,0,0,0,0,0") (ifseqformula "43"))
                                       (rule "qeq_literals" (formula "26") (term "0,1,0,0,0,0,0"))
                                       (builtin "One Step Simplification" (formula "26"))
                                       (rule "inEqSimp_contradInEq1" (formula "26") (term "1,0,0,0,0") (ifseqformula "44"))
                                       (rule "inEqSimp_homoInEq1" (formula "26") (term "0,1,0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,1,0,0,0,0"))
                                       (rule "add_literals" (formula "26") (term "1,1,0,0,1,0,0,0,0"))
                                       (rule "times_zero_1" (formula "26") (term "1,0,0,1,0,0,0,0"))
                                       (rule "add_literals" (formula "26") (term "0,0,1,0,0,0,0"))
                                       (rule "leq_literals" (formula "26") (term "0,1,0,0,0,0"))
                                       (builtin "One Step Simplification" (formula "26"))
                                       (rule "allLeft" (formula "32") (inst "t=j_0"))
                                       (rule "inEqSimp_homoInEq1" (formula "32") (term "1"))
                                       (rule "polySimp_addComm1" (formula "32") (term "0,1"))
                                       (rule "applyEq" (formula "32") (term "1,0,0,0") (ifseqformula "43"))
                                       (rule "eqSymm" (formula "32") (term "0,0"))
                                       (rule "applyEq" (formula "32") (term "1,0,0") (ifseqformula "28"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1"))
                                       (rule "polySimp_mulComm0" (formula "32") (term "1,1"))
                                       (rule "polySimp_rightDist" (formula "32") (term "1,1"))
                                       (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1"))
                                       (rule "mul_literals" (formula "32") (term "0,1,1"))
                                       (rule "polySimp_elimOne" (formula "32") (term "1,1,1"))
                                       (rule "inEqSimp_contradInEq1" (formula "32") (term "1,0") (ifseqformula "44"))
                                       (rule "qeq_literals" (formula "32") (term "0,1,0"))
                                       (builtin "One Step Simplification" (formula "32"))
                                       (rule "allLeft" (formula "57") (inst "t=j_0"))
                                       (rule "inEqSimp_homoInEq1" (formula "57") (term "1"))
                                       (rule "polySimp_addComm1" (formula "57") (term "0,1"))
                                       (rule "applyEq" (formula "57") (term "1,0,0,0") (ifseqformula "43"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "1"))
                                       (rule "polySimp_mulComm0" (formula "57") (term "1,1"))
                                       (rule "polySimp_rightDist" (formula "57") (term "1,1"))
                                       (rule "polySimp_mulLiterals" (formula "57") (term "1,1,1"))
                                       (rule "mul_literals" (formula "57") (term "0,1,1"))
                                       (rule "polySimp_elimOne" (formula "57") (term "1,1,1"))
                                       (rule "inEqSimp_contradInEq1" (formula "57") (term "1,0") (ifseqformula "44"))
                                       (rule "qeq_literals" (formula "57") (term "0,1,0"))
                                       (builtin "One Step Simplification" (formula "57"))
                                       (rule "pullOutSelect" (formula "57") (term "0,0") (inst "selectSK=IntNode_next_4"))
                                       (rule "simplifySelectOfAnon" (formula "57"))
                                       (builtin "One Step Simplification" (formula "57") (ifInst ""  (formula "67")) (ifInst ""  (formula "36")))
                                       (rule "eqSymm" (formula "58") (term "0"))
                                       (rule "applyEq" (formula "57") (term "2,0") (ifseqformula "28"))
                                       (rule "elementOfUnion" (formula "57") (term "0,0"))
                                       (rule "elementOfInfiniteUnion" (formula "57") (term "1,0,0"))
                                       (builtin "One Step Simplification" (formula "57"))
                                       (rule "elementOfSingleton" (formula "57") (term "0,0,0"))
                                       (builtin "One Step Simplification" (formula "57"))
                                       (rule "elementOfSingleton" (formula "57") (term "1,0,0,0"))
                                       (builtin "One Step Simplification" (formula "57"))
                                       (rule "applyEqReverse" (formula "58") (term "1,0") (ifseqformula "57"))
                                       (rule "hideAuxiliaryEq" (formula "57"))
                                       (rule "seqGetAlphaCast" (formula "5") (term "0"))
                                       (rule "castDel" (formula "5") (term "0"))
                                       (builtin "One Step Simplification" (formula "5"))
                                       (rule "true_left" (formula "5"))
                                       (rule "seqGetAlphaCast" (formula "54") (term "1"))
                                       (rule "castedGetAny" (formula "54") (term "0"))
                                       (builtin "One Step Simplification" (formula "54"))
                                       (rule "true_left" (formula "54"))
                                       (rule "seqGetAlphaCast" (formula "4") (term "0"))
                                       (rule "castedGetAny" (formula "4") (term "0"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "true_left" (formula "4"))
                                       (rule "commute_and_2" (formula "51") (term "0,0,0,0"))
                                       (rule "cut_direct" (formula "56") (term "1"))
                                       (branch "CUT: self.size ≤ 2 + i_2_0 TRUE"
                                          (builtin "One Step Simplification" (formula "57"))
                                          (rule "true_left" (formula "57"))
                                          (rule "replace_known_left" (formula "30") (term "1") (ifseqformula "56"))
                                          (builtin "One Step Simplification" (formula "30"))
                                          (rule "true_left" (formula "30"))
                                          (rule "inEqSimp_antiSymm" (formula "7") (ifseqformula "55"))
                                          (rule "applyEq" (formula "53") (term "1,1,1,0,0,1,1,0,0,0,0,0") (ifseqformula "7"))
                                          (rule "polySimp_addAssoc" (formula "53") (term "1,1,0,0,1,1,0,0,0,0,0"))
                                          (rule "add_literals" (formula "53") (term "0,1,1,0,0,1,1,0,0,0,0,0"))
                                          (rule "applyEq" (formula "3") (term "0") (ifseqformula "7"))
                                          (rule "inEqSimp_homoInEq1" (formula "3"))
                                          (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                          (rule "mul_literals" (formula "3") (term "0,1,0"))
                                          (rule "polySimp_addComm1" (formula "3") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                          (rule "add_literals" (formula "3") (term "0,0,0"))
                                          (rule "applyEq" (formula "27") (term "1,1,0,0") (ifseqformula "7"))
                                          (rule "applyEq" (formula "1") (term "0") (ifseqformula "7"))
                                          (rule "inEqSimp_homoInEq1" (formula "1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                          (rule "mul_literals" (formula "1") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "applyEq" (formula "46") (term "1,1,0") (ifseqformula "7"))
                                          (rule "polySimp_addAssoc" (formula "46") (term "1,0"))
                                          (rule "add_literals" (formula "46") (term "0,1,0"))
                                          (rule "applyEq" (formula "57") (term "1,1,1,0,0,1,1,0,0,0,0,0") (ifseqformula "7"))
                                          (rule "polySimp_addAssoc" (formula "57") (term "1,1,0,0,1,1,0,0,0,0,0"))
                                          (rule "add_literals" (formula "57") (term "0,1,1,0,0,1,1,0,0,0,0,0"))
                                          (rule "applyEq" (formula "28") (term "1,1,0,0,0") (ifseqformula "7"))
                                          (rule "applyEq" (formula "13") (term "1,1,0") (ifseqformula "7"))
                                          (rule "applyEq" (formula "42") (term "1,1,0") (ifseqformula "7"))
                                          (rule "applyEq" (formula "18") (term "1,1,0") (ifseqformula "7"))
                                          (rule "polySimp_addAssoc" (formula "18") (term "1,0"))
                                          (rule "add_literals" (formula "18") (term "0,1,0"))
                                          (rule "applyEq" (formula "49") (term "0") (ifseqformula "7"))
                                          (rule "inEqSimp_homoInEq1" (formula "49"))
                                          (rule "polySimp_mulComm0" (formula "49") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "49") (term "1,0"))
                                          (rule "mul_literals" (formula "49") (term "0,1,0"))
                                          (rule "polySimp_addComm1" (formula "49") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "49") (term "0,0"))
                                          (rule "add_literals" (formula "49") (term "0,0,0"))
                                          (rule "applyEq" (formula "14") (term "1,1,0") (ifseqformula "7"))
                                          (rule "applyEq" (formula "24") (term "1,1,1,0") (ifseqformula "7"))
                                          (rule "polySimp_addAssoc" (formula "24") (term "1,1,0"))
                                          (rule "add_literals" (formula "24") (term "0,1,1,0"))
                                          (rule "applyEq" (formula "59") (term "1,1,0,0") (ifseqformula "7"))
                                          (rule "applyEq" (formula "32") (term "0,1") (ifseqformula "7"))
                                          (rule "inEqSimp_homoInEq0" (formula "32") (term "1"))
                                          (rule "polySimp_mulComm0" (formula "32") (term "1,0,1"))
                                          (rule "polySimp_rightDist" (formula "32") (term "1,0,1"))
                                          (rule "mul_literals" (formula "32") (term "0,1,0,1"))
                                          (rule "polySimp_addComm1" (formula "32") (term "0,1"))
                                          (rule "polySimp_addAssoc" (formula "32") (term "0,0,1"))
                                          (rule "add_literals" (formula "32") (term "0,0,0,1"))
                                          (rule "applyEq" (formula "25") (term "1,1,0") (ifseqformula "7"))
                                          (rule "applyEq" (formula "16") (term "1,1,0") (ifseqformula "7"))
                                          (rule "applyEq" (formula "26") (term "1,1,0") (ifseqformula "7"))
                                          (rule "applyEq" (formula "23") (term "1,1,0") (ifseqformula "7"))
                                          (rule "applyEq" (formula "53") (term "1,1,0") (ifseqformula "7"))
                                          (rule "applyEq" (formula "22") (term "1,1,0") (ifseqformula "7"))
                                          (rule "applyEq" (formula "33") (term "1,1,1,0") (ifseqformula "7"))
                                          (rule "polySimp_addAssoc" (formula "33") (term "1,1,0"))
                                          (rule "add_literals" (formula "33") (term "0,1,1,0"))
                                          (rule "applyEq" (formula "41") (term "1,1,0") (ifseqformula "7"))
                                          (rule "applyEq" (formula "8") (term "0") (ifseqformula "7"))
                                          (rule "inEqSimp_homoInEq1" (formula "8"))
                                          (rule "polySimp_pullOutFactor1" (formula "8") (term "0"))
                                          (rule "add_literals" (formula "8") (term "1,0"))
                                          (rule "times_zero_1" (formula "8") (term "0"))
                                          (rule "leq_literals" (formula "8"))
                                          (rule "true_left" (formula "8"))
                                          (rule "applyEq" (formula "36") (term "1,1,0") (ifseqformula "7"))
                                          (rule "polySimp_addAssoc" (formula "36") (term "1,0"))
                                          (rule "add_literals" (formula "36") (term "0,1,0"))
                                          (rule "applyEq" (formula "14") (term "1,1,1,0,0,1,0") (ifseqformula "7"))
                                          (rule "polySimp_addAssoc" (formula "14") (term "1,1,0,0,1,0"))
                                          (rule "add_literals" (formula "14") (term "0,1,1,0,0,1,0"))
                                          (rule "applyEq" (formula "27") (term "1,1,0,0,0,0,0") (ifseqformula "7"))
                                          (rule "applyEq" (formula "44") (term "0") (ifseqformula "7"))
                                          (rule "inEqSimp_homoInEq1" (formula "44"))
                                          (rule "polySimp_mulComm0" (formula "44") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "44") (term "1,0"))
                                          (rule "mul_literals" (formula "44") (term "0,1,0"))
                                          (rule "polySimp_addComm1" (formula "44") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "44") (term "0,0"))
                                          (rule "add_literals" (formula "44") (term "0,0,0"))
                                          (rule "applyEq" (formula "55") (term "0") (ifseqformula "7"))
                                          (rule "inEqSimp_homoInEq0" (formula "55"))
                                          (rule "polySimp_pullOutFactor1" (formula "55") (term "0"))
                                          (rule "add_literals" (formula "55") (term "1,0"))
                                          (rule "times_zero_1" (formula "55") (term "0"))
                                          (rule "qeq_literals" (formula "55"))
                                          (rule "true_left" (formula "55"))
                                          (rule "applyEq" (formula "55") (term "1,1,1,0") (ifseqformula "7"))
                                          (rule "polySimp_addAssoc" (formula "55") (term "1,1,0"))
                                          (rule "add_literals" (formula "55") (term "0,1,1,0"))
                                          (rule "applyEq" (formula "50") (term "1,1,1,0,0,0,0") (ifseqformula "7"))
                                          (rule "polySimp_addAssoc" (formula "50") (term "1,1,0,0,0,0"))
                                          (rule "add_literals" (formula "50") (term "0,1,1,0,0,0,0"))
                                          (rule "applyEq" (formula "50") (term "1,1,0,0,0,0,0") (ifseqformula "36"))
                                          (rule "applyEq" (formula "50") (term "1,2,0") (ifseqformula "36"))
                                          (rule "applyEq" (formula "54") (term "1,2,0") (ifseqformula "36"))
                                          (rule "applyEq" (formula "17") (term "0") (ifseqformula "19"))
                                          (rule "applyEq" (formula "54") (term "1,0,0,0") (ifseqformula "36"))
                                          (rule "replace_known_left" (formula "54") (term "0,0") (ifseqformula "35"))
                                          (builtin "One Step Simplification" (formula "54"))
                                          (rule "hideAuxiliaryEq" (formula "54"))
                                          (rule "applyEq" (formula "30") (term "1") (ifseqformula "36"))
                                          (rule "applyEq" (formula "53") (term "1") (ifseqformula "36"))
                                          (rule "applyEq" (formula "50") (term "1") (ifseqformula "45"))
                                          (rule "applyEq" (formula "59") (term "0") (ifseqformula "36"))
                                          (rule "applyEq" (formula "50") (term "1,0,0,1,0,0") (ifseqformula "36"))
                                          (rule "replace_known_left" (formula "50") (term "0,1,0,0") (ifseqformula "35"))
                                          (builtin "One Step Simplification" (formula "50"))
                                          (rule "applyEq" (formula "24") (term "1,0,0,0,0,0") (ifseqformula "36"))
                                          (rule "applyEq" (formula "19") (term "1,1") (ifseqformula "36"))
                                          (rule "applyEq" (formula "38") (term "1") (ifseqformula "7"))
                                          (rule "applyEq" (formula "55") (term "1") (ifseqformula "7"))
                                          (rule "applyEq" (formula "37") (term "1") (ifseqformula "7"))
                                          (rule "applyEq" (formula "17") (term "1,0") (ifseqformula "36"))
                                          (builtin "One Step Simplification" (formula "17"))
                                          (rule "true_left" (formula "17"))
                                          (rule "applyEq" (formula "49") (term "1,1,0") (ifseqformula "35"))
                                          (builtin "One Step Simplification" (formula "49"))
                                          (rule "eqSymm" (formula "49") (term "1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                          (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                          (rule "polySimp_rightDist" (formula "3") (term "1"))
                                          (rule "mul_literals" (formula "3") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                          (rule "inEqSimp_invertInEq0" (formula "1"))
                                          (rule "times_zero_2" (formula "1") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                          (rule "polySimp_elimOne" (formula "1") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "46"))
                                          (rule "polySimp_mulComm0" (formula "46") (term "1"))
                                          (rule "polySimp_rightDist" (formula "46") (term "1"))
                                          (rule "mul_literals" (formula "46") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "46") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "46") (term "1,1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "1"))
                                          (rule "polySimp_mulComm0" (formula "29") (term "1,1"))
                                          (rule "polySimp_rightDist" (formula "29") (term "1,1"))
                                          (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1"))
                                          (rule "mul_literals" (formula "29") (term "0,1,1"))
                                          (rule "polySimp_elimOne" (formula "29") (term "1,1,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "42"))
                                          (rule "polySimp_mulComm0" (formula "42") (term "1"))
                                          (rule "polySimp_rightDist" (formula "42") (term "1"))
                                          (rule "mul_literals" (formula "42") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "42") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "42") (term "1,1"))
                                          (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                                          (rule "times_zero_1" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                          (rule "mul_literals" (formula "1") (term "1"))
                                          (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "6"))
                                          (rule "leq_literals" (formula "1") (term "0"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "true_left" (formula "1"))
                                          (rule "inEqSimp_exactShadow3" (formula "41") (ifseqformula "42"))
                                          (rule "times_zero_1" (formula "41") (term "0,0"))
                                          (rule "add_zero_left" (formula "41") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "41"))
                                          (rule "mul_literals" (formula "41") (term "1"))
                                          (rule "inEqSimp_subsumption1" (formula "41") (ifseqformula "5"))
                                          (rule "leq_literals" (formula "41") (term "0"))
                                          (builtin "One Step Simplification" (formula "41"))
                                          (rule "true_left" (formula "41"))
                                          (rule "inEqSimp_exactShadow3" (formula "45") (ifseqformula "46"))
                                          (rule "times_zero_1" (formula "45") (term "0,0"))
                                          (rule "add_zero_left" (formula "45") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "45"))
                                          (rule "mul_literals" (formula "45") (term "1"))
                                          (rule "inEqSimp_subsumption1" (formula "45") (ifseqformula "5"))
                                          (rule "leq_literals" (formula "45") (term "0"))
                                          (builtin "One Step Simplification" (formula "45"))
                                          (rule "true_left" (formula "45"))
                                          (rule "inEqSimp_or_weaken3" (formula "22") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "22") (term "1,0,1,0"))
                                          (rule "add_literals" (formula "22") (term "0,1,0,1,0"))
                                          (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "21")))
                                          (rule "true_left" (formula "22"))
                                          (rule "seqGetAlphaCast" (formula "17") (term "0"))
                                          (rule "castDel" (formula "17") (term "0"))
                                          (builtin "One Step Simplification" (formula "17"))
                                          (rule "true_left" (formula "17"))
                                          (rule "seqGetAlphaCast" (formula "43") (term "0"))
                                          (rule "castedGetAny" (formula "43") (term "0"))
                                          (builtin "One Step Simplification" (formula "43"))
                                          (rule "true_left" (formula "43"))
                                          (rule "seqGetAlphaCast" (formula "46") (term "0"))
                                          (rule "castDel" (formula "46") (term "0"))
                                          (builtin "One Step Simplification" (formula "46"))
                                          (rule "true_left" (formula "46"))
                                          (rule "seqGetAlphaCast" (formula "18") (term "0"))
                                          (rule "castDel" (formula "18") (term "0"))
                                          (builtin "One Step Simplification" (formula "18"))
                                          (rule "true_left" (formula "18"))
                                          (rule "commute_and" (formula "47") (term "0,0,0"))
                                          (rule "seqGetAlphaCast" (formula "48") (term "0"))
                                          (rule "castDel" (formula "48") (term "0"))
                                          (builtin "One Step Simplification" (formula "48"))
                                          (rule "true_left" (formula "48"))
                                          (rule "seqGetAlphaCast" (formula "28") (term "0,0"))
                                          (rule "castedGetAny" (formula "28") (term "0"))
                                          (builtin "One Step Simplification" (formula "28"))
                                          (rule "true_left" (formula "28"))
                                          (rule "allLeft" (formula "22") (inst "t=j_1_0"))
                                          (rule "replace_known_right" (formula "22") (term "1,0") (ifseqformula "63"))
                                          (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "3")))
                                          (rule "inEqSimp_contradInEq0" (formula "22") (term "1") (ifseqformula "2"))
                                          (rule "inEqSimp_homoInEq1" (formula "22") (term "0,1"))
                                          (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1"))
                                          (rule "mul_literals" (formula "22") (term "0,1,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "22") (term "0,0,1"))
                                          (rule "polySimp_addComm1" (formula "22") (term "0,0,0,1"))
                                          (rule "add_literals" (formula "22") (term "0,0,0,0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,1"))
                                          (rule "add_literals" (formula "22") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "22") (term "1,0,0,1"))
                                          (rule "add_literals" (formula "22") (term "0,0,1"))
                                          (rule "leq_literals" (formula "22") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "22"))
                                          (rule "inEqSimp_contradInEq1" (formula "22") (ifseqformula "1"))
                                          (rule "qeq_literals" (formula "22") (term "0"))
                                          (builtin "One Step Simplification" (formula "22"))
                                          (rule "closeFalse" (formula "22"))
                                       )
                                       (branch "CUT: self.size ≤ 2 + i_2_0 FALSE"
                                          (builtin "One Step Simplification" (formula "56"))
                                          (rule "applyEqReverse" (formula "55") (term "1") (ifseqformula "56"))
                                          (rule "hideAuxiliaryEq" (formula "56"))
                                          (rule "replace_known_right" (formula "30") (term "1") (ifseqformula "61"))
                                          (builtin "One Step Simplification" (formula "30"))
                                          (rule "inEqSimp_leqRight" (formula "61"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                          (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,0"))
                                          (rule "applyEq" (formula "56") (term "1,0") (ifseqformula "31"))
                                          (builtin "One Step Simplification" (formula "56"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                          (rule "mul_literals" (formula "1") (term "0,1"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                          (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "1"))
                                          (rule "inEqSimp_homoInEq0" (formula "8") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "8") (term "1,0,0"))
                                          (rule "mul_literals" (formula "8") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                                          (rule "polySimp_addComm1" (formula "8") (term "0,0,0"))
                                          (rule "add_literals" (formula "8") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0"))
                                          (rule "add_literals" (formula "8") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "8") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "8") (term "0,0"))
                                          (rule "qeq_literals" (formula "8") (term "0"))
                                          (builtin "One Step Simplification" (formula "8"))
                                          (rule "true_left" (formula "8"))
                                          (rule "commute_or_2" (formula "26") (term "0"))
                                          (rule "seqGetAlphaCast" (formula "19") (term "0"))
                                          (rule "castDel" (formula "19") (term "0"))
                                          (builtin "One Step Simplification" (formula "19"))
                                          (rule "true_left" (formula "19"))
                                          (rule "allLeft" (formula "21") (inst "t=j_1"))
                                          (rule "inEqSimp_commuteGeq" (formula "21") (term "1"))
                                          (rule "applyEq" (formula "21") (term "1,1,0,0") (ifseqformula "48"))
                                          (rule "inEqSimp_contradInEq1" (formula "21") (term "1") (ifseqformula "50"))
                                          (rule "inEqSimp_homoInEq1" (formula "21") (term "0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,1"))
                                          (rule "add_literals" (formula "21") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "21") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "21") (term "0,0,1"))
                                          (rule "leq_literals" (formula "21") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "21"))
                                          (rule "inEqSimp_contradInEq1" (formula "21") (term "1") (ifseqformula "49"))
                                          (rule "qeq_literals" (formula "21") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "21"))
                                          (rule "allLeft" (formula "12") (inst "t=add(Z(1(#)), i_2_0)"))
                                          (rule "inEqSimp_commuteGeq" (formula "12") (term "1"))
                                          (rule "inEqSimp_homoInEq0" (formula "12") (term "1,0"))
                                          (rule "polySimp_mulComm0" (formula "12") (term "1,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "12") (term "1,0,1,0"))
                                          (rule "mul_literals" (formula "12") (term "0,1,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "12") (term "0,1,0"))
                                          (rule "add_literals" (formula "12") (term "0,0,1,0"))
                                          (rule "applyEq" (formula "12") (term "0,0,0,0") (ifseqformula "20"))
                                          (builtin "One Step Simplification" (formula "12"))
                                          (rule "true_left" (formula "12"))
                                          (rule "allLeft" (formula "15") (inst "t=j_1"))
                                          (rule "inEqSimp_commuteGeq" (formula "15") (term "1"))
                                          (rule "applyEq" (formula "15") (term "0,0,0,0") (ifseqformula "49"))
                                          (rule "replace_known_right" (formula "15") (term "0,0,0") (ifseqformula "65"))
                                          (builtin "One Step Simplification" (formula "15"))
                                          (rule "true_left" (formula "15"))
                                          (rule "allLeft" (formula "42") (inst "t=add(Z(1(#)), i_2_0)"))
                                          (rule "inEqSimp_commuteGeq" (formula "42") (term "1"))
                                          (rule "inEqSimp_homoInEq0" (formula "42") (term "1,0"))
                                          (rule "polySimp_mulComm0" (formula "42") (term "1,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "42") (term "1,0,1,0"))
                                          (rule "mul_literals" (formula "42") (term "0,1,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "42") (term "0,1,0"))
                                          (rule "add_literals" (formula "42") (term "0,0,1,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "42") (term "1,0"))
                                          (rule "polySimp_mulLiterals" (formula "42") (term "0,1,0"))
                                          (rule "polySimp_elimOne" (formula "42") (term "0,1,0"))
                                          (rule "inEqSimp_contradInEq1" (formula "42") (term "1,0") (ifseqformula "7"))
                                          (rule "qeq_literals" (formula "42") (term "0,1,0"))
                                          (builtin "One Step Simplification" (formula "42"))
                                          (rule "inEqSimp_contradInEq1" (formula "42") (term "1") (ifseqformula "1"))
                                          (rule "inEqSimp_homoInEq1" (formula "42") (term "0,1"))
                                          (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "42") (term "1,0,0,1"))
                                          (rule "mul_literals" (formula "42") (term "0,1,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "42") (term "0,0,1"))
                                          (rule "polySimp_addComm1" (formula "42") (term "0,0,0,1"))
                                          (rule "add_literals" (formula "42") (term "0,0,0,0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "42") (term "0,0,1"))
                                          (rule "add_literals" (formula "42") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "42") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "42") (term "0,0,1"))
                                          (rule "leq_literals" (formula "42") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "42"))
                                          (rule "notLeft" (formula "42"))
                                          (rule "allLeft" (formula "22") (inst "t=j_1_0"))
                                          (rule "inEqSimp_commuteGeq" (formula "22") (term "1"))
                                          (rule "applyEq" (formula "22") (term "1,1,0,0") (ifseqformula "5"))
                                          (rule "inEqSimp_contradInEq1" (formula "22") (term "1,0") (ifseqformula "3"))
                                          (rule "qeq_literals" (formula "22") (term "0,1,0"))
                                          (builtin "One Step Simplification" (formula "22"))
                                          (rule "inEqSimp_contradInEq1" (formula "22") (term "1") (ifseqformula "4"))
                                          (rule "inEqSimp_homoInEq1" (formula "22") (term "0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,1"))
                                          (rule "add_literals" (formula "22") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "22") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "22") (term "0,0,1"))
                                          (rule "leq_literals" (formula "22") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "22"))
                                          (rule "allLeft" (formula "55") (inst "t=j_1_0"))
                                          (rule "inEqSimp_commuteGeq" (formula "55") (term "1"))
                                          (rule "applyEq" (formula "55") (term "1,0,0,0") (ifseqformula "5"))
                                          (rule "replaceKnownSelect_taclet1011111_15" (formula "55") (term "0,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet11011111_20" (formula "55") (term "0,0,0"))
                                          (rule "eqSymm" (formula "55") (term "0,0"))
                                          (rule "applyEq" (formula "55") (term "1,0,0") (ifseqformula "6"))
                                          (rule "inEqSimp_contradInEq1" (formula "55") (term "1,0") (ifseqformula "3"))
                                          (rule "qeq_literals" (formula "55") (term "0,1,0"))
                                          (builtin "One Step Simplification" (formula "55"))
                                          (rule "inEqSimp_contradInEq1" (formula "55") (term "1") (ifseqformula "4"))
                                          (rule "inEqSimp_homoInEq1" (formula "55") (term "0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "55") (term "0,0,1"))
                                          (rule "add_literals" (formula "55") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "55") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "55") (term "0,0,1"))
                                          (rule "leq_literals" (formula "55") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "55"))
                                          (rule "allLeft" (formula "15") (inst "t=j_1_0"))
                                          (rule "inEqSimp_commuteGeq" (formula "15") (term "1"))
                                          (rule "applyEq" (formula "15") (term "0,0,0,0") (ifseqformula "5"))
                                          (rule "replace_known_right" (formula "15") (term "0,0,0") (ifseqformula "70"))
                                          (builtin "One Step Simplification" (formula "15"))
                                          (rule "true_left" (formula "15"))
                                          (rule "allLeft" (formula "13") (inst "t=add(Z(1(#)), i_2_0)"))
                                          (rule "typeEqDerived" (formula "13") (term "0,0,0") (ifseqformula "20"))
                                          (builtin "One Step Simplification" (formula "13"))
                                          (rule "true_left" (formula "13"))
                                          (rule "allLeft" (formula "44") (inst "t=add(Z(1(#)), i_2_0)"))
                                          (rule "typeEqDerived2" (formula "44") (term "0,0,0") (ifseqformula "54"))
                                          (builtin "One Step Simplification" (formula "44"))
                                          (rule "true_left" (formula "44"))
                                          (rule "allLeft" (formula "56") (inst "t=j_1"))
                                          (rule "inEqSimp_commuteGeq" (formula "56") (term "1"))
                                          (rule "applyEq" (formula "56") (term "1,0,0,0") (ifseqformula "49"))
                                          (rule "replaceKnownSelect_taclet1011111_18" (formula "56") (term "0,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet1011111_19" (formula "56") (term "0,0,0"))
                                          (rule "eqSymm" (formula "56") (term "0,0"))
                                          (rule "applyEq" (formula "56") (term "1,0,0") (ifseqformula "52"))
                                          (rule "inEqSimp_contradInEq1" (formula "56") (term "1") (ifseqformula "51"))
                                          (rule "inEqSimp_homoInEq1" (formula "56") (term "0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "56") (term "0,0,1"))
                                          (rule "add_literals" (formula "56") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "56") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "56") (term "0,0,1"))
                                          (rule "leq_literals" (formula "56") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "56"))
                                          (rule "inEqSimp_contradInEq1" (formula "56") (term "1") (ifseqformula "50"))
                                          (rule "qeq_literals" (formula "56") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "56"))
                                          (rule "seqGetAlphaCast" (formula "53") (term "1"))
                                          (rule "castDel" (formula "53") (term "0"))
                                          (builtin "One Step Simplification" (formula "53"))
                                          (rule "true_left" (formula "53"))
                                          (rule "seqGetAlphaCast" (formula "49") (term "0"))
                                          (rule "castedGetAny" (formula "49") (term "0"))
                                          (builtin "One Step Simplification" (formula "49"))
                                          (rule "true_left" (formula "49"))
                                          (rule "seqGetAlphaCast" (formula "52") (term "0"))
                                          (rule "castDel" (formula "52") (term "0"))
                                          (builtin "One Step Simplification" (formula "52"))
                                          (rule "true_left" (formula "52"))
                                          (rule "commute_and" (formula "53") (term "0,0,0,0,0"))
                                          (rule "allLeft" (formula "24") (inst "t=add(Z(1(#)), i_2_0)"))
                                          (rule "inEqSimp_commuteGeq" (formula "24") (term "1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0"))
                                          (rule "mul_literals" (formula "24") (term "1,1,0"))
                                          (rule "inEqSimp_contradInEq1" (formula "24") (term "1,0") (ifseqformula "7"))
                                          (rule "qeq_literals" (formula "24") (term "0,1,0"))
                                          (builtin "One Step Simplification" (formula "24"))
                                          (rule "inEqSimp_contradInEq1" (formula "24") (term "1") (ifseqformula "1"))
                                          (rule "inEqSimp_homoInEq1" (formula "24") (term "0,1"))
                                          (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1"))
                                          (rule "mul_literals" (formula "24") (term "0,1,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "24") (term "0,0,1"))
                                          (rule "polySimp_addComm1" (formula "24") (term "0,0,0,1"))
                                          (rule "add_literals" (formula "24") (term "0,0,0,0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,1"))
                                          (rule "add_literals" (formula "24") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "24") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "24") (term "0,0,1"))
                                          (rule "leq_literals" (formula "24") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "24"))
                                          (rule "notLeft" (formula "24"))
                                          (rule "allLeft" (formula "24") (inst "t=j_1"))
                                          (rule "replace_known_left" (formula "24") (term "0,0,0") (ifseqformula "50"))
                                          (builtin "One Step Simplification" (formula "24"))
                                          (rule "inEqSimp_commuteGeq" (formula "24") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "24") (term "1") (ifseqformula "52"))
                                          (rule "inEqSimp_homoInEq1" (formula "24") (term "0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,1"))
                                          (rule "add_literals" (formula "24") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "24") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "24") (term "0,0,1"))
                                          (rule "leq_literals" (formula "24") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "24"))
                                          (rule "inEqSimp_antiSymm" (formula "51") (ifseqformula "24"))
                                          (rule "applyEqRigid" (formula "53") (term "1,1") (ifseqformula "51"))
                                          (rule "add_zero_right" (formula "53") (term "1"))
                                          (rule "applyEqRigid" (formula "58") (term "1,0") (ifseqformula "51"))
                                          (rule "applyEqRigid" (formula "24") (term "0") (ifseqformula "51"))
                                          (rule "leq_literals" (formula "24"))
                                          (rule "true_left" (formula "24"))
                                          (rule "applyEqRigid" (formula "49") (term "1,0") (ifseqformula "50"))
                                          (rule "applyEqRigid" (formula "50") (term "0") (ifseqformula "49"))
                                          (rule "qeq_literals" (formula "50"))
                                          (rule "true_left" (formula "50"))
                                          (rule "applyEqRigid" (formula "21") (term "1,0") (ifseqformula "49"))
                                          (rule "inEqSimp_subsumption1" (formula "49") (ifseqformula "2"))
                                          (rule "leq_literals" (formula "49") (term "0"))
                                          (builtin "One Step Simplification" (formula "49"))
                                          (rule "true_left" (formula "49"))
                                          (rule "allLeft" (formula "26") (inst "t=j_1_0"))
                                          (rule "replace_known_left" (formula "26") (term "0,0,0,0") (ifseqformula "5"))
                                          (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "71")))
                                          (rule "inEqSimp_commuteGeq" (formula "26") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "26") (term "0") (ifseqformula "3"))
                                          (rule "qeq_literals" (formula "26") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "26"))
                                          (rule "inEqSimp_contradInEq1" (formula "26") (ifseqformula "4"))
                                          (rule "andLeft" (formula "26"))
                                          (rule "inEqSimp_homoInEq1" (formula "26"))
                                          (rule "polySimp_pullOutFactor1b" (formula "26") (term "0"))
                                          (rule "add_literals" (formula "26") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "26") (term "1,0"))
                                          (rule "add_literals" (formula "26") (term "0"))
                                          (rule "leq_literals" (formula "26"))
                                          (rule "closeFalse" (formula "26"))
                                       )
                                    )
                                 )
                                 (branch "∃ int j; ( (IntNode)self.nodeseq[j] = self.first ∧ j ≥ 0 ∧ j ≤ -1 + self.size) FALSE"
                                    (rule "eqSymm" (formula "44"))
                                    (rule "applyEq" (formula "58") (term "0") (ifseqformula "44"))
                                    (builtin "One Step Simplification" (formula "58"))
                                    (rule "false_right" (formula "58"))
                                    (rule "nnf_ex2all" (formula "55"))
                                    (rule "nnf_notAnd" (formula "1") (term "0"))
                                    (rule "inEqSimp_notLeq" (formula "1") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0"))
                                    (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,0,1,0"))
                                    (rule "add_zero_left" (formula "1") (term "0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1,1,0"))
                                    (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "1") (term "1,0,0"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1,0,0"))
                                    (rule "mul_literals" (formula "1") (term "1,1,0,0"))
                                    (rule "commute_or_2" (formula "23") (term "0"))
                                    (rule "seqGetAlphaCast" (formula "16") (term "0"))
                                    (rule "castDel" (formula "16") (term "0"))
                                    (builtin "One Step Simplification" (formula "16"))
                                    (rule "true_left" (formula "16"))
                                    (rule "seqGetAlphaCast" (formula "16") (term "1,1"))
                                    (rule "castedGetAny" (formula "16") (term "0"))
                                    (builtin "One Step Simplification" (formula "16"))
                                    (rule "true_left" (formula "16"))
                                    (rule "allLeft" (formula "13") (inst "t=Z(0(#))"))
                                    (rule "typeEqDerived" (formula "13") (term "0,0,0") (ifseqformula "19"))
                                    (builtin "One Step Simplification" (formula "13"))
                                    (rule "true_left" (formula "13"))
                                    (rule "allLeft" (formula "12") (inst "t=Z(0(#))"))
                                    (rule "leq_literals" (formula "12") (term "1,0"))
                                    (builtin "One Step Simplification" (formula "12"))
                                    (rule "inEqSimp_commuteGeq" (formula "12") (term "1"))
                                    (rule "applyEq" (formula "12") (term "0,0,0") (ifseqformula "19"))
                                    (builtin "One Step Simplification" (formula "12"))
                                    (rule "true_left" (formula "12"))
                                    (rule "allLeft" (formula "12") (inst "t=i_2_0"))
                                    (rule "inEqSimp_commuteGeq" (formula "12") (term "1"))
                                    (rule "applyEq" (formula "12") (term "0,0,0,0") (ifseqformula "17"))
                                    (builtin "One Step Simplification" (formula "12"))
                                    (rule "true_left" (formula "12"))
                                    (rule "allLeft" (formula "20") (inst "t=j_0"))
                                    (rule "inEqSimp_commuteGeq" (formula "20") (term "1"))
                                    (rule "applyEq" (formula "20") (term "1,1,0,0") (ifseqformula "42"))
                                    (rule "inEqSimp_contradInEq1" (formula "20") (term "1") (ifseqformula "44"))
                                    (rule "inEqSimp_homoInEq1" (formula "20") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,1"))
                                    (rule "add_literals" (formula "20") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "20") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "20") (term "0,0,1"))
                                    (rule "leq_literals" (formula "20") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "20"))
                                    (rule "inEqSimp_contradInEq1" (formula "20") (term "1") (ifseqformula "43"))
                                    (rule "qeq_literals" (formula "20") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "20"))
                                    (rule "allLeft" (formula "13") (inst "t=add(Z(neglit(1(#))),
    int::select(heap, self, IntLinkedList::$size))"))
                                    (rule "typeEqDerived" (formula "13") (term "0,0,0") (ifseqformula "18"))
                                    (builtin "One Step Simplification" (formula "13"))
                                    (rule "true_left" (formula "13"))
                                    (rule "allLeft" (formula "48") (inst "t=j_0"))
                                    (rule "inEqSimp_commuteGeq" (formula "48") (term "1"))
                                    (rule "applyEq" (formula "48") (term "1,0,0,0") (ifseqformula "42"))
                                    (rule "replaceKnownSelect_taclet1011111_16" (formula "48") (term "0,0,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet1011111_17" (formula "48") (term "0,0,0"))
                                    (rule "applyEq" (formula "48") (term "0,0,0") (ifseqformula "45"))
                                    (rule "eqSymm" (formula "48") (term "0,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "48") (term "1,0") (ifseqformula "43"))
                                    (rule "qeq_literals" (formula "48") (term "0,1,0"))
                                    (builtin "One Step Simplification" (formula "48"))
                                    (rule "inEqSimp_contradInEq1" (formula "48") (term "1") (ifseqformula "44"))
                                    (rule "inEqSimp_homoInEq1" (formula "48") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "48") (term "0,0,1"))
                                    (rule "add_literals" (formula "48") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "48") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "48") (term "0,0,1"))
                                    (rule "leq_literals" (formula "48") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "48"))
                                    (rule "allLeft" (formula "12") (inst "t=add(Z(neglit(1(#))),
    int::select(heap, self, IntLinkedList::$size))"))
                                    (rule "inEqSimp_homoInEq0" (formula "12") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "12") (term "1,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "12") (term "1,0,1,0"))
                                    (rule "mul_literals" (formula "12") (term "0,1,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "12") (term "0,1,0"))
                                    (rule "add_literals" (formula "12") (term "0,0,1,0"))
                                    (rule "add_zero_left" (formula "12") (term "0,1,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "12") (term "1"))
                                    (rule "polySimp_mulComm0" (formula "12") (term "1,0,1"))
                                    (rule "polySimp_rightDist" (formula "12") (term "1,0,1"))
                                    (rule "mul_literals" (formula "12") (term "0,1,0,1"))
                                    (rule "polySimp_addAssoc" (formula "12") (term "0,1"))
                                    (rule "polySimp_addComm0" (formula "12") (term "0,0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,1"))
                                    (rule "add_literals" (formula "12") (term "1,1,0,1"))
                                    (rule "times_zero_1" (formula "12") (term "1,0,1"))
                                    (rule "add_literals" (formula "12") (term "0,1"))
                                    (rule "leq_literals" (formula "12") (term "1"))
                                    (builtin "One Step Simplification" (formula "12"))
                                    (rule "applyEq" (formula "12") (term "0,0,0") (ifseqformula "18"))
                                    (builtin "One Step Simplification" (formula "12"))
                                    (rule "true_left" (formula "12"))
                                    (rule "allLeft" (formula "13") (inst "t=i_2_0"))
                                    (rule "typeEqDerived" (formula "13") (term "0,0,0") (ifseqformula "17"))
                                    (builtin "One Step Simplification" (formula "13"))
                                    (rule "true_left" (formula "13"))
                                    (rule "allLeft" (formula "15") (inst "t=j_0"))
                                    (rule "inEqSimp_commuteGeq" (formula "15") (term "1"))
                                    (rule "applyEq" (formula "15") (term "0,0,0,0") (ifseqformula "43"))
                                    (rule "replace_known_right" (formula "15") (term "0,0,0") (ifseqformula "62"))
                                    (builtin "One Step Simplification" (formula "15"))
                                    (rule "true_left" (formula "15"))
                                    (rule "seqGetAlphaCast" (formula "17") (term "0"))
                                    (rule "castDel" (formula "17") (term "0"))
                                    (builtin "One Step Simplification" (formula "17"))
                                    (rule "true_left" (formula "17"))
                                    (rule "seqGetAlphaCast" (formula "18") (term "0"))
                                    (rule "castDel" (formula "18") (term "0"))
                                    (builtin "One Step Simplification" (formula "18"))
                                    (rule "true_left" (formula "18"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "27") (term "0") (ifseqformula "8"))
                                    (rule "replace_known_left" (formula "27") (term "0") (ifseqformula "28"))
                                    (builtin "One Step Simplification" (formula "27"))
                                    (rule "true_left" (formula "27"))
                                    (rule "seqGetAlphaCast" (formula "42") (term "0"))
                                    (rule "castedGetAny" (formula "42") (term "0"))
                                    (builtin "One Step Simplification" (formula "42"))
                                    (rule "true_left" (formula "42"))
                                    (rule "seqGetAlphaCast" (formula "45") (term "0"))
                                    (rule "castDel" (formula "45") (term "0"))
                                    (builtin "One Step Simplification" (formula "45"))
                                    (rule "true_left" (formula "45"))
                                    (rule "commute_or_2" (formula "25") (term "0"))
                                    (rule "seqGetAlphaCast" (formula "28") (term "0,0"))
                                    (rule "castedGetAny" (formula "28") (term "0"))
                                    (builtin "One Step Simplification" (formula "28"))
                                    (rule "true_left" (formula "28"))
                                    (rule "cut_direct" (formula "28") (term "1"))
                                    (branch "CUT: self.size ≤ 1 TRUE"
                                       (builtin "One Step Simplification" (formula "29"))
                                       (rule "true_left" (formula "29"))
                                       (rule "inEqSimp_antiSymm" (formula "37") (ifseqformula "28"))
                                       (rule "applyEq" (formula "48") (term "1,1,1,0,0,0,0,0") (ifseqformula "37"))
                                       (rule "add_literals" (formula "48") (term "1,1,0,0,0,0,0"))
                                       (rule "applyEq" (formula "26") (term "1,1,0,0,0,0,0") (ifseqformula "37"))
                                       (rule "applyEq" (formula "13") (term "1,1,0") (ifseqformula "37"))
                                       (rule "applyEq" (formula "56") (term "1,1,0,0") (ifseqformula "37"))
                                       (rule "applyEq" (formula "50") (term "1,1,0") (ifseqformula "37"))
                                       (rule "applyEq" (formula "53") (term "0,1") (ifseqformula "37"))
                                       (rule "inEqSimp_homoInEq0" (formula "53") (term "1"))
                                       (rule "mul_literals" (formula "53") (term "1,0,1"))
                                       (rule "polySimp_addComm1" (formula "53") (term "0,1"))
                                       (rule "add_literals" (formula "53") (term "0,0,1"))
                                       (rule "applyEq" (formula "42") (term "1,1,0") (ifseqformula "37"))
                                       (rule "applyEq" (formula "45") (term "0") (ifseqformula "37"))
                                       (rule "inEqSimp_homoInEq1" (formula "45"))
                                       (rule "mul_literals" (formula "45") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "45") (term "0"))
                                       (rule "add_literals" (formula "45") (term "0,0"))
                                       (rule "add_zero_left" (formula "45") (term "0"))
                                       (rule "applyEq" (formula "24") (term "1,1,0") (ifseqformula "37"))
                                       (rule "applyEq" (formula "14") (term "1,1,1,0,0,1,0") (ifseqformula "37"))
                                       (rule "add_literals" (formula "14") (term "1,1,0,0,1,0"))
                                       (rule "applyEq" (formula "54") (term "1,1,1,0") (ifseqformula "37"))
                                       (rule "add_literals" (formula "54") (term "1,1,0"))
                                       (rule "applyEq" (formula "46") (term "1,1,0") (ifseqformula "37"))
                                       (rule "add_literals" (formula "46") (term "1,0"))
                                       (rule "applyEq" (formula "50") (term "1,1,1,0,0,1,1,0,0,0,0,0") (ifseqformula "37"))
                                       (rule "add_literals" (formula "50") (term "1,1,0,0,1,1,0,0,0,0,0"))
                                       (rule "applyEq" (formula "12") (term "1,1,0") (ifseqformula "37"))
                                       (rule "applyEq" (formula "21") (term "1,1,0") (ifseqformula "37"))
                                       (rule "applyEq" (formula "26") (term "1,1,0,0,0") (ifseqformula "37"))
                                       (rule "applyEq" (formula "25") (term "1,1,0") (ifseqformula "37"))
                                       (rule "applyEq" (formula "15") (term "1,1,0") (ifseqformula "37"))
                                       (rule "applyEq" (formula "41") (term "1,1,0") (ifseqformula "37"))
                                       (rule "applyEq" (formula "29") (term "0,1") (ifseqformula "37"))
                                       (rule "inEqSimp_homoInEq0" (formula "29") (term "1"))
                                       (rule "mul_literals" (formula "29") (term "1,0,1"))
                                       (rule "polySimp_addComm1" (formula "29") (term "0,1"))
                                       (rule "add_literals" (formula "29") (term "0,0,1"))
                                       (rule "applyEq" (formula "7") (term "0") (ifseqformula "37"))
                                       (rule "inEqSimp_homoInEq1" (formula "7"))
                                       (rule "mul_literals" (formula "7") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "7") (term "0"))
                                       (rule "add_literals" (formula "7") (term "0,0"))
                                       (rule "applyEq" (formula "38") (term "0") (ifseqformula "37"))
                                       (rule "qeq_literals" (formula "38"))
                                       (rule "true_left" (formula "38"))
                                       (rule "applyEq" (formula "31") (term "1,1,1,0") (ifseqformula "37"))
                                       (rule "add_literals" (formula "31") (term "1,1,0"))
                                       (rule "applyEq" (formula "23") (term "1,1,1,0") (ifseqformula "37"))
                                       (rule "add_literals" (formula "23") (term "1,1,0"))
                                       (rule "applyEq" (formula "22") (term "1,1,0") (ifseqformula "37"))
                                       (rule "applyEq" (formula "1") (term "1,1,0") (ifseqformula "37"))
                                       (rule "applyEq" (formula "17") (term "1,1,0") (ifseqformula "37"))
                                       (rule "add_literals" (formula "17") (term "1,0"))
                                       (rule "applyEq" (formula "35") (term "1,1,0") (ifseqformula "37"))
                                       (rule "add_literals" (formula "35") (term "1,0"))
                                       (rule "applyEq" (formula "3") (term "0") (ifseqformula "37"))
                                       (rule "inEqSimp_homoInEq1" (formula "3"))
                                       (rule "mul_literals" (formula "3") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "3") (term "0"))
                                       (rule "add_literals" (formula "3") (term "0,0"))
                                       (rule "add_zero_left" (formula "3") (term "0"))
                                       (rule "applyEq" (formula "53") (term "1,1,1,0,0,1,1,0,0,0,0,0") (ifseqformula "37"))
                                       (rule "add_literals" (formula "53") (term "1,1,0,0,1,1,0,0,0,0,0"))
                                       (rule "applyEq" (formula "28") (term "0") (ifseqformula "37"))
                                       (rule "leq_literals" (formula "28"))
                                       (rule "true_left" (formula "28"))
                                       (rule "applyEq" (formula "32") (term "0") (ifseqformula "34"))
                                       (rule "applyEq" (formula "45") (term "0") (ifseqformula "44"))
                                       (rule "applyEq" (formula "17") (term "0") (ifseqformula "18"))
                                       (rule "eqSymm" (formula "17"))
                                       (rule "applyEq" (formula "33") (term "1,0") (ifseqformula "32"))
                                       (rule "applyEq" (formula "40") (term "1") (ifseqformula "32"))
                                       (rule "applyEq" (formula "33") (term "1") (ifseqformula "32"))
                                       (rule "applyEq" (formula "43") (term "1,1") (ifseqformula "32"))
                                       (rule "applyEq" (formula "59") (term "0") (ifseqformula "32"))
                                       (rule "applyEq" (formula "20") (term "1,1") (ifseqformula "32"))
                                       (rule "applyEq" (formula "23") (term "1,0,0,0,0") (ifseqformula "32"))
                                       (rule "applyEq" (formula "46") (term "1,1") (ifseqformula "32"))
                                       (rule "applyEq" (formula "27") (term "1,0") (ifseqformula "32"))
                                       (rule "applyEq" (formula "52") (term "1") (ifseqformula "35"))
                                       (rule "applyEq" (formula "36") (term "1") (ifseqformula "35"))
                                       (rule "applyEq" (formula "34") (term "1") (ifseqformula "35"))
                                       (rule "applyEq" (formula "44") (term "1,0") (ifseqformula "32"))
                                       (rule "applyEq" (formula "17") (term "1,0") (ifseqformula "32"))
                                       (builtin "One Step Simplification" (formula "17"))
                                       (rule "true_left" (formula "17"))
                                       (rule "applyEq" (formula "42") (term "1") (ifseqformula "43"))
                                       (rule "applyEq" (formula "45") (term "1") (ifseqformula "43"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "49") (term "1"))
                                       (rule "mul_literals" (formula "49") (term "1,1"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "1"))
                                       (rule "mul_literals" (formula "27") (term "1,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "7"))
                                       (rule "mul_literals" (formula "7") (term "1"))
                                       (rule "inEqSimp_contradInEq0" (formula "6") (ifseqformula "7"))
                                       (rule "qeq_literals" (formula "6") (term "0"))
                                       (builtin "One Step Simplification" (formula "6"))
                                       (rule "closeFalse" (formula "6"))
                                    )
                                    (branch "CUT: self.size ≤ 1 FALSE"
                                       (builtin "One Step Simplification" (formula "28"))
                                       (rule "inEqSimp_leqRight" (formula "58"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                       (rule "mul_literals" (formula "1") (term "1"))
                                       (rule "inEqSimp_subsumption1" (formula "38") (ifseqformula "1"))
                                       (rule "leq_literals" (formula "38") (term "0"))
                                       (builtin "One Step Simplification" (formula "38"))
                                       (rule "true_left" (formula "38"))
                                       (rule "allLeft" (formula "27") (inst "t=j_0"))
                                       (rule "inEqSimp_commuteGeq" (formula "27") (term "1,0,0,0,0"))
                                       (rule "applyEq" (formula "27") (term "1,0,0,0,0,0,0,0") (ifseqformula "43"))
                                       (rule "inEqSimp_contradInEq1" (formula "27") (term "1,0,0,0,0") (ifseqformula "45"))
                                       (rule "inEqSimp_homoInEq1" (formula "27") (term "0,1,0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,1,0,0,0,0"))
                                       (rule "add_literals" (formula "27") (term "1,1,0,0,1,0,0,0,0"))
                                       (rule "times_zero_1" (formula "27") (term "1,0,0,1,0,0,0,0"))
                                       (rule "add_literals" (formula "27") (term "0,0,1,0,0,0,0"))
                                       (rule "leq_literals" (formula "27") (term "0,1,0,0,0,0"))
                                       (builtin "One Step Simplification" (formula "27"))
                                       (rule "inEqSimp_contradInEq1" (formula "27") (term "1,0,0,0,0") (ifseqformula "44"))
                                       (rule "qeq_literals" (formula "27") (term "0,1,0,0,0,0"))
                                       (builtin "One Step Simplification" (formula "27"))
                                       (rule "allLeft" (formula "54") (inst "t=j_0"))
                                       (rule "inEqSimp_homoInEq1" (formula "54") (term "1"))
                                       (rule "polySimp_addComm1" (formula "54") (term "0,1"))
                                       (rule "applyEq" (formula "54") (term "1,0,0,0") (ifseqformula "43"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "54") (term "1"))
                                       (rule "polySimp_mulComm0" (formula "54") (term "1,1"))
                                       (rule "polySimp_rightDist" (formula "54") (term "1,1"))
                                       (rule "mul_literals" (formula "54") (term "0,1,1"))
                                       (rule "polySimp_mulLiterals" (formula "54") (term "1,1,1"))
                                       (rule "polySimp_elimOne" (formula "54") (term "1,1,1"))
                                       (rule "inEqSimp_contradInEq1" (formula "54") (term "1,0") (ifseqformula "44"))
                                       (rule "qeq_literals" (formula "54") (term "0,1,0"))
                                       (builtin "One Step Simplification" (formula "54"))
                                       (rule "pullOutSelect" (formula "54") (term "0,0") (inst "selectSK=IntNode_next_4"))
                                       (rule "simplifySelectOfAnon" (formula "54"))
                                       (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "64")) (ifInst ""  (formula "36")))
                                       (rule "eqSymm" (formula "55") (term "0"))
                                       (rule "applyEq" (formula "54") (term "2,0") (ifseqformula "29"))
                                       (rule "elementOfUnion" (formula "54") (term "0,0"))
                                       (rule "elementOfSingleton" (formula "54") (term "0,0,0"))
                                       (builtin "One Step Simplification" (formula "54"))
                                       (rule "elementOfInfiniteUnion" (formula "54") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "54"))
                                       (rule "elementOfSingleton" (formula "54") (term "1,0,0,0"))
                                       (builtin "One Step Simplification" (formula "54"))
                                       (rule "applyEqReverse" (formula "55") (term "1,0") (ifseqformula "54"))
                                       (rule "hideAuxiliaryEq" (formula "54"))
                                       (rule "allLeft" (formula "33") (inst "t=j_0"))
                                       (rule "inEqSimp_homoInEq1" (formula "33") (term "1"))
                                       (rule "polySimp_addComm1" (formula "33") (term "0,1"))
                                       (rule "applyEq" (formula "33") (term "1,0,0,0") (ifseqformula "44"))
                                       (rule "eqSymm" (formula "33") (term "0,0"))
                                       (rule "applyEq" (formula "33") (term "1,0,0") (ifseqformula "29"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1"))
                                       (rule "polySimp_mulComm0" (formula "33") (term "1,1"))
                                       (rule "polySimp_rightDist" (formula "33") (term "1,1"))
                                       (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1"))
                                       (rule "mul_literals" (formula "33") (term "0,1,1"))
                                       (rule "polySimp_elimOne" (formula "33") (term "1,1,1"))
                                       (rule "inEqSimp_contradInEq1" (formula "33") (term "1,0") (ifseqformula "45"))
                                       (rule "qeq_literals" (formula "33") (term "0,1,0"))
                                       (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "55")))
                                       (rule "true_left" (formula "33"))
                                       (rule "seqGetAlphaCast" (formula "6") (term "0"))
                                       (rule "castDel" (formula "6") (term "0"))
                                       (builtin "One Step Simplification" (formula "6"))
                                       (rule "true_left" (formula "6"))
                                       (rule "seqGetAlphaCast" (formula "51") (term "1"))
                                       (rule "castedGetAny" (formula "51") (term "0"))
                                       (builtin "One Step Simplification" (formula "51"))
                                       (rule "true_left" (formula "51"))
                                       (rule "seqGetAlphaCast" (formula "5") (term "0"))
                                       (rule "castedGetAny" (formula "5") (term "0"))
                                       (builtin "One Step Simplification" (formula "5"))
                                       (rule "true_left" (formula "5"))
                                       (rule "commute_and_2" (formula "48") (term "0,0,0,0"))
                                       (rule "cut_direct" (formula "53") (term "1"))
                                       (branch "CUT: self.size ≤ 2 + i_2_0 TRUE"
                                          (builtin "One Step Simplification" (formula "54"))
                                          (rule "true_left" (formula "54"))
                                          (rule "replace_known_left" (formula "31") (term "1") (ifseqformula "53"))
                                          (builtin "One Step Simplification" (formula "31"))
                                          (rule "true_left" (formula "31"))
                                          (rule "inEqSimp_antiSymm" (formula "8") (ifseqformula "52"))
                                          (rule "applyEq" (formula "53") (term "0") (ifseqformula "8"))
                                          (rule "inEqSimp_homoInEq0" (formula "53"))
                                          (rule "polySimp_pullOutFactor1" (formula "53") (term "0"))
                                          (rule "add_literals" (formula "53") (term "1,0"))
                                          (rule "times_zero_1" (formula "53") (term "0"))
                                          (rule "qeq_literals" (formula "53"))
                                          (rule "true_left" (formula "53"))
                                          (rule "applyEq" (formula "17") (term "1,1,0") (ifseqformula "8"))
                                          (rule "applyEq" (formula "50") (term "1,1,0") (ifseqformula "8"))
                                          (rule "applyEq" (formula "24") (term "1,1,0") (ifseqformula "8"))
                                          (rule "applyEq" (formula "14") (term "1,1,0") (ifseqformula "8"))
                                          (rule "applyEq" (formula "16") (term "1,1,1,0,0,1,0") (ifseqformula "8"))
                                          (rule "polySimp_addAssoc" (formula "16") (term "1,1,0,0,1,0"))
                                          (rule "add_literals" (formula "16") (term "0,1,1,0,0,1,0"))
                                          (rule "applyEq" (formula "56") (term "1,1,0,0") (ifseqformula "8"))
                                          (rule "applyEq" (formula "33") (term "1,1,1,0") (ifseqformula "8"))
                                          (rule "polySimp_addAssoc" (formula "33") (term "1,1,0"))
                                          (rule "add_literals" (formula "33") (term "0,1,1,0"))
                                          (rule "applyEq" (formula "23") (term "1,1,0") (ifseqformula "8"))
                                          (rule "applyEq" (formula "1") (term "0") (ifseqformula "8"))
                                          (rule "inEqSimp_homoInEq1" (formula "1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                          (rule "mul_literals" (formula "1") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "applyEq" (formula "46") (term "1,1,0") (ifseqformula "8"))
                                          (rule "polySimp_addAssoc" (formula "46") (term "1,0"))
                                          (rule "add_literals" (formula "46") (term "0,1,0"))
                                          (rule "applyEq" (formula "53") (term "0,1") (ifseqformula "8"))
                                          (rule "inEqSimp_homoInEq0" (formula "53") (term "1"))
                                          (rule "polySimp_mulComm0" (formula "53") (term "1,0,1"))
                                          (rule "polySimp_rightDist" (formula "53") (term "1,0,1"))
                                          (rule "mul_literals" (formula "53") (term "0,1,0,1"))
                                          (rule "polySimp_addComm1" (formula "53") (term "0,1"))
                                          (rule "polySimp_addAssoc" (formula "53") (term "0,0,1"))
                                          (rule "add_literals" (formula "53") (term "0,0,0,1"))
                                          (rule "applyEq" (formula "54") (term "1,1,1,0") (ifseqformula "8"))
                                          (rule "polySimp_addAssoc" (formula "54") (term "1,1,0"))
                                          (rule "add_literals" (formula "54") (term "0,1,1,0"))
                                          (rule "applyEq" (formula "54") (term "1,1,1,0,0,1,1,0,0,0,0,0") (ifseqformula "8"))
                                          (rule "polySimp_addAssoc" (formula "54") (term "1,1,0,0,1,1,0,0,0,0,0"))
                                          (rule "add_literals" (formula "54") (term "0,1,1,0,0,1,1,0,0,0,0,0"))
                                          (rule "applyEq" (formula "48") (term "1,1,1,0,0,0,0") (ifseqformula "8"))
                                          (rule "polySimp_addAssoc" (formula "48") (term "1,1,0,0,0,0"))
                                          (rule "add_literals" (formula "48") (term "0,1,1,0,0,0,0"))
                                          (rule "applyEq" (formula "2") (term "1,1,0") (ifseqformula "8"))
                                          (rule "applyEq" (formula "25") (term "1,1,1,0") (ifseqformula "8"))
                                          (rule "polySimp_addAssoc" (formula "25") (term "1,1,0"))
                                          (rule "add_literals" (formula "25") (term "0,1,1,0"))
                                          (rule "applyEq" (formula "37") (term "1,1,0") (ifseqformula "8"))
                                          (rule "polySimp_addAssoc" (formula "37") (term "1,0"))
                                          (rule "add_literals" (formula "37") (term "0,1,0"))
                                          (rule "applyEq" (formula "27") (term "1,1,0") (ifseqformula "8"))
                                          (rule "applyEq" (formula "50") (term "1,1,1,0,0,1,1,0,0,0,0,0") (ifseqformula "8"))
                                          (rule "polySimp_addAssoc" (formula "50") (term "1,1,0,0,1,1,0,0,0,0,0"))
                                          (rule "add_literals" (formula "50") (term "0,1,1,0,0,1,1,0,0,0,0,0"))
                                          (rule "applyEq" (formula "9") (term "0") (ifseqformula "8"))
                                          (rule "inEqSimp_homoInEq1" (formula "9"))
                                          (rule "polySimp_pullOutFactor1" (formula "9") (term "0"))
                                          (rule "add_literals" (formula "9") (term "1,0"))
                                          (rule "times_zero_1" (formula "9") (term "0"))
                                          (rule "leq_literals" (formula "9"))
                                          (rule "true_left" (formula "9"))
                                          (rule "applyEq" (formula "41") (term "1,1,0") (ifseqformula "8"))
                                          (rule "applyEq" (formula "28") (term "1,1,0,0,0,0,0") (ifseqformula "8"))
                                          (rule "applyEq" (formula "44") (term "0") (ifseqformula "8"))
                                          (rule "inEqSimp_homoInEq1" (formula "44"))
                                          (rule "polySimp_mulComm0" (formula "44") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "44") (term "1,0"))
                                          (rule "mul_literals" (formula "44") (term "0,1,0"))
                                          (rule "polySimp_addComm1" (formula "44") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "44") (term "0,0"))
                                          (rule "add_literals" (formula "44") (term "0,0,0"))
                                          (rule "applyEq" (formula "25") (term "1,1,0") (ifseqformula "8"))
                                          (rule "applyEq" (formula "4") (term "0") (ifseqformula "8"))
                                          (rule "inEqSimp_homoInEq1" (formula "4"))
                                          (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                                          (rule "mul_literals" (formula "4") (term "0,1,0"))
                                          (rule "polySimp_addComm1" (formula "4") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                          (rule "add_literals" (formula "4") (term "0,0,0"))
                                          (rule "applyEq" (formula "27") (term "1,1,0,0") (ifseqformula "8"))
                                          (rule "applyEq" (formula "28") (term "1,1,0,0,0") (ifseqformula "8"))
                                          (rule "applyEq" (formula "40") (term "1,1,0") (ifseqformula "8"))
                                          (rule "applyEq" (formula "18") (term "1,1,0") (ifseqformula "8"))
                                          (rule "polySimp_addAssoc" (formula "18") (term "1,0"))
                                          (rule "add_literals" (formula "18") (term "0,1,0"))
                                          (rule "applyEq" (formula "14") (term "1,1,0") (ifseqformula "8"))
                                          (rule "applyEq" (formula "18") (term "0") (ifseqformula "20"))
                                          (rule "applyEq" (formula "47") (term "1,0,0,1,0,0") (ifseqformula "36"))
                                          (rule "replace_known_left" (formula "47") (term "0,1,0,0") (ifseqformula "35"))
                                          (builtin "One Step Simplification" (formula "47"))
                                          (rule "applyEq" (formula "51") (term "1,1,0") (ifseqformula "36"))
                                          (rule "applyEq" (formula "31") (term "1") (ifseqformula "36"))
                                          (rule "applyEq" (formula "58") (term "0") (ifseqformula "36"))
                                          (rule "applyEq" (formula "51") (term "1,2,0") (ifseqformula "36"))
                                          (rule "applyEq" (formula "50") (term "1") (ifseqformula "36"))
                                          (rule "applyEq" (formula "25") (term "1,0,0,0,0,0") (ifseqformula "36"))
                                          (rule "applyEq" (formula "51") (term "1,0,0,0") (ifseqformula "36"))
                                          (rule "replace_known_left" (formula "51") (term "0,0") (ifseqformula "35"))
                                          (builtin "One Step Simplification" (formula "51"))
                                          (rule "hideAuxiliaryEq" (formula "51"))
                                          (rule "applyEq" (formula "20") (term "1,1") (ifseqformula "36"))
                                          (rule "applyEq" (formula "18") (term "1,0") (ifseqformula "36"))
                                          (builtin "One Step Simplification" (formula "18"))
                                          (rule "true_left" (formula "18"))
                                          (rule "applyEq" (formula "36") (term "1") (ifseqformula "8"))
                                          (rule "applyEq" (formula "37") (term "1") (ifseqformula "8"))
                                          (rule "applyEq" (formula "52") (term "1") (ifseqformula "8"))
                                          (rule "applyEq" (formula "46") (term "1") (ifseqformula "44"))
                                          (rule "applyEq" (formula "46") (term "1,2,0") (ifseqformula "35"))
                                          (rule "applyEq" (formula "46") (term "1,1,0,0,0,0") (ifseqformula "35"))
                                          (rule "applyEq" (formula "46") (term "1,1,0") (ifseqformula "35"))
                                          (builtin "One Step Simplification" (formula "46"))
                                          (rule "eqSymm" (formula "46") (term "1"))
                                          (rule "inEqSimp_invertInEq0" (formula "1"))
                                          (rule "times_zero_2" (formula "1") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                          (rule "polySimp_elimOne" (formula "1") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "49") (term "1"))
                                          (rule "polySimp_mulComm0" (formula "49") (term "1,1"))
                                          (rule "polySimp_rightDist" (formula "49") (term "1,1"))
                                          (rule "mul_literals" (formula "49") (term "0,1,1"))
                                          (rule "polySimp_mulLiterals" (formula "49") (term "1,1,1"))
                                          (rule "polySimp_elimOne" (formula "49") (term "1,1,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "42"))
                                          (rule "polySimp_mulComm0" (formula "42") (term "1"))
                                          (rule "polySimp_rightDist" (formula "42") (term "1"))
                                          (rule "mul_literals" (formula "42") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "42") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "42") (term "1,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                          (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                          (rule "polySimp_rightDist" (formula "3") (term "1"))
                                          (rule "mul_literals" (formula "3") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                          (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "3"))
                                          (rule "mul_literals" (formula "2") (term "0,0"))
                                          (rule "add_zero_left" (formula "2") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                          (rule "mul_literals" (formula "2") (term "1"))
                                          (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "7"))
                                          (rule "leq_literals" (formula "2") (term "0"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "true_left" (formula "2"))
                                          (rule "inEqSimp_exactShadow3" (formula "41") (ifseqformula "42"))
                                          (rule "times_zero_1" (formula "41") (term "0,0"))
                                          (rule "add_zero_left" (formula "41") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "41"))
                                          (rule "mul_literals" (formula "41") (term "1"))
                                          (rule "inEqSimp_subsumption1" (formula "41") (ifseqformula "6"))
                                          (rule "leq_literals" (formula "41") (term "0"))
                                          (builtin "One Step Simplification" (formula "41"))
                                          (rule "true_left" (formula "41"))
                                          (rule "inEqSimp_or_weaken3" (formula "23") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "23") (term "1,0,1,0"))
                                          (rule "add_literals" (formula "23") (term "0,1,0,1,0"))
                                          (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "22")))
                                          (rule "true_left" (formula "23"))
                                          (rule "seqGetAlphaCast" (formula "18") (term "0"))
                                          (rule "castDel" (formula "18") (term "0"))
                                          (builtin "One Step Simplification" (formula "18"))
                                          (rule "true_left" (formula "18"))
                                          (rule "seqGetAlphaCast" (formula "43") (term "0"))
                                          (rule "castDel" (formula "43") (term "0"))
                                          (builtin "One Step Simplification" (formula "43"))
                                          (rule "true_left" (formula "43"))
                                          (rule "seqGetAlphaCast" (formula "19") (term "0"))
                                          (rule "castDel" (formula "19") (term "0"))
                                          (builtin "One Step Simplification" (formula "19"))
                                          (rule "true_left" (formula "19"))
                                          (rule "seqGetAlphaCast" (formula "45") (term "0"))
                                          (rule "castDel" (formula "45") (term "0"))
                                          (builtin "One Step Simplification" (formula "45"))
                                          (rule "true_left" (formula "45"))
                                          (rule "commute_and" (formula "44") (term "0,0,0"))
                                          (rule "allLeft" (formula "1") (inst "t=Z(0(#))"))
                                          (rule "leq_literals" (formula "1") (term "1,0"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "32")))
                                          (rule "inEqSimp_homoInEq1" (formula "1"))
                                          (rule "times_zero_2" (formula "1") (term "1,0"))
                                          (rule "add_zero_right" (formula "1") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                          (rule "mul_literals" (formula "1") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "7"))
                                          (rule "qeq_literals" (formula "1") (term "0"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "closeFalse" (formula "1"))
                                       )
                                       (branch "CUT: self.size ≤ 2 + i_2_0 FALSE"
                                          (builtin "One Step Simplification" (formula "53"))
                                          (rule "applyEqReverse" (formula "52") (term "1") (ifseqformula "53"))
                                          (rule "hideAuxiliaryEq" (formula "53"))
                                          (rule "replace_known_right" (formula "31") (term "1") (ifseqformula "59"))
                                          (builtin "One Step Simplification" (formula "31"))
                                          (rule "inEqSimp_leqRight" (formula "59"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                          (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,0"))
                                          (rule "applyEq" (formula "53") (term "1,0") (ifseqformula "32"))
                                          (builtin "One Step Simplification" (formula "53"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                          (rule "mul_literals" (formula "1") (term "0,1"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                          (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "1"))
                                          (rule "inEqSimp_homoInEq0" (formula "9") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "9") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "9") (term "1,0,0"))
                                          (rule "mul_literals" (formula "9") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
                                          (rule "polySimp_addComm1" (formula "9") (term "0,0,0"))
                                          (rule "add_literals" (formula "9") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0"))
                                          (rule "add_literals" (formula "9") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "9") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "9") (term "0,0"))
                                          (rule "qeq_literals" (formula "9") (term "0"))
                                          (builtin "One Step Simplification" (formula "9"))
                                          (rule "true_left" (formula "9"))
                                          (rule "commute_or_2" (formula "27") (term "0"))
                                          (rule "seqGetAlphaCast" (formula "20") (term "0"))
                                          (rule "castDel" (formula "20") (term "0"))
                                          (builtin "One Step Simplification" (formula "20"))
                                          (rule "true_left" (formula "20"))
                                          (rule "allLeft" (formula "3") (inst "t=Z(0(#))"))
                                          (rule "leq_literals" (formula "3") (term "1,0"))
                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "36")))
                                          (rule "inEqSimp_commuteGeq" (formula "3"))
                                          (rule "inEqSimp_contradInEq1" (formula "3") (ifseqformula "2"))
                                          (rule "qeq_literals" (formula "3") (term "0"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "closeFalse" (formula "3"))
                                       )
                                    )
                                 )
                              )
                           )
                           (branch "∃ int j; ( (IntNode)self.nodeseq[j] = self.last ∧ j ≥ 0 ∧ j ≤ -1 + self.size) FALSE"
                              (rule "eqSymm" (formula "30"))
                              (rule "nnf_ex2all" (formula "38"))
                              (rule "nnf_notAnd" (formula "1") (term "0"))
                              (rule "inEqSimp_notLeq" (formula "1") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0"))
                              (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0"))
                              (rule "add_literals" (formula "1") (term "0,0,0,1,0"))
                              (rule "add_zero_left" (formula "1") (term "0,0,1,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                              (rule "polySimp_elimOne" (formula "1") (term "1,1,0"))
                              (rule "nnf_notAnd" (formula "1") (term "0,0"))
                              (rule "inEqSimp_notGeq" (formula "1") (term "1,0,0"))
                              (rule "times_zero_1" (formula "1") (term "1,0,0,1,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1,0,0"))
                              (rule "mul_literals" (formula "1") (term "1,1,0,0"))
                              (rule "allLeft" (formula "30") (inst "t=add(Z(neglit(1(#))),
    int::select(heap, self, IntLinkedList::$size))"))
                              (rule "typeEqDerived" (formula "30") (term "0,0,0") (ifseqformula "32"))
                              (builtin "One Step Simplification" (formula "30"))
                              (rule "true_left" (formula "30"))
                              (rule "allLeft" (formula "29") (inst "t=Z(0(#))"))
                              (rule "leq_literals" (formula "29") (term "1,0"))
                              (builtin "One Step Simplification" (formula "29"))
                              (rule "inEqSimp_commuteGeq" (formula "29") (term "1"))
                              (rule "inEqSimp_contradInEq1" (formula "29") (term "1") (ifseqformula "26"))
                              (rule "qeq_literals" (formula "29") (term "0,1"))
                              (builtin "One Step Simplification" (formula "29"))
                              (rule "notLeft" (formula "29"))
                              (rule "allLeft" (formula "29") (inst "t=add(Z(neglit(1(#))),
    int::select(heap, self, IntLinkedList::$size))"))
                              (rule "inEqSimp_homoInEq0" (formula "29") (term "1,0"))
                              (rule "polySimp_mulComm0" (formula "29") (term "1,0,1,0"))
                              (rule "polySimp_rightDist" (formula "29") (term "1,0,1,0"))
                              (rule "mul_literals" (formula "29") (term "0,1,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "29") (term "0,1,0"))
                              (rule "add_literals" (formula "29") (term "0,0,1,0"))
                              (rule "add_zero_left" (formula "29") (term "0,1,0"))
                              (rule "inEqSimp_homoInEq1" (formula "29") (term "1"))
                              (rule "polySimp_mulComm0" (formula "29") (term "1,0,1"))
                              (rule "polySimp_rightDist" (formula "29") (term "1,0,1"))
                              (rule "mul_literals" (formula "29") (term "0,1,0,1"))
                              (rule "polySimp_addAssoc" (formula "29") (term "0,1"))
                              (rule "polySimp_addComm0" (formula "29") (term "0,0,1"))
                              (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,1"))
                              (rule "add_literals" (formula "29") (term "1,1,0,1"))
                              (rule "times_zero_1" (formula "29") (term "1,0,1"))
                              (rule "add_zero_right" (formula "29") (term "0,1"))
                              (rule "leq_literals" (formula "29") (term "1"))
                              (builtin "One Step Simplification" (formula "29"))
                              (rule "applyEq" (formula "29") (term "0,0,0") (ifseqformula "32"))
                              (builtin "One Step Simplification" (formula "29"))
                              (rule "true_left" (formula "29"))
                              (rule "allLeft" (formula "30") (inst "t=Z(0(#))"))
                              (rule "typeEqDerived2" (formula "30") (term "0,0,0") (ifseqformula "33"))
                              (builtin "One Step Simplification" (formula "30"))
                              (rule "true_left" (formula "30"))
                              (rule "allLeft" (formula "20") (inst "t=Z(0(#))"))
                              (rule "leq_literals" (formula "20") (term "1,0"))
                              (builtin "One Step Simplification" (formula "20"))
                              (rule "add_zero_right" (formula "20") (term "1,1,0"))
                              (rule "inEqSimp_homoInEq1" (formula "20") (term "1"))
                              (rule "mul_literals" (formula "20") (term "1,0,1"))
                              (rule "add_zero_right" (formula "20") (term "0,1"))
                              (rule "applyEq" (formula "20") (term "1,0,0") (ifseqformula "23"))
                              (rule "eqSymm" (formula "20") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1"))
                              (rule "mul_literals" (formula "20") (term "1,1"))
                              (rule "allLeft" (formula "35") (inst "t=Z(0(#))"))
                              (rule "add_zero_right" (formula "35") (term "1,1,0,0"))
                              (rule "leq_literals" (formula "35") (term "1,0"))
                              (builtin "One Step Simplification" (formula "35"))
                              (rule "inEqSimp_homoInEq1" (formula "35") (term "1"))
                              (rule "times_zero_2" (formula "35") (term "1,0,1"))
                              (rule "add_zero_right" (formula "35") (term "0,1"))
                              (rule "applyEq" (formula "35") (term "1,0,0") (ifseqformula "23"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1"))
                              (rule "mul_literals" (formula "35") (term "1,1"))
                              (rule "pullOutSelect" (formula "35") (term "0,0") (inst "selectSK=IntNode_next_2"))
                              (rule "simplifySelectOfAnon" (formula "35"))
                              (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "43")) (ifInst ""  (formula "22")))
                              (rule "eqSymm" (formula "36") (term "0"))
                              (rule "elementOfUnion" (formula "35") (term "0,0"))
                              (rule "elementOfInfiniteUnion" (formula "35") (term "1,0,0"))
                              (builtin "One Step Simplification" (formula "35"))
                              (rule "elementOfSingleton" (formula "35") (term "0,0,0"))
                              (builtin "One Step Simplification" (formula "35"))
                              (rule "elementOfSingleton" (formula "35") (term "1,0,0,0"))
                              (builtin "One Step Simplification" (formula "35"))
                              (rule "applyEqReverse" (formula "36") (term "1,0") (ifseqformula "35"))
                              (rule "hideAuxiliaryEq" (formula "35"))
                              (rule "allLeft" (formula "18") (inst "t=Z(0(#))"))
                              (rule "leq_literals" (formula "18") (term "1,0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "18"))
                              (rule "inEqSimp_commuteGeq" (formula "18") (term "1,0,0,0,0"))
                              (rule "applyEq" (formula "18") (term "1,0,0,0,0,0,0") (ifseqformula "24"))
                              (rule "inEqSimp_contradInEq1" (formula "18") (term "1,0,0,0,0") (ifseqformula "28"))
                              (rule "qeq_literals" (formula "18") (term "0,1,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "18"))
                              (rule "commute_or_2" (formula "18") (term "0"))
                              (rule "inEqSimp_or_weaken2" (formula "18") (term "0,0"))
                              (rule "add_literals" (formula "18") (term "1,0,1,0,0"))
                              (builtin "One Step Simplification" (formula "18"))
                              (rule "allLeft" (formula "19") (inst "t=add(Z(neglit(1(#))),
    int::select(heap, self, IntLinkedList::$size))"))
                              (rule "inEqSimp_homoInEq1" (formula "19") (term "1,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "19") (term "1,0,1,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "19") (term "1,0,1,0,0,0,0"))
                              (rule "mul_literals" (formula "19") (term "0,1,0,1,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "19") (term "0,1,0,0,0,0"))
                              (rule "polySimp_addComm0" (formula "19") (term "0,0,1,0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,1,0,0,0,0"))
                              (rule "add_literals" (formula "19") (term "1,1,0,1,0,0,0,0"))
                              (rule "times_zero_1" (formula "19") (term "1,0,1,0,0,0,0"))
                              (rule "add_zero_right" (formula "19") (term "0,1,0,0,0,0"))
                              (rule "leq_literals" (formula "19") (term "1,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "19"))
                              (rule "inEqSimp_homoInEq0" (formula "19") (term "1,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "19") (term "1,0,1,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "19") (term "1,0,1,0,0,0,0"))
                              (rule "mul_literals" (formula "19") (term "0,1,0,1,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "19") (term "0,1,0,0,0,0"))
                              (rule "add_literals" (formula "19") (term "0,0,1,0,0,0,0"))
                              (rule "add_zero_left" (formula "19") (term "0,1,0,0,0,0"))
                              (rule "applyEq" (formula "19") (term "1,0,0,0,0,0,0") (ifseqformula "27"))
                              (rule "inEqSimp_invertInEq1" (formula "19") (term "1,0,0,0,0"))
                              (rule "times_zero_2" (formula "19") (term "1,1,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "19") (term "0,1,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "19") (term "0,1,0,0,0,0"))
                              (rule "inEqSimp_contradInEq1" (formula "19") (term "1,0,0,0,0") (ifseqformula "29"))
                              (rule "qeq_literals" (formula "19") (term "0,1,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "19"))
                              (rule "commute_or_2" (formula "19") (term "0"))
                              (rule "inEqSimp_or_weaken3" (formula "19") (term "0"))
                              (rule "polySimp_addAssoc" (formula "19") (term "1,0,1,0"))
                              (rule "add_literals" (formula "19") (term "0,1,0,1,0"))
                              (rule "add_zero_left" (formula "19") (term "1,0,1,0"))
                              (builtin "One Step Simplification" (formula "19"))
                              (rule "ifthenelse_split" (formula "3") (term "0"))
                              (branch "(IntNode)self.nodeseq[i_2_0].<created> = TRUE TRUE"
                                 (rule "applyEqReverse" (formula "50") (term "1,1") (ifseqformula "4"))
                                 (rule "hideAuxiliaryEq" (formula "4"))
                                 (rule "eqSymm" (formula "49") (term "1"))
                                 (rule "replace_known_left" (formula "2") (term "0,1,0,0") (ifseqformula "3"))
                                 (builtin "One Step Simplification" (formula "2"))
                                 (rule "allLeft" (formula "17") (inst "t=add(Z(1(#)), i_2_0)"))
                                 (rule "inEqSimp_commuteGeq" (formula "17") (term "1"))
                                 (rule "inEqSimp_homoInEq0" (formula "17") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "17") (term "1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "17") (term "1,0,1,0"))
                                 (rule "mul_literals" (formula "17") (term "0,1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "17") (term "0,1,0"))
                                 (rule "add_literals" (formula "17") (term "0,0,1,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "17") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "17") (term "0,1,0"))
                                 (rule "polySimp_elimOne" (formula "17") (term "0,1,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "17") (term "1") (ifseqformula "5"))
                                 (rule "inEqSimp_homoInEq1" (formula "17") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1"))
                                 (rule "mul_literals" (formula "17") (term "0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "17") (term "0,0,1"))
                                 (rule "polySimp_addComm1" (formula "17") (term "0,0,0,1"))
                                 (rule "add_literals" (formula "17") (term "0,0,0,0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,1"))
                                 (rule "add_literals" (formula "17") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "17") (term "1,0,0,1"))
                                 (rule "add_literals" (formula "17") (term "0,0,1"))
                                 (rule "leq_literals" (formula "17") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "17"))
                                 (rule "inEqSimp_contradInEq1" (formula "17") (term "1") (ifseqformula "4"))
                                 (rule "qeq_literals" (formula "17") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "17"))
                                 (rule "allLeft" (formula "37") (inst "t=add(Z(1(#)), i_2_0)"))
                                 (rule "inEqSimp_commuteGeq" (formula "37") (term "1"))
                                 (rule "inEqSimp_homoInEq0" (formula "37") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "37") (term "1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "37") (term "1,0,1,0"))
                                 (rule "mul_literals" (formula "37") (term "0,1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "37") (term "0,1,0"))
                                 (rule "add_literals" (formula "37") (term "0,0,1,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "37") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "37") (term "0,1,0"))
                                 (rule "polySimp_elimOne" (formula "37") (term "0,1,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "37") (term "1,0") (ifseqformula "4"))
                                 (rule "qeq_literals" (formula "37") (term "0,1,0"))
                                 (builtin "One Step Simplification" (formula "37"))
                                 (rule "inEqSimp_contradInEq1" (formula "37") (term "1") (ifseqformula "5"))
                                 (rule "inEqSimp_homoInEq1" (formula "37") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "37") (term "1,0,0,1"))
                                 (rule "mul_literals" (formula "37") (term "0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "37") (term "0,0,1"))
                                 (rule "polySimp_addComm1" (formula "37") (term "0,0,0,1"))
                                 (rule "add_literals" (formula "37") (term "0,0,0,0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "37") (term "0,0,1"))
                                 (rule "add_literals" (formula "37") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "37") (term "1,0,0,1"))
                                 (rule "add_literals" (formula "37") (term "0,0,1"))
                                 (rule "leq_literals" (formula "37") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "37"))
                                 (rule "pullOutSelect" (formula "37") (term "0") (inst "selectSK=IntNode_data_3"))
                                 (rule "simplifySelectOfAnon" (formula "37"))
                                 (builtin "One Step Simplification" (formula "37"))
                                 (rule "eqSymm" (formula "38"))
                                 (rule "applyEqReverse" (formula "37") (term "1") (ifseqformula "38"))
                                 (rule "hideAuxiliaryEq" (formula "38"))
                                 (rule "elementOfUnion" (formula "37") (term "0,0,0"))
                                 (rule "elementOfSingleton" (formula "37") (term "0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "37"))
                                 (rule "elementOfInfiniteUnion" (formula "37") (term "0,0,0"))
                                 (builtin "One Step Simplification" (formula "37"))
                                 (rule "elementOfSingleton" (formula "37") (term "1,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "37"))
                                 (rule "eqSymm" (formula "37") (term "1,0,0,0,0"))
                                 (rule "allLeft" (formula "13") (inst "t=add(Z(1(#)), i_2_0)"))
                                 (rule "inEqSimp_commuteGeq" (formula "13") (term "1"))
                                 (rule "inEqSimp_homoInEq0" (formula "13") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "13") (term "1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "13") (term "1,0,1,0"))
                                 (rule "mul_literals" (formula "13") (term "0,1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "13") (term "0,1,0"))
                                 (rule "add_literals" (formula "13") (term "0,0,1,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "13") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "0,1,0"))
                                 (rule "polySimp_elimOne" (formula "13") (term "0,1,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "13") (term "1") (ifseqformula "5"))
                                 (rule "inEqSimp_homoInEq1" (formula "13") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1"))
                                 (rule "mul_literals" (formula "13") (term "0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "13") (term "0,0,1"))
                                 (rule "polySimp_addComm1" (formula "13") (term "0,0,0,1"))
                                 (rule "add_literals" (formula "13") (term "0,0,0,0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0,1"))
                                 (rule "add_literals" (formula "13") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "13") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "13") (term "0,0,1"))
                                 (rule "leq_literals" (formula "13") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "13"))
                                 (rule "inEqSimp_contradInEq1" (formula "13") (term "1") (ifseqformula "4"))
                                 (rule "qeq_literals" (formula "13") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "13"))
                                 (rule "notLeft" (formula "13"))
                                 (rule "replace_known_right" (formula "37") (term "0,0,1,0,0") (ifseqformula "44"))
                                 (builtin "One Step Simplification" (formula "37"))
                                 (rule "allLeft" (formula "39") (inst "t=add(Z(1(#)), i_2_0)"))
                                 (rule "polySimp_addAssoc" (formula "39") (term "1,1,0,0"))
                                 (rule "add_literals" (formula "39") (term "0,1,1,0,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "39") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "39") (term "1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "39") (term "1,0,1,0"))
                                 (rule "mul_literals" (formula "39") (term "0,1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "39") (term "0,1,0"))
                                 (rule "add_literals" (formula "39") (term "0,0,1,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "39") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "39") (term "1,0,1"))
                                 (rule "polySimp_rightDist" (formula "39") (term "1,0,1"))
                                 (rule "mul_literals" (formula "39") (term "0,1,0,1"))
                                 (rule "polySimp_addComm1" (formula "39") (term "0,1"))
                                 (rule "polySimp_addAssoc" (formula "39") (term "0,0,1"))
                                 (rule "add_literals" (formula "39") (term "0,0,0,1"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "39") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "39") (term "0,1,0"))
                                 (rule "polySimp_elimOne" (formula "39") (term "0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "39") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "39") (term "1,1"))
                                 (rule "mul_literals" (formula "39") (term "0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1"))
                                 (rule "polySimp_elimOne" (formula "39") (term "1,1,1"))
                                 (rule "inEqSimp_contradInEq1" (formula "39") (term "1,0") (ifseqformula "4"))
                                 (rule "qeq_literals" (formula "39") (term "0,1,0"))
                                 (builtin "One Step Simplification" (formula "39"))
                                 (rule "pullOutSelect" (formula "39") (term "0,0") (inst "selectSK=IntNode_next_3"))
                                 (rule "simplifySelectOfAnon" (formula "39"))
                                 (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "46")))
                                 (rule "eqSymm" (formula "40") (term "0"))
                                 (rule "elementOfUnion" (formula "39") (term "0,0,0"))
                                 (rule "elementOfInfiniteUnion" (formula "39") (term "1,0,0,0"))
                                 (builtin "One Step Simplification" (formula "39"))
                                 (rule "elementOfSingleton" (formula "39") (term "0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "39"))
                                 (rule "elementOfSingleton" (formula "39") (term "1,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "39"))
                                 (rule "ifthenelse_negated" (formula "39") (term "0"))
                                 (rule "allLeft" (formula "21") (inst "t=i_2_0"))
                                 (rule "inEqSimp_commuteGeq" (formula "21") (term "1,0,0,0,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "21") (term "1,0,0,0,0,0") (ifseqformula "4"))
                                 (rule "qeq_literals" (formula "21") (term "0,1,0,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "21"))
                                 (rule "inEqSimp_contradInEq1" (formula "21") (term "1,0,0,0,0") (ifseqformula "5"))
                                 (rule "inEqSimp_homoInEq1" (formula "21") (term "0,1,0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,1,0,0,0,0"))
                                 (rule "add_literals" (formula "21") (term "1,1,0,0,1,0,0,0,0"))
                                 (rule "times_zero_1" (formula "21") (term "1,0,0,1,0,0,0,0"))
                                 (rule "add_literals" (formula "21") (term "0,0,1,0,0,0,0"))
                                 (rule "leq_literals" (formula "21") (term "0,1,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "21"))
                                 (rule "allLeft" (formula "42") (inst "t=i_2_0"))
                                 (rule "replaceKnownSelect_taclet1011111_14" (formula "42") (term "0,0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet01011011111_23" (formula "42") (term "0,0,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "42") (term "1"))
                                 (rule "polySimp_addComm1" (formula "42") (term "0,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "42") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "42") (term "1,1"))
                                 (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1"))
                                 (rule "mul_literals" (formula "42") (term "0,1,1"))
                                 (rule "polySimp_elimOne" (formula "42") (term "1,1,1"))
                                 (rule "inEqSimp_contradInEq1" (formula "42") (term "1,0") (ifseqformula "4"))
                                 (rule "qeq_literals" (formula "42") (term "0,1,0"))
                                 (builtin "One Step Simplification" (formula "42"))
                                 (rule "inEqSimp_contradInEq1" (formula "42") (term "1") (ifseqformula "5"))
                                 (rule "inEqSimp_homoInEq1" (formula "42") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "42") (term "1,0,0,1"))
                                 (rule "mul_literals" (formula "42") (term "0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "42") (term "0,0,1"))
                                 (rule "polySimp_addComm1" (formula "42") (term "0,0,0,1"))
                                 (rule "add_literals" (formula "42") (term "0,0,0,0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "42") (term "0,0,1"))
                                 (rule "add_literals" (formula "42") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "42") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "42") (term "0,0,1"))
                                 (rule "leq_literals" (formula "42") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "42"))
                                 (rule "replace_known_left" (formula "56") (term "1") (ifseqformula "42"))
                                 (builtin "One Step Simplification" (formula "56"))
                                 (rule "allRight" (formula "56") (inst "sk=j_1_0"))
                                 (rule "orRight" (formula "56"))
                                 (rule "orRight" (formula "56"))
                                 (rule "orRight" (formula "58"))
                                 (rule "notRight" (formula "58"))
                                 (rule "inEqSimp_geqRight" (formula "58"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0"))
                                 (rule "inEqSimp_leqRight" (formula "58"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                 (rule "polySimp_elimOne" (formula "2") (term "0"))
                                 (rule "allLeft" (formula "25") (inst "t=add(Z(1(#)), i_2_0)"))
                                 (rule "inEqSimp_commuteGeq" (formula "25") (term "1,0,0,0,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "25") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "25") (term "1,0,1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "25") (term "1,0,1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "25") (term "0,1,0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "25") (term "0,1,0,0,0,0,0"))
                                 (rule "add_literals" (formula "25") (term "0,0,1,0,0,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "25") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "25") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "25") (term "0,1,0,0,0,0,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "25") (term "1,0,0,0,0") (ifseqformula "8"))
                                 (rule "inEqSimp_homoInEq1" (formula "25") (term "0,1,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,0,0,0"))
                                 (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "25") (term "0,0,0,1,0,0,0,0"))
                                 (rule "add_literals" (formula "25") (term "0,0,0,0,1,0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,1,0,0,0,0"))
                                 (rule "add_literals" (formula "25") (term "1,1,0,0,1,0,0,0,0"))
                                 (rule "times_zero_1" (formula "25") (term "1,0,0,1,0,0,0,0"))
                                 (rule "add_literals" (formula "25") (term "0,0,1,0,0,0,0"))
                                 (rule "leq_literals" (formula "25") (term "0,1,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "25"))
                                 (rule "inEqSimp_contradInEq1" (formula "25") (term "1,0,0,0,0") (ifseqformula "7"))
                                 (rule "qeq_literals" (formula "25") (term "0,1,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "25"))
                                 (rule "allLeft" (formula "29") (inst "t=add(Z(1(#)), i_2_0)"))
                                 (rule "polySimp_addAssoc" (formula "29") (term "1,1,0,0"))
                                 (rule "add_literals" (formula "29") (term "0,1,1,0,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "29") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "29") (term "1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "29") (term "1,0,1,0"))
                                 (rule "mul_literals" (formula "29") (term "0,1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "29") (term "0,1,0"))
                                 (rule "add_literals" (formula "29") (term "0,0,1,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "29") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "29") (term "1,0,1"))
                                 (rule "polySimp_rightDist" (formula "29") (term "1,0,1"))
                                 (rule "mul_literals" (formula "29") (term "0,1,0,1"))
                                 (rule "polySimp_addComm1" (formula "29") (term "0,1"))
                                 (rule "polySimp_addAssoc" (formula "29") (term "0,0,1"))
                                 (rule "add_literals" (formula "29") (term "0,0,0,1"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "29") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "29") (term "0,1,0"))
                                 (rule "polySimp_elimOne" (formula "29") (term "0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "29") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "29") (term "1,1"))
                                 (rule "mul_literals" (formula "29") (term "0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1"))
                                 (rule "polySimp_elimOne" (formula "29") (term "1,1,1"))
                                 (rule "inEqSimp_contradInEq1" (formula "29") (term "1,0") (ifseqformula "7"))
                                 (rule "qeq_literals" (formula "29") (term "0,1,0"))
                                 (builtin "One Step Simplification" (formula "29"))
                                 (rule "ifthenelse_split" (formula "42") (term "0"))
                                 (branch "∃ int j; ( (IntNode)self.nodeseq[j] = self.first ∧ j ≥ 0 ∧ j ≤ -1 + self.size) TRUE"
                                    (rule "exLeft" (formula "42") (inst "sk=j_0"))
                                    (rule "andLeft" (formula "42"))
                                    (rule "andLeft" (formula "42"))
                                    (rule "eqSymm" (formula "45"))
                                    (rule "inEqSimp_homoInEq0" (formula "44"))
                                    (rule "polySimp_addComm1" (formula "44") (term "0"))
                                    (rule "applyEq" (formula "57") (term "0") (ifseqformula "45"))
                                    (builtin "One Step Simplification" (formula "57"))
                                    (rule "false_right" (formula "57"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "44"))
                                    (rule "polySimp_mulComm0" (formula "44") (term "1"))
                                    (rule "polySimp_rightDist" (formula "44") (term "1"))
                                    (rule "mul_literals" (formula "44") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "44") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "44") (term "1,1"))
                                    (rule "seqGetAlphaCast" (formula "60") (term "0"))
                                    (rule "castDel" (formula "1") (term "0"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "true_left" (formula "1"))
                                    (rule "seqGetAlphaCast" (formula "17") (term "1,1"))
                                    (rule "castedGetAny" (formula "17") (term "0"))
                                    (builtin "One Step Simplification" (formula "17"))
                                    (rule "true_left" (formula "17"))
                                    (rule "seqGetAlphaCast" (formula "17") (term "0"))
                                    (rule "castDel" (formula "17") (term "0"))
                                    (builtin "One Step Simplification" (formula "17"))
                                    (rule "true_left" (formula "17"))
                                    (rule "allLeft" (formula "4") (inst "t=add(Z(neglit(1(#))),
    int::select(heap, self, IntLinkedList::$size))"))
                                    (rule "replace_known_left" (formula "4") (term "0,0,0") (ifseqformula "35"))
                                    (builtin "One Step Simplification" (formula "4"))
                                    (rule "inEqSimp_homoInEq0" (formula "4") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                                    (rule "mul_literals" (formula "4") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                    (rule "add_literals" (formula "4") (term "0,0,0"))
                                    (rule "add_zero_left" (formula "4") (term "0,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "4") (term "1"))
                                    (rule "polySimp_mulComm0" (formula "4") (term "1,0,1"))
                                    (rule "polySimp_rightDist" (formula "4") (term "1,0,1"))
                                    (rule "mul_literals" (formula "4") (term "0,1,0,1"))
                                    (rule "polySimp_addAssoc" (formula "4") (term "0,1"))
                                    (rule "polySimp_addComm0" (formula "4") (term "0,0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,1"))
                                    (rule "add_literals" (formula "4") (term "1,1,0,1"))
                                    (rule "times_zero_1" (formula "4") (term "1,0,1"))
                                    (rule "add_zero_right" (formula "4") (term "0,1"))
                                    (rule "leq_literals" (formula "4") (term "1"))
                                    (builtin "One Step Simplification" (formula "4"))
                                    (rule "inEqSimp_invertInEq1" (formula "4"))
                                    (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                    (rule "mul_literals" (formula "4") (term "1"))
                                    (rule "polySimp_elimOne" (formula "4") (term "0"))
                                    (rule "inEqSimp_contradInEq1" (formula "4") (ifseqformula "37"))
                                    (rule "qeq_literals" (formula "4") (term "0"))
                                    (builtin "One Step Simplification" (formula "4"))
                                    (rule "closeFalse" (formula "4"))
                                 )
                                 (branch "∃ int j; ( (IntNode)self.nodeseq[j] = self.first ∧ j ≥ 0 ∧ j ≤ -1 + self.size) FALSE"
                                    (rule "eqSymm" (formula "42"))
                                    (rule "applyEq" (formula "55") (term "0") (ifseqformula "42"))
                                    (builtin "One Step Simplification" (formula "55"))
                                    (rule "false_right" (formula "55"))
                                    (rule "nnf_ex2all" (formula "53"))
                                    (rule "nnf_notAnd" (formula "1") (term "0"))
                                    (rule "inEqSimp_notLeq" (formula "1") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0"))
                                    (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,0,1,0"))
                                    (rule "add_zero_left" (formula "1") (term "0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1,1,0"))
                                    (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "1") (term "1,0,0"))
                                    (rule "times_zero_1" (formula "1") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1,0,0"))
                                    (rule "mul_literals" (formula "1") (term "1,1,0,0"))
                                    (rule "seqGetAlphaCast" (formula "58") (term "0"))
                                    (rule "castDel" (formula "1") (term "0"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "true_left" (formula "1"))
                                    (rule "seqGetAlphaCast" (formula "18") (term "1,1"))
                                    (rule "castedGetAny" (formula "18") (term "0"))
                                    (builtin "One Step Simplification" (formula "18"))
                                    (rule "true_left" (formula "18"))
                                    (rule "seqGetAlphaCast" (formula "18") (term "0"))
                                    (rule "castDel" (formula "18") (term "0"))
                                    (builtin "One Step Simplification" (formula "18"))
                                    (rule "true_left" (formula "18"))
                                    (rule "allLeft" (formula "5") (inst "t=add(Z(neglit(1(#))),
    int::select(heap, self, IntLinkedList::$size))"))
                                    (rule "replace_known_left" (formula "5") (term "0,0,0") (ifseqformula "36"))
                                    (builtin "One Step Simplification" (formula "5"))
                                    (rule "inEqSimp_homoInEq1" (formula "5") (term "1"))
                                    (rule "polySimp_mulComm0" (formula "5") (term "1,0,1"))
                                    (rule "polySimp_rightDist" (formula "5") (term "1,0,1"))
                                    (rule "mul_literals" (formula "5") (term "0,1,0,1"))
                                    (rule "polySimp_addAssoc" (formula "5") (term "0,1"))
                                    (rule "polySimp_addComm0" (formula "5") (term "0,0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,1"))
                                    (rule "add_literals" (formula "5") (term "1,1,0,1"))
                                    (rule "times_zero_1" (formula "5") (term "1,0,1"))
                                    (rule "add_zero_right" (formula "5") (term "0,1"))
                                    (rule "leq_literals" (formula "5") (term "1"))
                                    (builtin "One Step Simplification" (formula "5"))
                                    (rule "inEqSimp_homoInEq0" (formula "5"))
                                    (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                                    (rule "mul_literals" (formula "5") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                    (rule "add_literals" (formula "5") (term "0,0"))
                                    (rule "add_zero_left" (formula "5") (term "0"))
                                    (rule "inEqSimp_invertInEq1" (formula "5"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                    (rule "times_zero_2" (formula "5") (term "1"))
                                    (rule "polySimp_elimOne" (formula "5") (term "0"))
                                    (rule "inEqSimp_contradInEq0" (formula "38") (ifseqformula "5"))
                                    (rule "qeq_literals" (formula "38") (term "0"))
                                    (builtin "One Step Simplification" (formula "38"))
                                    (rule "closeFalse" (formula "38"))
                                 )
                              )
                              (branch "(IntNode)self.nodeseq[i_2_0].<created> = TRUE FALSE"
                                 (rule "applyEqReverse" (formula "50") (term "1,1") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "eqSymm" (formula "49") (term "1"))
                                 (rule "replace_known_right" (formula "2") (term "0,1,0,0") (ifseqformula "41"))
                                 (builtin "One Step Simplification" (formula "2"))
                                 (rule "eqSymm" (formula "2"))
                                 (rule "applyEq" (formula "46") (term "0") (ifseqformula "2"))
                                 (builtin "One Step Simplification" (formula "46"))
                                 (rule "false_right" (formula "46"))
                                 (rule "allLeft" (formula "35") (inst "t=add(Z(1(#)), i_2_0)"))
                                 (rule "inEqSimp_commuteGeq" (formula "35") (term "1"))
                                 (rule "inEqSimp_homoInEq0" (formula "35") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "35") (term "1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "35") (term "1,0,1,0"))
                                 (rule "mul_literals" (formula "35") (term "0,1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "35") (term "0,1,0"))
                                 (rule "add_literals" (formula "35") (term "0,0,1,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "35") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "35") (term "0,1,0"))
                                 (rule "polySimp_elimOne" (formula "35") (term "0,1,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "35") (term "1,0") (ifseqformula "3"))
                                 (rule "qeq_literals" (formula "35") (term "0,1,0"))
                                 (builtin "One Step Simplification" (formula "35"))
                                 (rule "inEqSimp_contradInEq1" (formula "35") (term "1") (ifseqformula "4"))
                                 (rule "inEqSimp_homoInEq1" (formula "35") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "35") (term "1,0,0,1"))
                                 (rule "mul_literals" (formula "35") (term "0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "35") (term "0,0,1"))
                                 (rule "polySimp_addComm1" (formula "35") (term "0,0,0,1"))
                                 (rule "add_literals" (formula "35") (term "0,0,0,0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,1"))
                                 (rule "add_literals" (formula "35") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "35") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "35") (term "0,0,1"))
                                 (rule "leq_literals" (formula "35") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "35"))
                                 (rule "pullOutSelect" (formula "35") (term "0") (inst "selectSK=IntNode_data_3"))
                                 (rule "simplifySelectOfAnon" (formula "35"))
                                 (builtin "One Step Simplification" (formula "35"))
                                 (rule "eqSymm" (formula "36"))
                                 (rule "applyEqReverse" (formula "35") (term "1") (ifseqformula "36"))
                                 (rule "hideAuxiliaryEq" (formula "36"))
                                 (rule "elementOfUnion" (formula "35") (term "0,0,0"))
                                 (rule "elementOfInfiniteUnion" (formula "35") (term "1,0,0,0"))
                                 (builtin "One Step Simplification" (formula "35"))
                                 (rule "elementOfSingleton" (formula "35") (term "0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "35"))
                                 (rule "elementOfSingleton" (formula "35") (term "1,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "35"))
                                 (rule "eqSymm" (formula "35") (term "1,0,0,0,0"))
                                 (rule "allLeft" (formula "12") (inst "t=add(Z(1(#)), i_2_0)"))
                                 (rule "inEqSimp_commuteGeq" (formula "12") (term "1"))
                                 (rule "inEqSimp_homoInEq0" (formula "12") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "12") (term "1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "12") (term "1,0,1,0"))
                                 (rule "mul_literals" (formula "12") (term "0,1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "12") (term "0,1,0"))
                                 (rule "add_literals" (formula "12") (term "0,0,1,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "12") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "12") (term "0,1,0"))
                                 (rule "polySimp_elimOne" (formula "12") (term "0,1,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "12") (term "1,0") (ifseqformula "3"))
                                 (rule "qeq_literals" (formula "12") (term "0,1,0"))
                                 (builtin "One Step Simplification" (formula "12"))
                                 (rule "inEqSimp_contradInEq1" (formula "12") (term "1") (ifseqformula "4"))
                                 (rule "inEqSimp_homoInEq1" (formula "12") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1"))
                                 (rule "mul_literals" (formula "12") (term "0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "12") (term "0,0,1"))
                                 (rule "polySimp_addComm1" (formula "12") (term "0,0,0,1"))
                                 (rule "add_literals" (formula "12") (term "0,0,0,0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0,1"))
                                 (rule "add_literals" (formula "12") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "12") (term "1,0,0,1"))
                                 (rule "add_literals" (formula "12") (term "0,0,1"))
                                 (rule "leq_literals" (formula "12") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "12"))
                                 (rule "notLeft" (formula "12"))
                                 (rule "replace_known_right" (formula "35") (term "0,0,1,0,0") (ifseqformula "42"))
                                 (builtin "One Step Simplification" (formula "35"))
                                 (rule "allLeft" (formula "37") (inst "t=add(Z(1(#)), i_2_0)"))
                                 (rule "polySimp_addAssoc" (formula "37") (term "1,1,0,0"))
                                 (rule "add_literals" (formula "37") (term "0,1,1,0,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "37") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "37") (term "1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "37") (term "1,0,1,0"))
                                 (rule "mul_literals" (formula "37") (term "0,1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "37") (term "0,1,0"))
                                 (rule "add_literals" (formula "37") (term "0,0,1,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "37") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "37") (term "1,0,1"))
                                 (rule "polySimp_rightDist" (formula "37") (term "1,0,1"))
                                 (rule "mul_literals" (formula "37") (term "0,1,0,1"))
                                 (rule "polySimp_addComm1" (formula "37") (term "0,1"))
                                 (rule "polySimp_addAssoc" (formula "37") (term "0,0,1"))
                                 (rule "add_literals" (formula "37") (term "0,0,0,1"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "37") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "37") (term "0,1,0"))
                                 (rule "polySimp_elimOne" (formula "37") (term "0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "37") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "37") (term "1,1"))
                                 (rule "mul_literals" (formula "37") (term "0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1"))
                                 (rule "polySimp_elimOne" (formula "37") (term "1,1,1"))
                                 (rule "inEqSimp_contradInEq1" (formula "37") (term "1,0") (ifseqformula "3"))
                                 (rule "qeq_literals" (formula "37") (term "0,1,0"))
                                 (builtin "One Step Simplification" (formula "37"))
                                 (rule "pullOutSelect" (formula "37") (term "0,0") (inst "selectSK=IntNode_next_3"))
                                 (rule "simplifySelectOfAnon" (formula "37"))
                                 (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "44")))
                                 (rule "eqSymm" (formula "38") (term "0"))
                                 (rule "elementOfUnion" (formula "37") (term "0,0,0"))
                                 (rule "elementOfInfiniteUnion" (formula "37") (term "1,0,0,0"))
                                 (builtin "One Step Simplification" (formula "37"))
                                 (rule "elementOfSingleton" (formula "37") (term "0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "37"))
                                 (rule "elementOfSingleton" (formula "37") (term "1,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "37"))
                                 (rule "ifthenelse_negated" (formula "37") (term "0"))
                                 (rule "allLeft" (formula "19") (inst "t=i_2_0"))
                                 (rule "inEqSimp_commuteGeq" (formula "19") (term "1,0,0,0,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "19") (term "1,0,0,0,0,0") (ifseqformula "3"))
                                 (rule "qeq_literals" (formula "19") (term "0,1,0,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "19"))
                                 (rule "inEqSimp_contradInEq1" (formula "19") (term "1,0,0,0,0") (ifseqformula "4"))
                                 (rule "inEqSimp_homoInEq1" (formula "19") (term "0,1,0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,1,0,0,0,0"))
                                 (rule "add_literals" (formula "19") (term "1,1,0,0,1,0,0,0,0"))
                                 (rule "times_zero_1" (formula "19") (term "1,0,0,1,0,0,0,0"))
                                 (rule "add_zero_right" (formula "19") (term "0,0,1,0,0,0,0"))
                                 (rule "leq_literals" (formula "19") (term "0,1,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "19"))
                                 (rule "allLeft" (formula "16") (inst "t=add(Z(1(#)), i_2_0)"))
                                 (rule "inEqSimp_commuteGeq" (formula "16") (term "1"))
                                 (rule "inEqSimp_homoInEq0" (formula "16") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "16") (term "1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "16") (term "1,0,1,0"))
                                 (rule "mul_literals" (formula "16") (term "0,1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "16") (term "0,1,0"))
                                 (rule "add_literals" (formula "16") (term "0,0,1,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "16") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "16") (term "0,1,0"))
                                 (rule "polySimp_elimOne" (formula "16") (term "0,1,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "16") (term "1") (ifseqformula "4"))
                                 (rule "inEqSimp_homoInEq1" (formula "16") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1"))
                                 (rule "mul_literals" (formula "16") (term "0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "16") (term "0,0,1"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,1"))
                                 (rule "add_literals" (formula "16") (term "0,0,0,0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,1"))
                                 (rule "add_literals" (formula "16") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "16") (term "1,0,0,1"))
                                 (rule "add_literals" (formula "16") (term "0,0,1"))
                                 (rule "leq_literals" (formula "16") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "16"))
                                 (rule "inEqSimp_contradInEq1" (formula "16") (term "1") (ifseqformula "3"))
                                 (rule "qeq_literals" (formula "16") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "16"))
                                 (rule "allLeft" (formula "41") (inst "t=i_2_0"))
                                 (rule "replaceKnownSelect_taclet1011111_14" (formula "41") (term "0,0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet11011011111_23" (formula "41") (term "0,0,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "41") (term "1"))
                                 (rule "polySimp_addComm1" (formula "41") (term "0,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "41") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "41") (term "1,1"))
                                 (rule "polySimp_mulLiterals" (formula "41") (term "1,1,1"))
                                 (rule "mul_literals" (formula "41") (term "0,1,1"))
                                 (rule "polySimp_elimOne" (formula "41") (term "1,1,1"))
                                 (rule "inEqSimp_contradInEq1" (formula "41") (term "1,0") (ifseqformula "3"))
                                 (rule "qeq_literals" (formula "41") (term "0,1,0"))
                                 (builtin "One Step Simplification" (formula "41"))
                                 (rule "inEqSimp_contradInEq1" (formula "41") (term "1") (ifseqformula "4"))
                                 (rule "inEqSimp_homoInEq1" (formula "41") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "41") (term "1,0,0,1"))
                                 (rule "mul_literals" (formula "41") (term "0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "41") (term "0,0,1"))
                                 (rule "polySimp_addComm1" (formula "41") (term "0,0,0,1"))
                                 (rule "add_literals" (formula "41") (term "0,0,0,0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "41") (term "0,0,1"))
                                 (rule "add_literals" (formula "41") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "41") (term "1,0,0,1"))
                                 (rule "add_literals" (formula "41") (term "0,0,1"))
                                 (rule "leq_literals" (formula "41") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "41"))
                                 (rule "replace_known_left" (formula "55") (term "1") (ifseqformula "41"))
                                 (builtin "One Step Simplification" (formula "55"))
                                 (rule "allRight" (formula "55") (inst "sk=j_1_0"))
                                 (rule "orRight" (formula "55"))
                                 (rule "orRight" (formula "55"))
                                 (rule "orRight" (formula "57"))
                                 (rule "notRight" (formula "57"))
                                 (rule "inEqSimp_geqRight" (formula "57"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0"))
                                 (rule "inEqSimp_leqRight" (formula "57"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                 (rule "polySimp_elimOne" (formula "2") (term "0"))
                                 (rule "allLeft" (formula "27") (inst "t=add(Z(1(#)), i_2_0)"))
                                 (rule "polySimp_addAssoc" (formula "27") (term "1,1,0,0"))
                                 (rule "add_literals" (formula "27") (term "0,1,1,0,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "27") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "27") (term "1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "27") (term "1,0,1,0"))
                                 (rule "mul_literals" (formula "27") (term "0,1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "27") (term "0,1,0"))
                                 (rule "add_literals" (formula "27") (term "0,0,1,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "27") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "27") (term "1,0,1"))
                                 (rule "polySimp_rightDist" (formula "27") (term "1,0,1"))
                                 (rule "mul_literals" (formula "27") (term "0,1,0,1"))
                                 (rule "polySimp_addComm1" (formula "27") (term "0,1"))
                                 (rule "polySimp_addAssoc" (formula "27") (term "0,0,1"))
                                 (rule "add_literals" (formula "27") (term "0,0,0,1"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "27") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "27") (term "0,1,0"))
                                 (rule "polySimp_elimOne" (formula "27") (term "0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "27") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "27") (term "1,1"))
                                 (rule "mul_literals" (formula "27") (term "0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1"))
                                 (rule "polySimp_elimOne" (formula "27") (term "1,1,1"))
                                 (rule "inEqSimp_contradInEq1" (formula "27") (term "1,0") (ifseqformula "6"))
                                 (rule "qeq_literals" (formula "27") (term "0,1,0"))
                                 (builtin "One Step Simplification" (formula "27"))
                                 (rule "allLeft" (formula "28") (inst "t=i_2_0"))
                                 (rule "inEqSimp_homoInEq1" (formula "28") (term "1"))
                                 (rule "polySimp_addComm1" (formula "28") (term "0,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "28") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "28") (term "1,1"))
                                 (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1"))
                                 (rule "mul_literals" (formula "28") (term "0,1,1"))
                                 (rule "polySimp_elimOne" (formula "28") (term "1,1,1"))
                                 (rule "inEqSimp_contradInEq1" (formula "28") (term "1") (ifseqformula "7"))
                                 (rule "inEqSimp_homoInEq1" (formula "28") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1"))
                                 (rule "mul_literals" (formula "28") (term "0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "28") (term "0,0,1"))
                                 (rule "polySimp_addComm1" (formula "28") (term "0,0,0,1"))
                                 (rule "add_literals" (formula "28") (term "0,0,0,0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,1"))
                                 (rule "add_literals" (formula "28") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "28") (term "1,0,0,1"))
                                 (rule "add_literals" (formula "28") (term "0,0,1"))
                                 (rule "leq_literals" (formula "28") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "28"))
                                 (rule "inEqSimp_contradInEq1" (formula "28") (term "1") (ifseqformula "6"))
                                 (rule "qeq_literals" (formula "28") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "28"))
                                 (rule "allLeft" (formula "24") (inst "t=add(Z(1(#)), i_2_0)"))
                                 (rule "inEqSimp_commuteGeq" (formula "24") (term "1,0,0,0,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "24") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "24") (term "1,0,1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "24") (term "1,0,1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "24") (term "0,1,0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "24") (term "0,1,0,0,0,0,0"))
                                 (rule "add_literals" (formula "24") (term "0,0,1,0,0,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "24") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "24") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "24") (term "0,1,0,0,0,0,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "24") (term "1,0,0,0,0,0") (ifseqformula "6"))
                                 (rule "qeq_literals" (formula "24") (term "0,1,0,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "24"))
                                 (rule "inEqSimp_contradInEq1" (formula "24") (term "1,0,0,0,0") (ifseqformula "7"))
                                 (rule "inEqSimp_homoInEq1" (formula "24") (term "0,1,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0,0,0"))
                                 (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "24") (term "0,0,0,1,0,0,0,0"))
                                 (rule "add_literals" (formula "24") (term "0,0,0,0,1,0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,1,0,0,0,0"))
                                 (rule "add_literals" (formula "24") (term "1,1,0,0,1,0,0,0,0"))
                                 (rule "times_zero_1" (formula "24") (term "1,0,0,1,0,0,0,0"))
                                 (rule "add_zero_right" (formula "24") (term "0,0,1,0,0,0,0"))
                                 (rule "leq_literals" (formula "24") (term "0,1,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "24"))
                                 (rule "ifthenelse_split" (formula "42") (term "0"))
                                 (branch "∃ int j; ( (IntNode)self.nodeseq[j] = self.first ∧ j ≥ 0 ∧ j ≤ -1 + self.size) TRUE"
                                    (rule "exLeft" (formula "42") (inst "sk=j_0"))
                                    (rule "andLeft" (formula "42"))
                                    (rule "andLeft" (formula "42"))
                                    (rule "eqSymm" (formula "45"))
                                    (rule "inEqSimp_homoInEq0" (formula "44"))
                                    (rule "polySimp_addComm1" (formula "44") (term "0"))
                                    (rule "applyEq" (formula "58") (term "0") (ifseqformula "45"))
                                    (builtin "One Step Simplification" (formula "58"))
                                    (rule "false_right" (formula "58"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "44"))
                                    (rule "polySimp_mulComm0" (formula "44") (term "1"))
                                    (rule "polySimp_rightDist" (formula "44") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "44") (term "1,1"))
                                    (rule "mul_literals" (formula "44") (term "0,1"))
                                    (rule "polySimp_elimOne" (formula "44") (term "1,1"))
                                    (rule "seqGetAlphaCast" (formula "16") (term "1,1"))
                                    (rule "castedGetAny" (formula "16") (term "0"))
                                    (builtin "One Step Simplification" (formula "16"))
                                    (rule "true_left" (formula "16"))
                                    (rule "seqGetAlphaCast" (formula "16") (term "0"))
                                    (rule "castDel" (formula "16") (term "0"))
                                    (builtin "One Step Simplification" (formula "16"))
                                    (rule "true_left" (formula "16"))
                                    (rule "allLeft" (formula "4") (inst "t=add(Z(neglit(1(#))),
    int::select(heap, self, IntLinkedList::$size))"))
                                    (rule "replace_known_left" (formula "4") (term "0,0,0") (ifseqformula "35"))
                                    (builtin "One Step Simplification" (formula "4"))
                                    (rule "inEqSimp_homoInEq0" (formula "4") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                                    (rule "mul_literals" (formula "4") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                    (rule "add_literals" (formula "4") (term "0,0,0"))
                                    (rule "add_zero_left" (formula "4") (term "0,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "4") (term "1"))
                                    (rule "polySimp_mulComm0" (formula "4") (term "1,0,1"))
                                    (rule "polySimp_rightDist" (formula "4") (term "1,0,1"))
                                    (rule "mul_literals" (formula "4") (term "0,1,0,1"))
                                    (rule "polySimp_addAssoc" (formula "4") (term "0,1"))
                                    (rule "polySimp_addComm0" (formula "4") (term "0,0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,1"))
                                    (rule "add_literals" (formula "4") (term "1,1,0,1"))
                                    (rule "times_zero_1" (formula "4") (term "1,0,1"))
                                    (rule "add_literals" (formula "4") (term "0,1"))
                                    (rule "leq_literals" (formula "4") (term "1"))
                                    (builtin "One Step Simplification" (formula "4"))
                                    (rule "inEqSimp_invertInEq1" (formula "4"))
                                    (rule "times_zero_2" (formula "4") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                    (rule "polySimp_elimOne" (formula "4") (term "0"))
                                    (rule "inEqSimp_contradInEq0" (formula "37") (ifseqformula "4"))
                                    (rule "qeq_literals" (formula "37") (term "0"))
                                    (builtin "One Step Simplification" (formula "37"))
                                    (rule "closeFalse" (formula "37"))
                                 )
                                 (branch "∃ int j; ( (IntNode)self.nodeseq[j] = self.first ∧ j ≥ 0 ∧ j ≤ -1 + self.size) FALSE"
                                    (rule "eqSymm" (formula "42"))
                                    (rule "applyEq" (formula "56") (term "0") (ifseqformula "42"))
                                    (builtin "One Step Simplification" (formula "56"))
                                    (rule "false_right" (formula "56"))
                                    (rule "nnf_ex2all" (formula "53"))
                                    (rule "nnf_notAnd" (formula "1") (term "0"))
                                    (rule "inEqSimp_notLeq" (formula "1") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0"))
                                    (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,0,1,0"))
                                    (rule "add_zero_left" (formula "1") (term "0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1,1,0"))
                                    (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "1") (term "1,0,0"))
                                    (rule "times_zero_1" (formula "1") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1,0,0"))
                                    (rule "mul_literals" (formula "1") (term "1,1,0,0"))
                                    (rule "seqGetAlphaCast" (formula "17") (term "0"))
                                    (rule "castDel" (formula "17") (term "0"))
                                    (builtin "One Step Simplification" (formula "17"))
                                    (rule "true_left" (formula "17"))
                                    (rule "seqGetAlphaCast" (formula "17") (term "1,1"))
                                    (rule "castedGetAny" (formula "17") (term "0"))
                                    (builtin "One Step Simplification" (formula "17"))
                                    (rule "true_left" (formula "17"))
                                    (rule "allLeft" (formula "5") (inst "t=add(Z(neglit(1(#))),
    int::select(heap, self, IntLinkedList::$size))"))
                                    (rule "replace_known_left" (formula "5") (term "0,0,0") (ifseqformula "36"))
                                    (builtin "One Step Simplification" (formula "5"))
                                    (rule "inEqSimp_homoInEq0" (formula "5") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
                                    (rule "mul_literals" (formula "5") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                    (rule "add_literals" (formula "5") (term "0,0,0"))
                                    (rule "add_zero_left" (formula "5") (term "0,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "5") (term "1"))
                                    (rule "polySimp_mulComm0" (formula "5") (term "1,0,1"))
                                    (rule "polySimp_rightDist" (formula "5") (term "1,0,1"))
                                    (rule "mul_literals" (formula "5") (term "0,1,0,1"))
                                    (rule "polySimp_addAssoc" (formula "5") (term "0,1"))
                                    (rule "polySimp_addComm0" (formula "5") (term "0,0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,1"))
                                    (rule "add_literals" (formula "5") (term "1,1,0,1"))
                                    (rule "times_zero_1" (formula "5") (term "1,0,1"))
                                    (rule "add_literals" (formula "5") (term "0,1"))
                                    (rule "leq_literals" (formula "5") (term "1"))
                                    (builtin "One Step Simplification" (formula "5"))
                                    (rule "inEqSimp_invertInEq1" (formula "5"))
                                    (rule "mul_literals" (formula "5") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                    (rule "polySimp_elimOne" (formula "5") (term "0"))
                                    (rule "inEqSimp_contradInEq0" (formula "38") (ifseqformula "5"))
                                    (rule "qeq_literals" (formula "38") (term "0"))
                                    (builtin "One Step Simplification" (formula "38"))
                                    (rule "closeFalse" (formula "38"))
                                 )
                              )
                           )
                        )
                        (branch "CUT: anonOut_current.<created> = TRUE FALSE"
                           (builtin "One Step Simplification" (formula "37"))
                           (rule "ifthenelse_split" (formula "30") (term "0"))
                           (branch "∃ int j; ( (IntNode)self.nodeseq[j] = self.last ∧ j ≥ 0 ∧ j ≤ -1 + self.size) TRUE"
                              (rule "exLeft" (formula "30") (inst "sk=j_0"))
                              (rule "andLeft" (formula "30"))
                              (rule "andLeft" (formula "30"))
                              (rule "eqSymm" (formula "33"))
                              (rule "inEqSimp_homoInEq0" (formula "32"))
                              (rule "polySimp_addComm1" (formula "32") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "32"))
                              (rule "polySimp_mulComm0" (formula "32") (term "1"))
                              (rule "polySimp_rightDist" (formula "32") (term "1"))
                              (rule "mul_literals" (formula "32") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "32") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "32") (term "1,1"))
                              (rule "allLeft" (formula "29") (inst "t=Z(0(#))"))
                              (rule "typeEqDerived2" (formula "29") (term "0,0,0") (ifseqformula "35"))
                              (builtin "One Step Simplification" (formula "29"))
                              (rule "true_left" (formula "29"))
                              (rule "allLeft" (formula "29") (inst "t=add(Z(neglit(1(#))),
    int::select(heap, self, IntLinkedList::$size))"))
                              (rule "typeEqDerived" (formula "29") (term "0,0,0") (ifseqformula "34"))
                              (builtin "One Step Simplification" (formula "29"))
                              (rule "true_left" (formula "29"))
                              (rule "allLeft" (formula "28") (inst "t=add(Z(neglit(1(#))),
    int::select(heap, self, IntLinkedList::$size))"))
                              (rule "inEqSimp_homoInEq1" (formula "28") (term "1"))
                              (rule "polySimp_mulComm0" (formula "28") (term "1,0,1"))
                              (rule "polySimp_rightDist" (formula "28") (term "1,0,1"))
                              (rule "mul_literals" (formula "28") (term "0,1,0,1"))
                              (rule "polySimp_addAssoc" (formula "28") (term "0,1"))
                              (rule "polySimp_addComm0" (formula "28") (term "0,0,1"))
                              (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,1"))
                              (rule "add_literals" (formula "28") (term "1,1,0,1"))
                              (rule "times_zero_1" (formula "28") (term "1,0,1"))
                              (rule "add_literals" (formula "28") (term "0,1"))
                              (rule "leq_literals" (formula "28") (term "1"))
                              (builtin "One Step Simplification" (formula "28"))
                              (rule "inEqSimp_homoInEq0" (formula "28") (term "1"))
                              (rule "polySimp_mulComm0" (formula "28") (term "1,0,1"))
                              (rule "polySimp_rightDist" (formula "28") (term "1,0,1"))
                              (rule "mul_literals" (formula "28") (term "0,1,0,1"))
                              (rule "polySimp_addAssoc" (formula "28") (term "0,1"))
                              (rule "add_literals" (formula "28") (term "0,0,1"))
                              (rule "add_zero_left" (formula "28") (term "0,1"))
                              (rule "applyEq" (formula "28") (term "0,0,0") (ifseqformula "34"))
                              (builtin "One Step Simplification" (formula "28"))
                              (rule "true_left" (formula "28"))
                              (rule "allLeft" (formula "28") (inst "t=Z(0(#))"))
                              (rule "leq_literals" (formula "28") (term "1,0"))
                              (builtin "One Step Simplification" (formula "28"))
                              (rule "inEqSimp_commuteGeq" (formula "28") (term "1"))
                              (rule "inEqSimp_contradInEq1" (formula "28") (term "1") (ifseqformula "25"))
                              (rule "qeq_literals" (formula "28") (term "0,1"))
                              (builtin "One Step Simplification" (formula "28"))
                              (rule "notLeft" (formula "28"))
                              (rule "allLeft" (formula "19") (inst "t=Z(0(#))"))
                              (rule "add_zero_right" (formula "19") (term "1,1,0,0"))
                              (rule "leq_literals" (formula "19") (term "1,0"))
                              (builtin "One Step Simplification" (formula "19"))
                              (rule "inEqSimp_homoInEq1" (formula "19") (term "1"))
                              (rule "mul_literals" (formula "19") (term "1,0,1"))
                              (rule "add_zero_right" (formula "19") (term "0,1"))
                              (rule "applyEq" (formula "19") (term "1,0,0") (ifseqformula "22"))
                              (rule "eqSymm" (formula "19") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1"))
                              (rule "mul_literals" (formula "19") (term "1,1"))
                              (rule "allLeft" (formula "37") (inst "t=Z(0(#))"))
                              (rule "add_literals" (formula "37") (term "1,1,0,0"))
                              (rule "leq_literals" (formula "37") (term "1,0"))
                              (builtin "One Step Simplification" (formula "37"))
                              (rule "inEqSimp_homoInEq1" (formula "37") (term "1"))
                              (rule "times_zero_2" (formula "37") (term "1,0,1"))
                              (rule "add_zero_right" (formula "37") (term "0,1"))
                              (rule "applyEq" (formula "37") (term "1,0,0") (ifseqformula "22"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1"))
                              (rule "mul_literals" (formula "37") (term "1,1"))
                              (rule "pullOutSelect" (formula "37") (term "0,0") (inst "selectSK=IntNode_next_2"))
                              (rule "simplifySelectOfAnon" (formula "37"))
                              (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "46")) (ifInst ""  (formula "21")))
                              (rule "eqSymm" (formula "38") (term "0"))
                              (rule "elementOfUnion" (formula "37") (term "0,0"))
                              (rule "elementOfSingleton" (formula "37") (term "0,0,0"))
                              (builtin "One Step Simplification" (formula "37"))
                              (rule "elementOfInfiniteUnion" (formula "37") (term "0,0"))
                              (builtin "One Step Simplification" (formula "37"))
                              (rule "elementOfSingleton" (formula "37") (term "1,0,0,0"))
                              (builtin "One Step Simplification" (formula "37"))
                              (rule "applyEqReverse" (formula "38") (term "1,0") (ifseqformula "37"))
                              (rule "hideAuxiliaryEq" (formula "37"))
                              (rule "allLeft" (formula "17") (inst "t=Z(0(#))"))
                              (rule "leq_literals" (formula "17") (term "1,0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "17"))
                              (rule "inEqSimp_commuteGeq" (formula "17") (term "1,0,0,0,0"))
                              (rule "applyEq" (formula "17") (term "1,0,0,0,0,0,0") (ifseqformula "23"))
                              (rule "inEqSimp_contradInEq1" (formula "17") (term "1,0,0,0,0") (ifseqformula "27"))
                              (rule "qeq_literals" (formula "17") (term "0,1,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "17"))
                              (rule "commute_or_2" (formula "17") (term "0"))
                              (rule "inEqSimp_or_weaken2" (formula "17") (term "0,0"))
                              (rule "add_literals" (formula "17") (term "1,0,1,0,0"))
                              (builtin "One Step Simplification" (formula "17"))
                              (rule "allLeft" (formula "18") (inst "t=add(Z(neglit(1(#))),
    int::select(heap, self, IntLinkedList::$size))"))
                              (rule "inEqSimp_homoInEq0" (formula "18") (term "1,0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "18") (term "1,0,1,0,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "18") (term "1,0,1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "18") (term "0,1,0,1,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "18") (term "0,1,0,0,0,0,0"))
                              (rule "add_literals" (formula "18") (term "0,0,1,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "18") (term "0,1,0,0,0,0,0"))
                              (rule "inEqSimp_homoInEq1" (formula "18") (term "1,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "18") (term "1,0,1,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "18") (term "1,0,1,0,0,0,0"))
                              (rule "mul_literals" (formula "18") (term "0,1,0,1,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "18") (term "0,1,0,0,0,0"))
                              (rule "polySimp_addComm0" (formula "18") (term "0,0,1,0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,1,0,0,0,0"))
                              (rule "add_literals" (formula "18") (term "1,1,0,1,0,0,0,0"))
                              (rule "times_zero_1" (formula "18") (term "1,0,1,0,0,0,0"))
                              (rule "add_zero_right" (formula "18") (term "0,1,0,0,0,0"))
                              (rule "leq_literals" (formula "18") (term "1,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "18"))
                              (rule "applyEq" (formula "18") (term "1,0,0,0,0,0,0") (ifseqformula "26"))
                              (rule "inEqSimp_invertInEq1" (formula "18") (term "1,0,0,0,0"))
                              (rule "times_zero_2" (formula "18") (term "1,1,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "18") (term "0,1,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "18") (term "0,1,0,0,0,0"))
                              (rule "inEqSimp_contradInEq1" (formula "18") (term "1,0,0,0,0") (ifseqformula "28"))
                              (rule "qeq_literals" (formula "18") (term "0,1,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "18"))
                              (rule "commute_or_2" (formula "18") (term "0"))
                              (rule "inEqSimp_or_weaken3" (formula "18") (term "0"))
                              (rule "polySimp_addAssoc" (formula "18") (term "1,0,1,0"))
                              (rule "add_literals" (formula "18") (term "0,1,0,1,0"))
                              (rule "add_zero_left" (formula "18") (term "1,0,1,0"))
                              (builtin "One Step Simplification" (formula "18"))
                              (rule "ifthenelse_split" (formula "2") (term "0"))
                              (branch "(IntNode)self.nodeseq[i_2_0].<created> = TRUE TRUE"
                                 (rule "applyEqReverse" (formula "53") (term "1,1") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "eqSymm" (formula "52") (term "1"))
                                 (rule "replace_known_left" (formula "1") (term "0,1,0,0") (ifseqformula "2"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "allLeft" (formula "39") (inst "t=add(Z(1(#)), i_2_0)"))
                                 (rule "polySimp_addAssoc" (formula "39") (term "1,1,0,0"))
                                 (rule "add_literals" (formula "39") (term "0,1,1,0,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "39") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "39") (term "1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "39") (term "1,0,1,0"))
                                 (rule "mul_literals" (formula "39") (term "0,1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "39") (term "0,1,0"))
                                 (rule "add_literals" (formula "39") (term "0,0,1,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "39") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "39") (term "1,0,1"))
                                 (rule "polySimp_rightDist" (formula "39") (term "1,0,1"))
                                 (rule "mul_literals" (formula "39") (term "0,1,0,1"))
                                 (rule "polySimp_addComm1" (formula "39") (term "0,1"))
                                 (rule "polySimp_addAssoc" (formula "39") (term "0,0,1"))
                                 (rule "add_literals" (formula "39") (term "0,0,0,1"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "39") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "39") (term "0,1,0"))
                                 (rule "polySimp_elimOne" (formula "39") (term "0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "39") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "39") (term "1,1"))
                                 (rule "mul_literals" (formula "39") (term "0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1"))
                                 (rule "polySimp_elimOne" (formula "39") (term "1,1,1"))
                                 (rule "inEqSimp_contradInEq1" (formula "39") (term "1,0") (ifseqformula "3"))
                                 (rule "qeq_literals" (formula "39") (term "0,1,0"))
                                 (builtin "One Step Simplification" (formula "39"))
                                 (rule "pullOutSelect" (formula "39") (term "0,0") (inst "selectSK=IntNode_next_3"))
                                 (rule "simplifySelectOfAnon" (formula "39"))
                                 (builtin "One Step Simplification" (formula "39"))
                                 (rule "eqSymm" (formula "40") (term "0"))
                                 (rule "elementOfUnion" (formula "39") (term "0,0,0"))
                                 (rule "elementOfInfiniteUnion" (formula "39") (term "1,0,0,0"))
                                 (builtin "One Step Simplification" (formula "39"))
                                 (rule "elementOfSingleton" (formula "39") (term "1,0,1,0,0,0"))
                                 (builtin "One Step Simplification" (formula "39"))
                                 (rule "elementOfSingleton" (formula "39") (term "0,0,0"))
                                 (builtin "One Step Simplification" (formula "39"))
                                 (rule "allLeft" (formula "41") (inst "t=i_2_0"))
                                 (rule "replaceKnownSelect_taclet1011111_14" (formula "41") (term "0,0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet00111011111_23" (formula "41") (term "0,0,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "41") (term "1"))
                                 (rule "polySimp_addComm1" (formula "41") (term "0,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "41") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "41") (term "1,1"))
                                 (rule "polySimp_mulLiterals" (formula "41") (term "1,1,1"))
                                 (rule "mul_literals" (formula "41") (term "0,1,1"))
                                 (rule "polySimp_elimOne" (formula "41") (term "1,1,1"))
                                 (rule "inEqSimp_contradInEq1" (formula "41") (term "1") (ifseqformula "4"))
                                 (rule "inEqSimp_homoInEq1" (formula "41") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "41") (term "1,0,0,1"))
                                 (rule "mul_literals" (formula "41") (term "0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "41") (term "0,0,1"))
                                 (rule "polySimp_addComm1" (formula "41") (term "0,0,0,1"))
                                 (rule "add_literals" (formula "41") (term "0,0,0,0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "41") (term "0,0,1"))
                                 (rule "add_literals" (formula "41") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "41") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "41") (term "0,0,1"))
                                 (rule "leq_literals" (formula "41") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "41"))
                                 (rule "inEqSimp_contradInEq1" (formula "41") (term "1") (ifseqformula "3"))
                                 (rule "qeq_literals" (formula "41") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "41"))
                                 (rule "replace_known_left" (formula "55") (term "1") (ifseqformula "41"))
                                 (builtin "One Step Simplification" (formula "55"))
                                 (rule "allRight" (formula "55") (inst "sk=j_1_0"))
                                 (rule "orRight" (formula "55"))
                                 (rule "orRight" (formula "56"))
                                 (rule "orRight" (formula "55"))
                                 (rule "notRight" (formula "57"))
                                 (rule "inEqSimp_leqRight" (formula "56"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0"))
                                 (rule "inEqSimp_geqRight" (formula "57"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "0"))
                                 (rule "allLeft" (formula "25") (inst "t=add(Z(1(#)), i_2_0)"))
                                 (rule "polySimp_addAssoc" (formula "25") (term "1,1,0,0"))
                                 (rule "add_literals" (formula "25") (term "0,1,1,0,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "25") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "25") (term "1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "25") (term "1,0,1,0"))
                                 (rule "mul_literals" (formula "25") (term "0,1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "25") (term "0,1,0"))
                                 (rule "add_literals" (formula "25") (term "0,0,1,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "25") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "25") (term "1,0,1"))
                                 (rule "polySimp_rightDist" (formula "25") (term "1,0,1"))
                                 (rule "mul_literals" (formula "25") (term "0,1,0,1"))
                                 (rule "polySimp_addComm1" (formula "25") (term "0,1"))
                                 (rule "polySimp_addAssoc" (formula "25") (term "0,0,1"))
                                 (rule "add_literals" (formula "25") (term "0,0,0,1"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "25") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "25") (term "0,1,0"))
                                 (rule "polySimp_elimOne" (formula "25") (term "0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "25") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "25") (term "1,1"))
                                 (rule "mul_literals" (formula "25") (term "0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1"))
                                 (rule "polySimp_elimOne" (formula "25") (term "1,1,1"))
                                 (rule "inEqSimp_contradInEq1" (formula "25") (term "1,0") (ifseqformula "6"))
                                 (rule "qeq_literals" (formula "25") (term "0,1,0"))
                                 (builtin "One Step Simplification" (formula "25"))
                                 (rule "allLeft" (formula "22") (inst "t=i_2_0"))
                                 (rule "inEqSimp_commuteGeq" (formula "22") (term "1,0,0,0,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "22") (term "1,0,0,0,0,0") (ifseqformula "6"))
                                 (rule "qeq_literals" (formula "22") (term "0,1,0,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "22"))
                                 (rule "inEqSimp_contradInEq1" (formula "22") (term "1,0,0,0,0") (ifseqformula "7"))
                                 (rule "inEqSimp_homoInEq1" (formula "22") (term "0,1,0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,1,0,0,0,0"))
                                 (rule "add_literals" (formula "22") (term "1,1,0,0,1,0,0,0,0"))
                                 (rule "times_zero_1" (formula "22") (term "1,0,0,1,0,0,0,0"))
                                 (rule "add_zero_right" (formula "22") (term "0,0,1,0,0,0,0"))
                                 (rule "leq_literals" (formula "22") (term "0,1,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "22"))
                                 (rule "allLeft" (formula "15") (inst "t=add(Z(1(#)), i_2_0)"))
                                 (rule "inEqSimp_commuteGeq" (formula "15") (term "1"))
                                 (rule "inEqSimp_homoInEq0" (formula "15") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "15") (term "1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "15") (term "1,0,1,0"))
                                 (rule "mul_literals" (formula "15") (term "0,1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "15") (term "0,1,0"))
                                 (rule "add_literals" (formula "15") (term "0,0,1,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "15") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "15") (term "0,1,0"))
                                 (rule "polySimp_elimOne" (formula "15") (term "0,1,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "15") (term "1") (ifseqformula "7"))
                                 (rule "inEqSimp_homoInEq1" (formula "15") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1"))
                                 (rule "mul_literals" (formula "15") (term "0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "15") (term "0,0,1"))
                                 (rule "polySimp_addComm1" (formula "15") (term "0,0,0,1"))
                                 (rule "add_literals" (formula "15") (term "0,0,0,0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,1"))
                                 (rule "add_literals" (formula "15") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "15") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "15") (term "0,0,1"))
                                 (rule "leq_literals" (formula "15") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "15"))
                                 (rule "inEqSimp_contradInEq1" (formula "15") (term "1") (ifseqformula "6"))
                                 (rule "qeq_literals" (formula "15") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "15"))
                                 (rule "notLeft" (formula "15"))
                                 (rule "replace_known_right" (formula "44") (term "0,0,0,0") (ifseqformula "52"))
                                 (builtin "One Step Simplification" (formula "44"))
                                 (rule "ifthenelse_negated" (formula "44") (term "0"))
                                 (rule "allLeft" (formula "19") (inst "t=add(Z(1(#)), i_2_0)"))
                                 (rule "inEqSimp_commuteGeq" (formula "19") (term "1"))
                                 (rule "inEqSimp_homoInEq0" (formula "19") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "19") (term "1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "19") (term "1,0,1,0"))
                                 (rule "mul_literals" (formula "19") (term "0,1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "19") (term "0,1,0"))
                                 (rule "add_literals" (formula "19") (term "0,0,1,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "19") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "0,1,0"))
                                 (rule "polySimp_elimOne" (formula "19") (term "0,1,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "19") (term "1") (ifseqformula "7"))
                                 (rule "inEqSimp_homoInEq1" (formula "19") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1"))
                                 (rule "mul_literals" (formula "19") (term "0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "19") (term "0,0,1"))
                                 (rule "polySimp_addComm1" (formula "19") (term "0,0,0,1"))
                                 (rule "add_literals" (formula "19") (term "0,0,0,0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,1"))
                                 (rule "add_literals" (formula "19") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "19") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "19") (term "0,0,1"))
                                 (rule "leq_literals" (formula "19") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "19"))
                                 (rule "inEqSimp_contradInEq1" (formula "19") (term "1") (ifseqformula "6"))
                                 (rule "qeq_literals" (formula "19") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "19"))
                                 (rule "allLeft" (formula "44") (inst "t=add(Z(1(#)), i_2_0)"))
                                 (rule "inEqSimp_commuteGeq" (formula "44") (term "1"))
                                 (rule "inEqSimp_homoInEq0" (formula "44") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "44") (term "1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "44") (term "1,0,1,0"))
                                 (rule "mul_literals" (formula "44") (term "0,1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "44") (term "0,1,0"))
                                 (rule "add_literals" (formula "44") (term "0,0,1,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "44") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "44") (term "0,1,0"))
                                 (rule "polySimp_elimOne" (formula "44") (term "0,1,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "44") (term "1") (ifseqformula "7"))
                                 (rule "inEqSimp_homoInEq1" (formula "44") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "44") (term "1,0,0,1"))
                                 (rule "mul_literals" (formula "44") (term "0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "44") (term "0,0,1"))
                                 (rule "polySimp_addComm1" (formula "44") (term "0,0,0,1"))
                                 (rule "add_literals" (formula "44") (term "0,0,0,0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "44") (term "0,0,1"))
                                 (rule "add_literals" (formula "44") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "44") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "44") (term "0,0,1"))
                                 (rule "leq_literals" (formula "44") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "44"))
                                 (rule "inEqSimp_contradInEq1" (formula "44") (term "1") (ifseqformula "6"))
                                 (rule "qeq_literals" (formula "44") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "44"))
                                 (rule "pullOutSelect" (formula "44") (term "0") (inst "selectSK=IntNode_data_3"))
                                 (rule "simplifySelectOfAnon" (formula "44"))
                                 (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "55")))
                                 (rule "eqSymm" (formula "45"))
                                 (rule "applyEqReverse" (formula "44") (term "1") (ifseqformula "45"))
                                 (rule "hideAuxiliaryEq" (formula "45"))
                                 (rule "elementOfUnion" (formula "44") (term "0,0,0"))
                                 (rule "elementOfInfiniteUnion" (formula "44") (term "1,0,0,0"))
                                 (builtin "One Step Simplification" (formula "44"))
                                 (rule "elementOfSingleton" (formula "44") (term "1,0,1,0,0,0"))
                                 (builtin "One Step Simplification" (formula "44"))
                                 (rule "eqSymm" (formula "44") (term "1,0,1,0,0,0"))
                                 (rule "elementOfSingleton" (formula "44") (term "0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "44"))
                                 (rule "allLeft" (formula "24") (inst "t=add(Z(1(#)), i_2_0)"))
                                 (rule "inEqSimp_commuteGeq" (formula "24") (term "1,0,0,0,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "24") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "24") (term "1,0,1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "24") (term "1,0,1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "24") (term "0,1,0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "24") (term "0,1,0,0,0,0,0"))
                                 (rule "add_literals" (formula "24") (term "0,0,1,0,0,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "24") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "24") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "24") (term "0,1,0,0,0,0,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "24") (term "1,0,0,0,0,0") (ifseqformula "6"))
                                 (rule "qeq_literals" (formula "24") (term "0,1,0,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "24"))
                                 (rule "inEqSimp_contradInEq1" (formula "24") (term "1,0,0,0,0") (ifseqformula "7"))
                                 (rule "inEqSimp_homoInEq1" (formula "24") (term "0,1,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0,0,0"))
                                 (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "24") (term "0,0,0,1,0,0,0,0"))
                                 (rule "add_literals" (formula "24") (term "0,0,0,0,1,0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,1,0,0,0,0"))
                                 (rule "add_literals" (formula "24") (term "1,1,0,0,1,0,0,0,0"))
                                 (rule "times_zero_1" (formula "24") (term "1,0,0,1,0,0,0,0"))
                                 (rule "add_literals" (formula "24") (term "0,0,1,0,0,0,0"))
                                 (rule "leq_literals" (formula "24") (term "0,1,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "24"))
                                 (rule "ifthenelse_split" (formula "44") (term "0"))
                                 (branch "∃ int j; ( (IntNode)self.nodeseq[j] = self.first ∧ j ≥ 0 ∧ j ≤ -1 + self.size) TRUE"
                                    (rule "exLeft" (formula "44") (inst "sk=j_1"))
                                    (rule "andLeft" (formula "44"))
                                    (rule "andLeft" (formula "44"))
                                    (rule "eqSymm" (formula "47"))
                                    (rule "inEqSimp_homoInEq0" (formula "46"))
                                    (rule "polySimp_addComm1" (formula "46") (term "0"))
                                    (rule "applyEq" (formula "59") (term "0") (ifseqformula "47"))
                                    (builtin "One Step Simplification" (formula "59"))
                                    (rule "false_right" (formula "59"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "46"))
                                    (rule "polySimp_mulComm0" (formula "46") (term "1"))
                                    (rule "polySimp_rightDist" (formula "46") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "46") (term "1,1"))
                                    (rule "mul_literals" (formula "46") (term "0,1"))
                                    (rule "polySimp_elimOne" (formula "46") (term "1,1"))
                                    (rule "seqGetAlphaCast" (formula "63") (term "0"))
                                    (rule "castDel" (formula "1") (term "0"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "true_left" (formula "1"))
                                    (rule "seqGetAlphaCast" (formula "16") (term "1,1"))
                                    (rule "castedGetAny" (formula "16") (term "0"))
                                    (builtin "One Step Simplification" (formula "16"))
                                    (rule "true_left" (formula "16"))
                                    (rule "seqGetAlphaCast" (formula "16") (term "0"))
                                    (rule "castDel" (formula "16") (term "0"))
                                    (builtin "One Step Simplification" (formula "16"))
                                    (rule "true_left" (formula "16"))
                                    (rule "allLeft" (formula "15") (inst "t=j_0"))
                                    (rule "inEqSimp_commuteGeq" (formula "15") (term "1"))
                                    (rule "applyEq" (formula "15") (term "0,0,0,0") (ifseqformula "41"))
                                    (rule "replace_known_right" (formula "15") (term "0,0,0") (ifseqformula "62"))
                                    (builtin "One Step Simplification" (formula "15"))
                                    (rule "true_left" (formula "15"))
                                    (rule "allLeft" (formula "49") (inst "t=j_0"))
                                    (rule "inEqSimp_commuteGeq" (formula "49") (term "1"))
                                    (rule "applyEq" (formula "49") (term "1,0,0,0") (ifseqformula "40"))
                                    (rule "replaceKnownSelect_taclet1011111_16" (formula "49") (term "0,0,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet1011111_17" (formula "49") (term "0,0,0"))
                                    (rule "applyEq" (formula "49") (term "0,0,0") (ifseqformula "43"))
                                    (rule "eqSymm" (formula "49") (term "0,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "49") (term "1,0") (ifseqformula "41"))
                                    (rule "qeq_literals" (formula "49") (term "0,1,0"))
                                    (builtin "One Step Simplification" (formula "49"))
                                    (rule "inEqSimp_contradInEq1" (formula "49") (term "1") (ifseqformula "42"))
                                    (rule "inEqSimp_homoInEq1" (formula "49") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "49") (term "0,0,1"))
                                    (rule "add_literals" (formula "49") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "49") (term "1,0,0,1"))
                                    (rule "add_literals" (formula "49") (term "0,0,1"))
                                    (rule "leq_literals" (formula "49") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "49"))
                                    (rule "allLeft" (formula "12") (inst "t=Z(0(#))"))
                                    (rule "leq_literals" (formula "12") (term "1,0"))
                                    (builtin "One Step Simplification" (formula "12"))
                                    (rule "inEqSimp_commuteGeq" (formula "12") (term "1"))
                                    (rule "applyEq" (formula "12") (term "0,0,0") (ifseqformula "19"))
                                    (builtin "One Step Simplification" (formula "12"))
                                    (rule "true_left" (formula "12"))
                                    (rule "allLeft" (formula "13") (inst "t=Z(0(#))"))
                                    (rule "typeEqDerived" (formula "13") (term "0,0,0") (ifseqformula "19"))
                                    (builtin "One Step Simplification" (formula "13"))
                                    (rule "true_left" (formula "13"))
                                    (rule "allLeft" (formula "13") (inst "t=add(Z(neglit(1(#))),
    int::select(heap, self, IntLinkedList::$size))"))
                                    (rule "typeEqDerived" (formula "13") (term "0,0,0") (ifseqformula "18"))
                                    (builtin "One Step Simplification" (formula "13"))
                                    (rule "true_left" (formula "13"))
                                    (rule "allLeft" (formula "13") (inst "t=i_2_0"))
                                    (rule "typeEqDerived" (formula "13") (term "0,0,0") (ifseqformula "17"))
                                    (builtin "One Step Simplification" (formula "13"))
                                    (rule "true_left" (formula "13"))
                                    (rule "allLeft" (formula "12") (inst "t=i_2_0"))
                                    (rule "inEqSimp_commuteGeq" (formula "12") (term "1"))
                                    (rule "applyEq" (formula "12") (term "0,0,0,0") (ifseqformula "17"))
                                    (builtin "One Step Simplification" (formula "12"))
                                    (rule "true_left" (formula "12"))
                                    (rule "allLeft" (formula "20") (inst "t=j_0"))
                                    (rule "inEqSimp_commuteGeq" (formula "20") (term "1"))
                                    (rule "applyEq" (formula "20") (term "1,1,0,0") (ifseqformula "41"))
                                    (rule "inEqSimp_contradInEq1" (formula "20") (term "1,0") (ifseqformula "42"))
                                    (rule "qeq_literals" (formula "20") (term "0,1,0"))
                                    (builtin "One Step Simplification" (formula "20"))
                                    (rule "inEqSimp_contradInEq1" (formula "20") (term "1") (ifseqformula "43"))
                                    (rule "inEqSimp_homoInEq1" (formula "20") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,1"))
                                    (rule "add_literals" (formula "20") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "20") (term "1,0,0,1"))
                                    (rule "add_literals" (formula "20") (term "0,0,1"))
                                    (rule "leq_literals" (formula "20") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "20"))
                                    (rule "allLeft" (formula "12") (inst "t=add(Z(neglit(1(#))),
    int::select(heap, self, IntLinkedList::$size))"))
                                    (rule "inEqSimp_homoInEq0" (formula "12") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "12") (term "1,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "12") (term "1,0,1,0"))
                                    (rule "mul_literals" (formula "12") (term "0,1,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "12") (term "0,1,0"))
                                    (rule "add_literals" (formula "12") (term "0,0,1,0"))
                                    (rule "add_zero_left" (formula "12") (term "0,1,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "12") (term "1"))
                                    (rule "polySimp_mulComm0" (formula "12") (term "1,0,1"))
                                    (rule "polySimp_rightDist" (formula "12") (term "1,0,1"))
                                    (rule "mul_literals" (formula "12") (term "0,1,0,1"))
                                    (rule "polySimp_addAssoc" (formula "12") (term "0,1"))
                                    (rule "polySimp_addComm0" (formula "12") (term "0,0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,1"))
                                    (rule "add_literals" (formula "12") (term "1,1,0,1"))
                                    (rule "times_zero_1" (formula "12") (term "1,0,1"))
                                    (rule "add_literals" (formula "12") (term "0,1"))
                                    (rule "leq_literals" (formula "12") (term "1"))
                                    (builtin "One Step Simplification" (formula "12"))
                                    (rule "applyEq" (formula "12") (term "0,0,0") (ifseqformula "18"))
                                    (builtin "One Step Simplification" (formula "12"))
                                    (rule "true_left" (formula "12"))
                                    (rule "commute_or_2" (formula "24") (term "0"))
                                    (rule "seqGetAlphaCast" (formula "17") (term "0"))
                                    (rule "castDel" (formula "17") (term "0"))
                                    (builtin "One Step Simplification" (formula "17"))
                                    (rule "true_left" (formula "17"))
                                    (rule "seqGetAlphaCast" (formula "18") (term "0"))
                                    (rule "castDel" (formula "18") (term "0"))
                                    (builtin "One Step Simplification" (formula "18"))
                                    (rule "true_left" (formula "18"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "27") (term "0") (ifseqformula "8"))
                                    (rule "replace_known_left" (formula "27") (term "0") (ifseqformula "28"))
                                    (builtin "One Step Simplification" (formula "27"))
                                    (rule "true_left" (formula "27"))
                                    (rule "seqGetAlphaCast" (formula "41") (term "0"))
                                    (rule "castedGetAny" (formula "41") (term "0"))
                                    (builtin "One Step Simplification" (formula "41"))
                                    (rule "true_left" (formula "41"))
                                    (rule "seqGetAlphaCast" (formula "44") (term "0"))
                                    (rule "castDel" (formula "44") (term "0"))
                                    (builtin "One Step Simplification" (formula "44"))
                                    (rule "true_left" (formula "44"))
                                    (rule "ifthenelse_split" (formula "4") (term "0"))
                                    (branch "∃ int j; ( (IntNode)self.nodeseq[j] = (IntNode)self.nodeseq[i_2_0] ∧ j ≥ 0 ∧ j ≤ -1 + self.size) TRUE"
                                       (rule "exLeft" (formula "4") (inst "sk=j_2"))
                                       (rule "andLeft" (formula "4"))
                                       (rule "andLeft" (formula "4"))
                                       (rule "eqSymm" (formula "7"))
                                       (rule "inEqSimp_homoInEq0" (formula "6"))
                                       (rule "polySimp_addComm1" (formula "6") (term "0"))
                                       (rule "applyEq" (formula "68") (term "0") (ifseqformula "7"))
                                       (builtin "One Step Simplification" (formula "68"))
                                       (rule "false_right" (formula "68"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                       (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                       (rule "polySimp_rightDist" (formula "6") (term "1"))
                                       (rule "mul_literals" (formula "6") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                                       (rule "seqGetAlphaCast" (formula "31") (term "0,0"))
                                       (rule "castedGetAny" (formula "31") (term "0"))
                                       (builtin "One Step Simplification" (formula "31"))
                                       (rule "true_left" (formula "31"))
                                       (rule "commute_or_2" (formula "28") (term "0"))
                                       (rule "cut_direct" (formula "31") (term "1"))
                                       (branch "CUT: self.size ≤ 1 TRUE"
                                          (builtin "One Step Simplification" (formula "32"))
                                          (rule "true_left" (formula "32"))
                                          (rule "inEqSimp_antiSymm" (formula "39") (ifseqformula "31"))
                                          (rule "applyEq" (formula "18") (term "1,1,0") (ifseqformula "39"))
                                          (rule "applyEq" (formula "33") (term "1,1,1,0") (ifseqformula "39"))
                                          (rule "add_literals" (formula "33") (term "1,1,0"))
                                          (rule "applyEq" (formula "59") (term "1,1,1,0") (ifseqformula "39"))
                                          (rule "add_literals" (formula "59") (term "1,1,0"))
                                          (rule "applyEq" (formula "17") (term "1,1,1,0,0,1,0") (ifseqformula "39"))
                                          (rule "add_literals" (formula "17") (term "1,1,0,0,1,0"))
                                          (rule "applyEq" (formula "29") (term "1,1,0,0,0,0,0") (ifseqformula "39"))
                                          (rule "applyEq" (formula "55") (term "1,1,1,0,0,1,1,0,0,0,0,0") (ifseqformula "39"))
                                          (rule "add_literals" (formula "55") (term "1,1,0,0,1,1,0,0,0,0,0"))
                                          (rule "applyEq" (formula "51") (term "0") (ifseqformula "39"))
                                          (rule "inEqSimp_homoInEq1" (formula "51"))
                                          (rule "mul_literals" (formula "51") (term "1,0"))
                                          (rule "polySimp_addComm1" (formula "51") (term "0"))
                                          (rule "add_literals" (formula "51") (term "0,0"))
                                          (rule "add_zero_left" (formula "51") (term "0"))
                                          (rule "applyEq" (formula "53") (term "1,1,1,0,0,0,0,0") (ifseqformula "39"))
                                          (rule "add_literals" (formula "53") (term "1,1,0,0,0,0,0"))
                                          (rule "applyEq" (formula "31") (term "0") (ifseqformula "39"))
                                          (rule "leq_literals" (formula "31"))
                                          (rule "true_left" (formula "31"))
                                          (rule "applyEq" (formula "39") (term "0") (ifseqformula "38"))
                                          (rule "qeq_literals" (formula "39"))
                                          (rule "true_left" (formula "39"))
                                          (rule "applyEq" (formula "46") (term "1,1,0") (ifseqformula "38"))
                                          (rule "add_literals" (formula "46") (term "1,0"))
                                          (rule "applyEq" (formula "1") (term "0") (ifseqformula "38"))
                                          (rule "inEqSimp_homoInEq1" (formula "1"))
                                          (rule "mul_literals" (formula "1") (term "1,0"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "applyEq" (formula "55") (term "0,1") (ifseqformula "38"))
                                          (rule "inEqSimp_homoInEq0" (formula "55") (term "1"))
                                          (rule "mul_literals" (formula "55") (term "1,0,1"))
                                          (rule "polySimp_addComm1" (formula "55") (term "0,1"))
                                          (rule "add_literals" (formula "55") (term "0,0,1"))
                                          (rule "applyEq" (formula "6") (term "0") (ifseqformula "38"))
                                          (rule "inEqSimp_homoInEq1" (formula "6"))
                                          (rule "mul_literals" (formula "6") (term "1,0"))
                                          (rule "polySimp_addComm1" (formula "6") (term "0"))
                                          (rule "add_literals" (formula "6") (term "0,0"))
                                          (rule "add_zero_left" (formula "6") (term "0"))
                                          (rule "applyEq" (formula "10") (term "0") (ifseqformula "38"))
                                          (rule "inEqSimp_homoInEq1" (formula "10"))
                                          (rule "mul_literals" (formula "10") (term "1,0"))
                                          (rule "polySimp_addComm1" (formula "10") (term "0"))
                                          (rule "add_literals" (formula "10") (term "0,0"))
                                          (rule "applyEq" (formula "24") (term "1,1,0") (ifseqformula "38"))
                                          (rule "applyEq" (formula "29") (term "1,1,0,0,0") (ifseqformula "38"))
                                          (rule "applyEq" (formula "41") (term "1,1,0") (ifseqformula "38"))
                                          (rule "applyEq" (formula "36") (term "1,1,0") (ifseqformula "38"))
                                          (rule "add_literals" (formula "36") (term "1,0"))
                                          (rule "applyEq" (formula "57") (term "1,1,1,0,0,1,1,0,0,0,0,0") (ifseqformula "38"))
                                          (rule "add_literals" (formula "57") (term "1,1,0,0,1,1,0,0,0,0,0"))
                                          (rule "applyEq" (formula "28") (term "1,1,0") (ifseqformula "38"))
                                          (rule "applyEq" (formula "27") (term "1,1,0") (ifseqformula "38"))
                                          (rule "applyEq" (formula "31") (term "0,1") (ifseqformula "38"))
                                          (rule "inEqSimp_homoInEq0" (formula "31") (term "1"))
                                          (rule "mul_literals" (formula "31") (term "1,0,1"))
                                          (rule "polySimp_addComm1" (formula "31") (term "0,1"))
                                          (rule "add_literals" (formula "31") (term "0,0,1"))
                                          (rule "applyEq" (formula "59") (term "1,1,0,0") (ifseqformula "38"))
                                          (rule "applyEq" (formula "53") (term "1,1,0") (ifseqformula "38"))
                                          (rule "applyEq" (formula "16") (term "1,1,0") (ifseqformula "38"))
                                          (rule "applyEq" (formula "20") (term "1,1,0") (ifseqformula "38"))
                                          (rule "add_literals" (formula "20") (term "1,0"))
                                          (rule "applyEq" (formula "15") (term "1,1,0") (ifseqformula "38"))
                                          (rule "applyEq" (formula "42") (term "1,1,0") (ifseqformula "38"))
                                          (rule "applyEq" (formula "45") (term "0") (ifseqformula "38"))
                                          (rule "inEqSimp_homoInEq1" (formula "45"))
                                          (rule "mul_literals" (formula "45") (term "1,0"))
                                          (rule "polySimp_addComm1" (formula "45") (term "0"))
                                          (rule "add_literals" (formula "45") (term "0,0"))
                                          (rule "add_zero_left" (formula "45") (term "0"))
                                          (rule "applyEq" (formula "26") (term "1,1,1,0") (ifseqformula "38"))
                                          (rule "add_literals" (formula "26") (term "1,1,0"))
                                          (rule "applyEq" (formula "25") (term "1,1,0") (ifseqformula "38"))
                                          (rule "applyEq" (formula "20") (term "0") (ifseqformula "21"))
                                          (rule "eqSymm" (formula "20"))
                                          (rule "applyEq" (formula "36") (term "0") (ifseqformula "34"))
                                          (rule "eqSymm" (formula "36"))
                                          (rule "applyEq" (formula "46") (term "0") (ifseqformula "50"))
                                          (rule "eqSymm" (formula "46"))
                                          (rule "applyEq" (formula "37") (term "1") (ifseqformula "38"))
                                          (rule "applyEq" (formula "58") (term "1") (ifseqformula "38"))
                                          (rule "applyEq" (formula "39") (term "1") (ifseqformula "38"))
                                          (rule "applyEq" (formula "23") (term "1,1") (ifseqformula "36"))
                                          (rule "applyEq" (formula "35") (term "1,0") (ifseqformula "36"))
                                          (rule "applyEq" (formula "20") (term "1,0") (ifseqformula "35"))
                                          (builtin "One Step Simplification" (formula "20"))
                                          (rule "true_left" (formula "20"))
                                          (rule "applyEq" (formula "50") (term "1,1") (ifseqformula "34"))
                                          (rule "applyEq" (formula "25") (term "1,0,0,0,0") (ifseqformula "34"))
                                          (rule "applyEq" (formula "29") (term "1,0") (ifseqformula "34"))
                                          (rule "applyEq" (formula "41") (term "1") (ifseqformula "34"))
                                          (rule "applyEq" (formula "63") (term "0") (ifseqformula "34"))
                                          (rule "applyEq" (formula "44") (term "1,0") (ifseqformula "34"))
                                          (builtin "One Step Simplification" (formula "44"))
                                          (rule "true_left" (formula "44"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "52") (term "1"))
                                          (rule "mul_literals" (formula "52") (term "1,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "10"))
                                          (rule "mul_literals" (formula "10") (term "1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1"))
                                          (rule "mul_literals" (formula "30") (term "1,1"))
                                          (rule "inEqSimp_subsumption1" (formula "52") (term "1") (ifseqformula "9"))
                                          (rule "leq_literals" (formula "52") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "52"))
                                          (rule "true_left" (formula "52"))
                                          (rule "inEqSimp_contradInEq1" (formula "10") (ifseqformula "9"))
                                          (rule "qeq_literals" (formula "10") (term "0"))
                                          (builtin "One Step Simplification" (formula "10"))
                                          (rule "closeFalse" (formula "10"))
                                       )
                                       (branch "CUT: self.size ≤ 1 FALSE"
                                          (builtin "One Step Simplification" (formula "31"))
                                          (rule "inEqSimp_leqRight" (formula "63"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                          (rule "mul_literals" (formula "1") (term "1"))
                                          (rule "inEqSimp_subsumption1" (formula "40") (ifseqformula "1"))
                                          (rule "leq_literals" (formula "40") (term "0"))
                                          (builtin "One Step Simplification" (formula "40"))
                                          (rule "true_left" (formula "40"))
                                          (rule "allLeft" (formula "30") (inst "t=j_0"))
                                          (rule "inEqSimp_commuteGeq" (formula "30") (term "1,0,0,0,0"))
                                          (rule "applyEq" (formula "30") (term "1,0,0,0,0,0,0,0") (ifseqformula "45"))
                                          (rule "inEqSimp_contradInEq1" (formula "30") (term "1,0,0,0,0,0") (ifseqformula "46"))
                                          (rule "qeq_literals" (formula "30") (term "0,1,0,0,0,0,0"))
                                          (builtin "One Step Simplification" (formula "30"))
                                          (rule "inEqSimp_contradInEq1" (formula "30") (term "1,0,0,0,0") (ifseqformula "47"))
                                          (rule "inEqSimp_homoInEq1" (formula "30") (term "0,1,0,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,1,0,0,0,0"))
                                          (rule "add_literals" (formula "30") (term "1,1,0,0,1,0,0,0,0"))
                                          (rule "times_zero_1" (formula "30") (term "1,0,0,1,0,0,0,0"))
                                          (rule "add_zero_right" (formula "30") (term "0,0,1,0,0,0,0"))
                                          (rule "leq_literals" (formula "30") (term "0,1,0,0,0,0"))
                                          (builtin "One Step Simplification" (formula "30"))
                                          (rule "allLeft" (formula "59") (inst "t=j_0"))
                                          (rule "inEqSimp_homoInEq1" (formula "59") (term "1"))
                                          (rule "polySimp_addComm1" (formula "59") (term "0,1"))
                                          (rule "applyEq" (formula "59") (term "1,0,0,0") (ifseqformula "45"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "59") (term "1"))
                                          (rule "polySimp_mulComm0" (formula "59") (term "1,1"))
                                          (rule "polySimp_rightDist" (formula "59") (term "1,1"))
                                          (rule "mul_literals" (formula "59") (term "0,1,1"))
                                          (rule "polySimp_mulLiterals" (formula "59") (term "1,1,1"))
                                          (rule "polySimp_elimOne" (formula "59") (term "1,1,1"))
                                          (rule "inEqSimp_contradInEq1" (formula "59") (term "1,0") (ifseqformula "46"))
                                          (rule "qeq_literals" (formula "59") (term "0,1,0"))
                                          (builtin "One Step Simplification" (formula "59"))
                                          (rule "pullOutSelect" (formula "59") (term "0,0") (inst "selectSK=IntNode_next_4"))
                                          (rule "simplifySelectOfAnon" (formula "59"))
                                          (builtin "One Step Simplification" (formula "59") (ifInst ""  (formula "69")) (ifInst ""  (formula "38")))
                                          (rule "eqSymm" (formula "60") (term "0"))
                                          (rule "applyEq" (formula "59") (term "2,0") (ifseqformula "32"))
                                          (rule "elementOfUnion" (formula "59") (term "0,0"))
                                          (rule "elementOfSingleton" (formula "59") (term "0,0,0"))
                                          (builtin "One Step Simplification" (formula "59"))
                                          (rule "elementOfInfiniteUnion" (formula "59") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "59"))
                                          (rule "elementOfSingleton" (formula "59") (term "1,0,0,0"))
                                          (builtin "One Step Simplification" (formula "59"))
                                          (rule "applyEqReverse" (formula "60") (term "1,0") (ifseqformula "59"))
                                          (rule "hideAuxiliaryEq" (formula "59"))
                                          (rule "allLeft" (formula "35") (inst "t=j_0"))
                                          (rule "inEqSimp_homoInEq1" (formula "35") (term "1"))
                                          (rule "polySimp_addComm1" (formula "35") (term "0,1"))
                                          (rule "applyEq" (formula "35") (term "1,0,0,0") (ifseqformula "46"))
                                          (rule "eqSymm" (formula "35") (term "0,0"))
                                          (rule "applyEq" (formula "35") (term "1,0,0") (ifseqformula "32"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1"))
                                          (rule "polySimp_mulComm0" (formula "35") (term "1,1"))
                                          (rule "polySimp_rightDist" (formula "35") (term "1,1"))
                                          (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1"))
                                          (rule "mul_literals" (formula "35") (term "0,1,1"))
                                          (rule "polySimp_elimOne" (formula "35") (term "1,1,1"))
                                          (rule "inEqSimp_contradInEq1" (formula "35") (term "1,0") (ifseqformula "47"))
                                          (rule "qeq_literals" (formula "35") (term "0,1,0"))
                                          (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "60")))
                                          (rule "true_left" (formula "35"))
                                          (rule "commute_and_2" (formula "53") (term "0,0,0,0"))
                                          (rule "cut_direct" (formula "57") (term "1"))
                                          (branch "CUT: self.size ≤ 2 + i_2_0 TRUE"
                                             (builtin "One Step Simplification" (formula "58"))
                                             (rule "true_left" (formula "58"))
                                             (rule "replace_known_left" (formula "34") (term "1") (ifseqformula "57"))
                                             (builtin "One Step Simplification" (formula "34"))
                                             (rule "true_left" (formula "34"))
                                             (rule "inEqSimp_antiSymm" (formula "11") (ifseqformula "56"))
                                             (rule "applyEq" (formula "62") (term "1,1,0,0") (ifseqformula "11"))
                                             (rule "applyEq" (formula "28") (term "1,1,1,0") (ifseqformula "11"))
                                             (rule "polySimp_addAssoc" (formula "28") (term "1,1,0"))
                                             (rule "add_literals" (formula "28") (term "0,1,1,0"))
                                             (rule "applyEq" (formula "32") (term "1,1,0,0,0") (ifseqformula "11"))
                                             (rule "applyEq" (formula "1") (term "0") (ifseqformula "11"))
                                             (rule "inEqSimp_homoInEq1" (formula "1"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                             (rule "mul_literals" (formula "1") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                             (rule "add_literals" (formula "1") (term "0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0"))
                                             (rule "applyEq" (formula "2") (term "0") (ifseqformula "11"))
                                             (rule "inEqSimp_homoInEq1" (formula "2"))
                                             (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                             (rule "mul_literals" (formula "2") (term "0,1,0"))
                                             (rule "polySimp_addComm1" (formula "2") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                             (rule "add_literals" (formula "2") (term "0,0,0"))
                                             (rule "applyEq" (formula "31") (term "1,1,0,0") (ifseqformula "11"))
                                             (rule "applyEq" (formula "59") (term "0,1") (ifseqformula "11"))
                                             (rule "inEqSimp_homoInEq0" (formula "59") (term "1"))
                                             (rule "polySimp_mulComm0" (formula "59") (term "1,0,1"))
                                             (rule "polySimp_rightDist" (formula "59") (term "1,0,1"))
                                             (rule "mul_literals" (formula "59") (term "0,1,0,1"))
                                             (rule "polySimp_addComm1" (formula "59") (term "0,1"))
                                             (rule "polySimp_addAssoc" (formula "59") (term "0,0,1"))
                                             (rule "add_literals" (formula "59") (term "0,0,0,1"))
                                             (rule "applyEq" (formula "55") (term "1,1,0") (ifseqformula "11"))
                                             (rule "applyEq" (formula "53") (term "1,1,1,0,0,0,0") (ifseqformula "11"))
                                             (rule "polySimp_addAssoc" (formula "53") (term "1,1,0,0,0,0"))
                                             (rule "add_literals" (formula "53") (term "0,1,1,0,0,0,0"))
                                             (rule "applyEq" (formula "57") (term "0") (ifseqformula "11"))
                                             (rule "inEqSimp_homoInEq0" (formula "57"))
                                             (rule "polySimp_pullOutFactor1" (formula "57") (term "0"))
                                             (rule "add_literals" (formula "57") (term "1,0"))
                                             (rule "times_zero_1" (formula "57") (term "0"))
                                             (rule "qeq_literals" (formula "57"))
                                             (rule "true_left" (formula "57"))
                                             (rule "applyEq" (formula "7") (term "0") (ifseqformula "11"))
                                             (rule "inEqSimp_homoInEq1" (formula "7"))
                                             (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "7") (term "1,0"))
                                             (rule "mul_literals" (formula "7") (term "0,1,0"))
                                             (rule "polySimp_addComm1" (formula "7") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                                             (rule "add_literals" (formula "7") (term "0,0,0"))
                                             (rule "applyEq" (formula "20") (term "1,1,0") (ifseqformula "11"))
                                             (rule "applyEq" (formula "47") (term "0") (ifseqformula "11"))
                                             (rule "inEqSimp_homoInEq1" (formula "47"))
                                             (rule "polySimp_mulComm0" (formula "47") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "47") (term "1,0"))
                                             (rule "mul_literals" (formula "47") (term "0,1,0"))
                                             (rule "polySimp_addComm1" (formula "47") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "47") (term "0,0"))
                                             (rule "add_literals" (formula "47") (term "0,0,0"))
                                             (rule "applyEq" (formula "35") (term "1,1,1,0") (ifseqformula "11"))
                                             (rule "polySimp_addAssoc" (formula "35") (term "1,1,0"))
                                             (rule "add_literals" (formula "35") (term "0,1,1,0"))
                                             (rule "applyEq" (formula "39") (term "1,1,0") (ifseqformula "11"))
                                             (rule "polySimp_addAssoc" (formula "39") (term "1,0"))
                                             (rule "add_literals" (formula "39") (term "0,1,0"))
                                             (rule "applyEq" (formula "27") (term "1,1,0") (ifseqformula "11"))
                                             (rule "applyEq" (formula "59") (term "1,1,1,0,0,1,1,0,0,0,0,0") (ifseqformula "11"))
                                             (rule "polySimp_addAssoc" (formula "59") (term "1,1,0,0,1,1,0,0,0,0,0"))
                                             (rule "add_literals" (formula "59") (term "0,1,1,0,0,1,1,0,0,0,0,0"))
                                             (rule "applyEq" (formula "17") (term "1,1,0") (ifseqformula "11"))
                                             (rule "applyEq" (formula "29") (term "1,1,0") (ifseqformula "11"))
                                             (rule "applyEq" (formula "30") (term "1,1,0") (ifseqformula "11"))
                                             (rule "applyEq" (formula "55") (term "1,1,1,0,0,1,1,0,0,0,0,0") (ifseqformula "11"))
                                             (rule "polySimp_addAssoc" (formula "55") (term "1,1,0,0,1,1,0,0,0,0,0"))
                                             (rule "add_literals" (formula "55") (term "0,1,1,0,0,1,1,0,0,0,0,0"))
                                             (rule "applyEq" (formula "59") (term "1,1,1,0") (ifseqformula "11"))
                                             (rule "polySimp_addAssoc" (formula "59") (term "1,1,0"))
                                             (rule "add_literals" (formula "59") (term "0,1,1,0"))
                                             (rule "applyEq" (formula "26") (term "1,1,0") (ifseqformula "11"))
                                             (rule "applyEq" (formula "19") (term "1,1,1,0,0,1,0") (ifseqformula "11"))
                                             (rule "polySimp_addAssoc" (formula "19") (term "1,1,0,0,1,0"))
                                             (rule "add_literals" (formula "19") (term "0,1,1,0,0,1,0"))
                                             (rule "applyEq" (formula "48") (term "1,1,0") (ifseqformula "11"))
                                             (rule "polySimp_addAssoc" (formula "48") (term "1,0"))
                                             (rule "add_literals" (formula "48") (term "0,1,0"))
                                             (rule "applyEq" (formula "43") (term "1,1,0") (ifseqformula "11"))
                                             (rule "applyEq" (formula "22") (term "1,1,0") (ifseqformula "11"))
                                             (rule "polySimp_addAssoc" (formula "22") (term "1,0"))
                                             (rule "add_literals" (formula "22") (term "0,1,0"))
                                             (rule "applyEq" (formula "44") (term "1,1,0") (ifseqformula "11"))
                                             (rule "applyEq" (formula "32") (term "1,1,0,0,0,0,0") (ifseqformula "11"))
                                             (rule "applyEq" (formula "18") (term "1,1,0") (ifseqformula "11"))
                                             (rule "applyEq" (formula "51") (term "0") (ifseqformula "11"))
                                             (rule "inEqSimp_homoInEq1" (formula "51"))
                                             (rule "polySimp_mulComm0" (formula "51") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "51") (term "1,0"))
                                             (rule "mul_literals" (formula "51") (term "0,1,0"))
                                             (rule "polySimp_addComm1" (formula "51") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "51") (term "0,0"))
                                             (rule "add_literals" (formula "51") (term "0,0,0"))
                                             (rule "applyEq" (formula "12") (term "0") (ifseqformula "11"))
                                             (rule "inEqSimp_homoInEq1" (formula "12"))
                                             (rule "polySimp_pullOutFactor1" (formula "12") (term "0"))
                                             (rule "add_literals" (formula "12") (term "1,0"))
                                             (rule "times_zero_1" (formula "12") (term "0"))
                                             (rule "leq_literals" (formula "12"))
                                             (rule "true_left" (formula "12"))
                                             (rule "applyEq" (formula "23") (term "0") (ifseqformula "21"))
                                             (rule "eqSymm" (formula "23"))
                                             (rule "applyEq" (formula "52") (term "1,2,0") (ifseqformula "38"))
                                             (rule "applyEq" (formula "52") (term "1,1,0,0,0,0,0") (ifseqformula "38"))
                                             (rule "applyEq" (formula "56") (term "1") (ifseqformula "38"))
                                             (rule "applyEq" (formula "55") (term "1,0,0,0") (ifseqformula "38"))
                                             (rule "replace_known_left" (formula "55") (term "0,0") (ifseqformula "37"))
                                             (builtin "One Step Simplification" (formula "55"))
                                             (rule "hideAuxiliaryEq" (formula "55"))
                                             (rule "applyEq" (formula "52") (term "1,1,0") (ifseqformula "38"))
                                             (rule "applyEq" (formula "29") (term "1,0,0,0,0,0") (ifseqformula "38"))
                                             (rule "applyEq" (formula "52") (term "1") (ifseqformula "47"))
                                             (builtin "One Step Simplification" (formula "52"))
                                             (rule "eqSymm" (formula "52") (term "1"))
                                             (rule "applyEq" (formula "62") (term "0") (ifseqformula "38"))
                                             (rule "applyEq" (formula "58") (term "1") (ifseqformula "11"))
                                             (rule "applyEq" (formula "40") (term "1") (ifseqformula "11"))
                                             (rule "applyEq" (formula "39") (term "1") (ifseqformula "11"))
                                             (rule "applyEq" (formula "23") (term "1,0") (ifseqformula "38"))
                                             (builtin "One Step Simplification" (formula "23"))
                                             (rule "true_left" (formula "23"))
                                             (rule "applyEq" (formula "51") (term "1,0,0,1,0") (ifseqformula "37"))
                                             (rule "replace_known_left" (formula "51") (term "0,1,0") (ifseqformula "36"))
                                             (builtin "One Step Simplification" (formula "51"))
                                             (rule "inEqSimp_invertInEq0" (formula "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                             (rule "times_zero_2" (formula "1") (term "1"))
                                             (rule "polySimp_elimOne" (formula "1") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1"))
                                             (rule "mul_literals" (formula "1") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "54") (term "1"))
                                             (rule "polySimp_mulComm0" (formula "54") (term "1,1"))
                                             (rule "polySimp_rightDist" (formula "54") (term "1,1"))
                                             (rule "mul_literals" (formula "54") (term "0,1,1"))
                                             (rule "polySimp_mulLiterals" (formula "54") (term "1,1,1"))
                                             (rule "polySimp_elimOne" (formula "54") (term "1,1,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                                             (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                             (rule "polySimp_rightDist" (formula "6") (term "1"))
                                             (rule "mul_literals" (formula "6") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "44"))
                                             (rule "polySimp_mulComm0" (formula "44") (term "1"))
                                             (rule "polySimp_rightDist" (formula "44") (term "1"))
                                             (rule "mul_literals" (formula "44") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "44") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "44") (term "1,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "48"))
                                             (rule "polySimp_mulComm0" (formula "48") (term "1"))
                                             (rule "polySimp_rightDist" (formula "48") (term "1"))
                                             (rule "mul_literals" (formula "48") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "48") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "48") (term "1,1"))
                                             (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "1"))
                                             (rule "mul_literals" (formula "2") (term "0,0"))
                                             (rule "add_zero_left" (formula "2") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                             (rule "mul_literals" (formula "2") (term "1"))
                                             (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "10"))
                                             (rule "leq_literals" (formula "2") (term "0"))
                                             (builtin "One Step Simplification" (formula "2"))
                                             (rule "true_left" (formula "2"))
                                             (rule "inEqSimp_exactShadow3" (formula "43") (ifseqformula "44"))
                                             (rule "times_zero_1" (formula "43") (term "0,0"))
                                             (rule "add_zero_left" (formula "43") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "43"))
                                             (rule "mul_literals" (formula "43") (term "1"))
                                             (rule "inEqSimp_subsumption1" (formula "43") (ifseqformula "9"))
                                             (rule "leq_literals" (formula "43") (term "0"))
                                             (builtin "One Step Simplification" (formula "43"))
                                             (rule "true_left" (formula "43"))
                                             (rule "inEqSimp_exactShadow3" (formula "47") (ifseqformula "48"))
                                             (rule "times_zero_1" (formula "47") (term "0,0"))
                                             (rule "add_zero_left" (formula "47") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "47"))
                                             (rule "mul_literals" (formula "47") (term "1"))
                                             (rule "inEqSimp_subsumption1" (formula "47") (ifseqformula "9"))
                                             (rule "leq_literals" (formula "47") (term "0"))
                                             (builtin "One Step Simplification" (formula "47"))
                                             (rule "true_left" (formula "47"))
                                             (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "6"))
                                             (rule "times_zero_1" (formula "5") (term "0,0"))
                                             (rule "add_zero_left" (formula "5") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                             (rule "mul_literals" (formula "5") (term "1"))
                                             (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "10"))
                                             (rule "leq_literals" (formula "5") (term "0"))
                                             (builtin "One Step Simplification" (formula "5"))
                                             (rule "true_left" (formula "5"))
                                             (rule "inEqSimp_or_weaken3" (formula "27") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "27") (term "1,0,1,0"))
                                             (rule "add_literals" (formula "27") (term "0,1,0,1,0"))
                                             (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "25")))
                                             (rule "true_left" (formula "27"))
                                             (rule "seqGetAlphaCast" (formula "3") (term "0"))
                                             (rule "castedGetAny" (formula "3") (term "0"))
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "true_left" (formula "3"))
                                             (rule "seqGetAlphaCast" (formula "45") (term "0"))
                                             (rule "castedGetAny" (formula "45") (term "0"))
                                             (builtin "One Step Simplification" (formula "45"))
                                             (rule "true_left" (formula "45"))
                                             (rule "seqGetAlphaCast" (formula "48") (term "0"))
                                             (rule "castDel" (formula "48") (term "0"))
                                             (builtin "One Step Simplification" (formula "48"))
                                             (rule "true_left" (formula "48"))
                                             (rule "seqGetAlphaCast" (formula "50") (term "0"))
                                             (rule "castDel" (formula "50") (term "0"))
                                             (builtin "One Step Simplification" (formula "50"))
                                             (rule "true_left" (formula "50"))
                                             (rule "seqGetAlphaCast" (formula "22") (term "0"))
                                             (rule "castDel" (formula "22") (term "0"))
                                             (builtin "One Step Simplification" (formula "22"))
                                             (rule "true_left" (formula "22"))
                                             (rule "commute_and" (formula "49") (term "0,0,0"))
                                             (rule "seqGetAlphaCast" (formula "4") (term "0"))
                                             (rule "castedGetAny" (formula "4") (term "0"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "true_left" (formula "4"))
                                             (rule "seqGetAlphaCast" (formula "53") (term "0,0"))
                                             (rule "castedGetAny" (formula "53") (term "0"))
                                             (builtin "One Step Simplification" (formula "53"))
                                             (rule "true_left" (formula "53"))
                                             (rule "allLeft" (formula "26") (inst "t=j_1_0"))
                                             (rule "replace_known_left" (formula "26") (term "0,0,0,0") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "66")))
                                             (rule "inEqSimp_contradInEq1" (formula "26") (term "0") (ifseqformula "2"))
                                             (rule "qeq_literals" (formula "26") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "26"))
                                             (rule "inEqSimp_contradEq7" (formula "66") (ifseqformula "26"))
                                             (rule "polySimp_mulComm0" (formula "66") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "66") (term "0,0"))
                                             (rule "add_literals" (formula "66") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "66") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "66") (term "0,0"))
                                             (rule "leq_literals" (formula "66") (term "0"))
                                             (builtin "One Step Simplification" (formula "66"))
                                             (rule "false_right" (formula "66"))
                                             (rule "inEqSimp_contradInEq0" (formula "26") (ifseqformula "1"))
                                             (rule "andLeft" (formula "26"))
                                             (rule "inEqSimp_homoInEq1" (formula "26"))
                                             (rule "polySimp_mulComm0" (formula "26") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "26") (term "1,0"))
                                             (rule "mul_literals" (formula "26") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "26") (term "0"))
                                             (rule "polySimp_addComm1" (formula "26") (term "0,0"))
                                             (rule "add_literals" (formula "26") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "26") (term "0"))
                                             (rule "add_literals" (formula "26") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "26") (term "1,0"))
                                             (rule "add_zero_right" (formula "26") (term "0"))
                                             (rule "leq_literals" (formula "26"))
                                             (rule "closeFalse" (formula "26"))
                                          )
                                          (branch "CUT: self.size ≤ 2 + i_2_0 FALSE"
                                             (builtin "One Step Simplification" (formula "57"))
                                             (rule "applyEqReverse" (formula "56") (term "1") (ifseqformula "57"))
                                             (rule "hideAuxiliaryEq" (formula "57"))
                                             (rule "replace_known_right" (formula "34") (term "1") (ifseqformula "64"))
                                             (builtin "One Step Simplification" (formula "34"))
                                             (rule "inEqSimp_leqRight" (formula "64"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                             (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0,0"))
                                             (rule "applyEq" (formula "57") (term "1,0") (ifseqformula "35"))
                                             (builtin "One Step Simplification" (formula "57"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1"))
                                             (rule "mul_literals" (formula "1") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                             (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "1"))
                                             (rule "inEqSimp_homoInEq0" (formula "12") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "12") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "12") (term "1,0,0"))
                                             (rule "mul_literals" (formula "12") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "12") (term "0,0"))
                                             (rule "polySimp_addComm1" (formula "12") (term "0,0,0"))
                                             (rule "add_literals" (formula "12") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0"))
                                             (rule "add_literals" (formula "12") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "12") (term "1,0,0"))
                                             (rule "add_literals" (formula "12") (term "0,0"))
                                             (rule "qeq_literals" (formula "12") (term "0"))
                                             (builtin "One Step Simplification" (formula "12"))
                                             (rule "true_left" (formula "12"))
                                             (rule "seqGetAlphaCast" (formula "57") (term "1"))
                                             (rule "castedGetAny" (formula "57") (term "0"))
                                             (builtin "One Step Simplification" (formula "57"))
                                             (rule "true_left" (formula "57"))
                                             (rule "seqGetAlphaCast" (formula "5") (term "0"))
                                             (rule "castedGetAny" (formula "5") (term "0"))
                                             (builtin "One Step Simplification" (formula "5"))
                                             (rule "true_left" (formula "5"))
                                             (rule "commute_or_2" (formula "30") (term "0"))
                                             (rule "seqGetAlphaCast" (formula "23") (term "0"))
                                             (rule "castDel" (formula "23") (term "0"))
                                             (builtin "One Step Simplification" (formula "23"))
                                             (rule "true_left" (formula "23"))
                                             (rule "allLeft" (formula "19") (inst "t=j_1_0"))
                                             (rule "inEqSimp_commuteGeq" (formula "19") (term "1"))
                                             (rule "applyEq" (formula "19") (term "0,0,0,0") (ifseqformula "5"))
                                             (rule "replace_known_right" (formula "19") (term "0,0,0") (ifseqformula "69"))
                                             (builtin "One Step Simplification" (formula "19"))
                                             (rule "true_left" (formula "19"))
                                             (rule "allLeft" (formula "43") (inst "t=add(Z(1(#)), i_2_0)"))
                                             (rule "inEqSimp_commuteGeq" (formula "43") (term "1"))
                                             (rule "inEqSimp_homoInEq0" (formula "43") (term "1,0"))
                                             (rule "polySimp_mulComm0" (formula "43") (term "1,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "43") (term "1,0,1,0"))
                                             (rule "mul_literals" (formula "43") (term "0,1,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "43") (term "0,1,0"))
                                             (rule "add_literals" (formula "43") (term "0,0,1,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "43") (term "1,0"))
                                             (rule "polySimp_mulLiterals" (formula "43") (term "0,1,0"))
                                             (rule "polySimp_elimOne" (formula "43") (term "0,1,0"))
                                             (rule "inEqSimp_contradInEq1" (formula "43") (term "1") (ifseqformula "1"))
                                             (rule "inEqSimp_homoInEq1" (formula "43") (term "0,1"))
                                             (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "43") (term "1,0,0,1"))
                                             (rule "mul_literals" (formula "43") (term "0,1,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "43") (term "0,0,1"))
                                             (rule "polySimp_addComm1" (formula "43") (term "0,0,0,1"))
                                             (rule "add_literals" (formula "43") (term "0,0,0,0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "43") (term "0,0,1"))
                                             (rule "add_literals" (formula "43") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "43") (term "1,0,0,1"))
                                             (rule "add_literals" (formula "43") (term "0,0,1"))
                                             (rule "leq_literals" (formula "43") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "43"))
                                             (rule "inEqSimp_contradInEq1" (formula "43") (term "1") (ifseqformula "11"))
                                             (rule "qeq_literals" (formula "43") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "43"))
                                             (rule "notLeft" (formula "43"))
                                             (rule "allLeft" (formula "55") (inst "t=j_1_0"))
                                             (rule "inEqSimp_commuteGeq" (formula "55") (term "1"))
                                             (rule "applyEq" (formula "55") (term "1,0,0,0") (ifseqformula "5"))
                                             (rule "replaceKnownSelect_taclet1011111_15" (formula "55") (term "0,0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet11011111_20" (formula "55") (term "0,0,0"))
                                             (rule "eqSymm" (formula "55") (term "0,0"))
                                             (rule "applyEq" (formula "55") (term "1,0,0") (ifseqformula "9"))
                                             (rule "inEqSimp_contradInEq1" (formula "55") (term "1,0") (ifseqformula "4"))
                                             (rule "qeq_literals" (formula "55") (term "0,1,0"))
                                             (builtin "One Step Simplification" (formula "55"))
                                             (rule "inEqSimp_contradInEq1" (formula "55") (term "1") (ifseqformula "3"))
                                             (rule "inEqSimp_homoInEq1" (formula "55") (term "0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "55") (term "0,0,1"))
                                             (rule "add_literals" (formula "55") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "55") (term "1,0,0,1"))
                                             (rule "add_literals" (formula "55") (term "0,0,1"))
                                             (rule "leq_literals" (formula "55") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "55"))
                                             (rule "allLeft" (formula "56") (inst "t=j_1"))
                                             (rule "inEqSimp_commuteGeq" (formula "56") (term "1"))
                                             (rule "applyEq" (formula "56") (term "1,0,0,0") (ifseqformula "49"))
                                             (rule "replaceKnownSelect_taclet1011111_18" (formula "56") (term "0,0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet1011111_19" (formula "56") (term "0,0,0"))
                                             (rule "eqSymm" (formula "56") (term "0,0"))
                                             (rule "applyEq" (formula "56") (term "1,0,0") (ifseqformula "52"))
                                             (rule "inEqSimp_contradInEq1" (formula "56") (term "1") (ifseqformula "51"))
                                             (rule "inEqSimp_homoInEq1" (formula "56") (term "0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "56") (term "0,0,1"))
                                             (rule "add_literals" (formula "56") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "56") (term "1,0,0,1"))
                                             (rule "add_literals" (formula "56") (term "0,0,1"))
                                             (rule "leq_literals" (formula "56") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "56"))
                                             (rule "inEqSimp_contradInEq1" (formula "56") (term "1") (ifseqformula "50"))
                                             (rule "qeq_literals" (formula "56") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "56"))
                                             (rule "allLeft" (formula "17") (inst "t=add(Z(1(#)), i_2_0)"))
                                             (rule "typeEqDerived" (formula "17") (term "0,0,0") (ifseqformula "24"))
                                             (builtin "One Step Simplification" (formula "17"))
                                             (rule "true_left" (formula "17"))
                                             (rule "allLeft" (formula "19") (inst "t=j_1"))
                                             (rule "inEqSimp_commuteGeq" (formula "19") (term "1"))
                                             (rule "applyEq" (formula "19") (term "0,0,0,0") (ifseqformula "50"))
                                             (rule "replace_known_right" (formula "19") (term "0,0,0") (ifseqformula "70"))
                                             (builtin "One Step Simplification" (formula "19"))
                                             (rule "true_left" (formula "19"))
                                             (rule "allLeft" (formula "25") (inst "t=j_1"))
                                             (rule "inEqSimp_commuteGeq" (formula "25") (term "1"))
                                             (rule "applyEq" (formula "25") (term "1,1,0,0") (ifseqformula "50"))
                                             (rule "inEqSimp_contradInEq1" (formula "25") (term "1") (ifseqformula "52"))
                                             (rule "inEqSimp_homoInEq1" (formula "25") (term "0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,1"))
                                             (rule "add_literals" (formula "25") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "25") (term "1,0,0,1"))
                                             (rule "add_literals" (formula "25") (term "0,0,1"))
                                             (rule "leq_literals" (formula "25") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "25"))
                                             (rule "inEqSimp_contradInEq1" (formula "25") (term "1") (ifseqformula "51"))
                                             (rule "qeq_literals" (formula "25") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "25"))
                                             (rule "allLeft" (formula "16") (inst "t=add(Z(1(#)), i_2_0)"))
                                             (rule "inEqSimp_commuteGeq" (formula "16") (term "1"))
                                             (rule "inEqSimp_homoInEq0" (formula "16") (term "1,0"))
                                             (rule "polySimp_mulComm0" (formula "16") (term "1,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "16") (term "1,0,1,0"))
                                             (rule "mul_literals" (formula "16") (term "0,1,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "16") (term "0,1,0"))
                                             (rule "add_literals" (formula "16") (term "0,0,1,0"))
                                             (rule "applyEq" (formula "16") (term "0,0,0,0") (ifseqformula "24"))
                                             (builtin "One Step Simplification" (formula "16"))
                                             (rule "true_left" (formula "16"))
                                             (rule "allLeft" (formula "26") (inst "t=j_1_0"))
                                             (rule "inEqSimp_commuteGeq" (formula "26") (term "1"))
                                             (rule "applyEq" (formula "26") (term "1,1,0,0") (ifseqformula "5"))
                                             (rule "inEqSimp_contradInEq1" (formula "26") (term "1") (ifseqformula "3"))
                                             (rule "inEqSimp_homoInEq1" (formula "26") (term "0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,1"))
                                             (rule "add_literals" (formula "26") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "26") (term "1,0,0,1"))
                                             (rule "add_literals" (formula "26") (term "0,0,1"))
                                             (rule "leq_literals" (formula "26") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "26"))
                                             (rule "inEqSimp_contradInEq1" (formula "26") (term "1") (ifseqformula "4"))
                                             (rule "qeq_literals" (formula "26") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "26"))
                                             (rule "allLeft" (formula "46") (inst "t=add(Z(1(#)), i_2_0)"))
                                             (rule "typeEqDerived2" (formula "46") (term "0,0,0") (ifseqformula "56"))
                                             (builtin "One Step Simplification" (formula "46"))
                                             (rule "true_left" (formula "46"))
                                             (rule "seqGetAlphaCast" (formula "55") (term "1"))
                                             (rule "castDel" (formula "55") (term "0"))
                                             (builtin "One Step Simplification" (formula "55"))
                                             (rule "true_left" (formula "55"))
                                             (rule "seqGetAlphaCast" (formula "51") (term "0"))
                                             (rule "castedGetAny" (formula "51") (term "0"))
                                             (builtin "One Step Simplification" (formula "51"))
                                             (rule "true_left" (formula "51"))
                                             (rule "seqGetAlphaCast" (formula "54") (term "0"))
                                             (rule "castDel" (formula "54") (term "0"))
                                             (builtin "One Step Simplification" (formula "54"))
                                             (rule "true_left" (formula "54"))
                                             (rule "commute_and" (formula "55") (term "0,0,0,0,0"))
                                             (rule "allLeft" (formula "30") (inst "t=j_1_0"))
                                             (rule "replace_known_left" (formula "30") (term "0,0,0,0") (ifseqformula "5"))
                                             (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "77")))
                                             (rule "inEqSimp_commuteGeq" (formula "30") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "30") (term "0") (ifseqformula "4"))
                                             (rule "qeq_literals" (formula "30") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "30"))
                                             (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "30"))
                                             (rule "andLeft" (formula "3"))
                                             (rule "inEqSimp_homoInEq1" (formula "3"))
                                             (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                             (rule "add_literals" (formula "3") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "3") (term "1,0"))
                                             (rule "add_literals" (formula "3") (term "0"))
                                             (rule "leq_literals" (formula "3"))
                                             (rule "closeFalse" (formula "3"))
                                          )
                                       )
                                    )
                                    (branch "∃ int j; ( (IntNode)self.nodeseq[j] = (IntNode)self.nodeseq[i_2_0] ∧ j ≥ 0 ∧ j ≤ -1 + self.size) FALSE"
                                       (rule "eqSymm" (formula "4"))
                                       (rule "applyEq" (formula "66") (term "0") (ifseqformula "4"))
                                       (builtin "One Step Simplification" (formula "66"))
                                       (rule "false_right" (formula "66"))
                                       (rule "nnf_ex2all" (formula "60"))
                                       (rule "nnf_notAnd" (formula "1") (term "0"))
                                       (rule "inEqSimp_notLeq" (formula "1") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0"))
                                       (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0,1,0"))
                                       (rule "add_zero_left" (formula "1") (term "0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1,1,0"))
                                       (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_notGeq" (formula "1") (term "1,0,0"))
                                       (rule "times_zero_1" (formula "1") (term "1,0,0,1,0,0"))
                                       (rule "add_zero_right" (formula "1") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1,0,0"))
                                       (rule "mul_literals" (formula "1") (term "1,1,0,0"))
                                       (rule "seqGetAlphaCast" (formula "29") (term "0,0"))
                                       (rule "castedGetAny" (formula "29") (term "0"))
                                       (builtin "One Step Simplification" (formula "29"))
                                       (rule "true_left" (formula "29"))
                                       (rule "commute_or_2" (formula "26") (term "0"))
                                       (rule "cut_direct" (formula "29") (term "1"))
                                       (branch "CUT: self.size ≤ 1 TRUE"
                                          (builtin "One Step Simplification" (formula "30"))
                                          (rule "true_left" (formula "30"))
                                          (rule "inEqSimp_antiSymm" (formula "37") (ifseqformula "29"))
                                          (rule "applyEq" (formula "53") (term "1,1,1,0,0,1,1,0,0,0,0,0") (ifseqformula "37"))
                                          (rule "add_literals" (formula "53") (term "1,1,0,0,1,1,0,0,0,0,0"))
                                          (rule "applyEq" (formula "27") (term "1,1,0,0,0") (ifseqformula "37"))
                                          (rule "applyEq" (formula "1") (term "1,1,0") (ifseqformula "37"))
                                          (rule "applyEq" (formula "15") (term "1,1,1,0,0,1,0") (ifseqformula "37"))
                                          (rule "add_literals" (formula "15") (term "1,1,0,0,1,0"))
                                          (rule "applyEq" (formula "55") (term "0,1") (ifseqformula "37"))
                                          (rule "inEqSimp_homoInEq0" (formula "55") (term "1"))
                                          (rule "mul_literals" (formula "55") (term "1,0,1"))
                                          (rule "polySimp_addComm1" (formula "55") (term "0,1"))
                                          (rule "add_literals" (formula "55") (term "0,0,1"))
                                          (rule "applyEq" (formula "2") (term "0") (ifseqformula "37"))
                                          (rule "inEqSimp_homoInEq1" (formula "2"))
                                          (rule "mul_literals" (formula "2") (term "1,0"))
                                          (rule "polySimp_addComm1" (formula "2") (term "0"))
                                          (rule "add_literals" (formula "2") (term "0,0"))
                                          (rule "add_zero_left" (formula "2") (term "0"))
                                          (rule "applyEq" (formula "51") (term "1,1,1,0,0,0,0,0") (ifseqformula "37"))
                                          (rule "add_literals" (formula "51") (term "1,1,0,0,0,0,0"))
                                          (rule "applyEq" (formula "35") (term "1,1,0") (ifseqformula "37"))
                                          (rule "add_literals" (formula "35") (term "1,0"))
                                          (rule "applyEq" (formula "45") (term "0") (ifseqformula "37"))
                                          (rule "inEqSimp_homoInEq1" (formula "45"))
                                          (rule "mul_literals" (formula "45") (term "1,0"))
                                          (rule "polySimp_addComm1" (formula "45") (term "0"))
                                          (rule "add_literals" (formula "45") (term "0,0"))
                                          (rule "add_zero_left" (formula "45") (term "0"))
                                          (rule "applyEq" (formula "57") (term "1,1,1,0") (ifseqformula "37"))
                                          (rule "add_literals" (formula "57") (term "1,1,0"))
                                          (rule "applyEq" (formula "46") (term "1,1,0") (ifseqformula "37"))
                                          (rule "add_literals" (formula "46") (term "1,0"))
                                          (rule "applyEq" (formula "57") (term "1,1,1,0,0,1,1,0,0,0,0,0") (ifseqformula "37"))
                                          (rule "add_literals" (formula "57") (term "1,1,0,0,1,1,0,0,0,0,0"))
                                          (rule "applyEq" (formula "22") (term "1,1,0") (ifseqformula "37"))
                                          (rule "applyEq" (formula "27") (term "1,1,0,0,0,0,0") (ifseqformula "37"))
                                          (rule "applyEq" (formula "8") (term "0") (ifseqformula "37"))
                                          (rule "inEqSimp_homoInEq1" (formula "8"))
                                          (rule "mul_literals" (formula "8") (term "1,0"))
                                          (rule "polySimp_addComm1" (formula "8") (term "0"))
                                          (rule "add_literals" (formula "8") (term "0,0"))
                                          (rule "applyEq" (formula "18") (term "1,1,0") (ifseqformula "37"))
                                          (rule "add_literals" (formula "18") (term "1,0"))
                                          (rule "applyEq" (formula "59") (term "1,1,0,0") (ifseqformula "37"))
                                          (rule "applyEq" (formula "31") (term "1,1,1,0") (ifseqformula "37"))
                                          (rule "add_literals" (formula "31") (term "1,1,0"))
                                          (rule "applyEq" (formula "26") (term "1,1,0") (ifseqformula "37"))
                                          (rule "applyEq" (formula "29") (term "0") (ifseqformula "37"))
                                          (rule "leq_literals" (formula "29"))
                                          (rule "true_left" (formula "29"))
                                          (rule "applyEq" (formula "52") (term "1,1,0") (ifseqformula "36"))
                                          (rule "applyEq" (formula "25") (term "1,1,0") (ifseqformula "36"))
                                          (rule "applyEq" (formula "13") (term "1,1,0") (ifseqformula "36"))
                                          (rule "applyEq" (formula "41") (term "1,1,0") (ifseqformula "36"))
                                          (rule "applyEq" (formula "40") (term "1,1,0") (ifseqformula "36"))
                                          (rule "applyEq" (formula "48") (term "0") (ifseqformula "36"))
                                          (rule "inEqSimp_homoInEq1" (formula "48"))
                                          (rule "mul_literals" (formula "48") (term "1,0"))
                                          (rule "polySimp_addComm1" (formula "48") (term "0"))
                                          (rule "add_literals" (formula "48") (term "0,0"))
                                          (rule "add_zero_left" (formula "48") (term "0"))
                                          (rule "applyEq" (formula "16") (term "1,1,0") (ifseqformula "36"))
                                          (rule "applyEq" (formula "29") (term "0,1") (ifseqformula "36"))
                                          (rule "inEqSimp_homoInEq0" (formula "29") (term "1"))
                                          (rule "mul_literals" (formula "29") (term "1,0,1"))
                                          (rule "polySimp_addComm1" (formula "29") (term "0,1"))
                                          (rule "add_literals" (formula "29") (term "0,0,1"))
                                          (rule "applyEq" (formula "37") (term "0") (ifseqformula "36"))
                                          (rule "qeq_literals" (formula "37"))
                                          (rule "true_left" (formula "37"))
                                          (rule "applyEq" (formula "24") (term "1,1,1,0") (ifseqformula "36"))
                                          (rule "add_literals" (formula "24") (term "1,1,0"))
                                          (rule "applyEq" (formula "14") (term "1,1,0") (ifseqformula "36"))
                                          (rule "applyEq" (formula "23") (term "1,1,0") (ifseqformula "36"))
                                          (rule "applyEq" (formula "18") (term "0") (ifseqformula "19"))
                                          (rule "eqSymm" (formula "18"))
                                          (rule "applyEq" (formula "34") (term "0") (ifseqformula "32"))
                                          (rule "eqSymm" (formula "34"))
                                          (rule "applyEq" (formula "44") (term "0") (ifseqformula "48"))
                                          (rule "eqSymm" (formula "44"))
                                          (rule "applyEq" (formula "35") (term "1") (ifseqformula "36"))
                                          (rule "applyEq" (formula "37") (term "1") (ifseqformula "36"))
                                          (rule "applyEq" (formula "56") (term "1") (ifseqformula "36"))
                                          (rule "applyEq" (formula "28") (term "1,0") (ifseqformula "34"))
                                          (rule "applyEq" (formula "63") (term "0") (ifseqformula "34"))
                                          (rule "applyEq" (formula "24") (term "1,0,0,0,0") (ifseqformula "34"))
                                          (rule "applyEq" (formula "18") (term "1,0") (ifseqformula "34"))
                                          (builtin "One Step Simplification" (formula "18"))
                                          (rule "true_left" (formula "18"))
                                          (rule "applyEq" (formula "32") (term "1,0") (ifseqformula "33"))
                                          (rule "applyEq" (formula "48") (term "1,1") (ifseqformula "32"))
                                          (rule "applyEq" (formula "39") (term "1") (ifseqformula "32"))
                                          (rule "applyEq" (formula "20") (term "1,1") (ifseqformula "32"))
                                          (rule "applyEq" (formula "42") (term "1,0") (ifseqformula "32"))
                                          (builtin "One Step Simplification" (formula "42"))
                                          (rule "true_left" (formula "42"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "50") (term "1"))
                                          (rule "mul_literals" (formula "50") (term "1,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "8"))
                                          (rule "mul_literals" (formula "8") (term "1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "1"))
                                          (rule "mul_literals" (formula "28") (term "1,1"))
                                          (rule "inEqSimp_contradInEq0" (formula "7") (ifseqformula "8"))
                                          (rule "qeq_literals" (formula "7") (term "0"))
                                          (builtin "One Step Simplification" (formula "7"))
                                          (rule "closeFalse" (formula "7"))
                                       )
                                       (branch "CUT: self.size ≤ 1 FALSE"
                                          (builtin "One Step Simplification" (formula "29"))
                                          (rule "inEqSimp_leqRight" (formula "61"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                          (rule "mul_literals" (formula "1") (term "1"))
                                          (rule "inEqSimp_subsumption1" (formula "38") (ifseqformula "1"))
                                          (rule "leq_literals" (formula "38") (term "0"))
                                          (builtin "One Step Simplification" (formula "38"))
                                          (rule "true_left" (formula "38"))
                                          (rule "allLeft" (formula "56") (inst "t=j_0"))
                                          (rule "inEqSimp_homoInEq1" (formula "56") (term "1"))
                                          (rule "polySimp_addComm1" (formula "56") (term "0,1"))
                                          (rule "applyEq" (formula "56") (term "1,0,0,0") (ifseqformula "42"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "1"))
                                          (rule "polySimp_mulComm0" (formula "56") (term "1,1"))
                                          (rule "polySimp_rightDist" (formula "56") (term "1,1"))
                                          (rule "polySimp_mulLiterals" (formula "56") (term "1,1,1"))
                                          (rule "mul_literals" (formula "56") (term "0,1,1"))
                                          (rule "polySimp_elimOne" (formula "56") (term "1,1,1"))
                                          (rule "inEqSimp_contradInEq1" (formula "56") (term "1,0") (ifseqformula "43"))
                                          (rule "qeq_literals" (formula "56") (term "0,1,0"))
                                          (builtin "One Step Simplification" (formula "56"))
                                          (rule "pullOutSelect" (formula "56") (term "0,0") (inst "selectSK=IntNode_next_4"))
                                          (rule "simplifySelectOfAnon" (formula "56"))
                                          (builtin "One Step Simplification" (formula "56") (ifInst ""  (formula "66")) (ifInst ""  (formula "35")))
                                          (rule "eqSymm" (formula "57") (term "0"))
                                          (rule "applyEq" (formula "56") (term "2,0") (ifseqformula "29"))
                                          (rule "elementOfUnion" (formula "56") (term "0,0"))
                                          (rule "elementOfSingleton" (formula "56") (term "0,0,0"))
                                          (builtin "One Step Simplification" (formula "56"))
                                          (rule "elementOfInfiniteUnion" (formula "56") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "56"))
                                          (rule "elementOfSingleton" (formula "56") (term "1,0,0,0"))
                                          (builtin "One Step Simplification" (formula "56"))
                                          (rule "applyEqReverse" (formula "57") (term "1,0") (ifseqformula "56"))
                                          (rule "hideAuxiliaryEq" (formula "56"))
                                          (rule "allLeft" (formula "32") (inst "t=j_0"))
                                          (rule "inEqSimp_homoInEq1" (formula "32") (term "1"))
                                          (rule "polySimp_addComm1" (formula "32") (term "0,1"))
                                          (rule "applyEq" (formula "32") (term "1,0,0,0") (ifseqformula "43"))
                                          (rule "eqSymm" (formula "32") (term "0,0"))
                                          (rule "applyEq" (formula "32") (term "1,0,0") (ifseqformula "29"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1"))
                                          (rule "polySimp_mulComm0" (formula "32") (term "1,1"))
                                          (rule "polySimp_rightDist" (formula "32") (term "1,1"))
                                          (rule "mul_literals" (formula "32") (term "0,1,1"))
                                          (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1"))
                                          (rule "polySimp_elimOne" (formula "32") (term "1,1,1"))
                                          (rule "inEqSimp_contradInEq1" (formula "32") (term "1,0") (ifseqformula "44"))
                                          (rule "qeq_literals" (formula "32") (term "0,1,0"))
                                          (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "57")))
                                          (rule "true_left" (formula "32"))
                                          (rule "allLeft" (formula "28") (inst "t=j_0"))
                                          (rule "inEqSimp_commuteGeq" (formula "28") (term "1,0,0,0,0"))
                                          (rule "applyEq" (formula "28") (term "1,0,0,0,0,0,0,0") (ifseqformula "43"))
                                          (rule "inEqSimp_contradInEq1" (formula "28") (term "1,0,0,0,0") (ifseqformula "45"))
                                          (rule "inEqSimp_homoInEq1" (formula "28") (term "0,1,0,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,1,0,0,0,0"))
                                          (rule "add_literals" (formula "28") (term "1,1,0,0,1,0,0,0,0"))
                                          (rule "times_zero_1" (formula "28") (term "1,0,0,1,0,0,0,0"))
                                          (rule "add_zero_right" (formula "28") (term "0,0,1,0,0,0,0"))
                                          (rule "leq_literals" (formula "28") (term "0,1,0,0,0,0"))
                                          (builtin "One Step Simplification" (formula "28"))
                                          (rule "inEqSimp_contradInEq1" (formula "28") (term "1,0,0,0,0") (ifseqformula "44"))
                                          (rule "qeq_literals" (formula "28") (term "0,1,0,0,0,0"))
                                          (builtin "One Step Simplification" (formula "28"))
                                          (rule "commute_and_2" (formula "51") (term "0,0,0,0"))
                                          (rule "cut_direct" (formula "55") (term "1"))
                                          (branch "CUT: self.size ≤ 2 + i_2_0 TRUE"
                                             (builtin "One Step Simplification" (formula "56"))
                                             (rule "true_left" (formula "56"))
                                             (rule "replace_known_left" (formula "32") (term "1") (ifseqformula "55"))
                                             (builtin "One Step Simplification" (formula "32"))
                                             (rule "true_left" (formula "32"))
                                             (rule "inEqSimp_antiSymm" (formula "9") (ifseqformula "54"))
                                             (rule "applyEq" (formula "30") (term "1,1,0,0,0,0,0") (ifseqformula "9"))
                                             (rule "applyEq" (formula "55") (term "0") (ifseqformula "9"))
                                             (rule "inEqSimp_homoInEq0" (formula "55"))
                                             (rule "polySimp_pullOutFactor1" (formula "55") (term "0"))
                                             (rule "add_literals" (formula "55") (term "1,0"))
                                             (rule "times_zero_1" (formula "55") (term "0"))
                                             (rule "qeq_literals" (formula "55"))
                                             (rule "true_left" (formula "55"))
                                             (rule "applyEq" (formula "18") (term "1,1,0") (ifseqformula "9"))
                                             (rule "applyEq" (formula "33") (term "1,1,1,0") (ifseqformula "9"))
                                             (rule "polySimp_addAssoc" (formula "33") (term "1,1,0"))
                                             (rule "add_literals" (formula "33") (term "0,1,1,0"))
                                             (rule "applyEq" (formula "16") (term "1,1,0") (ifseqformula "9"))
                                             (rule "applyEq" (formula "51") (term "1,1,1,0,0,0,0") (ifseqformula "9"))
                                             (rule "polySimp_addAssoc" (formula "51") (term "1,1,0,0,0,0"))
                                             (rule "add_literals" (formula "51") (term "0,1,1,0,0,0,0"))
                                             (rule "applyEq" (formula "17") (term "1,1,1,0,0,1,0") (ifseqformula "9"))
                                             (rule "polySimp_addAssoc" (formula "17") (term "1,1,0,0,1,0"))
                                             (rule "add_literals" (formula "17") (term "0,1,1,0,0,1,0"))
                                             (rule "applyEq" (formula "2") (term "1,1,0") (ifseqformula "9"))
                                             (rule "applyEq" (formula "56") (term "0,1") (ifseqformula "9"))
                                             (rule "inEqSimp_homoInEq0" (formula "56") (term "1"))
                                             (rule "polySimp_mulComm0" (formula "56") (term "1,0,1"))
                                             (rule "polySimp_rightDist" (formula "56") (term "1,0,1"))
                                             (rule "mul_literals" (formula "56") (term "0,1,0,1"))
                                             (rule "polySimp_addComm1" (formula "56") (term "0,1"))
                                             (rule "polySimp_addAssoc" (formula "56") (term "0,0,1"))
                                             (rule "add_literals" (formula "56") (term "0,0,0,1"))
                                             (rule "applyEq" (formula "45") (term "0") (ifseqformula "9"))
                                             (rule "inEqSimp_homoInEq1" (formula "45"))
                                             (rule "polySimp_mulComm0" (formula "45") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "45") (term "1,0"))
                                             (rule "mul_literals" (formula "45") (term "0,1,0"))
                                             (rule "polySimp_addComm1" (formula "45") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "45") (term "0,0"))
                                             (rule "add_literals" (formula "45") (term "0,0,0"))
                                             (rule "applyEq" (formula "30") (term "1,1,0,0,0") (ifseqformula "9"))
                                             (rule "applyEq" (formula "28") (term "1,1,0") (ifseqformula "9"))
                                             (rule "applyEq" (formula "53") (term "1,1,0") (ifseqformula "9"))
                                             (rule "applyEq" (formula "57") (term "1,1,1,0") (ifseqformula "9"))
                                             (rule "polySimp_addAssoc" (formula "57") (term "1,1,0"))
                                             (rule "add_literals" (formula "57") (term "0,1,1,0"))
                                             (rule "applyEq" (formula "29") (term "1,1,0,0") (ifseqformula "9"))
                                             (rule "applyEq" (formula "26") (term "1,1,1,0") (ifseqformula "9"))
                                             (rule "polySimp_addAssoc" (formula "26") (term "1,1,0"))
                                             (rule "add_literals" (formula "26") (term "0,1,1,0"))
                                             (rule "applyEq" (formula "57") (term "1,1,1,0,0,1,1,0,0,0,0,0") (ifseqformula "9"))
                                             (rule "polySimp_addAssoc" (formula "57") (term "1,1,0,0,1,1,0,0,0,0,0"))
                                             (rule "add_literals" (formula "57") (term "0,1,1,0,0,1,1,0,0,0,0,0"))
                                             (rule "applyEq" (formula "1") (term "0") (ifseqformula "9"))
                                             (rule "inEqSimp_homoInEq1" (formula "1"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                             (rule "mul_literals" (formula "1") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                             (rule "add_literals" (formula "1") (term "0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0"))
                                             (rule "applyEq" (formula "24") (term "1,1,0") (ifseqformula "9"))
                                             (rule "applyEq" (formula "20") (term "1,1,0") (ifseqformula "9"))
                                             (rule "polySimp_addAssoc" (formula "20") (term "1,0"))
                                             (rule "add_literals" (formula "20") (term "0,1,0"))
                                             (rule "applyEq" (formula "3") (term "0") (ifseqformula "9"))
                                             (rule "inEqSimp_homoInEq1" (formula "3"))
                                             (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                             (rule "mul_literals" (formula "3") (term "0,1,0"))
                                             (rule "polySimp_addComm1" (formula "3") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                             (rule "add_literals" (formula "3") (term "0,0,0"))
                                             (rule "applyEq" (formula "59") (term "1,1,0,0") (ifseqformula "9"))
                                             (rule "applyEq" (formula "15") (term "1,1,0") (ifseqformula "9"))
                                             (rule "applyEq" (formula "42") (term "1,1,0") (ifseqformula "9"))
                                             (rule "applyEq" (formula "46") (term "1,1,0") (ifseqformula "9"))
                                             (rule "polySimp_addAssoc" (formula "46") (term "1,0"))
                                             (rule "add_literals" (formula "46") (term "0,1,0"))
                                             (rule "applyEq" (formula "41") (term "1,1,0") (ifseqformula "9"))
                                             (rule "applyEq" (formula "37") (term "1,1,0") (ifseqformula "9"))
                                             (rule "polySimp_addAssoc" (formula "37") (term "1,0"))
                                             (rule "add_literals" (formula "37") (term "0,1,0"))
                                             (rule "applyEq" (formula "27") (term "1,1,0") (ifseqformula "9"))
                                             (rule "applyEq" (formula "10") (term "0") (ifseqformula "9"))
                                             (rule "inEqSimp_homoInEq1" (formula "10"))
                                             (rule "polySimp_pullOutFactor1" (formula "10") (term "0"))
                                             (rule "add_literals" (formula "10") (term "1,0"))
                                             (rule "times_zero_1" (formula "10") (term "0"))
                                             (rule "leq_literals" (formula "10"))
                                             (rule "true_left" (formula "10"))
                                             (rule "applyEq" (formula "48") (term "0") (ifseqformula "9"))
                                             (rule "inEqSimp_homoInEq1" (formula "48"))
                                             (rule "polySimp_mulComm0" (formula "48") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "48") (term "1,0"))
                                             (rule "mul_literals" (formula "48") (term "0,1,0"))
                                             (rule "polySimp_addComm1" (formula "48") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "48") (term "0,0"))
                                             (rule "add_literals" (formula "48") (term "0,0,0"))
                                             (rule "applyEq" (formula "24") (term "1,1,0") (ifseqformula "9"))
                                             (rule "applyEq" (formula "52") (term "1,1,1,0,0,1,1,0,0,0,0,0") (ifseqformula "9"))
                                             (rule "polySimp_addAssoc" (formula "52") (term "1,1,0,0,1,1,0,0,0,0,0"))
                                             (rule "add_literals" (formula "52") (term "0,1,1,0,0,1,1,0,0,0,0,0"))
                                             (rule "applyEq" (formula "19") (term "0") (ifseqformula "21"))
                                             (rule "applyEq" (formula "53") (term "1,0,0,0") (ifseqformula "36"))
                                             (rule "replace_known_left" (formula "53") (term "0,0") (ifseqformula "35"))
                                             (builtin "One Step Simplification" (formula "53"))
                                             (rule "hideAuxiliaryEq" (formula "53"))
                                             (rule "applyEq" (formula "27") (term "1,0,0,0,0,0") (ifseqformula "36"))
                                             (rule "applyEq" (formula "50") (term "1,1,0,0,0,0,0") (ifseqformula "36"))
                                             (rule "applyEq" (formula "50") (term "1,2,0") (ifseqformula "36"))
                                             (rule "applyEq" (formula "50") (term "1,1,0") (ifseqformula "36"))
                                             (rule "applyEq" (formula "21") (term "1,1") (ifseqformula "36"))
                                             (rule "applyEq" (formula "50") (term "1") (ifseqformula "45"))
                                             (builtin "One Step Simplification" (formula "50"))
                                             (rule "eqSymm" (formula "50") (term "1"))
                                             (rule "applyEq" (formula "53") (term "1") (ifseqformula "36"))
                                             (rule "applyEq" (formula "60") (term "0") (ifseqformula "36"))
                                             (rule "applyEq" (formula "56") (term "1") (ifseqformula "9"))
                                             (rule "applyEq" (formula "37") (term "1") (ifseqformula "9"))
                                             (rule "applyEq" (formula "38") (term "1") (ifseqformula "9"))
                                             (rule "applyEq" (formula "19") (term "1,0") (ifseqformula "36"))
                                             (builtin "One Step Simplification" (formula "19"))
                                             (rule "true_left" (formula "19"))
                                             (rule "applyEq" (formula "49") (term "1,0,0,1,0") (ifseqformula "35"))
                                             (rule "replace_known_left" (formula "49") (term "0,1,0") (ifseqformula "34"))
                                             (builtin "One Step Simplification" (formula "49"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "53") (term "1"))
                                             (rule "polySimp_mulComm0" (formula "53") (term "1,1"))
                                             (rule "polySimp_rightDist" (formula "53") (term "1,1"))
                                             (rule "polySimp_mulLiterals" (formula "53") (term "1,1,1"))
                                             (rule "mul_literals" (formula "53") (term "0,1,1"))
                                             (rule "polySimp_elimOne" (formula "53") (term "1,1,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "43"))
                                             (rule "polySimp_mulComm0" (formula "43") (term "1"))
                                             (rule "polySimp_rightDist" (formula "43") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "43") (term "1,1"))
                                             (rule "mul_literals" (formula "43") (term "0,1"))
                                             (rule "polySimp_elimOne" (formula "43") (term "1,1"))
                                             (rule "inEqSimp_invertInEq0" (formula "1"))
                                             (rule "mul_literals" (formula "1") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                             (rule "polySimp_elimOne" (formula "1") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                             (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                             (rule "polySimp_rightDist" (formula "2") (term "1"))
                                             (rule "mul_literals" (formula "2") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "46"))
                                             (rule "polySimp_mulComm0" (formula "46") (term "1"))
                                             (rule "polySimp_rightDist" (formula "46") (term "1"))
                                             (rule "mul_literals" (formula "46") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "46") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "46") (term "1,1"))
                                             (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "2"))
                                             (rule "times_zero_1" (formula "3") (term "0,0"))
                                             (rule "add_zero_left" (formula "3") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                             (rule "mul_literals" (formula "3") (term "1"))
                                             (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "8"))
                                             (rule "leq_literals" (formula "3") (term "0"))
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "true_left" (formula "3"))
                                             (rule "inEqSimp_exactShadow3" (formula "45") (ifseqformula "46"))
                                             (rule "times_zero_1" (formula "45") (term "0,0"))
                                             (rule "add_zero_left" (formula "45") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "45"))
                                             (rule "mul_literals" (formula "45") (term "1"))
                                             (rule "inEqSimp_subsumption1" (formula "45") (ifseqformula "7"))
                                             (rule "leq_literals" (formula "45") (term "0"))
                                             (builtin "One Step Simplification" (formula "45"))
                                             (rule "true_left" (formula "45"))
                                             (rule "inEqSimp_exactShadow3" (formula "41") (ifseqformula "42"))
                                             (rule "times_zero_1" (formula "41") (term "0,0"))
                                             (rule "add_zero_left" (formula "41") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "41"))
                                             (rule "mul_literals" (formula "41") (term "1"))
                                             (rule "inEqSimp_subsumption1" (formula "41") (ifseqformula "7"))
                                             (rule "leq_literals" (formula "41") (term "0"))
                                             (builtin "One Step Simplification" (formula "41"))
                                             (rule "true_left" (formula "41"))
                                             (rule "inEqSimp_or_weaken3" (formula "25") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "25") (term "1,0,1,0"))
                                             (rule "add_literals" (formula "25") (term "0,1,0,1,0"))
                                             (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "23")))
                                             (rule "true_left" (formula "25"))
                                             (rule "seqGetAlphaCast" (formula "4") (term "0"))
                                             (rule "castedGetAny" (formula "4") (term "0"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "true_left" (formula "4"))
                                             (rule "seqGetAlphaCast" (formula "19") (term "0"))
                                             (rule "castDel" (formula "19") (term "0"))
                                             (builtin "One Step Simplification" (formula "19"))
                                             (rule "true_left" (formula "19"))
                                             (rule "seqGetAlphaCast" (formula "43") (term "0"))
                                             (rule "castedGetAny" (formula "43") (term "0"))
                                             (builtin "One Step Simplification" (formula "43"))
                                             (rule "true_left" (formula "43"))
                                             (rule "seqGetAlphaCast" (formula "46") (term "0"))
                                             (rule "castDel" (formula "46") (term "0"))
                                             (builtin "One Step Simplification" (formula "46"))
                                             (rule "true_left" (formula "46"))
                                             (rule "seqGetAlphaCast" (formula "48") (term "0"))
                                             (rule "castDel" (formula "48") (term "0"))
                                             (builtin "One Step Simplification" (formula "48"))
                                             (rule "true_left" (formula "48"))
                                             (rule "seqGetAlphaCast" (formula "20") (term "0"))
                                             (rule "castDel" (formula "20") (term "0"))
                                             (builtin "One Step Simplification" (formula "20"))
                                             (rule "true_left" (formula "20"))
                                             (rule "commute_and" (formula "47") (term "0,0,0"))
                                             (rule "allLeft" (formula "1") (inst "t=i_2_0"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "inEqSimp_homoInEq1" (formula "1") (term "1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,1"))
                                             (rule "add_literals" (formula "1") (term "1,1,0,1"))
                                             (rule "times_zero_1" (formula "1") (term "1,0,1"))
                                             (rule "add_zero_right" (formula "1") (term "0,1"))
                                             (rule "leq_literals" (formula "1") (term "1"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "allLeft" (formula "2") (inst "t=j_1_0"))
                                             (rule "replace_known_left" (formula "2") (term "0,0,0") (ifseqformula "6"))
                                             (builtin "One Step Simplification" (formula "2"))
                                             (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "9"))
                                             (rule "qeq_literals" (formula "1") (term "0"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "closeFalse" (formula "1"))
                                          )
                                          (branch "CUT: self.size ≤ 2 + i_2_0 FALSE"
                                             (builtin "One Step Simplification" (formula "55"))
                                             (rule "applyEqReverse" (formula "54") (term "1") (ifseqformula "55"))
                                             (rule "hideAuxiliaryEq" (formula "55"))
                                             (rule "replace_known_right" (formula "32") (term "1") (ifseqformula "62"))
                                             (builtin "One Step Simplification" (formula "32"))
                                             (rule "inEqSimp_leqRight" (formula "62"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                             (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0,0"))
                                             (rule "applyEq" (formula "55") (term "1,0") (ifseqformula "33"))
                                             (builtin "One Step Simplification" (formula "55"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1"))
                                             (rule "mul_literals" (formula "1") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                             (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "1"))
                                             (rule "inEqSimp_homoInEq0" (formula "10") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "10") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "10") (term "1,0,0"))
                                             (rule "mul_literals" (formula "10") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "10") (term "0,0"))
                                             (rule "polySimp_addComm1" (formula "10") (term "0,0,0"))
                                             (rule "add_literals" (formula "10") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0"))
                                             (rule "add_literals" (formula "10") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "10") (term "1,0,0"))
                                             (rule "add_literals" (formula "10") (term "0,0"))
                                             (rule "qeq_literals" (formula "10") (term "0"))
                                             (builtin "One Step Simplification" (formula "10"))
                                             (rule "true_left" (formula "10"))
                                             (rule "seqGetAlphaCast" (formula "55") (term "1"))
                                             (rule "castedGetAny" (formula "55") (term "0"))
                                             (builtin "One Step Simplification" (formula "55"))
                                             (rule "true_left" (formula "55"))
                                             (rule "seqGetAlphaCast" (formula "6") (term "0"))
                                             (rule "castedGetAny" (formula "6") (term "0"))
                                             (builtin "One Step Simplification" (formula "6"))
                                             (rule "true_left" (formula "6"))
                                             (rule "commute_or_2" (formula "28") (term "0"))
                                             (rule "seqGetAlphaCast" (formula "21") (term "0"))
                                             (rule "castDel" (formula "21") (term "0"))
                                             (builtin "One Step Simplification" (formula "21"))
                                             (rule "true_left" (formula "21"))
                                             (rule "allLeft" (formula "17") (inst "t=j_1"))
                                             (rule "inEqSimp_commuteGeq" (formula "17") (term "1"))
                                             (rule "applyEq" (formula "17") (term "0,0,0,0") (ifseqformula "48"))
                                             (rule "replace_known_right" (formula "17") (term "0,0,0") (ifseqformula "65"))
                                             (builtin "One Step Simplification" (formula "17"))
                                             (rule "true_left" (formula "17"))
                                             (rule "allLeft" (formula "17") (inst "t=j_1_0"))
                                             (rule "inEqSimp_commuteGeq" (formula "17") (term "1"))
                                             (rule "applyEq" (formula "17") (term "0,0,0,0") (ifseqformula "6"))
                                             (rule "replace_known_right" (formula "17") (term "0,0,0") (ifseqformula "67"))
                                             (builtin "One Step Simplification" (formula "17"))
                                             (rule "true_left" (formula "17"))
                                             (rule "allLeft" (formula "14") (inst "t=add(Z(1(#)), i_2_0)"))
                                             (rule "inEqSimp_commuteGeq" (formula "14") (term "1"))
                                             (rule "inEqSimp_homoInEq0" (formula "14") (term "1,0"))
                                             (rule "polySimp_mulComm0" (formula "14") (term "1,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "14") (term "1,0,1,0"))
                                             (rule "mul_literals" (formula "14") (term "0,1,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "14") (term "0,1,0"))
                                             (rule "add_literals" (formula "14") (term "0,0,1,0"))
                                             (rule "applyEq" (formula "14") (term "0,0,0,0") (ifseqformula "22"))
                                             (builtin "One Step Simplification" (formula "14"))
                                             (rule "true_left" (formula "14"))
                                             (rule "allLeft" (formula "53") (inst "t=j_1_0"))
                                             (rule "inEqSimp_commuteGeq" (formula "53") (term "1"))
                                             (rule "applyEq" (formula "53") (term "1,0,0,0") (ifseqformula "6"))
                                             (rule "replaceKnownSelect_taclet1011111_15" (formula "53") (term "0,0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet11011111_20" (formula "53") (term "0,0,0"))
                                             (rule "eqSymm" (formula "53") (term "0,0"))
                                             (rule "applyEq" (formula "53") (term "1,0,0") (ifseqformula "7"))
                                             (rule "inEqSimp_contradInEq1" (formula "53") (term "1,0") (ifseqformula "5"))
                                             (rule "qeq_literals" (formula "53") (term "0,1,0"))
                                             (builtin "One Step Simplification" (formula "53"))
                                             (rule "inEqSimp_contradInEq1" (formula "53") (term "1") (ifseqformula "4"))
                                             (rule "inEqSimp_homoInEq1" (formula "53") (term "0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "53") (term "0,0,1"))
                                             (rule "add_literals" (formula "53") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "53") (term "1,0,0,1"))
                                             (rule "add_literals" (formula "53") (term "0,0,1"))
                                             (rule "leq_literals" (formula "53") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "53"))
                                             (rule "allLeft" (formula "41") (inst "t=add(Z(1(#)), i_2_0)"))
                                             (rule "inEqSimp_commuteGeq" (formula "41") (term "1"))
                                             (rule "inEqSimp_homoInEq0" (formula "41") (term "1,0"))
                                             (rule "polySimp_mulComm0" (formula "41") (term "1,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "41") (term "1,0,1,0"))
                                             (rule "mul_literals" (formula "41") (term "0,1,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "41") (term "0,1,0"))
                                             (rule "add_literals" (formula "41") (term "0,0,1,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "41") (term "1,0"))
                                             (rule "polySimp_mulLiterals" (formula "41") (term "0,1,0"))
                                             (rule "polySimp_elimOne" (formula "41") (term "0,1,0"))
                                             (rule "inEqSimp_contradInEq1" (formula "41") (term "1,0") (ifseqformula "9"))
                                             (rule "qeq_literals" (formula "41") (term "0,1,0"))
                                             (builtin "One Step Simplification" (formula "41"))
                                             (rule "inEqSimp_contradInEq1" (formula "41") (term "1") (ifseqformula "1"))
                                             (rule "inEqSimp_homoInEq1" (formula "41") (term "0,1"))
                                             (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "41") (term "1,0,0,1"))
                                             (rule "mul_literals" (formula "41") (term "0,1,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "41") (term "0,0,1"))
                                             (rule "polySimp_addComm1" (formula "41") (term "0,0,0,1"))
                                             (rule "add_literals" (formula "41") (term "0,0,0,0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "41") (term "0,0,1"))
                                             (rule "add_literals" (formula "41") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "41") (term "1,0,0,1"))
                                             (rule "add_literals" (formula "41") (term "0,0,1"))
                                             (rule "leq_literals" (formula "41") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "41"))
                                             (rule "notLeft" (formula "41"))
                                             (rule "allLeft" (formula "42") (inst "t=add(Z(1(#)), i_2_0)"))
                                             (rule "typeEqDerived2" (formula "42") (term "0,0,0") (ifseqformula "52"))
                                             (builtin "One Step Simplification" (formula "42"))
                                             (rule "true_left" (formula "42"))
                                             (rule "allLeft" (formula "15") (inst "t=add(Z(1(#)), i_2_0)"))
                                             (rule "typeEqDerived" (formula "15") (term "0,0,0") (ifseqformula "22"))
                                             (builtin "One Step Simplification" (formula "15"))
                                             (rule "true_left" (formula "15"))
                                             (rule "allLeft" (formula "54") (inst "t=j_1"))
                                             (rule "inEqSimp_commuteGeq" (formula "54") (term "1"))
                                             (rule "applyEq" (formula "54") (term "1,0,0,0") (ifseqformula "47"))
                                             (rule "replaceKnownSelect_taclet1011111_18" (formula "54") (term "0,0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet1011111_19" (formula "54") (term "0,0,0"))
                                             (rule "eqSymm" (formula "54") (term "0,0"))
                                             (rule "applyEq" (formula "54") (term "1,0,0") (ifseqformula "50"))
                                             (rule "inEqSimp_contradInEq1" (formula "54") (term "1,0") (ifseqformula "48"))
                                             (rule "qeq_literals" (formula "54") (term "0,1,0"))
                                             (builtin "One Step Simplification" (formula "54"))
                                             (rule "inEqSimp_contradInEq1" (formula "54") (term "1") (ifseqformula "49"))
                                             (rule "inEqSimp_homoInEq1" (formula "54") (term "0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "54") (term "0,0,1"))
                                             (rule "add_literals" (formula "54") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "54") (term "1,0,0,1"))
                                             (rule "add_literals" (formula "54") (term "0,0,1"))
                                             (rule "leq_literals" (formula "54") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "54"))
                                             (rule "allLeft" (formula "23") (inst "t=j_1"))
                                             (rule "inEqSimp_commuteGeq" (formula "23") (term "1"))
                                             (rule "applyEq" (formula "23") (term "1,1,0,0") (ifseqformula "48"))
                                             (rule "inEqSimp_contradInEq1" (formula "23") (term "1") (ifseqformula "50"))
                                             (rule "inEqSimp_homoInEq1" (formula "23") (term "0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1"))
                                             (rule "add_literals" (formula "23") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "23") (term "1,0,0,1"))
                                             (rule "add_literals" (formula "23") (term "0,0,1"))
                                             (rule "leq_literals" (formula "23") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "23"))
                                             (rule "inEqSimp_contradInEq1" (formula "23") (term "1") (ifseqformula "49"))
                                             (rule "qeq_literals" (formula "23") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "23"))
                                             (rule "allLeft" (formula "24") (inst "t=j_1_0"))
                                             (rule "inEqSimp_commuteGeq" (formula "24") (term "1"))
                                             (rule "applyEq" (formula "24") (term "1,1,0,0") (ifseqformula "6"))
                                             (rule "inEqSimp_contradInEq1" (formula "24") (term "1") (ifseqformula "4"))
                                             (rule "inEqSimp_homoInEq1" (formula "24") (term "0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,1"))
                                             (rule "add_literals" (formula "24") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "24") (term "1,0,0,1"))
                                             (rule "add_literals" (formula "24") (term "0,0,1"))
                                             (rule "leq_literals" (formula "24") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "24"))
                                             (rule "inEqSimp_contradInEq1" (formula "24") (term "1") (ifseqformula "5"))
                                             (rule "qeq_literals" (formula "24") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "24"))
                                             (rule "seqGetAlphaCast" (formula "53") (term "1"))
                                             (rule "castDel" (formula "53") (term "0"))
                                             (builtin "One Step Simplification" (formula "53"))
                                             (rule "true_left" (formula "53"))
                                             (rule "seqGetAlphaCast" (formula "49") (term "0"))
                                             (rule "castedGetAny" (formula "49") (term "0"))
                                             (builtin "One Step Simplification" (formula "49"))
                                             (rule "true_left" (formula "49"))
                                             (rule "seqGetAlphaCast" (formula "52") (term "0"))
                                             (rule "castDel" (formula "52") (term "0"))
                                             (builtin "One Step Simplification" (formula "52"))
                                             (rule "true_left" (formula "52"))
                                             (rule "allLeft" (formula "28") (inst "t=j_1_0"))
                                             (rule "replace_known_right" (formula "28") (term "1,0") (ifseqformula "75"))
                                             (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "6")))
                                             (rule "inEqSimp_commuteGeq" (formula "28") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "28") (term "1") (ifseqformula "4"))
                                             (rule "inEqSimp_homoInEq1" (formula "28") (term "0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,1"))
                                             (rule "add_literals" (formula "28") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "28") (term "1,0,0,1"))
                                             (rule "add_literals" (formula "28") (term "0,0,1"))
                                             (rule "leq_literals" (formula "28") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "28"))
                                             (rule "inEqSimp_contradInEq0" (formula "5") (ifseqformula "28"))
                                             (rule "qeq_literals" (formula "5") (term "0"))
                                             (builtin "One Step Simplification" (formula "5"))
                                             (rule "closeFalse" (formula "5"))
                                          )
                                       )
                                    )
                                 )
                                 (branch "∃ int j; ( (IntNode)self.nodeseq[j] = self.first ∧ j ≥ 0 ∧ j ≤ -1 + self.size) FALSE"
                                    (rule "eqSymm" (formula "44"))
                                    (rule "applyEq" (formula "57") (term "0") (ifseqformula "44"))
                                    (builtin "One Step Simplification" (formula "57"))
                                    (rule "false_right" (formula "57"))
                                    (rule "nnf_ex2all" (formula "55"))
                                    (rule "nnf_notAnd" (formula "1") (term "0"))
                                    (rule "inEqSimp_notLeq" (formula "1") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0"))
                                    (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,0,1,0"))
                                    (rule "add_zero_left" (formula "1") (term "0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1,1,0"))
                                    (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "1") (term "1,0,0"))
                                    (rule "times_zero_1" (formula "1") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1,0,0"))
                                    (rule "mul_literals" (formula "1") (term "1,1,0,0"))
                                    (rule "seqGetAlphaCast" (formula "61") (term "0"))
                                    (rule "castDel" (formula "1") (term "0"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "true_left" (formula "1"))
                                    (rule "seqGetAlphaCast" (formula "17") (term "1,1"))
                                    (rule "castedGetAny" (formula "17") (term "0"))
                                    (builtin "One Step Simplification" (formula "17"))
                                    (rule "true_left" (formula "17"))
                                    (rule "seqGetAlphaCast" (formula "17") (term "0"))
                                    (rule "castDel" (formula "17") (term "0"))
                                    (builtin "One Step Simplification" (formula "17"))
                                    (rule "true_left" (formula "17"))
                                    (rule "allLeft" (formula "13") (inst "t=Z(0(#))"))
                                    (rule "leq_literals" (formula "13") (term "1,0"))
                                    (builtin "One Step Simplification" (formula "13"))
                                    (rule "inEqSimp_commuteGeq" (formula "13") (term "1"))
                                    (rule "applyEq" (formula "13") (term "0,0,0") (ifseqformula "20"))
                                    (builtin "One Step Simplification" (formula "13"))
                                    (rule "true_left" (formula "13"))
                                    (rule "allLeft" (formula "16") (inst "t=j_0"))
                                    (rule "inEqSimp_commuteGeq" (formula "16") (term "1"))
                                    (rule "applyEq" (formula "16") (term "0,0,0,0") (ifseqformula "42"))
                                    (rule "replace_known_right" (formula "16") (term "0,0,0") (ifseqformula "60"))
                                    (builtin "One Step Simplification" (formula "16"))
                                    (rule "true_left" (formula "16"))
                                    (rule "allLeft" (formula "47") (inst "t=j_0"))
                                    (rule "inEqSimp_commuteGeq" (formula "47") (term "1"))
                                    (rule "applyEq" (formula "47") (term "1,0,0,0") (ifseqformula "41"))
                                    (rule "replaceKnownSelect_taclet1011111_16" (formula "47") (term "0,0,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet1011111_17" (formula "47") (term "0,0,0"))
                                    (rule "applyEq" (formula "47") (term "0,0,0") (ifseqformula "44"))
                                    (rule "eqSymm" (formula "47") (term "0,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "47") (term "1") (ifseqformula "43"))
                                    (rule "inEqSimp_homoInEq1" (formula "47") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "47") (term "0,0,1"))
                                    (rule "add_literals" (formula "47") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "47") (term "1,0,0,1"))
                                    (rule "add_literals" (formula "47") (term "0,0,1"))
                                    (rule "leq_literals" (formula "47") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "47"))
                                    (rule "inEqSimp_contradInEq1" (formula "47") (term "1") (ifseqformula "42"))
                                    (rule "qeq_literals" (formula "47") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "47"))
                                    (rule "allLeft" (formula "13") (inst "t=i_2_0"))
                                    (rule "inEqSimp_commuteGeq" (formula "13") (term "1"))
                                    (rule "applyEq" (formula "13") (term "0,0,0,0") (ifseqformula "18"))
                                    (builtin "One Step Simplification" (formula "13"))
                                    (rule "true_left" (formula "13"))
                                    (rule "allLeft" (formula "13") (inst "t=add(Z(neglit(1(#))),
    int::select(heap, self, IntLinkedList::$size))"))
                                    (rule "inEqSimp_homoInEq0" (formula "13") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "13") (term "1,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "13") (term "1,0,1,0"))
                                    (rule "mul_literals" (formula "13") (term "0,1,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "13") (term "0,1,0"))
                                    (rule "add_literals" (formula "13") (term "0,0,1,0"))
                                    (rule "add_zero_left" (formula "13") (term "0,1,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "13") (term "1"))
                                    (rule "polySimp_mulComm0" (formula "13") (term "1,0,1"))
                                    (rule "polySimp_rightDist" (formula "13") (term "1,0,1"))
                                    (rule "mul_literals" (formula "13") (term "0,1,0,1"))
                                    (rule "polySimp_addAssoc" (formula "13") (term "0,1"))
                                    (rule "polySimp_addComm0" (formula "13") (term "0,0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,1"))
                                    (rule "add_literals" (formula "13") (term "1,1,0,1"))
                                    (rule "times_zero_1" (formula "13") (term "1,0,1"))
                                    (rule "add_literals" (formula "13") (term "0,1"))
                                    (rule "leq_literals" (formula "13") (term "1"))
                                    (builtin "One Step Simplification" (formula "13"))
                                    (rule "applyEq" (formula "13") (term "0,0,0") (ifseqformula "19"))
                                    (builtin "One Step Simplification" (formula "13"))
                                    (rule "true_left" (formula "13"))
                                    (rule "allLeft" (formula "14") (inst "t=Z(0(#))"))
                                    (rule "typeEqDerived" (formula "14") (term "0,0,0") (ifseqformula "20"))
                                    (builtin "One Step Simplification" (formula "14"))
                                    (rule "true_left" (formula "14"))
                                    (rule "allLeft" (formula "14") (inst "t=add(Z(neglit(1(#))),
    int::select(heap, self, IntLinkedList::$size))"))
                                    (rule "typeEqDerived" (formula "14") (term "0,0,0") (ifseqformula "19"))
                                    (builtin "One Step Simplification" (formula "14"))
                                    (rule "true_left" (formula "14"))
                                    (rule "allLeft" (formula "14") (inst "t=i_2_0"))
                                    (rule "typeEqDerived" (formula "14") (term "0,0,0") (ifseqformula "18"))
                                    (builtin "One Step Simplification" (formula "14"))
                                    (rule "true_left" (formula "14"))
                                    (rule "allLeft" (formula "21") (inst "t=j_0"))
                                    (rule "inEqSimp_commuteGeq" (formula "21") (term "1"))
                                    (rule "applyEq" (formula "21") (term "1,1,0,0") (ifseqformula "42"))
                                    (rule "inEqSimp_contradInEq1" (formula "21") (term "1,0") (ifseqformula "43"))
                                    (rule "qeq_literals" (formula "21") (term "0,1,0"))
                                    (builtin "One Step Simplification" (formula "21"))
                                    (rule "inEqSimp_contradInEq1" (formula "21") (term "1") (ifseqformula "44"))
                                    (rule "inEqSimp_homoInEq1" (formula "21") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,1"))
                                    (rule "add_literals" (formula "21") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "21") (term "1,0,0,1"))
                                    (rule "add_literals" (formula "21") (term "0,0,1"))
                                    (rule "leq_literals" (formula "21") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "21"))
                                    (rule "commute_or_2" (formula "25") (term "0"))
                                    (rule "seqGetAlphaCast" (formula "18") (term "0"))
                                    (rule "castDel" (formula "18") (term "0"))
                                    (builtin "One Step Simplification" (formula "18"))
                                    (rule "true_left" (formula "18"))
                                    (rule "seqGetAlphaCast" (formula "19") (term "0"))
                                    (rule "castDel" (formula "19") (term "0"))
                                    (builtin "One Step Simplification" (formula "19"))
                                    (rule "true_left" (formula "19"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "28") (term "0") (ifseqformula "9"))
                                    (rule "replace_known_left" (formula "28") (term "0") (ifseqformula "29"))
                                    (builtin "One Step Simplification" (formula "28"))
                                    (rule "true_left" (formula "28"))
                                    (rule "seqGetAlphaCast" (formula "42") (term "0"))
                                    (rule "castedGetAny" (formula "42") (term "0"))
                                    (builtin "One Step Simplification" (formula "42"))
                                    (rule "true_left" (formula "42"))
                                    (rule "seqGetAlphaCast" (formula "45") (term "0"))
                                    (rule "castDel" (formula "45") (term "0"))
                                    (builtin "One Step Simplification" (formula "45"))
                                    (rule "true_left" (formula "45"))
                                    (rule "ifthenelse_split" (formula "5") (term "0"))
                                    (branch "∃ int j; ( (IntNode)self.nodeseq[j] = (IntNode)self.nodeseq[i_2_0] ∧ j ≥ 0 ∧ j ≤ -1 + self.size) TRUE"
                                       (rule "exLeft" (formula "5") (inst "sk=j_1"))
                                       (rule "andLeft" (formula "5"))
                                       (rule "andLeft" (formula "5"))
                                       (rule "eqSymm" (formula "8"))
                                       (rule "inEqSimp_homoInEq0" (formula "7"))
                                       (rule "polySimp_addComm1" (formula "7") (term "0"))
                                       (rule "applyEq" (formula "66") (term "0") (ifseqformula "8"))
                                       (builtin "One Step Simplification" (formula "66"))
                                       (rule "false_right" (formula "66"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                       (rule "polySimp_mulComm0" (formula "7") (term "1"))
                                       (rule "polySimp_rightDist" (formula "7") (term "1"))
                                       (rule "mul_literals" (formula "7") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "7") (term "1,1"))
                                       (rule "seqGetAlphaCast" (formula "32") (term "0,0"))
                                       (rule "castedGetAny" (formula "32") (term "0"))
                                       (builtin "One Step Simplification" (formula "32"))
                                       (rule "true_left" (formula "32"))
                                       (rule "cut_direct" (formula "32") (term "1"))
                                       (branch "CUT: self.size ≤ 1 TRUE"
                                          (builtin "One Step Simplification" (formula "33"))
                                          (rule "true_left" (formula "33"))
                                          (rule "inEqSimp_antiSymm" (formula "40") (ifseqformula "32"))
                                          (rule "applyEq" (formula "26") (term "1,1,0") (ifseqformula "40"))
                                          (rule "applyEq" (formula "57") (term "1,1,1,0,0,1,1,0,0,0,0,0") (ifseqformula "40"))
                                          (rule "add_literals" (formula "57") (term "1,1,0,0,1,1,0,0,0,0,0"))
                                          (rule "applyEq" (formula "38") (term "1,1,0") (ifseqformula "40"))
                                          (rule "add_literals" (formula "38") (term "1,0"))
                                          (rule "applyEq" (formula "41") (term "0") (ifseqformula "40"))
                                          (rule "qeq_literals" (formula "41"))
                                          (rule "true_left" (formula "41"))
                                          (rule "applyEq" (formula "52") (term "1,1,0") (ifseqformula "40"))
                                          (rule "applyEq" (formula "56") (term "1,1,1,0") (ifseqformula "40"))
                                          (rule "add_literals" (formula "56") (term "1,1,0"))
                                          (rule "applyEq" (formula "1") (term "1,1,0") (ifseqformula "40"))
                                          (rule "applyEq" (formula "34") (term "1,1,1,0") (ifseqformula "40"))
                                          (rule "add_literals" (formula "34") (term "1,1,0"))
                                          (rule "applyEq" (formula "32") (term "0") (ifseqformula "40"))
                                          (rule "leq_literals" (formula "32"))
                                          (rule "true_left" (formula "32"))
                                          (rule "applyEq" (formula "43") (term "1,1,0") (ifseqformula "39"))
                                          (rule "applyEq" (formula "51") (term "1,1,1,0,0,1,1,0,0,0,0,0") (ifseqformula "39"))
                                          (rule "add_literals" (formula "51") (term "1,1,0,0,1,1,0,0,0,0,0"))
                                          (rule "applyEq" (formula "16") (term "1,1,0") (ifseqformula "39"))
                                          (rule "applyEq" (formula "53") (term "0,1") (ifseqformula "39"))
                                          (rule "inEqSimp_homoInEq0" (formula "53") (term "1"))
                                          (rule "mul_literals" (formula "53") (term "1,0,1"))
                                          (rule "polySimp_addComm1" (formula "53") (term "0,1"))
                                          (rule "add_literals" (formula "53") (term "0,0,1"))
                                          (rule "applyEq" (formula "47") (term "1,1,0") (ifseqformula "39"))
                                          (rule "add_literals" (formula "47") (term "1,0"))
                                          (rule "applyEq" (formula "46") (term "0") (ifseqformula "39"))
                                          (rule "inEqSimp_homoInEq1" (formula "46"))
                                          (rule "mul_literals" (formula "46") (term "1,0"))
                                          (rule "polySimp_addComm1" (formula "46") (term "0"))
                                          (rule "add_literals" (formula "46") (term "0,0"))
                                          (rule "add_zero_left" (formula "46") (term "0"))
                                          (rule "applyEq" (formula "11") (term "0") (ifseqformula "39"))
                                          (rule "inEqSimp_homoInEq1" (formula "11"))
                                          (rule "mul_literals" (formula "11") (term "1,0"))
                                          (rule "polySimp_addComm1" (formula "11") (term "0"))
                                          (rule "add_literals" (formula "11") (term "0,0"))
                                          (rule "applyEq" (formula "19") (term "1,1,0") (ifseqformula "39"))
                                          (rule "applyEq" (formula "30") (term "1,1,0,0,0") (ifseqformula "39"))
                                          (rule "applyEq" (formula "29") (term "1,1,0,0") (ifseqformula "39"))
                                          (rule "applyEq" (formula "2") (term "0") (ifseqformula "39"))
                                          (rule "inEqSimp_homoInEq1" (formula "2"))
                                          (rule "mul_literals" (formula "2") (term "1,0"))
                                          (rule "polySimp_addComm1" (formula "2") (term "0"))
                                          (rule "add_literals" (formula "2") (term "0,0"))
                                          (rule "add_zero_left" (formula "2") (term "0"))
                                          (rule "applyEq" (formula "30") (term "1,1,0,0,0,0,0") (ifseqformula "39"))
                                          (rule "applyEq" (formula "32") (term "0,1") (ifseqformula "39"))
                                          (rule "inEqSimp_homoInEq0" (formula "32") (term "1"))
                                          (rule "mul_literals" (formula "32") (term "1,0,1"))
                                          (rule "polySimp_addComm1" (formula "32") (term "0,1"))
                                          (rule "add_literals" (formula "32") (term "0,0,1"))
                                          (rule "applyEq" (formula "21") (term "1,1,0") (ifseqformula "39"))
                                          (rule "add_literals" (formula "21") (term "1,0"))
                                          (rule "applyEq" (formula "28") (term "1,1,0") (ifseqformula "39"))
                                          (rule "applyEq" (formula "18") (term "1,1,1,0,0,1,0") (ifseqformula "39"))
                                          (rule "add_literals" (formula "18") (term "1,1,0,0,1,0"))
                                          (rule "applyEq" (formula "27") (term "1,1,1,0") (ifseqformula "39"))
                                          (rule "add_literals" (formula "27") (term "1,1,0"))
                                          (rule "applyEq" (formula "42") (term "1,1,0") (ifseqformula "39"))
                                          (rule "applyEq" (formula "7") (term "0") (ifseqformula "39"))
                                          (rule "inEqSimp_homoInEq1" (formula "7"))
                                          (rule "mul_literals" (formula "7") (term "1,0"))
                                          (rule "polySimp_addComm1" (formula "7") (term "0"))
                                          (rule "add_literals" (formula "7") (term "0,0"))
                                          (rule "add_zero_left" (formula "7") (term "0"))
                                          (rule "applyEq" (formula "49") (term "1,1,1,0,0,0,0,0") (ifseqformula "39"))
                                          (rule "add_literals" (formula "49") (term "1,1,0,0,0,0,0"))
                                          (rule "applyEq" (formula "57") (term "1,1,0,0") (ifseqformula "39"))
                                          (rule "applyEq" (formula "25") (term "1,1,0") (ifseqformula "39"))
                                          (rule "applyEq" (formula "17") (term "1,1,0") (ifseqformula "39"))
                                          (rule "applyEq" (formula "21") (term "0") (ifseqformula "22"))
                                          (rule "eqSymm" (formula "21"))
                                          (rule "applyEq" (formula "48") (term "0") (ifseqformula "47"))
                                          (rule "applyEq" (formula "35") (term "0") (ifseqformula "37"))
                                          (rule "applyEq" (formula "48") (term "1,0") (ifseqformula "35"))
                                          (rule "applyEq" (formula "31") (term "1,0") (ifseqformula "35"))
                                          (rule "applyEq" (formula "27") (term "1,0,0,0,0") (ifseqformula "35"))
                                          (rule "applyEq" (formula "37") (term "1") (ifseqformula "35"))
                                          (rule "applyEq" (formula "21") (term "1,0") (ifseqformula "35"))
                                          (builtin "One Step Simplification" (formula "21"))
                                          (rule "true_left" (formula "21"))
                                          (rule "applyEq" (formula "43") (term "1") (ifseqformula "34"))
                                          (rule "applyEq" (formula "46") (term "1,1") (ifseqformula "34"))
                                          (rule "applyEq" (formula "62") (term "0") (ifseqformula "34"))
                                          (rule "applyEq" (formula "35") (term "1,0") (ifseqformula "34"))
                                          (rule "applyEq" (formula "23") (term "1,1") (ifseqformula "34"))
                                          (rule "applyEq" (formula "48") (term "1,1") (ifseqformula "34"))
                                          (rule "applyEq" (formula "54") (term "1") (ifseqformula "37"))
                                          (rule "applyEq" (formula "38") (term "1") (ifseqformula "37"))
                                          (rule "applyEq" (formula "36") (term "1") (ifseqformula "37"))
                                          (rule "applyEq" (formula "48") (term "1") (ifseqformula "46"))
                                          (rule "applyEq" (formula "45") (term "1") (ifseqformula "46"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "51") (term "1"))
                                          (rule "mul_literals" (formula "51") (term "1,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "11"))
                                          (rule "mul_literals" (formula "11") (term "1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "1"))
                                          (rule "mul_literals" (formula "31") (term "1,1"))
                                          (rule "inEqSimp_subsumption1" (formula "51") (term "1") (ifseqformula "10"))
                                          (rule "leq_literals" (formula "51") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "51"))
                                          (rule "true_left" (formula "51"))
                                          (rule "inEqSimp_contradInEq0" (formula "10") (ifseqformula "11"))
                                          (rule "qeq_literals" (formula "10") (term "0"))
                                          (builtin "One Step Simplification" (formula "10"))
                                          (rule "closeFalse" (formula "10"))
                                       )
                                       (branch "CUT: self.size ≤ 1 FALSE"
                                          (builtin "One Step Simplification" (formula "32"))
                                          (rule "inEqSimp_leqRight" (formula "61"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                          (rule "mul_literals" (formula "1") (term "1"))
                                          (rule "inEqSimp_subsumption1" (formula "41") (ifseqformula "1"))
                                          (rule "leq_literals" (formula "41") (term "0"))
                                          (builtin "One Step Simplification" (formula "41"))
                                          (rule "true_left" (formula "41"))
                                          (rule "commute_or_2" (formula "30") (term "0"))
                                          (rule "allLeft" (formula "35") (inst "t=j_0"))
                                          (rule "inEqSimp_homoInEq1" (formula "35") (term "1"))
                                          (rule "polySimp_addComm1" (formula "35") (term "0,1"))
                                          (rule "applyEq" (formula "35") (term "1,0,0,0") (ifseqformula "46"))
                                          (rule "eqSymm" (formula "35") (term "0,0"))
                                          (rule "applyEq" (formula "35") (term "1,0,0") (ifseqformula "32"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1"))
                                          (rule "polySimp_mulComm0" (formula "35") (term "1,1"))
                                          (rule "polySimp_rightDist" (formula "35") (term "1,1"))
                                          (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1"))
                                          (rule "mul_literals" (formula "35") (term "0,1,1"))
                                          (rule "polySimp_elimOne" (formula "35") (term "1,1,1"))
                                          (rule "inEqSimp_contradInEq1" (formula "35") (term "1,0") (ifseqformula "47"))
                                          (rule "qeq_literals" (formula "35") (term "0,1,0"))
                                          (builtin "One Step Simplification" (formula "35"))
                                          (rule "allLeft" (formula "31") (inst "t=j_0"))
                                          (rule "inEqSimp_commuteGeq" (formula "31") (term "1,0,0,0,0"))
                                          (rule "applyEq" (formula "31") (term "1,0,0,0,0,0,0,0") (ifseqformula "47"))
                                          (rule "inEqSimp_contradInEq1" (formula "31") (term "1,0,0,0,0") (ifseqformula "49"))
                                          (rule "inEqSimp_homoInEq1" (formula "31") (term "0,1,0,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0,1,0,0,0,0"))
                                          (rule "add_literals" (formula "31") (term "1,1,0,0,1,0,0,0,0"))
                                          (rule "times_zero_1" (formula "31") (term "1,0,0,1,0,0,0,0"))
                                          (rule "add_zero_right" (formula "31") (term "0,0,1,0,0,0,0"))
                                          (rule "leq_literals" (formula "31") (term "0,1,0,0,0,0"))
                                          (builtin "One Step Simplification" (formula "31"))
                                          (rule "inEqSimp_contradInEq1" (formula "31") (term "1,0,0,0,0") (ifseqformula "48"))
                                          (rule "qeq_literals" (formula "31") (term "0,1,0,0,0,0"))
                                          (builtin "One Step Simplification" (formula "31"))
                                          (rule "allLeft" (formula "58") (inst "t=j_0"))
                                          (rule "inEqSimp_homoInEq1" (formula "58") (term "1"))
                                          (rule "polySimp_addComm1" (formula "58") (term "0,1"))
                                          (rule "applyEq" (formula "58") (term "1,0,0,0") (ifseqformula "47"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "58") (term "1"))
                                          (rule "polySimp_mulComm0" (formula "58") (term "1,1"))
                                          (rule "polySimp_rightDist" (formula "58") (term "1,1"))
                                          (rule "mul_literals" (formula "58") (term "0,1,1"))
                                          (rule "polySimp_mulLiterals" (formula "58") (term "1,1,1"))
                                          (rule "polySimp_elimOne" (formula "58") (term "1,1,1"))
                                          (rule "inEqSimp_contradInEq1" (formula "58") (term "1,0") (ifseqformula "48"))
                                          (rule "qeq_literals" (formula "58") (term "0,1,0"))
                                          (builtin "One Step Simplification" (formula "58"))
                                          (rule "pullOutSelect" (formula "58") (term "0,0") (inst "selectSK=IntNode_next_4"))
                                          (rule "simplifySelectOfAnon" (formula "58"))
                                          (builtin "One Step Simplification" (formula "58") (ifInst ""  (formula "68")) (ifInst ""  (formula "40")))
                                          (rule "eqSymm" (formula "59") (term "0"))
                                          (rule "applyEq" (formula "58") (term "2,0") (ifseqformula "33"))
                                          (rule "elementOfUnion" (formula "58") (term "0,0"))
                                          (rule "elementOfSingleton" (formula "58") (term "0,0,0"))
                                          (builtin "One Step Simplification" (formula "58"))
                                          (rule "elementOfInfiniteUnion" (formula "58") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "58"))
                                          (rule "elementOfSingleton" (formula "58") (term "1,0,0,0"))
                                          (builtin "One Step Simplification" (formula "58"))
                                          (rule "applyEqReverse" (formula "59") (term "1,0") (ifseqformula "58"))
                                          (rule "hideAuxiliaryEq" (formula "58"))
                                          (rule "commute_and_2" (formula "52") (term "0,0,0,0"))
                                          (rule "cut_direct" (formula "56") (term "1"))
                                          (branch "CUT: self.size ≤ 2 + i_2_0 TRUE"
                                             (builtin "One Step Simplification" (formula "57"))
                                             (rule "true_left" (formula "57"))
                                             (rule "replace_known_left" (formula "35") (term "1") (ifseqformula "56"))
                                             (builtin "One Step Simplification" (formula "35"))
                                             (rule "true_left" (formula "35"))
                                             (rule "inEqSimp_antiSymm" (formula "12") (ifseqformula "55"))
                                             (rule "applyEq" (formula "56") (term "0") (ifseqformula "12"))
                                             (rule "inEqSimp_homoInEq0" (formula "56"))
                                             (rule "polySimp_pullOutFactor1" (formula "56") (term "0"))
                                             (rule "add_literals" (formula "56") (term "1,0"))
                                             (rule "times_zero_1" (formula "56") (term "0"))
                                             (rule "qeq_literals" (formula "56"))
                                             (rule "true_left" (formula "56"))
                                             (rule "applyEq" (formula "8") (term "0") (ifseqformula "12"))
                                             (rule "inEqSimp_homoInEq1" (formula "8"))
                                             (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "8") (term "1,0"))
                                             (rule "mul_literals" (formula "8") (term "0,1,0"))
                                             (rule "polySimp_addComm1" (formula "8") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                                             (rule "add_literals" (formula "8") (term "0,0,0"))
                                             (rule "applyEq" (formula "57") (term "1,1,1,0") (ifseqformula "12"))
                                             (rule "polySimp_addAssoc" (formula "57") (term "1,1,0"))
                                             (rule "add_literals" (formula "57") (term "0,1,1,0"))
                                             (rule "applyEq" (formula "3") (term "0") (ifseqformula "12"))
                                             (rule "inEqSimp_homoInEq1" (formula "3"))
                                             (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                             (rule "mul_literals" (formula "3") (term "0,1,0"))
                                             (rule "polySimp_addComm1" (formula "3") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                             (rule "add_literals" (formula "3") (term "0,0,0"))
                                             (rule "applyEq" (formula "27") (term "1,1,0") (ifseqformula "12"))
                                             (rule "applyEq" (formula "28") (term "1,1,0") (ifseqformula "12"))
                                             (rule "applyEq" (formula "29") (term "1,1,1,0") (ifseqformula "12"))
                                             (rule "polySimp_addAssoc" (formula "29") (term "1,1,0"))
                                             (rule "add_literals" (formula "29") (term "0,1,1,0"))
                                             (rule "applyEq" (formula "13") (term "0") (ifseqformula "12"))
                                             (rule "inEqSimp_homoInEq1" (formula "13"))
                                             (rule "polySimp_pullOutFactor1" (formula "13") (term "0"))
                                             (rule "add_literals" (formula "13") (term "1,0"))
                                             (rule "times_zero_1" (formula "13") (term "0"))
                                             (rule "leq_literals" (formula "13"))
                                             (rule "true_left" (formula "13"))
                                             (rule "applyEq" (formula "32") (term "1,1,0,0,0") (ifseqformula "12"))
                                             (rule "applyEq" (formula "32") (term "1,1,0,0,0,0,0") (ifseqformula "12"))
                                             (rule "applyEq" (formula "44") (term "1,1,0") (ifseqformula "12"))
                                             (rule "applyEq" (formula "18") (term "1,1,0") (ifseqformula "12"))
                                             (rule "applyEq" (formula "36") (term "1,1,1,0") (ifseqformula "12"))
                                             (rule "polySimp_addAssoc" (formula "36") (term "1,1,0"))
                                             (rule "add_literals" (formula "36") (term "0,1,1,0"))
                                             (rule "applyEq" (formula "51") (term "1,1,1,0,0,0,0") (ifseqformula "12"))
                                             (rule "polySimp_addAssoc" (formula "51") (term "1,1,0,0,0,0"))
                                             (rule "add_literals" (formula "51") (term "0,1,1,0,0,0,0"))
                                             (rule "applyEq" (formula "17") (term "1,1,0") (ifseqformula "12"))
                                             (rule "applyEq" (formula "56") (term "1,1,1,0,0,1,1,0,0,0,0,0") (ifseqformula "12"))
                                             (rule "polySimp_addAssoc" (formula "56") (term "1,1,0,0,1,1,0,0,0,0,0"))
                                             (rule "add_literals" (formula "56") (term "0,1,1,0,0,1,1,0,0,0,0,0"))
                                             (rule "applyEq" (formula "53") (term "1,1,1,0,0,1,1,0,0,0,0,0") (ifseqformula "12"))
                                             (rule "polySimp_addAssoc" (formula "53") (term "1,1,0,0,1,1,0,0,0,0,0"))
                                             (rule "add_literals" (formula "53") (term "0,1,1,0,0,1,1,0,0,0,0,0"))
                                             (rule "applyEq" (formula "19") (term "1,1,1,0,0,1,0") (ifseqformula "12"))
                                             (rule "polySimp_addAssoc" (formula "19") (term "1,1,0,0,1,0"))
                                             (rule "add_literals" (formula "19") (term "0,1,1,0,0,1,0"))
                                             (rule "applyEq" (formula "20") (term "1,1,0") (ifseqformula "12"))
                                             (rule "applyEq" (formula "1") (term "0") (ifseqformula "12"))
                                             (rule "inEqSimp_homoInEq1" (formula "1"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                             (rule "mul_literals" (formula "1") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                             (rule "add_literals" (formula "1") (term "0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0"))
                                             (rule "applyEq" (formula "48") (term "0") (ifseqformula "12"))
                                             (rule "inEqSimp_homoInEq1" (formula "48"))
                                             (rule "polySimp_mulComm0" (formula "48") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "48") (term "1,0"))
                                             (rule "mul_literals" (formula "48") (term "0,1,0"))
                                             (rule "polySimp_addComm1" (formula "48") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "48") (term "0,0"))
                                             (rule "add_literals" (formula "48") (term "0,0,0"))
                                             (rule "applyEq" (formula "30") (term "1,1,0") (ifseqformula "12"))
                                             (rule "applyEq" (formula "49") (term "1,1,0") (ifseqformula "12"))
                                             (rule "polySimp_addAssoc" (formula "49") (term "1,0"))
                                             (rule "add_literals" (formula "49") (term "0,1,0"))
                                             (rule "applyEq" (formula "29") (term "1,1,0") (ifseqformula "12"))
                                             (rule "applyEq" (formula "2") (term "1,1,0") (ifseqformula "12"))
                                             (rule "applyEq" (formula "45") (term "1,1,0") (ifseqformula "12"))
                                             (rule "applyEq" (formula "40") (term "1,1,0") (ifseqformula "12"))
                                             (rule "polySimp_addAssoc" (formula "40") (term "1,0"))
                                             (rule "add_literals" (formula "40") (term "0,1,0"))
                                             (rule "applyEq" (formula "35") (term "0,1") (ifseqformula "12"))
                                             (rule "inEqSimp_homoInEq0" (formula "35") (term "1"))
                                             (rule "polySimp_mulComm0" (formula "35") (term "1,0,1"))
                                             (rule "polySimp_rightDist" (formula "35") (term "1,0,1"))
                                             (rule "mul_literals" (formula "35") (term "0,1,0,1"))
                                             (rule "polySimp_addComm1" (formula "35") (term "0,1"))
                                             (rule "polySimp_addAssoc" (formula "35") (term "0,0,1"))
                                             (rule "add_literals" (formula "35") (term "0,0,0,1"))
                                             (rule "applyEq" (formula "22") (term "1,1,0") (ifseqformula "12"))
                                             (rule "polySimp_addAssoc" (formula "22") (term "1,0"))
                                             (rule "add_literals" (formula "22") (term "0,1,0"))
                                             (rule "applyEq" (formula "53") (term "1,1,0") (ifseqformula "12"))
                                             (rule "applyEq" (formula "31") (term "1,1,0,0") (ifseqformula "12"))
                                             (rule "applyEq" (formula "58") (term "1,1,0,0") (ifseqformula "12"))
                                             (rule "applyEq" (formula "24") (term "1,1") (ifseqformula "40"))
                                             (rule "applyEq" (formula "54") (term "1") (ifseqformula "39"))
                                             (rule "applyEq" (formula "50") (term "1") (ifseqformula "48"))
                                             (rule "applyEq" (formula "60") (term "0") (ifseqformula "39"))
                                             (rule "applyEq" (formula "50") (term "1,1,0") (ifseqformula "39"))
                                             (builtin "One Step Simplification" (formula "50"))
                                             (rule "applyEq" (formula "29") (term "1,0,0,0,0,0") (ifseqformula "39"))
                                             (rule "applyEq" (formula "53") (term "1,0,0,0") (ifseqformula "39"))
                                             (rule "replace_known_left" (formula "53") (term "0,0") (ifseqformula "38"))
                                             (builtin "One Step Simplification" (formula "53"))
                                             (rule "hideAuxiliaryEq" (formula "53"))
                                             (rule "applyEq" (formula "40") (term "1") (ifseqformula "12"))
                                             (rule "applyEq" (formula "55") (term "1") (ifseqformula "12"))
                                             (rule "applyEq" (formula "41") (term "1") (ifseqformula "12"))
                                             (rule "applyEq" (formula "50") (term "1,0,0,1,0") (ifseqformula "39"))
                                             (rule "replace_known_left" (formula "50") (term "0,1,0") (ifseqformula "38"))
                                             (builtin "One Step Simplification" (formula "50"))
                                             (rule "applyEq" (formula "50") (term "1,1,0,0,0") (ifseqformula "39"))
                                             (rule "applyEq" (formula "50") (term "1,0,1") (ifseqformula "39"))
                                             (rule "eqSymm" (formula "50") (term "1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "8"))
                                             (rule "polySimp_mulComm0" (formula "8") (term "1"))
                                             (rule "polySimp_rightDist" (formula "8") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                                             (rule "mul_literals" (formula "8") (term "0,1"))
                                             (rule "polySimp_elimOne" (formula "8") (term "1,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                             (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                             (rule "polySimp_rightDist" (formula "3") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                             (rule "mul_literals" (formula "3") (term "0,1"))
                                             (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                             (rule "inEqSimp_invertInEq0" (formula "1"))
                                             (rule "mul_literals" (formula "1") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                             (rule "polySimp_elimOne" (formula "1") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "46"))
                                             (rule "polySimp_mulComm0" (formula "46") (term "1"))
                                             (rule "polySimp_rightDist" (formula "46") (term "1"))
                                             (rule "mul_literals" (formula "46") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "46") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "46") (term "1,1"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "33") (term "1"))
                                             (rule "polySimp_mulComm0" (formula "33") (term "1,1"))
                                             (rule "polySimp_rightDist" (formula "33") (term "1,1"))
                                             (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1"))
                                             (rule "mul_literals" (formula "33") (term "0,1,1"))
                                             (rule "polySimp_elimOne" (formula "33") (term "1,1,1"))
                                             (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "7"))
                                             (rule "times_zero_1" (formula "6") (term "0,0"))
                                             (rule "add_zero_left" (formula "6") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                             (rule "mul_literals" (formula "6") (term "1"))
                                             (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "11"))
                                             (rule "leq_literals" (formula "6") (term "0"))
                                             (builtin "One Step Simplification" (formula "6"))
                                             (rule "true_left" (formula "6"))
                                             (rule "inEqSimp_exactShadow3" (formula "45") (ifseqformula "46"))
                                             (rule "times_zero_1" (formula "45") (term "0,0"))
                                             (rule "add_zero_left" (formula "45") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "45"))
                                             (rule "mul_literals" (formula "45") (term "1"))
                                             (rule "inEqSimp_subsumption1" (formula "45") (ifseqformula "10"))
                                             (rule "leq_literals" (formula "45") (term "0"))
                                             (builtin "One Step Simplification" (formula "45"))
                                             (rule "true_left" (formula "45"))
                                             (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "2"))
                                             (rule "times_zero_1" (formula "3") (term "0,0"))
                                             (rule "add_zero_left" (formula "3") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                             (rule "mul_literals" (formula "3") (term "1"))
                                             (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "11"))
                                             (rule "leq_literals" (formula "3") (term "0"))
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "true_left" (formula "3"))
                                             (rule "inEqSimp_or_weaken3" (formula "28") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "28") (term "1,0,1,0"))
                                             (rule "add_literals" (formula "28") (term "0,1,0,1,0"))
                                             (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "26")))
                                             (rule "true_left" (formula "28"))
                                             (rule "seqGetAlphaCast" (formula "4") (term "0"))
                                             (rule "castedGetAny" (formula "4") (term "0"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "true_left" (formula "4"))
                                             (rule "seqGetAlphaCast" (formula "47") (term "0"))
                                             (rule "castDel" (formula "47") (term "0"))
                                             (builtin "One Step Simplification" (formula "47"))
                                             (rule "true_left" (formula "47"))
                                             (rule "seqGetAlphaCast" (formula "49") (term "0"))
                                             (rule "castDel" (formula "49") (term "0"))
                                             (builtin "One Step Simplification" (formula "49"))
                                             (rule "true_left" (formula "49"))
                                             (rule "commute_and" (formula "48") (term "0,0,0"))
                                             (rule "seqGetAlphaCast" (formula "23") (term "0"))
                                             (rule "castDel" (formula "23") (term "0"))
                                             (builtin "One Step Simplification" (formula "23"))
                                             (rule "true_left" (formula "23"))
                                             (rule "seqGetAlphaCast" (formula "5") (term "0"))
                                             (rule "castedGetAny" (formula "5") (term "0"))
                                             (builtin "One Step Simplification" (formula "5"))
                                             (rule "true_left" (formula "5"))
                                             (rule "allLeft" (formula "29") (inst "t=i_2_0"))
                                             (rule "inEqSimp_homoInEq1" (formula "29") (term "1,0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,1,0,0,0,0"))
                                             (rule "add_literals" (formula "29") (term "1,1,0,1,0,0,0,0"))
                                             (rule "times_zero_1" (formula "29") (term "1,0,1,0,0,0,0"))
                                             (rule "add_zero_right" (formula "29") (term "0,1,0,0,0,0"))
                                             (rule "leq_literals" (formula "29") (term "1,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "29"))
                                             (rule "inEqSimp_contradInEq1" (formula "29") (term "1,0,0,0,0") (ifseqformula "10"))
                                             (rule "qeq_literals" (formula "29") (term "0,1,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "29"))
                                             (rule "commute_or_2" (formula "29") (term "0"))
                                             (rule "seqGetAlphaCast" (formula "32") (term "0,0"))
                                             (rule "castedGetAny" (formula "32") (term "0"))
                                             (builtin "One Step Simplification" (formula "32"))
                                             (rule "true_left" (formula "32"))
                                             (rule "allLeft" (formula "27") (inst "t=j_1_0"))
                                             (rule "replace_known_right" (formula "27") (term "1,0") (ifseqformula "64"))
                                             (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "4")))
                                             (rule "inEqSimp_contradInEq0" (formula "27") (term "1") (ifseqformula "2"))
                                             (rule "inEqSimp_homoInEq1" (formula "27") (term "0,1"))
                                             (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1"))
                                             (rule "mul_literals" (formula "27") (term "0,1,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "27") (term "0,0,1"))
                                             (rule "polySimp_addComm1" (formula "27") (term "0,0,0,1"))
                                             (rule "add_literals" (formula "27") (term "0,0,0,0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,1"))
                                             (rule "add_literals" (formula "27") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "27") (term "1,0,0,1"))
                                             (rule "add_zero_right" (formula "27") (term "0,0,1"))
                                             (rule "leq_literals" (formula "27") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "27"))
                                             (rule "inEqSimp_contradInEq1" (formula "27") (ifseqformula "3"))
                                             (rule "qeq_literals" (formula "27") (term "0"))
                                             (builtin "One Step Simplification" (formula "27"))
                                             (rule "closeFalse" (formula "27"))
                                          )
                                          (branch "CUT: self.size ≤ 2 + i_2_0 FALSE"
                                             (builtin "One Step Simplification" (formula "56"))
                                             (rule "applyEqReverse" (formula "55") (term "1") (ifseqformula "56"))
                                             (rule "hideAuxiliaryEq" (formula "56"))
                                             (rule "replace_known_right" (formula "35") (term "1") (ifseqformula "62"))
                                             (builtin "One Step Simplification" (formula "35"))
                                             (rule "inEqSimp_leqRight" (formula "62"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                             (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0,0"))
                                             (rule "applyEq" (formula "56") (term "1,0") (ifseqformula "36"))
                                             (builtin "One Step Simplification" (formula "56"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1"))
                                             (rule "mul_literals" (formula "1") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                             (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "1"))
                                             (rule "inEqSimp_homoInEq0" (formula "13") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "13") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "13") (term "1,0,0"))
                                             (rule "mul_literals" (formula "13") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "13") (term "0,0"))
                                             (rule "polySimp_addComm1" (formula "13") (term "0,0,0"))
                                             (rule "add_literals" (formula "13") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0"))
                                             (rule "add_literals" (formula "13") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "13") (term "1,0,0"))
                                             (rule "add_literals" (formula "13") (term "0,0"))
                                             (rule "qeq_literals" (formula "13") (term "0"))
                                             (builtin "One Step Simplification" (formula "13"))
                                             (rule "true_left" (formula "13"))
                                             (rule "seqGetAlphaCast" (formula "56") (term "1"))
                                             (rule "castedGetAny" (formula "56") (term "0"))
                                             (builtin "One Step Simplification" (formula "56"))
                                             (rule "true_left" (formula "56"))
                                             (rule "seqGetAlphaCast" (formula "6") (term "0"))
                                             (rule "castedGetAny" (formula "6") (term "0"))
                                             (builtin "One Step Simplification" (formula "6"))
                                             (rule "true_left" (formula "6"))
                                             (rule "commute_or_2" (formula "31") (term "0"))
                                             (rule "allLeft" (formula "3") (inst "t=Z(0(#))"))
                                             (rule "leq_literals" (formula "3") (term "1,0"))
                                             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "40")))
                                             (rule "inEqSimp_commuteGeq" (formula "3"))
                                             (rule "inEqSimp_contradInEq1" (formula "3") (ifseqformula "2"))
                                             (rule "qeq_literals" (formula "3") (term "0"))
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "closeFalse" (formula "3"))
                                          )
                                       )
                                    )
                                    (branch "∃ int j; ( (IntNode)self.nodeseq[j] = (IntNode)self.nodeseq[i_2_0] ∧ j ≥ 0 ∧ j ≤ -1 + self.size) FALSE"
                                       (rule "eqSymm" (formula "5"))
                                       (rule "applyEq" (formula "64") (term "0") (ifseqformula "5"))
                                       (builtin "One Step Simplification" (formula "64"))
                                       (rule "false_right" (formula "64"))
                                       (rule "nnf_ex2all" (formula "58"))
                                       (rule "nnf_notAnd" (formula "1") (term "0"))
                                       (rule "inEqSimp_notLeq" (formula "1") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0"))
                                       (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0,1,0"))
                                       (rule "add_zero_left" (formula "1") (term "0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1,1,0"))
                                       (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_notGeq" (formula "1") (term "1,0,0"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0,1,0,0"))
                                       (rule "add_zero_right" (formula "1") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1,0,0"))
                                       (rule "mul_literals" (formula "1") (term "1,1,0,0"))
                                       (rule "seqGetAlphaCast" (formula "30") (term "0,0"))
                                       (rule "castedGetAny" (formula "30") (term "0"))
                                       (builtin "One Step Simplification" (formula "30"))
                                       (rule "true_left" (formula "30"))
                                       (rule "cut_direct" (formula "30") (term "1"))
                                       (branch "CUT: self.size ≤ 1 TRUE"
                                          (builtin "One Step Simplification" (formula "31"))
                                          (rule "true_left" (formula "31"))
                                          (rule "inEqSimp_antiSymm" (formula "38") (ifseqformula "30"))
                                          (rule "applyEq" (formula "53") (term "0,1") (ifseqformula "38"))
                                          (rule "inEqSimp_homoInEq0" (formula "53") (term "1"))
                                          (rule "mul_literals" (formula "53") (term "1,0,1"))
                                          (rule "polySimp_addComm1" (formula "53") (term "0,1"))
                                          (rule "add_literals" (formula "53") (term "0,0,1"))
                                          (rule "applyEq" (formula "19") (term "1,1,0") (ifseqformula "38"))
                                          (rule "add_literals" (formula "19") (term "1,0"))
                                          (rule "applyEq" (formula "28") (term "1,1,0,0,0") (ifseqformula "38"))
                                          (rule "applyEq" (formula "55") (term "1,1,1,0") (ifseqformula "38"))
                                          (rule "add_literals" (formula "55") (term "1,1,0"))
                                          (rule "applyEq" (formula "30") (term "0") (ifseqformula "38"))
                                          (rule "leq_literals" (formula "30"))
                                          (rule "true_left" (formula "30"))
                                          (rule "applyEq" (formula "46") (term "1,1,0") (ifseqformula "37"))
                                          (rule "add_literals" (formula "46") (term "1,0"))
                                          (rule "applyEq" (formula "16") (term "1,1,1,0,0,1,0") (ifseqformula "37"))
                                          (rule "add_literals" (formula "16") (term "1,1,0,0,1,0"))
                                          (rule "applyEq" (formula "50") (term "1,1,0") (ifseqformula "37"))
                                          (rule "applyEq" (formula "15") (term "1,1,0") (ifseqformula "37"))
                                          (rule "applyEq" (formula "2") (term "1,1,0") (ifseqformula "37"))
                                          (rule "applyEq" (formula "42") (term "1,1,0") (ifseqformula "37"))
                                          (rule "applyEq" (formula "54") (term "1,1,1,0,0,1,1,0,0,0,0,0") (ifseqformula "37"))
                                          (rule "add_literals" (formula "54") (term "1,1,0,0,1,1,0,0,0,0,0"))
                                          (rule "applyEq" (formula "31") (term "1,1,1,0") (ifseqformula "37"))
                                          (rule "add_literals" (formula "31") (term "1,1,0"))
                                          (rule "applyEq" (formula "14") (term "1,1,0") (ifseqformula "37"))
                                          (rule "applyEq" (formula "3") (term "0") (ifseqformula "37"))
                                          (rule "inEqSimp_homoInEq1" (formula "3"))
                                          (rule "mul_literals" (formula "3") (term "1,0"))
                                          (rule "polySimp_addComm1" (formula "3") (term "0"))
                                          (rule "add_literals" (formula "3") (term "0,0"))
                                          (rule "add_zero_left" (formula "3") (term "0"))
                                          (rule "applyEq" (formula "25") (term "1,1,1,0") (ifseqformula "37"))
                                          (rule "add_literals" (formula "25") (term "1,1,0"))
                                          (rule "applyEq" (formula "26") (term "1,1,0") (ifseqformula "37"))
                                          (rule "applyEq" (formula "48") (term "1,1,1,0,0,0,0,0") (ifseqformula "37"))
                                          (rule "add_literals" (formula "48") (term "1,1,0,0,0,0,0"))
                                          (rule "applyEq" (formula "41") (term "1,1,0") (ifseqformula "37"))
                                          (rule "applyEq" (formula "30") (term "0,1") (ifseqformula "37"))
                                          (rule "inEqSimp_homoInEq0" (formula "30") (term "1"))
                                          (rule "mul_literals" (formula "30") (term "1,0,1"))
                                          (rule "polySimp_addComm1" (formula "30") (term "0,1"))
                                          (rule "add_literals" (formula "30") (term "0,0,1"))
                                          (rule "applyEq" (formula "38") (term "0") (ifseqformula "37"))
                                          (rule "qeq_literals" (formula "38"))
                                          (rule "true_left" (formula "38"))
                                          (rule "applyEq" (formula "17") (term "1,1,0") (ifseqformula "37"))
                                          (rule "applyEq" (formula "28") (term "1,1,0,0,0,0,0") (ifseqformula "37"))
                                          (rule "applyEq" (formula "1") (term "1,1,0") (ifseqformula "37"))
                                          (rule "applyEq" (formula "24") (term "1,1,0") (ifseqformula "37"))
                                          (rule "applyEq" (formula "27") (term "1,1,0,0") (ifseqformula "37"))
                                          (rule "applyEq" (formula "44") (term "0") (ifseqformula "37"))
                                          (rule "inEqSimp_homoInEq1" (formula "44"))
                                          (rule "mul_literals" (formula "44") (term "1,0"))
                                          (rule "polySimp_addComm1" (formula "44") (term "0"))
                                          (rule "add_literals" (formula "44") (term "0,0"))
                                          (rule "add_zero_left" (formula "44") (term "0"))
                                          (rule "applyEq" (formula "49") (term "1,1,1,0,0,1,1,0,0,0,0,0") (ifseqformula "37"))
                                          (rule "add_literals" (formula "49") (term "1,1,0,0,1,1,0,0,0,0,0"))
                                          (rule "applyEq" (formula "55") (term "1,1,0,0") (ifseqformula "37"))
                                          (rule "applyEq" (formula "23") (term "1,1,0") (ifseqformula "37"))
                                          (rule "applyEq" (formula "9") (term "0") (ifseqformula "37"))
                                          (rule "inEqSimp_homoInEq1" (formula "9"))
                                          (rule "mul_literals" (formula "9") (term "1,0"))
                                          (rule "polySimp_addComm1" (formula "9") (term "0"))
                                          (rule "add_literals" (formula "9") (term "0,0"))
                                          (rule "applyEq" (formula "35") (term "1,1,0") (ifseqformula "37"))
                                          (rule "add_literals" (formula "35") (term "1,0"))
                                          (rule "applyEq" (formula "45") (term "0") (ifseqformula "46"))
                                          (rule "eqSymm" (formula "45"))
                                          (rule "applyEq" (formula "19") (term "0") (ifseqformula "20"))
                                          (rule "eqSymm" (formula "19"))
                                          (rule "applyEq" (formula "33") (term "0") (ifseqformula "35"))
                                          (rule "applyEq" (formula "54") (term "1") (ifseqformula "37"))
                                          (rule "applyEq" (formula "35") (term "1") (ifseqformula "33"))
                                          (rule "applyEq" (formula "25") (term "1,0,0,0,0") (ifseqformula "33"))
                                          (rule "applyEq" (formula "19") (term "1,0") (ifseqformula "33"))
                                          (builtin "One Step Simplification" (formula "19"))
                                          (rule "true_left" (formula "19"))
                                          (rule "applyEq" (formula "60") (term "0") (ifseqformula "32"))
                                          (rule "applyEq" (formula "47") (term "1,1") (ifseqformula "32"))
                                          (rule "applyEq" (formula "33") (term "1,0") (ifseqformula "32"))
                                          (rule "applyEq" (formula "34") (term "1") (ifseqformula "35"))
                                          (rule "applyEq" (formula "36") (term "1") (ifseqformula "35"))
                                          (rule "applyEq" (formula "40") (term "1") (ifseqformula "32"))
                                          (rule "applyEq" (formula "28") (term "1,0") (ifseqformula "32"))
                                          (rule "applyEq" (formula "43") (term "1,0") (ifseqformula "32"))
                                          (rule "applyEq" (formula "21") (term "1,1") (ifseqformula "32"))
                                          (rule "applyEq" (formula "46") (term "1") (ifseqformula "43"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "49") (term "1"))
                                          (rule "mul_literals" (formula "49") (term "1,1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "1"))
                                          (rule "mul_literals" (formula "29") (term "1,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "9"))
                                          (rule "mul_literals" (formula "9") (term "1"))
                                          (rule "inEqSimp_subsumption1" (formula "49") (term "1") (ifseqformula "8"))
                                          (rule "leq_literals" (formula "49") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "49"))
                                          (rule "true_left" (formula "49"))
                                          (rule "inEqSimp_contradInEq0" (formula "8") (ifseqformula "9"))
                                          (rule "qeq_literals" (formula "8") (term "0"))
                                          (builtin "One Step Simplification" (formula "8"))
                                          (rule "closeFalse" (formula "8"))
                                       )
                                       (branch "CUT: self.size ≤ 1 FALSE"
                                          (builtin "One Step Simplification" (formula "30"))
                                          (rule "inEqSimp_leqRight" (formula "59"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                          (rule "mul_literals" (formula "1") (term "1"))
                                          (rule "inEqSimp_subsumption1" (formula "39") (ifseqformula "1"))
                                          (rule "leq_literals" (formula "39") (term "0"))
                                          (builtin "One Step Simplification" (formula "39"))
                                          (rule "true_left" (formula "39"))
                                          (rule "commute_or_2" (formula "28") (term "0"))
                                          (rule "allLeft" (formula "29") (inst "t=j_0"))
                                          (rule "inEqSimp_commuteGeq" (formula "29") (term "1,0,0,0,0"))
                                          (rule "applyEq" (formula "29") (term "1,0,0,0,0,0,0,0") (ifseqformula "44"))
                                          (rule "inEqSimp_contradInEq1" (formula "29") (term "1,0,0,0,0") (ifseqformula "46"))
                                          (rule "inEqSimp_homoInEq1" (formula "29") (term "0,1,0,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,1,0,0,0,0"))
                                          (rule "add_literals" (formula "29") (term "1,1,0,0,1,0,0,0,0"))
                                          (rule "times_zero_1" (formula "29") (term "1,0,0,1,0,0,0,0"))
                                          (rule "add_zero_right" (formula "29") (term "0,0,1,0,0,0,0"))
                                          (rule "leq_literals" (formula "29") (term "0,1,0,0,0,0"))
                                          (builtin "One Step Simplification" (formula "29"))
                                          (rule "inEqSimp_contradInEq1" (formula "29") (term "1,0,0,0,0") (ifseqformula "45"))
                                          (rule "qeq_literals" (formula "29") (term "0,1,0,0,0,0"))
                                          (builtin "One Step Simplification" (formula "29"))
                                          (rule "allLeft" (formula "34") (inst "t=j_0"))
                                          (rule "inEqSimp_homoInEq1" (formula "34") (term "1"))
                                          (rule "polySimp_addComm1" (formula "34") (term "0,1"))
                                          (rule "applyEq" (formula "34") (term "1,0,0,0") (ifseqformula "45"))
                                          (rule "eqSymm" (formula "34") (term "0,0"))
                                          (rule "applyEq" (formula "34") (term "1,0,0") (ifseqformula "31"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "1"))
                                          (rule "polySimp_mulComm0" (formula "34") (term "1,1"))
                                          (rule "polySimp_rightDist" (formula "34") (term "1,1"))
                                          (rule "mul_literals" (formula "34") (term "0,1,1"))
                                          (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1"))
                                          (rule "polySimp_elimOne" (formula "34") (term "1,1,1"))
                                          (rule "inEqSimp_contradInEq1" (formula "34") (term "1,0") (ifseqformula "46"))
                                          (rule "qeq_literals" (formula "34") (term "0,1,0"))
                                          (builtin "One Step Simplification" (formula "34"))
                                          (rule "allLeft" (formula "56") (inst "t=j_0"))
                                          (rule "inEqSimp_homoInEq1" (formula "56") (term "1"))
                                          (rule "polySimp_addComm1" (formula "56") (term "0,1"))
                                          (rule "applyEq" (formula "56") (term "1,0,0,0") (ifseqformula "45"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "1"))
                                          (rule "polySimp_mulComm0" (formula "56") (term "1,1"))
                                          (rule "polySimp_rightDist" (formula "56") (term "1,1"))
                                          (rule "mul_literals" (formula "56") (term "0,1,1"))
                                          (rule "polySimp_mulLiterals" (formula "56") (term "1,1,1"))
                                          (rule "polySimp_elimOne" (formula "56") (term "1,1,1"))
                                          (rule "inEqSimp_contradInEq1" (formula "56") (term "1,0") (ifseqformula "46"))
                                          (rule "qeq_literals" (formula "56") (term "0,1,0"))
                                          (builtin "One Step Simplification" (formula "56"))
                                          (rule "pullOutSelect" (formula "56") (term "0,0") (inst "selectSK=IntNode_next_4"))
                                          (rule "simplifySelectOfAnon" (formula "56"))
                                          (builtin "One Step Simplification" (formula "56") (ifInst ""  (formula "66")) (ifInst ""  (formula "38")))
                                          (rule "eqSymm" (formula "57") (term "0"))
                                          (rule "applyEq" (formula "56") (term "2,0") (ifseqformula "31"))
                                          (rule "elementOfUnion" (formula "56") (term "0,0"))
                                          (rule "elementOfInfiniteUnion" (formula "56") (term "1,0,0"))
                                          (builtin "One Step Simplification" (formula "56"))
                                          (rule "elementOfSingleton" (formula "56") (term "0,0,0"))
                                          (builtin "One Step Simplification" (formula "56"))
                                          (rule "elementOfSingleton" (formula "56") (term "1,0,0,0"))
                                          (builtin "One Step Simplification" (formula "56"))
                                          (rule "applyEqReverse" (formula "57") (term "1,0") (ifseqformula "56"))
                                          (rule "hideAuxiliaryEq" (formula "56"))
                                          (rule "commute_and_2" (formula "50") (term "0,0,0,0"))
                                          (rule "cut_direct" (formula "54") (term "1"))
                                          (branch "CUT: self.size ≤ 2 + i_2_0 TRUE"
                                             (builtin "One Step Simplification" (formula "55"))
                                             (rule "true_left" (formula "55"))
                                             (rule "replace_known_left" (formula "33") (term "1") (ifseqformula "54"))
                                             (builtin "One Step Simplification" (formula "33"))
                                             (rule "true_left" (formula "33"))
                                             (rule "inEqSimp_antiSymm" (formula "10") (ifseqformula "53"))
                                             (rule "applyEq" (formula "1") (term "0") (ifseqformula "10"))
                                             (rule "inEqSimp_homoInEq1" (formula "1"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                             (rule "mul_literals" (formula "1") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                             (rule "add_literals" (formula "1") (term "0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0"))
                                             (rule "applyEq" (formula "2") (term "1,1,0") (ifseqformula "10"))
                                             (rule "applyEq" (formula "16") (term "1,1,0") (ifseqformula "10"))
                                             (rule "applyEq" (formula "31") (term "1,1,0,0,0") (ifseqformula "10"))
                                             (rule "applyEq" (formula "54") (term "0") (ifseqformula "10"))
                                             (rule "inEqSimp_homoInEq0" (formula "54"))
                                             (rule "polySimp_pullOutFactor1" (formula "54") (term "0"))
                                             (rule "add_literals" (formula "54") (term "1,0"))
                                             (rule "times_zero_1" (formula "54") (term "0"))
                                             (rule "qeq_literals" (formula "54"))
                                             (rule "true_left" (formula "54"))
                                             (rule "applyEq" (formula "35") (term "1,1,1,0") (ifseqformula "10"))
                                             (rule "polySimp_addAssoc" (formula "35") (term "1,1,0"))
                                             (rule "add_literals" (formula "35") (term "0,1,1,0"))
                                             (rule "applyEq" (formula "29") (term "1,1,0") (ifseqformula "10"))
                                             (rule "applyEq" (formula "55") (term "1,1,1,0") (ifseqformula "10"))
                                             (rule "polySimp_addAssoc" (formula "55") (term "1,1,0"))
                                             (rule "add_literals" (formula "55") (term "0,1,1,0"))
                                             (rule "applyEq" (formula "48") (term "1,1,0") (ifseqformula "10"))
                                             (rule "polySimp_addAssoc" (formula "48") (term "1,0"))
                                             (rule "add_literals" (formula "48") (term "0,1,0"))
                                             (rule "applyEq" (formula "34") (term "0,1") (ifseqformula "10"))
                                             (rule "inEqSimp_homoInEq0" (formula "34") (term "1"))
                                             (rule "polySimp_mulComm0" (formula "34") (term "1,0,1"))
                                             (rule "polySimp_rightDist" (formula "34") (term "1,0,1"))
                                             (rule "mul_literals" (formula "34") (term "0,1,0,1"))
                                             (rule "polySimp_addComm1" (formula "34") (term "0,1"))
                                             (rule "polySimp_addAssoc" (formula "34") (term "0,0,1"))
                                             (rule "add_literals" (formula "34") (term "0,0,0,1"))
                                             (rule "applyEq" (formula "52") (term "1,1,1,0,0,1,1,0,0,0,0,0") (ifseqformula "10"))
                                             (rule "polySimp_addAssoc" (formula "52") (term "1,1,0,0,1,1,0,0,0,0,0"))
                                             (rule "add_literals" (formula "52") (term "0,1,1,0,0,1,1,0,0,0,0,0"))
                                             (rule "applyEq" (formula "44") (term "1,1,0") (ifseqformula "10"))
                                             (rule "applyEq" (formula "17") (term "1,1,0") (ifseqformula "10"))
                                             (rule "applyEq" (formula "31") (term "1,1,0,0,0,0,0") (ifseqformula "10"))
                                             (rule "applyEq" (formula "55") (term "1,1,1,0,0,1,1,0,0,0,0,0") (ifseqformula "10"))
                                             (rule "polySimp_addAssoc" (formula "55") (term "1,1,0,0,1,1,0,0,0,0,0"))
                                             (rule "add_literals" (formula "55") (term "0,1,1,0,0,1,1,0,0,0,0,0"))
                                             (rule "applyEq" (formula "3") (term "1,1,0") (ifseqformula "10"))
                                             (rule "applyEq" (formula "28") (term "1,1,0") (ifseqformula "10"))
                                             (rule "applyEq" (formula "52") (term "1,1,0") (ifseqformula "10"))
                                             (rule "applyEq" (formula "50") (term "1,1,1,0,0,0,0") (ifseqformula "10"))
                                             (rule "polySimp_addAssoc" (formula "50") (term "1,1,0,0,0,0"))
                                             (rule "add_literals" (formula "50") (term "0,1,1,0,0,0,0"))
                                             (rule "applyEq" (formula "25") (term "1,1,0") (ifseqformula "10"))
                                             (rule "applyEq" (formula "39") (term "1,1,0") (ifseqformula "10"))
                                             (rule "polySimp_addAssoc" (formula "39") (term "1,0"))
                                             (rule "add_literals" (formula "39") (term "0,1,0"))
                                             (rule "applyEq" (formula "4") (term "0") (ifseqformula "10"))
                                             (rule "inEqSimp_homoInEq1" (formula "4"))
                                             (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                                             (rule "mul_literals" (formula "4") (term "0,1,0"))
                                             (rule "polySimp_addComm1" (formula "4") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                             (rule "add_literals" (formula "4") (term "0,0,0"))
                                             (rule "applyEq" (formula "18") (term "1,1,1,0,0,1,0") (ifseqformula "10"))
                                             (rule "polySimp_addAssoc" (formula "18") (term "1,1,0,0,1,0"))
                                             (rule "add_literals" (formula "18") (term "0,1,1,0,0,1,0"))
                                             (rule "applyEq" (formula "43") (term "1,1,0") (ifseqformula "10"))
                                             (rule "applyEq" (formula "11") (term "0") (ifseqformula "10"))
                                             (rule "inEqSimp_homoInEq1" (formula "11"))
                                             (rule "polySimp_pullOutFactor1" (formula "11") (term "0"))
                                             (rule "add_literals" (formula "11") (term "1,0"))
                                             (rule "times_zero_1" (formula "11") (term "0"))
                                             (rule "leq_literals" (formula "11"))
                                             (rule "true_left" (formula "11"))
                                             (rule "applyEq" (formula "56") (term "1,1,0,0") (ifseqformula "10"))
                                             (rule "applyEq" (formula "25") (term "1,1,0") (ifseqformula "10"))
                                             (rule "applyEq" (formula "46") (term "0") (ifseqformula "10"))
                                             (rule "inEqSimp_homoInEq1" (formula "46"))
                                             (rule "polySimp_mulComm0" (formula "46") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "46") (term "1,0"))
                                             (rule "mul_literals" (formula "46") (term "0,1,0"))
                                             (rule "polySimp_addComm1" (formula "46") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "46") (term "0,0"))
                                             (rule "add_literals" (formula "46") (term "0,0,0"))
                                             (rule "applyEq" (formula "20") (term "1,1,0") (ifseqformula "10"))
                                             (rule "polySimp_addAssoc" (formula "20") (term "1,0"))
                                             (rule "add_literals" (formula "20") (term "0,1,0"))
                                             (rule "applyEq" (formula "26") (term "1,1,1,0") (ifseqformula "10"))
                                             (rule "polySimp_addAssoc" (formula "26") (term "1,1,0"))
                                             (rule "add_literals" (formula "26") (term "0,1,1,0"))
                                             (rule "applyEq" (formula "18") (term "1,1,0") (ifseqformula "10"))
                                             (rule "applyEq" (formula "29") (term "1,1,0,0") (ifseqformula "10"))
                                             (rule "applyEq" (formula "20") (term "0") (ifseqformula "22"))
                                             (rule "applyEq" (formula "49") (term "1,2,0") (ifseqformula "38"))
                                             (rule "applyEq" (formula "28") (term "1,0,0,0,0,0") (ifseqformula "38"))
                                             (rule "applyEq" (formula "53") (term "1") (ifseqformula "38"))
                                             (rule "applyEq" (formula "22") (term "1,1") (ifseqformula "38"))
                                             (rule "applyEq" (formula "49") (term "1") (ifseqformula "47"))
                                             (rule "applyEq" (formula "59") (term "0") (ifseqformula "38"))
                                             (rule "applyEq" (formula "49") (term "1,1,0") (ifseqformula "38"))
                                             (builtin "One Step Simplification" (formula "49"))
                                             (rule "eqSymm" (formula "49") (term "1"))
                                             (rule "applyEq" (formula "52") (term "1,0,0,0") (ifseqformula "38"))
                                             (rule "replace_known_left" (formula "52") (term "0,0") (ifseqformula "37"))
                                             (builtin "One Step Simplification" (formula "52"))
                                             (rule "hideAuxiliaryEq" (formula "52"))
                                             (rule "applyEq" (formula "39") (term "1") (ifseqformula "10"))
                                             (rule "applyEq" (formula "54") (term "1") (ifseqformula "10"))
                                             (rule "applyEq" (formula "40") (term "1") (ifseqformula "10"))
                                             (rule "applyEq" (formula "20") (term "1,0") (ifseqformula "38"))
                                             (builtin "One Step Simplification" (formula "20"))
                                             (rule "true_left" (formula "20"))
                                             (rule "applyEq" (formula "48") (term "1,0,0,1,0") (ifseqformula "37"))
                                             (rule "replace_known_left" (formula "48") (term "0,1,0") (ifseqformula "36"))
                                             (builtin "One Step Simplification" (formula "48"))
                                             (rule "applyEq" (formula "48") (term "1,1,0,0,0") (ifseqformula "37"))
                                             (rule "inEqSimp_invertInEq0" (formula "1"))
                                             (rule "times_zero_2" (formula "1") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                             (rule "polySimp_elimOne" (formula "1") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "1"))
                                             (rule "polySimp_mulComm0" (formula "31") (term "1,1"))
                                             (rule "polySimp_rightDist" (formula "31") (term "1,1"))
                                             (rule "mul_literals" (formula "31") (term "0,1,1"))
                                             (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1"))
                                             (rule "polySimp_elimOne" (formula "31") (term "1,1,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                             (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                             (rule "polySimp_rightDist" (formula "3") (term "1"))
                                             (rule "mul_literals" (formula "3") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "44"))
                                             (rule "polySimp_mulComm0" (formula "44") (term "1"))
                                             (rule "polySimp_rightDist" (formula "44") (term "1"))
                                             (rule "mul_literals" (formula "44") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "44") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "44") (term "1,1"))
                                             (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "3"))
                                             (rule "times_zero_1" (formula "4") (term "0,0"))
                                             (rule "add_zero_left" (formula "4") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                             (rule "mul_literals" (formula "4") (term "1"))
                                             (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "9"))
                                             (rule "leq_literals" (formula "4") (term "0"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "true_left" (formula "4"))
                                             (rule "inEqSimp_exactShadow3" (formula "43") (ifseqformula "44"))
                                             (rule "times_zero_1" (formula "43") (term "0,0"))
                                             (rule "add_zero_left" (formula "43") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "43"))
                                             (rule "mul_literals" (formula "43") (term "1"))
                                             (rule "inEqSimp_subsumption1" (formula "43") (ifseqformula "8"))
                                             (rule "leq_literals" (formula "43") (term "0"))
                                             (builtin "One Step Simplification" (formula "43"))
                                             (rule "true_left" (formula "43"))
                                             (rule "inEqSimp_or_weaken3" (formula "26") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "26") (term "1,0,1,0"))
                                             (rule "add_literals" (formula "26") (term "0,1,0,1,0"))
                                             (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "24")))
                                             (rule "true_left" (formula "26"))
                                             (rule "seqGetAlphaCast" (formula "5") (term "0"))
                                             (rule "castedGetAny" (formula "5") (term "0"))
                                             (builtin "One Step Simplification" (formula "5"))
                                             (rule "true_left" (formula "5"))
                                             (rule "seqGetAlphaCast" (formula "20") (term "0"))
                                             (rule "castDel" (formula "20") (term "0"))
                                             (builtin "One Step Simplification" (formula "20"))
                                             (rule "true_left" (formula "20"))
                                             (rule "seqGetAlphaCast" (formula "45") (term "0"))
                                             (rule "castDel" (formula "45") (term "0"))
                                             (builtin "One Step Simplification" (formula "45"))
                                             (rule "true_left" (formula "45"))
                                             (rule "seqGetAlphaCast" (formula "47") (term "0"))
                                             (rule "castDel" (formula "47") (term "0"))
                                             (builtin "One Step Simplification" (formula "47"))
                                             (rule "true_left" (formula "47"))
                                             (rule "commute_and" (formula "46") (term "0,0,0"))
                                             (rule "seqGetAlphaCast" (formula "21") (term "0"))
                                             (rule "castDel" (formula "21") (term "0"))
                                             (builtin "One Step Simplification" (formula "21"))
                                             (rule "true_left" (formula "21"))
                                             (rule "allLeft" (formula "1") (inst "t=i_2_0"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "inEqSimp_homoInEq1" (formula "1") (term "1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,1"))
                                             (rule "add_literals" (formula "1") (term "1,1,0,1"))
                                             (rule "times_zero_1" (formula "1") (term "1,0,1"))
                                             (rule "add_zero_right" (formula "1") (term "0,1"))
                                             (rule "leq_literals" (formula "1") (term "1"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "allLeft" (formula "2") (inst "t=j_1_0"))
                                             (rule "replace_known_left" (formula "2") (term "0,0,0") (ifseqformula "7"))
                                             (builtin "One Step Simplification" (formula "2"))
                                             (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "10"))
                                             (rule "qeq_literals" (formula "1") (term "0"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "closeFalse" (formula "1"))
                                          )
                                          (branch "CUT: self.size ≤ 2 + i_2_0 FALSE"
                                             (builtin "One Step Simplification" (formula "54"))
                                             (rule "applyEqReverse" (formula "53") (term "1") (ifseqformula "54"))
                                             (rule "hideAuxiliaryEq" (formula "54"))
                                             (rule "replace_known_right" (formula "33") (term "1") (ifseqformula "60"))
                                             (builtin "One Step Simplification" (formula "33"))
                                             (rule "inEqSimp_leqRight" (formula "60"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                             (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0,0"))
                                             (rule "applyEq" (formula "54") (term "1,0") (ifseqformula "34"))
                                             (builtin "One Step Simplification" (formula "54"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1"))
                                             (rule "mul_literals" (formula "1") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                             (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "1"))
                                             (rule "inEqSimp_homoInEq0" (formula "11") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "11") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "11") (term "1,0,0"))
                                             (rule "mul_literals" (formula "11") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "11") (term "0,0"))
                                             (rule "polySimp_addComm1" (formula "11") (term "0,0,0"))
                                             (rule "add_literals" (formula "11") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0"))
                                             (rule "add_literals" (formula "11") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "11") (term "1,0,0"))
                                             (rule "add_literals" (formula "11") (term "0,0"))
                                             (rule "qeq_literals" (formula "11") (term "0"))
                                             (builtin "One Step Simplification" (formula "11"))
                                             (rule "true_left" (formula "11"))
                                             (rule "seqGetAlphaCast" (formula "54") (term "1"))
                                             (rule "castedGetAny" (formula "54") (term "0"))
                                             (builtin "One Step Simplification" (formula "54"))
                                             (rule "true_left" (formula "54"))
                                             (rule "seqGetAlphaCast" (formula "7") (term "0"))
                                             (rule "castedGetAny" (formula "7") (term "0"))
                                             (builtin "One Step Simplification" (formula "7"))
                                             (rule "true_left" (formula "7"))
                                             (rule "commute_or_2" (formula "29") (term "0"))
                                             (rule "allLeft" (formula "4") (inst "t=Z(0(#))"))
                                             (rule "leq_literals" (formula "4") (term "1,0"))
                                             (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "38")))
                                             (rule "inEqSimp_commuteGeq" (formula "4"))
                                             (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "4"))
                                             (rule "qeq_literals" (formula "2") (term "0"))
                                             (builtin "One Step Simplification" (formula "2"))
                                             (rule "closeFalse" (formula "2"))
                                          )
                                       )
                                    )
                                 )
                              )
                              (branch "(IntNode)self.nodeseq[i_2_0].<created> = TRUE FALSE"
                                 (rule "applyEqReverse" (formula "53") (term "1,1") (ifseqformula "2"))
                                 (rule "hideAuxiliaryEq" (formula "2"))
                                 (rule "eqSymm" (formula "52") (term "1"))
                                 (rule "replace_known_right" (formula "1") (term "0,1,0,0") (ifseqformula "43"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "eqSymm" (formula "1"))
                                 (rule "applyEq" (formula "49") (term "0") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "49"))
                                 (rule "false_right" (formula "49"))
                                 (rule "allLeft" (formula "15") (inst "t=add(Z(1(#)), i_2_0)"))
                                 (rule "inEqSimp_commuteGeq" (formula "15") (term "1"))
                                 (rule "inEqSimp_homoInEq0" (formula "15") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "15") (term "1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "15") (term "1,0,1,0"))
                                 (rule "mul_literals" (formula "15") (term "0,1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "15") (term "0,1,0"))
                                 (rule "add_literals" (formula "15") (term "0,0,1,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "15") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "15") (term "0,1,0"))
                                 (rule "polySimp_elimOne" (formula "15") (term "0,1,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "15") (term "1") (ifseqformula "3"))
                                 (rule "inEqSimp_homoInEq1" (formula "15") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1"))
                                 (rule "mul_literals" (formula "15") (term "0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "15") (term "0,0,1"))
                                 (rule "polySimp_addComm1" (formula "15") (term "0,0,0,1"))
                                 (rule "add_literals" (formula "15") (term "0,0,0,0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,1"))
                                 (rule "add_literals" (formula "15") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "15") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "15") (term "0,0,1"))
                                 (rule "leq_literals" (formula "15") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "15"))
                                 (rule "inEqSimp_contradInEq1" (formula "15") (term "1") (ifseqformula "2"))
                                 (rule "qeq_literals" (formula "15") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "15"))
                                 (rule "allLeft" (formula "11") (inst "t=add(Z(1(#)), i_2_0)"))
                                 (rule "inEqSimp_commuteGeq" (formula "11") (term "1"))
                                 (rule "inEqSimp_homoInEq0" (formula "11") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "11") (term "1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "11") (term "1,0,1,0"))
                                 (rule "mul_literals" (formula "11") (term "0,1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "11") (term "0,1,0"))
                                 (rule "add_literals" (formula "11") (term "0,0,1,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "11") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "11") (term "0,1,0"))
                                 (rule "polySimp_elimOne" (formula "11") (term "0,1,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "11") (term "1,0") (ifseqformula "2"))
                                 (rule "qeq_literals" (formula "11") (term "0,1,0"))
                                 (builtin "One Step Simplification" (formula "11"))
                                 (rule "inEqSimp_contradInEq1" (formula "11") (term "1") (ifseqformula "3"))
                                 (rule "inEqSimp_homoInEq1" (formula "11") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1"))
                                 (rule "mul_literals" (formula "11") (term "0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "11") (term "0,0,1"))
                                 (rule "polySimp_addComm1" (formula "11") (term "0,0,0,1"))
                                 (rule "add_literals" (formula "11") (term "0,0,0,0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,1"))
                                 (rule "add_literals" (formula "11") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "11") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "11") (term "0,0,1"))
                                 (rule "leq_literals" (formula "11") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "11"))
                                 (rule "notLeft" (formula "11"))
                                 (rule "allLeft" (formula "19") (inst "t=add(Z(1(#)), i_2_0)"))
                                 (rule "inEqSimp_commuteGeq" (formula "19") (term "1,0,0,0,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "19") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "19") (term "1,0,1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "19") (term "1,0,1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "19") (term "0,1,0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "19") (term "0,1,0,0,0,0,0"))
                                 (rule "add_literals" (formula "19") (term "0,0,1,0,0,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "19") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "19") (term "0,1,0,0,0,0,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "19") (term "1,0,0,0,0") (ifseqformula "3"))
                                 (rule "inEqSimp_homoInEq1" (formula "19") (term "0,1,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0,0,0"))
                                 (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "19") (term "0,0,0,1,0,0,0,0"))
                                 (rule "add_literals" (formula "19") (term "0,0,0,0,1,0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,1,0,0,0,0"))
                                 (rule "add_literals" (formula "19") (term "1,1,0,0,1,0,0,0,0"))
                                 (rule "times_zero_1" (formula "19") (term "1,0,0,1,0,0,0,0"))
                                 (rule "add_zero_right" (formula "19") (term "0,0,1,0,0,0,0"))
                                 (rule "leq_literals" (formula "19") (term "0,1,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "19"))
                                 (rule "inEqSimp_contradInEq1" (formula "19") (term "1,0,0,0,0") (ifseqformula "2"))
                                 (rule "qeq_literals" (formula "19") (term "0,1,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "19"))
                                 (rule "allLeft" (formula "23") (inst "t=add(Z(1(#)), i_2_0)"))
                                 (rule "polySimp_addAssoc" (formula "23") (term "1,1,0,0"))
                                 (rule "add_literals" (formula "23") (term "0,1,1,0,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "23") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "23") (term "1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "23") (term "1,0,1,0"))
                                 (rule "mul_literals" (formula "23") (term "0,1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "23") (term "0,1,0"))
                                 (rule "add_literals" (formula "23") (term "0,0,1,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "23") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "23") (term "1,0,1"))
                                 (rule "polySimp_rightDist" (formula "23") (term "1,0,1"))
                                 (rule "mul_literals" (formula "23") (term "0,1,0,1"))
                                 (rule "polySimp_addComm1" (formula "23") (term "0,1"))
                                 (rule "polySimp_addAssoc" (formula "23") (term "0,0,1"))
                                 (rule "add_literals" (formula "23") (term "0,0,0,1"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "23") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "23") (term "0,1,0"))
                                 (rule "polySimp_elimOne" (formula "23") (term "0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "23") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "23") (term "1,1"))
                                 (rule "mul_literals" (formula "23") (term "0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1"))
                                 (rule "polySimp_elimOne" (formula "23") (term "1,1,1"))
                                 (rule "inEqSimp_contradInEq1" (formula "23") (term "1,0") (ifseqformula "2"))
                                 (rule "qeq_literals" (formula "23") (term "0,1,0"))
                                 (builtin "One Step Simplification" (formula "23"))
                                 (rule "allLeft" (formula "20") (inst "t=i_2_0"))
                                 (rule "inEqSimp_commuteGeq" (formula "20") (term "1,0,0,0,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "20") (term "1,0,0,0,0") (ifseqformula "3"))
                                 (rule "inEqSimp_homoInEq1" (formula "20") (term "0,1,0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,1,0,0,0,0"))
                                 (rule "add_literals" (formula "20") (term "1,1,0,0,1,0,0,0,0"))
                                 (rule "times_zero_1" (formula "20") (term "1,0,0,1,0,0,0,0"))
                                 (rule "add_zero_right" (formula "20") (term "0,0,1,0,0,0,0"))
                                 (rule "leq_literals" (formula "20") (term "0,1,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "20"))
                                 (rule "inEqSimp_contradInEq1" (formula "20") (term "1,0,0,0,0") (ifseqformula "2"))
                                 (rule "qeq_literals" (formula "20") (term "0,1,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "20"))
                                 (rule "allLeft" (formula "41") (inst "t=add(Z(1(#)), i_2_0)"))
                                 (rule "inEqSimp_commuteGeq" (formula "41") (term "1"))
                                 (rule "inEqSimp_homoInEq0" (formula "41") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "41") (term "1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "41") (term "1,0,1,0"))
                                 (rule "mul_literals" (formula "41") (term "0,1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "41") (term "0,1,0"))
                                 (rule "add_literals" (formula "41") (term "0,0,1,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "41") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "41") (term "0,1,0"))
                                 (rule "polySimp_elimOne" (formula "41") (term "0,1,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "41") (term "1") (ifseqformula "3"))
                                 (rule "inEqSimp_homoInEq1" (formula "41") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "41") (term "1,0,0,1"))
                                 (rule "mul_literals" (formula "41") (term "0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "41") (term "0,0,1"))
                                 (rule "polySimp_addComm1" (formula "41") (term "0,0,0,1"))
                                 (rule "add_literals" (formula "41") (term "0,0,0,0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "41") (term "0,0,1"))
                                 (rule "add_literals" (formula "41") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "41") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "41") (term "0,0,1"))
                                 (rule "leq_literals" (formula "41") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "41"))
                                 (rule "inEqSimp_contradInEq1" (formula "41") (term "1") (ifseqformula "2"))
                                 (rule "qeq_literals" (formula "41") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "41"))
                                 (rule "pullOutSelect" (formula "41") (term "0") (inst "selectSK=IntNode_data_3"))
                                 (rule "simplifySelectOfAnon" (formula "41"))
                                 (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "49")))
                                 (rule "eqSymm" (formula "42"))
                                 (rule "applyEqReverse" (formula "41") (term "1") (ifseqformula "42"))
                                 (rule "hideAuxiliaryEq" (formula "42"))
                                 (rule "elementOfUnion" (formula "41") (term "0,0,0"))
                                 (rule "elementOfInfiniteUnion" (formula "41") (term "1,0,0,0"))
                                 (builtin "One Step Simplification" (formula "41"))
                                 (rule "elementOfSingleton" (formula "41") (term "0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "41"))
                                 (rule "elementOfSingleton" (formula "41") (term "1,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "41"))
                                 (rule "eqSymm" (formula "41") (term "1,0,0,0,0"))
                                 (rule "allLeft" (formula "43") (inst "t=i_2_0"))
                                 (rule "replaceKnownSelect_taclet1011111_14" (formula "43") (term "0,0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet10111011111_23" (formula "43") (term "0,0,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "43") (term "1"))
                                 (rule "polySimp_addComm1" (formula "43") (term "0,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "43") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "43") (term "1,1"))
                                 (rule "mul_literals" (formula "43") (term "0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "43") (term "1,1,1"))
                                 (rule "polySimp_elimOne" (formula "43") (term "1,1,1"))
                                 (rule "inEqSimp_contradInEq1" (formula "43") (term "1,0") (ifseqformula "2"))
                                 (rule "qeq_literals" (formula "43") (term "0,1,0"))
                                 (builtin "One Step Simplification" (formula "43"))
                                 (rule "inEqSimp_contradInEq1" (formula "43") (term "1") (ifseqformula "3"))
                                 (rule "inEqSimp_homoInEq1" (formula "43") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "43") (term "1,0,0,1"))
                                 (rule "mul_literals" (formula "43") (term "0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "43") (term "0,0,1"))
                                 (rule "polySimp_addComm1" (formula "43") (term "0,0,0,1"))
                                 (rule "add_literals" (formula "43") (term "0,0,0,0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "43") (term "0,0,1"))
                                 (rule "add_literals" (formula "43") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "43") (term "1,0,0,1"))
                                 (rule "add_literals" (formula "43") (term "0,0,1"))
                                 (rule "leq_literals" (formula "43") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "43"))
                                 (rule "replace_known_left" (formula "58") (term "1") (ifseqformula "43"))
                                 (builtin "One Step Simplification" (formula "58"))
                                 (rule "allRight" (formula "58") (inst "sk=j_1_0"))
                                 (rule "orRight" (formula "58"))
                                 (rule "orRight" (formula "59"))
                                 (rule "orRight" (formula "58"))
                                 (rule "notRight" (formula "60"))
                                 (rule "inEqSimp_geqRight" (formula "60"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0"))
                                 (rule "inEqSimp_leqRight" (formula "60"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                 (rule "polySimp_elimOne" (formula "2") (term "0"))
                                 (rule "allLeft" (formula "28") (inst "t=i_2_0"))
                                 (rule "inEqSimp_homoInEq1" (formula "28") (term "1"))
                                 (rule "polySimp_addComm1" (formula "28") (term "0,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "28") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "28") (term "1,1"))
                                 (rule "mul_literals" (formula "28") (term "0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1"))
                                 (rule "polySimp_elimOne" (formula "28") (term "1,1,1"))
                                 (rule "inEqSimp_contradInEq1" (formula "28") (term "1,0") (ifseqformula "5"))
                                 (rule "qeq_literals" (formula "28") (term "0,1,0"))
                                 (builtin "One Step Simplification" (formula "28"))
                                 (rule "inEqSimp_contradInEq1" (formula "28") (term "1") (ifseqformula "6"))
                                 (rule "inEqSimp_homoInEq1" (formula "28") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1"))
                                 (rule "mul_literals" (formula "28") (term "0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "28") (term "0,0,1"))
                                 (rule "polySimp_addComm1" (formula "28") (term "0,0,0,1"))
                                 (rule "add_literals" (formula "28") (term "0,0,0,0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,1"))
                                 (rule "add_literals" (formula "28") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "28") (term "1,0,0,1"))
                                 (rule "add_literals" (formula "28") (term "0,0,1"))
                                 (rule "leq_literals" (formula "28") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "28"))
                                 (rule "allLeft" (formula "48") (inst "t=add(Z(1(#)), i_2_0)"))
                                 (rule "polySimp_addAssoc" (formula "48") (term "1,1,0,0"))
                                 (rule "add_literals" (formula "48") (term "0,1,1,0,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "48") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "48") (term "1,0,1"))
                                 (rule "polySimp_rightDist" (formula "48") (term "1,0,1"))
                                 (rule "mul_literals" (formula "48") (term "0,1,0,1"))
                                 (rule "polySimp_addComm1" (formula "48") (term "0,1"))
                                 (rule "polySimp_addAssoc" (formula "48") (term "0,0,1"))
                                 (rule "add_literals" (formula "48") (term "0,0,0,1"))
                                 (rule "inEqSimp_homoInEq0" (formula "48") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "48") (term "1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "48") (term "1,0,1,0"))
                                 (rule "mul_literals" (formula "48") (term "0,1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "48") (term "0,1,0"))
                                 (rule "add_literals" (formula "48") (term "0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "48") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "48") (term "1,1"))
                                 (rule "polySimp_mulLiterals" (formula "48") (term "1,1,1"))
                                 (rule "mul_literals" (formula "48") (term "0,1,1"))
                                 (rule "polySimp_elimOne" (formula "48") (term "1,1,1"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "48") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "48") (term "0,1,0"))
                                 (rule "polySimp_elimOne" (formula "48") (term "0,1,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "48") (term "1,0") (ifseqformula "5"))
                                 (rule "qeq_literals" (formula "48") (term "0,1,0"))
                                 (builtin "One Step Simplification" (formula "48"))
                                 (rule "pullOutSelect" (formula "48") (term "0,0") (inst "selectSK=IntNode_next_3"))
                                 (rule "simplifySelectOfAnon" (formula "48"))
                                 (builtin "One Step Simplification" (formula "48") (ifInst ""  (formula "55")))
                                 (rule "eqSymm" (formula "49") (term "0"))
                                 (rule "elementOfUnion" (formula "48") (term "0,0,0"))
                                 (rule "elementOfInfiniteUnion" (formula "48") (term "1,0,0,0"))
                                 (builtin "One Step Simplification" (formula "48"))
                                 (rule "elementOfSingleton" (formula "48") (term "1,0,1,0,0,0"))
                                 (builtin "One Step Simplification" (formula "48"))
                                 (rule "elementOfSingleton" (formula "48") (term "0,0,0"))
                                 (builtin "One Step Simplification" (formula "48"))
                                 (rule "ifthenelse_negated" (formula "48") (term "0"))
                                 (rule "ifthenelse_split" (formula "44") (term "0"))
                                 (branch "∃ int j; ( (IntNode)self.nodeseq[j] = self.first ∧ j ≥ 0 ∧ j ≤ -1 + self.size) TRUE"
                                    (rule "exLeft" (formula "44") (inst "sk=j_1"))
                                    (rule "andLeft" (formula "44"))
                                    (rule "andLeft" (formula "44"))
                                    (rule "eqSymm" (formula "47"))
                                    (rule "inEqSimp_homoInEq0" (formula "46"))
                                    (rule "polySimp_addComm1" (formula "46") (term "0"))
                                    (rule "applyEq" (formula "60") (term "0") (ifseqformula "47"))
                                    (builtin "One Step Simplification" (formula "60"))
                                    (rule "false_right" (formula "60"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "46"))
                                    (rule "polySimp_mulComm0" (formula "46") (term "1"))
                                    (rule "polySimp_rightDist" (formula "46") (term "1"))
                                    (rule "mul_literals" (formula "46") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "46") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "46") (term "1,1"))
                                    (rule "seqGetAlphaCast" (formula "15") (term "0"))
                                    (rule "castDel" (formula "15") (term "0"))
                                    (builtin "One Step Simplification" (formula "15"))
                                    (rule "true_left" (formula "15"))
                                    (rule "seqGetAlphaCast" (formula "15") (term "1,1"))
                                    (rule "castedGetAny" (formula "15") (term "0"))
                                    (builtin "One Step Simplification" (formula "15"))
                                    (rule "true_left" (formula "15"))
                                    (rule "commute_or_2" (formula "22") (term "0"))
                                    (rule "allLeft" (formula "14") (inst "t=j_0"))
                                    (rule "inEqSimp_commuteGeq" (formula "14") (term "1"))
                                    (rule "applyEq" (formula "14") (term "0,0,0,0") (ifseqformula "41"))
                                    (rule "replace_known_right" (formula "14") (term "0,0,0") (ifseqformula "63"))
                                    (builtin "One Step Simplification" (formula "14"))
                                    (rule "true_left" (formula "14"))
                                    (rule "allLeft" (formula "49") (inst "t=j_0"))
                                    (rule "inEqSimp_commuteGeq" (formula "49") (term "1"))
                                    (rule "applyEq" (formula "49") (term "1,0,0,0") (ifseqformula "40"))
                                    (rule "replaceKnownSelect_taclet1011111_16" (formula "49") (term "0,0,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet1011111_17" (formula "49") (term "0,0,0"))
                                    (rule "applyEq" (formula "49") (term "0,0,0") (ifseqformula "43"))
                                    (rule "eqSymm" (formula "49") (term "0,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "49") (term "1") (ifseqformula "42"))
                                    (rule "inEqSimp_homoInEq1" (formula "49") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "49") (term "0,0,1"))
                                    (rule "add_literals" (formula "49") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "49") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "49") (term "0,0,1"))
                                    (rule "leq_literals" (formula "49") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "49"))
                                    (rule "inEqSimp_contradInEq1" (formula "49") (term "1") (ifseqformula "41"))
                                    (rule "qeq_literals" (formula "49") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "49"))
                                    (rule "allLeft" (formula "11") (inst "t=add(Z(neglit(1(#))),
    int::select(heap, self, IntLinkedList::$size))"))
                                    (rule "inEqSimp_homoInEq0" (formula "11") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "11") (term "1,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "11") (term "1,0,1,0"))
                                    (rule "mul_literals" (formula "11") (term "0,1,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "11") (term "0,1,0"))
                                    (rule "add_literals" (formula "11") (term "0,0,1,0"))
                                    (rule "add_zero_left" (formula "11") (term "0,1,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "11") (term "1"))
                                    (rule "polySimp_mulComm0" (formula "11") (term "1,0,1"))
                                    (rule "polySimp_rightDist" (formula "11") (term "1,0,1"))
                                    (rule "mul_literals" (formula "11") (term "0,1,0,1"))
                                    (rule "polySimp_addAssoc" (formula "11") (term "0,1"))
                                    (rule "polySimp_addComm0" (formula "11") (term "0,0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,1"))
                                    (rule "add_literals" (formula "11") (term "1,1,0,1"))
                                    (rule "times_zero_1" (formula "11") (term "1,0,1"))
                                    (rule "add_literals" (formula "11") (term "0,1"))
                                    (rule "leq_literals" (formula "11") (term "1"))
                                    (builtin "One Step Simplification" (formula "11"))
                                    (rule "applyEq" (formula "11") (term "0,0,0") (ifseqformula "17"))
                                    (builtin "One Step Simplification" (formula "11"))
                                    (rule "true_left" (formula "11"))
                                    (rule "allLeft" (formula "12") (inst "t=Z(0(#))"))
                                    (rule "typeEqDerived" (formula "12") (term "0,0,0") (ifseqformula "18"))
                                    (builtin "One Step Simplification" (formula "12"))
                                    (rule "true_left" (formula "12"))
                                    (rule "allLeft" (formula "12") (inst "t=add(Z(neglit(1(#))),
    int::select(heap, self, IntLinkedList::$size))"))
                                    (rule "typeEqDerived" (formula "12") (term "0,0,0") (ifseqformula "17"))
                                    (builtin "One Step Simplification" (formula "12"))
                                    (rule "true_left" (formula "12"))
                                    (rule "allLeft" (formula "11") (inst "t=Z(0(#))"))
                                    (rule "leq_literals" (formula "11") (term "1,0"))
                                    (builtin "One Step Simplification" (formula "11"))
                                    (rule "inEqSimp_commuteGeq" (formula "11") (term "1"))
                                    (rule "applyEq" (formula "11") (term "0,0,0") (ifseqformula "18"))
                                    (builtin "One Step Simplification" (formula "11"))
                                    (rule "true_left" (formula "11"))
                                    (rule "allLeft" (formula "11") (inst "t=i_2_0"))
                                    (rule "inEqSimp_commuteGeq" (formula "11") (term "1"))
                                    (rule "applyEq" (formula "11") (term "0,0,0,0") (ifseqformula "16"))
                                    (builtin "One Step Simplification" (formula "11"))
                                    (rule "true_left" (formula "11"))
                                    (rule "allLeft" (formula "12") (inst "t=i_2_0"))
                                    (rule "typeEqDerived" (formula "12") (term "0,0,0") (ifseqformula "16"))
                                    (builtin "One Step Simplification" (formula "12"))
                                    (rule "true_left" (formula "12"))
                                    (rule "allLeft" (formula "19") (inst "t=j_0"))
                                    (rule "inEqSimp_commuteGeq" (formula "19") (term "1"))
                                    (rule "applyEq" (formula "19") (term "1,1,0,0") (ifseqformula "41"))
                                    (rule "inEqSimp_contradInEq1" (formula "19") (term "1") (ifseqformula "43"))
                                    (rule "inEqSimp_homoInEq1" (formula "19") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,1"))
                                    (rule "add_literals" (formula "19") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "19") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "19") (term "0,0,1"))
                                    (rule "leq_literals" (formula "19") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "19"))
                                    (rule "inEqSimp_contradInEq1" (formula "19") (term "1") (ifseqformula "42"))
                                    (rule "qeq_literals" (formula "19") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "19"))
                                    (rule "commute_or_2" (formula "24") (term "0"))
                                    (rule "seqGetAlphaCast" (formula "16") (term "0"))
                                    (rule "castDel" (formula "16") (term "0"))
                                    (builtin "One Step Simplification" (formula "16"))
                                    (rule "true_left" (formula "16"))
                                    (rule "seqGetAlphaCast" (formula "17") (term "0"))
                                    (rule "castDel" (formula "17") (term "0"))
                                    (builtin "One Step Simplification" (formula "17"))
                                    (rule "true_left" (formula "17"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "26") (term "0") (ifseqformula "7"))
                                    (rule "replace_known_left" (formula "26") (term "0") (ifseqformula "27"))
                                    (builtin "One Step Simplification" (formula "26"))
                                    (rule "true_left" (formula "26"))
                                    (rule "seqGetAlphaCast" (formula "41") (term "0"))
                                    (rule "castedGetAny" (formula "41") (term "0"))
                                    (builtin "One Step Simplification" (formula "41"))
                                    (rule "true_left" (formula "41"))
                                    (rule "seqGetAlphaCast" (formula "44") (term "0"))
                                    (rule "castDel" (formula "44") (term "0"))
                                    (builtin "One Step Simplification" (formula "44"))
                                    (rule "true_left" (formula "44"))
                                    (rule "seqGetAlphaCast" (formula "27") (term "0,0"))
                                    (rule "castedGetAny" (formula "27") (term "0"))
                                    (builtin "One Step Simplification" (formula "27"))
                                    (rule "true_left" (formula "27"))
                                    (rule "cut_direct" (formula "27") (term "1"))
                                    (branch "CUT: self.size ≤ 1 TRUE"
                                       (builtin "One Step Simplification" (formula "28"))
                                       (rule "true_left" (formula "28"))
                                       (rule "inEqSimp_antiSymm" (formula "36") (ifseqformula "27"))
                                       (rule "applyEq" (formula "37") (term "0") (ifseqformula "36"))
                                       (rule "qeq_literals" (formula "37"))
                                       (rule "true_left" (formula "37"))
                                       (rule "applyEq" (formula "11") (term "1,1,0") (ifseqformula "36"))
                                       (rule "applyEq" (formula "40") (term "1,1,0") (ifseqformula "36"))
                                       (rule "applyEq" (formula "28") (term "0,1") (ifseqformula "36"))
                                       (rule "inEqSimp_homoInEq0" (formula "28") (term "1"))
                                       (rule "mul_literals" (formula "28") (term "1,0,1"))
                                       (rule "polySimp_addComm1" (formula "28") (term "0,1"))
                                       (rule "add_literals" (formula "28") (term "0,0,1"))
                                       (rule "applyEq" (formula "30") (term "1,1,1,0") (ifseqformula "36"))
                                       (rule "add_literals" (formula "30") (term "1,1,0"))
                                       (rule "applyEq" (formula "51") (term "1,1,0") (ifseqformula "36"))
                                       (rule "applyEq" (formula "55") (term "1,1,1,0") (ifseqformula "36"))
                                       (rule "add_literals" (formula "55") (term "1,1,0"))
                                       (rule "applyEq" (formula "12") (term "1,1,0") (ifseqformula "36"))
                                       (rule "applyEq" (formula "6") (term "0") (ifseqformula "36"))
                                       (rule "inEqSimp_homoInEq1" (formula "6"))
                                       (rule "mul_literals" (formula "6") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "6") (term "0"))
                                       (rule "add_literals" (formula "6") (term "0,0"))
                                       (rule "applyEq" (formula "27") (term "0") (ifseqformula "36"))
                                       (rule "leq_literals" (formula "27"))
                                       (rule "true_left" (formula "27"))
                                       (rule "applyEq" (formula "20") (term "1,1,0") (ifseqformula "35"))
                                       (rule "applyEq" (formula "16") (term "1,1,0") (ifseqformula "35"))
                                       (rule "add_literals" (formula "16") (term "1,0"))
                                       (rule "applyEq" (formula "48") (term "1,1,1,0,0,0,0,0") (ifseqformula "35"))
                                       (rule "add_literals" (formula "48") (term "1,1,0,0,0,0,0"))
                                       (rule "applyEq" (formula "50") (term "1,1,1,0,0,1,1,0,0,0,0,0") (ifseqformula "35"))
                                       (rule "add_literals" (formula "50") (term "1,1,0,0,1,1,0,0,0,0,0"))
                                       (rule "applyEq" (formula "25") (term "1,1,0,0,0,0,0") (ifseqformula "35"))
                                       (rule "applyEq" (formula "23") (term "1,1,0") (ifseqformula "35"))
                                       (rule "applyEq" (formula "38") (term "1,1,0") (ifseqformula "35"))
                                       (rule "applyEq" (formula "22") (term "1,1,1,0") (ifseqformula "35"))
                                       (rule "add_literals" (formula "22") (term "1,1,0"))
                                       (rule "applyEq" (formula "46") (term "0") (ifseqformula "35"))
                                       (rule "inEqSimp_homoInEq1" (formula "46"))
                                       (rule "mul_literals" (formula "46") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "46") (term "0"))
                                       (rule "add_literals" (formula "46") (term "0,0"))
                                       (rule "add_zero_left" (formula "46") (term "0"))
                                       (rule "applyEq" (formula "24") (term "1,1,0") (ifseqformula "35"))
                                       (rule "applyEq" (formula "33") (term "1,1,0") (ifseqformula "35"))
                                       (rule "add_literals" (formula "33") (term "1,0"))
                                       (rule "applyEq" (formula "53") (term "0,1") (ifseqformula "35"))
                                       (rule "inEqSimp_homoInEq0" (formula "53") (term "1"))
                                       (rule "mul_literals" (formula "53") (term "1,0,1"))
                                       (rule "polySimp_addComm1" (formula "53") (term "0,1"))
                                       (rule "add_literals" (formula "53") (term "0,0,1"))
                                       (rule "applyEq" (formula "25") (term "1,1,0,0,0") (ifseqformula "35"))
                                       (rule "applyEq" (formula "14") (term "1,1,0") (ifseqformula "35"))
                                       (rule "applyEq" (formula "21") (term "1,1,0") (ifseqformula "35"))
                                       (rule "applyEq" (formula "54") (term "1,1,1,0,0,1,1,0,0,0,0,0") (ifseqformula "35"))
                                       (rule "add_literals" (formula "54") (term "1,1,0,0,1,1,0,0,0,0,0"))
                                       (rule "applyEq" (formula "2") (term "0") (ifseqformula "35"))
                                       (rule "inEqSimp_homoInEq1" (formula "2"))
                                       (rule "mul_literals" (formula "2") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0"))
                                       (rule "add_literals" (formula "2") (term "0,0"))
                                       (rule "add_zero_left" (formula "2") (term "0"))
                                       (rule "applyEq" (formula "56") (term "1,1,0,0") (ifseqformula "35"))
                                       (rule "applyEq" (formula "43") (term "1,1,0") (ifseqformula "35"))
                                       (rule "add_literals" (formula "43") (term "1,0"))
                                       (rule "applyEq" (formula "13") (term "1,1,1,0,0,1,0") (ifseqformula "35"))
                                       (rule "add_literals" (formula "13") (term "1,1,0,0,1,0"))
                                       (rule "applyEq" (formula "42") (term "0") (ifseqformula "35"))
                                       (rule "inEqSimp_homoInEq1" (formula "42"))
                                       (rule "mul_literals" (formula "42") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "42") (term "0"))
                                       (rule "add_literals" (formula "42") (term "0,0"))
                                       (rule "add_zero_left" (formula "42") (term "0"))
                                       (rule "applyEq" (formula "43") (term "0") (ifseqformula "47"))
                                       (rule "eqSymm" (formula "43"))
                                       (rule "applyEq" (formula "31") (term "0") (ifseqformula "33"))
                                       (rule "applyEq" (formula "16") (term "0") (ifseqformula "17"))
                                       (rule "eqSymm" (formula "16"))
                                       (rule "applyEq" (formula "55") (term "1") (ifseqformula "35"))
                                       (rule "applyEq" (formula "16") (term "1,0") (ifseqformula "31"))
                                       (builtin "One Step Simplification" (formula "16"))
                                       (rule "true_left" (formula "16"))
                                       (rule "applyEq" (formula "31") (term "1,0") (ifseqformula "30"))
                                       (rule "applyEq" (formula "61") (term "0") (ifseqformula "30"))
                                       (rule "applyEq" (formula "25") (term "1,0") (ifseqformula "30"))
                                       (rule "applyEq" (formula "47") (term "1,1") (ifseqformula "30"))
                                       (rule "applyEq" (formula "38") (term "1") (ifseqformula "30"))
                                       (rule "applyEq" (formula "41") (term "1,0") (ifseqformula "30"))
                                       (builtin "One Step Simplification" (formula "41"))
                                       (rule "true_left" (formula "41"))
                                       (rule "applyEq" (formula "18") (term "1,1") (ifseqformula "30"))
                                       (rule "applyEq" (formula "31") (term "1") (ifseqformula "30"))
                                       (rule "applyEq" (formula "21") (term "1,0,0,0,0") (ifseqformula "30"))
                                       (rule "applyEq" (formula "32") (term "1") (ifseqformula "33"))
                                       (rule "applyEq" (formula "34") (term "1") (ifseqformula "33"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "1"))
                                       (rule "mul_literals" (formula "26") (term "1,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                                       (rule "mul_literals" (formula "6") (term "1"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "50") (term "1"))
                                       (rule "mul_literals" (formula "50") (term "1,1"))
                                       (rule "inEqSimp_subsumption1" (formula "50") (term "1") (ifseqformula "5"))
                                       (rule "leq_literals" (formula "50") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "50"))
                                       (rule "true_left" (formula "50"))
                                       (rule "inEqSimp_contradInEq1" (formula "6") (ifseqformula "5"))
                                       (rule "qeq_literals" (formula "6") (term "0"))
                                       (builtin "One Step Simplification" (formula "6"))
                                       (rule "closeFalse" (formula "6"))
                                    )
                                    (branch "CUT: self.size ≤ 1 FALSE"
                                       (builtin "One Step Simplification" (formula "27"))
                                       (rule "inEqSimp_leqRight" (formula "60"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                       (rule "mul_literals" (formula "1") (term "1"))
                                       (rule "inEqSimp_subsumption1" (formula "37") (ifseqformula "1"))
                                       (rule "leq_literals" (formula "37") (term "0"))
                                       (builtin "One Step Simplification" (formula "37"))
                                       (rule "true_left" (formula "37"))
                                       (rule "commute_and_2" (formula "49") (term "0,0,0,0"))
                                       (rule "allLeft" (formula "26") (inst "t=j_0"))
                                       (rule "inEqSimp_commuteGeq" (formula "26") (term "1,0,0,0,0"))
                                       (rule "applyEq" (formula "26") (term "1,0,0,0,0,0,0,0") (ifseqformula "42"))
                                       (rule "inEqSimp_contradInEq1" (formula "26") (term "1,0,0,0,0,0") (ifseqformula "43"))
                                       (rule "qeq_literals" (formula "26") (term "0,1,0,0,0,0,0"))
                                       (builtin "One Step Simplification" (formula "26"))
                                       (rule "inEqSimp_contradInEq1" (formula "26") (term "1,0,0,0,0") (ifseqformula "44"))
                                       (rule "inEqSimp_homoInEq1" (formula "26") (term "0,1,0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,1,0,0,0,0"))
                                       (rule "add_literals" (formula "26") (term "1,1,0,0,1,0,0,0,0"))
                                       (rule "times_zero_1" (formula "26") (term "1,0,0,1,0,0,0,0"))
                                       (rule "add_zero_right" (formula "26") (term "0,0,1,0,0,0,0"))
                                       (rule "leq_literals" (formula "26") (term "0,1,0,0,0,0"))
                                       (builtin "One Step Simplification" (formula "26"))
                                       (rule "allLeft" (formula "56") (inst "t=j_0"))
                                       (rule "inEqSimp_homoInEq1" (formula "56") (term "1"))
                                       (rule "polySimp_addComm1" (formula "56") (term "0,1"))
                                       (rule "applyEq" (formula "56") (term "1,0,0,0") (ifseqformula "42"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "1"))
                                       (rule "polySimp_mulComm0" (formula "56") (term "1,1"))
                                       (rule "polySimp_rightDist" (formula "56") (term "1,1"))
                                       (rule "mul_literals" (formula "56") (term "0,1,1"))
                                       (rule "polySimp_mulLiterals" (formula "56") (term "1,1,1"))
                                       (rule "polySimp_elimOne" (formula "56") (term "1,1,1"))
                                       (rule "inEqSimp_contradInEq1" (formula "56") (term "1,0") (ifseqformula "43"))
                                       (rule "qeq_literals" (formula "56") (term "0,1,0"))
                                       (builtin "One Step Simplification" (formula "56"))
                                       (rule "pullOutSelect" (formula "56") (term "0,0") (inst "selectSK=IntNode_next_4"))
                                       (rule "simplifySelectOfAnon" (formula "56"))
                                       (builtin "One Step Simplification" (formula "56") (ifInst ""  (formula "67")) (ifInst ""  (formula "35")))
                                       (rule "eqSymm" (formula "57") (term "0"))
                                       (rule "applyEq" (formula "56") (term "2,0") (ifseqformula "28"))
                                       (rule "elementOfUnion" (formula "56") (term "0,0"))
                                       (rule "elementOfInfiniteUnion" (formula "56") (term "1,0,0"))
                                       (builtin "One Step Simplification" (formula "56"))
                                       (rule "elementOfSingleton" (formula "56") (term "1,0,1,0,0"))
                                       (builtin "One Step Simplification" (formula "56"))
                                       (rule "elementOfSingleton" (formula "56") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "56"))
                                       (rule "applyEqReverse" (formula "57") (term "1,0") (ifseqformula "56"))
                                       (rule "hideAuxiliaryEq" (formula "56"))
                                       (rule "allLeft" (formula "32") (inst "t=j_0"))
                                       (rule "inEqSimp_homoInEq1" (formula "32") (term "1"))
                                       (rule "polySimp_addComm1" (formula "32") (term "0,1"))
                                       (rule "applyEq" (formula "32") (term "1,0,0,0") (ifseqformula "43"))
                                       (rule "eqSymm" (formula "32") (term "0,0"))
                                       (rule "applyEq" (formula "32") (term "1,0,0") (ifseqformula "28"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1"))
                                       (rule "polySimp_mulComm0" (formula "32") (term "1,1"))
                                       (rule "polySimp_rightDist" (formula "32") (term "1,1"))
                                       (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1"))
                                       (rule "mul_literals" (formula "32") (term "0,1,1"))
                                       (rule "polySimp_elimOne" (formula "32") (term "1,1,1"))
                                       (rule "inEqSimp_contradInEq1" (formula "32") (term "1,0") (ifseqformula "44"))
                                       (rule "qeq_literals" (formula "32") (term "0,1,0"))
                                       (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "57")))
                                       (rule "true_left" (formula "32"))
                                       (rule "seqGetAlphaCast" (formula "5") (term "0"))
                                       (rule "castDel" (formula "5") (term "0"))
                                       (builtin "One Step Simplification" (formula "5"))
                                       (rule "true_left" (formula "5"))
                                       (rule "seqGetAlphaCast" (formula "19") (term "0"))
                                       (rule "castDel" (formula "19") (term "0"))
                                       (builtin "One Step Simplification" (formula "19"))
                                       (rule "true_left" (formula "19"))
                                       (rule "seqGetAlphaCast" (formula "19") (term "1,1"))
                                       (rule "castedGetAny" (formula "19") (term "0"))
                                       (builtin "One Step Simplification" (formula "19"))
                                       (rule "true_left" (formula "19"))
                                       (rule "commute_or_2" (formula "26") (term "0"))
                                       (rule "cut_direct" (formula "30") (term "1"))
                                       (branch "CUT: self.size ≤ 2 + i_2_0 TRUE"
                                          (builtin "One Step Simplification" (formula "31"))
                                          (rule "true_left" (formula "31"))
                                          (rule "replace_known_left" (formula "55") (term "1") (ifseqformula "30"))
                                          (builtin "One Step Simplification" (formula "55"))
                                          (rule "true_left" (formula "55"))
                                          (rule "inEqSimp_antiSymm" (formula "7") (ifseqformula "30"))
                                          (rule "applyEq" (formula "59") (term "1,1,0,0") (ifseqformula "7"))
                                          (rule "applyEq" (formula "51") (term "1,1,1,0,0,0,0") (ifseqformula "7"))
                                          (rule "polySimp_addAssoc" (formula "51") (term "1,1,0,0,0,0"))
                                          (rule "add_literals" (formula "51") (term "0,1,1,0,0,0,0"))
                                          (rule "applyEq" (formula "28") (term "1,1,0,0,0,0,0") (ifseqformula "7"))
                                          (rule "applyEq" (formula "18") (term "1,1,0") (ifseqformula "7"))
                                          (rule "polySimp_addAssoc" (formula "18") (term "1,0"))
                                          (rule "add_literals" (formula "18") (term "0,1,0"))
                                          (rule "applyEq" (formula "13") (term "1,1,0") (ifseqformula "7"))
                                          (rule "applyEq" (formula "23") (term "1,1,0") (ifseqformula "7"))
                                          (rule "applyEq" (formula "27") (term "1,1,0") (ifseqformula "7"))
                                          (rule "applyEq" (formula "15") (term "1,1,1,0,0,1,0") (ifseqformula "7"))
                                          (rule "polySimp_addAssoc" (formula "15") (term "1,1,0,0,1,0"))
                                          (rule "add_literals" (formula "15") (term "0,1,1,0,0,1,0"))
                                          (rule "applyEq" (formula "49") (term "0") (ifseqformula "7"))
                                          (rule "inEqSimp_homoInEq1" (formula "49"))
                                          (rule "polySimp_mulComm0" (formula "49") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "49") (term "1,0"))
                                          (rule "mul_literals" (formula "49") (term "0,1,0"))
                                          (rule "polySimp_addComm1" (formula "49") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "49") (term "0,0"))
                                          (rule "add_literals" (formula "49") (term "0,0,0"))
                                          (rule "applyEq" (formula "24") (term "1,1,1,0") (ifseqformula "7"))
                                          (rule "polySimp_addAssoc" (formula "24") (term "1,1,0"))
                                          (rule "add_literals" (formula "24") (term "0,1,1,0"))
                                          (rule "applyEq" (formula "1") (term "0") (ifseqformula "7"))
                                          (rule "inEqSimp_homoInEq1" (formula "1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                          (rule "mul_literals" (formula "1") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "applyEq" (formula "31") (term "0") (ifseqformula "7"))
                                          (rule "inEqSimp_homoInEq0" (formula "31"))
                                          (rule "polySimp_pullOutFactor1" (formula "31") (term "0"))
                                          (rule "add_literals" (formula "31") (term "1,0"))
                                          (rule "times_zero_1" (formula "31") (term "0"))
                                          (rule "qeq_literals" (formula "31"))
                                          (rule "true_left" (formula "31"))
                                          (rule "applyEq" (formula "3") (term "0") (ifseqformula "7"))
                                          (rule "inEqSimp_homoInEq1" (formula "3"))
                                          (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                          (rule "mul_literals" (formula "3") (term "0,1,0"))
                                          (rule "polySimp_addComm1" (formula "3") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                          (rule "add_literals" (formula "3") (term "0,0,0"))
                                          (rule "applyEq" (formula "26") (term "1,1,0") (ifseqformula "7"))
                                          (rule "applyEq" (formula "8") (term "0") (ifseqformula "7"))
                                          (rule "inEqSimp_homoInEq1" (formula "8"))
                                          (rule "polySimp_pullOutFactor1" (formula "8") (term "0"))
                                          (rule "add_literals" (formula "8") (term "1,0"))
                                          (rule "times_zero_1" (formula "8") (term "0"))
                                          (rule "leq_literals" (formula "8"))
                                          (rule "true_left" (formula "8"))
                                          (rule "applyEq" (formula "44") (term "1,1,0") (ifseqformula "7"))
                                          (rule "polySimp_addAssoc" (formula "44") (term "1,0"))
                                          (rule "add_literals" (formula "44") (term "0,1,0"))
                                          (rule "applyEq" (formula "31") (term "1,1,1,0") (ifseqformula "7"))
                                          (rule "polySimp_addAssoc" (formula "31") (term "1,1,0"))
                                          (rule "add_literals" (formula "31") (term "0,1,1,0"))
                                          (rule "applyEq" (formula "13") (term "1,1,0") (ifseqformula "7"))
                                          (rule "applyEq" (formula "27") (term "1,1,0,0,0") (ifseqformula "7"))
                                          (rule "applyEq" (formula "55") (term "1,1,1,0") (ifseqformula "7"))
                                          (rule "polySimp_addAssoc" (formula "55") (term "1,1,0"))
                                          (rule "add_literals" (formula "55") (term "0,1,1,0"))
                                          (rule "applyEq" (formula "40") (term "1,1,0") (ifseqformula "7"))
                                          (rule "applyEq" (formula "35") (term "1,1,0") (ifseqformula "7"))
                                          (rule "polySimp_addAssoc" (formula "35") (term "1,0"))
                                          (rule "add_literals" (formula "35") (term "0,1,0"))
                                          (rule "applyEq" (formula "55") (term "1,1,1,0,0,1,1,0,0,0,0,0") (ifseqformula "7"))
                                          (rule "polySimp_addAssoc" (formula "55") (term "1,1,0,0,1,1,0,0,0,0,0"))
                                          (rule "add_literals" (formula "55") (term "0,1,1,0,0,1,1,0,0,0,0,0"))
                                          (rule "applyEq" (formula "51") (term "1,1,0") (ifseqformula "7"))
                                          (rule "applyEq" (formula "39") (term "1,1,0") (ifseqformula "7"))
                                          (rule "applyEq" (formula "15") (term "1,1,0") (ifseqformula "7"))
                                          (rule "applyEq" (formula "54") (term "0,1") (ifseqformula "7"))
                                          (rule "inEqSimp_homoInEq0" (formula "54") (term "1"))
                                          (rule "polySimp_mulComm0" (formula "54") (term "1,0,1"))
                                          (rule "polySimp_rightDist" (formula "54") (term "1,0,1"))
                                          (rule "mul_literals" (formula "54") (term "0,1,0,1"))
                                          (rule "polySimp_addComm1" (formula "54") (term "0,1"))
                                          (rule "polySimp_addAssoc" (formula "54") (term "0,0,1"))
                                          (rule "add_literals" (formula "54") (term "0,0,0,1"))
                                          (rule "applyEq" (formula "21") (term "1,1,0") (ifseqformula "7"))
                                          (rule "applyEq" (formula "51") (term "1,1,1,0,0,1,1,0,0,0,0,0") (ifseqformula "7"))
                                          (rule "polySimp_addAssoc" (formula "51") (term "1,1,0,0,1,1,0,0,0,0,0"))
                                          (rule "add_literals" (formula "51") (term "0,1,1,0,0,1,1,0,0,0,0,0"))
                                          (rule "applyEq" (formula "24") (term "1,1,0") (ifseqformula "7"))
                                          (rule "applyEq" (formula "43") (term "0") (ifseqformula "7"))
                                          (rule "inEqSimp_homoInEq1" (formula "43"))
                                          (rule "polySimp_mulComm0" (formula "43") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "43") (term "1,0"))
                                          (rule "mul_literals" (formula "43") (term "0,1,0"))
                                          (rule "polySimp_addComm1" (formula "43") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "43") (term "0,0"))
                                          (rule "add_literals" (formula "43") (term "0,0,0"))
                                          (rule "applyEq" (formula "17") (term "0") (ifseqformula "19"))
                                          (rule "applyEq" (formula "49") (term "1,1,0") (ifseqformula "35"))
                                          (rule "applyEq" (formula "49") (term "1,0,0,1,0,0") (ifseqformula "35"))
                                          (rule "replace_known_left" (formula "49") (term "0,1,0,0") (ifseqformula "34"))
                                          (builtin "One Step Simplification" (formula "49"))
                                          (rule "applyEq" (formula "53") (term "1,2,0") (ifseqformula "35"))
                                          (rule "applyEq" (formula "53") (term "1,0,0,0") (ifseqformula "35"))
                                          (rule "replace_known_left" (formula "53") (term "0,0") (ifseqformula "34"))
                                          (builtin "One Step Simplification" (formula "53"))
                                          (rule "hideAuxiliaryEq" (formula "53"))
                                          (rule "applyEq" (formula "52") (term "1") (ifseqformula "35"))
                                          (rule "applyEq" (formula "19") (term "1,1") (ifseqformula "35"))
                                          (rule "applyEq" (formula "30") (term "1") (ifseqformula "35"))
                                          (rule "applyEq" (formula "24") (term "1,0,0,0,0,0") (ifseqformula "35"))
                                          (rule "applyEq" (formula "59") (term "0") (ifseqformula "35"))
                                          (rule "applyEq" (formula "36") (term "1") (ifseqformula "7"))
                                          (rule "applyEq" (formula "55") (term "1") (ifseqformula "7"))
                                          (rule "applyEq" (formula "37") (term "1") (ifseqformula "7"))
                                          (rule "applyEq" (formula "17") (term "1,0") (ifseqformula "35"))
                                          (builtin "One Step Simplification" (formula "17"))
                                          (rule "true_left" (formula "17"))
                                          (rule "applyEq" (formula "48") (term "1") (ifseqformula "43"))
                                          (builtin "One Step Simplification" (formula "48"))
                                          (rule "applyEq" (formula "48") (term "1,0,1") (ifseqformula "34"))
                                          (rule "eqSymm" (formula "48") (term "1"))
                                          (rule "applyEq" (formula "48") (term "1,1,0,0,0") (ifseqformula "34"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "46"))
                                          (rule "polySimp_mulComm0" (formula "46") (term "1"))
                                          (rule "polySimp_rightDist" (formula "46") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "46") (term "1,1"))
                                          (rule "mul_literals" (formula "46") (term "0,1"))
                                          (rule "polySimp_elimOne" (formula "46") (term "1,1"))
                                          (rule "inEqSimp_invertInEq0" (formula "1"))
                                          (rule "times_zero_2" (formula "1") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                          (rule "polySimp_elimOne" (formula "1") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                          (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                          (rule "polySimp_rightDist" (formula "2") (term "1"))
                                          (rule "mul_literals" (formula "2") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "51") (term "1"))
                                          (rule "polySimp_mulComm0" (formula "51") (term "1,1"))
                                          (rule "polySimp_rightDist" (formula "51") (term "1,1"))
                                          (rule "mul_literals" (formula "51") (term "0,1,1"))
                                          (rule "polySimp_mulLiterals" (formula "51") (term "1,1,1"))
                                          (rule "polySimp_elimOne" (formula "51") (term "1,1,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "41"))
                                          (rule "polySimp_mulComm0" (formula "41") (term "1"))
                                          (rule "polySimp_rightDist" (formula "41") (term "1"))
                                          (rule "mul_literals" (formula "41") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "41") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "41") (term "1,1"))
                                          (rule "inEqSimp_exactShadow3" (formula "40") (ifseqformula "41"))
                                          (rule "times_zero_1" (formula "40") (term "0,0"))
                                          (rule "add_zero_left" (formula "40") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "40"))
                                          (rule "mul_literals" (formula "40") (term "1"))
                                          (rule "inEqSimp_subsumption1" (formula "40") (ifseqformula "5"))
                                          (rule "leq_literals" (formula "40") (term "0"))
                                          (builtin "One Step Simplification" (formula "40"))
                                          (rule "true_left" (formula "40"))
                                          (rule "inEqSimp_exactShadow3" (formula "44") (ifseqformula "45"))
                                          (rule "times_zero_1" (formula "44") (term "0,0"))
                                          (rule "add_zero_left" (formula "44") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "44"))
                                          (rule "mul_literals" (formula "44") (term "1"))
                                          (rule "inEqSimp_subsumption1" (formula "44") (ifseqformula "5"))
                                          (rule "leq_literals" (formula "44") (term "0"))
                                          (builtin "One Step Simplification" (formula "44"))
                                          (rule "true_left" (formula "44"))
                                          (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                                          (rule "times_zero_1" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                          (rule "mul_literals" (formula "1") (term "1"))
                                          (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "6"))
                                          (rule "leq_literals" (formula "1") (term "0"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "true_left" (formula "1"))
                                          (rule "inEqSimp_or_weaken3" (formula "22") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "22") (term "1,0,1,0"))
                                          (rule "add_literals" (formula "22") (term "0,1,0,1,0"))
                                          (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "21")))
                                          (rule "true_left" (formula "22"))
                                          (rule "commute_or_2" (formula "23") (term "0"))
                                          (rule "seqGetAlphaCast" (formula "3") (term "0"))
                                          (rule "castedGetAny" (formula "3") (term "0"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "true_left" (formula "3"))
                                          (rule "seqGetAlphaCast" (formula "42") (term "0"))
                                          (rule "castedGetAny" (formula "42") (term "0"))
                                          (builtin "One Step Simplification" (formula "42"))
                                          (rule "true_left" (formula "42"))
                                          (rule "seqGetAlphaCast" (formula "45") (term "0"))
                                          (rule "castDel" (formula "45") (term "0"))
                                          (builtin "One Step Simplification" (formula "45"))
                                          (rule "true_left" (formula "45"))
                                          (rule "seqGetAlphaCast" (formula "47") (term "0"))
                                          (rule "castDel" (formula "47") (term "0"))
                                          (builtin "One Step Simplification" (formula "47"))
                                          (rule "true_left" (formula "47"))
                                          (rule "commute_and" (formula "46") (term "0,0,0"))
                                          (rule "seqGetAlphaCast" (formula "18") (term "0"))
                                          (rule "castDel" (formula "18") (term "0"))
                                          (builtin "One Step Simplification" (formula "18"))
                                          (rule "true_left" (formula "18"))
                                          (rule "allLeft" (formula "22") (inst "t=j_1_0"))
                                          (rule "replace_known_right" (formula "22") (term "1,0") (ifseqformula "64"))
                                          (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "3")))
                                          (rule "inEqSimp_contradInEq0" (formula "22") (term "1") (ifseqformula "2"))
                                          (rule "inEqSimp_homoInEq1" (formula "22") (term "0,1"))
                                          (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1"))
                                          (rule "mul_literals" (formula "22") (term "0,1,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "22") (term "0,0,1"))
                                          (rule "polySimp_addComm1" (formula "22") (term "0,0,0,1"))
                                          (rule "add_literals" (formula "22") (term "0,0,0,0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,1"))
                                          (rule "add_literals" (formula "22") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "22") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "22") (term "0,0,1"))
                                          (rule "leq_literals" (formula "22") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "22"))
                                          (rule "inEqSimp_contradInEq1" (formula "22") (ifseqformula "1"))
                                          (rule "qeq_literals" (formula "22") (term "0"))
                                          (builtin "One Step Simplification" (formula "22"))
                                          (rule "closeFalse" (formula "22"))
                                       )
                                       (branch "CUT: self.size ≤ 2 + i_2_0 FALSE"
                                          (builtin "One Step Simplification" (formula "30"))
                                          (rule "replace_known_right" (formula "55") (term "1") (ifseqformula "62"))
                                          (builtin "One Step Simplification" (formula "55"))
                                          (rule "applyEqReverse" (formula "54") (term "1") (ifseqformula "55"))
                                          (rule "hideAuxiliaryEq" (formula "55"))
                                          (rule "inEqSimp_leqRight" (formula "61"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                          (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,0"))
                                          (rule "applyEq" (formula "55") (term "1,0") (ifseqformula "31"))
                                          (builtin "One Step Simplification" (formula "55"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                          (rule "mul_literals" (formula "1") (term "0,1"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                          (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "1"))
                                          (rule "inEqSimp_homoInEq0" (formula "8") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "8") (term "1,0,0"))
                                          (rule "mul_literals" (formula "8") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                                          (rule "polySimp_addComm1" (formula "8") (term "0,0,0"))
                                          (rule "add_literals" (formula "8") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0"))
                                          (rule "add_literals" (formula "8") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "8") (term "1,0,0"))
                                          (rule "add_literals" (formula "8") (term "0,0"))
                                          (rule "qeq_literals" (formula "8") (term "0"))
                                          (builtin "One Step Simplification" (formula "8"))
                                          (rule "true_left" (formula "8"))
                                          (rule "seqGetAlphaCast" (formula "50") (term "1"))
                                          (rule "castDel" (formula "50") (term "0"))
                                          (builtin "One Step Simplification" (formula "50"))
                                          (rule "true_left" (formula "50"))
                                          (rule "seqGetAlphaCast" (formula "5") (term "0"))
                                          (rule "castedGetAny" (formula "5") (term "0"))
                                          (builtin "One Step Simplification" (formula "5"))
                                          (rule "true_left" (formula "5"))
                                          (rule "allLeft" (formula "52") (inst "t=j_1"))
                                          (rule "inEqSimp_commuteGeq" (formula "52") (term "1"))
                                          (rule "applyEq" (formula "52") (term "1,0,0,0") (ifseqformula "46"))
                                          (rule "replaceKnownSelect_taclet1011111_18" (formula "52") (term "0,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet1011111_19" (formula "52") (term "0,0,0"))
                                          (rule "eqSymm" (formula "52") (term "0,0"))
                                          (rule "applyEq" (formula "52") (term "1,0,0") (ifseqformula "49"))
                                          (rule "inEqSimp_contradInEq1" (formula "52") (term "1,0") (ifseqformula "47"))
                                          (rule "qeq_literals" (formula "52") (term "0,1,0"))
                                          (builtin "One Step Simplification" (formula "52"))
                                          (rule "inEqSimp_contradInEq1" (formula "52") (term "1") (ifseqformula "48"))
                                          (rule "inEqSimp_homoInEq1" (formula "52") (term "0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "52") (term "0,0,1"))
                                          (rule "add_literals" (formula "52") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "52") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "52") (term "0,0,1"))
                                          (rule "leq_literals" (formula "52") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "52"))
                                          (rule "allLeft" (formula "12") (inst "t=add(Z(1(#)), i_2_0)"))
                                          (rule "inEqSimp_commuteGeq" (formula "12") (term "1"))
                                          (rule "inEqSimp_homoInEq0" (formula "12") (term "1,0"))
                                          (rule "polySimp_mulComm0" (formula "12") (term "1,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "12") (term "1,0,1,0"))
                                          (rule "mul_literals" (formula "12") (term "0,1,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "12") (term "0,1,0"))
                                          (rule "add_literals" (formula "12") (term "0,0,1,0"))
                                          (rule "applyEq" (formula "12") (term "0,0,0,0") (ifseqformula "20"))
                                          (builtin "One Step Simplification" (formula "12"))
                                          (rule "true_left" (formula "12"))
                                          (rule "allLeft" (formula "40") (inst "t=add(Z(1(#)), i_2_0)"))
                                          (rule "inEqSimp_commuteGeq" (formula "40") (term "1"))
                                          (rule "inEqSimp_homoInEq0" (formula "40") (term "1,0"))
                                          (rule "polySimp_mulComm0" (formula "40") (term "1,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "40") (term "1,0,1,0"))
                                          (rule "mul_literals" (formula "40") (term "0,1,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "40") (term "0,1,0"))
                                          (rule "add_literals" (formula "40") (term "0,0,1,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "40") (term "1,0"))
                                          (rule "polySimp_mulLiterals" (formula "40") (term "0,1,0"))
                                          (rule "polySimp_elimOne" (formula "40") (term "0,1,0"))
                                          (rule "inEqSimp_contradInEq1" (formula "40") (term "1") (ifseqformula "1"))
                                          (rule "inEqSimp_homoInEq1" (formula "40") (term "0,1"))
                                          (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "40") (term "1,0,0,1"))
                                          (rule "mul_literals" (formula "40") (term "0,1,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "40") (term "0,0,1"))
                                          (rule "polySimp_addComm1" (formula "40") (term "0,0,0,1"))
                                          (rule "add_literals" (formula "40") (term "0,0,0,0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "40") (term "0,0,1"))
                                          (rule "add_literals" (formula "40") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "40") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "40") (term "0,0,1"))
                                          (rule "leq_literals" (formula "40") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "40"))
                                          (rule "inEqSimp_contradInEq1" (formula "40") (term "1") (ifseqformula "7"))
                                          (rule "qeq_literals" (formula "40") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "40"))
                                          (rule "notLeft" (formula "40"))
                                          (rule "allLeft" (formula "41") (inst "t=add(Z(1(#)), i_2_0)"))
                                          (rule "typeEqDerived2" (formula "41") (term "0,0,0") (ifseqformula "51"))
                                          (builtin "One Step Simplification" (formula "41"))
                                          (rule "true_left" (formula "41"))
                                          (rule "allLeft" (formula "15") (inst "t=j_1"))
                                          (rule "inEqSimp_commuteGeq" (formula "15") (term "1"))
                                          (rule "applyEq" (formula "15") (term "0,0,0,0") (ifseqformula "47"))
                                          (rule "replace_known_right" (formula "15") (term "0,0,0") (ifseqformula "67"))
                                          (builtin "One Step Simplification" (formula "15"))
                                          (rule "true_left" (formula "15"))
                                          (rule "allLeft" (formula "15") (inst "t=j_1_0"))
                                          (rule "inEqSimp_commuteGeq" (formula "15") (term "1"))
                                          (rule "applyEq" (formula "15") (term "0,0,0,0") (ifseqformula "5"))
                                          (rule "replace_known_right" (formula "15") (term "0,0,0") (ifseqformula "69"))
                                          (builtin "One Step Simplification" (formula "15"))
                                          (rule "true_left" (formula "15"))
                                          (rule "allLeft" (formula "21") (inst "t=j_1"))
                                          (rule "inEqSimp_commuteGeq" (formula "21") (term "1"))
                                          (rule "applyEq" (formula "21") (term "1,1,0,0") (ifseqformula "47"))
                                          (rule "inEqSimp_contradInEq1" (formula "21") (term "1,0") (ifseqformula "48"))
                                          (rule "qeq_literals" (formula "21") (term "0,1,0"))
                                          (builtin "One Step Simplification" (formula "21"))
                                          (rule "inEqSimp_contradInEq1" (formula "21") (term "1") (ifseqformula "49"))
                                          (rule "inEqSimp_homoInEq1" (formula "21") (term "0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,1"))
                                          (rule "add_literals" (formula "21") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "21") (term "1,0,0,1"))
                                          (rule "add_literals" (formula "21") (term "0,0,1"))
                                          (rule "leq_literals" (formula "21") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "21"))
                                          (rule "allLeft" (formula "22") (inst "t=j_1_0"))
                                          (rule "inEqSimp_commuteGeq" (formula "22") (term "1"))
                                          (rule "applyEq" (formula "22") (term "1,1,0,0") (ifseqformula "5"))
                                          (rule "inEqSimp_contradInEq1" (formula "22") (term "1") (ifseqformula "4"))
                                          (rule "inEqSimp_homoInEq1" (formula "22") (term "0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,1"))
                                          (rule "add_literals" (formula "22") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "22") (term "1,0,0,1"))
                                          (rule "add_literals" (formula "22") (term "0,0,1"))
                                          (rule "leq_literals" (formula "22") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "22"))
                                          (rule "inEqSimp_contradInEq1" (formula "22") (term "1") (ifseqformula "3"))
                                          (rule "qeq_literals" (formula "22") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "22"))
                                          (rule "allLeft" (formula "13") (inst "t=add(Z(1(#)), i_2_0)"))
                                          (rule "typeEqDerived" (formula "13") (term "0,0,0") (ifseqformula "20"))
                                          (builtin "One Step Simplification" (formula "13"))
                                          (rule "true_left" (formula "13"))
                                          (rule "allLeft" (formula "55") (inst "t=j_1_0"))
                                          (rule "inEqSimp_commuteGeq" (formula "55") (term "1"))
                                          (rule "applyEq" (formula "55") (term "1,0,0,0") (ifseqformula "5"))
                                          (rule "replaceKnownSelect_taclet1011111_15" (formula "55") (term "0,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet11011111_20" (formula "55") (term "0,0,0"))
                                          (rule "eqSymm" (formula "55") (term "0,0"))
                                          (rule "applyEq" (formula "55") (term "1,0,0") (ifseqformula "6"))
                                          (rule "inEqSimp_contradInEq1" (formula "55") (term "1") (ifseqformula "4"))
                                          (rule "inEqSimp_homoInEq1" (formula "55") (term "0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "55") (term "0,0,1"))
                                          (rule "add_literals" (formula "55") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "55") (term "1,0,0,1"))
                                          (rule "add_literals" (formula "55") (term "0,0,1"))
                                          (rule "leq_literals" (formula "55") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "55"))
                                          (rule "inEqSimp_contradInEq1" (formula "55") (term "1") (ifseqformula "3"))
                                          (rule "qeq_literals" (formula "55") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "55"))
                                          (rule "commute_and" (formula "52") (term "0,0,0,0,0"))
                                          (rule "seqGetAlphaCast" (formula "48") (term "0"))
                                          (rule "castedGetAny" (formula "48") (term "0"))
                                          (builtin "One Step Simplification" (formula "48"))
                                          (rule "true_left" (formula "48"))
                                          (rule "seqGetAlphaCast" (formula "51") (term "0"))
                                          (rule "castDel" (formula "51") (term "0"))
                                          (builtin "One Step Simplification" (formula "51"))
                                          (rule "true_left" (formula "51"))
                                          (rule "allLeft" (formula "27") (inst "t=j_1_0"))
                                          (rule "replace_known_right" (formula "27") (term "1,0") (ifseqformula "75"))
                                          (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "5")))
                                          (rule "inEqSimp_commuteGeq" (formula "27") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "27") (term "1") (ifseqformula "4"))
                                          (rule "inEqSimp_homoInEq1" (formula "27") (term "0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,1"))
                                          (rule "add_literals" (formula "27") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "27") (term "1,0,0,1"))
                                          (rule "add_literals" (formula "27") (term "0,0,1"))
                                          (rule "leq_literals" (formula "27") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "27"))
                                          (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "27"))
                                          (rule "qeq_literals" (formula "3") (term "0"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "closeFalse" (formula "3"))
                                       )
                                    )
                                 )
                                 (branch "∃ int j; ( (IntNode)self.nodeseq[j] = self.first ∧ j ≥ 0 ∧ j ≤ -1 + self.size) FALSE"
                                    (rule "eqSymm" (formula "44"))
                                    (rule "applyEq" (formula "58") (term "0") (ifseqformula "44"))
                                    (builtin "One Step Simplification" (formula "58"))
                                    (rule "false_right" (formula "58"))
                                    (rule "nnf_ex2all" (formula "55"))
                                    (rule "nnf_notAnd" (formula "1") (term "0"))
                                    (rule "inEqSimp_notLeq" (formula "1") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0"))
                                    (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,0,1,0"))
                                    (rule "add_zero_left" (formula "1") (term "0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1,1,0"))
                                    (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "1") (term "1,0,0"))
                                    (rule "times_zero_1" (formula "1") (term "1,0,0,1,0,0"))
                                    (rule "add_zero_right" (formula "1") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1,0,0"))
                                    (rule "mul_literals" (formula "1") (term "1,1,0,0"))
                                    (rule "seqGetAlphaCast" (formula "16") (term "1,1"))
                                    (rule "castedGetAny" (formula "16") (term "0"))
                                    (builtin "One Step Simplification" (formula "16"))
                                    (rule "true_left" (formula "16"))
                                    (rule "seqGetAlphaCast" (formula "16") (term "0"))
                                    (rule "castDel" (formula "16") (term "0"))
                                    (builtin "One Step Simplification" (formula "16"))
                                    (rule "true_left" (formula "16"))
                                    (rule "commute_or_2" (formula "23") (term "0"))
                                    (rule "allLeft" (formula "12") (inst "t=Z(0(#))"))
                                    (rule "leq_literals" (formula "12") (term "1,0"))
                                    (builtin "One Step Simplification" (formula "12"))
                                    (rule "inEqSimp_commuteGeq" (formula "12") (term "1"))
                                    (rule "applyEq" (formula "12") (term "0,0,0") (ifseqformula "19"))
                                    (builtin "One Step Simplification" (formula "12"))
                                    (rule "true_left" (formula "12"))
                                    (rule "allLeft" (formula "12") (inst "t=i_2_0"))
                                    (rule "inEqSimp_commuteGeq" (formula "12") (term "1"))
                                    (rule "applyEq" (formula "12") (term "0,0,0,0") (ifseqformula "17"))
                                    (builtin "One Step Simplification" (formula "12"))
                                    (rule "true_left" (formula "12"))
                                    (rule "allLeft" (formula "15") (inst "t=j_0"))
                                    (rule "inEqSimp_commuteGeq" (formula "15") (term "1"))
                                    (rule "applyEq" (formula "15") (term "0,0,0,0") (ifseqformula "42"))
                                    (rule "replace_known_right" (formula "15") (term "0,0,0") (ifseqformula "61"))
                                    (builtin "One Step Simplification" (formula "15"))
                                    (rule "true_left" (formula "15"))
                                    (rule "allLeft" (formula "47") (inst "t=j_0"))
                                    (rule "inEqSimp_commuteGeq" (formula "47") (term "1"))
                                    (rule "applyEq" (formula "47") (term "1,0,0,0") (ifseqformula "41"))
                                    (rule "replaceKnownSelect_taclet1011111_16" (formula "47") (term "0,0,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet1011111_17" (formula "47") (term "0,0,0"))
                                    (rule "applyEq" (formula "47") (term "0,0,0") (ifseqformula "44"))
                                    (rule "eqSymm" (formula "47") (term "0,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "47") (term "1") (ifseqformula "43"))
                                    (rule "inEqSimp_homoInEq1" (formula "47") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "47") (term "0,0,1"))
                                    (rule "add_literals" (formula "47") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "47") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "47") (term "0,0,1"))
                                    (rule "leq_literals" (formula "47") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "47"))
                                    (rule "inEqSimp_contradInEq1" (formula "47") (term "1") (ifseqformula "42"))
                                    (rule "qeq_literals" (formula "47") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "47"))
                                    (rule "allLeft" (formula "20") (inst "t=j_0"))
                                    (rule "inEqSimp_commuteGeq" (formula "20") (term "1"))
                                    (rule "applyEq" (formula "20") (term "1,1,0,0") (ifseqformula "42"))
                                    (rule "inEqSimp_contradInEq1" (formula "20") (term "1") (ifseqformula "44"))
                                    (rule "inEqSimp_homoInEq1" (formula "20") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,1"))
                                    (rule "add_literals" (formula "20") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "20") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "20") (term "0,0,1"))
                                    (rule "leq_literals" (formula "20") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "20"))
                                    (rule "inEqSimp_contradInEq1" (formula "20") (term "1") (ifseqformula "43"))
                                    (rule "qeq_literals" (formula "20") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "20"))
                                    (rule "allLeft" (formula "13") (inst "t=Z(0(#))"))
                                    (rule "typeEqDerived" (formula "13") (term "0,0,0") (ifseqformula "19"))
                                    (builtin "One Step Simplification" (formula "13"))
                                    (rule "true_left" (formula "13"))
                                    (rule "allLeft" (formula "13") (inst "t=add(Z(neglit(1(#))),
    int::select(heap, self, IntLinkedList::$size))"))
                                    (rule "typeEqDerived" (formula "13") (term "0,0,0") (ifseqformula "18"))
                                    (builtin "One Step Simplification" (formula "13"))
                                    (rule "true_left" (formula "13"))
                                    (rule "allLeft" (formula "13") (inst "t=i_2_0"))
                                    (rule "typeEqDerived" (formula "13") (term "0,0,0") (ifseqformula "17"))
                                    (builtin "One Step Simplification" (formula "13"))
                                    (rule "true_left" (formula "13"))
                                    (rule "allLeft" (formula "12") (inst "t=add(Z(neglit(1(#))),
    int::select(heap, self, IntLinkedList::$size))"))
                                    (rule "inEqSimp_homoInEq0" (formula "12") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "12") (term "1,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "12") (term "1,0,1,0"))
                                    (rule "mul_literals" (formula "12") (term "0,1,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "12") (term "0,1,0"))
                                    (rule "add_literals" (formula "12") (term "0,0,1,0"))
                                    (rule "add_zero_left" (formula "12") (term "0,1,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "12") (term "1"))
                                    (rule "polySimp_mulComm0" (formula "12") (term "1,0,1"))
                                    (rule "polySimp_rightDist" (formula "12") (term "1,0,1"))
                                    (rule "mul_literals" (formula "12") (term "0,1,0,1"))
                                    (rule "polySimp_addAssoc" (formula "12") (term "0,1"))
                                    (rule "polySimp_addComm0" (formula "12") (term "0,0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,1"))
                                    (rule "add_literals" (formula "12") (term "1,1,0,1"))
                                    (rule "times_zero_1" (formula "12") (term "1,0,1"))
                                    (rule "add_literals" (formula "12") (term "0,1"))
                                    (rule "leq_literals" (formula "12") (term "1"))
                                    (builtin "One Step Simplification" (formula "12"))
                                    (rule "applyEq" (formula "12") (term "0,0,0") (ifseqformula "18"))
                                    (builtin "One Step Simplification" (formula "12"))
                                    (rule "true_left" (formula "12"))
                                    (rule "commute_or_2" (formula "25") (term "0"))
                                    (rule "seqGetAlphaCast" (formula "17") (term "0"))
                                    (rule "castDel" (formula "17") (term "0"))
                                    (builtin "One Step Simplification" (formula "17"))
                                    (rule "true_left" (formula "17"))
                                    (rule "seqGetAlphaCast" (formula "18") (term "0"))
                                    (rule "castDel" (formula "18") (term "0"))
                                    (builtin "One Step Simplification" (formula "18"))
                                    (rule "true_left" (formula "18"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "27") (term "0") (ifseqformula "8"))
                                    (rule "replace_known_left" (formula "27") (term "0") (ifseqformula "28"))
                                    (builtin "One Step Simplification" (formula "27"))
                                    (rule "true_left" (formula "27"))
                                    (rule "seqGetAlphaCast" (formula "42") (term "0"))
                                    (rule "castedGetAny" (formula "42") (term "0"))
                                    (builtin "One Step Simplification" (formula "42"))
                                    (rule "true_left" (formula "42"))
                                    (rule "seqGetAlphaCast" (formula "45") (term "0"))
                                    (rule "castDel" (formula "45") (term "0"))
                                    (builtin "One Step Simplification" (formula "45"))
                                    (rule "true_left" (formula "45"))
                                    (rule "seqGetAlphaCast" (formula "28") (term "0,0"))
                                    (rule "castedGetAny" (formula "28") (term "0"))
                                    (builtin "One Step Simplification" (formula "28"))
                                    (rule "true_left" (formula "28"))
                                    (rule "cut_direct" (formula "28") (term "1"))
                                    (branch "CUT: self.size ≤ 1 TRUE"
                                       (builtin "One Step Simplification" (formula "29"))
                                       (rule "true_left" (formula "29"))
                                       (rule "inEqSimp_antiSymm" (formula "37") (ifseqformula "28"))
                                       (rule "applyEq" (formula "13") (term "1,1,0") (ifseqformula "37"))
                                       (rule "applyEq" (formula "29") (term "0,1") (ifseqformula "37"))
                                       (rule "inEqSimp_homoInEq0" (formula "29") (term "1"))
                                       (rule "mul_literals" (formula "29") (term "1,0,1"))
                                       (rule "polySimp_addComm1" (formula "29") (term "0,1"))
                                       (rule "add_literals" (formula "29") (term "0,0,1"))
                                       (rule "applyEq" (formula "38") (term "0") (ifseqformula "37"))
                                       (rule "qeq_literals" (formula "38"))
                                       (rule "true_left" (formula "38"))
                                       (rule "applyEq" (formula "21") (term "1,1,0") (ifseqformula "37"))
                                       (rule "applyEq" (formula "45") (term "1,1,0") (ifseqformula "37"))
                                       (rule "add_literals" (formula "45") (term "1,0"))
                                       (rule "applyEq" (formula "26") (term "1,1,0,0,0") (ifseqformula "37"))
                                       (rule "applyEq" (formula "55") (term "1,1,0,0") (ifseqformula "37"))
                                       (rule "applyEq" (formula "53") (term "1,1,1,0") (ifseqformula "37"))
                                       (rule "add_literals" (formula "53") (term "1,1,0"))
                                       (rule "applyEq" (formula "53") (term "1,1,1,0,0,1,1,0,0,0,0,0") (ifseqformula "37"))
                                       (rule "add_literals" (formula "53") (term "1,1,0,0,1,1,0,0,0,0,0"))
                                       (rule "applyEq" (formula "49") (term "1,1,0") (ifseqformula "37"))
                                       (rule "applyEq" (formula "23") (term "1,1,1,0") (ifseqformula "37"))
                                       (rule "add_literals" (formula "23") (term "1,1,0"))
                                       (rule "applyEq" (formula "17") (term "1,1,0") (ifseqformula "37"))
                                       (rule "add_literals" (formula "17") (term "1,0"))
                                       (rule "applyEq" (formula "7") (term "0") (ifseqformula "37"))
                                       (rule "inEqSimp_homoInEq1" (formula "7"))
                                       (rule "mul_literals" (formula "7") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "7") (term "0"))
                                       (rule "add_literals" (formula "7") (term "0,0"))
                                       (rule "applyEq" (formula "1") (term "1,1,0") (ifseqformula "37"))
                                       (rule "applyEq" (formula "15") (term "1,1,0") (ifseqformula "37"))
                                       (rule "applyEq" (formula "14") (term "1,1,1,0,0,1,0") (ifseqformula "37"))
                                       (rule "add_literals" (formula "14") (term "1,1,0,0,1,0"))
                                       (rule "applyEq" (formula "31") (term "1,1,1,0") (ifseqformula "37"))
                                       (rule "add_literals" (formula "31") (term "1,1,0"))
                                       (rule "applyEq" (formula "26") (term "1,1,0,0,0,0,0") (ifseqformula "37"))
                                       (rule "applyEq" (formula "3") (term "0") (ifseqformula "37"))
                                       (rule "inEqSimp_homoInEq1" (formula "3"))
                                       (rule "mul_literals" (formula "3") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "3") (term "0"))
                                       (rule "add_literals" (formula "3") (term "0,0"))
                                       (rule "add_zero_left" (formula "3") (term "0"))
                                       (rule "applyEq" (formula "40") (term "1,1,0") (ifseqformula "37"))
                                       (rule "applyEq" (formula "47") (term "1,1,1,0,0,0,0,0") (ifseqformula "37"))
                                       (rule "add_literals" (formula "47") (term "1,1,0,0,0,0,0"))
                                       (rule "applyEq" (formula "49") (term "1,1,1,0,0,1,1,0,0,0,0,0") (ifseqformula "37"))
                                       (rule "add_literals" (formula "49") (term "1,1,0,0,1,1,0,0,0,0,0"))
                                       (rule "applyEq" (formula "24") (term "1,1,0") (ifseqformula "37"))
                                       (rule "applyEq" (formula "35") (term "1,1,0") (ifseqformula "37"))
                                       (rule "add_literals" (formula "35") (term "1,0"))
                                       (rule "applyEq" (formula "28") (term "0") (ifseqformula "37"))
                                       (rule "leq_literals" (formula "28"))
                                       (rule "true_left" (formula "28"))
                                       (rule "applyEq" (formula "22") (term "1,1,0") (ifseqformula "36"))
                                       (rule "applyEq" (formula "25") (term "1,1,0") (ifseqformula "36"))
                                       (rule "applyEq" (formula "43") (term "0") (ifseqformula "36"))
                                       (rule "inEqSimp_homoInEq1" (formula "43"))
                                       (rule "mul_literals" (formula "43") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "43") (term "0"))
                                       (rule "add_literals" (formula "43") (term "0,0"))
                                       (rule "add_zero_left" (formula "43") (term "0"))
                                       (rule "applyEq" (formula "40") (term "1,1,0") (ifseqformula "36"))
                                       (rule "applyEq" (formula "51") (term "0,1") (ifseqformula "36"))
                                       (rule "inEqSimp_homoInEq0" (formula "51") (term "1"))
                                       (rule "mul_literals" (formula "51") (term "1,0,1"))
                                       (rule "polySimp_addComm1" (formula "51") (term "0,1"))
                                       (rule "add_literals" (formula "51") (term "0,0,1"))
                                       (rule "applyEq" (formula "12") (term "1,1,0") (ifseqformula "36"))
                                       (rule "applyEq" (formula "45") (term "0") (ifseqformula "44"))
                                       (rule "applyEq" (formula "32") (term "0") (ifseqformula "34"))
                                       (rule "applyEq" (formula "18") (term "0") (ifseqformula "17"))
                                       (rule "applyEq" (formula "18") (term "1,0") (ifseqformula "32"))
                                       (builtin "One Step Simplification" (formula "18"))
                                       (rule "true_left" (formula "18"))
                                       (rule "applyEq" (formula "40") (term "1") (ifseqformula "31"))
                                       (rule "applyEq" (formula "17") (term "1,1") (ifseqformula "31"))
                                       (rule "applyEq" (formula "19") (term "1,1") (ifseqformula "31"))
                                       (rule "applyEq" (formula "32") (term "1,0") (ifseqformula "31"))
                                       (rule "applyEq" (formula "42") (term "1,1") (ifseqformula "31"))
                                       (rule "applyEq" (formula "45") (term "1,1") (ifseqformula "31"))
                                       (rule "applyEq" (formula "32") (term "1") (ifseqformula "31"))
                                       (rule "applyEq" (formula "22") (term "1,0,0,0,0") (ifseqformula "31"))
                                       (rule "applyEq" (formula "26") (term "1,0") (ifseqformula "31"))
                                       (rule "applyEq" (formula "43") (term "1,0") (ifseqformula "31"))
                                       (rule "applyEq" (formula "59") (term "0") (ifseqformula "31"))
                                       (rule "applyEq" (formula "33") (term "1") (ifseqformula "34"))
                                       (rule "applyEq" (formula "51") (term "1") (ifseqformula "34"))
                                       (rule "applyEq" (formula "35") (term "1") (ifseqformula "34"))
                                       (rule "applyEq" (formula "42") (term "1") (ifseqformula "43"))
                                       (rule "applyEq" (formula "45") (term "1") (ifseqformula "43"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "1"))
                                       (rule "mul_literals" (formula "27") (term "1,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "7"))
                                       (rule "mul_literals" (formula "7") (term "1"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "49") (term "1"))
                                       (rule "mul_literals" (formula "49") (term "1,1"))
                                       (rule "inEqSimp_contradInEq0" (formula "6") (ifseqformula "7"))
                                       (rule "qeq_literals" (formula "6") (term "0"))
                                       (builtin "One Step Simplification" (formula "6"))
                                       (rule "closeFalse" (formula "6"))
                                    )
                                    (branch "CUT: self.size ≤ 1 FALSE"
                                       (builtin "One Step Simplification" (formula "28"))
                                       (rule "inEqSimp_leqRight" (formula "58"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                       (rule "mul_literals" (formula "1") (term "1"))
                                       (rule "inEqSimp_subsumption1" (formula "38") (ifseqformula "1"))
                                       (rule "leq_literals" (formula "38") (term "0"))
                                       (builtin "One Step Simplification" (formula "38"))
                                       (rule "true_left" (formula "38"))
                                       (rule "commute_and_2" (formula "47") (term "0,0,0,0"))
                                       (rule "allLeft" (formula "53") (inst "t=j_0"))
                                       (rule "inEqSimp_homoInEq1" (formula "53") (term "1"))
                                       (rule "polySimp_addComm1" (formula "53") (term "0,1"))
                                       (rule "applyEq" (formula "53") (term "1,0,0,0") (ifseqformula "42"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "1"))
                                       (rule "polySimp_mulComm0" (formula "53") (term "1,1"))
                                       (rule "polySimp_rightDist" (formula "53") (term "1,1"))
                                       (rule "polySimp_mulLiterals" (formula "53") (term "1,1,1"))
                                       (rule "mul_literals" (formula "53") (term "0,1,1"))
                                       (rule "polySimp_elimOne" (formula "53") (term "1,1,1"))
                                       (rule "inEqSimp_contradInEq1" (formula "53") (term "1,0") (ifseqformula "43"))
                                       (rule "qeq_literals" (formula "53") (term "0,1,0"))
                                       (builtin "One Step Simplification" (formula "53"))
                                       (rule "pullOutSelect" (formula "53") (term "0,0") (inst "selectSK=IntNode_next_4"))
                                       (rule "simplifySelectOfAnon" (formula "53"))
                                       (builtin "One Step Simplification" (formula "53") (ifInst ""  (formula "64")) (ifInst ""  (formula "35")))
                                       (rule "eqSymm" (formula "54") (term "0"))
                                       (rule "applyEq" (formula "53") (term "2,0") (ifseqformula "28"))
                                       (rule "elementOfUnion" (formula "53") (term "0,0"))
                                       (rule "elementOfSingleton" (formula "53") (term "0,0,0"))
                                       (builtin "One Step Simplification" (formula "53"))
                                       (rule "elementOfInfiniteUnion" (formula "53") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "53"))
                                       (rule "elementOfSingleton" (formula "53") (term "1,0,0,0"))
                                       (builtin "One Step Simplification" (formula "53"))
                                       (rule "applyEqReverse" (formula "54") (term "1,0") (ifseqformula "53"))
                                       (rule "hideAuxiliaryEq" (formula "53"))
                                       (rule "allLeft" (formula "27") (inst "t=j_0"))
                                       (rule "inEqSimp_commuteGeq" (formula "27") (term "1,0,0,0,0"))
                                       (rule "applyEq" (formula "27") (term "1,0,0,0,0,0,0,0") (ifseqformula "43"))
                                       (rule "inEqSimp_contradInEq1" (formula "27") (term "1,0,0,0,0,0") (ifseqformula "44"))
                                       (rule "qeq_literals" (formula "27") (term "0,1,0,0,0,0,0"))
                                       (builtin "One Step Simplification" (formula "27"))
                                       (rule "inEqSimp_contradInEq1" (formula "27") (term "1,0,0,0,0") (ifseqformula "45"))
                                       (rule "inEqSimp_homoInEq1" (formula "27") (term "0,1,0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,1,0,0,0,0"))
                                       (rule "add_literals" (formula "27") (term "1,1,0,0,1,0,0,0,0"))
                                       (rule "times_zero_1" (formula "27") (term "1,0,0,1,0,0,0,0"))
                                       (rule "add_zero_right" (formula "27") (term "0,0,1,0,0,0,0"))
                                       (rule "leq_literals" (formula "27") (term "0,1,0,0,0,0"))
                                       (builtin "One Step Simplification" (formula "27"))
                                       (rule "allLeft" (formula "33") (inst "t=j_0"))
                                       (rule "inEqSimp_homoInEq1" (formula "33") (term "1"))
                                       (rule "polySimp_addComm1" (formula "33") (term "0,1"))
                                       (rule "applyEq" (formula "33") (term "1,0,0,0") (ifseqformula "44"))
                                       (rule "eqSymm" (formula "33") (term "0,0"))
                                       (rule "applyEq" (formula "33") (term "1,0,0") (ifseqformula "29"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1"))
                                       (rule "polySimp_mulComm0" (formula "33") (term "1,1"))
                                       (rule "polySimp_rightDist" (formula "33") (term "1,1"))
                                       (rule "mul_literals" (formula "33") (term "0,1,1"))
                                       (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1"))
                                       (rule "polySimp_elimOne" (formula "33") (term "1,1,1"))
                                       (rule "inEqSimp_contradInEq1" (formula "33") (term "1,0") (ifseqformula "45"))
                                       (rule "qeq_literals" (formula "33") (term "0,1,0"))
                                       (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "55")))
                                       (rule "true_left" (formula "33"))
                                       (rule "seqGetAlphaCast" (formula "6") (term "0"))
                                       (rule "castDel" (formula "6") (term "0"))
                                       (builtin "One Step Simplification" (formula "6"))
                                       (rule "true_left" (formula "6"))
                                       (rule "seqGetAlphaCast" (formula "20") (term "0"))
                                       (rule "castDel" (formula "20") (term "0"))
                                       (builtin "One Step Simplification" (formula "20"))
                                       (rule "true_left" (formula "20"))
                                       (rule "seqGetAlphaCast" (formula "20") (term "1,1"))
                                       (rule "castedGetAny" (formula "20") (term "0"))
                                       (builtin "One Step Simplification" (formula "20"))
                                       (rule "true_left" (formula "20"))
                                       (rule "cut_direct" (formula "31") (term "1"))
                                       (branch "CUT: self.size ≤ 2 + i_2_0 TRUE"
                                          (builtin "One Step Simplification" (formula "32"))
                                          (rule "true_left" (formula "32"))
                                          (rule "replace_known_left" (formula "53") (term "1") (ifseqformula "31"))
                                          (builtin "One Step Simplification" (formula "53"))
                                          (rule "true_left" (formula "53"))
                                          (rule "inEqSimp_antiSymm" (formula "8") (ifseqformula "31"))
                                          (rule "applyEq" (formula "19") (term "1,1,0") (ifseqformula "8"))
                                          (rule "polySimp_addAssoc" (formula "19") (term "1,0"))
                                          (rule "add_literals" (formula "19") (term "0,1,0"))
                                          (rule "applyEq" (formula "14") (term "1,1,0") (ifseqformula "8"))
                                          (rule "applyEq" (formula "51") (term "1,1,1,0,0,1,1,0,0,0,0,0") (ifseqformula "8"))
                                          (rule "polySimp_addAssoc" (formula "51") (term "1,1,0,0,1,1,0,0,0,0,0"))
                                          (rule "add_literals" (formula "51") (term "0,1,1,0,0,1,1,0,0,0,0,0"))
                                          (rule "applyEq" (formula "16") (term "1,1,1,0,0,1,0") (ifseqformula "8"))
                                          (rule "polySimp_addAssoc" (formula "16") (term "1,1,0,0,1,0"))
                                          (rule "add_literals" (formula "16") (term "0,1,1,0,0,1,0"))
                                          (rule "applyEq" (formula "46") (term "0") (ifseqformula "8"))
                                          (rule "inEqSimp_homoInEq1" (formula "46"))
                                          (rule "polySimp_mulComm0" (formula "46") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "46") (term "1,0"))
                                          (rule "mul_literals" (formula "46") (term "0,1,0"))
                                          (rule "polySimp_addComm1" (formula "46") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "46") (term "0,0"))
                                          (rule "add_literals" (formula "46") (term "0,0,0"))
                                          (rule "applyEq" (formula "55") (term "1,1,1,0") (ifseqformula "8"))
                                          (rule "polySimp_addAssoc" (formula "55") (term "1,1,0"))
                                          (rule "add_literals" (formula "55") (term "0,1,1,0"))
                                          (rule "applyEq" (formula "29") (term "1,1,0,0,0,0,0") (ifseqformula "8"))
                                          (rule "applyEq" (formula "9") (term "0") (ifseqformula "8"))
                                          (rule "inEqSimp_homoInEq1" (formula "9"))
                                          (rule "polySimp_pullOutFactor1" (formula "9") (term "0"))
                                          (rule "add_literals" (formula "9") (term "1,0"))
                                          (rule "times_zero_1" (formula "9") (term "0"))
                                          (rule "leq_literals" (formula "9"))
                                          (rule "true_left" (formula "9"))
                                          (rule "applyEq" (formula "54") (term "1,1,1,0,0,1,1,0,0,0,0,0") (ifseqformula "8"))
                                          (rule "polySimp_addAssoc" (formula "54") (term "1,1,0,0,1,1,0,0,0,0,0"))
                                          (rule "add_literals" (formula "54") (term "0,1,1,0,0,1,1,0,0,0,0,0"))
                                          (rule "applyEq" (formula "28") (term "1,1,0,0,0") (ifseqformula "8"))
                                          (rule "applyEq" (formula "33") (term "1,1,1,0") (ifseqformula "8"))
                                          (rule "polySimp_addAssoc" (formula "33") (term "1,1,0"))
                                          (rule "add_literals" (formula "33") (term "0,1,1,0"))
                                          (rule "applyEq" (formula "16") (term "1,1,0") (ifseqformula "8"))
                                          (rule "applyEq" (formula "48") (term "1,1,1,0,0,0,0") (ifseqformula "8"))
                                          (rule "polySimp_addAssoc" (formula "48") (term "1,1,0,0,0,0"))
                                          (rule "add_literals" (formula "48") (term "0,1,1,0,0,0,0"))
                                          (rule "applyEq" (formula "22") (term "1,1,0") (ifseqformula "8"))
                                          (rule "applyEq" (formula "42") (term "1,1,0") (ifseqformula "8"))
                                          (rule "applyEq" (formula "4") (term "0") (ifseqformula "8"))
                                          (rule "inEqSimp_homoInEq1" (formula "4"))
                                          (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                                          (rule "mul_literals" (formula "4") (term "0,1,0"))
                                          (rule "polySimp_addComm1" (formula "4") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                          (rule "add_literals" (formula "4") (term "0,0,0"))
                                          (rule "applyEq" (formula "37") (term "1,1,0") (ifseqformula "8"))
                                          (rule "polySimp_addAssoc" (formula "37") (term "1,0"))
                                          (rule "add_literals" (formula "37") (term "0,1,0"))
                                          (rule "applyEq" (formula "31") (term "0") (ifseqformula "8"))
                                          (rule "inEqSimp_homoInEq0" (formula "31"))
                                          (rule "polySimp_pullOutFactor1" (formula "31") (term "0"))
                                          (rule "add_literals" (formula "31") (term "1,0"))
                                          (rule "times_zero_1" (formula "31") (term "0"))
                                          (rule "qeq_literals" (formula "31"))
                                          (rule "true_left" (formula "31"))
                                          (rule "applyEq" (formula "26") (term "1,1,0") (ifseqformula "8"))
                                          (rule "applyEq" (formula "49") (term "1,1,0") (ifseqformula "8"))
                                          (rule "applyEq" (formula "1") (term "0") (ifseqformula "8"))
                                          (rule "inEqSimp_homoInEq1" (formula "1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                          (rule "mul_literals" (formula "1") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "applyEq" (formula "2") (term "1,1,0") (ifseqformula "8"))
                                          (rule "applyEq" (formula "25") (term "1,1,0") (ifseqformula "8"))
                                          (rule "applyEq" (formula "45") (term "1,1,0") (ifseqformula "8"))
                                          (rule "polySimp_addAssoc" (formula "45") (term "1,0"))
                                          (rule "add_literals" (formula "45") (term "0,1,0"))
                                          (rule "applyEq" (formula "55") (term "1,1,0,0") (ifseqformula "8"))
                                          (rule "applyEq" (formula "27") (term "1,1,0,0") (ifseqformula "8"))
                                          (rule "applyEq" (formula "24") (term "1,1,1,0") (ifseqformula "8"))
                                          (rule "polySimp_addAssoc" (formula "24") (term "1,1,0"))
                                          (rule "add_literals" (formula "24") (term "0,1,1,0"))
                                          (rule "applyEq" (formula "40") (term "1,1,0") (ifseqformula "8"))
                                          (rule "applyEq" (formula "14") (term "1,1,0") (ifseqformula "8"))
                                          (rule "applyEq" (formula "23") (term "1,1,0") (ifseqformula "8"))
                                          (rule "applyEq" (formula "52") (term "0,1") (ifseqformula "8"))
                                          (rule "inEqSimp_homoInEq0" (formula "52") (term "1"))
                                          (rule "polySimp_mulComm0" (formula "52") (term "1,0,1"))
                                          (rule "polySimp_rightDist" (formula "52") (term "1,0,1"))
                                          (rule "mul_literals" (formula "52") (term "0,1,0,1"))
                                          (rule "polySimp_addComm1" (formula "52") (term "0,1"))
                                          (rule "polySimp_addAssoc" (formula "52") (term "0,0,1"))
                                          (rule "add_literals" (formula "52") (term "0,0,0,1"))
                                          (rule "applyEq" (formula "20") (term "0") (ifseqformula "18"))
                                          (rule "eqSymm" (formula "20"))
                                          (rule "applyEq" (formula "25") (term "1,0,0,0,0,0") (ifseqformula "36"))
                                          (rule "applyEq" (formula "47") (term "1,1,0,0,0,0,0") (ifseqformula "36"))
                                          (rule "applyEq" (formula "58") (term "0") (ifseqformula "36"))
                                          (rule "applyEq" (formula "51") (term "1,2,0") (ifseqformula "36"))
                                          (rule "applyEq" (formula "47") (term "1") (ifseqformula "45"))
                                          (rule "applyEq" (formula "31") (term "1") (ifseqformula "36"))
                                          (rule "applyEq" (formula "47") (term "1,0,0,1,0,0") (ifseqformula "36"))
                                          (rule "replace_known_left" (formula "47") (term "0,1,0,0") (ifseqformula "35"))
                                          (builtin "One Step Simplification" (formula "47"))
                                          (rule "applyEq" (formula "50") (term "1") (ifseqformula "36"))
                                          (rule "applyEq" (formula "51") (term "1,0,0,0") (ifseqformula "36"))
                                          (rule "replace_known_left" (formula "51") (term "0,0") (ifseqformula "35"))
                                          (builtin "One Step Simplification" (formula "51"))
                                          (rule "hideAuxiliaryEq" (formula "51"))
                                          (rule "applyEq" (formula "37") (term "1") (ifseqformula "8"))
                                          (rule "applyEq" (formula "38") (term "1") (ifseqformula "8"))
                                          (rule "applyEq" (formula "53") (term "1") (ifseqformula "8"))
                                          (rule "applyEq" (formula "20") (term "1,0") (ifseqformula "36"))
                                          (builtin "One Step Simplification" (formula "20"))
                                          (rule "true_left" (formula "20"))
                                          (rule "applyEq" (formula "46") (term "1,1,0") (ifseqformula "35"))
                                          (builtin "One Step Simplification" (formula "46"))
                                          (rule "applyEq" (formula "46") (term "1,0,1") (ifseqformula "35"))
                                          (rule "eqSymm" (formula "46") (term "1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "43"))
                                          (rule "polySimp_mulComm0" (formula "43") (term "1"))
                                          (rule "polySimp_rightDist" (formula "43") (term "1"))
                                          (rule "mul_literals" (formula "43") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "43") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "43") (term "1,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                          (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                          (rule "polySimp_rightDist" (formula "4") (term "1"))
                                          (rule "mul_literals" (formula "4") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                          (rule "inEqSimp_invertInEq0" (formula "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                          (rule "mul_literals" (formula "1") (term "1"))
                                          (rule "polySimp_elimOne" (formula "1") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "49") (term "1"))
                                          (rule "polySimp_mulComm0" (formula "49") (term "1,1"))
                                          (rule "polySimp_rightDist" (formula "49") (term "1,1"))
                                          (rule "mul_literals" (formula "49") (term "0,1,1"))
                                          (rule "polySimp_mulLiterals" (formula "49") (term "1,1,1"))
                                          (rule "polySimp_elimOne" (formula "49") (term "1,1,1"))
                                          (rule "inEqSimp_exactShadow3" (formula "41") (ifseqformula "42"))
                                          (rule "times_zero_1" (formula "41") (term "0,0"))
                                          (rule "add_zero_left" (formula "41") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "41"))
                                          (rule "mul_literals" (formula "41") (term "1"))
                                          (rule "inEqSimp_subsumption1" (formula "41") (ifseqformula "6"))
                                          (rule "leq_literals" (formula "41") (term "0"))
                                          (builtin "One Step Simplification" (formula "41"))
                                          (rule "true_left" (formula "41"))
                                          (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "3"))
                                          (rule "times_zero_1" (formula "2") (term "0,0"))
                                          (rule "add_zero_left" (formula "2") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                          (rule "mul_literals" (formula "2") (term "1"))
                                          (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "7"))
                                          (rule "leq_literals" (formula "2") (term "0"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "true_left" (formula "2"))
                                          (rule "inEqSimp_or_weaken3" (formula "23") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "23") (term "1,0,1,0"))
                                          (rule "add_literals" (formula "23") (term "0,1,0,1,0"))
                                          (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "22")))
                                          (rule "true_left" (formula "23"))
                                          (rule "seqGetAlphaCast" (formula "4") (term "0"))
                                          (rule "castedGetAny" (formula "4") (term "0"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "true_left" (formula "4"))
                                          (rule "seqGetAlphaCast" (formula "43") (term "0"))
                                          (rule "castDel" (formula "43") (term "0"))
                                          (builtin "One Step Simplification" (formula "43"))
                                          (rule "true_left" (formula "43"))
                                          (rule "seqGetAlphaCast" (formula "45") (term "0"))
                                          (rule "castDel" (formula "45") (term "0"))
                                          (builtin "One Step Simplification" (formula "45"))
                                          (rule "true_left" (formula "45"))
                                          (rule "seqGetAlphaCast" (formula "19") (term "0"))
                                          (rule "castDel" (formula "19") (term "0"))
                                          (builtin "One Step Simplification" (formula "19"))
                                          (rule "true_left" (formula "19"))
                                          (rule "commute_and" (formula "44") (term "0,0,0"))
                                          (rule "allLeft" (formula "25") (inst "t=i_2_0"))
                                          (rule "inEqSimp_homoInEq1" (formula "25") (term "1,0,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,1,0,0,0,0"))
                                          (rule "add_literals" (formula "25") (term "1,1,0,1,0,0,0,0"))
                                          (rule "times_zero_1" (formula "25") (term "1,0,1,0,0,0,0"))
                                          (rule "add_zero_right" (formula "25") (term "0,1,0,0,0,0"))
                                          (rule "leq_literals" (formula "25") (term "1,0,0,0,0"))
                                          (builtin "One Step Simplification" (formula "25"))
                                          (rule "inEqSimp_contradInEq1" (formula "25") (term "1,0,0,0,0") (ifseqformula "6"))
                                          (rule "qeq_literals" (formula "25") (term "0,1,0,0,0,0"))
                                          (builtin "One Step Simplification" (formula "25"))
                                          (rule "commute_or_2" (formula "25") (term "0"))
                                          (rule "seqGetAlphaCast" (formula "48") (term "0,0"))
                                          (rule "castedGetAny" (formula "48") (term "0"))
                                          (builtin "One Step Simplification" (formula "48"))
                                          (rule "true_left" (formula "48"))
                                          (rule "allLeft" (formula "23") (inst "t=j_1_0"))
                                          (rule "replace_known_right" (formula "23") (term "1,0") (ifseqformula "62"))
                                          (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "4")))
                                          (rule "inEqSimp_contradInEq1" (formula "23") (term "0") (ifseqformula "2"))
                                          (rule "qeq_literals" (formula "23") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "inEqSimp_contradEq7" (formula "62") (ifseqformula "23"))
                                          (rule "polySimp_mulComm0" (formula "62") (term "1,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "62") (term "0,0"))
                                          (rule "add_literals" (formula "62") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "62") (term "1,0,0"))
                                          (rule "add_literals" (formula "62") (term "0,0"))
                                          (rule "leq_literals" (formula "62") (term "0"))
                                          (builtin "One Step Simplification" (formula "62"))
                                          (rule "false_right" (formula "62"))
                                          (rule "inEqSimp_contradInEq0" (formula "23") (ifseqformula "3"))
                                          (rule "andLeft" (formula "23"))
                                          (rule "inEqSimp_homoInEq1" (formula "23"))
                                          (rule "polySimp_mulComm0" (formula "23") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "23") (term "1,0"))
                                          (rule "mul_literals" (formula "23") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "23") (term "0"))
                                          (rule "polySimp_addComm1" (formula "23") (term "0,0"))
                                          (rule "add_literals" (formula "23") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "23") (term "0"))
                                          (rule "add_literals" (formula "23") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "23") (term "1,0"))
                                          (rule "add_literals" (formula "23") (term "0"))
                                          (rule "leq_literals" (formula "23"))
                                          (rule "closeFalse" (formula "23"))
                                       )
                                       (branch "CUT: self.size ≤ 2 + i_2_0 FALSE"
                                          (builtin "One Step Simplification" (formula "31"))
                                          (rule "replace_known_right" (formula "53") (term "1") (ifseqformula "60"))
                                          (builtin "One Step Simplification" (formula "53"))
                                          (rule "applyEqReverse" (formula "52") (term "1") (ifseqformula "53"))
                                          (rule "hideAuxiliaryEq" (formula "53"))
                                          (rule "inEqSimp_leqRight" (formula "59"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                          (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,0"))
                                          (rule "applyEq" (formula "53") (term "1,0") (ifseqformula "32"))
                                          (builtin "One Step Simplification" (formula "53"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                          (rule "mul_literals" (formula "1") (term "0,1"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                          (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "1"))
                                          (rule "inEqSimp_homoInEq0" (formula "9") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "9") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "9") (term "1,0,0"))
                                          (rule "mul_literals" (formula "9") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
                                          (rule "polySimp_addComm1" (formula "9") (term "0,0,0"))
                                          (rule "add_literals" (formula "9") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0"))
                                          (rule "add_literals" (formula "9") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "9") (term "1,0,0"))
                                          (rule "add_literals" (formula "9") (term "0,0"))
                                          (rule "qeq_literals" (formula "9") (term "0"))
                                          (builtin "One Step Simplification" (formula "9"))
                                          (rule "true_left" (formula "9"))
                                          (rule "commute_or_2" (formula "27") (term "0"))
                                          (rule "seqGetAlphaCast" (formula "48") (term "1"))
                                          (rule "castDel" (formula "48") (term "0"))
                                          (builtin "One Step Simplification" (formula "48"))
                                          (rule "true_left" (formula "48"))
                                          (rule "allLeft" (formula "3") (inst "t=Z(0(#))"))
                                          (rule "leq_literals" (formula "3") (term "1,0"))
                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "36")))
                                          (rule "inEqSimp_commuteGeq" (formula "3"))
                                          (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "3"))
                                          (rule "qeq_literals" (formula "2") (term "0"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "closeFalse" (formula "2"))
                                       )
                                    )
                                 )
                              )
                           )
                           (branch "∃ int j; ( (IntNode)self.nodeseq[j] = self.last ∧ j ≥ 0 ∧ j ≤ -1 + self.size) FALSE"
                              (rule "eqSymm" (formula "30"))
                              (rule "nnf_ex2all" (formula "38"))
                              (rule "nnf_notAnd" (formula "1") (term "0"))
                              (rule "inEqSimp_notLeq" (formula "1") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0"))
                              (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0"))
                              (rule "add_literals" (formula "1") (term "0,0,0,1,0"))
                              (rule "add_zero_left" (formula "1") (term "0,0,1,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                              (rule "polySimp_elimOne" (formula "1") (term "1,1,0"))
                              (rule "nnf_notAnd" (formula "1") (term "0,0"))
                              (rule "inEqSimp_notGeq" (formula "1") (term "1,0,0"))
                              (rule "times_zero_1" (formula "1") (term "1,0,0,1,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1,0,0"))
                              (rule "mul_literals" (formula "1") (term "1,1,0,0"))
                              (rule "allLeft" (formula "30") (inst "t=add(Z(neglit(1(#))),
    int::select(heap, self, IntLinkedList::$size))"))
                              (rule "typeEqDerived" (formula "30") (term "0,0,0") (ifseqformula "32"))
                              (builtin "One Step Simplification" (formula "30"))
                              (rule "true_left" (formula "30"))
                              (rule "allLeft" (formula "29") (inst "t=add(Z(neglit(1(#))),
    int::select(heap, self, IntLinkedList::$size))"))
                              (rule "inEqSimp_homoInEq0" (formula "29") (term "1,0"))
                              (rule "polySimp_mulComm0" (formula "29") (term "1,0,1,0"))
                              (rule "polySimp_rightDist" (formula "29") (term "1,0,1,0"))
                              (rule "mul_literals" (formula "29") (term "0,1,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "29") (term "0,1,0"))
                              (rule "add_literals" (formula "29") (term "0,0,1,0"))
                              (rule "add_zero_left" (formula "29") (term "0,1,0"))
                              (rule "inEqSimp_homoInEq1" (formula "29") (term "1"))
                              (rule "polySimp_mulComm0" (formula "29") (term "1,0,1"))
                              (rule "polySimp_rightDist" (formula "29") (term "1,0,1"))
                              (rule "mul_literals" (formula "29") (term "0,1,0,1"))
                              (rule "polySimp_addAssoc" (formula "29") (term "0,1"))
                              (rule "polySimp_addComm0" (formula "29") (term "0,0,1"))
                              (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,1"))
                              (rule "add_literals" (formula "29") (term "1,1,0,1"))
                              (rule "times_zero_1" (formula "29") (term "1,0,1"))
                              (rule "add_literals" (formula "29") (term "0,1"))
                              (rule "leq_literals" (formula "29") (term "1"))
                              (builtin "One Step Simplification" (formula "29"))
                              (rule "applyEq" (formula "29") (term "0,0,0") (ifseqformula "32"))
                              (builtin "One Step Simplification" (formula "29"))
                              (rule "true_left" (formula "29"))
                              (rule "allLeft" (formula "30") (inst "t=Z(0(#))"))
                              (rule "typeEqDerived2" (formula "30") (term "0,0,0") (ifseqformula "33"))
                              (builtin "One Step Simplification" (formula "30"))
                              (rule "true_left" (formula "30"))
                              (rule "allLeft" (formula "29") (inst "t=Z(0(#))"))
                              (rule "leq_literals" (formula "29") (term "1,0"))
                              (builtin "One Step Simplification" (formula "29"))
                              (rule "inEqSimp_commuteGeq" (formula "29") (term "1"))
                              (rule "inEqSimp_contradInEq1" (formula "29") (term "1") (ifseqformula "26"))
                              (rule "qeq_literals" (formula "29") (term "0,1"))
                              (builtin "One Step Simplification" (formula "29"))
                              (rule "notLeft" (formula "29"))
                              (rule "allLeft" (formula "20") (inst "t=Z(0(#))"))
                              (rule "add_zero_right" (formula "20") (term "1,1,0,0"))
                              (rule "leq_literals" (formula "20") (term "1,0"))
                              (builtin "One Step Simplification" (formula "20"))
                              (rule "inEqSimp_homoInEq1" (formula "20") (term "1"))
                              (rule "times_zero_2" (formula "20") (term "1,0,1"))
                              (rule "add_zero_right" (formula "20") (term "0,1"))
                              (rule "applyEq" (formula "20") (term "1,0,0") (ifseqformula "23"))
                              (rule "eqSymm" (formula "20") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1"))
                              (rule "mul_literals" (formula "20") (term "1,1"))
                              (rule "allLeft" (formula "35") (inst "t=Z(0(#))"))
                              (rule "add_zero_right" (formula "35") (term "1,1,0,0"))
                              (rule "leq_literals" (formula "35") (term "1,0"))
                              (builtin "One Step Simplification" (formula "35"))
                              (rule "inEqSimp_homoInEq1" (formula "35") (term "1"))
                              (rule "mul_literals" (formula "35") (term "1,0,1"))
                              (rule "add_zero_right" (formula "35") (term "0,1"))
                              (rule "applyEq" (formula "35") (term "1,0,0") (ifseqformula "23"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1"))
                              (rule "mul_literals" (formula "35") (term "1,1"))
                              (rule "pullOutSelect" (formula "35") (term "0,0") (inst "selectSK=IntNode_next_2"))
                              (rule "simplifySelectOfAnon" (formula "35"))
                              (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "44")) (ifInst ""  (formula "22")))
                              (rule "eqSymm" (formula "36") (term "0"))
                              (rule "elementOfUnion" (formula "35") (term "0,0"))
                              (rule "elementOfInfiniteUnion" (formula "35") (term "1,0,0"))
                              (builtin "One Step Simplification" (formula "35"))
                              (rule "elementOfSingleton" (formula "35") (term "1,0,1,0,0"))
                              (builtin "One Step Simplification" (formula "35"))
                              (rule "elementOfSingleton" (formula "35") (term "0,0"))
                              (builtin "One Step Simplification" (formula "35"))
                              (rule "applyEqReverse" (formula "36") (term "1,0") (ifseqformula "35"))
                              (rule "hideAuxiliaryEq" (formula "35"))
                              (rule "allLeft" (formula "18") (inst "t=Z(0(#))"))
                              (rule "leq_literals" (formula "18") (term "1,0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "18"))
                              (rule "inEqSimp_commuteGeq" (formula "18") (term "1,0,0,0,0"))
                              (rule "applyEq" (formula "18") (term "1,0,0,0,0,0,0") (ifseqformula "24"))
                              (rule "inEqSimp_contradInEq1" (formula "18") (term "1,0,0,0,0") (ifseqformula "28"))
                              (rule "qeq_literals" (formula "18") (term "0,1,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "18"))
                              (rule "commute_or_2" (formula "18") (term "0"))
                              (rule "inEqSimp_or_weaken2" (formula "18") (term "0,0"))
                              (rule "add_literals" (formula "18") (term "1,0,1,0,0"))
                              (builtin "One Step Simplification" (formula "18"))
                              (rule "allLeft" (formula "19") (inst "t=add(Z(neglit(1(#))),
    int::select(heap, self, IntLinkedList::$size))"))
                              (rule "inEqSimp_homoInEq1" (formula "19") (term "1,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "19") (term "1,0,1,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "19") (term "1,0,1,0,0,0,0"))
                              (rule "mul_literals" (formula "19") (term "0,1,0,1,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "19") (term "0,1,0,0,0,0"))
                              (rule "polySimp_addComm0" (formula "19") (term "0,0,1,0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,1,0,0,0,0"))
                              (rule "add_literals" (formula "19") (term "1,1,0,1,0,0,0,0"))
                              (rule "times_zero_1" (formula "19") (term "1,0,1,0,0,0,0"))
                              (rule "add_zero_right" (formula "19") (term "0,1,0,0,0,0"))
                              (rule "leq_literals" (formula "19") (term "1,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "19"))
                              (rule "inEqSimp_homoInEq0" (formula "19") (term "1,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "19") (term "1,0,1,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "19") (term "1,0,1,0,0,0,0"))
                              (rule "mul_literals" (formula "19") (term "0,1,0,1,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "19") (term "0,1,0,0,0,0"))
                              (rule "add_literals" (formula "19") (term "0,0,1,0,0,0,0"))
                              (rule "add_zero_left" (formula "19") (term "0,1,0,0,0,0"))
                              (rule "applyEq" (formula "19") (term "1,0,0,0,0,0,0") (ifseqformula "27"))
                              (rule "inEqSimp_invertInEq1" (formula "19") (term "1,0,0,0,0"))
                              (rule "times_zero_2" (formula "19") (term "1,1,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "19") (term "0,1,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "19") (term "0,1,0,0,0,0"))
                              (rule "inEqSimp_contradInEq1" (formula "19") (term "1,0,0,0,0") (ifseqformula "29"))
                              (rule "qeq_literals" (formula "19") (term "0,1,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "19"))
                              (rule "commute_or_2" (formula "19") (term "0"))
                              (rule "inEqSimp_or_weaken3" (formula "19") (term "0"))
                              (rule "polySimp_addAssoc" (formula "19") (term "1,0,1,0"))
                              (rule "add_literals" (formula "19") (term "0,1,0,1,0"))
                              (rule "add_zero_left" (formula "19") (term "1,0,1,0"))
                              (builtin "One Step Simplification" (formula "19"))
                              (rule "ifthenelse_split" (formula "3") (term "0"))
                              (branch "(IntNode)self.nodeseq[i_2_0].<created> = TRUE TRUE"
                                 (rule "applyEqReverse" (formula "51") (term "1,1") (ifseqformula "4"))
                                 (rule "hideAuxiliaryEq" (formula "4"))
                                 (rule "eqSymm" (formula "50") (term "1"))
                                 (rule "replace_known_left" (formula "2") (term "0,1,0,0") (ifseqformula "3"))
                                 (builtin "One Step Simplification" (formula "2"))
                                 (rule "allLeft" (formula "37") (inst "t=i_2_0"))
                                 (rule "replaceKnownSelect_taclet1011111_14" (formula "37") (term "0,0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet01111011111_23" (formula "37") (term "0,0,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "37") (term "1"))
                                 (rule "polySimp_addComm1" (formula "37") (term "0,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "37") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "37") (term "1,1"))
                                 (rule "mul_literals" (formula "37") (term "0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1"))
                                 (rule "polySimp_elimOne" (formula "37") (term "1,1,1"))
                                 (rule "inEqSimp_contradInEq1" (formula "37") (term "1") (ifseqformula "5"))
                                 (rule "inEqSimp_homoInEq1" (formula "37") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "37") (term "1,0,0,1"))
                                 (rule "mul_literals" (formula "37") (term "0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "37") (term "0,0,1"))
                                 (rule "polySimp_addComm1" (formula "37") (term "0,0,0,1"))
                                 (rule "add_literals" (formula "37") (term "0,0,0,0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "37") (term "0,0,1"))
                                 (rule "add_literals" (formula "37") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "37") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "37") (term "0,0,1"))
                                 (rule "leq_literals" (formula "37") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "37"))
                                 (rule "inEqSimp_contradInEq1" (formula "37") (term "1") (ifseqformula "4"))
                                 (rule "qeq_literals" (formula "37") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "37"))
                                 (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "37"))
                                 (builtin "One Step Simplification" (formula "51"))
                                 (rule "allRight" (formula "51") (inst "sk=j_1_0"))
                                 (rule "orRight" (formula "51"))
                                 (rule "orRight" (formula "52"))
                                 (rule "orRight" (formula "51"))
                                 (rule "notRight" (formula "53"))
                                 (rule "inEqSimp_geqRight" (formula "53"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0"))
                                 (rule "inEqSimp_leqRight" (formula "53"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                 (rule "polySimp_elimOne" (formula "2") (term "0"))
                                 (rule "allLeft" (formula "16") (inst "t=add(Z(1(#)), i_2_0)"))
                                 (rule "inEqSimp_commuteGeq" (formula "16") (term "1"))
                                 (rule "inEqSimp_homoInEq0" (formula "16") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "16") (term "1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "16") (term "1,0,1,0"))
                                 (rule "mul_literals" (formula "16") (term "0,1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "16") (term "0,1,0"))
                                 (rule "add_literals" (formula "16") (term "0,0,1,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "16") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "16") (term "0,1,0"))
                                 (rule "polySimp_elimOne" (formula "16") (term "0,1,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "16") (term "1,0") (ifseqformula "7"))
                                 (rule "qeq_literals" (formula "16") (term "0,1,0"))
                                 (builtin "One Step Simplification" (formula "16"))
                                 (rule "inEqSimp_contradInEq1" (formula "16") (term "1") (ifseqformula "8"))
                                 (rule "inEqSimp_homoInEq1" (formula "16") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1"))
                                 (rule "mul_literals" (formula "16") (term "0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "16") (term "0,0,1"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,1"))
                                 (rule "add_literals" (formula "16") (term "0,0,0,0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,1"))
                                 (rule "add_literals" (formula "16") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "16") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "16") (term "0,0,1"))
                                 (rule "leq_literals" (formula "16") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "16"))
                                 (rule "notLeft" (formula "16"))
                                 (rule "allLeft" (formula "39") (inst "t=add(Z(1(#)), i_2_0)"))
                                 (rule "inEqSimp_commuteGeq" (formula "39") (term "1"))
                                 (rule "inEqSimp_homoInEq0" (formula "39") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "39") (term "1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "39") (term "1,0,1,0"))
                                 (rule "mul_literals" (formula "39") (term "0,1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "39") (term "0,1,0"))
                                 (rule "add_literals" (formula "39") (term "0,0,1,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "39") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "39") (term "0,1,0"))
                                 (rule "polySimp_elimOne" (formula "39") (term "0,1,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "39") (term "1") (ifseqformula "8"))
                                 (rule "inEqSimp_homoInEq1" (formula "39") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "39") (term "1,0,0,1"))
                                 (rule "mul_literals" (formula "39") (term "0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "39") (term "0,0,1"))
                                 (rule "polySimp_addComm1" (formula "39") (term "0,0,0,1"))
                                 (rule "add_literals" (formula "39") (term "0,0,0,0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,0,1"))
                                 (rule "add_literals" (formula "39") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "39") (term "1,0,0,1"))
                                 (rule "add_literals" (formula "39") (term "0,0,1"))
                                 (rule "leq_literals" (formula "39") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "39"))
                                 (rule "inEqSimp_contradInEq1" (formula "39") (term "1") (ifseqformula "7"))
                                 (rule "qeq_literals" (formula "39") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "39"))
                                 (rule "pullOutSelect" (formula "39") (term "0") (inst "selectSK=IntNode_data_3"))
                                 (rule "simplifySelectOfAnon" (formula "39"))
                                 (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "48")))
                                 (rule "eqSymm" (formula "40"))
                                 (rule "applyEqReverse" (formula "39") (term "1") (ifseqformula "40"))
                                 (rule "hideAuxiliaryEq" (formula "40"))
                                 (rule "elementOfUnion" (formula "39") (term "0,0,0"))
                                 (rule "elementOfInfiniteUnion" (formula "39") (term "1,0,0,0"))
                                 (builtin "One Step Simplification" (formula "39"))
                                 (rule "elementOfSingleton" (formula "39") (term "0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "39"))
                                 (rule "elementOfSingleton" (formula "39") (term "1,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "39"))
                                 (rule "eqSymm" (formula "39") (term "1,0,0,0,0"))
                                 (rule "allLeft" (formula "23") (inst "t=i_2_0"))
                                 (rule "inEqSimp_commuteGeq" (formula "23") (term "1,0,0,0,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "23") (term "1,0,0,0,0") (ifseqformula "8"))
                                 (rule "inEqSimp_homoInEq1" (formula "23") (term "0,1,0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1,0,0,0,0"))
                                 (rule "add_literals" (formula "23") (term "1,1,0,0,1,0,0,0,0"))
                                 (rule "times_zero_1" (formula "23") (term "1,0,0,1,0,0,0,0"))
                                 (rule "add_zero_right" (formula "23") (term "0,0,1,0,0,0,0"))
                                 (rule "leq_literals" (formula "23") (term "0,1,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "23"))
                                 (rule "inEqSimp_contradInEq1" (formula "23") (term "1,0,0,0,0") (ifseqformula "7"))
                                 (rule "qeq_literals" (formula "23") (term "0,1,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "23"))
                                 (rule "allLeft" (formula "43") (inst "t=add(Z(1(#)), i_2_0)"))
                                 (rule "polySimp_addAssoc" (formula "43") (term "1,1,0,0"))
                                 (rule "add_literals" (formula "43") (term "0,1,1,0,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "43") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "43") (term "1,0,1"))
                                 (rule "polySimp_rightDist" (formula "43") (term "1,0,1"))
                                 (rule "mul_literals" (formula "43") (term "0,1,0,1"))
                                 (rule "polySimp_addComm1" (formula "43") (term "0,1"))
                                 (rule "polySimp_addAssoc" (formula "43") (term "0,0,1"))
                                 (rule "add_literals" (formula "43") (term "0,0,0,1"))
                                 (rule "inEqSimp_homoInEq0" (formula "43") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "43") (term "1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "43") (term "1,0,1,0"))
                                 (rule "mul_literals" (formula "43") (term "0,1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "43") (term "0,1,0"))
                                 (rule "add_literals" (formula "43") (term "0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "43") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "43") (term "1,1"))
                                 (rule "polySimp_mulLiterals" (formula "43") (term "1,1,1"))
                                 (rule "mul_literals" (formula "43") (term "0,1,1"))
                                 (rule "polySimp_elimOne" (formula "43") (term "1,1,1"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "43") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "43") (term "0,1,0"))
                                 (rule "polySimp_elimOne" (formula "43") (term "0,1,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "43") (term "1,0") (ifseqformula "7"))
                                 (rule "qeq_literals" (formula "43") (term "0,1,0"))
                                 (builtin "One Step Simplification" (formula "43"))
                                 (rule "pullOutSelect" (formula "43") (term "0,0") (inst "selectSK=IntNode_next_3"))
                                 (rule "simplifySelectOfAnon" (formula "43"))
                                 (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "50")))
                                 (rule "eqSymm" (formula "44") (term "0"))
                                 (rule "elementOfUnion" (formula "43") (term "0,0,0"))
                                 (rule "elementOfInfiniteUnion" (formula "43") (term "1,0,0,0"))
                                 (builtin "One Step Simplification" (formula "43"))
                                 (rule "elementOfSingleton" (formula "43") (term "0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "43"))
                                 (rule "elementOfSingleton" (formula "43") (term "1,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "43"))
                                 (rule "ifthenelse_negated" (formula "43") (term "0"))
                                 (rule "allLeft" (formula "20") (inst "t=add(Z(1(#)), i_2_0)"))
                                 (rule "inEqSimp_commuteGeq" (formula "20") (term "1"))
                                 (rule "inEqSimp_homoInEq0" (formula "20") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "20") (term "1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "20") (term "1,0,1,0"))
                                 (rule "mul_literals" (formula "20") (term "0,1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "20") (term "0,1,0"))
                                 (rule "add_literals" (formula "20") (term "0,0,1,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "20") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "20") (term "0,1,0"))
                                 (rule "polySimp_elimOne" (formula "20") (term "0,1,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "20") (term "1") (ifseqformula "8"))
                                 (rule "inEqSimp_homoInEq1" (formula "20") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1"))
                                 (rule "mul_literals" (formula "20") (term "0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "20") (term "0,0,1"))
                                 (rule "polySimp_addComm1" (formula "20") (term "0,0,0,1"))
                                 (rule "add_literals" (formula "20") (term "0,0,0,0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,1"))
                                 (rule "add_literals" (formula "20") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "20") (term "1,0,0,1"))
                                 (rule "add_literals" (formula "20") (term "0,0,1"))
                                 (rule "leq_literals" (formula "20") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "20"))
                                 (rule "inEqSimp_contradInEq1" (formula "20") (term "1") (ifseqformula "7"))
                                 (rule "qeq_literals" (formula "20") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "20"))
                                 (rule "allLeft" (formula "25") (inst "t=add(Z(1(#)), i_2_0)"))
                                 (rule "inEqSimp_commuteGeq" (formula "25") (term "1,0,0,0,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "25") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "25") (term "1,0,1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "25") (term "1,0,1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "25") (term "0,1,0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "25") (term "0,1,0,0,0,0,0"))
                                 (rule "add_literals" (formula "25") (term "0,0,1,0,0,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "25") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "25") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "25") (term "0,1,0,0,0,0,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "25") (term "1,0,0,0,0") (ifseqformula "8"))
                                 (rule "inEqSimp_homoInEq1" (formula "25") (term "0,1,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,0,0,0"))
                                 (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "25") (term "0,0,0,1,0,0,0,0"))
                                 (rule "add_literals" (formula "25") (term "0,0,0,0,1,0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,1,0,0,0,0"))
                                 (rule "add_literals" (formula "25") (term "1,1,0,0,1,0,0,0,0"))
                                 (rule "times_zero_1" (formula "25") (term "1,0,0,1,0,0,0,0"))
                                 (rule "add_literals" (formula "25") (term "0,0,1,0,0,0,0"))
                                 (rule "leq_literals" (formula "25") (term "0,1,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "25"))
                                 (rule "inEqSimp_contradInEq1" (formula "25") (term "1,0,0,0,0") (ifseqformula "7"))
                                 (rule "qeq_literals" (formula "25") (term "0,1,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "25"))
                                 (rule "allLeft" (formula "29") (inst "t=add(Z(1(#)), i_2_0)"))
                                 (rule "polySimp_addAssoc" (formula "29") (term "1,1,0,0"))
                                 (rule "add_literals" (formula "29") (term "0,1,1,0,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "29") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "29") (term "1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "29") (term "1,0,1,0"))
                                 (rule "mul_literals" (formula "29") (term "0,1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "29") (term "0,1,0"))
                                 (rule "add_literals" (formula "29") (term "0,0,1,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "29") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "29") (term "1,0,1"))
                                 (rule "polySimp_rightDist" (formula "29") (term "1,0,1"))
                                 (rule "mul_literals" (formula "29") (term "0,1,0,1"))
                                 (rule "polySimp_addComm1" (formula "29") (term "0,1"))
                                 (rule "polySimp_addAssoc" (formula "29") (term "0,0,1"))
                                 (rule "add_literals" (formula "29") (term "0,0,0,1"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "29") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "29") (term "0,1,0"))
                                 (rule "polySimp_elimOne" (formula "29") (term "0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "29") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "29") (term "1,1"))
                                 (rule "mul_literals" (formula "29") (term "0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1"))
                                 (rule "polySimp_elimOne" (formula "29") (term "1,1,1"))
                                 (rule "inEqSimp_contradInEq1" (formula "29") (term "1,0") (ifseqformula "7"))
                                 (rule "qeq_literals" (formula "29") (term "0,1,0"))
                                 (builtin "One Step Simplification" (formula "29"))
                                 (rule "ifthenelse_split" (formula "42") (term "0"))
                                 (branch "∃ int j; ( (IntNode)self.nodeseq[j] = self.first ∧ j ≥ 0 ∧ j ≤ -1 + self.size) TRUE"
                                    (rule "exLeft" (formula "42") (inst "sk=j_0"))
                                    (rule "andLeft" (formula "42"))
                                    (rule "andLeft" (formula "42"))
                                    (rule "eqSymm" (formula "45"))
                                    (rule "inEqSimp_homoInEq0" (formula "44"))
                                    (rule "polySimp_addComm1" (formula "44") (term "0"))
                                    (rule "applyEq" (formula "57") (term "0") (ifseqformula "45"))
                                    (builtin "One Step Simplification" (formula "57"))
                                    (rule "false_right" (formula "57"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "44"))
                                    (rule "polySimp_mulComm0" (formula "44") (term "1"))
                                    (rule "polySimp_rightDist" (formula "44") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "44") (term "1,1"))
                                    (rule "mul_literals" (formula "44") (term "0,1"))
                                    (rule "polySimp_elimOne" (formula "44") (term "1,1"))
                                    (rule "seqGetAlphaCast" (formula "61") (term "0"))
                                    (rule "castDel" (formula "1") (term "0"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "true_left" (formula "1"))
                                    (rule "seqGetAlphaCast" (formula "17") (term "1,1"))
                                    (rule "castedGetAny" (formula "17") (term "0"))
                                    (builtin "One Step Simplification" (formula "17"))
                                    (rule "true_left" (formula "17"))
                                    (rule "seqGetAlphaCast" (formula "17") (term "0"))
                                    (rule "castDel" (formula "17") (term "0"))
                                    (builtin "One Step Simplification" (formula "17"))
                                    (rule "true_left" (formula "17"))
                                    (rule "allLeft" (formula "4") (inst "t=add(Z(neglit(1(#))),
    int::select(heap, self, IntLinkedList::$size))"))
                                    (rule "replace_known_left" (formula "4") (term "0,0,0") (ifseqformula "35"))
                                    (builtin "One Step Simplification" (formula "4"))
                                    (rule "inEqSimp_homoInEq0" (formula "4") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                                    (rule "mul_literals" (formula "4") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                    (rule "add_literals" (formula "4") (term "0,0,0"))
                                    (rule "add_zero_left" (formula "4") (term "0,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "4") (term "1"))
                                    (rule "polySimp_mulComm0" (formula "4") (term "1,0,1"))
                                    (rule "polySimp_rightDist" (formula "4") (term "1,0,1"))
                                    (rule "mul_literals" (formula "4") (term "0,1,0,1"))
                                    (rule "polySimp_addAssoc" (formula "4") (term "0,1"))
                                    (rule "polySimp_addComm0" (formula "4") (term "0,0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,1"))
                                    (rule "add_literals" (formula "4") (term "1,1,0,1"))
                                    (rule "times_zero_1" (formula "4") (term "1,0,1"))
                                    (rule "add_literals" (formula "4") (term "0,1"))
                                    (rule "leq_literals" (formula "4") (term "1"))
                                    (builtin "One Step Simplification" (formula "4"))
                                    (rule "inEqSimp_invertInEq1" (formula "4"))
                                    (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                    (rule "times_zero_2" (formula "4") (term "1"))
                                    (rule "polySimp_elimOne" (formula "4") (term "0"))
                                    (rule "inEqSimp_subsumption0" (formula "29") (term "1") (ifseqformula "4"))
                                    (rule "leq_literals" (formula "29") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "29"))
                                    (rule "true_left" (formula "29"))
                                    (rule "inEqSimp_contradInEq0" (formula "36") (ifseqformula "4"))
                                    (rule "qeq_literals" (formula "36") (term "0"))
                                    (builtin "One Step Simplification" (formula "36"))
                                    (rule "closeFalse" (formula "36"))
                                 )
                                 (branch "∃ int j; ( (IntNode)self.nodeseq[j] = self.first ∧ j ≥ 0 ∧ j ≤ -1 + self.size) FALSE"
                                    (rule "eqSymm" (formula "42"))
                                    (rule "applyEq" (formula "55") (term "0") (ifseqformula "42"))
                                    (builtin "One Step Simplification" (formula "55"))
                                    (rule "false_right" (formula "55"))
                                    (rule "nnf_ex2all" (formula "53"))
                                    (rule "nnf_notAnd" (formula "1") (term "0"))
                                    (rule "inEqSimp_notLeq" (formula "1") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0"))
                                    (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,0,1,0"))
                                    (rule "add_zero_left" (formula "1") (term "0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1,1,0"))
                                    (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "1") (term "1,0,0"))
                                    (rule "times_zero_1" (formula "1") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1,0,0"))
                                    (rule "mul_literals" (formula "1") (term "1,1,0,0"))
                                    (rule "seqGetAlphaCast" (formula "59") (term "0"))
                                    (rule "castDel" (formula "1") (term "0"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "true_left" (formula "1"))
                                    (rule "seqGetAlphaCast" (formula "18") (term "1,1"))
                                    (rule "castedGetAny" (formula "18") (term "0"))
                                    (builtin "One Step Simplification" (formula "18"))
                                    (rule "true_left" (formula "18"))
                                    (rule "seqGetAlphaCast" (formula "18") (term "0"))
                                    (rule "castDel" (formula "18") (term "0"))
                                    (builtin "One Step Simplification" (formula "18"))
                                    (rule "true_left" (formula "18"))
                                    (rule "allLeft" (formula "5") (inst "t=add(Z(neglit(1(#))),
    int::select(heap, self, IntLinkedList::$size))"))
                                    (rule "replace_known_left" (formula "5") (term "0,0,0") (ifseqformula "36"))
                                    (builtin "One Step Simplification" (formula "5"))
                                    (rule "inEqSimp_homoInEq0" (formula "5") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
                                    (rule "mul_literals" (formula "5") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                    (rule "add_literals" (formula "5") (term "0,0,0"))
                                    (rule "add_zero_left" (formula "5") (term "0,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "5") (term "1"))
                                    (rule "polySimp_mulComm0" (formula "5") (term "1,0,1"))
                                    (rule "polySimp_rightDist" (formula "5") (term "1,0,1"))
                                    (rule "mul_literals" (formula "5") (term "0,1,0,1"))
                                    (rule "polySimp_addAssoc" (formula "5") (term "0,1"))
                                    (rule "polySimp_addComm0" (formula "5") (term "0,0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,1"))
                                    (rule "add_literals" (formula "5") (term "1,1,0,1"))
                                    (rule "times_zero_1" (formula "5") (term "1,0,1"))
                                    (rule "add_literals" (formula "5") (term "0,1"))
                                    (rule "leq_literals" (formula "5") (term "1"))
                                    (builtin "One Step Simplification" (formula "5"))
                                    (rule "inEqSimp_invertInEq1" (formula "5"))
                                    (rule "times_zero_2" (formula "5") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                    (rule "polySimp_elimOne" (formula "5") (term "0"))
                                    (rule "inEqSimp_contradInEq0" (formula "38") (ifseqformula "5"))
                                    (rule "qeq_literals" (formula "38") (term "0"))
                                    (builtin "One Step Simplification" (formula "38"))
                                    (rule "closeFalse" (formula "38"))
                                 )
                              )
                              (branch "(IntNode)self.nodeseq[i_2_0].<created> = TRUE FALSE"
                                 (rule "applyEqReverse" (formula "51") (term "1,1") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "eqSymm" (formula "50") (term "1"))
                                 (rule "replace_known_right" (formula "2") (term "0,1,0,0") (ifseqformula "41"))
                                 (builtin "One Step Simplification" (formula "2"))
                                 (rule "eqSymm" (formula "2"))
                                 (rule "applyEq" (formula "47") (term "0") (ifseqformula "2"))
                                 (builtin "One Step Simplification" (formula "47"))
                                 (rule "false_right" (formula "47"))
                                 (rule "allLeft" (formula "35") (inst "t=add(Z(1(#)), i_2_0)"))
                                 (rule "inEqSimp_commuteGeq" (formula "35") (term "1"))
                                 (rule "inEqSimp_homoInEq0" (formula "35") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "35") (term "1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "35") (term "1,0,1,0"))
                                 (rule "mul_literals" (formula "35") (term "0,1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "35") (term "0,1,0"))
                                 (rule "add_literals" (formula "35") (term "0,0,1,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "35") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "35") (term "0,1,0"))
                                 (rule "polySimp_elimOne" (formula "35") (term "0,1,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "35") (term "1") (ifseqformula "4"))
                                 (rule "inEqSimp_homoInEq1" (formula "35") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "35") (term "1,0,0,1"))
                                 (rule "mul_literals" (formula "35") (term "0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "35") (term "0,0,1"))
                                 (rule "polySimp_addComm1" (formula "35") (term "0,0,0,1"))
                                 (rule "add_literals" (formula "35") (term "0,0,0,0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,1"))
                                 (rule "add_literals" (formula "35") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "35") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "35") (term "0,0,1"))
                                 (rule "leq_literals" (formula "35") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "35"))
                                 (rule "inEqSimp_contradInEq1" (formula "35") (term "1") (ifseqformula "3"))
                                 (rule "qeq_literals" (formula "35") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "35"))
                                 (rule "pullOutSelect" (formula "35") (term "0") (inst "selectSK=IntNode_data_3"))
                                 (rule "simplifySelectOfAnon" (formula "35"))
                                 (builtin "One Step Simplification" (formula "35"))
                                 (rule "eqSymm" (formula "36"))
                                 (rule "applyEqReverse" (formula "35") (term "1") (ifseqformula "36"))
                                 (rule "hideAuxiliaryEq" (formula "36"))
                                 (rule "elementOfUnion" (formula "35") (term "0,0,0"))
                                 (rule "elementOfSingleton" (formula "35") (term "0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "35"))
                                 (rule "elementOfInfiniteUnion" (formula "35") (term "0,0,0"))
                                 (builtin "One Step Simplification" (formula "35"))
                                 (rule "elementOfSingleton" (formula "35") (term "1,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "35"))
                                 (rule "eqSymm" (formula "35") (term "1,0,0,0,0"))
                                 (rule "allLeft" (formula "19") (inst "t=i_2_0"))
                                 (rule "inEqSimp_commuteGeq" (formula "19") (term "1,0,0,0,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "19") (term "1,0,0,0,0") (ifseqformula "4"))
                                 (rule "inEqSimp_homoInEq1" (formula "19") (term "0,1,0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,1,0,0,0,0"))
                                 (rule "add_literals" (formula "19") (term "1,1,0,0,1,0,0,0,0"))
                                 (rule "times_zero_1" (formula "19") (term "1,0,0,1,0,0,0,0"))
                                 (rule "add_zero_right" (formula "19") (term "0,0,1,0,0,0,0"))
                                 (rule "leq_literals" (formula "19") (term "0,1,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "19"))
                                 (rule "inEqSimp_contradInEq1" (formula "19") (term "1,0,0,0,0") (ifseqformula "3"))
                                 (rule "qeq_literals" (formula "19") (term "0,1,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "19"))
                                 (rule "allLeft" (formula "12") (inst "t=add(Z(1(#)), i_2_0)"))
                                 (rule "inEqSimp_commuteGeq" (formula "12") (term "1"))
                                 (rule "inEqSimp_homoInEq0" (formula "12") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "12") (term "1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "12") (term "1,0,1,0"))
                                 (rule "mul_literals" (formula "12") (term "0,1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "12") (term "0,1,0"))
                                 (rule "add_literals" (formula "12") (term "0,0,1,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "12") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "12") (term "0,1,0"))
                                 (rule "polySimp_elimOne" (formula "12") (term "0,1,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "12") (term "1,0") (ifseqformula "3"))
                                 (rule "qeq_literals" (formula "12") (term "0,1,0"))
                                 (builtin "One Step Simplification" (formula "12"))
                                 (rule "inEqSimp_contradInEq1" (formula "12") (term "1") (ifseqformula "4"))
                                 (rule "inEqSimp_homoInEq1" (formula "12") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1"))
                                 (rule "mul_literals" (formula "12") (term "0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "12") (term "0,0,1"))
                                 (rule "polySimp_addComm1" (formula "12") (term "0,0,0,1"))
                                 (rule "add_literals" (formula "12") (term "0,0,0,0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0,1"))
                                 (rule "add_literals" (formula "12") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "12") (term "1,0,0,1"))
                                 (rule "add_literals" (formula "12") (term "0,0,1"))
                                 (rule "leq_literals" (formula "12") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "12"))
                                 (rule "notLeft" (formula "12"))
                                 (rule "replace_known_right" (formula "36") (term "0,0,1,0,0") (ifseqformula "43"))
                                 (builtin "One Step Simplification" (formula "36"))
                                 (rule "allLeft" (formula "38") (inst "t=add(Z(1(#)), i_2_0)"))
                                 (rule "polySimp_addAssoc" (formula "38") (term "1,1,0,0"))
                                 (rule "add_literals" (formula "38") (term "0,1,1,0,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "38") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "38") (term "1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "38") (term "1,0,1,0"))
                                 (rule "mul_literals" (formula "38") (term "0,1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "38") (term "0,1,0"))
                                 (rule "add_literals" (formula "38") (term "0,0,1,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "38") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "38") (term "1,0,1"))
                                 (rule "polySimp_rightDist" (formula "38") (term "1,0,1"))
                                 (rule "mul_literals" (formula "38") (term "0,1,0,1"))
                                 (rule "polySimp_addComm1" (formula "38") (term "0,1"))
                                 (rule "polySimp_addAssoc" (formula "38") (term "0,0,1"))
                                 (rule "add_literals" (formula "38") (term "0,0,0,1"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "38") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "38") (term "0,1,0"))
                                 (rule "polySimp_elimOne" (formula "38") (term "0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "38") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "38") (term "1,1"))
                                 (rule "mul_literals" (formula "38") (term "0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1"))
                                 (rule "polySimp_elimOne" (formula "38") (term "1,1,1"))
                                 (rule "inEqSimp_contradInEq1" (formula "38") (term "1,0") (ifseqformula "3"))
                                 (rule "qeq_literals" (formula "38") (term "0,1,0"))
                                 (builtin "One Step Simplification" (formula "38"))
                                 (rule "pullOutSelect" (formula "38") (term "0,0") (inst "selectSK=IntNode_next_3"))
                                 (rule "simplifySelectOfAnon" (formula "38"))
                                 (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "45")))
                                 (rule "eqSymm" (formula "39") (term "0"))
                                 (rule "elementOfUnion" (formula "38") (term "0,0,0"))
                                 (rule "elementOfInfiniteUnion" (formula "38") (term "1,0,0,0"))
                                 (builtin "One Step Simplification" (formula "38"))
                                 (rule "elementOfSingleton" (formula "38") (term "0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "38"))
                                 (rule "elementOfSingleton" (formula "38") (term "1,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "38"))
                                 (rule "ifthenelse_negated" (formula "38") (term "0"))
                                 (rule "allLeft" (formula "40") (inst "t=i_2_0"))
                                 (rule "replaceKnownSelect_taclet1011111_14" (formula "40") (term "0,0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet11111011111_23" (formula "40") (term "0,0,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "40") (term "1"))
                                 (rule "polySimp_addComm1" (formula "40") (term "0,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "40") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "40") (term "1,1"))
                                 (rule "mul_literals" (formula "40") (term "0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "40") (term "1,1,1"))
                                 (rule "polySimp_elimOne" (formula "40") (term "1,1,1"))
                                 (rule "inEqSimp_contradInEq1" (formula "40") (term "1,0") (ifseqformula "3"))
                                 (rule "qeq_literals" (formula "40") (term "0,1,0"))
                                 (builtin "One Step Simplification" (formula "40"))
                                 (rule "inEqSimp_contradInEq1" (formula "40") (term "1") (ifseqformula "4"))
                                 (rule "inEqSimp_homoInEq1" (formula "40") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "40") (term "1,0,0,1"))
                                 (rule "mul_literals" (formula "40") (term "0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "40") (term "0,0,1"))
                                 (rule "polySimp_addComm1" (formula "40") (term "0,0,0,1"))
                                 (rule "add_literals" (formula "40") (term "0,0,0,0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "40") (term "0,0,1"))
                                 (rule "add_literals" (formula "40") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "40") (term "1,0,0,1"))
                                 (rule "add_literals" (formula "40") (term "0,0,1"))
                                 (rule "leq_literals" (formula "40") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "40"))
                                 (rule "replace_known_left" (formula "55") (term "1") (ifseqformula "40"))
                                 (builtin "One Step Simplification" (formula "55"))
                                 (rule "allRight" (formula "55") (inst "sk=j_1_0"))
                                 (rule "orRight" (formula "55"))
                                 (rule "orRight" (formula "55"))
                                 (rule "orRight" (formula "57"))
                                 (rule "notRight" (formula "57"))
                                 (rule "inEqSimp_leqRight" (formula "56"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0"))
                                 (rule "inEqSimp_geqRight" (formula "57"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "0"))
                                 (rule "allLeft" (formula "19") (inst "t=add(Z(1(#)), i_2_0)"))
                                 (rule "inEqSimp_commuteGeq" (formula "19") (term "1"))
                                 (rule "inEqSimp_homoInEq0" (formula "19") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "19") (term "1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "19") (term "1,0,1,0"))
                                 (rule "mul_literals" (formula "19") (term "0,1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "19") (term "0,1,0"))
                                 (rule "add_literals" (formula "19") (term "0,0,1,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "19") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "0,1,0"))
                                 (rule "polySimp_elimOne" (formula "19") (term "0,1,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "19") (term "1") (ifseqformula "7"))
                                 (rule "inEqSimp_homoInEq1" (formula "19") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1"))
                                 (rule "mul_literals" (formula "19") (term "0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "19") (term "0,0,1"))
                                 (rule "polySimp_addComm1" (formula "19") (term "0,0,0,1"))
                                 (rule "add_literals" (formula "19") (term "0,0,0,0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,1"))
                                 (rule "add_literals" (formula "19") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "19") (term "1,0,0,1"))
                                 (rule "add_literals" (formula "19") (term "0,0,1"))
                                 (rule "leq_literals" (formula "19") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "19"))
                                 (rule "inEqSimp_contradInEq1" (formula "19") (term "1") (ifseqformula "6"))
                                 (rule "qeq_literals" (formula "19") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "19"))
                                 (rule "allLeft" (formula "24") (inst "t=add(Z(1(#)), i_2_0)"))
                                 (rule "inEqSimp_commuteGeq" (formula "24") (term "1,0,0,0,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "24") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "24") (term "1,0,1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "24") (term "1,0,1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "24") (term "0,1,0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "24") (term "0,1,0,0,0,0,0"))
                                 (rule "add_literals" (formula "24") (term "0,0,1,0,0,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "24") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "24") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "24") (term "0,1,0,0,0,0,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "24") (term "1,0,0,0,0,0") (ifseqformula "6"))
                                 (rule "qeq_literals" (formula "24") (term "0,1,0,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "24"))
                                 (rule "inEqSimp_contradInEq1" (formula "24") (term "1,0,0,0,0") (ifseqformula "7"))
                                 (rule "inEqSimp_homoInEq1" (formula "24") (term "0,1,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0,0,0"))
                                 (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "24") (term "0,0,0,1,0,0,0,0"))
                                 (rule "add_literals" (formula "24") (term "0,0,0,0,1,0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,1,0,0,0,0"))
                                 (rule "add_literals" (formula "24") (term "1,1,0,0,1,0,0,0,0"))
                                 (rule "times_zero_1" (formula "24") (term "1,0,0,1,0,0,0,0"))
                                 (rule "add_literals" (formula "24") (term "0,0,1,0,0,0,0"))
                                 (rule "leq_literals" (formula "24") (term "0,1,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "24"))
                                 (rule "allLeft" (formula "28") (inst "t=add(Z(1(#)), i_2_0)"))
                                 (rule "polySimp_addAssoc" (formula "28") (term "1,1,0,0"))
                                 (rule "add_literals" (formula "28") (term "0,1,1,0,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "28") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "28") (term "1,0,1"))
                                 (rule "polySimp_rightDist" (formula "28") (term "1,0,1"))
                                 (rule "mul_literals" (formula "28") (term "0,1,0,1"))
                                 (rule "polySimp_addComm1" (formula "28") (term "0,1"))
                                 (rule "polySimp_addAssoc" (formula "28") (term "0,0,1"))
                                 (rule "add_literals" (formula "28") (term "0,0,0,1"))
                                 (rule "inEqSimp_homoInEq0" (formula "28") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "28") (term "1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "28") (term "1,0,1,0"))
                                 (rule "mul_literals" (formula "28") (term "0,1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "28") (term "0,1,0"))
                                 (rule "add_literals" (formula "28") (term "0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "28") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "28") (term "1,1"))
                                 (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1"))
                                 (rule "mul_literals" (formula "28") (term "0,1,1"))
                                 (rule "polySimp_elimOne" (formula "28") (term "1,1,1"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "28") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "28") (term "0,1,0"))
                                 (rule "polySimp_elimOne" (formula "28") (term "0,1,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "28") (term "1,0") (ifseqformula "6"))
                                 (rule "qeq_literals" (formula "28") (term "0,1,0"))
                                 (builtin "One Step Simplification" (formula "28"))
                                 (rule "allLeft" (formula "29") (inst "t=i_2_0"))
                                 (rule "inEqSimp_homoInEq1" (formula "29") (term "1"))
                                 (rule "polySimp_addComm1" (formula "29") (term "0,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "29") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "29") (term "1,1"))
                                 (rule "mul_literals" (formula "29") (term "0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1"))
                                 (rule "polySimp_elimOne" (formula "29") (term "1,1,1"))
                                 (rule "inEqSimp_contradInEq1" (formula "29") (term "1") (ifseqformula "7"))
                                 (rule "inEqSimp_homoInEq1" (formula "29") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1"))
                                 (rule "mul_literals" (formula "29") (term "0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "29") (term "0,0,1"))
                                 (rule "polySimp_addComm1" (formula "29") (term "0,0,0,1"))
                                 (rule "add_literals" (formula "29") (term "0,0,0,0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,1"))
                                 (rule "add_literals" (formula "29") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "29") (term "1,0,0,1"))
                                 (rule "add_literals" (formula "29") (term "0,0,1"))
                                 (rule "leq_literals" (formula "29") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "29"))
                                 (rule "inEqSimp_contradInEq1" (formula "29") (term "1") (ifseqformula "6"))
                                 (rule "qeq_literals" (formula "29") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "29"))
                                 (rule "commute_or_2" (formula "23") (term "0"))
                                 (rule "ifthenelse_split" (formula "42") (term "0"))
                                 (branch "∃ int j; ( (IntNode)self.nodeseq[j] = self.first ∧ j ≥ 0 ∧ j ≤ -1 + self.size) TRUE"
                                    (rule "exLeft" (formula "42") (inst "sk=j_0"))
                                    (rule "andLeft" (formula "42"))
                                    (rule "andLeft" (formula "42"))
                                    (rule "eqSymm" (formula "45"))
                                    (rule "inEqSimp_homoInEq0" (formula "44"))
                                    (rule "polySimp_addComm1" (formula "44") (term "0"))
                                    (rule "applyEq" (formula "58") (term "0") (ifseqformula "45"))
                                    (builtin "One Step Simplification" (formula "58"))
                                    (rule "false_right" (formula "58"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "44"))
                                    (rule "polySimp_mulComm0" (formula "44") (term "1"))
                                    (rule "polySimp_rightDist" (formula "44") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "44") (term "1,1"))
                                    (rule "mul_literals" (formula "44") (term "0,1"))
                                    (rule "polySimp_elimOne" (formula "44") (term "1,1"))
                                    (rule "seqGetAlphaCast" (formula "16") (term "1,1"))
                                    (rule "castedGetAny" (formula "16") (term "0"))
                                    (builtin "One Step Simplification" (formula "16"))
                                    (rule "true_left" (formula "16"))
                                    (rule "seqGetAlphaCast" (formula "16") (term "0"))
                                    (rule "castDel" (formula "16") (term "0"))
                                    (builtin "One Step Simplification" (formula "16"))
                                    (rule "true_left" (formula "16"))
                                    (rule "allLeft" (formula "4") (inst "t=add(Z(neglit(1(#))),
    int::select(heap, self, IntLinkedList::$size))"))
                                    (rule "replace_known_left" (formula "4") (term "0,0,0") (ifseqformula "35"))
                                    (builtin "One Step Simplification" (formula "4"))
                                    (rule "inEqSimp_homoInEq0" (formula "4") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                                    (rule "mul_literals" (formula "4") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                    (rule "add_literals" (formula "4") (term "0,0,0"))
                                    (rule "add_zero_left" (formula "4") (term "0,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "4") (term "1"))
                                    (rule "polySimp_mulComm0" (formula "4") (term "1,0,1"))
                                    (rule "polySimp_rightDist" (formula "4") (term "1,0,1"))
                                    (rule "mul_literals" (formula "4") (term "0,1,0,1"))
                                    (rule "polySimp_addAssoc" (formula "4") (term "0,1"))
                                    (rule "polySimp_addComm0" (formula "4") (term "0,0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,1"))
                                    (rule "add_literals" (formula "4") (term "1,1,0,1"))
                                    (rule "times_zero_1" (formula "4") (term "1,0,1"))
                                    (rule "add_literals" (formula "4") (term "0,1"))
                                    (rule "leq_literals" (formula "4") (term "1"))
                                    (builtin "One Step Simplification" (formula "4"))
                                    (rule "inEqSimp_invertInEq1" (formula "4"))
                                    (rule "times_zero_2" (formula "4") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                    (rule "polySimp_elimOne" (formula "4") (term "0"))
                                    (rule "inEqSimp_contradInEq1" (formula "4") (ifseqformula "37"))
                                    (rule "qeq_literals" (formula "4") (term "0"))
                                    (builtin "One Step Simplification" (formula "4"))
                                    (rule "closeFalse" (formula "4"))
                                 )
                                 (branch "∃ int j; ( (IntNode)self.nodeseq[j] = self.first ∧ j ≥ 0 ∧ j ≤ -1 + self.size) FALSE"
                                    (rule "eqSymm" (formula "42"))
                                    (rule "applyEq" (formula "56") (term "0") (ifseqformula "42"))
                                    (builtin "One Step Simplification" (formula "56"))
                                    (rule "false_right" (formula "56"))
                                    (rule "nnf_ex2all" (formula "53"))
                                    (rule "nnf_notAnd" (formula "1") (term "0"))
                                    (rule "inEqSimp_notLeq" (formula "1") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0"))
                                    (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,0,1,0"))
                                    (rule "add_zero_left" (formula "1") (term "0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1,1,0"))
                                    (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "1") (term "1,0,0"))
                                    (rule "times_zero_1" (formula "1") (term "1,0,0,1,0,0"))
                                    (rule "add_zero_right" (formula "1") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1,0,0"))
                                    (rule "mul_literals" (formula "1") (term "1,1,0,0"))
                                    (rule "seqGetAlphaCast" (formula "17") (term "1,1"))
                                    (rule "castedGetAny" (formula "17") (term "0"))
                                    (builtin "One Step Simplification" (formula "17"))
                                    (rule "true_left" (formula "17"))
                                    (rule "seqGetAlphaCast" (formula "17") (term "0"))
                                    (rule "castDel" (formula "17") (term "0"))
                                    (builtin "One Step Simplification" (formula "17"))
                                    (rule "true_left" (formula "17"))
                                    (rule "allLeft" (formula "5") (inst "t=add(Z(neglit(1(#))),
    int::select(heap, self, IntLinkedList::$size))"))
                                    (rule "replace_known_left" (formula "5") (term "0,0,0") (ifseqformula "36"))
                                    (builtin "One Step Simplification" (formula "5"))
                                    (rule "inEqSimp_homoInEq0" (formula "5") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
                                    (rule "mul_literals" (formula "5") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                    (rule "add_literals" (formula "5") (term "0,0,0"))
                                    (rule "add_zero_left" (formula "5") (term "0,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "5") (term "1"))
                                    (rule "polySimp_mulComm0" (formula "5") (term "1,0,1"))
                                    (rule "polySimp_rightDist" (formula "5") (term "1,0,1"))
                                    (rule "mul_literals" (formula "5") (term "0,1,0,1"))
                                    (rule "polySimp_addAssoc" (formula "5") (term "0,1"))
                                    (rule "polySimp_addComm0" (formula "5") (term "0,0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,1"))
                                    (rule "add_literals" (formula "5") (term "1,1,0,1"))
                                    (rule "times_zero_1" (formula "5") (term "1,0,1"))
                                    (rule "add_literals" (formula "5") (term "0,1"))
                                    (rule "leq_literals" (formula "5") (term "1"))
                                    (builtin "One Step Simplification" (formula "5"))
                                    (rule "inEqSimp_invertInEq1" (formula "5"))
                                    (rule "mul_literals" (formula "5") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                    (rule "polySimp_elimOne" (formula "5") (term "0"))
                                    (rule "inEqSimp_subsumption0" (formula "29") (term "1") (ifseqformula "5"))
                                    (rule "leq_literals" (formula "29") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "29"))
                                    (rule "true_left" (formula "29"))
                                    (rule "inEqSimp_contradInEq1" (formula "5") (ifseqformula "37"))
                                    (rule "qeq_literals" (formula "5") (term "0"))
                                    (builtin "One Step Simplification" (formula "5"))
                                    (rule "closeFalse" (formula "5"))
                                 )
                              )
                           )
                        )
                     )
                  )
               )
               (branch
                  (rule "allRight" (formula "32") (inst "sk=f_0"))
                  (rule "allRight" (formula "32") (inst "sk=o_0"))
                  (rule "orRight" (formula "32"))
                  (rule "orRight" (formula "32"))
                  (rule "orRight" (formula "32"))
                  (rule "eqSymm" (formula "33") (term "0,1,0"))
                  (rule "pullOutSelect" (formula "35") (term "0") (inst "selectSK=f_0_0"))
                  (rule "simplifySelectOfAnon" (formula "1"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "35")))
                  (rule "eqSymm" (formula "36"))
                  (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                  (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                  (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "33"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "elementOfInfiniteUnion" (formula "1") (term "0,0,0"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "elementOfSingleton" (formula "1") (term "1,0,0,0,0"))
                  (rule "eqSymm" (formula "1") (term "0,1,0,0,0,0"))
                  (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "34"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "36")))
                  (rule "closeFalse" (formula "1"))
               )
            )
         )
      )
   )
)
)

}
