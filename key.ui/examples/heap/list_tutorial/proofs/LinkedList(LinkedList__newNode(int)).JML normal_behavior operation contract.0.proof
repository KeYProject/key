\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Wed Jan 10 16:43:06 CET 2024
[Labels]UseOriginLabels=true
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_OFF
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=JavaCard-JavaCard\\:off, Strings-Strings\\:on, assertions-assertions\\:safe, bigint-bigint\\:on, floatRules-floatRules\\:strictfpOnly, initialisation-initialisation\\:disableStaticInitialisation, intRules-intRules\\:arithmeticSemanticsIgnoringOF, integerSimplificationRules-integerSimplificationRules\\:full, javaLoopTreatment-javaLoopTreatment\\:efficient, mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off, methodExpansion-methodExpansion\\:modularOnly, modelFields-modelFields\\:treatAsAxiom, moreSeqRules-moreSeqRules\\:off, permissions-permissions\\:off, programRules-programRules\\:Java, reach-reach\\:on, runtimeExceptions-runtimeExceptions\\:ban, sequences-sequences\\:on, wdChecks-wdChecks\\:off, wdOperator-wdOperator\\:L
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[Strategy]MaximumNumberOfAutomaticApplications=6000
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_DELAYED
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[Strategy]Timeout=-1
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[SMTSettings]useUninterpretedMultiplication=true
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[SMTSettings]maxGenericSorts=2
[StrategyProperty]OSS_OPTIONS_KEY=OSS_ON
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\javaSource "../src";

\proofObligation "#Proof Obligation Settings
#Wed Jan 10 16:43:06 CET 2024
contract=LinkedList[LinkedList\\:\\:newNode(int)].JML normal_behavior operation contract.0
name=LinkedList[LinkedList\\:\\:newNode(int)].JML normal_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "mattias" ) (keyVersion "4911758ba07017f4af60dc0314ac665c14a542d0"))

(autoModeTime "25355")

(branch "dummy ID"
 (builtin "One Step Simplification" (formula "1") (newnames "heapAtPre,o_0,f"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "2"))
(rule "eqSymm" (formula "7") (term "1,0,0,1,0,1"))
(rule "assignment" (formula "7") (term "1"))
 (builtin "One Step Simplification" (formula "7"))
(rule "methodBodyExpand" (formula "7") (term "1") (newnames "heapBefore_newNode,savedHeapBefore_newNode"))
 (builtin "One Step Simplification" (formula "7"))
(rule "variableDeclarationAssign" (formula "7") (term "1"))
(rule "variableDeclaration" (formula "7") (term "1") (newnames "result"))
(rule "instanceCreationAssignment" (formula "7") (term "1") (inst "#v0=n"))
(rule "variableDeclarationAssign" (formula "7") (term "1"))
(rule "variableDeclaration" (formula "7") (term "1") (newnames "n"))
(rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "7") (term "1") (inst "#v0=n_1"))
(rule "variableDeclaration" (formula "7") (term "1") (newnames "n_1"))
(rule "methodBodyExpand" (formula "7") (term "1") (newnames "heapBefore_<createObject>,savedHeapBefore_<createObject>"))
 (builtin "One Step Simplification" (formula "7"))
(rule "variableDeclaration" (formula "7") (term "1") (newnames "__NEW__"))
(rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "7") (term "1") (inst "#v0=n_2"))
(rule "variableDeclaration" (formula "7") (term "1") (newnames "n_2"))
(rule "allocateInstance" (formula "7"))
 (builtin "One Step Simplification" (formula "8"))
 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "2")))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "1"))
(rule "notLeft" (formula "1"))
(rule "blockEmpty" (formula "10") (term "1"))
(rule "assignment" (formula "10") (term "1"))
 (builtin "One Step Simplification" (formula "10"))
(rule "methodBodyExpand" (formula "10") (term "1") (newnames "heapBefore_<create>,savedHeapBefore_<create>"))
 (builtin "One Step Simplification" (formula "10"))
(rule "assignment_write_attribute_this" (formula "10"))
 (builtin "One Step Simplification" (formula "10"))
(rule "methodCallWithinClass" (formula "10") (term "1"))
(rule "methodBodyExpand" (formula "10") (term "1") (newnames "heapBefore_<prepareEnter>,savedHeapBefore_<prepareEnter>"))
 (builtin "One Step Simplification" (formula "10"))
(rule "methodCallSuper" (formula "10") (term "1"))
(rule "methodBodyExpand" (formula "10") (term "1") (newnames "heapBefore_<prepare>,savedHeapBefore_<prepare>"))
 (builtin "One Step Simplification" (formula "10"))
(rule "methodCallEmpty" (formula "10") (term "1"))
(rule "blockEmpty" (formula "10") (term "1"))
(rule "assignment_write_attribute_this" (formula "10"))
 (builtin "One Step Simplification" (formula "10"))
(rule "assignment_write_attribute_this" (formula "10"))
 (builtin "One Step Simplification" (formula "10"))
(rule "methodCallEmpty" (formula "10") (term "1"))
(rule "blockEmpty" (formula "10") (term "1"))
(rule "methodCallReturnIgnoreResult" (formula "10") (term "1"))
(rule "methodCallReturn" (formula "10") (term "1"))
(rule "assignment" (formula "10") (term "1"))
 (builtin "One Step Simplification" (formula "10"))
(rule "methodCallEmpty" (formula "10") (term "1"))
(rule "blockEmpty" (formula "10") (term "1"))
(rule "assignment" (formula "10") (term "1"))
 (builtin "One Step Simplification" (formula "10"))
(rule "methodBodyExpand" (formula "10") (term "1") (newnames "heapBefore_<init>,savedHeapBefore_<init>"))
 (builtin "One Step Simplification" (formula "10"))
(rule "methodCallSuper" (formula "10") (term "1"))
(rule "methodBodyExpand" (formula "10") (term "1") (newnames "heapBefore_<init>_0,savedHeapBefore_<init>_0"))
 (builtin "One Step Simplification" (formula "10"))
(rule "methodCallEmpty" (formula "10") (term "1"))
(rule "methodCallEmpty" (formula "10") (term "1"))
(rule "blockEmpty" (formula "10") (term "1"))
(rule "assignment_write_attribute" (formula "10"))
(branch "Normal Execution (n != null)"
    (builtin "One Step Simplification" (formula "10"))
   (rule "assignment" (formula "10") (term "1"))
    (builtin "One Step Simplification" (formula "10"))
   (rule "assignment_write_attribute" (formula "10"))
   (branch "Normal Execution (result != null)"
       (builtin "One Step Simplification" (formula "10"))
      (rule "methodCallReturn" (formula "10") (term "1"))
      (rule "assignment" (formula "10") (term "1"))
       (builtin "One Step Simplification" (formula "10"))
      (rule "methodCallEmpty" (formula "10") (term "1"))
      (rule "tryEmpty" (formula "10") (term "1"))
      (rule "emptyModality" (formula "10") (term "1"))
      (rule "andRight" (formula "10"))
      (branch "Case 1"
         (rule "andRight" (formula "10"))
         (branch "Case 1"
            (rule "andRight" (formula "10"))
            (branch
               (rule "andRight" (formula "10"))
               (branch
                   (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "7")))
                  (rule "closeTrue" (formula "10"))
               )
               (branch
                   (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "8")))
                  (rule "closeTrue" (formula "10"))
               )
            )
            (branch "Case 2"
               (rule "andRight" (formula "10"))
               (branch
                   (builtin "One Step Simplification" (formula "10"))
                  (rule "pullOutSelect" (formula "10") (term "0") (inst "selectSK=Node_data_0"))
                  (rule "simplifySelectOfStore" (formula "1"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "castDel" (formula "1") (term "0"))
                  (rule "applyEqReverse" (formula "11") (term "0") (ifseqformula "1"))
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "closeTrue" (formula "11"))
               )
               (branch "Case 2"
                  (rule "andRight" (formula "10"))
                  (branch
                      (builtin "One Step Simplification" (formula "10"))
                     (rule "dismissNonSelectedField" (formula "10") (term "0"))
                     (rule "dismissNonSelectedField" (formula "10") (term "0"))
                     (rule "pullOutSelect" (formula "10") (term "0") (inst "selectSK=Node_next_0"))
                     (rule "simplifySelectOfStore" (formula "1"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "castDel" (formula "1") (term "0"))
                     (rule "applyEqReverse" (formula "11") (term "0") (ifseqformula "1"))
                      (builtin "One Step Simplification" (formula "11"))
                     (rule "closeTrue" (formula "11"))
                  )
                  (branch "Case 2"
                     (rule "andRight" (formula "10"))
                     (branch "Case 1"
                         (builtin "One Step Simplification" (formula "10"))
                         (builtin "Use Dependency Contract" (formula "10") (ifInst ""  (formula "6")) (contract "LinkedList[java.lang.Object::<inv>()].JML accessible clause.0") (userinteraction))
                        (rule "impLeft" (formula "7") (userinteraction))
                        (branch "Case 1"
                           (rule "andRight" (formula "7"))
                           (branch "Case 1"
                              (rule "andRight" (formula "7"))
                              (branch "Case 1"
                                 (rule "andRight" (formula "7"))
                                 (branch "Case 1"
                                    (rule "andRight" (formula "7"))
                                    (branch "Case 1"
                                       (rule "notRight" (formula "7"))
                                       (rule "close" (formula "10") (ifseqformula "1"))
                                    )
                                    (branch
                                       (rule "close" (formula "7") (ifseqformula "3"))
                                    )
                                 )
                                 (branch "Case 2"
                                    (rule "andRight" (formula "7"))
                                    (branch
                                       (rule "close" (formula "7") (ifseqformula "2"))
                                    )
                                    (branch "Case 2"
                                       (rule "wellFormedStorePrimitive" (formula "7"))
                                       (rule "wellFormedStorePrimitive" (formula "7"))
                                       (rule "wellFormedStoreObject" (formula "7"))
                                        (builtin "One Step Simplification" (formula "7"))
                                       (rule "wellFormedCreate" (formula "7"))
                                       (rule "close" (formula "7") (ifseqformula "2"))
                                    )
                                 )
                              )
                              (branch
                                 (rule "close" (formula "7") (ifseqformula "6"))
                              )
                           )
                           (branch "Case 2"
                              (rule "Class_invariant_axiom_for_LinkedList" (formula "6") (inst "i=i") (inst "j=j") (inst "i_0=i_0") (ifseqformula "10") (userinteraction))
                              (rule "andLeft" (formula "6"))
                              (rule "andLeft" (formula "6"))
                              (rule "andLeft" (formula "8"))
                              (rule "andLeft" (formula "6"))
                              (rule "andLeft" (formula "6"))
                              (rule "andLeft" (formula "6"))
                              (rule "andLeft" (formula "6"))
                              (rule "disjointToElementOf" (formula "14") (inst "ov=ov") (inst "fv=fv") (userinteraction))
                              (rule "allRight" (formula "14") (inst "sk=ov_0") (userinteraction))
                              (rule "allRight" (formula "14") (inst "sk=fv_0") (userinteraction))
                              (rule "orRight" (formula "14") (userinteraction))
                              (rule "notRight" (formula "15") (userinteraction))
                              (rule "notRight" (formula "15") (userinteraction))
                              (rule "elementOfUnion" (formula "1") (userinteraction))
                              (rule "elementOfUnion" (formula "1") (term "1") (userinteraction))
                              (rule "elementOfSingleton" (formula "1") (term "0") (userinteraction))
                              (rule "elementOfSingleton" (formula "1") (term "0,1") (userinteraction))
                              (rule "elementOfSingleton" (formula "1") (term "1,1") (userinteraction))
                              (rule "applyEq" (formula "2") (term "2") (ifseqformula "10") (userinteraction))
                              (rule "elementOfUnion" (formula "2") (userinteraction))
                              (rule "cut_direct" (formula "1") (term "0,0") (userinteraction))
                              (branch "CUT: ov_0 = n_2 TRUE"
                                 (rule "orLeft" (formula "3") (userinteraction))
                                 (branch "(ov_0, fv_0) in self.*"
                                     (builtin "One Step Simplification" (formula "12"))
                                     (builtin "One Step Simplification" (formula "11"))
                                     (builtin "One Step Simplification" (formula "3"))
                                     (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")))
                                    (rule "eqSymm" (formula "14"))
                                    (rule "eqSymm" (formula "13"))
                                    (rule "eqSymm" (formula "16"))
                                    (rule "eqSymm" (formula "15"))
                                    (rule "eqSymm" (formula "12") (term "0,1,0,1,0,1,0"))
                                    (rule "eqSymm" (formula "12") (term "1,0,0,1,0"))
                                    (rule "eqSymm" (formula "12") (term "1,1,0,1,0,1,0"))
                                    (rule "eqSymm" (formula "12") (term "1,1,0"))
                                    (rule "eqSymm" (formula "11"))
                                    (rule "polySimp_elimSub" (formula "14") (term "1,0,2,0"))
                                    (rule "mul_literals" (formula "14") (term "1,1,0,2,0"))
                                    (rule "polySimp_elimSub" (formula "12") (term "1,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "12") (term "1,1,0,0,1,1,0"))
                                    (rule "polySimp_addComm0" (formula "12") (term "1,0,2,0,1,1,0"))
                                    (rule "polySimp_addComm0" (formula "14") (term "1,0,2,0"))
                                    (rule "polySimp_addComm0" (formula "12") (term "1,0,0,1,1,0"))
                                    (rule "subsetSingletonLeft" (formula "9"))
                                    (rule "subsetSingletonLeft" (formula "10"))
                                    (rule "castedGetAny" (formula "12") (term "0,0,0,0,0,1,0"))
                                    (rule "castedGetAny" (formula "13") (term "2,0"))
                                    (rule "castedGetAny" (formula "12") (term "0,0,1,0,1,0,1,0"))
                                    (rule "castedGetAny" (formula "12") (term "1,0,1,0,1,0,1,0"))
                                    (rule "castedGetAny" (formula "12") (term "0,1,0,0,1,0"))
                                    (rule "eqSymm" (formula "12") (term "1,0,0,1,0"))
                                    (rule "castedGetAny" (formula "12") (term "1,1,1,1,0"))
                                    (rule "castedGetAny" (formula "11") (term "0,1,0,1,0"))
                                    (rule "castedGetAny" (formula "12") (term "2,0,1,1,0"))
                                    (rule "castedGetAny" (formula "14") (term "2,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0,1,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0,1,0,1,0"))
                                    (rule "castedGetAny" (formula "12") (term "1,0,1,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0,1,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0,1,0,1,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0,1,0"))
                                    (rule "applyEq" (formula "1") (term "0") (ifseqformula "3"))
                                    (rule "eqSymm" (formula "1"))
                                    (rule "sortsDisjointModuloNull" (formula "1"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "close" (formula "20") (ifseqformula "2"))
                                 )
                                 (branch "(ov_0, fv_0) in infiniteUnion{int i_0;}(if ( inInt(i_0) & ( 0 <= i_0 & i_0 < self.size)) then ((Node)(self.nodeseq[i_0]).*) else ({}))"
                                    (rule "elementOfInfiniteUnion" (formula "3") (userinteraction))
                                    (rule "exLeft" (formula "3") (inst "sk=i_0_0") (userinteraction))
                                    (rule "ifthenelse_split" (formula "3") (term "2") (userinteraction))
                                    (branch "inInt(i_0_0) & (0 <= i_0_0 & i_0_0 < self.size) TRUE"
                                        (builtin "One Step Simplification" (formula "4") (userinteraction))
                                       (rule "int_induction" (inst "b=(   lt(nv, int::select(heap, self, LinkedList::$size))<<origin(\"User_Interaction @ node 6443 (int_induction)\",\"[]\")>>
 -> (  boolean::select(heap,
                       (Node)(any::seqGet(Seq::select(heap,
                                                      self,
                                                      LinkedList::$nodeseq),
                                          nv)),
                       java.lang.Object::<created>)
     = TRUE)<<origin(\"User_Interaction @ node 6443 (int_induction)\",\"[]\")>>)<<origin(\"User_Interaction @ node 6443 (int_induction)\",\"[]\")>>") (inst "nv=nv") (userinteraction))
                                       (branch "Base Case"
                                          (rule "impRight" (formula "18") (userinteraction))
                                          (rule "ifthenelse_split" (formula "15") (term "1") (userinteraction))
                                          (branch "self.size = 0 TRUE"
                                              (builtin "One Step Simplification" (formula "14"))
                                              (builtin "One Step Simplification" (formula "13"))
                                              (builtin "One Step Simplification" (formula "4"))
                                              (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "2")) (ifInst ""  (formula "2")))
                                             (rule "andLeft" (formula "4"))
                                             (rule "eqSymm" (formula "18"))
                                             (rule "eqSymm" (formula "19"))
                                             (rule "eqSymm" (formula "20"))
                                             (rule "eqSymm" (formula "6"))
                                             (rule "eqSymm" (formula "15") (term "0,1,0,1,0,1,0"))
                                             (rule "eqSymm" (formula "15") (term "1,1,0,1,0,1,0"))
                                             (rule "eqSymm" (formula "15") (term "1,1,0"))
                                             (rule "eqSymm" (formula "15") (term "1,0,0,1,0"))
                                             (rule "eqSymm" (formula "14"))
                                             (rule "replace_known_left" (formula "18") (term "0,0") (ifseqformula "16"))
                                              (builtin "One Step Simplification" (formula "18"))
                                             (rule "eqSymm" (formula "18"))
                                             (rule "polySimp_elimSub" (formula "15") (term "1,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "15") (term "1,1,0,0,1,1,0"))
                                             (rule "polySimp_addComm0" (formula "15") (term "1,0,2,0,1,1,0"))
                                             (rule "polySimp_addComm0" (formula "15") (term "1,0,0,1,1,0"))
                                             (rule "subsetSingletonLeft" (formula "12"))
                                             (rule "castedGetAny" (formula "21") (term "1,0"))
                                             (rule "subsetSingletonLeft" (formula "13"))
                                             (rule "castedGetAny" (formula "15") (term "0,0,0,0,0,1,0"))
                                             (rule "castedGetAny" (formula "6") (term "0"))
                                             (rule "castedGetAny" (formula "15") (term "1,0,1,0,1,0,1,0"))
                                             (rule "castedGetAny" (formula "15") (term "0,0,1,0,1,0,1,0"))
                                             (rule "castedGetAny" (formula "15") (term "1,1,1,1,0"))
                                             (rule "castedGetAny" (formula "15") (term "0,1,0,0,1,0"))
                                             (rule "eqSymm" (formula "15") (term "1,0,0,1,0"))
                                             (rule "castedGetAny" (formula "14") (term "0,1,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "1"))
                                             (rule "add_zero_right" (formula "1") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                             (rule "castedGetAny" (formula "15") (term "2,0,1,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0,1,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0,1,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "5"))
                                             (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "5") (term "0"))
                                             (rule "castedGetAny" (formula "15") (term "1,0,1,0,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0,1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0,1,0,1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "4"))
                                             (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0,1,0"))
                                             (rule "applyEq" (formula "5") (term "0,1,0") (ifseqformula "16"))
                                             (rule "mul_literals" (formula "5") (term "1,0"))
                                             (rule "add_zero_right" (formula "5") (term "0"))
                                             (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "16"))
                                             (rule "times_zero_2" (formula "1") (term "1,0"))
                                             (rule "add_literals" (formula "1") (term "0"))
                                             (rule "leq_literals" (formula "1"))
                                             (rule "closeFalse" (formula "1"))
                                          )
                                          (branch "self.size = 0 FALSE"
                                             (rule "applyEqReverse" (formula "20") (term "1,0") (ifseqformula "15") (userinteraction))
                                             (rule "eqTermCut" (formula "20") (term "1,0") (inst "s=null") (userinteraction))
                                             (branch "Assume self.first = null"
                                                (rule "instAll" (formula "16") (term "1,0,1") (ifseqformula "15") (userinteraction))
                                                (rule "impLeft" (formula "16") (userinteraction))
                                                (branch "Case 1"
                                                    (builtin "One Step Simplification" (formula "15"))
                                                    (builtin "One Step Simplification" (formula "14"))
                                                    (builtin "One Step Simplification" (formula "5"))
                                                    (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "3")) (ifInst ""  (formula "3")))
                                                    (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "2")))
                                                   (rule "leq_literals" (formula "20"))
                                                   (rule "closeTrue" (formula "20"))
                                                )
                                                (branch "Case 2"
                                                   (rule "andLeft" (formula "16"))
                                                   (rule "andLeft" (formula "16"))
                                                   (rule "andLeft" (formula "16"))
                                                   (rule "notLeft" (formula "16"))
                                                    (builtin "One Step Simplification" (formula "17"))
                                                    (builtin "One Step Simplification" (formula "15"))
                                                    (builtin "One Step Simplification" (formula "14"))
                                                    (builtin "One Step Simplification" (formula "5"))
                                                    (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "3")) (ifInst ""  (formula "3")))
                                                   (rule "add_zero_left" (formula "18") (term "1,0,2,1"))
                                                   (rule "andLeft" (formula "5"))
                                                   (rule "eqSymm" (formula "20"))
                                                   (rule "eqSymm" (formula "7"))
                                                   (rule "eqSymm" (formula "23"))
                                                   (rule "eqSymm" (formula "21"))
                                                   (rule "eqSymm" (formula "22"))
                                                   (rule "eqSymm" (formula "19") (term "0,1"))
                                                   (rule "eqSymm" (formula "17"))
                                                   (rule "eqSymm" (formula "18") (term "0,1,0"))
                                                   (rule "eqSymm" (formula "18") (term "1,1,0"))
                                                   (rule "eqSymm" (formula "16") (term "1,1,0"))
                                                   (rule "eqSymm" (formula "16") (term "1,0,0,1,0"))
                                                   (rule "eqSymm" (formula "16") (term "1,1,0,1,0,1,0"))
                                                   (rule "eqSymm" (formula "16") (term "0,1,0,1,0,1,0"))
                                                   (rule "eqSymm" (formula "15"))
                                                   (rule "eqSymm" (formula "19"))
                                                   (rule "replace_known_right" (formula "21") (term "0,0") (ifseqformula "25"))
                                                    (builtin "One Step Simplification" (formula "21"))
                                                   (rule "polySimp_elimSub" (formula "16") (term "1,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "16") (term "1,1,0,0,1,1,0"))
                                                   (rule "polySimp_elimSub" (formula "19") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "19") (term "1,0,0,0"))
                                                   (rule "polySimp_elimSub" (formula "21") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "21") (term "1,1,0,0"))
                                                   (rule "polySimp_addComm0" (formula "16") (term "1,0,2,0,1,1,0"))
                                                   (rule "polySimp_addComm0" (formula "16") (term "1,0,0,1,1,0"))
                                                   (rule "polySimp_addComm0" (formula "19") (term "0,0,0"))
                                                   (rule "polySimp_addComm0" (formula "21") (term "1,0,0"))
                                                   (rule "subsetSingletonLeft" (formula "14"))
                                                   (rule "subsetSingletonLeft" (formula "13"))
                                                   (rule "castedGetAny" (formula "24") (term "0"))
                                                   (rule "castedGetAny" (formula "16") (term "0,0,0,0,0,1,0"))
                                                   (rule "castedGetAny" (formula "20") (term "0"))
                                                   (rule "castedGetAny" (formula "7") (term "0"))
                                                   (rule "castedGetAny" (formula "17") (term "1,1"))
                                                   (rule "castedGetAny" (formula "17") (term "0"))
                                                   (rule "castedGetAny" (formula "18") (term "1,0,1,0"))
                                                   (rule "castedGetAny" (formula "18") (term "0,0,1,0"))
                                                   (rule "castedGetAny" (formula "16") (term "1,1,1,1,0"))
                                                   (rule "castedGetAny" (formula "16") (term "0,1,0,0,1,0"))
                                                   (rule "eqSymm" (formula "16") (term "1,0,0,1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "2"))
                                                   (rule "add_zero_right" (formula "2") (term "0"))
                                                   (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                                   (rule "castedGetAny" (formula "16") (term "1,0,1,0,1,0,1,0"))
                                                   (rule "castedGetAny" (formula "16") (term "0,0,1,0,1,0,1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
                                                   (rule "castedGetAny" (formula "15") (term "0,1,0,1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0,1,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0,1,0,1,0"))
                                                   (rule "castedGetAny" (formula "19") (term "1,1"))
                                                   (rule "castedGetAny" (formula "19") (term "2,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "6"))
                                                   (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                   (rule "castedGetAny" (formula "16") (term "2,0,1,1,0"))
                                                   (rule "castedGetAny" (formula "21") (term "0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0,1,0"))
                                                   (rule "castedGetAny" (formula "16") (term "1,0,1,0,0,1,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0,1,0,1,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "5"))
                                                   (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0,1,0"))
                                                   (rule "applyEq" (formula "24") (term "0") (ifseqformula "20"))
                                                   (rule "close" (formula "24") (ifseqformula "1"))
                                                )
                                             )
                                             (branch "Assume self.first != null"
                                                 (builtin "One Step Simplification" (formula "15"))
                                                 (builtin "One Step Simplification" (formula "14"))
                                                 (builtin "One Step Simplification" (formula "5"))
                                                 (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "3")) (ifInst ""  (formula "3")))
                                                (rule "notLeft" (formula "1"))
                                                (rule "referencedObjectIsCreatedRight" (formula "21") (ifseqformula "19"))
                                                (rule "close" (formula "21") (ifseqformula "7"))
                                             )
                                          )
                                       )
                                       (branch "Step Case"
                                           (builtin "One Step Simplification" (formula "13"))
                                           (builtin "One Step Simplification" (formula "12"))
                                           (builtin "One Step Simplification" (formula "3"))
                                           (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")))
                                          (rule "andLeft" (formula "3"))
                                          (rule "allRight" (formula "19") (inst "sk=nv_0"))
                                          (rule "impRight" (formula "19"))
                                          (rule "andLeft" (formula "1"))
                                          (rule "impRight" (formula "21"))
                                          (rule "eqSymm" (formula "20"))
                                          (rule "eqSymm" (formula "8"))
                                          (rule "eqSymm" (formula "21"))
                                          (rule "eqSymm" (formula "19"))
                                          (rule "eqSymm" (formula "18"))
                                          (rule "eqSymm" (formula "17") (term "1,1,0,1,0,1,0"))
                                          (rule "eqSymm" (formula "17") (term "1,0,0,1,0"))
                                          (rule "eqSymm" (formula "17") (term "0,1,0,1,0,1,0"))
                                          (rule "eqSymm" (formula "17") (term "1,1,0"))
                                          (rule "eqSymm" (formula "16"))
                                          (rule "polySimp_elimSub" (formula "19") (term "1,0,2,0"))
                                          (rule "mul_literals" (formula "19") (term "1,1,0,2,0"))
                                          (rule "polySimp_elimSub" (formula "17") (term "1,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "17") (term "1,1,0,0,1,1,0"))
                                          (rule "polySimp_addComm0" (formula "22") (term "1,0,1,0"))
                                          (rule "polySimp_addComm0" (formula "1") (term "0"))
                                          (rule "polySimp_addComm0" (formula "17") (term "1,0,2,0,1,1,0"))
                                          (rule "polySimp_addComm0" (formula "19") (term "1,0,2,0"))
                                          (rule "polySimp_addComm0" (formula "17") (term "1,0,0,1,1,0"))
                                          (rule "subsetSingletonLeft" (formula "15"))
                                          (rule "subsetSingletonLeft" (formula "14"))
                                          (rule "castedGetAny" (formula "17") (term "0,0,0,0,0,1,0"))
                                          (rule "castedGetAny" (formula "3") (term "1,0,1"))
                                          (rule "castedGetAny" (formula "8") (term "0"))
                                          (rule "castedGetAny" (formula "18") (term "2,0"))
                                          (rule "castedGetAny" (formula "17") (term "0,1,0,0,1,0"))
                                          (rule "eqSymm" (formula "17") (term "1,0,0,1,0"))
                                          (rule "castedGetAny" (formula "17") (term "0,0,1,0,1,0,1,0"))
                                          (rule "castedGetAny" (formula "17") (term "1,0,1,0,1,0,1,0"))
                                          (rule "castedGetAny" (formula "17") (term "1,1,1,1,0"))
                                          (rule "castedGetAny" (formula "16") (term "0,1,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0,1,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0,1,0,1,0"))
                                          (rule "castedGetAny" (formula "22") (term "1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "7"))
                                          (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "7") (term "0"))
                                          (rule "castedGetAny" (formula "17") (term "2,0,1,1,0"))
                                          (rule "castedGetAny" (formula "19") (term "2,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "3") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                          (rule "castedGetAny" (formula "17") (term "1,0,1,0,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0,1,0,1,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "6"))
                                          (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0,1,0"))
                                          (rule "applyEq" (formula "8") (term "1") (ifseqformula "4"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "17") (term "0,1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0,1,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0,1,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0,1,0,1,0"))
                                          (rule "mul_literals" (formula "17") (term "0,1,1,0,0,1,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0,1,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0,1,0,1,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "7"))
                                          (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                          (rule "polySimp_elimOne" (formula "7") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "3") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "3") (term "0,0"))
                                          (rule "polySimp_elimOne" (formula "3") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0,1,0"))
                                          (rule "mul_literals" (formula "16") (term "0,1,1,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0,1,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                          (rule "polySimp_elimOne" (formula "1") (term "0"))
                                          (rule "inEqSimp_subsumption1" (formula "3") (term "0") (ifseqformula "1"))
                                          (rule "inEqSimp_homoInEq0" (formula "3") (term "0,0"))
                                          (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "3") (term "0,1,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "3") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "3") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "3") (term "0,0,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0,0"))
                                          (rule "add_literals" (formula "3") (term "1,1,0,0,0"))
                                          (rule "times_zero_1" (formula "3") (term "1,0,0,0"))
                                          (rule "add_zero_right" (formula "3") (term "0,0,0"))
                                          (rule "qeq_literals" (formula "3") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "3"))
                                          (rule "elementOfUnionEQ" (formula "14") (ifseqformula "16"))
                                           (builtin "One Step Simplification" (formula "14"))
                                          (rule "true_left" (formula "14"))
                                          (rule "elementOfUnionEQ" (formula "14") (ifseqformula "15"))
                                           (builtin "One Step Simplification" (formula "14"))
                                          (rule "true_left" (formula "14"))
                                          (rule "nnf_imp2or" (formula "15") (term "0"))
                                          (rule "nnf_notAnd" (formula "15") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "15") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "15") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "15") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "15") (term "0,0,0"))
                                          (rule "times_zero_1" (formula "15") (term "1,0,0,0,0,0"))
                                          (rule "add_zero_right" (formula "15") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
                                          (rule "mul_literals" (formula "15") (term "1,0,0,0"))
                                          (rule "nnf_imp2or" (formula "15") (term "0,1,0,1,0"))
                                          (rule "nnf_notAnd" (formula "15") (term "0,0,1,0,1,0"))
                                          (rule "inEqSimp_notGeq" (formula "15") (term "0,0,0,1,0,1,0"))
                                          (rule "times_zero_1" (formula "15") (term "1,0,0,0,0,0,1,0,1,0"))
                                          (rule "add_zero_right" (formula "15") (term "0,0,0,0,0,1,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0,1,0,1,0"))
                                          (rule "mul_literals" (formula "15") (term "1,0,0,0,1,0,1,0"))
                                          (rule "inEqSimp_notLeq" (formula "15") (term "1,0,0,1,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0,1,0,1,0"))
                                          (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,0,1,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0,1,0,1,0"))
                                          (rule "add_literals" (formula "15") (term "0,0,0,1,0,0,1,0,1,0"))
                                          (rule "add_zero_left" (formula "15") (term "0,0,1,0,0,1,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "1,0,0,1,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,1,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,1,0,1,0"))
                                          (rule "nnf_imp2or" (formula "15") (term "1,0,1,0,1,0"))
                                          (rule "commute_or" (formula "5") (term "1"))
                                          (rule "Class_invariant_axiom_for_LinkedList" (formula "24") (inst "i=i") (inst "j=j") (inst "i_0=i_0") (ifseqformula "23"))
                                           (builtin "One Step Simplification" (formula "24"))
                                          (rule "eqSymm" (formula "24") (term "1,0,0,1,0,1,0,0,0"))
                                          (rule "eqSymm" (formula "24") (term "1,1,0,1,0,1,0,1,0,0,0"))
                                          (rule "eqSymm" (formula "24") (term "0,1"))
                                          (rule "eqSymm" (formula "24") (term "1,1,0,1,0,0,0"))
                                          (rule "eqSymm" (formula "24") (term "1,0"))
                                          (rule "eqSymm" (formula "24") (term "1,1"))
                                          (rule "eqSymm" (formula "24") (term "1,0,0"))
                                          (rule "eqSymm" (formula "24") (term "1,0,0,0,0"))
                                          (rule "eqSymm" (formula "24") (term "0,1,0,1,0,1,0,1,0,0,0"))
                                          (rule "polySimp_elimSub" (formula "24") (term "1,0,0,1,1,0,1,0,0,0"))
                                          (rule "mul_literals" (formula "24") (term "1,1,0,0,1,1,0,1,0,0,0"))
                                          (rule "polySimp_elimSub" (formula "24") (term "1,0,2,0,1,0"))
                                          (rule "mul_literals" (formula "24") (term "1,1,0,2,0,1,0"))
                                          (rule "polySimp_addComm0" (formula "24") (term "1,0,2,0,1,1,0,1,0,0,0"))
                                          (rule "polySimp_addComm0" (formula "24") (term "1,0,0,1,1,0,1,0,0,0"))
                                          (rule "polySimp_addComm0" (formula "24") (term "1,0,2,0,1,0"))
                                          (rule "dismissNonSelectedField" (formula "24") (term "1,1,0,0,1,0,1,0,1,0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "24") (term "1,1,0,0,1,0,0,0"))
                                          (rule "subsetSingletonLeft" (formula "24") (term "1,0,0,0,0,0"))
                                          (rule "castedGetAny" (formula "24") (term "0,0,0,0,0,1,0,1,0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "24") (term "1,0,0,0,0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "24") (term "0,0,1,1,1,0,0,1,0,1,0,0,0"))
                                          (rule "castedGetAny" (formula "24") (term "0,1,0,0,1,0,1,0,0,0"))
                                          (rule "eqSymm" (formula "24") (term "1,0,0,1,0,1,0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "24") (term "0,0,0,1"))
                                          (rule "eqSymm" (formula "24") (term "0,1"))
                                          (rule "dismissNonSelectedField" (formula "24") (term "0,0,2,0,1,1,0,1,0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "24") (term "0,0,1,1,1,1,0,1,0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "24") (term "0,0,0,1,0"))
                                          (rule "dismissNonSelectedField" (formula "24") (term "0,0,2,0,1,0"))
                                          (rule "dismissNonSelectedField" (formula "24") (term "1,1,0"))
                                          (rule "dismissNonSelectedField" (formula "24") (term "0,0,1,1"))
                                          (rule "eqSymm" (formula "24") (term "1,1"))
                                          (rule "dismissNonSelectedField" (formula "24") (term "0,0,2,0,1,0,0"))
                                          (rule "dismissNonSelectedField" (formula "24") (term "0,0,0,1,0,0"))
                                          (rule "dismissNonSelectedField" (formula "24") (term "1,1,0,0"))
                                          (rule "dismissNonSelectedField" (formula "24") (term "1,1,0,0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "24") (term "0,0,0,1,0,1,0,1,0,0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "24") (term "1,1,0,0,1,0,1,0,0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "24") (term "0,0,1,0,1,0,1,0,1,0,1,0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "24") (term "0,0,0,0,1,0,1,0,1,0,1,0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "24") (term "1,1,0,0,1,1,0,1,0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "24") (term "1,1,0,2,0,1,0"))
                                          (rule "dismissNonSelectedField" (formula "24") (term "1,1,0,0,1,0,1,0,1,0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "24") (term "1,1,0,0,1,0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "24") (term "2,1,0,0,0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "24") (term "0,0,0,0,0,0,1,0,1,0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "24") (term "1,0,0,0,0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "24") (term "0,1,1,0,0,1,0,1,0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "24") (term "0,0,1,0,1,0,0,1,0,1,0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "24") (term "0,0,1"))
                                          (rule "eqSymm" (formula "24") (term "0,1"))
                                          (rule "dismissNonSelectedField" (formula "24") (term "0,0,2,0,1,1,0,1,0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "24") (term "0,0,1,1,1,1,0,1,0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "24") (term "0,0,0,1,0"))
                                          (rule "dismissNonSelectedField" (formula "24") (term "0,0,2,0,1,0"))
                                          (rule "dismissNonSelectedField" (formula "24") (term "1,1,0"))
                                          (rule "dismissNonSelectedField" (formula "24") (term "0,1,1"))
                                          (rule "eqSymm" (formula "24") (term "1,1"))
                                          (rule "castedGetAny" (formula "24") (term "2,0,1,0,0"))
                                          (rule "dismissNonSelectedField" (formula "24") (term "0,0,0,1,0,0"))
                                          (rule "dismissNonSelectedField" (formula "24") (term "1,1,0,0"))
                                          (rule "dismissNonSelectedField" (formula "24") (term "1,1,0,0,0,0"))
                                          (rule "castedGetAny" (formula "24") (term "0,1,0,1,0,1,0,0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "24") (term "1,1,0,0,1,0,1,0,0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "24") (term "0,0,1,0,1,0,1,0,1,0,1,0,0,0"))
                                          (rule "castedGetAny" (formula "24") (term "0,0,1,0,1,0,1,0,1,0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "24") (term "1,1,0,0,1,1,0,1,0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "24") (term "1,1,0,2,0,1,0"))
                                          (rule "dismissNonSelectedField" (formula "24") (term "1,1,0,0,1,0,1,0,1,0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "24") (term "1,1,0,0,1,0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "24") (term "2,1,0,0,0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "24") (term "0,0,0,0,0,0,1,0,1,0,0,0"))
                                          (rule "subsetSingletonLeft" (formula "24") (term "0,0,0,0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "24") (term "0,1,1,0,0,1,0,1,0,0,0"))
                                          (rule "castedGetAny" (formula "24") (term "1,0,1,0,0,1,0,1,0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "24") (term "0,0,0,1"))
                                          (rule "eqSymm" (formula "24") (term "0,1"))
                                          (rule "castedGetAny" (formula "24") (term "2,0,1,1,0,1,0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "24") (term "1,1,1,0,1,0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "24") (term "0,0,0,1,0"))
                                          (rule "dismissNonSelectedField" (formula "24") (term "0,0,2,0,1,0"))
                                          (rule "dismissNonSelectedField" (formula "24") (term "1,1,0"))
                                          (rule "dismissNonSelectedField" (formula "24") (term "0,0,1,1"))
                                          (rule "eqSymm" (formula "24") (term "1,1"))
                                          (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0,1,0,1,0,1,0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "24") (term "0,2,0,1,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0,1,0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "24") (term "0,0,0,1,0,0"))
                                          (rule "dismissNonSelectedField" (formula "24") (term "1,1,0,0"))
                                          (rule "dismissNonSelectedField" (formula "24") (term "1,1,0,0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "24") (term "0,0,1,0,1,0,1,0,0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "24") (term "1,1,0,0,1,0,1,0,0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "24") (term "0,0,1,0,1,0,1,0,1,0,1,0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "24") (term "0,0,0,1,0,1,0,1,0,1,0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0,1,0,1,0,0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "24") (term "1,1,0,0,1,1,0,1,0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "24") (term "1,1,0,2,0,1,0"))
                                          (rule "dismissNonSelectedField" (formula "24") (term "2,1,0,0,0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "24") (term "0,0,0,0,0,0,1,0,1,0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "24") (term "2,0,0,0,0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "24") (term "0,1,1,0,0,1,0,1,0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "24") (term "0,1,0,1,0,0,1,0,1,0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "24") (term "0,0,1"))
                                          (rule "eqSymm" (formula "24") (term "0,1"))
                                          (rule "dismissNonSelectedField" (formula "24") (term "0,2,0,1,1,0,1,0,0,0"))
                                          (rule "castedGetAny" (formula "24") (term "1,1,1,1,0,1,0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "24") (term "0,1,1"))
                                          (rule "eqSymm" (formula "24") (term "1,1"))
                                          (rule "dismissNonSelectedField" (formula "24") (term "0,2,0,1,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0,1,0,1,0,1,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0,1,0,1,0,1,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0,1,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0,1,0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "24") (term "0,0,1,0,1,0,1,0,0,0,0"))
                                          (rule "castedGetAny" (formula "24") (term "1,0,1,0,1,0,1,0,1,0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "24") (term "0,0,0,1,0,1,0,1,0,1,0,0,0"))
                                          (rule "castedGetAny" (formula "24") (term "2,0,1,0"))
                                          (rule "dismissNonSelectedField" (formula "24") (term "1,0,1"))
                                          (rule "dismissNonSelectedField" (formula "24") (term "0,0,0,1"))
                                          (rule "dismissNonSelectedField" (formula "24") (term "0,1,1,1,1,0,1,0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "24") (term "0,0,1,1"))
                                          (rule "eqSymm" (formula "24") (term "1,1"))
                                          (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0,1,0,1,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0,1,0,1,0,0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "24") (term "1,1,1,0,1,0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "24") (term "0,1,1"))
                                          (rule "eqSymm" (formula "24") (term "1,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0,1,0,1,0,1,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0,1,0,1,0,1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0,1,0,1,0,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0,1,0,1,0,1,0,0,0"))
                                          (rule "mul_literals" (formula "24") (term "0,1,1,0,0,1,0,1,0,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0,1,0,1,0,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0,1,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0,1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0,1,0,0,0"))
                                          (rule "mul_literals" (formula "24") (term "0,1,1,0,0,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0,1,0,1,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0,1,0,1,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0,1,0,1,0,0,0,0"))
                                          (rule "mul_literals" (formula "24") (term "0,1,1,0,0,1,0,1,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0,1,0,1,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0,1,0,1,0,0,0,0"))
                                          (rule "pullOutSelect" (formula "24") (term "0,0,0,1,0") (inst "selectSK=LinkedList_size_0"))
                                          (rule "applyEq" (formula "25") (term "1,1,1,0,0,1,0,0,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "25") (term "0,0,0,1,0,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "25") (term "1,1,1,0,0,1,0,1,0,0,0,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "25") (term "1,1,2,0,1,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "25") (term "1,1,1,0,0,1,0,1,0,1,0,0,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "25") (term "1,0,1") (ifseqformula "1"))
                                          (rule "applyEq" (formula "25") (term "1,1,0,0,1,1,0,1,0,0,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "25") (term "1,1,1") (ifseqformula "1"))
                                          (rule "simplifySelectOfCreate" (formula "1"))
                                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "23")))
                                          (rule "applyEqReverse" (formula "25") (term "0,0,0,1,0") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "25") (term "1,1,1,0,0,1,0,0,0") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "25") (term "0,0,0,1,0,0") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "25") (term "1,1,1,0,0,1,0,1,0,0,0,0") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "25") (term "1,1,2,0,1,0") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "25") (term "1,1,1,0,0,1,0,1,0,1,0,0,0") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "25") (term "1,0,1") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "25") (term "1,1,0,0,1,1,0,1,0,0,0") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "25") (term "1,1,1") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "pullOutSelect" (formula "24") (term "1,1,0") (inst "selectSK=LinkedList_last_0"))
                                          (rule "simplifySelectOfCreate" (formula "1"))
                                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "23")))
                                          (rule "applyEqReverse" (formula "25") (term "1,1,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "pullOutSelect" (formula "24") (term "1,1,0,0") (inst "selectSK=LinkedList_first_0"))
                                          (rule "simplifySelectOfCreate" (formula "1"))
                                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "23")))
                                          (rule "applyEqReverse" (formula "25") (term "1,1,0,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "pullOutSelect" (formula "24") (term "1,1,0,0,0,0") (inst "selectSK=List_footprint_0"))
                                          (rule "applyEq" (formula "25") (term "2,0,0,0,0,0,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "25") (term "2,1,0,0,0,0,0") (ifseqformula "1"))
                                          (rule "simplifySelectOfCreate" (formula "1"))
                                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "23")))
                                          (rule "applyEqReverse" (formula "25") (term "1,1,0,0,0,0") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "25") (term "2,0,0,0,0,0,0") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "25") (term "2,1,0,0,0,0,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "elementOfUnionEQ" (formula "24") (term "0,0,0,0,0,0") (ifseqformula "14"))
                                           (builtin "One Step Simplification" (formula "24"))
                                          (rule "elementOfUnionEQ" (formula "24") (term "0,0,0,0,0") (ifseqformula "14"))
                                           (builtin "One Step Simplification" (formula "24"))
                                          (rule "pullOutSelect" (formula "24") (term "0,0,1,0,1,0,0,0,0,0") (inst "selectSK=LinkedList_nodeseq_0"))
                                          (rule "applyEq" (formula "25") (term "0,1,1,1,1,0,1,0,0,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "25") (term "0,2,0,1,1,0,1,0,0,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "25") (term "0,2,0,1,0,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "25") (term "0,1,0,1,0,0,1,0,1,0,0,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "25") (term "0,1,0,1,0,1,0,1,0,1,0,0,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "25") (term "0,2,0,1,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "25") (term "0,0,0,1,0,1,0,1,0,1,0,0,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "25") (term "0,0,0,0,0,0,1,0,1,0,0,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "25") (term "0,0,1,1") (ifseqformula "1"))
                                          (rule "simplifySelectOfCreate" (formula "1"))
                                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "23")))
                                          (rule "applyEqReverse" (formula "25") (term "0,0,1,0,1,0,0,0,0,0") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "25") (term "0,1,1,1,1,0,1,0,0,0") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "25") (term "0,2,0,1,1,0,1,0,0,0") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "25") (term "0,2,0,1,0,0") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "25") (term "0,1,0,1,0,0,1,0,1,0,0,0") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "25") (term "0,1,0,1,0,1,0,1,0,1,0,0,0") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "25") (term "0,2,0,1,0") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "25") (term "0,0,0,1,0,1,0,1,0,1,0,0,0") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "25") (term "0,0,0,0,0,0,1,0,1,0,0,0") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "25") (term "0,0,1,1") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "replace_known_left" (formula "24") (term "1,1") (ifseqformula "19"))
                                           (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "14")) (ifInst ""  (formula "16")) (ifInst ""  (formula "17")))
                                          (rule "pullOutSelect" (formula "24") (term "0,1,1,0,0,1,0,0") (inst "selectSK=List_seq_0"))
                                          (rule "applyEq" (formula "25") (term "0,0,1") (ifseqformula "1"))
                                          (rule "simplifySelectOfCreate" (formula "1"))
                                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "23")))
                                          (rule "applyEqReverse" (formula "25") (term "0,1,1,0,0,1,0,0") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "25") (term "0,0,1") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "replace_known_left" (formula "24") (term "1") (ifseqformula "18"))
                                           (builtin "One Step Simplification" (formula "24"))
                                          (rule "allRight" (formula "24") (inst "sk=i_0"))
                                          (rule "impRight" (formula "24"))
                                          (rule "andLeft" (formula "1"))
                                          (rule "polySimp_homoEq" (formula "26") (term "0,0,1"))
                                          (rule "polySimp_addComm1" (formula "26") (term "0,0,0,1"))
                                          (rule "inEqSimp_homoInEq0" (formula "2"))
                                          (rule "polySimp_addComm1" (formula "2") (term "0"))
                                          (rule "polySimp_sepPosMonomial" (formula "26") (term "0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0,1"))
                                          (rule "mul_literals" (formula "26") (term "0,1,0,0,1"))
                                          (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0,1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                          (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                          (rule "polySimp_rightDist" (formula "2") (term "1"))
                                          (rule "mul_literals" (formula "2") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                          (rule "pullOutSelect" (formula "26") (term "1,1") (inst "selectSK=Node_next_0"))
                                          (rule "simplifySelectOfStore" (formula "1"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "castDel" (formula "1") (term "1,0"))
                                          (rule "eqSymm" (formula "1") (term "0,0"))
                                          (rule "pullOutSelect" (formula "27") (term "0,1,0,0") (inst "selectSK=Node_data_0"))
                                          (rule "simplifySelectOfStore" (formula "1"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "castDel" (formula "1") (term "1,0"))
                                          (rule "eqSymm" (formula "28") (term "1,0,0"))
                                          (rule "eqSymm" (formula "1") (term "0,0"))
                                          (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                          (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                          (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=Node_next_1"))
                                          (rule "simplifySelectOfCreate" (formula "2"))
                                           (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "27")))
                                          (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=Node_data_1"))
                                          (rule "simplifySelectOfCreate" (formula "1"))
                                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "27")))
                                          (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "nnf_imp2or" (formula "28") (term "0,1,0"))
                                          (rule "shift_paren_or" (formula "9"))
                                          (rule "nnf_notAnd" (formula "28") (term "0,0,1,0"))
                                          (rule "inEqSimp_notLeq" (formula "28") (term "1,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0,1,0"))
                                          (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0,1,0"))
                                          (rule "add_literals" (formula "28") (term "0,0,0,1,0,0,1,0"))
                                          (rule "add_zero_left" (formula "28") (term "0,0,1,0,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "1,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0,1,0"))
                                          (rule "inEqSimp_notGeq" (formula "28") (term "0,0,0,1,0"))
                                          (rule "mul_literals" (formula "28") (term "1,0,0,0,0,0,1,0"))
                                          (rule "add_zero_right" (formula "28") (term "0,0,0,0,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,0,1,0"))
                                          (rule "mul_literals" (formula "28") (term "1,0,0,0,1,0"))
                                          (rule "nnf_imp2or" (formula "28") (term "1,0,1,0"))
                                          (rule "shift_paren_or" (formula "19") (term "0,1,0,1,0"))
                                          (rule "ifthenelse_to_or_left" (formula "19") (term "1,1,0"))
                                          (rule "eqSymm" (formula "19") (term "1,1,1,1,0"))
                                          (rule "eqSymm" (formula "19") (term "1,0,1,1,0"))
                                          (rule "ifthenelse_split" (formula "20") (term "0"))
                                          (branch "self.size = 0 TRUE"
                                             (rule "eqSymm" (formula "21"))
                                             (rule "replace_known_left" (formula "22") (term "0,0") (ifseqformula "20"))
                                              (builtin "One Step Simplification" (formula "22"))
                                             (rule "eqSymm" (formula "22"))
                                             (rule "applyEq" (formula "11") (term "0") (ifseqformula "20"))
                                             (rule "inEqSimp_homoInEq1" (formula "11"))
                                             (rule "mul_literals" (formula "11") (term "1,0"))
                                             (rule "add_zero_right" (formula "11") (term "0"))
                                             (rule "applyEq" (formula "5") (term "0") (ifseqformula "20"))
                                             (rule "inEqSimp_homoInEq1" (formula "5"))
                                             (rule "mul_literals" (formula "5") (term "1,0"))
                                             (rule "add_zero_right" (formula "5") (term "0"))
                                             (rule "applyEq" (formula "4") (term "0") (ifseqformula "20"))
                                             (rule "inEqSimp_homoInEq1" (formula "4"))
                                             (rule "mul_literals" (formula "4") (term "1,0"))
                                             (rule "add_zero_right" (formula "4") (term "0"))
                                             (rule "applyEq" (formula "19") (term "1,1,0,0,0,1,0,1,0") (ifseqformula "20"))
                                             (rule "applyEq" (formula "29") (term "1,1,0,0,1,0") (ifseqformula "20"))
                                             (rule "applyEq" (formula "29") (term "0,0,0,1") (ifseqformula "20"))
                                             (rule "polySimp_homoEq" (formula "29") (term "0,0,1"))
                                             (rule "mul_literals" (formula "29") (term "1,0,0,0,1"))
                                             (rule "add_zero_right" (formula "29") (term "0,0,0,1"))
                                             (rule "applyEq" (formula "19") (term "1,1,0,0") (ifseqformula "20"))
                                             (rule "applyEq" (formula "18") (term "1,1,1,0,0,1,0") (ifseqformula "20"))
                                             (rule "add_literals" (formula "18") (term "1,1,0,0,1,0"))
                                             (rule "applyEq" (formula "23") (term "1") (ifseqformula "20"))
                                             (rule "applyEq" (formula "24") (term "1") (ifseqformula "20"))
                                             (rule "applyEq" (formula "19") (term "1,1,0,0,0,1,1,0") (ifseqformula "20"))
                                             (rule "add_literals" (formula "19") (term "1,0,0,0,1,1,0"))
                                             (rule "applyEq" (formula "19") (term "1,1,0,1,1,1,0") (ifseqformula "20"))
                                             (rule "add_literals" (formula "19") (term "1,0,1,1,1,0"))
                                             (rule "polySimp_sepPosMonomial" (formula "29") (term "0,0,1"))
                                             (rule "mul_literals" (formula "29") (term "1,0,0,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "11"))
                                             (rule "mul_literals" (formula "11") (term "1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                                             (rule "mul_literals" (formula "5") (term "1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                             (rule "mul_literals" (formula "4") (term "1"))
                                             (rule "inEqSimp_contradEq7" (formula "29") (term "0,0,1") (ifseqformula "3"))
                                             (rule "mul_literals" (formula "29") (term "1,0,0,0,0,1"))
                                             (rule "add_zero_left" (formula "29") (term "0,0,0,0,1"))
                                             (rule "leq_literals" (formula "29") (term "0,0,0,1"))
                                              (builtin "One Step Simplification" (formula "29"))
                                             (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "4"))
                                             (rule "qeq_literals" (formula "3") (term "0"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "closeFalse" (formula "3"))
                                          )
                                          (branch "self.size = 0 FALSE"
                                             (rule "replace_known_right" (formula "21") (term "0,0") (ifseqformula "24"))
                                              (builtin "One Step Simplification" (formula "21"))
                                             (rule "lenNonNegative" (formula "22") (term "0"))
                                             (rule "inEqSimp_commuteLeq" (formula "22"))
                                             (rule "applyEq" (formula "22") (term "0") (ifseqformula "23"))
                                             (rule "inEqSimp_strengthen1" (formula "22") (ifseqformula "25"))
                                             (rule "add_literals" (formula "22") (term "1"))
                                             (rule "inEqSimp_contradEq7" (formula "25") (ifseqformula "22"))
                                             (rule "mul_literals" (formula "25") (term "1,0,0"))
                                             (rule "add_literals" (formula "25") (term "0,0"))
                                             (rule "leq_literals" (formula "25") (term "0"))
                                              (builtin "One Step Simplification" (formula "25"))
                                             (rule "false_right" (formula "25"))
                                             (rule "lenNonNegative" (formula "24") (term "0"))
                                             (rule "inEqSimp_commuteLeq" (formula "24"))
                                             (rule "applyEq" (formula "24") (term "0") (ifseqformula "25"))
                                             (rule "inEqSimp_subsumption1" (formula "24") (ifseqformula "22"))
                                             (rule "leq_literals" (formula "24") (term "0"))
                                              (builtin "One Step Simplification" (formula "24"))
                                             (rule "true_left" (formula "24"))
                                             (rule "seqGetAlphaCast" (formula "12") (term "0"))
                                             (rule "castedGetAny" (formula "12") (term "0"))
                                              (builtin "One Step Simplification" (formula "12"))
                                             (rule "true_left" (formula "12"))
                                             (rule "seqGetAlphaCast" (formula "25") (term "1,0"))
                                             (rule "castedGetAny" (formula "1") (term "0"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "true_left" (formula "1"))
                                             (rule "seqGetAlphaCast" (formula "7") (term "1,0"))
                                             (rule "castedGetAny" (formula "7") (term "0"))
                                              (builtin "One Step Simplification" (formula "7"))
                                             (rule "true_left" (formula "7"))
                                             (rule "commute_or" (formula "19") (term "1,1,1,0"))
                                             (rule "commute_or" (formula "19") (term "0,1,1,0"))
                                             (rule "commute_or_2" (formula "19") (term "0,0,1,0,1,0"))
                                             (rule "commute_or" (formula "19") (term "0,0,0,1,0,1,0"))
                                             (rule "ifthenelse_split" (formula "29") (term "0,1"))
                                             (branch "self.size = 1 + i_0 TRUE"
                                                (rule "eqSymm" (formula "30") (term "1"))
                                                (rule "applyEq" (formula "30") (term "1,1,0,0,1,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "20") (term "1,1,0,0,1,0,1,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "12") (term "0") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq1" (formula "12"))
                                                (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                                                (rule "mul_literals" (formula "12") (term "0,1,0"))
                                                (rule "polySimp_addComm1" (formula "12") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "12") (term "0,0"))
                                                (rule "add_literals" (formula "12") (term "0,0,0"))
                                                (rule "add_zero_left" (formula "12") (term "0,0"))
                                                (rule "applyEq" (formula "23") (term "0") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq1" (formula "23"))
                                                (rule "polySimp_mulComm0" (formula "23") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "23") (term "1,0"))
                                                (rule "mul_literals" (formula "23") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "23") (term "0"))
                                                (rule "add_literals" (formula "23") (term "0,0"))
                                                (rule "add_zero_left" (formula "23") (term "0"))
                                                (rule "applyEq" (formula "22") (term "1,1,0") (ifseqformula "1"))
                                                (rule "polySimp_addAssoc" (formula "22") (term "1,0"))
                                                (rule "add_literals" (formula "22") (term "0,1,0"))
                                                (rule "add_zero_left" (formula "22") (term "1,0"))
                                                (rule "applyEq" (formula "6") (term "0") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq1" (formula "6"))
                                                (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                                                (rule "mul_literals" (formula "6") (term "0,1,0"))
                                                (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                                (rule "add_literals" (formula "6") (term "0,0,0"))
                                                (rule "applyEq" (formula "5") (term "0") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq1" (formula "5"))
                                                (rule "polySimp_pullOutFactor1" (formula "5") (term "0"))
                                                (rule "add_literals" (formula "5") (term "1,0"))
                                                (rule "times_zero_1" (formula "5") (term "0"))
                                                (rule "leq_literals" (formula "5"))
                                                (rule "true_left" (formula "5"))
                                                (rule "applyEq" (formula "19") (term "1,1,0,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "18") (term "1,1,1,0,0,1,0") (ifseqformula "1"))
                                                (rule "polySimp_addAssoc" (formula "18") (term "1,1,0,0,1,0"))
                                                (rule "add_literals" (formula "18") (term "0,1,1,0,0,1,0"))
                                                (rule "add_zero_left" (formula "18") (term "1,1,0,0,1,0"))
                                                (rule "applyEq" (formula "29") (term "0,0,0,0,0") (ifseqformula "21"))
                                                (rule "applyEq" (formula "3") (term "1,2,0") (ifseqformula "21"))
                                                (rule "applyEq" (formula "29") (term "1,0,0,1,0,1,0") (ifseqformula "21"))
                                                (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "21"))
                                                (rule "applyEq" (formula "2") (term "0,0,0") (ifseqformula "21"))
                                                (rule "applyEq" (formula "3") (term "0,0,0") (ifseqformula "21"))
                                                (rule "applyEq" (formula "23") (term "1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "19") (term "1,1,0,1,0,1,1,0") (ifseqformula "1"))
                                                (rule "polySimp_addAssoc" (formula "19") (term "1,0,1,0,1,1,0"))
                                                (rule "add_literals" (formula "19") (term "0,1,0,1,0,1,1,0"))
                                                (rule "add_zero_left" (formula "19") (term "1,0,1,0,1,1,0"))
                                                (rule "applyEq" (formula "24") (term "1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "19") (term "1,1,1,1,1,1,0") (ifseqformula "1"))
                                                (rule "polySimp_addAssoc" (formula "19") (term "1,1,1,1,1,0"))
                                                (rule "add_literals" (formula "19") (term "0,1,1,1,1,1,0"))
                                                (rule "add_zero_left" (formula "19") (term "1,1,1,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "11"))
                                                (rule "polySimp_mulLiterals" (formula "11") (term "1"))
                                                (rule "polySimp_elimOne" (formula "11") (term "1"))
                                                (rule "inEqSimp_invertInEq0" (formula "22"))
                                                (rule "mul_literals" (formula "22") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                                                (rule "polySimp_elimOne" (formula "22") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                                                (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                                (rule "polySimp_rightDist" (formula "5") (term "1"))
                                                (rule "mul_literals" (formula "5") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                                (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "5"))
                                                (rule "times_zero_1" (formula "6") (term "0,0"))
                                                (rule "add_zero_left" (formula "6") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                                (rule "mul_literals" (formula "6") (term "1"))
                                                (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "6"))
                                                (rule "leq_literals" (formula "4") (term "0"))
                                                 (builtin "One Step Simplification" (formula "4"))
                                                (rule "true_left" (formula "4"))
                                                (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "11"))
                                                (rule "mul_literals" (formula "10") (term "0,0"))
                                                (rule "add_zero_left" (formula "10") (term "0"))
                                                (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "5"))
                                                (rule "leq_literals" (formula "10") (term "0"))
                                                 (builtin "One Step Simplification" (formula "10"))
                                                (rule "true_left" (formula "10"))
                                                (rule "all_pull_out1" (formula "19") (term "0,1,0"))
                                                (rule "seqGetAlphaCast" (formula "28") (term "0,1,0,0"))
                                                (rule "castedGetAny" (formula "1") (term "0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "true_left" (formula "1"))
                                                (rule "cut_direct" (formula "9") (term "1,0"))
                                                (branch "CUT: fv_0 = Node::$next TRUE"
                                                    (builtin "One Step Simplification" (formula "10"))
                                                   (rule "true_left" (formula "10"))
                                                   (rule "seqGetAlphaCast" (formula "20") (term "0"))
                                                   (rule "castedGetAny" (formula "20") (term "0"))
                                                    (builtin "One Step Simplification" (formula "20"))
                                                   (rule "true_left" (formula "20"))
                                                   (rule "ifthenelse_split" (formula "3") (term "0"))
                                                   (branch "self.last = n_2 TRUE"
                                                      (rule "referencedObjectIsCreatedRightEQ" (formula "26") (ifseqformula "3") (ifseqformula "27"))
                                                      (rule "close" (formula "26") (ifseqformula "15"))
                                                   )
                                                   (branch "self.last = n_2 FALSE"
                                                      (rule "applyEqReverse" (formula "29") (term "0,1") (ifseqformula "3"))
                                                      (rule "hideAuxiliaryEq" (formula "3"))
                                                      (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "23"))
                                                       (builtin "One Step Simplification" (formula "2"))
                                                      (rule "applyEqReverse" (formula "28") (term "1,1,0,0") (ifseqformula "2"))
                                                      (rule "hideAuxiliaryEq" (formula "2"))
                                                      (rule "all_pull_out0" (formula "17") (term "1,0"))
                                                      (rule "shift_paren_and" (formula "17") (term "0,1,0"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "18") (term "1") (ifseqformula "12"))
                                                      (rule "all_pull_out3" (formula "17") (term "0"))
                                                      (rule "cnf_rightDist" (formula "17") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "17") (term "0"))
                                                       (builtin "One Step Simplification" (formula "17"))
                                                      (rule "distr_forallAnd" (formula "17"))
                                                      (rule "andLeft" (formula "17"))
                                                      (rule "shift_paren_or" (formula "18") (term "0"))
                                                      (rule "commute_or_2" (formula "18") (term "0,0"))
                                                      (rule "inEqSimp_or_weaken3" (formula "18") (term "0"))
                                                       (builtin "One Step Simplification" (formula "18"))
                                                      (rule "cnf_rightDist" (formula "17") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "17") (term "0"))
                                                       (builtin "One Step Simplification" (formula "17"))
                                                      (rule "distr_forallAnd" (formula "17"))
                                                      (rule "andLeft" (formula "17"))
                                                      (rule "commute_or_2" (formula "18") (term "0"))
                                                       (builtin "One Step Simplification" (formula "18"))
                                                      (rule "inEqSimp_homoInEq1" (formula "18") (term "1,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,1,1"))
                                                      (rule "add_literals" (formula "18") (term "1,1,0,1,1"))
                                                      (rule "times_zero_1" (formula "18") (term "1,0,1,1"))
                                                      (rule "add_literals" (formula "18") (term "0,1,1"))
                                                      (rule "leq_literals" (formula "18") (term "1,1"))
                                                       (builtin "One Step Simplification" (formula "18"))
                                                      (rule "applyEq" (formula "18") (term "1,0,0") (ifseqformula "22"))
                                                      (rule "inEqSimp_contradInEq1" (formula "18") (term "1") (ifseqformula "3"))
                                                      (rule "qeq_literals" (formula "18") (term "0,1"))
                                                       (builtin "One Step Simplification" (formula "18"))
                                                      (rule "replace_known_left" (formula "30") (term "1") (ifseqformula "18"))
                                                       (builtin "One Step Simplification" (formula "30"))
                                                      (rule "cnf_rightDist" (formula "17") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "17") (term "0"))
                                                       (builtin "One Step Simplification" (formula "17"))
                                                      (rule "distr_forallAnd" (formula "17"))
                                                      (rule "andLeft" (formula "17"))
                                                      (rule "commute_or_2" (formula "18") (term "0,0"))
                                                      (rule "commute_or_2" (formula "18") (term "0,0,0"))
                                                      (rule "cnf_rightDist" (formula "17") (term "0"))
                                                      (rule "distr_forallAnd" (formula "17"))
                                                      (rule "andLeft" (formula "17"))
                                                      (rule "commute_or" (formula "18") (term "0"))
                                                      (rule "commute_or_2" (formula "17") (term "0"))
                                                      (rule "commute_or" (formula "17") (term "0,0"))
                                                      (rule "commute_or_2" (formula "19") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "19") (term "0,0,0,0,0"))
                                                      (rule "seqGetAlphaCast" (formula "24") (term "0"))
                                                      (rule "castedGetAny" (formula "24") (term "0"))
                                                       (builtin "One Step Simplification" (formula "24"))
                                                      (rule "true_left" (formula "24"))
                                                      (rule "allLeft" (formula "21") (inst "t=nv_0"))
                                                      (rule "inEqSimp_contradInEq0" (formula "21") (term "1") (ifseqformula "2"))
                                                      (rule "inEqSimp_homoInEq1" (formula "21") (term "0,1"))
                                                      (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1"))
                                                      (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1"))
                                                      (rule "mul_literals" (formula "21") (term "0,1,0,0,1"))
                                                      (rule "polySimp_addAssoc" (formula "21") (term "0,0,1"))
                                                      (rule "polySimp_addComm0" (formula "21") (term "0,0,0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,1"))
                                                      (rule "add_literals" (formula "21") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "21") (term "1,0,0,1"))
                                                      (rule "add_literals" (formula "21") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "21") (term "0,1"))
                                                       (builtin "One Step Simplification" (formula "21"))
                                                      (rule "inEqSimp_contradInEq1" (formula "21") (term "1") (ifseqformula "4"))
                                                      (rule "qeq_literals" (formula "21") (term "0,1"))
                                                       (builtin "One Step Simplification" (formula "21"))
                                                      (rule "allLeft" (formula "22") (inst "t=Z(0(#))"))
                                                      (rule "leq_literals" (formula "22") (term "1,0"))
                                                       (builtin "One Step Simplification" (formula "22"))
                                                      (rule "add_literals" (formula "22") (term "1,1,0"))
                                                      (rule "inEqSimp_commuteGeq" (formula "22") (term "1"))
                                                      (rule "applyEq" (formula "22") (term "1,0,0") (ifseqformula "25"))
                                                      (rule "eqSymm" (formula "22") (term "0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "22") (term "1") (ifseqformula "3"))
                                                      (rule "qeq_literals" (formula "22") (term "0,1"))
                                                       (builtin "One Step Simplification" (formula "22"))
                                                      (rule "allLeft" (formula "19") (inst "t=nv_0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "19") (term "1,0,0,0,0,0") (ifseqformula "4"))
                                                      (rule "qeq_literals" (formula "19") (term "0,1,0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "19"))
                                                      (rule "inEqSimp_contradInEq0" (formula "19") (term "1,0,0,0,0") (ifseqformula "2"))
                                                      (rule "inEqSimp_homoInEq1" (formula "19") (term "0,1,0,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0,0,0"))
                                                      (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "19") (term "0,0,0,1,0,0,0,0"))
                                                      (rule "add_literals" (formula "19") (term "0,0,0,0,1,0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,1,0,0,0,0"))
                                                      (rule "add_literals" (formula "19") (term "1,1,0,0,1,0,0,0,0"))
                                                      (rule "times_zero_1" (formula "19") (term "1,0,0,1,0,0,0,0"))
                                                      (rule "add_literals" (formula "19") (term "0,0,1,0,0,0,0"))
                                                      (rule "leq_literals" (formula "19") (term "0,1,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "19"))
                                                      (rule "allLeft" (formula "20") (inst "t=add(Z(1(#)), nv_0)"))
                                                      (rule "inEqSimp_homoInEq0" (formula "20") (term "1,0,0,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "20") (term "1,0,1,0,0,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "20") (term "1,0,1,0,0,0,0,0"))
                                                      (rule "mul_literals" (formula "20") (term "0,1,0,1,0,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "20") (term "0,1,0,0,0,0,0"))
                                                      (rule "add_literals" (formula "20") (term "0,0,1,0,0,0,0,0"))
                                                      (rule "inEqSimp_homoInEq1" (formula "20") (term "1,0,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "20") (term "1,0,1,0,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "20") (term "1,0,1,0,0,0,0"))
                                                      (rule "mul_literals" (formula "20") (term "0,1,0,1,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "20") (term "0,1,0,0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "20") (term "0,0,1,0,0,0,0"))
                                                      (rule "add_literals" (formula "20") (term "0,0,0,1,0,0,0,0"))
                                                      (rule "add_zero_left" (formula "20") (term "0,0,1,0,0,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "20") (term "1,0,0,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "20") (term "0,1,0,0,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "20") (term "0,1,0,0,0,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "20") (term "1,0,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "20") (term "0,1,0,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "20") (term "0,1,0,0,0,0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "20") (term "1,0,0,0,0,0") (ifseqformula "4"))
                                                      (rule "qeq_literals" (formula "20") (term "0,1,0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "20"))
                                                      (rule "inEqSimp_contradInEq0" (formula "20") (term "1,0,0,0,0") (ifseqformula "2"))
                                                      (rule "inEqSimp_homoInEq1" (formula "20") (term "0,1,0,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,0,0,0,0"))
                                                      (rule "mul_literals" (formula "20") (term "0,1,0,0,1,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0,0,0,0"))
                                                      (rule "polySimp_addComm0" (formula "20") (term "0,0,0,1,0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,1,0,0,0,0"))
                                                      (rule "add_literals" (formula "20") (term "1,1,0,0,1,0,0,0,0"))
                                                      (rule "times_zero_1" (formula "20") (term "1,0,0,1,0,0,0,0"))
                                                      (rule "add_literals" (formula "20") (term "0,0,1,0,0,0,0"))
                                                      (rule "leq_literals" (formula "20") (term "0,1,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "20"))
                                                      (rule "allLeft" (formula "17") (inst "t=add(Z(1(#)), nv_0)"))
                                                      (rule "inEqSimp_homoInEq0" (formula "17") (term "1,0"))
                                                      (rule "polySimp_mulComm0" (formula "17") (term "1,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "17") (term "1,0,1,0"))
                                                      (rule "mul_literals" (formula "17") (term "0,1,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "17") (term "0,1,0"))
                                                      (rule "add_literals" (formula "17") (term "0,0,1,0"))
                                                      (rule "inEqSimp_homoInEq1" (formula "17") (term "1"))
                                                      (rule "polySimp_mulComm0" (formula "17") (term "1,0,1"))
                                                      (rule "polySimp_rightDist" (formula "17") (term "1,0,1"))
                                                      (rule "mul_literals" (formula "17") (term "0,1,0,1"))
                                                      (rule "polySimp_addAssoc" (formula "17") (term "0,1"))
                                                      (rule "polySimp_addComm1" (formula "17") (term "0,0,1"))
                                                      (rule "add_literals" (formula "17") (term "0,0,0,1"))
                                                      (rule "add_zero_left" (formula "17") (term "0,0,1"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "17") (term "1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "17") (term "0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "17") (term "0,1,0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "17") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "17") (term "0,1"))
                                                      (rule "polySimp_elimOne" (formula "17") (term "0,1"))
                                                      (rule "inEqSimp_contradInEq0" (formula "17") (term "1") (ifseqformula "2"))
                                                      (rule "inEqSimp_homoInEq1" (formula "17") (term "0,1"))
                                                      (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1"))
                                                      (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1"))
                                                      (rule "mul_literals" (formula "17") (term "0,1,0,0,1"))
                                                      (rule "polySimp_addAssoc" (formula "17") (term "0,0,1"))
                                                      (rule "polySimp_addComm0" (formula "17") (term "0,0,0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,1"))
                                                      (rule "add_literals" (formula "17") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "17") (term "1,0,0,1"))
                                                      (rule "add_literals" (formula "17") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "17") (term "0,1"))
                                                       (builtin "One Step Simplification" (formula "17"))
                                                      (rule "inEqSimp_contradInEq1" (formula "17") (term "1") (ifseqformula "4"))
                                                      (rule "qeq_literals" (formula "17") (term "0,1"))
                                                       (builtin "One Step Simplification" (formula "17"))
                                                      (rule "notLeft" (formula "17"))
                                                      (rule "referencedObjectIsCreatedRightEQ" (formula "33") (ifseqformula "23") (ifseqformula "31"))
                                                      (rule "close" (formula "33") (ifseqformula "12"))
                                                   )
                                                )
                                                (branch "CUT: fv_0 = Node::$next FALSE"
                                                    (builtin "One Step Simplification" (formula "9"))
                                                   (rule "seqGetAlphaCast" (formula "20") (term "0"))
                                                   (rule "castedGetAny" (formula "20") (term "0"))
                                                    (builtin "One Step Simplification" (formula "20"))
                                                   (rule "true_left" (formula "20"))
                                                   (rule "ifthenelse_split" (formula "3") (term "0"))
                                                   (branch "self.last = n_2 TRUE"
                                                      (rule "referencedObjectIsCreatedRightEQ" (formula "27") (ifseqformula "3") (ifseqformula "28"))
                                                      (rule "close" (formula "27") (ifseqformula "15"))
                                                   )
                                                   (branch "self.last = n_2 FALSE"
                                                      (rule "applyEqReverse" (formula "30") (term "0,1") (ifseqformula "3"))
                                                      (rule "hideAuxiliaryEq" (formula "3"))
                                                      (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "23"))
                                                       (builtin "One Step Simplification" (formula "2"))
                                                      (rule "applyEqReverse" (formula "29") (term "1,1,0,0") (ifseqformula "2"))
                                                      (rule "hideAuxiliaryEq" (formula "2"))
                                                      (rule "all_pull_out0" (formula "17") (term "1,0"))
                                                      (rule "shift_paren_and" (formula "17") (term "0,1,0"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "18") (term "1") (ifseqformula "12"))
                                                      (rule "all_pull_out3" (formula "17") (term "0"))
                                                      (rule "cnf_rightDist" (formula "17") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "17") (term "0"))
                                                       (builtin "One Step Simplification" (formula "17"))
                                                      (rule "distr_forallAnd" (formula "17"))
                                                      (rule "andLeft" (formula "17"))
                                                      (rule "shift_paren_or" (formula "18") (term "0"))
                                                      (rule "commute_or_2" (formula "18") (term "0,0"))
                                                      (rule "inEqSimp_or_weaken3" (formula "18") (term "0"))
                                                       (builtin "One Step Simplification" (formula "18"))
                                                      (rule "cnf_rightDist" (formula "17") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "17") (term "0"))
                                                       (builtin "One Step Simplification" (formula "17"))
                                                      (rule "distr_forallAnd" (formula "17"))
                                                      (rule "andLeft" (formula "17"))
                                                      (rule "commute_or_2" (formula "18") (term "0"))
                                                       (builtin "One Step Simplification" (formula "18"))
                                                      (rule "inEqSimp_homoInEq1" (formula "18") (term "1,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,1,1"))
                                                      (rule "add_literals" (formula "18") (term "1,1,0,1,1"))
                                                      (rule "times_zero_1" (formula "18") (term "1,0,1,1"))
                                                      (rule "add_literals" (formula "18") (term "0,1,1"))
                                                      (rule "leq_literals" (formula "18") (term "1,1"))
                                                       (builtin "One Step Simplification" (formula "18"))
                                                      (rule "applyEq" (formula "18") (term "1,0,0") (ifseqformula "22"))
                                                      (rule "inEqSimp_contradInEq1" (formula "18") (term "1") (ifseqformula "3"))
                                                      (rule "qeq_literals" (formula "18") (term "0,1"))
                                                       (builtin "One Step Simplification" (formula "18"))
                                                      (rule "replace_known_left" (formula "31") (term "1") (ifseqformula "18"))
                                                       (builtin "One Step Simplification" (formula "31"))
                                                      (rule "cnf_rightDist" (formula "17") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "17") (term "0"))
                                                       (builtin "One Step Simplification" (formula "17"))
                                                      (rule "distr_forallAnd" (formula "17"))
                                                      (rule "andLeft" (formula "17"))
                                                      (rule "commute_or_2" (formula "18") (term "0,0"))
                                                      (rule "commute_or_2" (formula "18") (term "0,0,0"))
                                                      (rule "cnf_rightDist" (formula "17") (term "0"))
                                                      (rule "distr_forallAnd" (formula "17"))
                                                      (rule "andLeft" (formula "17"))
                                                      (rule "commute_or_2" (formula "17") (term "0"))
                                                      (rule "commute_or" (formula "18") (term "0"))
                                                      (rule "commute_or" (formula "17") (term "0,0"))
                                                      (rule "commute_or_2" (formula "19") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "19") (term "0,0,0,0,0"))
                                                      (rule "seqGetAlphaCast" (formula "24") (term "0"))
                                                      (rule "castedGetAny" (formula "24") (term "0"))
                                                       (builtin "One Step Simplification" (formula "24"))
                                                      (rule "true_left" (formula "24"))
                                                      (rule "allLeft" (formula "21") (inst "t=Z(0(#))"))
                                                      (rule "leq_literals" (formula "21") (term "1,0"))
                                                       (builtin "One Step Simplification" (formula "21"))
                                                      (rule "add_literals" (formula "21") (term "1,1,0"))
                                                      (rule "inEqSimp_commuteGeq" (formula "21") (term "1"))
                                                      (rule "applyEq" (formula "21") (term "1,0,0") (ifseqformula "24"))
                                                      (rule "eqSymm" (formula "21") (term "0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "21") (term "1") (ifseqformula "3"))
                                                      (rule "qeq_literals" (formula "21") (term "0,1"))
                                                       (builtin "One Step Simplification" (formula "21"))
                                                      (rule "allLeft" (formula "22") (inst "t=nv_0"))
                                                      (rule "inEqSimp_contradInEq0" (formula "22") (term "1") (ifseqformula "2"))
                                                      (rule "inEqSimp_homoInEq1" (formula "22") (term "0,1"))
                                                      (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1"))
                                                      (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1"))
                                                      (rule "mul_literals" (formula "22") (term "0,1,0,0,1"))
                                                      (rule "polySimp_addAssoc" (formula "22") (term "0,0,1"))
                                                      (rule "polySimp_addComm0" (formula "22") (term "0,0,0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,1"))
                                                      (rule "add_literals" (formula "22") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "22") (term "1,0,0,1"))
                                                      (rule "add_literals" (formula "22") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "22") (term "0,1"))
                                                       (builtin "One Step Simplification" (formula "22"))
                                                      (rule "inEqSimp_contradInEq1" (formula "22") (term "1") (ifseqformula "4"))
                                                      (rule "qeq_literals" (formula "22") (term "0,1"))
                                                       (builtin "One Step Simplification" (formula "22"))
                                                      (rule "allLeft" (formula "19") (inst "t=add(Z(1(#)), nv_0)"))
                                                      (rule "inEqSimp_homoInEq1" (formula "19") (term "1,0,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "19") (term "1,0,1,0,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "19") (term "1,0,1,0,0,0,0"))
                                                      (rule "mul_literals" (formula "19") (term "0,1,0,1,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "19") (term "0,1,0,0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "19") (term "0,0,1,0,0,0,0"))
                                                      (rule "add_literals" (formula "19") (term "0,0,0,1,0,0,0,0"))
                                                      (rule "add_zero_left" (formula "19") (term "0,0,1,0,0,0,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "19") (term "1,0,0,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "19") (term "1,0,1,0,0,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "19") (term "1,0,1,0,0,0,0,0"))
                                                      (rule "mul_literals" (formula "19") (term "0,1,0,1,0,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "19") (term "0,1,0,0,0,0,0"))
                                                      (rule "add_literals" (formula "19") (term "0,0,1,0,0,0,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "19") (term "1,0,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "19") (term "0,1,0,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "19") (term "0,1,0,0,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "19") (term "1,0,0,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "19") (term "0,1,0,0,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "19") (term "0,1,0,0,0,0,0"))
                                                      (rule "inEqSimp_contradInEq0" (formula "19") (term "1,0,0,0,0") (ifseqformula "2"))
                                                      (rule "inEqSimp_homoInEq1" (formula "19") (term "0,1,0,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0,0,0"))
                                                      (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0,0,0"))
                                                      (rule "polySimp_addComm0" (formula "19") (term "0,0,0,1,0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,1,0,0,0,0"))
                                                      (rule "add_literals" (formula "19") (term "1,1,0,0,1,0,0,0,0"))
                                                      (rule "times_zero_1" (formula "19") (term "1,0,0,1,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "19") (term "0,0,1,0,0,0,0"))
                                                      (rule "leq_literals" (formula "19") (term "0,1,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "19"))
                                                      (rule "inEqSimp_contradInEq1" (formula "19") (term "1,0,0,0,0") (ifseqformula "4"))
                                                      (rule "qeq_literals" (formula "19") (term "0,1,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "19"))
                                                      (rule "allLeft" (formula "17") (inst "t=add(Z(1(#)), nv_0)"))
                                                      (rule "inEqSimp_homoInEq0" (formula "17") (term "1,0"))
                                                      (rule "polySimp_mulComm0" (formula "17") (term "1,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "17") (term "1,0,1,0"))
                                                      (rule "mul_literals" (formula "17") (term "0,1,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "17") (term "0,1,0"))
                                                      (rule "add_literals" (formula "17") (term "0,0,1,0"))
                                                      (rule "inEqSimp_homoInEq1" (formula "17") (term "1"))
                                                      (rule "polySimp_mulComm0" (formula "17") (term "1,0,1"))
                                                      (rule "polySimp_rightDist" (formula "17") (term "1,0,1"))
                                                      (rule "mul_literals" (formula "17") (term "0,1,0,1"))
                                                      (rule "polySimp_addAssoc" (formula "17") (term "0,1"))
                                                      (rule "polySimp_addComm1" (formula "17") (term "0,0,1"))
                                                      (rule "add_literals" (formula "17") (term "0,0,0,1"))
                                                      (rule "add_zero_left" (formula "17") (term "0,0,1"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "17") (term "1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "17") (term "0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "17") (term "0,1,0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "17") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "17") (term "0,1"))
                                                      (rule "polySimp_elimOne" (formula "17") (term "0,1"))
                                                      (rule "inEqSimp_contradInEq0" (formula "17") (term "1") (ifseqformula "2"))
                                                      (rule "inEqSimp_homoInEq1" (formula "17") (term "0,1"))
                                                      (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1"))
                                                      (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1"))
                                                      (rule "mul_literals" (formula "17") (term "0,1,0,0,1"))
                                                      (rule "polySimp_addAssoc" (formula "17") (term "0,0,1"))
                                                      (rule "polySimp_addComm0" (formula "17") (term "0,0,0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,1"))
                                                      (rule "add_literals" (formula "17") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "17") (term "1,0,0,1"))
                                                      (rule "add_literals" (formula "17") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "17") (term "0,1"))
                                                       (builtin "One Step Simplification" (formula "17"))
                                                      (rule "inEqSimp_contradInEq1" (formula "17") (term "1") (ifseqformula "4"))
                                                      (rule "qeq_literals" (formula "17") (term "0,1"))
                                                       (builtin "One Step Simplification" (formula "17"))
                                                      (rule "notLeft" (formula "17"))
                                                      (rule "referencedObjectIsCreatedRightEQ" (formula "33") (ifseqformula "23") (ifseqformula "30"))
                                                      (rule "close" (formula "33") (ifseqformula "12"))
                                                   )
                                                )
                                             )
                                             (branch "self.size = 1 + i_0 FALSE"
                                                (rule "inEqSimp_strengthen1" (formula "4") (ifseqformula "29"))
                                                (rule "polySimp_addAssoc" (formula "4") (term "1"))
                                                (rule "add_literals" (formula "4") (term "0,1"))
                                                (rule "inEqSimp_contradEq7" (formula "29") (ifseqformula "4"))
                                                (rule "polySimp_rightDist" (formula "29") (term "1,0,0"))
                                                (rule "mul_literals" (formula "29") (term "0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "29") (term "0,0"))
                                                (rule "polySimp_addComm1" (formula "29") (term "0,0,0"))
                                                (rule "add_literals" (formula "29") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0"))
                                                (rule "add_literals" (formula "29") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "29") (term "1,0,0"))
                                                (rule "add_literals" (formula "29") (term "0,0"))
                                                (rule "leq_literals" (formula "29") (term "0"))
                                                 (builtin "One Step Simplification" (formula "29"))
                                                (rule "false_right" (formula "29"))
                                                (rule "ifthenelse_split" (formula "2") (term "0"))
                                                (branch "(Node)self.nodeseq[i_0] = n_2 TRUE"
                                                   (rule "applyEqReverse" (formula "30") (term "1,1") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "2"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "applyEqReverse" (formula "29") (term "1,1,0,0") (ifseqformula "1"))
                                                   (rule "hideAuxiliaryEq" (formula "1"))
                                                   (rule "applyEq" (formula "28") (term "1,0,0,1,0,1,0") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "28") (term "0,0,0,0,0") (ifseqformula "1"))
                                                   (rule "replace_known_right" (formula "28") (term "0,0,0,0") (ifseqformula "26"))
                                                    (builtin "One Step Simplification" (formula "28"))
                                                   (rule "all_pull_out1" (formula "18") (term "0,1,0"))
                                                   (rule "all_pull_out0" (formula "18") (term "1,0"))
                                                   (rule "shift_paren_and" (formula "18") (term "0,1,0"))
                                                   (rule "all_pull_out3" (formula "18") (term "0"))
                                                   (rule "cnf_rightDist" (formula "18") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "18") (term "0"))
                                                    (builtin "One Step Simplification" (formula "18"))
                                                   (rule "distr_forallAnd" (formula "18"))
                                                   (rule "andLeft" (formula "18"))
                                                   (rule "shift_paren_or" (formula "19") (term "0"))
                                                   (rule "commute_or_2" (formula "19") (term "0,0"))
                                                   (rule "inEqSimp_or_weaken3" (formula "19") (term "0"))
                                                   (rule "polySimp_addAssoc" (formula "19") (term "1,0,1,0"))
                                                   (rule "add_literals" (formula "19") (term "0,1,0,1,0"))
                                                   (rule "add_zero_left" (formula "19") (term "1,0,1,0"))
                                                    (builtin "One Step Simplification" (formula "19"))
                                                   (rule "cnf_rightDist" (formula "18") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "18") (term "0"))
                                                    (builtin "One Step Simplification" (formula "18"))
                                                   (rule "distr_forallAnd" (formula "18"))
                                                   (rule "andLeft" (formula "18"))
                                                   (rule "commute_or_2" (formula "19") (term "0"))
                                                    (builtin "One Step Simplification" (formula "19"))
                                                   (rule "inEqSimp_homoInEq0" (formula "19") (term "0,1"))
                                                   (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1"))
                                                   (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1"))
                                                   (rule "mul_literals" (formula "19") (term "0,1,0,0,1"))
                                                   (rule "polySimp_addAssoc" (formula "19") (term "0,0,1"))
                                                   (rule "add_literals" (formula "19") (term "0,0,0,1"))
                                                   (rule "add_zero_left" (formula "19") (term "0,0,1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "19") (term "1,1"))
                                                   (rule "polySimp_mulComm0" (formula "19") (term "1,0,1,1"))
                                                   (rule "polySimp_rightDist" (formula "19") (term "1,0,1,1"))
                                                   (rule "mul_literals" (formula "19") (term "0,1,0,1,1"))
                                                   (rule "polySimp_addAssoc" (formula "19") (term "0,1,1"))
                                                   (rule "polySimp_addComm0" (formula "19") (term "0,0,1,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,1,1"))
                                                   (rule "add_literals" (formula "19") (term "1,1,0,1,1"))
                                                   (rule "times_zero_1" (formula "19") (term "1,0,1,1"))
                                                   (rule "add_literals" (formula "19") (term "0,1,1"))
                                                   (rule "leq_literals" (formula "19") (term "1,1"))
                                                    (builtin "One Step Simplification" (formula "19"))
                                                   (rule "applyEq" (formula "19") (term "1,0,0") (ifseqformula "22"))
                                                   (rule "inEqSimp_invertInEq1" (formula "19") (term "1"))
                                                   (rule "mul_literals" (formula "19") (term "1,1"))
                                                   (rule "polySimp_mulLiterals" (formula "19") (term "0,1"))
                                                   (rule "polySimp_elimOne" (formula "19") (term "0,1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "19") (term "1") (ifseqformula "23"))
                                                   (rule "qeq_literals" (formula "19") (term "0,1"))
                                                    (builtin "One Step Simplification" (formula "19"))
                                                   (rule "cnf_rightDist" (formula "18") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "18") (term "0"))
                                                    (builtin "One Step Simplification" (formula "18"))
                                                   (rule "distr_forallAnd" (formula "18"))
                                                   (rule "andLeft" (formula "18"))
                                                   (rule "commute_or_2" (formula "19") (term "0,0"))
                                                   (rule "commute_or_2" (formula "19") (term "0,0,0"))
                                                   (rule "cnf_rightDist" (formula "18") (term "0"))
                                                   (rule "distr_forallAnd" (formula "18"))
                                                   (rule "andLeft" (formula "18"))
                                                   (rule "commute_or_2" (formula "18") (term "0"))
                                                   (rule "commute_or" (formula "19") (term "0"))
                                                   (rule "commute_or" (formula "18") (term "0,0"))
                                                   (rule "commute_or_2" (formula "20") (term "0,0,0,0"))
                                                   (rule "shift_paren_or" (formula "20") (term "0,0,0,0,0"))
                                                   (rule "cut_direct" (formula "8") (term "1,0"))
                                                   (branch "CUT: fv_0 = Node::$next TRUE"
                                                       (builtin "One Step Simplification" (formula "9"))
                                                      (rule "true_left" (formula "9"))
                                                      (rule "seqGetAlphaCast" (formula "23") (term "0"))
                                                      (rule "castedGetAny" (formula "23") (term "0"))
                                                       (builtin "One Step Simplification" (formula "23"))
                                                      (rule "true_left" (formula "23"))
                                                      (rule "seqGetAlphaCast" (formula "24") (term "0"))
                                                      (rule "castedGetAny" (formula "24") (term "0"))
                                                       (builtin "One Step Simplification" (formula "24"))
                                                      (rule "true_left" (formula "24"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "23") (term "1") (ifseqformula "13"))
                                                      (rule "allLeft" (formula "22") (inst "t=i_0"))
                                                      (rule "inEqSimp_homoInEq1" (formula "22") (term "1"))
                                                      (rule "polySimp_addComm1" (formula "22") (term "0,1"))
                                                      (rule "applyEq" (formula "22") (term "1,0,0,0") (ifseqformula "1"))
                                                      (rule "eqSymm" (formula "22") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1"))
                                                      (rule "polySimp_mulComm0" (formula "22") (term "1,1"))
                                                      (rule "polySimp_rightDist" (formula "22") (term "1,1"))
                                                      (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1"))
                                                      (rule "mul_literals" (formula "22") (term "0,1,1"))
                                                      (rule "polySimp_elimOne" (formula "22") (term "1,1,1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "22") (term "1") (ifseqformula "3"))
                                                      (rule "inEqSimp_homoInEq1" (formula "22") (term "0,1"))
                                                      (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1"))
                                                      (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1"))
                                                      (rule "mul_literals" (formula "22") (term "0,1,0,0,1"))
                                                      (rule "polySimp_addAssoc" (formula "22") (term "0,0,1"))
                                                      (rule "polySimp_addComm1" (formula "22") (term "0,0,0,1"))
                                                      (rule "add_literals" (formula "22") (term "0,0,0,0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,1"))
                                                      (rule "add_literals" (formula "22") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "22") (term "1,0,0,1"))
                                                      (rule "add_literals" (formula "22") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "22") (term "0,1"))
                                                       (builtin "One Step Simplification" (formula "22"))
                                                      (rule "inEqSimp_contradInEq1" (formula "22") (term "1") (ifseqformula "2"))
                                                      (rule "qeq_literals" (formula "22") (term "0,1"))
                                                       (builtin "One Step Simplification" (formula "22"))
                                                      (rule "applyEq" (formula "34") (term "0,1") (ifseqformula "22"))
                                                      (rule "allLeft" (formula "23") (inst "t=nv_0"))
                                                      (rule "inEqSimp_homoInEq1" (formula "23") (term "1"))
                                                      (rule "polySimp_addComm1" (formula "23") (term "0,1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1"))
                                                      (rule "polySimp_mulComm0" (formula "23") (term "1,1"))
                                                      (rule "polySimp_rightDist" (formula "23") (term "1,1"))
                                                      (rule "mul_literals" (formula "23") (term "0,1,1"))
                                                      (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1"))
                                                      (rule "polySimp_elimOne" (formula "23") (term "1,1,1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "23") (term "1,0") (ifseqformula "5"))
                                                      (rule "qeq_literals" (formula "23") (term "0,1,0"))
                                                       (builtin "One Step Simplification" (formula "23"))
                                                      (rule "inEqSimp_contradInEq1" (formula "23") (term "1") (ifseqformula "4"))
                                                      (rule "inEqSimp_homoInEq1" (formula "23") (term "0,1"))
                                                      (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1"))
                                                      (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1"))
                                                      (rule "mul_literals" (formula "23") (term "0,1,0,0,1"))
                                                      (rule "polySimp_addAssoc" (formula "23") (term "0,0,1"))
                                                      (rule "polySimp_addComm1" (formula "23") (term "0,0,0,1"))
                                                      (rule "add_literals" (formula "23") (term "0,0,0,0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1"))
                                                      (rule "add_literals" (formula "23") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "23") (term "1,0,0,1"))
                                                      (rule "add_literals" (formula "23") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "23") (term "0,1"))
                                                       (builtin "One Step Simplification" (formula "23"))
                                                      (rule "allLeft" (formula "18") (inst "t=add(Z(1(#)), nv_0)"))
                                                      (rule "inEqSimp_commuteGeq" (formula "18") (term "1"))
                                                      (rule "inEqSimp_homoInEq0" (formula "18") (term "1,0"))
                                                      (rule "polySimp_mulComm0" (formula "18") (term "1,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "18") (term "1,0,1,0"))
                                                      (rule "mul_literals" (formula "18") (term "0,1,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "18") (term "0,1,0"))
                                                      (rule "add_literals" (formula "18") (term "0,0,1,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "18") (term "1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "18") (term "0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "18") (term "0,1,0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "18") (term "1,0") (ifseqformula "5"))
                                                      (rule "qeq_literals" (formula "18") (term "0,1,0"))
                                                       (builtin "One Step Simplification" (formula "18"))
                                                      (rule "inEqSimp_contradInEq1" (formula "18") (term "1") (ifseqformula "4"))
                                                      (rule "inEqSimp_homoInEq1" (formula "18") (term "0,1"))
                                                      (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1"))
                                                      (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1"))
                                                      (rule "mul_literals" (formula "18") (term "0,1,0,0,1"))
                                                      (rule "polySimp_addAssoc" (formula "18") (term "0,0,1"))
                                                      (rule "polySimp_addComm1" (formula "18") (term "0,0,0,1"))
                                                      (rule "add_literals" (formula "18") (term "0,0,0,0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1"))
                                                      (rule "add_literals" (formula "18") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "18") (term "1,0,0,1"))
                                                      (rule "add_literals" (formula "18") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "18") (term "0,1"))
                                                       (builtin "One Step Simplification" (formula "18"))
                                                      (rule "notLeft" (formula "18"))
                                                      (rule "referencedObjectIsCreatedRightEQ" (formula "32") (ifseqformula "23") (ifseqformula "31"))
                                                      (rule "close" (formula "32") (ifseqformula "13"))
                                                   )
                                                   (branch "CUT: fv_0 = Node::$next FALSE"
                                                       (builtin "One Step Simplification" (formula "8"))
                                                      (rule "seqGetAlphaCast" (formula "23") (term "0"))
                                                      (rule "castedGetAny" (formula "23") (term "0"))
                                                       (builtin "One Step Simplification" (formula "23"))
                                                      (rule "true_left" (formula "23"))
                                                      (rule "seqGetAlphaCast" (formula "24") (term "0"))
                                                      (rule "castedGetAny" (formula "24") (term "0"))
                                                       (builtin "One Step Simplification" (formula "24"))
                                                      (rule "true_left" (formula "24"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "23") (term "1") (ifseqformula "13"))
                                                      (rule "allLeft" (formula "22") (inst "t=i_0"))
                                                      (rule "inEqSimp_homoInEq1" (formula "22") (term "1"))
                                                      (rule "polySimp_addComm1" (formula "22") (term "0,1"))
                                                      (rule "applyEq" (formula "22") (term "1,0,0,0") (ifseqformula "1"))
                                                      (rule "eqSymm" (formula "22") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1"))
                                                      (rule "polySimp_mulComm0" (formula "22") (term "1,1"))
                                                      (rule "polySimp_rightDist" (formula "22") (term "1,1"))
                                                      (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1"))
                                                      (rule "mul_literals" (formula "22") (term "0,1,1"))
                                                      (rule "polySimp_elimOne" (formula "22") (term "1,1,1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "22") (term "1,0") (ifseqformula "2"))
                                                      (rule "qeq_literals" (formula "22") (term "0,1,0"))
                                                       (builtin "One Step Simplification" (formula "22"))
                                                      (rule "inEqSimp_contradInEq1" (formula "22") (term "1") (ifseqformula "3"))
                                                      (rule "inEqSimp_homoInEq1" (formula "22") (term "0,1"))
                                                      (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1"))
                                                      (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1"))
                                                      (rule "mul_literals" (formula "22") (term "0,1,0,0,1"))
                                                      (rule "polySimp_addAssoc" (formula "22") (term "0,0,1"))
                                                      (rule "polySimp_addComm1" (formula "22") (term "0,0,0,1"))
                                                      (rule "add_literals" (formula "22") (term "0,0,0,0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,1"))
                                                      (rule "add_literals" (formula "22") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "22") (term "1,0,0,1"))
                                                      (rule "add_literals" (formula "22") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "22") (term "0,1"))
                                                       (builtin "One Step Simplification" (formula "22"))
                                                      (rule "applyEq" (formula "35") (term "0,1") (ifseqformula "22"))
                                                      (rule "allLeft" (formula "23") (inst "t=nv_0"))
                                                      (rule "inEqSimp_homoInEq1" (formula "23") (term "1"))
                                                      (rule "polySimp_addComm1" (formula "23") (term "0,1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1"))
                                                      (rule "polySimp_mulComm0" (formula "23") (term "1,1"))
                                                      (rule "polySimp_rightDist" (formula "23") (term "1,1"))
                                                      (rule "mul_literals" (formula "23") (term "0,1,1"))
                                                      (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1"))
                                                      (rule "polySimp_elimOne" (formula "23") (term "1,1,1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "23") (term "1,0") (ifseqformula "5"))
                                                      (rule "qeq_literals" (formula "23") (term "0,1,0"))
                                                       (builtin "One Step Simplification" (formula "23"))
                                                      (rule "inEqSimp_contradInEq1" (formula "23") (term "1") (ifseqformula "4"))
                                                      (rule "inEqSimp_homoInEq1" (formula "23") (term "0,1"))
                                                      (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1"))
                                                      (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1"))
                                                      (rule "mul_literals" (formula "23") (term "0,1,0,0,1"))
                                                      (rule "polySimp_addAssoc" (formula "23") (term "0,0,1"))
                                                      (rule "polySimp_addComm1" (formula "23") (term "0,0,0,1"))
                                                      (rule "add_literals" (formula "23") (term "0,0,0,0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1"))
                                                      (rule "add_literals" (formula "23") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "23") (term "1,0,0,1"))
                                                      (rule "add_literals" (formula "23") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "23") (term "0,1"))
                                                       (builtin "One Step Simplification" (formula "23"))
                                                      (rule "allLeft" (formula "18") (inst "t=add(Z(1(#)), nv_0)"))
                                                      (rule "inEqSimp_commuteGeq" (formula "18") (term "1"))
                                                      (rule "inEqSimp_homoInEq0" (formula "18") (term "1,0"))
                                                      (rule "polySimp_mulComm0" (formula "18") (term "1,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "18") (term "1,0,1,0"))
                                                      (rule "mul_literals" (formula "18") (term "0,1,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "18") (term "0,1,0"))
                                                      (rule "add_literals" (formula "18") (term "0,0,1,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "18") (term "1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "18") (term "0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "18") (term "0,1,0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "18") (term "1,0") (ifseqformula "5"))
                                                      (rule "qeq_literals" (formula "18") (term "0,1,0"))
                                                       (builtin "One Step Simplification" (formula "18"))
                                                      (rule "inEqSimp_contradInEq1" (formula "18") (term "1") (ifseqformula "4"))
                                                      (rule "inEqSimp_homoInEq1" (formula "18") (term "0,1"))
                                                      (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1"))
                                                      (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1"))
                                                      (rule "mul_literals" (formula "18") (term "0,1,0,0,1"))
                                                      (rule "polySimp_addAssoc" (formula "18") (term "0,0,1"))
                                                      (rule "polySimp_addComm1" (formula "18") (term "0,0,0,1"))
                                                      (rule "add_literals" (formula "18") (term "0,0,0,0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1"))
                                                      (rule "add_literals" (formula "18") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "18") (term "1,0,0,1"))
                                                      (rule "add_literals" (formula "18") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "18") (term "0,1"))
                                                       (builtin "One Step Simplification" (formula "18"))
                                                      (rule "notLeft" (formula "18"))
                                                      (rule "referencedObjectIsCreatedRightEQ" (formula "33") (ifseqformula "23") (ifseqformula "31"))
                                                      (rule "close" (formula "33") (ifseqformula "13"))
                                                   )
                                                )
                                                (branch "(Node)self.nodeseq[i_0] = n_2 FALSE"
                                                   (rule "applyEqReverse" (formula "30") (term "1,1") (ifseqformula "2"))
                                                   (rule "hideAuxiliaryEq" (formula "2"))
                                                   (rule "eqSymm" (formula "29") (term "1"))
                                                   (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "24"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "applyEqReverse" (formula "29") (term "1,1,0,0") (ifseqformula "1"))
                                                   (rule "hideAuxiliaryEq" (formula "1"))
                                                   (rule "all_pull_out1" (formula "17") (term "0,1,0"))
                                                   (rule "cut_direct" (formula "28") (term "0,0,0,0"))
                                                   (branch "CUT: (Node)self.nodeseq[i_0] = null TRUE"
                                                       (builtin "One Step Simplification" (formula "29"))
                                                      (rule "false_right" (formula "29"))
                                                      (rule "applyEq" (formula "24") (term "0") (ifseqformula "1"))
                                                      (rule "eqSymm" (formula "24"))
                                                      (rule "all_pull_out0" (formula "18") (term "1,0"))
                                                      (rule "shift_paren_and" (formula "18") (term "0,1,0"))
                                                      (rule "all_pull_out3" (formula "18") (term "0"))
                                                      (rule "cnf_rightDist" (formula "18") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "18") (term "0"))
                                                       (builtin "One Step Simplification" (formula "18"))
                                                      (rule "distr_forallAnd" (formula "18"))
                                                      (rule "andLeft" (formula "18"))
                                                      (rule "shift_paren_or" (formula "19") (term "0"))
                                                      (rule "commute_or_2" (formula "19") (term "0,0"))
                                                      (rule "inEqSimp_or_weaken3" (formula "19") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "19") (term "1,0,1,0"))
                                                      (rule "add_literals" (formula "19") (term "0,1,0,1,0"))
                                                      (rule "add_zero_left" (formula "19") (term "1,0,1,0"))
                                                       (builtin "One Step Simplification" (formula "19"))
                                                      (rule "cnf_rightDist" (formula "18") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "18") (term "0"))
                                                       (builtin "One Step Simplification" (formula "18"))
                                                      (rule "distr_forallAnd" (formula "18"))
                                                      (rule "andLeft" (formula "18"))
                                                      (rule "commute_or_2" (formula "19") (term "0"))
                                                       (builtin "One Step Simplification" (formula "19"))
                                                      (rule "inEqSimp_homoInEq0" (formula "19") (term "0,1"))
                                                      (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1"))
                                                      (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1"))
                                                      (rule "mul_literals" (formula "19") (term "0,1,0,0,1"))
                                                      (rule "polySimp_addAssoc" (formula "19") (term "0,0,1"))
                                                      (rule "add_literals" (formula "19") (term "0,0,0,1"))
                                                      (rule "add_zero_left" (formula "19") (term "0,0,1"))
                                                      (rule "inEqSimp_homoInEq1" (formula "19") (term "1,1"))
                                                      (rule "polySimp_mulComm0" (formula "19") (term "1,0,1,1"))
                                                      (rule "polySimp_rightDist" (formula "19") (term "1,0,1,1"))
                                                      (rule "mul_literals" (formula "19") (term "0,1,0,1,1"))
                                                      (rule "polySimp_addAssoc" (formula "19") (term "0,1,1"))
                                                      (rule "polySimp_addComm0" (formula "19") (term "0,0,1,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,1,1"))
                                                      (rule "add_literals" (formula "19") (term "1,1,0,1,1"))
                                                      (rule "times_zero_1" (formula "19") (term "1,0,1,1"))
                                                      (rule "add_literals" (formula "19") (term "0,1,1"))
                                                      (rule "leq_literals" (formula "19") (term "1,1"))
                                                       (builtin "One Step Simplification" (formula "19"))
                                                      (rule "applyEq" (formula "19") (term "1,0,0") (ifseqformula "22"))
                                                      (rule "inEqSimp_invertInEq1" (formula "19") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "19") (term "0,1"))
                                                      (rule "mul_literals" (formula "19") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "19") (term "0,1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "19") (term "1") (ifseqformula "23"))
                                                      (rule "qeq_literals" (formula "19") (term "0,1"))
                                                       (builtin "One Step Simplification" (formula "19"))
                                                      (rule "cnf_rightDist" (formula "18") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "18") (term "0"))
                                                       (builtin "One Step Simplification" (formula "18"))
                                                      (rule "distr_forallAnd" (formula "18"))
                                                      (rule "andLeft" (formula "18"))
                                                      (rule "commute_or_2" (formula "19") (term "0,0"))
                                                      (rule "commute_or_2" (formula "19") (term "0,0,0"))
                                                      (rule "cnf_rightDist" (formula "18") (term "0"))
                                                      (rule "distr_forallAnd" (formula "18"))
                                                      (rule "andLeft" (formula "18"))
                                                      (rule "commute_or_2" (formula "18") (term "0"))
                                                      (rule "commute_or" (formula "19") (term "0"))
                                                      (rule "commute_or" (formula "18") (term "0,0"))
                                                      (rule "commute_or_2" (formula "20") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "20") (term "0,0,0,0,0"))
                                                      (rule "cut_direct" (formula "8") (term "1,0"))
                                                      (branch "CUT: fv_0 = Node::$next TRUE"
                                                          (builtin "One Step Simplification" (formula "9"))
                                                         (rule "true_left" (formula "9"))
                                                         (rule "seqGetAlphaCast" (formula "23") (term "0"))
                                                         (rule "castedGetAny" (formula "23") (term "0"))
                                                          (builtin "One Step Simplification" (formula "23"))
                                                         (rule "true_left" (formula "23"))
                                                         (rule "seqGetAlphaCast" (formula "24") (term "0"))
                                                         (rule "castedGetAny" (formula "24") (term "0"))
                                                          (builtin "One Step Simplification" (formula "24"))
                                                         (rule "true_left" (formula "24"))
                                                         (rule "onlyCreatedObjectsAreReferenced" (formula "23") (term "1") (ifseqformula "13"))
                                                         (rule "allLeft" (formula "18") (inst "t=i_0"))
                                                         (rule "replace_known_left" (formula "18") (term "0,0,0") (ifseqformula "1"))
                                                          (builtin "One Step Simplification" (formula "18"))
                                                         (rule "inEqSimp_commuteGeq" (formula "18") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "18") (term "0") (ifseqformula "2"))
                                                         (rule "qeq_literals" (formula "18") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "18"))
                                                         (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "18"))
                                                         (rule "andLeft" (formula "3"))
                                                         (rule "inEqSimp_homoInEq1" (formula "3"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                                         (rule "add_literals" (formula "3") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "3") (term "1,0"))
                                                         (rule "add_literals" (formula "3") (term "0"))
                                                         (rule "leq_literals" (formula "3"))
                                                         (rule "closeFalse" (formula "3"))
                                                      )
                                                      (branch "CUT: fv_0 = Node::$next FALSE"
                                                          (builtin "One Step Simplification" (formula "8"))
                                                         (rule "seqGetAlphaCast" (formula "23") (term "0"))
                                                         (rule "castedGetAny" (formula "23") (term "0"))
                                                          (builtin "One Step Simplification" (formula "23"))
                                                         (rule "true_left" (formula "23"))
                                                         (rule "seqGetAlphaCast" (formula "24") (term "0"))
                                                         (rule "castedGetAny" (formula "24") (term "0"))
                                                          (builtin "One Step Simplification" (formula "24"))
                                                         (rule "true_left" (formula "24"))
                                                         (rule "onlyCreatedObjectsAreReferenced" (formula "23") (term "1") (ifseqformula "13"))
                                                         (rule "allLeft" (formula "18") (inst "t=i_0"))
                                                         (rule "replace_known_left" (formula "18") (term "0,0,0") (ifseqformula "1"))
                                                          (builtin "One Step Simplification" (formula "18"))
                                                         (rule "inEqSimp_commuteGeq" (formula "18") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "18") (term "1") (ifseqformula "3"))
                                                         (rule "inEqSimp_homoInEq1" (formula "18") (term "0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1"))
                                                         (rule "add_literals" (formula "18") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "18") (term "1,0,0,1"))
                                                         (rule "add_literals" (formula "18") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "18") (term "0,1"))
                                                          (builtin "One Step Simplification" (formula "18"))
                                                         (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "18"))
                                                         (rule "qeq_literals" (formula "2") (term "0"))
                                                          (builtin "One Step Simplification" (formula "2"))
                                                         (rule "closeFalse" (formula "2"))
                                                      )
                                                   )
                                                   (branch "CUT: (Node)self.nodeseq[i_0] = null FALSE"
                                                       (builtin "One Step Simplification" (formula "29"))
                                                      (rule "all_pull_out0" (formula "17") (term "1,0"))
                                                      (rule "shift_paren_and" (formula "17") (term "0,1,0"))
                                                      (rule "all_pull_out3" (formula "17") (term "0"))
                                                      (rule "cnf_rightDist" (formula "17") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "17") (term "0"))
                                                       (builtin "One Step Simplification" (formula "17"))
                                                      (rule "distr_forallAnd" (formula "17"))
                                                      (rule "andLeft" (formula "17"))
                                                      (rule "shift_paren_or" (formula "18") (term "0"))
                                                      (rule "commute_or_2" (formula "18") (term "0,0"))
                                                      (rule "inEqSimp_or_weaken3" (formula "18") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "18") (term "1,0,1,0"))
                                                      (rule "add_literals" (formula "18") (term "0,1,0,1,0"))
                                                      (rule "add_zero_left" (formula "18") (term "1,0,1,0"))
                                                       (builtin "One Step Simplification" (formula "18"))
                                                      (rule "cnf_rightDist" (formula "17") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "17") (term "0"))
                                                       (builtin "One Step Simplification" (formula "17"))
                                                      (rule "distr_forallAnd" (formula "17"))
                                                      (rule "andLeft" (formula "17"))
                                                      (rule "commute_or_2" (formula "18") (term "0"))
                                                       (builtin "One Step Simplification" (formula "18"))
                                                      (rule "inEqSimp_homoInEq0" (formula "18") (term "0,1"))
                                                      (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1"))
                                                      (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1"))
                                                      (rule "mul_literals" (formula "18") (term "0,1,0,0,1"))
                                                      (rule "polySimp_addAssoc" (formula "18") (term "0,0,1"))
                                                      (rule "add_literals" (formula "18") (term "0,0,0,1"))
                                                      (rule "add_zero_left" (formula "18") (term "0,0,1"))
                                                      (rule "inEqSimp_homoInEq1" (formula "18") (term "1,1"))
                                                      (rule "polySimp_mulComm0" (formula "18") (term "1,0,1,1"))
                                                      (rule "polySimp_rightDist" (formula "18") (term "1,0,1,1"))
                                                      (rule "mul_literals" (formula "18") (term "0,1,0,1,1"))
                                                      (rule "polySimp_addAssoc" (formula "18") (term "0,1,1"))
                                                      (rule "polySimp_addComm0" (formula "18") (term "0,0,1,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,1,1"))
                                                      (rule "add_literals" (formula "18") (term "1,1,0,1,1"))
                                                      (rule "times_zero_1" (formula "18") (term "1,0,1,1"))
                                                      (rule "add_literals" (formula "18") (term "0,1,1"))
                                                      (rule "leq_literals" (formula "18") (term "1,1"))
                                                       (builtin "One Step Simplification" (formula "18"))
                                                      (rule "applyEq" (formula "18") (term "1,0,0") (ifseqformula "21"))
                                                      (rule "inEqSimp_invertInEq1" (formula "18") (term "1"))
                                                      (rule "mul_literals" (formula "18") (term "1,1"))
                                                      (rule "polySimp_mulLiterals" (formula "18") (term "0,1"))
                                                      (rule "polySimp_elimOne" (formula "18") (term "0,1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "18") (term "1") (ifseqformula "22"))
                                                      (rule "qeq_literals" (formula "18") (term "0,1"))
                                                       (builtin "One Step Simplification" (formula "18"))
                                                      (rule "cnf_rightDist" (formula "17") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "17") (term "0"))
                                                       (builtin "One Step Simplification" (formula "17"))
                                                      (rule "distr_forallAnd" (formula "17"))
                                                      (rule "andLeft" (formula "17"))
                                                      (rule "commute_or_2" (formula "18") (term "0,0"))
                                                      (rule "commute_or_2" (formula "18") (term "0,0,0"))
                                                      (rule "cnf_rightDist" (formula "17") (term "0"))
                                                      (rule "distr_forallAnd" (formula "17"))
                                                      (rule "andLeft" (formula "17"))
                                                      (rule "commute_or_2" (formula "17") (term "0"))
                                                      (rule "commute_or" (formula "18") (term "0"))
                                                      (rule "commute_or" (formula "17") (term "0,0"))
                                                      (rule "commute_or_2" (formula "19") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "19") (term "0,0,0,0,0"))
                                                      (rule "cut_direct" (formula "7") (term "1,0"))
                                                      (branch "CUT: fv_0 = Node::$next TRUE"
                                                          (builtin "One Step Simplification" (formula "8"))
                                                         (rule "true_left" (formula "8"))
                                                         (rule "seqGetAlphaCast" (formula "22") (term "0"))
                                                         (rule "castedGetAny" (formula "22") (term "0"))
                                                          (builtin "One Step Simplification" (formula "22"))
                                                         (rule "true_left" (formula "22"))
                                                         (rule "seqGetAlphaCast" (formula "23") (term "0"))
                                                         (rule "castedGetAny" (formula "23") (term "0"))
                                                          (builtin "One Step Simplification" (formula "23"))
                                                         (rule "true_left" (formula "23"))
                                                         (rule "onlyCreatedObjectsAreReferenced" (formula "22") (term "1") (ifseqformula "12"))
                                                         (rule "allLeft" (formula "21") (inst "t=nv_0"))
                                                         (rule "inEqSimp_homoInEq1" (formula "21") (term "1"))
                                                         (rule "polySimp_addComm1" (formula "21") (term "0,1"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1"))
                                                         (rule "polySimp_mulComm0" (formula "21") (term "1,1"))
                                                         (rule "polySimp_rightDist" (formula "21") (term "1,1"))
                                                         (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1"))
                                                         (rule "mul_literals" (formula "21") (term "0,1,1"))
                                                         (rule "polySimp_elimOne" (formula "21") (term "1,1,1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "21") (term "1,0") (ifseqformula "4"))
                                                         (rule "qeq_literals" (formula "21") (term "0,1,0"))
                                                          (builtin "One Step Simplification" (formula "21"))
                                                         (rule "inEqSimp_contradInEq1" (formula "21") (term "1") (ifseqformula "3"))
                                                         (rule "inEqSimp_homoInEq1" (formula "21") (term "0,1"))
                                                         (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1"))
                                                         (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1"))
                                                         (rule "mul_literals" (formula "21") (term "0,1,0,0,1"))
                                                         (rule "polySimp_addAssoc" (formula "21") (term "0,0,1"))
                                                         (rule "polySimp_addComm1" (formula "21") (term "0,0,0,1"))
                                                         (rule "add_literals" (formula "21") (term "0,0,0,0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,1"))
                                                         (rule "add_literals" (formula "21") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "21") (term "1,0,0,1"))
                                                         (rule "add_literals" (formula "21") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "21") (term "0,1"))
                                                          (builtin "One Step Simplification" (formula "21"))
                                                         (rule "allLeft" (formula "22") (inst "t=i_0"))
                                                         (rule "inEqSimp_homoInEq1" (formula "22") (term "1"))
                                                         (rule "polySimp_addComm1" (formula "22") (term "0,1"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1"))
                                                         (rule "polySimp_mulComm0" (formula "22") (term "1,1"))
                                                         (rule "polySimp_rightDist" (formula "22") (term "1,1"))
                                                         (rule "mul_literals" (formula "22") (term "0,1,1"))
                                                         (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1"))
                                                         (rule "polySimp_elimOne" (formula "22") (term "1,1,1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "22") (term "1,0") (ifseqformula "1"))
                                                         (rule "qeq_literals" (formula "22") (term "0,1,0"))
                                                          (builtin "One Step Simplification" (formula "22"))
                                                         (rule "inEqSimp_contradInEq1" (formula "22") (term "1") (ifseqformula "2"))
                                                         (rule "inEqSimp_homoInEq1" (formula "22") (term "0,1"))
                                                         (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1"))
                                                         (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1"))
                                                         (rule "mul_literals" (formula "22") (term "0,1,0,0,1"))
                                                         (rule "polySimp_addAssoc" (formula "22") (term "0,0,1"))
                                                         (rule "polySimp_addComm1" (formula "22") (term "0,0,0,1"))
                                                         (rule "add_literals" (formula "22") (term "0,0,0,0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,1"))
                                                         (rule "add_literals" (formula "22") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "22") (term "1,0,0,1"))
                                                         (rule "add_literals" (formula "22") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "22") (term "0,1"))
                                                          (builtin "One Step Simplification" (formula "22"))
                                                         (rule "replace_known_left" (formula "36") (term "1") (ifseqformula "22"))
                                                          (builtin "One Step Simplification" (formula "36"))
                                                         (rule "allLeft" (formula "19") (inst "t=add(Z(1(#)), nv_0)"))
                                                         (rule "inEqSimp_commuteGeq" (formula "19") (term "1,0,0,0,0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "19") (term "1,0,0,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "19") (term "1,0,1,0,0,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "19") (term "1,0,1,0,0,0,0,0"))
                                                         (rule "mul_literals" (formula "19") (term "0,1,0,1,0,0,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "19") (term "0,1,0,0,0,0,0"))
                                                         (rule "add_literals" (formula "19") (term "0,0,1,0,0,0,0,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "19") (term "1,0,0,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "19") (term "0,1,0,0,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "19") (term "0,1,0,0,0,0,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "19") (term "1,0,0,0,0,0") (ifseqformula "4"))
                                                         (rule "qeq_literals" (formula "19") (term "0,1,0,0,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "19"))
                                                         (rule "inEqSimp_contradInEq1" (formula "19") (term "1,0,0,0,0") (ifseqformula "3"))
                                                         (rule "inEqSimp_homoInEq1" (formula "19") (term "0,1,0,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0,0,0"))
                                                         (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "19") (term "0,0,0,1,0,0,0,0"))
                                                         (rule "add_literals" (formula "19") (term "0,0,0,0,1,0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,1,0,0,0,0"))
                                                         (rule "add_literals" (formula "19") (term "1,1,0,0,1,0,0,0,0"))
                                                         (rule "times_zero_1" (formula "19") (term "1,0,0,1,0,0,0,0"))
                                                         (rule "add_zero_right" (formula "19") (term "0,0,1,0,0,0,0"))
                                                         (rule "leq_literals" (formula "19") (term "0,1,0,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "19"))
                                                         (rule "commute_or_2" (formula "19") (term "0"))
                                                         (rule "allLeft" (formula "20") (inst "t=add(Z(1(#)), i_0)"))
                                                         (rule "inEqSimp_commuteGeq" (formula "20") (term "1,0,0,0,0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "20") (term "1,0,0,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "20") (term "1,0,1,0,0,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "20") (term "1,0,1,0,0,0,0,0"))
                                                         (rule "mul_literals" (formula "20") (term "0,1,0,1,0,0,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "20") (term "0,1,0,0,0,0,0"))
                                                         (rule "add_literals" (formula "20") (term "0,0,1,0,0,0,0,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "20") (term "1,0,0,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "20") (term "0,1,0,0,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "20") (term "0,1,0,0,0,0,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "20") (term "1,0,0,0,0,0") (ifseqformula "1"))
                                                         (rule "qeq_literals" (formula "20") (term "0,1,0,0,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "20"))
                                                         (rule "inEqSimp_contradInEq1" (formula "20") (term "1,0,0,0,0") (ifseqformula "2"))
                                                         (rule "inEqSimp_homoInEq1" (formula "20") (term "0,1,0,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,0,0,0,0"))
                                                         (rule "mul_literals" (formula "20") (term "0,1,0,0,1,0,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0,0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "20") (term "0,0,0,1,0,0,0,0"))
                                                         (rule "add_literals" (formula "20") (term "0,0,0,0,1,0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,1,0,0,0,0"))
                                                         (rule "add_literals" (formula "20") (term "1,1,0,0,1,0,0,0,0"))
                                                         (rule "times_zero_1" (formula "20") (term "1,0,0,1,0,0,0,0"))
                                                         (rule "add_zero_right" (formula "20") (term "0,0,1,0,0,0,0"))
                                                         (rule "leq_literals" (formula "20") (term "0,1,0,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "20"))
                                                         (rule "commute_or_2" (formula "20") (term "0"))
                                                         (rule "allLeft" (formula "21") (inst "t=i_0"))
                                                         (rule "inEqSimp_commuteGeq" (formula "21") (term "1,0,0,0,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "21") (term "1,0,0,0,0,0") (ifseqformula "1"))
                                                         (rule "qeq_literals" (formula "21") (term "0,1,0,0,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "21"))
                                                         (rule "inEqSimp_contradInEq1" (formula "21") (term "1,0,0,0,0") (ifseqformula "2"))
                                                         (rule "inEqSimp_homoInEq1" (formula "21") (term "0,1,0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,1,0,0,0,0"))
                                                         (rule "add_literals" (formula "21") (term "1,1,0,0,1,0,0,0,0"))
                                                         (rule "times_zero_1" (formula "21") (term "1,0,0,1,0,0,0,0"))
                                                         (rule "add_zero_right" (formula "21") (term "0,0,1,0,0,0,0"))
                                                         (rule "leq_literals" (formula "21") (term "0,1,0,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "21"))
                                                         (rule "commute_or_2" (formula "21") (term "0"))
                                                         (rule "allLeft" (formula "17") (inst "t=add(Z(1(#)), i_0)"))
                                                         (rule "inEqSimp_commuteGeq" (formula "17") (term "1"))
                                                         (rule "inEqSimp_homoInEq0" (formula "17") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "17") (term "1,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "17") (term "1,0,1,0"))
                                                         (rule "mul_literals" (formula "17") (term "0,1,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "17") (term "0,1,0"))
                                                         (rule "add_literals" (formula "17") (term "0,0,1,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "17") (term "1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "17") (term "0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "17") (term "0,1,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "17") (term "1") (ifseqformula "2"))
                                                         (rule "inEqSimp_homoInEq1" (formula "17") (term "0,1"))
                                                         (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1"))
                                                         (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1"))
                                                         (rule "mul_literals" (formula "17") (term "0,1,0,0,1"))
                                                         (rule "polySimp_addAssoc" (formula "17") (term "0,0,1"))
                                                         (rule "polySimp_addComm1" (formula "17") (term "0,0,0,1"))
                                                         (rule "add_literals" (formula "17") (term "0,0,0,0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,1"))
                                                         (rule "add_literals" (formula "17") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "17") (term "1,0,0,1"))
                                                         (rule "add_literals" (formula "17") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "17") (term "0,1"))
                                                          (builtin "One Step Simplification" (formula "17"))
                                                         (rule "inEqSimp_contradInEq1" (formula "17") (term "1") (ifseqformula "1"))
                                                         (rule "qeq_literals" (formula "17") (term "0,1"))
                                                          (builtin "One Step Simplification" (formula "17"))
                                                         (rule "notLeft" (formula "17"))
                                                         (rule "allLeft" (formula "17") (inst "t=add(Z(neglit(1(#))),
    int::select(heap, self, LinkedList::$size))"))
                                                         (rule "inEqSimp_homoInEq1" (formula "17") (term "1"))
                                                         (rule "polySimp_mulComm0" (formula "17") (term "1,0,1"))
                                                         (rule "polySimp_rightDist" (formula "17") (term "1,0,1"))
                                                         (rule "mul_literals" (formula "17") (term "0,1,0,1"))
                                                         (rule "polySimp_addAssoc" (formula "17") (term "0,1"))
                                                         (rule "polySimp_addComm0" (formula "17") (term "0,0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,1"))
                                                         (rule "add_literals" (formula "17") (term "1,1,0,1"))
                                                         (rule "times_zero_1" (formula "17") (term "1,0,1"))
                                                         (rule "add_zero_right" (formula "17") (term "0,1"))
                                                         (rule "leq_literals" (formula "17") (term "1"))
                                                          (builtin "One Step Simplification" (formula "17"))
                                                         (rule "inEqSimp_homoInEq0" (formula "17") (term "1"))
                                                         (rule "polySimp_mulComm0" (formula "17") (term "1,0,1"))
                                                         (rule "polySimp_rightDist" (formula "17") (term "1,0,1"))
                                                         (rule "mul_literals" (formula "17") (term "0,1,0,1"))
                                                         (rule "polySimp_addAssoc" (formula "17") (term "0,1"))
                                                         (rule "add_literals" (formula "17") (term "0,0,1"))
                                                         (rule "add_zero_left" (formula "17") (term "0,1"))
                                                         (rule "applyEq" (formula "17") (term "0,0,0") (ifseqformula "30"))
                                                         (rule "inEqSimp_invertInEq1" (formula "17") (term "1"))
                                                         (rule "mul_literals" (formula "17") (term "1,1"))
                                                         (rule "polySimp_mulLiterals" (formula "17") (term "0,1"))
                                                         (rule "polySimp_elimOne" (formula "17") (term "0,1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "17") (term "1") (ifseqformula "31"))
                                                         (rule "qeq_literals" (formula "17") (term "0,1"))
                                                          (builtin "One Step Simplification" (formula "17"))
                                                         (rule "notLeft" (formula "17"))
                                                         (rule "allLeft" (formula "17") (inst "t=i_0_0"))
                                                         (rule "inEqSimp_commuteGeq" (formula "17") (term "1"))
                                                         (rule "applyEq" (formula "17") (term "0,0,0,0") (ifseqformula "10"))
                                                         (rule "replace_known_right" (formula "17") (term "0,0,0") (ifseqformula "39"))
                                                          (builtin "One Step Simplification" (formula "17"))
                                                         (rule "true_left" (formula "17"))
                                                         (rule "allLeft" (formula "18") (inst "t=add(Z(1(#)), i_0)"))
                                                         (rule "eqSymm" (formula "18") (term "1"))
                                                         (rule "inEqSimp_commuteGeq" (formula "18") (term "1,0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "18") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "18") (term "0,1,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "18") (term "0,0,0"))
                                                         (rule "add_literals" (formula "18") (term "0,0,0,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "18") (term "0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "18") (term "0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "18") (term "0,0,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "18") (term "1,0") (ifseqformula "2"))
                                                         (rule "inEqSimp_homoInEq1" (formula "18") (term "0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0"))
                                                         (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0"))
                                                         (rule "polySimp_addComm1" (formula "18") (term "0,0,0,1,0"))
                                                         (rule "add_literals" (formula "18") (term "0,0,0,0,1,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1,0"))
                                                         (rule "add_literals" (formula "18") (term "1,1,0,0,1,0"))
                                                         (rule "times_zero_1" (formula "18") (term "1,0,0,1,0"))
                                                         (rule "add_zero_right" (formula "18") (term "0,0,1,0"))
                                                         (rule "leq_literals" (formula "18") (term "0,1,0"))
                                                          (builtin "One Step Simplification" (formula "18"))
                                                         (rule "inEqSimp_contradInEq1" (formula "18") (term "0") (ifseqformula "1"))
                                                         (rule "qeq_literals" (formula "18") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "18"))
                                                         (rule "allLeft" (formula "17") (inst "t=add(Z(1(#)), nv_0)"))
                                                         (rule "inEqSimp_commuteGeq" (formula "17") (term "1"))
                                                         (rule "inEqSimp_homoInEq0" (formula "17") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "17") (term "1,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "17") (term "1,0,1,0"))
                                                         (rule "mul_literals" (formula "17") (term "0,1,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "17") (term "0,1,0"))
                                                         (rule "add_literals" (formula "17") (term "0,0,1,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "17") (term "1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "17") (term "0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "17") (term "0,1,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "17") (term "1") (ifseqformula "3"))
                                                         (rule "inEqSimp_homoInEq1" (formula "17") (term "0,1"))
                                                         (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1"))
                                                         (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1"))
                                                         (rule "mul_literals" (formula "17") (term "0,1,0,0,1"))
                                                         (rule "polySimp_addAssoc" (formula "17") (term "0,0,1"))
                                                         (rule "polySimp_addComm1" (formula "17") (term "0,0,0,1"))
                                                         (rule "add_literals" (formula "17") (term "0,0,0,0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,1"))
                                                         (rule "add_literals" (formula "17") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "17") (term "1,0,0,1"))
                                                         (rule "add_literals" (formula "17") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "17") (term "0,1"))
                                                          (builtin "One Step Simplification" (formula "17"))
                                                         (rule "inEqSimp_contradInEq1" (formula "17") (term "1") (ifseqformula "4"))
                                                         (rule "qeq_literals" (formula "17") (term "0,1"))
                                                          (builtin "One Step Simplification" (formula "17"))
                                                         (rule "notLeft" (formula "17"))
                                                         (rule "referencedObjectIsCreatedRightEQ" (formula "38") (ifseqformula "25") (ifseqformula "34"))
                                                         (rule "close" (formula "38") (ifseqformula "12"))
                                                      )
                                                      (branch "CUT: fv_0 = Node::$next FALSE"
                                                          (builtin "One Step Simplification" (formula "7"))
                                                         (rule "seqGetAlphaCast" (formula "22") (term "0"))
                                                         (rule "castedGetAny" (formula "22") (term "0"))
                                                          (builtin "One Step Simplification" (formula "22"))
                                                         (rule "true_left" (formula "22"))
                                                         (rule "seqGetAlphaCast" (formula "23") (term "0"))
                                                         (rule "castedGetAny" (formula "23") (term "0"))
                                                          (builtin "One Step Simplification" (formula "23"))
                                                         (rule "true_left" (formula "23"))
                                                         (rule "onlyCreatedObjectsAreReferenced" (formula "22") (term "1") (ifseqformula "12"))
                                                         (rule "allLeft" (formula "21") (inst "t=i_0"))
                                                         (rule "inEqSimp_homoInEq1" (formula "21") (term "1"))
                                                         (rule "polySimp_addComm1" (formula "21") (term "0,1"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1"))
                                                         (rule "polySimp_mulComm0" (formula "21") (term "1,1"))
                                                         (rule "polySimp_rightDist" (formula "21") (term "1,1"))
                                                         (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1"))
                                                         (rule "mul_literals" (formula "21") (term "0,1,1"))
                                                         (rule "polySimp_elimOne" (formula "21") (term "1,1,1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "21") (term "1") (ifseqformula "2"))
                                                         (rule "inEqSimp_homoInEq1" (formula "21") (term "0,1"))
                                                         (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1"))
                                                         (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1"))
                                                         (rule "mul_literals" (formula "21") (term "0,1,0,0,1"))
                                                         (rule "polySimp_addAssoc" (formula "21") (term "0,0,1"))
                                                         (rule "polySimp_addComm1" (formula "21") (term "0,0,0,1"))
                                                         (rule "add_literals" (formula "21") (term "0,0,0,0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,1"))
                                                         (rule "add_literals" (formula "21") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "21") (term "1,0,0,1"))
                                                         (rule "add_literals" (formula "21") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "21") (term "0,1"))
                                                          (builtin "One Step Simplification" (formula "21"))
                                                         (rule "inEqSimp_contradInEq1" (formula "21") (term "1") (ifseqformula "1"))
                                                         (rule "qeq_literals" (formula "21") (term "0,1"))
                                                          (builtin "One Step Simplification" (formula "21"))
                                                         (rule "replace_known_left" (formula "36") (term "1") (ifseqformula "21"))
                                                          (builtin "One Step Simplification" (formula "36"))
                                                         (rule "allLeft" (formula "22") (inst "t=nv_0"))
                                                         (rule "inEqSimp_homoInEq1" (formula "22") (term "1"))
                                                         (rule "polySimp_addComm1" (formula "22") (term "0,1"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1"))
                                                         (rule "polySimp_mulComm0" (formula "22") (term "1,1"))
                                                         (rule "polySimp_rightDist" (formula "22") (term "1,1"))
                                                         (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1"))
                                                         (rule "mul_literals" (formula "22") (term "0,1,1"))
                                                         (rule "polySimp_elimOne" (formula "22") (term "1,1,1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "22") (term "1") (ifseqformula "3"))
                                                         (rule "inEqSimp_homoInEq1" (formula "22") (term "0,1"))
                                                         (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1"))
                                                         (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1"))
                                                         (rule "mul_literals" (formula "22") (term "0,1,0,0,1"))
                                                         (rule "polySimp_addAssoc" (formula "22") (term "0,0,1"))
                                                         (rule "polySimp_addComm1" (formula "22") (term "0,0,0,1"))
                                                         (rule "add_literals" (formula "22") (term "0,0,0,0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,1"))
                                                         (rule "add_literals" (formula "22") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "22") (term "1,0,0,1"))
                                                         (rule "add_literals" (formula "22") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "22") (term "0,1"))
                                                          (builtin "One Step Simplification" (formula "22"))
                                                         (rule "inEqSimp_contradInEq1" (formula "22") (term "1") (ifseqformula "4"))
                                                         (rule "qeq_literals" (formula "22") (term "0,1"))
                                                          (builtin "One Step Simplification" (formula "22"))
                                                         (rule "allLeft" (formula "17") (inst "t=add(Z(1(#)), nv_0)"))
                                                         (rule "inEqSimp_commuteGeq" (formula "17") (term "1"))
                                                         (rule "inEqSimp_homoInEq0" (formula "17") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "17") (term "1,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "17") (term "1,0,1,0"))
                                                         (rule "mul_literals" (formula "17") (term "0,1,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "17") (term "0,1,0"))
                                                         (rule "add_literals" (formula "17") (term "0,0,1,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "17") (term "1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "17") (term "0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "17") (term "0,1,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "17") (term "1") (ifseqformula "3"))
                                                         (rule "inEqSimp_homoInEq1" (formula "17") (term "0,1"))
                                                         (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1"))
                                                         (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1"))
                                                         (rule "mul_literals" (formula "17") (term "0,1,0,0,1"))
                                                         (rule "polySimp_addAssoc" (formula "17") (term "0,0,1"))
                                                         (rule "polySimp_addComm1" (formula "17") (term "0,0,0,1"))
                                                         (rule "add_literals" (formula "17") (term "0,0,0,0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,1"))
                                                         (rule "add_literals" (formula "17") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "17") (term "1,0,0,1"))
                                                         (rule "add_literals" (formula "17") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "17") (term "0,1"))
                                                          (builtin "One Step Simplification" (formula "17"))
                                                         (rule "inEqSimp_contradInEq1" (formula "17") (term "1") (ifseqformula "4"))
                                                         (rule "qeq_literals" (formula "17") (term "0,1"))
                                                          (builtin "One Step Simplification" (formula "17"))
                                                         (rule "notLeft" (formula "17"))
                                                         (rule "referencedObjectIsCreatedRightEQ" (formula "33") (ifseqformula "22") (ifseqformula "30"))
                                                         (rule "close" (formula "33") (ifseqformula "12"))
                                                      )
                                                   )
                                                )
                                             )
                                          )
                                       )
                                       (branch "Use Case"
                                           (builtin "One Step Simplification" (formula "14"))
                                           (builtin "One Step Simplification" (formula "13"))
                                           (builtin "One Step Simplification" (formula "4"))
                                           (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "2")) (ifInst ""  (formula "2")))
                                          (rule "andLeft" (formula "4"))
                                          (rule "eqSymm" (formula "17"))
                                          (rule "eqSymm" (formula "16"))
                                          (rule "eqSymm" (formula "18"))
                                          (rule "eqSymm" (formula "6"))
                                          (rule "eqSymm" (formula "19"))
                                          (rule "eqSymm" (formula "15") (term "1,1,0"))
                                          (rule "eqSymm" (formula "15") (term "0,1,0,1,0,1,0"))
                                          (rule "eqSymm" (formula "15") (term "1,0,0,1,0"))
                                          (rule "eqSymm" (formula "15") (term "1,1,0,1,0,1,0"))
                                          (rule "eqSymm" (formula "14"))
                                          (rule "polySimp_elimSub" (formula "17") (term "1,0,2,0"))
                                          (rule "mul_literals" (formula "17") (term "1,1,0,2,0"))
                                          (rule "polySimp_elimSub" (formula "15") (term "1,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "15") (term "1,1,0,0,1,1,0"))
                                          (rule "polySimp_addComm0" (formula "15") (term "1,0,2,0,1,1,0"))
                                          (rule "polySimp_addComm0" (formula "17") (term "1,0,2,0"))
                                          (rule "polySimp_addComm0" (formula "15") (term "1,0,0,1,1,0"))
                                          (rule "subsetSingletonLeft" (formula "12"))
                                          (rule "subsetSingletonLeft" (formula "13"))
                                          (rule "castedGetAny" (formula "1") (term "1,0,1,1,0"))
                                          (rule "castedGetAny" (formula "15") (term "0,0,0,0,0,1,0"))
                                          (rule "castedGetAny" (formula "16") (term "2,0"))
                                          (rule "castedGetAny" (formula "6") (term "0"))
                                          (rule "castedGetAny" (formula "15") (term "1,1,1,1,0"))
                                          (rule "castedGetAny" (formula "15") (term "1,0,1,0,1,0,1,0"))
                                          (rule "castedGetAny" (formula "15") (term "0,0,1,0,1,0,1,0"))
                                          (rule "castedGetAny" (formula "15") (term "1,1,1,0,0,1,0"))
                                          (rule "castedGetAny" (formula "15") (term "0,1,0,0,1,0"))
                                          (rule "eqSymm" (formula "15") (term "1,0,0,1,0"))
                                          (rule "castedGetAny" (formula "14") (term "0,1,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "1") (term "0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,1,0"))
                                          (rule "castedGetAny" (formula "15") (term "2,0,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0,1,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0,1,0,1,0"))
                                          (rule "castedGetAny" (formula "17") (term "2,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "5"))
                                          (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "5") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0,1,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0,1,0,1,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "4"))
                                          (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0,1,0"))
                                          (rule "applyEq" (formula "6") (term "1") (ifseqformula "2"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,1,0"))
                                          (rule "mul_literals" (formula "1") (term "0,1,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,1,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
                                          (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0,1,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0,1,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0,1,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0,1,0,1,0"))
                                          (rule "mul_literals" (formula "15") (term "0,1,1,0,0,1,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0,1,0,1,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                                          (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                          (rule "polySimp_elimOne" (formula "5") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0,1,0"))
                                          (rule "mul_literals" (formula "14") (term "0,1,1,0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0,1,0"))
                                          (rule "elementOfUnionEQ" (formula "12") (ifseqformula "14"))
                                           (builtin "One Step Simplification" (formula "12"))
                                          (rule "true_left" (formula "12"))
                                          (rule "elementOfUnionEQ" (formula "12") (ifseqformula "13"))
                                           (builtin "One Step Simplification" (formula "12"))
                                          (rule "true_left" (formula "12"))
                                          (rule "nnf_imp2or" (formula "1") (term "0"))
                                          (rule "inEqSimp_notGeq" (formula "1") (term "0,0"))
                                          (rule "times_zero_1" (formula "1") (term "1,0,0,0,0"))
                                          (rule "add_zero_right" (formula "1") (term "0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "nnf_imp2or" (formula "13") (term "0"))
                                          (rule "nnf_imp2or" (formula "1") (term "1,0"))
                                          (rule "inEqSimp_notLeq" (formula "1") (term "0,1,0"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0,1,0"))
                                          (rule "mul_literals" (formula "1") (term "0,1,0,0,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,1,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,0,0,1,0"))
                                          (rule "add_zero_left" (formula "1") (term "0,0,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,0,1,0"))
                                          (rule "nnf_notAnd" (formula "13") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "13") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "13") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "13") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "13") (term "0,0,0"))
                                          (rule "mul_literals" (formula "13") (term "1,0,0,0,0,0"))
                                          (rule "add_zero_right" (formula "13") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
                                          (rule "mul_literals" (formula "13") (term "1,0,0,0"))
                                          (rule "nnf_imp2or" (formula "13") (term "0,1,0,1,0"))
                                          (rule "nnf_notAnd" (formula "13") (term "0,0,1,0,1,0"))
                                          (rule "inEqSimp_notLeq" (formula "13") (term "1,0,0,1,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,0,1,0,1,0"))
                                          (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,0,1,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0,1,0,1,0"))
                                          (rule "add_literals" (formula "13") (term "0,0,0,1,0,0,1,0,1,0"))
                                          (rule "add_zero_left" (formula "13") (term "0,0,1,0,0,1,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0,1,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,1,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,1,0,1,0"))
                                          (rule "inEqSimp_notGeq" (formula "13") (term "0,0,0,1,0,1,0"))
                                          (rule "times_zero_1" (formula "13") (term "1,0,0,0,0,0,1,0,1,0"))
                                          (rule "add_zero_right" (formula "13") (term "0,0,0,0,0,1,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0,1,0,1,0"))
                                          (rule "mul_literals" (formula "13") (term "1,0,0,0,1,0,1,0"))
                                          (rule "nnf_imp2or" (formula "13") (term "1,0,1,0,1,0"))
                                          (rule "commute_or" (formula "3") (term "1"))
                                          (rule "Class_invariant_axiom_for_LinkedList" (formula "21") (inst "i=i") (inst "j=j") (inst "i_0=i_0") (ifseqformula "20"))
                                           (builtin "One Step Simplification" (formula "21"))
                                          (rule "eqSymm" (formula "21") (term "1,0,0,1,0,1,0,0,0"))
                                          (rule "eqSymm" (formula "21") (term "0,1"))
                                          (rule "eqSymm" (formula "21") (term "1,0,0,0,0"))
                                          (rule "eqSymm" (formula "21") (term "1,1"))
                                          (rule "eqSymm" (formula "21") (term "1,0,0"))
                                          (rule "eqSymm" (formula "21") (term "1,1,0,1,0,0,0"))
                                          (rule "eqSymm" (formula "21") (term "0,1,0,1,0,1,0,1,0,0,0"))
                                          (rule "eqSymm" (formula "21") (term "1,1,0,1,0,1,0,1,0,0,0"))
                                          (rule "eqSymm" (formula "21") (term "1,0"))
                                          (rule "polySimp_elimSub" (formula "21") (term "1,0,0,1,1,0,1,0,0,0"))
                                          (rule "mul_literals" (formula "21") (term "1,1,0,0,1,1,0,1,0,0,0"))
                                          (rule "polySimp_elimSub" (formula "21") (term "1,0,2,0,1,0"))
                                          (rule "mul_literals" (formula "21") (term "1,1,0,2,0,1,0"))
                                          (rule "polySimp_addComm0" (formula "21") (term "1,0,2,0,1,1,0,1,0,0,0"))
                                          (rule "polySimp_addComm0" (formula "21") (term "1,0,0,1,1,0,1,0,0,0"))
                                          (rule "polySimp_addComm0" (formula "21") (term "1,0,2,0,1,0"))
                                          (rule "dismissNonSelectedField" (formula "21") (term "1,1,0,0,1,0,1,0,1,0,0,0"))
                                          (rule "castedGetAny" (formula "21") (term "0,0,0,0,0,1,0,1,0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "21") (term "1,1,0,0,0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "21") (term "1,1,0,0,1,0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "21") (term "1,0,0,0,0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "21") (term "0,0,1,1,1,0,0,1,0,1,0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "21") (term "0,0,0,1,0,0,1,0,1,0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "21") (term "1,0,1"))
                                          (rule "dismissNonSelectedField" (formula "21") (term "0,0,0,1"))
                                          (rule "dismissNonSelectedField" (formula "21") (term "1,1,0,0,1,0,1,0,0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "21") (term "1,1,0,0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "21") (term "0,0,0,1,0,1,0,1,0,0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "21") (term "0,0,1,1"))
                                          (rule "eqSymm" (formula "21") (term "1,1"))
                                          (rule "castedGetAny" (formula "21") (term "2,0,1,0,0"))
                                          (rule "dismissNonSelectedField" (formula "21") (term "0,0,0,1,0,0"))
                                          (rule "dismissNonSelectedField" (formula "21") (term "1,1,0,0"))
                                          (rule "castedGetAny" (formula "21") (term "1,1,1,1,0,1,0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "21") (term "0,0,2,0,1,1,0,1,0,0,0"))
                                          (rule "castedGetAny" (formula "21") (term "1,0,1,0,1,0,1,0,1,0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "21") (term "0,0,0,0,1,0,1,0,1,0,1,0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "21") (term "0,0,2,0,1,0"))
                                          (rule "dismissNonSelectedField" (formula "21") (term "1,1,0"))
                                          (rule "dismissNonSelectedField" (formula "21") (term "0,0,0,1,0"))
                                          (rule "dismissNonSelectedField" (formula "21") (term "1,1,0,0,1,1,0,1,0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "21") (term "1,1,0,2,0,1,0"))
                                          (rule "dismissNonSelectedField" (formula "21") (term "1,1,0,0,1,0,1,0,1,0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "21") (term "0,0,0,0,0,0,1,0,1,0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "21") (term "1,1,0,0,0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "21") (term "1,1,0,0,1,0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "21") (term "1,0,0,0,0,0,0"))
                                          (rule "castedGetAny" (formula "21") (term "1,1,1,0,0,1,0,1,0,0,0"))
                                          (rule "castedGetAny" (formula "21") (term "0,1,0,0,1,0,1,0,0,0"))
                                          (rule "eqSymm" (formula "21") (term "1,0,0,1,0,1,0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "21") (term "1,0,1"))
                                          (rule "dismissNonSelectedField" (formula "21") (term "0,0,0,1"))
                                          (rule "dismissNonSelectedField" (formula "21") (term "1,1,0,0,1,0,1,0,0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "21") (term "1,1,0,0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "21") (term "0,0,0,1,0,1,0,1,0,0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "21") (term "0,1,1"))
                                          (rule "eqSymm" (formula "21") (term "1,1"))
                                          (rule "dismissNonSelectedField" (formula "21") (term "0,2,0,1,0,0"))
                                          (rule "dismissNonSelectedField" (formula "21") (term "0,0,0,1,0,0"))
                                          (rule "dismissNonSelectedField" (formula "21") (term "1,1,0,0"))
                                          (rule "dismissNonSelectedField" (formula "21") (term "1,1,1,0,1,0,0,0"))
                                          (rule "castedGetAny" (formula "21") (term "2,0,1,1,0,1,0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "21") (term "0,1,0,1,0,1,0,1,0,1,0,0,0"))
                                          (rule "castedGetAny" (formula "21") (term "0,0,1,0,1,0,1,0,1,0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "21") (term "0,0,2,0,1,0"))
                                          (rule "dismissNonSelectedField" (formula "21") (term "1,1,0"))
                                          (rule "dismissNonSelectedField" (formula "21") (term "0,0,0,1,0"))
                                          (rule "dismissNonSelectedField" (formula "21") (term "1,1,0,0,1,1,0,1,0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "21") (term "1,1,0,2,0,1,0"))
                                          (rule "dismissNonSelectedField" (formula "21") (term "1,1,0,0,1,0,1,0,1,0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "21") (term "0,0,0,0,0,0,1,0,1,0,0,0"))
                                          (rule "subsetSingletonLeft" (formula "21") (term "1,0,0,0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "21") (term "1,1,0,0,1,0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "21") (term "1,0,0,0,0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "21") (term "0,1,1,0,0,1,0,1,0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "21") (term "0,1,0,1,0,0,1,0,1,0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "21") (term "1,0,1"))
                                          (rule "dismissNonSelectedField" (formula "21") (term "0,0,0,1"))
                                          (rule "dismissNonSelectedField" (formula "21") (term "1,1,0,0,1,0,1,0,0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "21") (term "1,1,0,0,0,0"))
                                          (rule "castedGetAny" (formula "21") (term "0,1,0,1,0,1,0,0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "21") (term "1,1,1"))
                                          (rule "dismissNonSelectedField" (formula "21") (term "0,0,1,1"))
                                          (rule "dismissNonSelectedField" (formula "21") (term "0,2,0,1,0,0"))
                                          (rule "dismissNonSelectedField" (formula "21") (term "0,0,0,1,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0,0,1,0,1,0,1,0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0,0,1,0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "21") (term "1,1,0,0"))
                                          (rule "dismissNonSelectedField" (formula "21") (term "0,1,1,1,1,0,1,0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "21") (term "0,2,0,1,1,0,1,0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "21") (term "0,1,0,1,0,1,0,1,0,1,0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0,0,1,0,1,0,0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "21") (term "0,0,0,1,0,1,0,1,0,1,0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "21") (term "0,0,2,0,1,0"))
                                          (rule "dismissNonSelectedField" (formula "21") (term "1,1,0"))
                                          (rule "dismissNonSelectedField" (formula "21") (term "0,0,0,1,0"))
                                          (rule "dismissNonSelectedField" (formula "21") (term "1,1,0,0,1,1,0,1,0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "21") (term "1,1,0,2,0,1,0"))
                                          (rule "dismissNonSelectedField" (formula "21") (term "0,0,0,0,0,0,1,0,1,0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "21") (term "2,1,0,0,0,0,0"))
                                          (rule "subsetSingletonLeft" (formula "21") (term "0,0,0,0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "21") (term "0,1,1,0,0,1,0,1,0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "21") (term "0,1,0,1,0,0,1,0,1,0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "21") (term "0,0,1,0,1,0,1,0,0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "21") (term "1,1,1"))
                                          (rule "dismissNonSelectedField" (formula "21") (term "0,0,1,1"))
                                          (rule "dismissNonSelectedField" (formula "21") (term "0,2,0,1,0,0"))
                                          (rule "dismissNonSelectedField" (formula "21") (term "0,1,1,1,1,0,1,0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "21") (term "0,2,0,1,1,0,1,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0,1,0,1,0,1,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0,1,0,1,0,1,0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "21") (term "0,1,0,1,0,1,0,1,0,1,0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "21") (term "0,0,0,1,0,1,0,1,0,1,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0,1,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0,1,0,0,0"))
                                          (rule "castedGetAny" (formula "21") (term "2,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0,1,0,1,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0,1,0,1,0,0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "21") (term "0,1,1,1,1,0,1,0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "21") (term "1,1,1,0,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0,1,0,1,0,1,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0,1,0,1,0,1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0,1,0,1,0,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0,1,0,1,0,1,0,0,0"))
                                          (rule "mul_literals" (formula "21") (term "0,1,1,0,0,1,0,1,0,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0,1,0,1,0,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0,1,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0,1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0,1,0,0,0"))
                                          (rule "mul_literals" (formula "21") (term "0,1,1,0,0,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0,1,0,1,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0,1,0,1,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0,1,0,1,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0,1,0,1,0,0,0,0"))
                                          (rule "mul_literals" (formula "21") (term "0,1,1,0,0,1,0,1,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0,1,0,1,0,0,0,0"))
                                          (rule "pullOutSelect" (formula "21") (term "1,0,1") (inst "selectSK=LinkedList_size_0"))
                                          (rule "applyEq" (formula "22") (term "1,1,2,0,1,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "22") (term "0,0,0,1,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "22") (term "1,1,1,0,0,1,0,1,0,0,0,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "22") (term "1,1,1,0,0,1,0,1,0,1,0,0,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "22") (term "1,1,1,0,0,1,0,0,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "22") (term "0,0,0,1,0,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "22") (term "1,1,0,0,1,1,0,1,0,0,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "22") (term "1,1,1") (ifseqformula "1"))
                                          (rule "simplifySelectOfCreate" (formula "1"))
                                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
                                          (rule "applyEqReverse" (formula "22") (term "1,0,1") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "22") (term "1,1,2,0,1,0") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "22") (term "0,0,0,1,0") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "22") (term "1,1,1,0,0,1,0,1,0,0,0,0") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "22") (term "1,1,1,0,0,1,0,1,0,1,0,0,0") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "22") (term "1,1,1,0,0,1,0,0,0") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "22") (term "0,0,0,1,0,0") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "22") (term "1,1,0,0,1,1,0,1,0,0,0") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "22") (term "1,1,1") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "pullOutSelect" (formula "21") (term "0,0,0,1") (inst "selectSK=List_seq_0"))
                                          (rule "applyEq" (formula "22") (term "0,1,1,0,0,1,0,1,0,0,0") (ifseqformula "1"))
                                          (rule "simplifySelectOfCreate" (formula "1"))
                                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
                                          (rule "applyEqReverse" (formula "22") (term "0,0,0,1") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "22") (term "0,1,1,0,0,1,0,1,0,0,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "replace_known_left" (formula "21") (term "0,1") (ifseqformula "16"))
                                           (builtin "One Step Simplification" (formula "21"))
                                          (rule "pullOutSelect" (formula "21") (term "0,0,0,1,0,1,0,1,0,1,0,0,0") (inst "selectSK=LinkedList_nodeseq_0"))
                                          (rule "applyEq" (formula "22") (term "0,1,0,1,0,0,1,0,1,0,0,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "22") (term "0,2,0,1,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "22") (term "0,2,0,1,0,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "22") (term "0,0,1,0,1,0,1,0,0,0,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "22") (term "0,1,0,1,0,1,0,1,0,1,0,0,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "22") (term "0,2,0,1,1,0,1,0,0,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "22") (term "0,0,1") (ifseqformula "1"))
                                          (rule "applyEq" (formula "22") (term "0,1,1,1,1,0,1,0,0,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "22") (term "0,0,0,0,0,0,1,0,1,0,0,0") (ifseqformula "1"))
                                          (rule "simplifySelectOfCreate" (formula "1"))
                                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
                                          (rule "applyEqReverse" (formula "22") (term "0,0,0,1,0,1,0,1,0,1,0,0,0") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "22") (term "0,1,0,1,0,0,1,0,1,0,0,0") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "22") (term "0,2,0,1,0") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "22") (term "0,2,0,1,0,0") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "22") (term "0,0,1,0,1,0,1,0,0,0,0") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "22") (term "0,1,0,1,0,1,0,1,0,1,0,0,0") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "22") (term "0,2,0,1,1,0,1,0,0,0") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "22") (term "0,0,1") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "22") (term "0,1,1,1,1,0,1,0,0,0") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "22") (term "0,0,0,0,0,0,1,0,1,0,0,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "replace_known_left" (formula "21") (term "1") (ifseqformula "17"))
                                           (builtin "One Step Simplification" (formula "21"))
                                          (rule "applyEq" (formula "21") (term "0,1,0") (ifseqformula "14"))
                                          (rule "eqSymm" (formula "21") (term "1,0"))
                                          (rule "applyEq" (formula "21") (term "0,1,0,0,0") (ifseqformula "12"))
                                          (rule "eqSymm" (formula "21") (term "1,0,0,0"))
                                          (rule "applyEq" (formula "21") (term "0,1") (ifseqformula "15"))
                                          (rule "eqSymm" (formula "21") (term "1"))
                                          (rule "pullOutSelect" (formula "21") (term "2,0,0,0,0,0") (inst "selectSK=List_footprint_0"))
                                          (rule "applyEq" (formula "22") (term "2,1,0,0,0,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "22") (term "0,1,0,0,0") (ifseqformula "1"))
                                          (rule "simplifySelectOfCreate" (formula "1"))
                                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
                                          (rule "applyEqReverse" (formula "22") (term "2,0,0,0,0,0") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "22") (term "2,1,0,0,0,0") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "22") (term "0,1,0,0,0") (ifseqformula "1"))
                                           (builtin "One Step Simplification" (formula "22"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "elementOfUnionEQ" (formula "21") (term "0,0,0,0") (ifseqformula "12"))
                                           (builtin "One Step Simplification" (formula "21"))
                                          (rule "elementOfUnionEQ" (formula "21") (term "0,0,0") (ifseqformula "12"))
                                           (builtin "One Step Simplification" (formula "21"))
                                          (rule "pullOutSelect" (formula "21") (term "0,1,0") (inst "selectSK=LinkedList_first_0"))
                                          (rule "simplifySelectOfCreate" (formula "1"))
                                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
                                          (rule "applyEqReverse" (formula "22") (term "0,1,0") (ifseqformula "1"))
                                           (builtin "One Step Simplification" (formula "22"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "pullOutSelect" (formula "21") (term "0,1") (inst "selectSK=LinkedList_last_0"))
                                          (rule "simplifySelectOfCreate" (formula "1"))
                                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
                                          (rule "applyEqReverse" (formula "22") (term "0,1") (ifseqformula "1"))
                                           (builtin "One Step Simplification" (formula "22"))
                                          (rule "allRight" (formula "22") (inst "sk=i_0"))
                                          (rule "impRight" (formula "22"))
                                          (rule "andLeft" (formula "1"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "polySimp_homoEq" (formula "23") (term "0,0,1"))
                                          (rule "polySimp_addComm1" (formula "23") (term "0,0,0,1"))
                                          (rule "inEqSimp_homoInEq0" (formula "2"))
                                          (rule "polySimp_addComm1" (formula "2") (term "0"))
                                          (rule "polySimp_sepPosMonomial" (formula "23") (term "0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1"))
                                          (rule "mul_literals" (formula "23") (term "0,1,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,1"))
                                          (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0,1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                          (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                          (rule "polySimp_rightDist" (formula "2") (term "1"))
                                          (rule "mul_literals" (formula "2") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                          (rule "pullOutSelect" (formula "23") (term "1,1") (inst "selectSK=Node_next_0"))
                                          (rule "simplifySelectOfStore" (formula "1"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "castDel" (formula "1") (term "1,0"))
                                          (rule "eqSymm" (formula "1") (term "0,0"))
                                          (rule "pullOutSelect" (formula "24") (term "0,1,0,0") (inst "selectSK=Node_data_0"))
                                          (rule "simplifySelectOfStore" (formula "1"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "castDel" (formula "1") (term "1,0"))
                                          (rule "eqSymm" (formula "25") (term "1,0,0"))
                                          (rule "eqSymm" (formula "1") (term "0,0"))
                                          (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                          (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                          (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=Node_next_1"))
                                          (rule "simplifySelectOfCreate" (formula "2"))
                                           (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "24")))
                                          (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=Node_data_1"))
                                          (rule "simplifySelectOfCreate" (formula "1"))
                                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "24")))
                                          (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "shift_paren_or" (formula "5") (term "0"))
                                          (rule "nnf_imp2or" (formula "25") (term "0,1,0"))
                                          (rule "shift_paren_or" (formula "7"))
                                          (rule "nnf_imp2or" (formula "25") (term "1,0,1,0"))
                                          (rule "nnf_notAnd" (formula "25") (term "0,0,1,0"))
                                          (rule "inEqSimp_notLeq" (formula "25") (term "1,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,0,1,0"))
                                          (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0,1,0"))
                                          (rule "add_literals" (formula "25") (term "0,0,0,1,0,0,1,0"))
                                          (rule "add_zero_left" (formula "25") (term "0,0,1,0,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "1,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,1,0"))
                                          (rule "inEqSimp_notGeq" (formula "25") (term "0,0,0,1,0"))
                                          (rule "mul_literals" (formula "25") (term "1,0,0,0,0,0,1,0"))
                                          (rule "add_literals" (formula "25") (term "0,0,0,0,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0,1,0"))
                                          (rule "mul_literals" (formula "25") (term "1,0,0,0,1,0"))
                                          (rule "ifthenelse_to_or_left" (formula "17") (term "1,1,0"))
                                          (rule "eqSymm" (formula "17") (term "1,0,1,1,0"))
                                          (rule "eqSymm" (formula "17") (term "1,1,1,1,0"))
                                          (rule "shift_paren_or" (formula "17") (term "0,1,0,1,0"))
                                          (rule "ifthenelse_split" (formula "18") (term "0"))
                                          (branch "self.size = 0 TRUE"
                                             (rule "eqSymm" (formula "19"))
                                             (rule "replace_known_left" (formula "20") (term "0,0") (ifseqformula "18"))
                                              (builtin "One Step Simplification" (formula "20"))
                                             (rule "eqSymm" (formula "20"))
                                             (rule "applyEq" (formula "17") (term "1,1,0,0") (ifseqformula "18"))
                                             (rule "applyEq" (formula "9") (term "0") (ifseqformula "18"))
                                             (rule "inEqSimp_homoInEq1" (formula "9"))
                                             (rule "mul_literals" (formula "9") (term "1,0"))
                                             (rule "add_zero_right" (formula "9") (term "0"))
                                             (rule "applyEq" (formula "16") (term "1,1,1,0,0,1,0") (ifseqformula "18"))
                                             (rule "add_literals" (formula "16") (term "1,1,0,0,1,0"))
                                             (rule "applyEq" (formula "26") (term "0,0,0,1") (ifseqformula "18"))
                                             (rule "polySimp_homoEq" (formula "26") (term "0,0,1"))
                                             (rule "mul_literals" (formula "26") (term "1,0,0,0,1"))
                                             (rule "add_zero_right" (formula "26") (term "0,0,0,1"))
                                             (rule "applyEq" (formula "26") (term "1,1,0,0,1,0") (ifseqformula "18"))
                                             (rule "applyEq" (formula "4") (term "0") (ifseqformula "18"))
                                             (rule "inEqSimp_homoInEq1" (formula "4"))
                                             (rule "times_zero_2" (formula "4") (term "1,0"))
                                             (rule "add_zero_right" (formula "4") (term "0"))
                                             (rule "applyEq" (formula "5") (term "1,1,0,0") (ifseqformula "18"))
                                             (rule "applyEq" (formula "17") (term "1,1,0,0,0,1,0,1,0") (ifseqformula "18"))
                                             (rule "applyEq" (formula "17") (term "1,1,0,0,0,1,1,0") (ifseqformula "18"))
                                             (rule "add_literals" (formula "17") (term "1,0,0,0,1,1,0"))
                                             (rule "applyEq" (formula "17") (term "1,1,0,1,1,1,0") (ifseqformula "18"))
                                             (rule "add_literals" (formula "17") (term "1,0,1,1,1,0"))
                                             (rule "applyEq" (formula "22") (term "1") (ifseqformula "18"))
                                             (rule "applyEq" (formula "21") (term "1") (ifseqformula "18"))
                                             (rule "polySimp_sepPosMonomial" (formula "26") (term "0,0,1"))
                                             (rule "mul_literals" (formula "26") (term "1,0,0,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "9"))
                                             (rule "mul_literals" (formula "9") (term "1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                             (rule "mul_literals" (formula "4") (term "1"))
                                             (rule "inEqSimp_contradEq7" (formula "26") (term "0,0,1") (ifseqformula "3"))
                                             (rule "add_zero_left" (formula "26") (term "0,0,0,0,1"))
                                             (rule "mul_literals" (formula "26") (term "0,0,0,0,1"))
                                             (rule "leq_literals" (formula "26") (term "0,0,0,1"))
                                              (builtin "One Step Simplification" (formula "26"))
                                             (rule "inEqSimp_contradInEq0" (formula "8") (ifseqformula "9"))
                                             (rule "qeq_literals" (formula "8") (term "0"))
                                              (builtin "One Step Simplification" (formula "8"))
                                             (rule "closeFalse" (formula "8"))
                                          )
                                          (branch "self.size = 0 FALSE"
                                             (rule "replace_known_right" (formula "19") (term "0,0") (ifseqformula "22"))
                                              (builtin "One Step Simplification" (formula "19"))
                                             (rule "lenNonNegative" (formula "20") (term "0"))
                                             (rule "inEqSimp_commuteLeq" (formula "20"))
                                             (rule "applyEq" (formula "20") (term "0") (ifseqformula "21"))
                                             (rule "inEqSimp_strengthen1" (formula "20") (ifseqformula "23"))
                                             (rule "add_literals" (formula "20") (term "1"))
                                             (rule "inEqSimp_contradEq7" (formula "23") (ifseqformula "20"))
                                             (rule "mul_literals" (formula "23") (term "1,0,0"))
                                             (rule "add_literals" (formula "23") (term "0,0"))
                                             (rule "leq_literals" (formula "23") (term "0"))
                                              (builtin "One Step Simplification" (formula "23"))
                                             (rule "false_right" (formula "23"))
                                             (rule "lenNonNegative" (formula "22") (term "0"))
                                             (rule "inEqSimp_commuteLeq" (formula "22"))
                                             (rule "applyEq" (formula "22") (term "0") (ifseqformula "23"))
                                             (rule "inEqSimp_subsumption1" (formula "22") (ifseqformula "20"))
                                             (rule "leq_literals" (formula "22") (term "0"))
                                              (builtin "One Step Simplification" (formula "22"))
                                             (rule "true_left" (formula "22"))
                                             (rule "seqGetAlphaCast" (formula "10") (term "0"))
                                             (rule "castedGetAny" (formula "10") (term "0"))
                                              (builtin "One Step Simplification" (formula "10"))
                                             (rule "true_left" (formula "10"))
                                             (rule "commute_or_2" (formula "5") (term "0"))
                                             (rule "commute_or" (formula "5") (term "0,0"))
                                             (rule "commute_or" (formula "17") (term "0,1,1,0"))
                                             (rule "commute_or" (formula "17") (term "1,1,1,0"))
                                             (rule "commute_or_2" (formula "17") (term "0,0,1,0,1,0"))
                                             (rule "commute_or" (formula "17") (term "0,0,0,1,0,1,0"))
                                             (rule "ifthenelse_split" (formula "26") (term "0,1"))
                                             (branch "self.size = 1 + i_0 TRUE"
                                                (rule "eqSymm" (formula "27") (term "1"))
                                                (rule "applyEq" (formula "21") (term "0") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq1" (formula "21"))
                                                (rule "polySimp_mulComm0" (formula "21") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "21") (term "1,0"))
                                                (rule "mul_literals" (formula "21") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "21") (term "0"))
                                                (rule "add_literals" (formula "21") (term "0,0"))
                                                (rule "add_zero_left" (formula "21") (term "0"))
                                                (rule "applyEq" (formula "6") (term "1,1,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "17") (term "1,1,1,0,0,1,0") (ifseqformula "1"))
                                                (rule "polySimp_addAssoc" (formula "17") (term "1,1,0,0,1,0"))
                                                (rule "add_literals" (formula "17") (term "0,1,1,0,0,1,0"))
                                                (rule "add_zero_left" (formula "17") (term "1,1,0,0,1,0"))
                                                (rule "applyEq" (formula "18") (term "1,1,0,0,1,0,1,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "20") (term "1,1,0") (ifseqformula "1"))
                                                (rule "polySimp_addAssoc" (formula "20") (term "1,0"))
                                                (rule "add_literals" (formula "20") (term "0,1,0"))
                                                (rule "add_zero_left" (formula "20") (term "1,0"))
                                                (rule "applyEq" (formula "18") (term "1,1,0,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "10") (term "0") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq1" (formula "10"))
                                                (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "10") (term "1,0"))
                                                (rule "mul_literals" (formula "10") (term "0,1,0"))
                                                (rule "polySimp_addComm1" (formula "10") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "10") (term "0,0"))
                                                (rule "add_literals" (formula "10") (term "0,0,0"))
                                                (rule "add_zero_left" (formula "10") (term "0,0"))
                                                (rule "applyEq" (formula "27") (term "1,1,0,0,1,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "5") (term "0") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq1" (formula "5"))
                                                (rule "polySimp_pullOutFactor1" (formula "5") (term "0"))
                                                (rule "add_literals" (formula "5") (term "1,0"))
                                                (rule "times_zero_1" (formula "5") (term "0"))
                                                (rule "leq_literals" (formula "5"))
                                                (rule "true_left" (formula "5"))
                                                (rule "applyEq" (formula "26") (term "1,0,0,1,0,1,0") (ifseqformula "19"))
                                                (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "19"))
                                                (rule "applyEq" (formula "26") (term "0,0,0,0,0") (ifseqformula "19"))
                                                (rule "applyEq" (formula "3") (term "1,2,0") (ifseqformula "19"))
                                                (rule "applyEq" (formula "2") (term "0,0,0") (ifseqformula "19"))
                                                (rule "applyEq" (formula "3") (term "0,0,0") (ifseqformula "19"))
                                                (rule "applyEq" (formula "17") (term "1,1,0,1,0,1,1,0") (ifseqformula "1"))
                                                (rule "polySimp_addAssoc" (formula "17") (term "1,0,1,0,1,1,0"))
                                                (rule "add_literals" (formula "17") (term "0,1,0,1,0,1,1,0"))
                                                (rule "add_zero_left" (formula "17") (term "1,0,1,0,1,1,0"))
                                                (rule "applyEq" (formula "17") (term "1,1,1,1,1,1,0") (ifseqformula "1"))
                                                (rule "polySimp_addAssoc" (formula "17") (term "1,1,1,1,1,0"))
                                                (rule "add_literals" (formula "17") (term "0,1,1,1,1,1,0"))
                                                (rule "add_zero_left" (formula "17") (term "1,1,1,1,1,0"))
                                                (rule "applyEq" (formula "22") (term "1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "21") (term "1") (ifseqformula "1"))
                                                (rule "inEqSimp_invertInEq0" (formula "20"))
                                                (rule "mul_literals" (formula "20") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "20") (term "0"))
                                                (rule "polySimp_elimOne" (formula "20") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "9"))
                                                (rule "polySimp_mulLiterals" (formula "9") (term "1"))
                                                (rule "polySimp_elimOne" (formula "9") (term "1"))
                                                (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "9"))
                                                (rule "mul_literals" (formula "8") (term "0,0"))
                                                (rule "add_zero_left" (formula "8") (term "0"))
                                                (rule "all_pull_out1" (formula "17") (term "0,1,0"))
                                                (rule "seqGetAlphaCast" (formula "25") (term "0,1,0,0"))
                                                (rule "castedGetAny" (formula "1") (term "0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "true_left" (formula "1"))
                                                (rule "all_pull_out0" (formula "17") (term "1,0"))
                                                (rule "shift_paren_and" (formula "17") (term "0,1,0"))
                                                (rule "cut_direct" (formula "7") (term "1"))
                                                (branch "CUT: fv_0 = java.lang.Object::<initialized> TRUE"
                                                    (builtin "One Step Simplification" (formula "8"))
                                                   (rule "true_left" (formula "8"))
                                                   (rule "all_pull_out3" (formula "17") (term "0"))
                                                   (rule "cnf_rightDist" (formula "17") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "17") (term "0"))
                                                    (builtin "One Step Simplification" (formula "17"))
                                                   (rule "distr_forallAnd" (formula "17"))
                                                   (rule "andLeft" (formula "17"))
                                                   (rule "shift_paren_or" (formula "18") (term "0"))
                                                   (rule "commute_or_2" (formula "18") (term "0,0"))
                                                   (rule "inEqSimp_or_weaken3" (formula "18") (term "0"))
                                                    (builtin "One Step Simplification" (formula "18"))
                                                   (rule "cnf_rightDist" (formula "17") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "17") (term "0"))
                                                    (builtin "One Step Simplification" (formula "17"))
                                                   (rule "distr_forallAnd" (formula "17"))
                                                   (rule "andLeft" (formula "17"))
                                                   (rule "commute_or_2" (formula "18") (term "0"))
                                                    (builtin "One Step Simplification" (formula "18"))
                                                   (rule "inEqSimp_homoInEq1" (formula "18") (term "1,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,1,1"))
                                                   (rule "add_literals" (formula "18") (term "1,1,0,1,1"))
                                                   (rule "times_zero_1" (formula "18") (term "1,0,1,1"))
                                                   (rule "add_literals" (formula "18") (term "0,1,1"))
                                                   (rule "leq_literals" (formula "18") (term "1,1"))
                                                    (builtin "One Step Simplification" (formula "18"))
                                                   (rule "applyEq" (formula "18") (term "1,0,0") (ifseqformula "21"))
                                                   (rule "inEqSimp_contradInEq1" (formula "18") (term "1") (ifseqformula "4"))
                                                   (rule "qeq_literals" (formula "18") (term "0,1"))
                                                    (builtin "One Step Simplification" (formula "18"))
                                                   (rule "applyEq" (formula "3") (term "2,0") (ifseqformula "18"))
                                                    (builtin "One Step Simplification" (formula "3"))
                                                   (rule "applyEqReverse" (formula "27") (term "0,1") (ifseqformula "3"))
                                                    (builtin "One Step Simplification" (formula "27"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "cnf_rightDist" (formula "16") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "16") (term "0"))
                                                    (builtin "One Step Simplification" (formula "16"))
                                                   (rule "distr_forallAnd" (formula "16"))
                                                   (rule "andLeft" (formula "16"))
                                                   (rule "commute_or_2" (formula "17") (term "0,0"))
                                                   (rule "commute_or_2" (formula "17") (term "0,0,0"))
                                                   (rule "cnf_rightDist" (formula "16") (term "0"))
                                                   (rule "distr_forallAnd" (formula "16"))
                                                   (rule "andLeft" (formula "16"))
                                                   (rule "commute_or" (formula "17") (term "0"))
                                                   (rule "commute_or_2" (formula "16") (term "0"))
                                                   (rule "commute_or" (formula "16") (term "0,0"))
                                                   (rule "commute_or_2" (formula "18") (term "0,0,0,0"))
                                                   (rule "shift_paren_or" (formula "18") (term "0,0,0,0,0"))
                                                   (rule "ifthenelse_split" (formula "2") (term "0"))
                                                   (branch "self.last = n_2 TRUE"
                                                      (rule "referencedObjectIsCreatedRightEQ" (formula "26") (ifseqformula "2") (ifseqformula "27"))
                                                      (rule "close" (formula "26") (ifseqformula "12"))
                                                   )
                                                   (branch "self.last = n_2 FALSE"
                                                      (rule "applyEqReverse" (formula "29") (term "1,1,0") (ifseqformula "2"))
                                                      (rule "hideAuxiliaryEq" (formula "2"))
                                                      (rule "seqGetAlphaCast" (formula "20") (term "0"))
                                                      (rule "castedGetAny" (formula "20") (term "0"))
                                                       (builtin "One Step Simplification" (formula "20"))
                                                      (rule "true_left" (formula "20"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "20") (term "1") (ifseqformula "10"))
                                                      (rule "allLeft" (formula "3") (inst "t=i_0"))
                                                      (rule "inEqSimp_homoInEq1" (formula "3") (term "1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,1"))
                                                      (rule "add_literals" (formula "3") (term "1,1,0,1"))
                                                      (rule "times_zero_1" (formula "3") (term "1,0,1"))
                                                      (rule "add_literals" (formula "3") (term "0,1"))
                                                      (rule "leq_literals" (formula "3") (term "1"))
                                                       (builtin "One Step Simplification" (formula "3"))
                                                      (rule "applyEq" (formula "3") (term "1,0,0") (ifseqformula "23"))
                                                      (rule "inEqSimp_contradInEq1" (formula "3") (term "1") (ifseqformula "2"))
                                                      (rule "qeq_literals" (formula "3") (term "0,1"))
                                                       (builtin "One Step Simplification" (formula "3"))
                                                      (rule "allLeft" (formula "4") (inst "t=i_0_0"))
                                                      (rule "applyEq" (formula "4") (term "1,0,0,0") (ifseqformula "10"))
                                                      (rule "replace_known_right" (formula "4") (term "0,0") (ifseqformula "28"))
                                                       (builtin "One Step Simplification" (formula "4"))
                                                      (rule "inEqSimp_contradInEq1" (formula "4") (term "0") (ifseqformula "8"))
                                                      (rule "qeq_literals" (formula "4") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "4"))
                                                      (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "9"))
                                                      (rule "andLeft" (formula "4"))
                                                      (rule "inEqSimp_homoInEq1" (formula "4"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                                                      (rule "add_literals" (formula "4") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "4") (term "1,0"))
                                                      (rule "add_literals" (formula "4") (term "0"))
                                                      (rule "leq_literals" (formula "4"))
                                                      (rule "closeFalse" (formula "4"))
                                                   )
                                                )
                                                (branch "CUT: fv_0 = java.lang.Object::<initialized> FALSE"
                                                    (builtin "One Step Simplification" (formula "7"))
                                                   (rule "all_pull_out3" (formula "17") (term "0"))
                                                   (rule "cnf_rightDist" (formula "17") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "17") (term "0"))
                                                    (builtin "One Step Simplification" (formula "17"))
                                                   (rule "distr_forallAnd" (formula "17"))
                                                   (rule "andLeft" (formula "17"))
                                                   (rule "shift_paren_or" (formula "18") (term "0"))
                                                   (rule "commute_or_2" (formula "18") (term "0,0"))
                                                   (rule "inEqSimp_or_weaken3" (formula "18") (term "0"))
                                                    (builtin "One Step Simplification" (formula "18"))
                                                   (rule "cnf_rightDist" (formula "17") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "17") (term "0"))
                                                    (builtin "One Step Simplification" (formula "17"))
                                                   (rule "distr_forallAnd" (formula "17"))
                                                   (rule "andLeft" (formula "17"))
                                                   (rule "commute_or_2" (formula "18") (term "0"))
                                                    (builtin "One Step Simplification" (formula "18"))
                                                   (rule "inEqSimp_homoInEq1" (formula "18") (term "1,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,1,1"))
                                                   (rule "add_literals" (formula "18") (term "1,1,0,1,1"))
                                                   (rule "times_zero_1" (formula "18") (term "1,0,1,1"))
                                                   (rule "add_literals" (formula "18") (term "0,1,1"))
                                                   (rule "leq_literals" (formula "18") (term "1,1"))
                                                    (builtin "One Step Simplification" (formula "18"))
                                                   (rule "applyEq" (formula "18") (term "1,0,0") (ifseqformula "21"))
                                                   (rule "inEqSimp_contradInEq1" (formula "18") (term "1") (ifseqformula "4"))
                                                   (rule "qeq_literals" (formula "18") (term "0,1"))
                                                    (builtin "One Step Simplification" (formula "18"))
                                                   (rule "applyEq" (formula "3") (term "2,0") (ifseqformula "18"))
                                                    (builtin "One Step Simplification" (formula "3"))
                                                   (rule "applyEqReverse" (formula "28") (term "0,1") (ifseqformula "3"))
                                                    (builtin "One Step Simplification" (formula "28"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "cnf_rightDist" (formula "16") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "16") (term "0"))
                                                    (builtin "One Step Simplification" (formula "16"))
                                                   (rule "distr_forallAnd" (formula "16"))
                                                   (rule "andLeft" (formula "16"))
                                                   (rule "commute_or_2" (formula "17") (term "0,0"))
                                                   (rule "commute_or_2" (formula "17") (term "0,0,0"))
                                                   (rule "cnf_rightDist" (formula "16") (term "0"))
                                                   (rule "distr_forallAnd" (formula "16"))
                                                   (rule "andLeft" (formula "16"))
                                                   (rule "commute_or_2" (formula "16") (term "0"))
                                                   (rule "commute_or" (formula "17") (term "0"))
                                                   (rule "commute_or" (formula "16") (term "0,0"))
                                                   (rule "commute_or_2" (formula "18") (term "0,0,0,0"))
                                                   (rule "shift_paren_or" (formula "18") (term "0,0,0,0,0"))
                                                   (rule "ifthenelse_split" (formula "2") (term "0"))
                                                   (branch "self.last = n_2 TRUE"
                                                      (rule "referencedObjectIsCreatedRightEQ" (formula "27") (ifseqformula "2") (ifseqformula "28"))
                                                      (rule "close" (formula "27") (ifseqformula "12"))
                                                   )
                                                   (branch "self.last = n_2 FALSE"
                                                      (rule "applyEqReverse" (formula "30") (term "1,1,0") (ifseqformula "2"))
                                                      (rule "hideAuxiliaryEq" (formula "2"))
                                                      (rule "seqGetAlphaCast" (formula "20") (term "0"))
                                                      (rule "castedGetAny" (formula "20") (term "0"))
                                                       (builtin "One Step Simplification" (formula "20"))
                                                      (rule "true_left" (formula "20"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "20") (term "1") (ifseqformula "10"))
                                                      (rule "allLeft" (formula "3") (inst "t=i_0"))
                                                      (rule "inEqSimp_homoInEq1" (formula "3") (term "1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,1"))
                                                      (rule "add_literals" (formula "3") (term "1,1,0,1"))
                                                      (rule "times_zero_1" (formula "3") (term "1,0,1"))
                                                      (rule "add_zero_right" (formula "3") (term "0,1"))
                                                      (rule "leq_literals" (formula "3") (term "1"))
                                                       (builtin "One Step Simplification" (formula "3"))
                                                      (rule "applyEq" (formula "3") (term "1,0,0") (ifseqformula "23"))
                                                      (rule "inEqSimp_contradInEq1" (formula "3") (term "1") (ifseqformula "2"))
                                                      (rule "qeq_literals" (formula "3") (term "0,1"))
                                                       (builtin "One Step Simplification" (formula "3"))
                                                      (rule "allLeft" (formula "4") (inst "t=i_0_0"))
                                                      (rule "applyEq" (formula "4") (term "1,0,0,0") (ifseqformula "10"))
                                                      (rule "replace_known_right" (formula "4") (term "0,0") (ifseqformula "29"))
                                                       (builtin "One Step Simplification" (formula "4"))
                                                      (rule "inEqSimp_contradInEq1" (formula "4") (term "0") (ifseqformula "8"))
                                                      (rule "qeq_literals" (formula "4") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "4"))
                                                      (rule "inEqSimp_contradInEq1" (formula "9") (ifseqformula "4"))
                                                      (rule "andLeft" (formula "9"))
                                                      (rule "inEqSimp_homoInEq1" (formula "9"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "9") (term "0"))
                                                      (rule "add_literals" (formula "9") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "9") (term "1,0"))
                                                      (rule "add_zero_right" (formula "9") (term "0"))
                                                      (rule "leq_literals" (formula "9"))
                                                      (rule "closeFalse" (formula "9"))
                                                   )
                                                )
                                             )
                                             (branch "self.size = 1 + i_0 FALSE"
                                                (rule "inEqSimp_strengthen1" (formula "4") (ifseqformula "26"))
                                                (rule "polySimp_addAssoc" (formula "4") (term "1"))
                                                (rule "add_literals" (formula "4") (term "0,1"))
                                                (rule "inEqSimp_contradEq7" (formula "26") (ifseqformula "4"))
                                                (rule "polySimp_rightDist" (formula "26") (term "1,0,0"))
                                                (rule "mul_literals" (formula "26") (term "0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "26") (term "0,0"))
                                                (rule "polySimp_addComm1" (formula "26") (term "0,0,0"))
                                                (rule "add_literals" (formula "26") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0"))
                                                (rule "add_literals" (formula "26") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "26") (term "1,0,0"))
                                                (rule "add_literals" (formula "26") (term "0,0"))
                                                (rule "leq_literals" (formula "26") (term "0"))
                                                 (builtin "One Step Simplification" (formula "26"))
                                                (rule "false_right" (formula "26"))
                                                (rule "ifthenelse_split" (formula "2") (term "0"))
                                                (branch "(Node)self.nodeseq[i_0] = n_2 TRUE"
                                                   (rule "applyEqReverse" (formula "27") (term "1,1") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "2"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "applyEqReverse" (formula "26") (term "1,1,0,0") (ifseqformula "1"))
                                                   (rule "hideAuxiliaryEq" (formula "1"))
                                                   (rule "applyEq" (formula "25") (term "1,0,0,1,0,1,0") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "25") (term "0,0,0,0,0") (ifseqformula "1"))
                                                   (rule "replace_known_right" (formula "25") (term "0,0,0,0") (ifseqformula "23"))
                                                    (builtin "One Step Simplification" (formula "25"))
                                                   (rule "all_pull_out1" (formula "16") (term "0,1,0"))
                                                   (rule "all_pull_out0" (formula "16") (term "1,0"))
                                                   (rule "shift_paren_and" (formula "16") (term "0,1,0"))
                                                   (rule "all_pull_out3" (formula "16") (term "0"))
                                                   (rule "cnf_rightDist" (formula "16") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "16") (term "0"))
                                                    (builtin "One Step Simplification" (formula "16"))
                                                   (rule "distr_forallAnd" (formula "16"))
                                                   (rule "andLeft" (formula "16"))
                                                   (rule "shift_paren_or" (formula "17") (term "0"))
                                                   (rule "commute_or_2" (formula "17") (term "0,0"))
                                                   (rule "inEqSimp_or_weaken3" (formula "17") (term "0"))
                                                   (rule "polySimp_addAssoc" (formula "17") (term "1,0,1,0"))
                                                   (rule "add_literals" (formula "17") (term "0,1,0,1,0"))
                                                   (rule "add_zero_left" (formula "17") (term "1,0,1,0"))
                                                    (builtin "One Step Simplification" (formula "17"))
                                                   (rule "cnf_rightDist" (formula "16") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "16") (term "0"))
                                                    (builtin "One Step Simplification" (formula "16"))
                                                   (rule "distr_forallAnd" (formula "16"))
                                                   (rule "andLeft" (formula "16"))
                                                   (rule "commute_or_2" (formula "17") (term "0"))
                                                    (builtin "One Step Simplification" (formula "17"))
                                                   (rule "inEqSimp_homoInEq1" (formula "17") (term "1,1"))
                                                   (rule "polySimp_mulComm0" (formula "17") (term "1,0,1,1"))
                                                   (rule "polySimp_rightDist" (formula "17") (term "1,0,1,1"))
                                                   (rule "mul_literals" (formula "17") (term "0,1,0,1,1"))
                                                   (rule "polySimp_addAssoc" (formula "17") (term "0,1,1"))
                                                   (rule "polySimp_addComm0" (formula "17") (term "0,0,1,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,1,1"))
                                                   (rule "add_literals" (formula "17") (term "1,1,0,1,1"))
                                                   (rule "times_zero_1" (formula "17") (term "1,0,1,1"))
                                                   (rule "add_literals" (formula "17") (term "0,1,1"))
                                                   (rule "leq_literals" (formula "17") (term "1,1"))
                                                    (builtin "One Step Simplification" (formula "17"))
                                                   (rule "inEqSimp_homoInEq0" (formula "17") (term "1"))
                                                   (rule "polySimp_mulComm0" (formula "17") (term "1,0,1"))
                                                   (rule "polySimp_rightDist" (formula "17") (term "1,0,1"))
                                                   (rule "mul_literals" (formula "17") (term "0,1,0,1"))
                                                   (rule "polySimp_addAssoc" (formula "17") (term "0,1"))
                                                   (rule "add_literals" (formula "17") (term "0,0,1"))
                                                   (rule "add_zero_left" (formula "17") (term "0,1"))
                                                   (rule "applyEq" (formula "17") (term "1,0,0") (ifseqformula "20"))
                                                   (rule "inEqSimp_invertInEq1" (formula "17") (term "1"))
                                                   (rule "polySimp_mulLiterals" (formula "17") (term "0,1"))
                                                   (rule "times_zero_2" (formula "17") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "17") (term "0,1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "17") (term "1") (ifseqformula "21"))
                                                   (rule "qeq_literals" (formula "17") (term "0,1"))
                                                    (builtin "One Step Simplification" (formula "17"))
                                                   (rule "cnf_rightDist" (formula "16") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "16") (term "0"))
                                                    (builtin "One Step Simplification" (formula "16"))
                                                   (rule "distr_forallAnd" (formula "16"))
                                                   (rule "andLeft" (formula "16"))
                                                   (rule "commute_or_2" (formula "17") (term "0,0"))
                                                   (rule "commute_or_2" (formula "17") (term "0,0,0"))
                                                   (rule "cnf_rightDist" (formula "16") (term "0"))
                                                   (rule "distr_forallAnd" (formula "16"))
                                                   (rule "andLeft" (formula "16"))
                                                   (rule "commute_or_2" (formula "16") (term "0"))
                                                   (rule "commute_or" (formula "17") (term "0"))
                                                   (rule "commute_or" (formula "16") (term "0,0"))
                                                   (rule "commute_or_2" (formula "18") (term "0,0,0,0"))
                                                   (rule "shift_paren_or" (formula "18") (term "0,0,0,0,0"))
                                                   (rule "allLeft" (formula "4") (inst "t=add(Z(1(#)), i_0)"))
                                                   (rule "inEqSimp_commuteGeq" (formula "4") (term "1"))
                                                   (rule "inEqSimp_homoInEq0" (formula "4") (term "1,0"))
                                                   (rule "polySimp_mulComm0" (formula "4") (term "1,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "4") (term "1,0,1,0"))
                                                   (rule "mul_literals" (formula "4") (term "0,1,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "4") (term "0,1,0"))
                                                   (rule "add_literals" (formula "4") (term "0,0,1,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "4") (term "1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "4") (term "0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "4") (term "0,1,0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "4") (term "1,0") (ifseqformula "2"))
                                                   (rule "qeq_literals" (formula "4") (term "0,1,0"))
                                                    (builtin "One Step Simplification" (formula "4"))
                                                   (rule "inEqSimp_contradInEq1" (formula "4") (term "1") (ifseqformula "3"))
                                                   (rule "inEqSimp_homoInEq1" (formula "4") (term "0,1"))
                                                   (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,1"))
                                                   (rule "polySimp_rightDist" (formula "4") (term "1,0,0,1"))
                                                   (rule "mul_literals" (formula "4") (term "0,1,0,0,1"))
                                                   (rule "polySimp_addAssoc" (formula "4") (term "0,0,1"))
                                                   (rule "polySimp_addComm1" (formula "4") (term "0,0,0,1"))
                                                   (rule "add_literals" (formula "4") (term "0,0,0,0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,1"))
                                                   (rule "add_literals" (formula "4") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "4") (term "1,0,0,1"))
                                                   (rule "add_literals" (formula "4") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "4") (term "0,1"))
                                                    (builtin "One Step Simplification" (formula "4"))
                                                   (rule "allLeft" (formula "5") (inst "t=add(Z(neglit(1(#))),
    int::select(heap, self, LinkedList::$size))"))
                                                   (rule "inEqSimp_homoInEq1" (formula "5") (term "1"))
                                                   (rule "polySimp_mulComm0" (formula "5") (term "1,0,1"))
                                                   (rule "polySimp_rightDist" (formula "5") (term "1,0,1"))
                                                   (rule "mul_literals" (formula "5") (term "0,1,0,1"))
                                                   (rule "polySimp_addAssoc" (formula "5") (term "0,1"))
                                                   (rule "polySimp_addComm0" (formula "5") (term "0,0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,1"))
                                                   (rule "add_literals" (formula "5") (term "1,1,0,1"))
                                                   (rule "times_zero_1" (formula "5") (term "1,0,1"))
                                                   (rule "add_literals" (formula "5") (term "0,1"))
                                                   (rule "leq_literals" (formula "5") (term "1"))
                                                    (builtin "One Step Simplification" (formula "5"))
                                                   (rule "inEqSimp_homoInEq0" (formula "5") (term "1"))
                                                   (rule "polySimp_mulComm0" (formula "5") (term "1,0,1"))
                                                   (rule "polySimp_rightDist" (formula "5") (term "1,0,1"))
                                                   (rule "mul_literals" (formula "5") (term "0,1,0,1"))
                                                   (rule "polySimp_addAssoc" (formula "5") (term "0,1"))
                                                   (rule "add_literals" (formula "5") (term "0,0,1"))
                                                   (rule "add_zero_left" (formula "5") (term "0,1"))
                                                   (rule "applyEq" (formula "5") (term "1,0,0") (ifseqformula "24"))
                                                   (rule "inEqSimp_invertInEq1" (formula "5") (term "1"))
                                                   (rule "mul_literals" (formula "5") (term "1,1"))
                                                   (rule "polySimp_mulLiterals" (formula "5") (term "0,1"))
                                                   (rule "polySimp_elimOne" (formula "5") (term "0,1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "5") (term "1") (ifseqformula "25"))
                                                   (rule "qeq_literals" (formula "5") (term "0,1"))
                                                    (builtin "One Step Simplification" (formula "5"))
                                                   (rule "allLeft" (formula "6") (inst "t=Z(0(#))"))
                                                   (rule "leq_literals" (formula "6") (term "1,0"))
                                                    (builtin "One Step Simplification" (formula "6"))
                                                   (rule "inEqSimp_commuteGeq" (formula "6") (term "1"))
                                                   (rule "applyEq" (formula "6") (term "1,0,0") (ifseqformula "24"))
                                                   (rule "inEqSimp_contradInEq1" (formula "6") (term "1") (ifseqformula "26"))
                                                   (rule "qeq_literals" (formula "6") (term "0,1"))
                                                    (builtin "One Step Simplification" (formula "6"))
                                                   (rule "allLeft" (formula "7") (inst "t=i_0_0"))
                                                   (rule "inEqSimp_commuteGeq" (formula "7") (term "1"))
                                                   (rule "applyEq" (formula "7") (term "1,0,0,0") (ifseqformula "13"))
                                                   (rule "replace_known_right" (formula "7") (term "0,0") (ifseqformula "30"))
                                                    (builtin "One Step Simplification" (formula "7"))
                                                   (rule "inEqSimp_contradInEq1" (formula "7") (term "0") (ifseqformula "11"))
                                                   (rule "qeq_literals" (formula "7") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "7"))
                                                   (rule "inEqSimp_contradInEq1" (formula "7") (ifseqformula "12"))
                                                   (rule "andLeft" (formula "7"))
                                                   (rule "inEqSimp_homoInEq1" (formula "7"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "7") (term "0"))
                                                   (rule "add_literals" (formula "7") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "7") (term "1,0"))
                                                   (rule "add_literals" (formula "7") (term "0"))
                                                   (rule "leq_literals" (formula "7"))
                                                   (rule "closeFalse" (formula "7"))
                                                )
                                                (branch "(Node)self.nodeseq[i_0] = n_2 FALSE"
                                                   (rule "applyEqReverse" (formula "27") (term "1,1") (ifseqformula "2"))
                                                   (rule "hideAuxiliaryEq" (formula "2"))
                                                   (rule "eqSymm" (formula "26") (term "1"))
                                                   (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "22"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "applyEqReverse" (formula "26") (term "1,1,0,0") (ifseqformula "1"))
                                                   (rule "hideAuxiliaryEq" (formula "1"))
                                                   (rule "all_pull_out1" (formula "15") (term "0,1,0"))
                                                   (rule "cut_direct" (formula "25") (term "0,0,0,0"))
                                                   (branch "CUT: (Node)self.nodeseq[i_0] = null TRUE"
                                                       (builtin "One Step Simplification" (formula "26"))
                                                      (rule "false_right" (formula "26"))
                                                      (rule "applyEq" (formula "22") (term "0") (ifseqformula "1"))
                                                      (rule "eqSymm" (formula "22"))
                                                      (rule "all_pull_out0" (formula "16") (term "1,0"))
                                                      (rule "shift_paren_and" (formula "16") (term "0,1,0"))
                                                      (rule "all_pull_out3" (formula "16") (term "0"))
                                                      (rule "cnf_rightDist" (formula "16") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "16") (term "0"))
                                                       (builtin "One Step Simplification" (formula "16"))
                                                      (rule "distr_forallAnd" (formula "16"))
                                                      (rule "andLeft" (formula "16"))
                                                      (rule "shift_paren_or" (formula "17") (term "0"))
                                                      (rule "commute_or_2" (formula "17") (term "0,0"))
                                                      (rule "inEqSimp_or_weaken3" (formula "17") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "17") (term "1,0,1,0"))
                                                      (rule "add_literals" (formula "17") (term "0,1,0,1,0"))
                                                      (rule "add_zero_left" (formula "17") (term "1,0,1,0"))
                                                       (builtin "One Step Simplification" (formula "17"))
                                                      (rule "cnf_rightDist" (formula "16") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "16") (term "0"))
                                                       (builtin "One Step Simplification" (formula "16"))
                                                      (rule "distr_forallAnd" (formula "16"))
                                                      (rule "andLeft" (formula "16"))
                                                      (rule "commute_or_2" (formula "17") (term "0"))
                                                       (builtin "One Step Simplification" (formula "17"))
                                                      (rule "inEqSimp_homoInEq0" (formula "17") (term "0,1"))
                                                      (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1"))
                                                      (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1"))
                                                      (rule "mul_literals" (formula "17") (term "0,1,0,0,1"))
                                                      (rule "polySimp_addAssoc" (formula "17") (term "0,0,1"))
                                                      (rule "add_literals" (formula "17") (term "0,0,0,1"))
                                                      (rule "add_zero_left" (formula "17") (term "0,0,1"))
                                                      (rule "inEqSimp_homoInEq1" (formula "17") (term "1,1"))
                                                      (rule "polySimp_mulComm0" (formula "17") (term "1,0,1,1"))
                                                      (rule "polySimp_rightDist" (formula "17") (term "1,0,1,1"))
                                                      (rule "mul_literals" (formula "17") (term "0,1,0,1,1"))
                                                      (rule "polySimp_addAssoc" (formula "17") (term "0,1,1"))
                                                      (rule "polySimp_addComm0" (formula "17") (term "0,0,1,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,1,1"))
                                                      (rule "add_literals" (formula "17") (term "1,1,0,1,1"))
                                                      (rule "times_zero_1" (formula "17") (term "1,0,1,1"))
                                                      (rule "add_literals" (formula "17") (term "0,1,1"))
                                                      (rule "leq_literals" (formula "17") (term "1,1"))
                                                       (builtin "One Step Simplification" (formula "17"))
                                                      (rule "applyEq" (formula "17") (term "1,0,0") (ifseqformula "20"))
                                                      (rule "inEqSimp_invertInEq1" (formula "17") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "17") (term "0,1"))
                                                      (rule "times_zero_2" (formula "17") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "17") (term "0,1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "17") (term "1") (ifseqformula "21"))
                                                      (rule "qeq_literals" (formula "17") (term "0,1"))
                                                       (builtin "One Step Simplification" (formula "17"))
                                                      (rule "cnf_rightDist" (formula "16") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "16") (term "0"))
                                                       (builtin "One Step Simplification" (formula "16"))
                                                      (rule "distr_forallAnd" (formula "16"))
                                                      (rule "andLeft" (formula "16"))
                                                      (rule "commute_or_2" (formula "17") (term "0,0"))
                                                      (rule "commute_or_2" (formula "17") (term "0,0,0"))
                                                      (rule "cnf_rightDist" (formula "16") (term "0"))
                                                      (rule "distr_forallAnd" (formula "16"))
                                                      (rule "andLeft" (formula "16"))
                                                      (rule "commute_or_2" (formula "16") (term "0"))
                                                      (rule "commute_or" (formula "17") (term "0"))
                                                      (rule "commute_or" (formula "16") (term "0,0"))
                                                      (rule "commute_or_2" (formula "18") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "18") (term "0,0,0,0,0"))
                                                      (rule "allLeft" (formula "4") (inst "t=i_0"))
                                                      (rule "inEqSimp_commuteGeq" (formula "4") (term "1"))
                                                      (rule "applyEq" (formula "4") (term "1,0,0,0") (ifseqformula "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "4") (term "1,0") (ifseqformula "2"))
                                                      (rule "qeq_literals" (formula "4") (term "0,1,0"))
                                                       (builtin "One Step Simplification" (formula "4"))
                                                      (rule "inEqSimp_contradInEq1" (formula "4") (term "1") (ifseqformula "3"))
                                                      (rule "inEqSimp_homoInEq1" (formula "4") (term "0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,1"))
                                                      (rule "add_literals" (formula "4") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "4") (term "1,0,0,1"))
                                                      (rule "add_literals" (formula "4") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "4") (term "0,1"))
                                                       (builtin "One Step Simplification" (formula "4"))
                                                      (rule "allLeft" (formula "5") (inst "t=add(Z(neglit(1(#))),
    int::select(heap, self, LinkedList::$size))"))
                                                      (rule "inEqSimp_homoInEq0" (formula "5") (term "1,0"))
                                                      (rule "polySimp_mulComm0" (formula "5") (term "1,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "5") (term "1,0,1,0"))
                                                      (rule "mul_literals" (formula "5") (term "0,1,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "5") (term "0,1,0"))
                                                      (rule "add_literals" (formula "5") (term "0,0,1,0"))
                                                      (rule "add_zero_left" (formula "5") (term "0,1,0"))
                                                      (rule "inEqSimp_homoInEq1" (formula "5") (term "1"))
                                                      (rule "polySimp_mulComm0" (formula "5") (term "1,0,1"))
                                                      (rule "polySimp_rightDist" (formula "5") (term "1,0,1"))
                                                      (rule "mul_literals" (formula "5") (term "0,1,0,1"))
                                                      (rule "polySimp_addAssoc" (formula "5") (term "0,1"))
                                                      (rule "polySimp_addComm0" (formula "5") (term "0,0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,1"))
                                                      (rule "add_literals" (formula "5") (term "1,1,0,1"))
                                                      (rule "times_zero_1" (formula "5") (term "1,0,1"))
                                                      (rule "add_literals" (formula "5") (term "0,1"))
                                                      (rule "leq_literals" (formula "5") (term "1"))
                                                       (builtin "One Step Simplification" (formula "5"))
                                                      (rule "applyEq" (formula "5") (term "1,0,0") (ifseqformula "24"))
                                                      (rule "inEqSimp_invertInEq1" (formula "5") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "5") (term "0,1"))
                                                      (rule "times_zero_2" (formula "5") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "5") (term "0,1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "5") (term "1") (ifseqformula "25"))
                                                      (rule "qeq_literals" (formula "5") (term "0,1"))
                                                       (builtin "One Step Simplification" (formula "5"))
                                                      (rule "allLeft" (formula "6") (inst "t=Z(0(#))"))
                                                      (rule "leq_literals" (formula "6") (term "1,0"))
                                                       (builtin "One Step Simplification" (formula "6"))
                                                      (rule "inEqSimp_commuteGeq" (formula "6") (term "1"))
                                                      (rule "applyEq" (formula "6") (term "1,0,0") (ifseqformula "24"))
                                                      (rule "inEqSimp_contradInEq1" (formula "6") (term "1") (ifseqformula "26"))
                                                      (rule "qeq_literals" (formula "6") (term "0,1"))
                                                       (builtin "One Step Simplification" (formula "6"))
                                                      (rule "allLeft" (formula "7") (inst "t=i_0_0"))
                                                      (rule "inEqSimp_commuteGeq" (formula "7") (term "1"))
                                                      (rule "applyEq" (formula "7") (term "1,0,0,0") (ifseqformula "13"))
                                                      (rule "replace_known_right" (formula "7") (term "0,0") (ifseqformula "30"))
                                                       (builtin "One Step Simplification" (formula "7"))
                                                      (rule "inEqSimp_contradInEq1" (formula "7") (term "1") (ifseqformula "12"))
                                                      (rule "inEqSimp_homoInEq1" (formula "7") (term "0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,1"))
                                                      (rule "add_literals" (formula "7") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "7") (term "1,0,0,1"))
                                                      (rule "add_literals" (formula "7") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "7") (term "0,1"))
                                                       (builtin "One Step Simplification" (formula "7"))
                                                      (rule "inEqSimp_contradInEq0" (formula "11") (ifseqformula "7"))
                                                      (rule "qeq_literals" (formula "11") (term "0"))
                                                       (builtin "One Step Simplification" (formula "11"))
                                                      (rule "closeFalse" (formula "11"))
                                                   )
                                                   (branch "CUT: (Node)self.nodeseq[i_0] = null FALSE"
                                                       (builtin "One Step Simplification" (formula "26"))
                                                      (rule "all_pull_out0" (formula "15") (term "1,0"))
                                                      (rule "shift_paren_and" (formula "15") (term "0,1,0"))
                                                      (rule "all_pull_out3" (formula "15") (term "0"))
                                                      (rule "cnf_rightDist" (formula "15") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "15") (term "0"))
                                                       (builtin "One Step Simplification" (formula "15"))
                                                      (rule "distr_forallAnd" (formula "15"))
                                                      (rule "andLeft" (formula "15"))
                                                      (rule "shift_paren_or" (formula "16") (term "0"))
                                                      (rule "commute_or_2" (formula "16") (term "0,0"))
                                                      (rule "inEqSimp_or_weaken3" (formula "16") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "16") (term "1,0,1,0"))
                                                      (rule "add_literals" (formula "16") (term "0,1,0,1,0"))
                                                      (rule "add_zero_left" (formula "16") (term "1,0,1,0"))
                                                       (builtin "One Step Simplification" (formula "16"))
                                                      (rule "cnf_rightDist" (formula "15") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "15") (term "0"))
                                                       (builtin "One Step Simplification" (formula "15"))
                                                      (rule "distr_forallAnd" (formula "15"))
                                                      (rule "andLeft" (formula "15"))
                                                      (rule "commute_or_2" (formula "16") (term "0"))
                                                       (builtin "One Step Simplification" (formula "16"))
                                                      (rule "inEqSimp_homoInEq1" (formula "16") (term "1,1"))
                                                      (rule "polySimp_mulComm0" (formula "16") (term "1,0,1,1"))
                                                      (rule "polySimp_rightDist" (formula "16") (term "1,0,1,1"))
                                                      (rule "mul_literals" (formula "16") (term "0,1,0,1,1"))
                                                      (rule "polySimp_addAssoc" (formula "16") (term "0,1,1"))
                                                      (rule "polySimp_addComm0" (formula "16") (term "0,0,1,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,1,1"))
                                                      (rule "add_literals" (formula "16") (term "1,1,0,1,1"))
                                                      (rule "times_zero_1" (formula "16") (term "1,0,1,1"))
                                                      (rule "add_literals" (formula "16") (term "0,1,1"))
                                                      (rule "leq_literals" (formula "16") (term "1,1"))
                                                       (builtin "One Step Simplification" (formula "16"))
                                                      (rule "inEqSimp_homoInEq0" (formula "16") (term "1"))
                                                      (rule "polySimp_mulComm0" (formula "16") (term "1,0,1"))
                                                      (rule "polySimp_rightDist" (formula "16") (term "1,0,1"))
                                                      (rule "mul_literals" (formula "16") (term "0,1,0,1"))
                                                      (rule "polySimp_addAssoc" (formula "16") (term "0,1"))
                                                      (rule "add_literals" (formula "16") (term "0,0,1"))
                                                      (rule "add_zero_left" (formula "16") (term "0,1"))
                                                      (rule "applyEq" (formula "16") (term "1,0,0") (ifseqformula "19"))
                                                      (rule "inEqSimp_invertInEq1" (formula "16") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "16") (term "0,1"))
                                                      (rule "mul_literals" (formula "16") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "16") (term "0,1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "16") (term "1") (ifseqformula "20"))
                                                      (rule "qeq_literals" (formula "16") (term "0,1"))
                                                       (builtin "One Step Simplification" (formula "16"))
                                                      (rule "cnf_rightDist" (formula "15") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "15") (term "0"))
                                                       (builtin "One Step Simplification" (formula "15"))
                                                      (rule "distr_forallAnd" (formula "15"))
                                                      (rule "andLeft" (formula "15"))
                                                      (rule "commute_or_2" (formula "16") (term "0,0"))
                                                      (rule "commute_or_2" (formula "16") (term "0,0,0"))
                                                      (rule "cnf_rightDist" (formula "15") (term "0"))
                                                      (rule "distr_forallAnd" (formula "15"))
                                                      (rule "andLeft" (formula "15"))
                                                      (rule "commute_or_2" (formula "15") (term "0"))
                                                      (rule "commute_or" (formula "16") (term "0"))
                                                      (rule "commute_or" (formula "15") (term "0,0"))
                                                      (rule "commute_or_2" (formula "17") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "17") (term "0,0,0,0,0"))
                                                      (rule "allLeft" (formula "3") (inst "t=i_0"))
                                                      (rule "inEqSimp_commuteGeq" (formula "3") (term "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "3") (term "1") (ifseqformula "2"))
                                                      (rule "inEqSimp_homoInEq1" (formula "3") (term "0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0,1"))
                                                      (rule "add_literals" (formula "3") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "3") (term "1,0,0,1"))
                                                      (rule "add_literals" (formula "3") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "3") (term "0,1"))
                                                       (builtin "One Step Simplification" (formula "3"))
                                                      (rule "inEqSimp_contradInEq1" (formula "3") (term "1") (ifseqformula "1"))
                                                      (rule "qeq_literals" (formula "3") (term "0,1"))
                                                       (builtin "One Step Simplification" (formula "3"))
                                                      (rule "allLeft" (formula "4") (inst "t=add(Z(1(#)), i_0)"))
                                                      (rule "inEqSimp_commuteGeq" (formula "4") (term "1"))
                                                      (rule "inEqSimp_homoInEq0" (formula "4") (term "1,0"))
                                                      (rule "polySimp_mulComm0" (formula "4") (term "1,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "4") (term "1,0,1,0"))
                                                      (rule "mul_literals" (formula "4") (term "0,1,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "4") (term "0,1,0"))
                                                      (rule "add_literals" (formula "4") (term "0,0,1,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "4") (term "1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "4") (term "0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "4") (term "0,1,0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "4") (term "1,0") (ifseqformula "1"))
                                                      (rule "qeq_literals" (formula "4") (term "0,1,0"))
                                                       (builtin "One Step Simplification" (formula "4"))
                                                      (rule "inEqSimp_contradInEq1" (formula "4") (term "1") (ifseqformula "2"))
                                                      (rule "inEqSimp_homoInEq1" (formula "4") (term "0,1"))
                                                      (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,1"))
                                                      (rule "polySimp_rightDist" (formula "4") (term "1,0,0,1"))
                                                      (rule "mul_literals" (formula "4") (term "0,1,0,0,1"))
                                                      (rule "polySimp_addAssoc" (formula "4") (term "0,0,1"))
                                                      (rule "polySimp_addComm1" (formula "4") (term "0,0,0,1"))
                                                      (rule "add_literals" (formula "4") (term "0,0,0,0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,1"))
                                                      (rule "add_literals" (formula "4") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "4") (term "1,0,0,1"))
                                                      (rule "add_literals" (formula "4") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "4") (term "0,1"))
                                                       (builtin "One Step Simplification" (formula "4"))
                                                      (rule "allLeft" (formula "5") (inst "t=add(Z(neglit(1(#))),
    int::select(heap, self, LinkedList::$size))"))
                                                      (rule "inEqSimp_homoInEq1" (formula "5") (term "1"))
                                                      (rule "polySimp_mulComm0" (formula "5") (term "1,0,1"))
                                                      (rule "polySimp_rightDist" (formula "5") (term "1,0,1"))
                                                      (rule "mul_literals" (formula "5") (term "0,1,0,1"))
                                                      (rule "polySimp_addAssoc" (formula "5") (term "0,1"))
                                                      (rule "polySimp_addComm0" (formula "5") (term "0,0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,1"))
                                                      (rule "add_literals" (formula "5") (term "1,1,0,1"))
                                                      (rule "times_zero_1" (formula "5") (term "1,0,1"))
                                                      (rule "add_zero_right" (formula "5") (term "0,1"))
                                                      (rule "leq_literals" (formula "5") (term "1"))
                                                       (builtin "One Step Simplification" (formula "5"))
                                                      (rule "inEqSimp_homoInEq0" (formula "5") (term "1"))
                                                      (rule "polySimp_mulComm0" (formula "5") (term "1,0,1"))
                                                      (rule "polySimp_rightDist" (formula "5") (term "1,0,1"))
                                                      (rule "mul_literals" (formula "5") (term "0,1,0,1"))
                                                      (rule "polySimp_addAssoc" (formula "5") (term "0,1"))
                                                      (rule "add_literals" (formula "5") (term "0,0,1"))
                                                      (rule "add_zero_left" (formula "5") (term "0,1"))
                                                      (rule "applyEq" (formula "5") (term "1,0,0") (ifseqformula "24"))
                                                      (rule "inEqSimp_invertInEq1" (formula "5") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "5") (term "0,1"))
                                                      (rule "mul_literals" (formula "5") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "5") (term "0,1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "5") (term "1") (ifseqformula "25"))
                                                      (rule "qeq_literals" (formula "5") (term "0,1"))
                                                       (builtin "One Step Simplification" (formula "5"))
                                                      (rule "allLeft" (formula "6") (inst "t=Z(0(#))"))
                                                      (rule "leq_literals" (formula "6") (term "1,0"))
                                                       (builtin "One Step Simplification" (formula "6"))
                                                      (rule "inEqSimp_commuteGeq" (formula "6") (term "1"))
                                                      (rule "applyEq" (formula "6") (term "1,0,0") (ifseqformula "24"))
                                                      (rule "inEqSimp_contradInEq1" (formula "6") (term "1") (ifseqformula "26"))
                                                      (rule "qeq_literals" (formula "6") (term "0,1"))
                                                       (builtin "One Step Simplification" (formula "6"))
                                                      (rule "allLeft" (formula "7") (inst "t=i_0_0"))
                                                      (rule "inEqSimp_commuteGeq" (formula "7") (term "1"))
                                                      (rule "applyEq" (formula "7") (term "1,0,0,0") (ifseqformula "13"))
                                                      (rule "replace_known_right" (formula "7") (term "0,0") (ifseqformula "31"))
                                                       (builtin "One Step Simplification" (formula "7"))
                                                      (rule "inEqSimp_contradInEq1" (formula "7") (term "0") (ifseqformula "11"))
                                                      (rule "qeq_literals" (formula "7") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "7"))
                                                      (rule "inEqSimp_contradInEq0" (formula "12") (ifseqformula "7"))
                                                      (rule "andLeft" (formula "12"))
                                                      (rule "inEqSimp_homoInEq1" (formula "12"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "12") (term "0"))
                                                      (rule "add_literals" (formula "12") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "12") (term "1,0"))
                                                      (rule "add_zero_right" (formula "12") (term "0"))
                                                      (rule "leq_literals" (formula "12"))
                                                      (rule "closeFalse" (formula "12"))
                                                   )
                                                )
                                             )
                                          )
                                       )
                                    )
                                    (branch "inInt(i_0_0) & (0 <= i_0_0 & i_0_0 < self.size) FALSE"
                                        (builtin "One Step Simplification" (formula "17"))
                                        (builtin "One Step Simplification" (formula "12"))
                                        (builtin "One Step Simplification" (formula "11"))
                                        (builtin "One Step Simplification" (formula "3"))
                                       (rule "closeFalse" (formula "3"))
                                    )
                                 )
                              )
                              (branch "CUT: ov_0 = n_2 FALSE"
                                  (builtin "One Step Simplification" (formula "11"))
                                  (builtin "One Step Simplification" (formula "10"))
                                  (builtin "One Step Simplification" (formula "2"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "16")) (ifInst ""  (formula "16")))
                                 (rule "closeFalse" (formula "1"))
                              )
                           )
                        )
                        (branch "Case 2"
                           (rule "replace_known_left" (formula "7") (term "1") (ifseqformula "6"))
                            (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "11")))
                           (rule "closeFalse" (formula "7"))
                        )
                     )
                     (branch
                         (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "8")))
                        (rule "closeTrue" (formula "10"))
                     )
                  )
               )
            )
         )
         (branch
             (builtin "One Step Simplification" (formula "10"))
            (rule "closeTrue" (formula "10"))
         )
      )
      (branch
          (builtin "One Step Simplification" (formula "10"))
         (rule "allRight" (formula "10") (inst "sk=f_0"))
         (rule "allRight" (formula "10") (inst "sk=o_0_0"))
         (rule "orRight" (formula "10"))
         (rule "eqSymm" (formula "11"))
         (rule "pullOutSelect" (formula "11") (term "0") (inst "selectSK=f_0_0"))
         (rule "simplifySelectOfStore" (formula "1"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "castDel" (formula "1") (term "1,0"))
         (rule "eqSymm" (formula "12"))
         (rule "eqSymm" (formula "1") (term "0,0,0"))
         (rule "eqSymm" (formula "1") (term "1,0,0"))
         (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_1"))
         (rule "simplifySelectOfStore" (formula "1"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "castDel" (formula "1") (term "1,0"))
         (rule "eqSymm" (formula "1") (term "0,0,0"))
         (rule "eqSymm" (formula "1") (term "1,0,0"))
         (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_2"))
         (rule "simplifySelectOfStore" (formula "1"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "castDel" (formula "1") (term "1,0"))
         (rule "eqSymm" (formula "1") (term "0,0,0"))
         (rule "eqSymm" (formula "1") (term "1,0,0"))
         (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_3"))
         (rule "simplifySelectOfCreate" (formula "1"))
         (rule "castDel" (formula "1") (term "1,0"))
         (rule "eqSymm" (formula "1") (term "0,0,0,0"))
         (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "12"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "Class_invariant_axiom_for_LinkedList" (formula "10") (inst "i=i") (inst "j=j") (inst "i_0=i_0") (ifseqformula "13"))
          (builtin "One Step Simplification" (formula "10"))
         (rule "andLeft" (formula "10"))
         (rule "andLeft" (formula "10"))
         (rule "andLeft" (formula "12"))
         (rule "andLeft" (formula "10"))
         (rule "andLeft" (formula "10"))
         (rule "andLeft" (formula "10"))
         (rule "andLeft" (formula "10"))
         (rule "eqSymm" (formula "15"))
         (rule "eqSymm" (formula "16"))
         (rule "eqSymm" (formula "17"))
         (rule "eqSymm" (formula "14"))
         (rule "eqSymm" (formula "13") (term "1,1,0,1,0,1,0"))
         (rule "eqSymm" (formula "13") (term "0,1,0,1,0,1,0"))
         (rule "eqSymm" (formula "13") (term "1,1,0"))
         (rule "eqSymm" (formula "13") (term "1,0,0,1,0"))
         (rule "eqSymm" (formula "12"))
         (rule "polySimp_elimSub" (formula "15") (term "1,0,2,0"))
         (rule "mul_literals" (formula "15") (term "1,1,0,2,0"))
         (rule "polySimp_elimSub" (formula "13") (term "1,0,0,1,1,0"))
         (rule "mul_literals" (formula "13") (term "1,1,0,0,1,1,0"))
         (rule "polySimp_addComm0" (formula "13") (term "1,0,2,0,1,1,0"))
         (rule "polySimp_addComm0" (formula "15") (term "1,0,2,0"))
         (rule "polySimp_addComm0" (formula "13") (term "1,0,0,1,1,0"))
         (rule "castedGetAny" (formula "13") (term "0,0,0,0,0,1,0"))
         (rule "subsetSingletonLeft" (formula "11"))
         (rule "subsetSingletonLeft" (formula "10"))
         (rule "castedGetAny" (formula "14") (term "2,0"))
         (rule "castedGetAny" (formula "13") (term "0,0,1,0,1,0,1,0"))
         (rule "castedGetAny" (formula "13") (term "1,0,1,0,1,0,1,0"))
         (rule "castedGetAny" (formula "13") (term "1,1,1,1,0"))
         (rule "castedGetAny" (formula "13") (term "1,1,1,0,0,1,0"))
         (rule "castedGetAny" (formula "13") (term "0,1,0,0,1,0"))
         (rule "eqSymm" (formula "13") (term "1,0,0,1,0"))
         (rule "castedGetAny" (formula "12") (term "0,1,0,1,0"))
         (rule "castedGetAny" (formula "13") (term "2,0,1,1,0"))
         (rule "castedGetAny" (formula "15") (term "2,0"))
         (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0,1,0,1,0"))
         (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0,1,0,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0,1,0,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
         (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0,1,0,1,0"))
         (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0,1,0,1,0"))
         (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0,1,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0,1,0,1,0"))
         (rule "mul_literals" (formula "13") (term "0,1,1,0,0,1,0,1,0"))
         (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0,1,0,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0,1,0"))
         (rule "mul_literals" (formula "12") (term "0,1,1,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0,1,0"))
         (rule "elementOfUnionEQ" (formula "10") (ifseqformula "12"))
          (builtin "One Step Simplification" (formula "10"))
         (rule "true_left" (formula "10"))
         (rule "elementOfUnionEQ" (formula "10") (ifseqformula "11"))
          (builtin "One Step Simplification" (formula "10"))
         (rule "true_left" (formula "10"))
         (rule "nnf_imp2or" (formula "11") (term "0"))
         (rule "nnf_notAnd" (formula "11") (term "0,0"))
         (rule "inEqSimp_notLeq" (formula "11") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "11") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "11") (term "0,0,0,1,0,0"))
         (rule "add_zero_left" (formula "11") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,0"))
         (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0"))
         (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0"))
         (rule "inEqSimp_notGeq" (formula "11") (term "0,0,0"))
         (rule "mul_literals" (formula "11") (term "1,0,0,0,0,0"))
         (rule "add_zero_right" (formula "11") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
         (rule "mul_literals" (formula "11") (term "1,0,0,0"))
         (rule "nnf_imp2or" (formula "11") (term "0,1,0,1,0"))
         (rule "nnf_imp2or" (formula "11") (term "1,0,1,0,1,0"))
         (rule "nnf_notAnd" (formula "11") (term "0,0,1,0,1,0"))
         (rule "inEqSimp_notLeq" (formula "11") (term "1,0,0,1,0,1,0"))
         (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,0,1,0,1,0"))
         (rule "mul_literals" (formula "11") (term "0,1,0,0,1,0,0,1,0,1,0"))
         (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,0,1,0,1,0"))
         (rule "add_literals" (formula "11") (term "0,0,0,1,0,0,1,0,1,0"))
         (rule "add_zero_left" (formula "11") (term "0,0,1,0,0,1,0,1,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,0,1,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,1,0,1,0"))
         (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,1,0,1,0"))
         (rule "inEqSimp_notGeq" (formula "11") (term "0,0,0,1,0,1,0"))
         (rule "mul_literals" (formula "11") (term "1,0,0,0,0,0,1,0,1,0"))
         (rule "add_zero_right" (formula "11") (term "0,0,0,0,0,1,0,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0,1,0,1,0"))
         (rule "mul_literals" (formula "11") (term "1,0,0,0,1,0,1,0"))
         (rule "commute_and" (formula "4") (term "0,0"))
         (rule "commute_and" (formula "3") (term "0,0"))
         (rule "commute_and" (formula "2") (term "0,0"))
         (rule "commute_and" (formula "1") (term "0,0"))
         (rule "shift_paren_or" (formula "11") (term "0,1,0,1,0"))
         (rule "commute_or_2" (formula "11") (term "0,0,1,0,1,0"))
         (rule "ifthenelse_to_or_left" (formula "11") (term "1,1,0"))
         (rule "eqSymm" (formula "11") (term "1,0,1,1,0"))
         (rule "eqSymm" (formula "11") (term "1,1,1,1,0"))
         (rule "commute_or" (formula "11") (term "0,1,1,0"))
         (rule "commute_or" (formula "11") (term "1,1,1,0"))
         (rule "commute_or" (formula "11") (term "0,0,0,1,0,1,0"))
         (rule "ifthenelse_split" (formula "12") (term "0"))
         (branch "self.size = 0 TRUE"
            (rule "eqSymm" (formula "13"))
            (rule "replace_known_left" (formula "14") (term "0,0") (ifseqformula "12"))
             (builtin "One Step Simplification" (formula "14"))
            (rule "eqSymm" (formula "14"))
            (rule "applyEq" (formula "11") (term "1,1,0,0,1,0,1,0") (ifseqformula "12"))
            (rule "applyEq" (formula "11") (term "1,1,0,0") (ifseqformula "12"))
            (rule "applyEq" (formula "10") (term "1,1,1,0,0,1,0") (ifseqformula "12"))
            (rule "add_zero_right" (formula "10") (term "1,1,0,0,1,0"))
            (rule "applyEq" (formula "15") (term "1") (ifseqformula "12"))
            (rule "applyEq" (formula "16") (term "1") (ifseqformula "12"))
            (rule "applyEq" (formula "11") (term "1,1,0,1,0,1,1,0") (ifseqformula "12"))
            (rule "add_zero_right" (formula "11") (term "1,0,1,0,1,1,0"))
            (rule "applyEq" (formula "11") (term "1,1,1,1,1,1,0") (ifseqformula "12"))
            (rule "add_zero_right" (formula "11") (term "1,1,1,1,1,0"))
            (rule "inEqSimp_or_tautInEq1" (formula "11") (term "0,0,1,0,1,0"))
            (rule "add_zero_right" (formula "11") (term "1,1,0,0,1,0,1,0"))
            (rule "qeq_literals" (formula "11") (term "1,0,0,1,0,1,0"))
             (builtin "One Step Simplification" (formula "11"))
            (rule "inEqSimp_or_tautInEq0" (formula "11") (term "0,0"))
            (rule "add_zero_right" (formula "11") (term "1,1,0,0"))
            (rule "qeq_literals" (formula "11") (term "1,0,0"))
             (builtin "One Step Simplification" (formula "11"))
            (rule "true_left" (formula "11"))
            (rule "commute_and" (formula "10") (term "0,0,1,0"))
            (rule "inEqSimp_and_contradInEq0" (formula "10") (term "0,0,1,0"))
            (rule "qeq_literals" (formula "10") (term "1,0,0,1,0"))
             (builtin "One Step Simplification" (formula "10"))
            (rule "eqSymm" (formula "10"))
            (rule "cut_direct" (formula "19") (term "0,0"))
            (branch "CUT: o_0_0 = null TRUE"
                (builtin "One Step Simplification" (formula "20"))
               (rule "false_right" (formula "20"))
               (rule "applyEqRigid" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
               (rule "eqSymm" (formula "2") (term "1,0,0"))
               (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "18"))
                (builtin "One Step Simplification" (formula "2"))
               (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
               (rule "hideAuxiliaryEq" (formula "2"))
               (rule "applyEq" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
               (rule "eqSymm" (formula "4") (term "1,0,0"))
               (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "17"))
                (builtin "One Step Simplification" (formula "4"))
               (rule "applyEqReverse" (formula "19") (term "1") (ifseqformula "4"))
               (rule "hideAuxiliaryEq" (formula "4"))
               (rule "applyEq" (formula "3") (term "0,1,0,0") (ifseqformula "1"))
               (rule "eqSymm" (formula "3") (term "1,0,0"))
               (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "16"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "applyEqReverse" (formula "18") (term "1") (ifseqformula "3"))
               (rule "hideAuxiliaryEq" (formula "3"))
               (rule "applyEqRigid" (formula "17") (term "1,0") (ifseqformula "1"))
               (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
               (rule "eqSymm" (formula "2") (term "1,0,0"))
               (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "15"))
                (builtin "One Step Simplification" (formula "2"))
               (rule "applyEqReverse" (formula "17") (term "1") (ifseqformula "2"))
               (rule "hideAuxiliaryEq" (formula "2"))
               (rule "eqSymm" (formula "16"))
               (rule "applyEqRigid" (formula "16") (term "1,0") (ifseqformula "1"))
                (builtin "One Step Simplification" (formula "16"))
               (rule "closeTrue" (formula "16"))
            )
            (branch "CUT: o_0_0 = null FALSE"
                (builtin "One Step Simplification" (formula "20"))
               (rule "notRight" (formula "20"))
               (rule "lenNonNegative" (formula "15") (term "0"))
               (rule "inEqSimp_commuteLeq" (formula "15"))
               (rule "applyEq" (formula "15") (term "0") (ifseqformula "16"))
               (rule "qeq_literals" (formula "15"))
               (rule "true_left" (formula "15"))
               (rule "lenNonNegative" (formula "16") (term "0"))
               (rule "inEqSimp_commuteLeq" (formula "16"))
               (rule "applyEq" (formula "16") (term "0") (ifseqformula "17"))
               (rule "qeq_literals" (formula "16"))
               (rule "true_left" (formula "16"))
               (rule "ifthenelse_split" (formula "2") (term "0"))
               (branch "f_0 = java.lang.Object::<created> & o_0_0 = n_2 TRUE"
                  (rule "andLeft" (formula "2"))
                  (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                  (rule "hideAuxiliaryEq" (formula "4"))
                  (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "3"))
                   (builtin "One Step Simplification" (formula "5"))
                  (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "3"))
                   (builtin "One Step Simplification" (formula "4"))
                  (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "3"))
                   (builtin "One Step Simplification" (formula "6"))
                  (rule "applyEq" (formula "22") (term "1,0") (ifseqformula "3"))
                  (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "2"))
                   (builtin "One Step Simplification" (formula "5"))
                  (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                  (rule "hideAuxiliaryEq" (formula "5"))
                  (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                  (rule "close" (formula "17") (ifseqformula "1"))
               )
               (branch "f_0 = java.lang.Object::<created> & o_0_0 = n_2 FALSE"
                  (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                  (rule "hideAuxiliaryEq" (formula "2"))
                  (rule "ifthenelse_split" (formula "2") (term "0"))
                  (branch "f_0 = Node::$next & o_0_0 = n_2 TRUE"
                     (rule "andLeft" (formula "2"))
                     (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                     (rule "hideAuxiliaryEq" (formula "4"))
                     (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "3"))
                      (builtin "One Step Simplification" (formula "5"))
                     (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "3"))
                      (builtin "One Step Simplification" (formula "4"))
                     (rule "replace_known_left" (formula "17") (term "1") (ifseqformula "3"))
                      (builtin "One Step Simplification" (formula "17"))
                     (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                     (rule "close" (formula "18") (ifseqformula "1"))
                  )
                  (branch "f_0 = Node::$next & o_0_0 = n_2 FALSE"
                     (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                     (rule "hideAuxiliaryEq" (formula "2"))
                     (rule "ifthenelse_split" (formula "2") (term "0"))
                     (branch "f_0 = java.lang.Object::<initialized> & o_0_0 = n_2 TRUE"
                        (rule "andLeft" (formula "2"))
                        (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                        (rule "hideAuxiliaryEq" (formula "4"))
                        (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "3"))
                         (builtin "One Step Simplification" (formula "4"))
                        (rule "replace_known_left" (formula "16") (term "1") (ifseqformula "3"))
                         (builtin "One Step Simplification" (formula "16"))
                        (rule "replace_known_left" (formula "17") (term "1") (ifseqformula "3"))
                         (builtin "One Step Simplification" (formula "17"))
                        (rule "applyEq" (formula "22") (term "1,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "22") (term "2,0") (ifseqformula "2"))
                        (rule "narrowSelectType" (formula "22") (term "0") (ifseqformula "6"))
                        (rule "eqSymm" (formula "22"))
                        (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                        (rule "close" (formula "18") (ifseqformula "1"))
                     )
                     (branch "f_0 = java.lang.Object::<initialized> & o_0_0 = n_2 FALSE"
                        (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                        (rule "hideAuxiliaryEq" (formula "2"))
                        (rule "ifthenelse_split" (formula "2") (term "0"))
                        (branch "f_0 = Node::$data & o_0_0 = n_2 TRUE"
                           (rule "andLeft" (formula "2"))
                           (rule "applyEqReverse" (formula "23") (term "1") (ifseqformula "4"))
                           (rule "hideAuxiliaryEq" (formula "4"))
                           (rule "replace_known_left" (formula "16") (term "1") (ifseqformula "3"))
                            (builtin "One Step Simplification" (formula "16"))
                           (rule "replace_known_left" (formula "17") (term "1") (ifseqformula "3"))
                            (builtin "One Step Simplification" (formula "17"))
                           (rule "replace_known_left" (formula "15") (term "1") (ifseqformula "3"))
                            (builtin "One Step Simplification" (formula "15"))
                           (rule "applyEq" (formula "15") (term "0") (ifseqformula "2"))
                            (builtin "One Step Simplification" (formula "15"))
                           (rule "false_right" (formula "15"))
                           (rule "applyEq" (formula "16") (term "0") (ifseqformula "2"))
                            (builtin "One Step Simplification" (formula "16"))
                           (rule "false_right" (formula "16"))
                           (rule "applyEq" (formula "19") (term "0") (ifseqformula "3"))
                           (rule "applyEq" (formula "19") (term "2,0") (ifseqformula "2"))
                           (rule "narrowSelectType" (formula "19") (term "0") (ifseqformula "5"))
                           (rule "applyEq" (formula "15") (term "0") (ifseqformula "2"))
                            (builtin "One Step Simplification" (formula "15"))
                           (rule "false_right" (formula "15"))
                           (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                           (rule "close" (formula "15") (ifseqformula "1"))
                        )
                        (branch "f_0 = Node::$data & o_0_0 = n_2 FALSE"
                           (rule "close" (formula "22") (ifseqformula "2"))
                        )
                     )
                  )
               )
            )
         )
         (branch "self.size = 0 FALSE"
            (rule "replace_known_right" (formula "13") (term "0,0") (ifseqformula "16"))
             (builtin "One Step Simplification" (formula "13"))
            (rule "cut_direct" (formula "20") (term "0,0"))
            (branch "CUT: o_0_0 = null TRUE"
                (builtin "One Step Simplification" (formula "21"))
               (rule "false_right" (formula "21"))
               (rule "applyEqRigid" (formula "5") (term "0,1,0,0") (ifseqformula "1"))
               (rule "eqSymm" (formula "5") (term "1,0,0"))
               (rule "replace_known_right" (formula "5") (term "1,0,0") (ifseqformula "19"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "applyEqReverse" (formula "21") (term "1") (ifseqformula "5"))
               (rule "hideAuxiliaryEq" (formula "5"))
               (rule "applyEqRigid" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
               (rule "eqSymm" (formula "2") (term "1,0,0"))
               (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "18"))
                (builtin "One Step Simplification" (formula "2"))
               (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
               (rule "hideAuxiliaryEq" (formula "2"))
               (rule "applyEq" (formula "3") (term "0,1,0,0") (ifseqformula "1"))
               (rule "eqSymm" (formula "3") (term "1,0,0"))
               (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "17"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "applyEqReverse" (formula "19") (term "1") (ifseqformula "3"))
               (rule "hideAuxiliaryEq" (formula "3"))
               (rule "applyEq" (formula "18") (term "1,0") (ifseqformula "1"))
               (rule "applyEqRigid" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
               (rule "eqSymm" (formula "2") (term "1,0,0"))
               (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "16"))
                (builtin "One Step Simplification" (formula "2"))
               (rule "applyEqReverse" (formula "18") (term "1") (ifseqformula "2"))
               (rule "hideAuxiliaryEq" (formula "2"))
               (rule "eqSymm" (formula "17"))
               (rule "applyEq" (formula "17") (term "1,0") (ifseqformula "1"))
                (builtin "One Step Simplification" (formula "17"))
               (rule "closeTrue" (formula "17"))
            )
            (branch "CUT: o_0_0 = null FALSE"
                (builtin "One Step Simplification" (formula "21"))
               (rule "notRight" (formula "21"))
               (rule "all_pull_out1" (formula "12") (term "0,1,0"))
               (rule "all_pull_out0" (formula "12") (term "1,0"))
               (rule "shift_paren_and" (formula "12") (term "0,1,0"))
               (rule "all_pull_out3" (formula "12") (term "0"))
               (rule "cnf_rightDist" (formula "12") (term "0,0"))
               (rule "distr_forallAnd" (formula "12") (term "0"))
                (builtin "One Step Simplification" (formula "12"))
               (rule "distr_forallAnd" (formula "12"))
               (rule "andLeft" (formula "12"))
               (rule "shift_paren_or" (formula "13") (term "0"))
               (rule "commute_or_2" (formula "13") (term "0,0"))
               (rule "inEqSimp_or_weaken3" (formula "13") (term "0"))
               (rule "polySimp_addAssoc" (formula "13") (term "1,0,1,0"))
               (rule "add_literals" (formula "13") (term "0,1,0,1,0"))
               (rule "add_zero_left" (formula "13") (term "1,0,1,0"))
                (builtin "One Step Simplification" (formula "13"))
               (rule "cnf_rightDist" (formula "12") (term "0,0"))
               (rule "distr_forallAnd" (formula "12") (term "0"))
                (builtin "One Step Simplification" (formula "12"))
               (rule "distr_forallAnd" (formula "12"))
               (rule "andLeft" (formula "12"))
               (rule "commute_or_2" (formula "13") (term "0"))
                (builtin "One Step Simplification" (formula "13"))
               (rule "inEqSimp_homoInEq0" (formula "13") (term "0,1"))
               (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1"))
               (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1"))
               (rule "mul_literals" (formula "13") (term "0,1,0,0,1"))
               (rule "polySimp_addAssoc" (formula "13") (term "0,0,1"))
               (rule "add_literals" (formula "13") (term "0,0,0,1"))
               (rule "add_zero_left" (formula "13") (term "0,0,1"))
               (rule "inEqSimp_homoInEq1" (formula "13") (term "1,1"))
               (rule "polySimp_mulComm0" (formula "13") (term "1,0,1,1"))
               (rule "polySimp_rightDist" (formula "13") (term "1,0,1,1"))
               (rule "mul_literals" (formula "13") (term "0,1,0,1,1"))
               (rule "polySimp_addAssoc" (formula "13") (term "0,1,1"))
               (rule "polySimp_addComm0" (formula "13") (term "0,0,1,1"))
               (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,1,1"))
               (rule "add_literals" (formula "13") (term "1,1,0,1,1"))
               (rule "times_zero_1" (formula "13") (term "1,0,1,1"))
               (rule "add_zero_right" (formula "13") (term "0,1,1"))
               (rule "leq_literals" (formula "13") (term "1,1"))
                (builtin "One Step Simplification" (formula "13"))
               (rule "applyEq" (formula "13") (term "1,0,0") (ifseqformula "16"))
               (rule "inEqSimp_invertInEq1" (formula "13") (term "1"))
               (rule "times_zero_2" (formula "13") (term "1,1"))
               (rule "polySimp_mulLiterals" (formula "13") (term "0,1"))
               (rule "polySimp_elimOne" (formula "13") (term "0,1"))
               (rule "cnf_rightDist" (formula "12") (term "0,0"))
               (rule "distr_forallAnd" (formula "12") (term "0"))
                (builtin "One Step Simplification" (formula "12"))
               (rule "distr_forallAnd" (formula "12"))
               (rule "andLeft" (formula "12"))
               (rule "commute_or_2" (formula "13") (term "0,0"))
               (rule "commute_or_2" (formula "13") (term "0,0,0"))
               (rule "cnf_rightDist" (formula "12") (term "0"))
               (rule "distr_forallAnd" (formula "12"))
               (rule "andLeft" (formula "12"))
               (rule "commute_or_2" (formula "12") (term "0"))
               (rule "commute_or" (formula "13") (term "0"))
               (rule "commute_or" (formula "12") (term "0,0"))
               (rule "commute_or_2" (formula "14") (term "0,0,0,0"))
               (rule "shift_paren_or" (formula "14") (term "0,0,0,0,0"))
               (rule "lenNonNegative" (formula "19") (term "0"))
               (rule "inEqSimp_commuteLeq" (formula "19"))
               (rule "applyEq" (formula "19") (term "0") (ifseqformula "20"))
               (rule "inEqSimp_strengthen1" (formula "19") (ifseqformula "22"))
               (rule "add_zero_right" (formula "19") (term "1"))
               (rule "inEqSimp_contradEq7" (formula "22") (ifseqformula "19"))
               (rule "times_zero_1" (formula "22") (term "1,0,0"))
               (rule "add_zero_right" (formula "22") (term "0,0"))
               (rule "leq_literals" (formula "22") (term "0"))
                (builtin "One Step Simplification" (formula "22"))
               (rule "false_right" (formula "22"))
               (rule "inEqSimp_contradInEq1" (formula "15") (term "1") (ifseqformula "19"))
               (rule "qeq_literals" (formula "15") (term "0,1"))
                (builtin "One Step Simplification" (formula "15"))
               (rule "lenNonNegative" (formula "21") (term "0"))
               (rule "inEqSimp_commuteLeq" (formula "21"))
               (rule "applyEq" (formula "21") (term "0") (ifseqformula "22"))
               (rule "inEqSimp_subsumption1" (formula "21") (ifseqformula "19"))
               (rule "leq_literals" (formula "21") (term "0"))
                (builtin "One Step Simplification" (formula "21"))
               (rule "true_left" (formula "21"))
               (rule "ifthenelse_split" (formula "2") (term "0"))
               (branch "f_0 = java.lang.Object::<created> & o_0_0 = n_2 TRUE"
                  (rule "andLeft" (formula "2"))
                  (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                  (rule "hideAuxiliaryEq" (formula "4"))
                  (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "3"))
                   (builtin "One Step Simplification" (formula "5"))
                  (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "3"))
                   (builtin "One Step Simplification" (formula "6"))
                  (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "3"))
                   (builtin "One Step Simplification" (formula "4"))
                  (rule "applyEqRigid" (formula "6") (term "0,0,0") (ifseqformula "2"))
                   (builtin "One Step Simplification" (formula "6"))
                  (rule "applyEqReverse" (formula "27") (term "1") (ifseqformula "6"))
                  (rule "hideAuxiliaryEq" (formula "6"))
                  (rule "applyEqRigid" (formula "4") (term "0,0,0") (ifseqformula "2"))
                   (builtin "One Step Simplification" (formula "4"))
                  (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                   (builtin "One Step Simplification" (formula "5"))
                  (rule "applyEqReverse" (formula "26") (term "1") (ifseqformula "5"))
                  (rule "hideAuxiliaryEq" (formula "4"))
                  (rule "hideAuxiliaryEq" (formula "4"))
                  (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                  (rule "close" (formula "20") (ifseqformula "1"))
               )
               (branch "f_0 = java.lang.Object::<created> & o_0_0 = n_2 FALSE"
                  (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                  (rule "hideAuxiliaryEq" (formula "2"))
                  (rule "seqGetAlphaCast" (formula "16") (term "0"))
                  (rule "castedGetAny" (formula "16") (term "0"))
                   (builtin "One Step Simplification" (formula "16"))
                  (rule "true_left" (formula "16"))
                  (rule "allLeft" (formula "11") (inst "t=add(Z(neglit(1(#))),
    int::select(heap, self, LinkedList::$size))"))
                  (rule "inEqSimp_homoInEq1" (formula "11") (term "1"))
                  (rule "polySimp_mulComm0" (formula "11") (term "1,0,1"))
                  (rule "polySimp_rightDist" (formula "11") (term "1,0,1"))
                  (rule "mul_literals" (formula "11") (term "0,1,0,1"))
                  (rule "polySimp_addAssoc" (formula "11") (term "0,1"))
                  (rule "polySimp_addComm0" (formula "11") (term "0,0,1"))
                  (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,1"))
                  (rule "add_literals" (formula "11") (term "1,1,0,1"))
                  (rule "times_zero_1" (formula "11") (term "1,0,1"))
                  (rule "add_literals" (formula "11") (term "0,1"))
                  (rule "leq_literals" (formula "11") (term "1"))
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "inEqSimp_homoInEq0" (formula "11") (term "1"))
                  (rule "polySimp_mulComm0" (formula "11") (term "1,0,1"))
                  (rule "polySimp_rightDist" (formula "11") (term "1,0,1"))
                  (rule "mul_literals" (formula "11") (term "0,1,0,1"))
                  (rule "polySimp_addAssoc" (formula "11") (term "0,1"))
                  (rule "add_literals" (formula "11") (term "0,0,1"))
                  (rule "add_zero_left" (formula "11") (term "0,1"))
                  (rule "applyEq" (formula "11") (term "0,0,0") (ifseqformula "18"))
                  (rule "inEqSimp_invertInEq1" (formula "11") (term "1"))
                  (rule "times_zero_2" (formula "11") (term "1,1"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "11") (term "0,1"))
                  (rule "inEqSimp_contradInEq1" (formula "11") (term "1") (ifseqformula "19"))
                  (rule "qeq_literals" (formula "11") (term "0,1"))
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "notLeft" (formula "11"))
                  (rule "allLeft" (formula "12") (inst "t=add(Z(neglit(1(#))),
    int::select(heap, self, LinkedList::$size))"))
                  (rule "eqSymm" (formula "12") (term "1"))
                  (rule "inEqSimp_homoInEq1" (formula "12") (term "1,0"))
                  (rule "polySimp_mulComm0" (formula "12") (term "1,0,1,0"))
                  (rule "polySimp_rightDist" (formula "12") (term "1,0,1,0"))
                  (rule "mul_literals" (formula "12") (term "0,1,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "12") (term "0,1,0"))
                  (rule "polySimp_addComm0" (formula "12") (term "0,0,1,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,1,0"))
                  (rule "add_literals" (formula "12") (term "1,1,0,1,0"))
                  (rule "times_zero_1" (formula "12") (term "1,0,1,0"))
                  (rule "add_zero_right" (formula "12") (term "0,1,0"))
                  (rule "leq_literals" (formula "12") (term "1,0"))
                   (builtin "One Step Simplification" (formula "12"))
                  (rule "inEqSimp_homoInEq0" (formula "12") (term "0"))
                  (rule "polySimp_mulComm0" (formula "12") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "12") (term "1,0,0"))
                  (rule "mul_literals" (formula "12") (term "0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "12") (term "0,0"))
                  (rule "add_literals" (formula "12") (term "0,0,0"))
                  (rule "add_zero_left" (formula "12") (term "0,0"))
                  (rule "applyEq" (formula "12") (term "1,1,1") (ifseqformula "18"))
                  (rule "inEqSimp_invertInEq1" (formula "12") (term "0"))
                  (rule "times_zero_2" (formula "12") (term "1,0"))
                  (rule "polySimp_mulLiterals" (formula "12") (term "0,0"))
                  (rule "polySimp_elimOne" (formula "12") (term "0,0"))
                  (rule "inEqSimp_contradInEq1" (formula "12") (term "0") (ifseqformula "19"))
                  (rule "qeq_literals" (formula "12") (term "0,0"))
                   (builtin "One Step Simplification" (formula "12"))
                  (rule "allLeft" (formula "11") (inst "t=Z(0(#))"))
                  (rule "leq_literals" (formula "11") (term "1,0"))
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "inEqSimp_commuteGeq" (formula "11") (term "1"))
                  (rule "applyEq" (formula "11") (term "0,0,0") (ifseqformula "18"))
                  (rule "inEqSimp_contradInEq1" (formula "11") (term "1") (ifseqformula "20"))
                  (rule "qeq_literals" (formula "11") (term "0,1"))
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "notLeft" (formula "11"))
                  (rule "allLeft" (formula "13") (inst "t=Z(0(#))"))
                  (rule "leq_literals" (formula "13") (term "0,0"))
                   (builtin "One Step Simplification" (formula "13"))
                  (rule "eqSymm" (formula "13") (term "1"))
                  (rule "inEqSimp_commuteGeq" (formula "13") (term "0"))
                  (rule "applyEq" (formula "13") (term "1,1,1") (ifseqformula "18"))
                  (rule "inEqSimp_contradInEq1" (formula "13") (term "0") (ifseqformula "20"))
                  (rule "qeq_literals" (formula "13") (term "0,0"))
                   (builtin "One Step Simplification" (formula "13"))
                  (rule "seqGetAlphaCast" (formula "19") (term "0"))
                  (rule "castedGetAny" (formula "19") (term "0"))
                   (builtin "One Step Simplification" (formula "19"))
                  (rule "true_left" (formula "19"))
                  (rule "ifthenelse_split" (formula "2") (term "0"))
                  (branch "f_0 = Node::$next & o_0_0 = n_2 TRUE"
                     (rule "andLeft" (formula "2"))
                     (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                     (rule "hideAuxiliaryEq" (formula "4"))
                     (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "3"))
                      (builtin "One Step Simplification" (formula "5"))
                     (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "3"))
                      (builtin "One Step Simplification" (formula "4"))
                     (rule "replace_known_left" (formula "26") (term "1") (ifseqformula "3"))
                      (builtin "One Step Simplification" (formula "26"))
                     (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "2"))
                      (builtin "One Step Simplification" (formula "5"))
                     (rule "applyEqReverse" (formula "31") (term "1") (ifseqformula "5"))
                     (rule "hideAuxiliaryEq" (formula "5"))
                     (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                     (rule "close" (formula "26") (ifseqformula "1"))
                  )
                  (branch "f_0 = Node::$next & o_0_0 = n_2 FALSE"
                     (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                     (rule "hideAuxiliaryEq" (formula "2"))
                     (rule "cut_direct" (formula "25") (term "1"))
                     (branch "CUT: o_0_0 = n_2 TRUE"
                         (builtin "One Step Simplification" (formula "26"))
                        (rule "replace_known_left" (formula "3") (term "1,0,0") (ifseqformula "1"))
                         (builtin "One Step Simplification" (formula "3"))
                        (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "1"))
                         (builtin "One Step Simplification" (formula "4"))
                        (rule "replace_known_left" (formula "23") (term "1") (ifseqformula "1"))
                         (builtin "One Step Simplification" (formula "23"))
                        (rule "applyEq" (formula "31") (term "1,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "1"))
                        (rule "close" (formula "27") (ifseqformula "2"))
                     )
                     (branch "CUT: o_0_0 = n_2 FALSE"
                         (builtin "One Step Simplification" (formula "26"))
                        (rule "false_right" (formula "26"))
                        (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "25"))
                         (builtin "One Step Simplification" (formula "3"))
                        (rule "applyEqReverse" (formula "30") (term "1") (ifseqformula "3"))
                        (rule "hideAuxiliaryEq" (formula "3"))
                        (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "24"))
                         (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "29")))
                        (rule "closeFalse" (formula "2"))
                     )
                  )
               )
            )
         )
      )
   )
   (branch "Null Reference (result = null)"
      (rule "false_right" (formula "11"))
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "9")))
      (rule "closeFalse" (formula "1"))
   )
)
(branch "Null Reference (n = null)"
   (rule "false_right" (formula "11"))
    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "9")))
   (rule "closeFalse" (formula "1"))
)
)
}
