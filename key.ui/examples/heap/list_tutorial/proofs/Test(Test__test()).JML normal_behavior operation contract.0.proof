\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Wed Jan 10 16:30:36 CET 2024
[Labels]UseOriginLabels=true
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_OFF
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=JavaCard-JavaCard\\:off, Strings-Strings\\:on, assertions-assertions\\:safe, bigint-bigint\\:on, floatRules-floatRules\\:strictfpOnly, initialisation-initialisation\\:disableStaticInitialisation, intRules-intRules\\:arithmeticSemanticsIgnoringOF, integerSimplificationRules-integerSimplificationRules\\:full, javaLoopTreatment-javaLoopTreatment\\:efficient, mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off, methodExpansion-methodExpansion\\:modularOnly, modelFields-modelFields\\:treatAsAxiom, moreSeqRules-moreSeqRules\\:off, permissions-permissions\\:off, programRules-programRules\\:Java, reach-reach\\:on, runtimeExceptions-runtimeExceptions\\:ban, sequences-sequences\\:on, wdChecks-wdChecks\\:off, wdOperator-wdOperator\\:L
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[Strategy]MaximumNumberOfAutomaticApplications=10000
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_DELAYED
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[Strategy]Timeout=-1
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[SMTSettings]useUninterpretedMultiplication=true
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[SMTSettings]maxGenericSorts=2
[StrategyProperty]OSS_OPTIONS_KEY=OSS_ON
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\javaSource "../src";

\proofObligation "#Proof Obligation Settings
#Wed Jan 10 16:30:36 CET 2024
contract=Test[Test\\:\\:test()].JML normal_behavior operation contract.0
name=Test[Test\\:\\:test()].JML normal_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "mattias" ) (keyVersion "4911758ba07017f4af60dc0314ac665c14a542d0"))
(keyLog "1" (keyUser "mattias" ) (keyVersion "4911758ba07017f4af60dc0314ac665c14a542d0"))

(autoModeTime "32329")

(branch "dummy ID"
 (builtin "One Step Simplification" (formula "1") (newnames "heapAtPre,o,f"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "2"))
(rule "assignment" (formula "7"))
(rule "methodBodyExpand" (formula "7") (term "1") (newnames "heapBefore_test,savedHeapBefore_test"))
 (builtin "One Step Simplification" (formula "7"))
(rule "variableDeclarationAssign" (formula "7") (term "1"))
(rule "variableDeclaration" (formula "7") (term "1") (newnames "l"))
 (builtin "Use Operation Contract" (formula "7") (newnames "heapBefore_ArrayList,self_0,exc_0,heapAfter_ArrayList,anon_heap_ArrayList") (contract "ArrayList[ArrayList::ArrayList()].JML normal_behavior operation contract.0") (modality "diamond"))
(branch "Post (ArrayList)"
    (builtin "One Step Simplification" (formula "9"))
    (builtin "One Step Simplification" (formula "7"))
   (rule "andLeft" (formula "7"))
   (rule "andLeft" (formula "8"))
   (rule "andLeft" (formula "8"))
   (rule "andLeft" (formula "10"))
   (rule "andLeft" (formula "9"))
   (rule "andLeft" (formula "11"))
   (rule "andLeft" (formula "9"))
   (rule "andLeft" (formula "12"))
   (rule "andLeft" (formula "10"))
   (rule "notLeft" (formula "9"))
   (rule "notLeft" (formula "9"))
   (rule "assignment" (formula "17") (term "1"))
    (builtin "One Step Simplification" (formula "17"))
   (rule "pullOutSelect" (formula "11") (term "0") (inst "selectSK=List_seq_0"))
   (rule "simplifySelectOfAnonEQ" (formula "11") (ifseqformula "7"))
    (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "16")) (ifInst ""  (formula "15")))
   (rule "applyEqReverse" (formula "12") (term "0") (ifseqformula "11"))
   (rule "hideAuxiliaryEq" (formula "11"))
   (rule "pullOutSelect" (formula "12") (term "0") (inst "selectSK=List_footprint_0"))
   (rule "simplifySelectOfAnonEQ" (formula "12") (ifseqformula "7"))
    (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "16")) (ifInst ""  (formula "15")))
   (rule "applyEqReverse" (formula "13") (term "0") (ifseqformula "12"))
   (rule "hideAuxiliaryEq" (formula "12"))
   (rule "pullOutSelect" (formula "9") (term "0") (inst "selectSK=java_lang_Object_created__0"))
   (rule "simplifySelectOfAnonEQ" (formula "9") (ifseqformula "7"))
    (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "16")) (ifInst ""  (formula "15")))
   (rule "applyEqReverse" (formula "10") (term "0") (ifseqformula "9"))
   (rule "hideAuxiliaryEq" (formula "9"))
    (builtin "Use Operation Contract" (formula "17") (newnames "heapBefore_add,exc_1,heapAfter_add,anon_heap_add") (contract "List[List::add(int)].JML normal_behavior operation contract.0") (modality "diamond"))
   (branch "Post (add)"
       (builtin "One Step Simplification" (formula "19"))
       (builtin "One Step Simplification" (formula "15"))
      (rule "replaceKnownSelect_taclet0_2" (formula "15") (term "1,0,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet0_3" (formula "15") (term "1,0,0"))
      (rule "replaceKnownSelect_taclet0_0" (formula "15") (term "0,1,0,0,1,1"))
      (rule "replaceKnownAuxiliaryConstant_taclet0_1" (formula "15") (term "0,1,0,0,1,1"))
      (rule "replaceKnownSelect_taclet0_2" (formula "15") (term "0,1,0,1,0,1,1"))
      (rule "replaceKnownAuxiliaryConstant_taclet0_3" (formula "15") (term "0,1,0,1,0,1,1"))
      (rule "andLeft" (formula "15"))
      (rule "andLeft" (formula "16"))
      (rule "andLeft" (formula "17"))
      (rule "andLeft" (formula "17"))
      (rule "andLeft" (formula "18"))
      (rule "applyEq" (formula "17") (term "0,1") (ifseqformula "11"))
       (builtin "One Step Simplification" (formula "17"))
      (rule "pullOutSelect" (formula "18") (term "0") (inst "selectSK=List_footprint_1"))
      (rule "simplifySelectOfAnonEQ" (formula "18") (ifseqformula "15"))
       (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "22")))
      (rule "replaceKnownSelect_taclet0_2" (formula "18") (term "2,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet0_3" (formula "18") (term "2,0"))
      (rule "replaceKnownSelect_taclet0_4" (formula "18") (term "0,0,1,0,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet0_5" (formula "18") (term "0,0,1,0,0"))
      (rule "replace_known_left" (formula "18") (term "0,1,0,0") (ifseqformula "9"))
       (builtin "One Step Simplification" (formula "18"))
      (rule "pullOutSelect" (formula "17") (term "0") (inst "selectSK=List_seq_1"))
      (rule "simplifySelectOfAnonEQ" (formula "17") (ifseqformula "15"))
       (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "23")))
      (rule "replaceKnownSelect_taclet0_0" (formula "17") (term "2,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet0_1" (formula "17") (term "2,0"))
      (rule "replaceKnownSelect_taclet0_4" (formula "17") (term "0,0,1,0,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet0_5" (formula "17") (term "0,0,1,0,0"))
      (rule "replace_known_left" (formula "17") (term "0,1,0,0") (ifseqformula "9"))
       (builtin "One Step Simplification" (formula "17"))
      (rule "applyEq" (formula "17") (term "2,0") (ifseqformula "11"))
      (rule "applyEqRigid" (formula "17") (term "1") (ifseqformula "18"))
      (rule "commuteUnion" (formula "20") (term "1"))
      (rule "assertSafe" (formula "25") (inst "oldHeap=oldHeap_0") (inst "#condition=b") (inst "o=o") (inst "f=f"))
      (branch "Assertion (l.get(0) == 23) Skip"
          (builtin "Use Operation Contract" (formula "25") (newnames "heapBefore_add_0,exc_2,heapAfter_add_0,anon_heap_add_0") (contract "List[List::add(int)].JML normal_behavior operation contract.0") (modality "diamond"))
         (branch "Post (add)"
             (builtin "One Step Simplification" (formula "27"))
             (builtin "One Step Simplification" (formula "23"))
            (rule "replaceKnownSelect_taclet00_6" (formula "23") (term "1,0,0"))
            (rule "replaceKnownSelect_taclet00_7" (formula "23") (term "0,1,0,0,1,1"))
            (rule "replaceKnownSelect_taclet00_6" (formula "23") (term "0,1,0,1,0,1,1"))
            (rule "andLeft" (formula "23"))
            (rule "andLeft" (formula "24"))
            (rule "andLeft" (formula "25"))
            (rule "andLeft" (formula "25"))
            (rule "andLeft" (formula "26"))
            (rule "applyEq" (formula "25") (term "0,1") (ifseqformula "18"))
            (rule "pullOutSelect" (formula "25") (term "0") (inst "selectSK=List_seq_2"))
            (rule "simplifySelectOfAnonEQ" (formula "25") (ifseqformula "23"))
             (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "30")))
            (rule "replaceKnownSelect_taclet00_7" (formula "25") (term "2,0"))
            (rule "applyEqRigid" (formula "25") (term "1") (ifseqformula "26"))
            (rule "applyEq" (formula "25") (term "2,0") (ifseqformula "18"))
            (rule "pullOutSelect" (formula "27") (term "0") (inst "selectSK=List_footprint_2"))
            (rule "simplifySelectOfAnonEQ" (formula "27") (ifseqformula "23"))
             (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "31")))
            (rule "replaceKnownSelect_taclet00_6" (formula "27") (term "2,0"))
            (rule "pullOutSelect" (formula "25") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__1"))
            (rule "applyEq" (formula "28") (term "0,0,1,0,0") (ifseqformula "25"))
            (rule "simplifySelectOfAnonEQ" (formula "25") (ifseqformula "15"))
             (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "32")))
            (rule "replaceKnownSelect_taclet0_4" (formula "25") (term "2,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0_5" (formula "25") (term "2,0"))
            (rule "replaceKnownSelect_taclet0_4" (formula "25") (term "0,0,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0_5" (formula "25") (term "0,0,0,0"))
            (rule "replace_known_left" (formula "25") (term "0,0,0") (ifseqformula "9"))
             (builtin "One Step Simplification" (formula "25"))
            (rule "applyEqReverse" (formula "26") (term "0,0,1,0,0") (ifseqformula "25"))
            (rule "applyEqReverse" (formula "28") (term "0,0,1,0,0") (ifseqformula "25"))
            (rule "hideAuxiliaryEq" (formula "25"))
            (rule "replace_known_left" (formula "25") (term "0,1,0,0") (ifseqformula "9"))
             (builtin "One Step Simplification" (formula "25"))
            (rule "replace_known_left" (formula "27") (term "0,1,0,0") (ifseqformula "9"))
             (builtin "One Step Simplification" (formula "27"))
            (rule "assertSafe" (formula "33") (inst "oldHeap=oldHeap_1") (inst "#condition=b") (inst "o=o") (inst "f=f"))
            (branch "Assertion (l.get(0) == 23) Skip"
               (rule "assertSafe" (formula "33") (inst "oldHeap=oldHeap_2") (inst "#condition=b") (inst "o=o") (inst "f=f"))
               (branch "Assertion (l.get(1) == 42) Skip"
                  (rule "variableDeclarationAssign" (formula "33") (term "1"))
                  (rule "variableDeclaration" (formula "33") (term "1") (newnames "l2"))
                   (builtin "Use Operation Contract" (formula "33") (newnames "heapBefore_ArrayList_0,self_1,exc_3,heapAfter_ArrayList_0,anon_heap_ArrayList_0") (contract "ArrayList[ArrayList::ArrayList()].JML normal_behavior operation contract.0") (modality "diamond"))
                  (branch "Post (ArrayList)"
                      (builtin "One Step Simplification" (formula "35"))
                      (builtin "One Step Simplification" (formula "31"))
                     (rule "andLeft" (formula "31"))
                     (rule "andLeft" (formula "32"))
                     (rule "andLeft" (formula "32"))
                     (rule "andLeft" (formula "34"))
                     (rule "andLeft" (formula "33"))
                     (rule "andLeft" (formula "35"))
                     (rule "andLeft" (formula "33"))
                     (rule "andLeft" (formula "36"))
                     (rule "notLeft" (formula "33"))
                     (rule "andLeft" (formula "33"))
                     (rule "notLeft" (formula "33"))
                     (rule "assignment" (formula "43") (term "1"))
                      (builtin "One Step Simplification" (formula "43"))
                     (rule "pullOutSelect" (formula "35") (term "0") (inst "selectSK=List_seq_3"))
                     (rule "simplifySelectOfAnonEQ" (formula "35") (ifseqformula "31"))
                      (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "40")) (ifInst ""  (formula "39")))
                     (rule "applyEqReverse" (formula "36") (term "0") (ifseqformula "35"))
                     (rule "hideAuxiliaryEq" (formula "35"))
                     (rule "pullOutSelect" (formula "36") (term "0") (inst "selectSK=List_footprint_3"))
                     (rule "simplifySelectOfAnonEQ" (formula "36") (ifseqformula "31"))
                      (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "40")) (ifInst ""  (formula "39")))
                     (rule "applyEqReverse" (formula "37") (term "0") (ifseqformula "36"))
                     (rule "hideAuxiliaryEq" (formula "36"))
                     (rule "pullOutSelect" (formula "33") (term "0") (inst "selectSK=java_lang_Object_created__2"))
                     (rule "simplifySelectOfAnonEQ" (formula "33") (ifseqformula "31"))
                      (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "40")) (ifInst ""  (formula "39")))
                     (rule "applyEqReverse" (formula "34") (term "0") (ifseqformula "33"))
                     (rule "hideAuxiliaryEq" (formula "33"))
                     (rule "pullOutSelect" (formula "38") (term "0") (inst "selectSK=java_lang_Object_created__3"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "40")))
                     (rule "ifthenelse_negated" (formula "1") (term "0"))
                     (rule "apply_eq_boolean" (formula "1") (term "1") (ifseqformula "39"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "notLeft" (formula "1"))
                     (rule "ifEqualsTRUE" (formula "38"))
                      (builtin "One Step Simplification" (formula "38"))
                     (rule "orRight" (formula "38"))
                     (rule "replace_known_right" (formula "39") (term "0,0") (ifseqformula "38"))
                      (builtin "One Step Simplification" (formula "39"))
                     (rule "pullOutSelect" (formula "38") (term "0") (inst "selectSK=java_lang_Object_created__4"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "16"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "42")))
                     (rule "ifthenelse_negated" (formula "1") (term "0"))
                     (rule "apply_eq_boolean_rigid" (formula "1") (term "1") (ifseqformula "39"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "notLeft" (formula "1"))
                     (rule "ifEqualsTRUE" (formula "38"))
                      (builtin "One Step Simplification" (formula "38"))
                     (rule "orRight" (formula "38"))
                     (rule "replace_known_right" (formula "39") (term "0,0") (ifseqformula "38"))
                      (builtin "One Step Simplification" (formula "39"))
                     (rule "pullOutSelect" (formula "38") (term "0") (inst "selectSK=java_lang_Object_created__5"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "8"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "44")))
                     (rule "ifthenelse_negated" (formula "1") (term "0"))
                     (rule "apply_eq_boolean_rigid" (formula "1") (term "1") (ifseqformula "39"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "notLeft" (formula "1"))
                     (rule "ifEqualsTRUE" (formula "38"))
                      (builtin "One Step Simplification" (formula "38"))
                     (rule "orRight" (formula "38"))
                     (rule "replace_known_right" (formula "39") (term "0,0") (ifseqformula "38"))
                      (builtin "One Step Simplification" (formula "39"))
                     (rule "hideAuxiliaryEqConcrete2" (formula "44"))
                     (rule "hideAuxiliaryEqConcrete2" (formula "42"))
                     (rule "hideAuxiliaryEqConcrete2" (formula "40"))
                      (builtin "Use Operation Contract" (formula "46") (newnames "heapBefore_add_1,exc_4,heapAfter_add_1,anon_heap_add_1") (contract "List[List::add(int)].JML normal_behavior operation contract.0") (modality "diamond"))
                     (branch "Post (add)"
                         (builtin "One Step Simplification" (formula "39"))
                         (builtin "One Step Simplification" (formula "48"))
                        (rule "replaceKnownSelect_taclet0000000_14" (formula "39") (term "1,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet0000000_15" (formula "39") (term "1,0,0"))
                        (rule "replaceKnownSelect_taclet0000000_12" (formula "39") (term "0,1,0,0,1,1"))
                        (rule "replaceKnownAuxiliaryConstant_taclet0000000_13" (formula "39") (term "0,1,0,0,1,1"))
                        (rule "replaceKnownSelect_taclet0000000_14" (formula "39") (term "0,1,0,1,0,1,1"))
                        (rule "replaceKnownAuxiliaryConstant_taclet0000000_15" (formula "39") (term "0,1,0,1,0,1,1"))
                        (rule "andLeft" (formula "39"))
                        (rule "andLeft" (formula "40"))
                        (rule "andLeft" (formula "41"))
                        (rule "andLeft" (formula "41"))
                        (rule "andLeft" (formula "42"))
                        (rule "applyEq" (formula "41") (term "0,1") (ifseqformula "35"))
                         (builtin "One Step Simplification" (formula "41"))
                        (rule "pullOutSelect" (formula "42") (term "0") (inst "selectSK=List_footprint_4"))
                        (rule "simplifySelectOfAnonEQ" (formula "42") (ifseqformula "39"))
                         (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "49")))
                        (rule "replaceKnownSelect_taclet0000000_14" (formula "42") (term "2,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet0000000_15" (formula "42") (term "2,0"))
                        (rule "replaceKnownSelect_taclet0000000_16" (formula "42") (term "0,0,1,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet0000000_17" (formula "42") (term "0,0,1,0,0"))
                        (rule "replace_known_left" (formula "42") (term "0,1,0,0") (ifseqformula "33"))
                         (builtin "One Step Simplification" (formula "42"))
                        (rule "pullOutSelect" (formula "41") (term "0") (inst "selectSK=List_seq_4"))
                        (rule "simplifySelectOfAnonEQ" (formula "41") (ifseqformula "39"))
                         (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "50")))
                        (rule "replaceKnownSelect_taclet0000000_12" (formula "41") (term "2,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet0000000_13" (formula "41") (term "2,0"))
                        (rule "replaceKnownSelect_taclet0000000_16" (formula "41") (term "0,0,1,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet0000000_17" (formula "41") (term "0,0,1,0,0"))
                        (rule "replace_known_left" (formula "41") (term "0,1,0,0") (ifseqformula "33"))
                         (builtin "One Step Simplification" (formula "41"))
                        (rule "applyEqRigid" (formula "41") (term "1") (ifseqformula "42"))
                        (rule "applyEq" (formula "41") (term "2,0") (ifseqformula "35"))
                        (rule "commuteUnion" (formula "44") (term "1"))
                        (rule "assertSafe" (formula "54") (inst "oldHeap=oldHeap_3") (inst "#condition=b") (inst "o=o") (inst "f=f"))
                        (branch "Assertion (l2.get(0) == 100) Skip"
                            (builtin "One Step Simplification" (formula "54"))
                           (rule "equalityToSeqGetAndSeqLenLeft" (formula "11") (inst "iv=iv"))
                            (builtin "One Step Simplification" (formula "11"))
                           (rule "andLeft" (formula "11"))
                           (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
                           (rule "applyEq" (formula "12") (term "1,1,0,0") (ifseqformula "11"))
                           (rule "applyEq" (formula "11") (term "0,0") (ifseqformula "13"))
                            (builtin "One Step Simplification" (formula "11"))
                           (rule "true_left" (formula "11"))
                           (rule "applyEq" (formula "11") (term "0,0,1,0") (ifseqformula "12"))
                            (builtin "One Step Simplification" (formula "11"))
                           (rule "true_left" (formula "11"))
                           (rule "assertSafe" (formula "54") (inst "oldHeap=oldHeap_4") (inst "#condition=b") (inst "o=o") (inst "f=f"))
                           (branch "Assertion (l.get(0) == 23) Skip"
                              (rule "assertSafe" (formula "54") (inst "oldHeap=oldHeap_5") (inst "#condition=b") (inst "o=o") (inst "f=f"))
                              (branch "Assertion (l.get(1) == 42) Skip"
                                  (builtin "One Step Simplification" (formula "54"))
                                 (rule "methodCallEmpty" (formula "54") (term "1"))
                                 (rule "tryEmpty" (formula "54") (term "1"))
                                 (rule "emptyModality" (formula "54") (term "1"))
                                 (rule "andRight" (formula "54"))
                                 (branch "Case 1"
                                     (builtin "One Step Simplification" (formula "54"))
                                    (rule "Class_invariant_axiom_for_Test" (formula "5") (ifseqformula "3"))
                                    (rule "true_left" (formula "5"))
                                    (rule "Class_invariant_axiom_for_Test" (formula "53") (ifseqformula "3"))
                                    (rule "closeTrue" (formula "53"))
                                 )
                                 (branch
                                     (builtin "One Step Simplification" (formula "54"))
                                    (rule "closeTrue" (formula "54"))
                                 )
                              )
                              (branch "Assertion (l.get(1) == 42) Terminates And OK"
                                  (builtin "One Step Simplification" (formula "54"))
                                 (rule "compound_equality_comparison_1" (formula "54") (term "1") (inst "#v0=i"))
                                 (rule "variableDeclarationAssign" (formula "54") (term "1"))
                                 (rule "variableDeclaration" (formula "54") (term "1") (newnames "i"))
                                 (rule "equalityToSeqGetAndSeqLenLeft" (formula "18") (inst "iv=iv"))
                                  (builtin "One Step Simplification" (formula "18"))
                                 (rule "andLeft" (formula "18"))
                                 (rule "getOfSeqSingleton" (formula "19") (term "1,1,0"))
                                 (rule "castDel" (formula "19") (term "1,1,1,0"))
                                 (rule "castDel" (formula "19") (term "2,1,1,0"))
                                 (rule "eqSymm" (formula "19") (term "1,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
                                 (rule "applyEq" (formula "19") (term "0,1,1,0,0") (ifseqformula "20"))
                                  (builtin "One Step Simplification" (formula "19"))
                                 (rule "applyEq" (formula "18") (term "0,0") (ifseqformula "20"))
                                  (builtin "One Step Simplification" (formula "18"))
                                 (rule "true_left" (formula "18"))
                                 (rule "applyEq" (formula "18") (term "0,1,1,0") (ifseqformula "19"))
                                 (rule "getOfSeqSingleton" (formula "18") (term "1,1,0"))
                                 (rule "castDel" (formula "18") (term "1,1,1,0"))
                                 (rule "castDel" (formula "18") (term "2,1,1,0"))
                                  (builtin "One Step Simplification" (formula "18"))
                                 (rule "true_left" (formula "18"))
                                 (rule "equalityToSeqGetAndSeqLenLeft" (formula "17") (inst "iv=iv"))
                                  (builtin "One Step Simplification" (formula "17"))
                                 (rule "andLeft" (formula "17"))
                                 (rule "getOfSeqSingleton" (formula "18") (term "1,1,0"))
                                 (rule "castDel" (formula "18") (term "1,1,1,0"))
                                 (rule "castDel" (formula "18") (term "2,1,1,0"))
                                 (rule "eqSymm" (formula "18") (term "1,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
                                 (rule "applyEq" (formula "17") (term "0,0") (ifseqformula "19"))
                                  (builtin "One Step Simplification" (formula "17"))
                                 (rule "true_left" (formula "17"))
                                 (rule "applyEq" (formula "17") (term "0,1,1,0,0") (ifseqformula "18"))
                                  (builtin "One Step Simplification" (formula "17"))
                                 (rule "applyEq" (formula "17") (term "0,1,1,0") (ifseqformula "18"))
                                 (rule "getOfSeqSingleton" (formula "17") (term "1,1,0"))
                                 (rule "castDel" (formula "17") (term "1,1,1,0"))
                                 (rule "castDel" (formula "17") (term "2,1,1,0"))
                                  (builtin "One Step Simplification" (formula "17"))
                                 (rule "true_left" (formula "17"))
                                 (rule "equalityToSeqGetAndSeqLenLeft" (formula "26") (inst "iv=iv"))
                                 (rule "andLeft" (formula "26"))
                                 (rule "lenOfSeqConcat" (formula "26") (term "1"))
                                  (builtin "One Step Simplification" (formula "26"))
                                 (rule "add_literals" (formula "26") (term "1"))
                                 (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0"))
                                 (rule "applyEqRigid" (formula "27") (term "0,0,1,0") (ifseqformula "28"))
                                  (builtin "One Step Simplification" (formula "27"))
                                 (rule "true_left" (formula "27"))
                                 (rule "applyEqRigid" (formula "26") (term "0,0") (ifseqformula "27"))
                                 (rule "lenOfSeqConcat" (formula "26") (term "0"))
                                  (builtin "One Step Simplification" (formula "26"))
                                 (rule "add_literals" (formula "26") (term "0"))
                                  (builtin "One Step Simplification" (formula "26"))
                                 (rule "true_left" (formula "26"))
                                 (rule "equalityToSeqGetAndSeqLenLeft" (formula "25") (inst "iv=iv"))
                                 (rule "andLeft" (formula "25"))
                                 (rule "lenOfSeqConcat" (formula "25") (term "1"))
                                  (builtin "One Step Simplification" (formula "25"))
                                 (rule "add_literals" (formula "25") (term "1"))
                                 (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0"))
                                 (rule "applyEq" (formula "26") (term "1,1,0,0") (ifseqformula "25"))
                                 (rule "applyEq" (formula "26") (term "0,0,1,0") (ifseqformula "27"))
                                  (builtin "One Step Simplification" (formula "26"))
                                 (rule "true_left" (formula "26"))
                                 (rule "applyEq" (formula "25") (term "0,0") (ifseqformula "26"))
                                 (rule "lenOfSeqConcat" (formula "25") (term "0"))
                                  (builtin "One Step Simplification" (formula "25"))
                                 (rule "add_literals" (formula "25") (term "0"))
                                  (builtin "One Step Simplification" (formula "25"))
                                 (rule "true_left" (formula "25"))
                                  (builtin "Use Operation Contract" (formula "54") (newnames "heapBefore_get,result_get,exc_5,heapAfter_get,anon_heap_get") (contract "List[List::get(int)].JML normal_behavior operation contract.0") (modality "diamond"))
                                 (branch "Post (get)"
                                     (builtin "One Step Simplification" (formula "56"))
                                     (builtin "One Step Simplification" (formula "47"))
                                    (rule "andLeft" (formula "47"))
                                    (rule "andLeft" (formula "48"))
                                    (rule "andLeft" (formula "49"))
                                    (rule "andLeft" (formula "49"))
                                    (rule "eqSymm" (formula "49"))
                                    (rule "assignment" (formula "59") (term "1"))
                                     (builtin "One Step Simplification" (formula "59"))
                                    (rule "castedGetAny" (formula "49") (term "0"))
                                    (rule "pullOutSelect" (formula "49") (term "0,0") (inst "selectSK=List_seq_5"))
                                    (rule "simplifySelectOfAnonEQ" (formula "49") (ifseqformula "47"))
                                     (builtin "One Step Simplification" (formula "49") (ifInst ""  (formula "58")))
                                    (rule "ifthenelse_negated" (formula "49") (term "0"))
                                    (rule "pullOutSelect" (formula "49") (term "1,0") (inst "selectSK=List_seq_6"))
                                    (rule "simplifySelectOfAnonEQ" (formula "49") (ifseqformula "39"))
                                     (builtin "One Step Simplification" (formula "49") (ifInst ""  (formula "59")))
                                    (rule "pullOutSelect" (formula "50") (term "0,0,0") (inst "selectSK=java_lang_Object_created__6"))
                                    (rule "simplifySelectOfAnonEQ" (formula "50") (ifseqformula "39"))
                                     (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "60")))
                                    (rule "ifthenelse_negated" (formula "50") (term "0"))
                                    (rule "pullOutSelect" (formula "49") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__7"))
                                    (rule "applyEq" (formula "51") (term "1,0") (ifseqformula "49"))
                                    (rule "applyEq" (formula "51") (term "0,0,0") (ifseqformula "49"))
                                    (rule "simplifySelectOfAnonEQ" (formula "49") (ifseqformula "31"))
                                     (builtin "One Step Simplification" (formula "49") (ifInst ""  (formula "61")))
                                    (rule "ifthenelse_negated" (formula "49") (term "0"))
                                    (rule "pullOutSelect" (formula "50") (term "2,0") (inst "selectSK=List_seq_7"))
                                    (rule "simplifySelectOfAnonEQ" (formula "50") (ifseqformula "31"))
                                     (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "62")))
                                    (rule "replaceKnownSelect_taclet0000_8" (formula "50") (term "2,0"))
                                    (rule "ifthenelse_negated" (formula "50") (term "0"))
                                    (rule "applyEqRigid" (formula "50") (term "1,0") (ifseqformula "26"))
                                    (rule "pullOutSelect" (formula "49") (term "1,0") (inst "selectSK=java_lang_Object_created__8"))
                                    (rule "applyEq" (formula "51") (term "0,0,0") (ifseqformula "49"))
                                    (rule "applyEq" (formula "50") (term "0,0,0") (ifseqformula "49"))
                                    (rule "simplifySelectOfAnonEQ" (formula "49") (ifseqformula "23"))
                                     (builtin "One Step Simplification" (formula "49") (ifInst ""  (formula "63")))
                                    (rule "replaceKnownSelect_taclet0000_10" (formula "49") (term "2,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "49") (term "2,0"))
                                    (rule "replaceKnownSelect_taclet0000_10" (formula "49") (term "0,0,0,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "49") (term "0,0,0,0"))
                                    (rule "replace_known_left" (formula "49") (term "0,0,0") (ifseqformula "9"))
                                     (builtin "One Step Simplification" (formula "49"))
                                    (rule "applyEqReverse" (formula "51") (term "0,0,0") (ifseqformula "49"))
                                    (rule "applyEqReverse" (formula "50") (term "0,0,0") (ifseqformula "49"))
                                    (rule "applyEqReverse" (formula "50") (term "1,0") (ifseqformula "49"))
                                    (rule "hideAuxiliaryEq" (formula "49"))
                                    (rule "replace_known_left" (formula "49") (term "0,0") (ifseqformula "9"))
                                     (builtin "One Step Simplification" (formula "49"))
                                    (rule "applyEqReverse" (formula "52") (term "1,0") (ifseqformula "49"))
                                    (rule "applyEqReverse" (formula "52") (term "0,0,0") (ifseqformula "49"))
                                    (rule "applyEqReverse" (formula "51") (term "0,0,1,0,0") (ifseqformula "49"))
                                    (rule "hideAuxiliaryEq" (formula "49"))
                                    (rule "replace_known_left" (formula "49") (term "0,0") (ifseqformula "9"))
                                     (builtin "One Step Simplification" (formula "49"))
                                    (rule "applyEqReverse" (formula "50") (term "2,0") (ifseqformula "49"))
                                    (rule "hideAuxiliaryEq" (formula "49"))
                                    (rule "replace_known_left" (formula "49") (term "0,1,0,0") (ifseqformula "9"))
                                     (builtin "One Step Simplification" (formula "49"))
                                    (rule "replace_known_left" (formula "50") (term "0,0") (ifseqformula "9"))
                                     (builtin "One Step Simplification" (formula "50"))
                                    (rule "applyEqReverse" (formula "51") (term "0,0,0") (ifseqformula "50"))
                                    (rule "hideAuxiliaryEq" (formula "50"))
                                    (rule "replace_known_left" (formula "50") (term "0,0") (ifseqformula "9"))
                                     (builtin "One Step Simplification" (formula "50"))
                                    (rule "applyEqReverse" (formula "51") (term "0,0") (ifseqformula "50"))
                                    (rule "hideAuxiliaryEq" (formula "50"))
                                    (rule "equality_comparison_simple" (formula "60") (term "1"))
                                     (builtin "One Step Simplification" (formula "60"))
                                    (rule "methodCallEmpty" (formula "60") (term "1"))
                                     (builtin "One Step Simplification" (formula "60"))
                                    (rule "emptyModality" (formula "60") (term "1"))
                                     (builtin "One Step Simplification" (formula "60"))
                                    (rule "Class_invariant_axiom_for_Test" (formula "5") (ifseqformula "3"))
                                    (rule "true_left" (formula "5"))
                                    (rule "ifthenelse_split" (formula "42") (term "0"))
                                    (branch "(self_1, List::$footprint) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> TRUE"
                                       (rule "applyEqReverse" (formula "44") (term "0") (ifseqformula "43"))
                                       (rule "hideAuxiliaryEq" (formula "43"))
                                       (rule "elementOfSubsetImpliesElementOfSuperset" (formula "42") (ifseqformula "35"))
                                        (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "56")))
                                       (rule "replaceKnownSelect_taclet0000000_18" (formula "42") (term "0,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet0000000_21" (formula "42") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "42"))
                                       (rule "true_left" (formula "42"))
                                       (rule "ifthenelse_split" (formula "40") (term "0"))
                                       (branch "(self_1, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> TRUE"
                                          (rule "elementOfSubsetImpliesElementOfSuperset" (formula "40") (ifseqformula "35"))
                                           (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "57")))
                                          (rule "replaceKnownSelect_taclet0000000_18" (formula "40") (term "0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet0000000_21" (formula "40") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "40"))
                                          (rule "true_left" (formula "40"))
                                          (rule "ifthenelse_split" (formula "18") (term "0"))
                                          (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_ArrayList<<anonHeapFunction>> TRUE"
                                             (rule "applyEqReverse" (formula "28") (term "0,1") (ifseqformula "19"))
                                             (rule "applyEqReverse" (formula "20") (term "0") (ifseqformula "19"))
                                             (rule "applyEqReverse" (formula "25") (term "2,0,0") (ifseqformula "19"))
                                             (rule "applyEqReverse" (formula "23") (term "1,0") (ifseqformula "19"))
                                             (rule "applyEqReverse" (formula "27") (term "2,0,0") (ifseqformula "19"))
                                             (rule "applyEqReverse" (formula "27") (term "2,0") (ifseqformula "19"))
                                             (rule "hideAuxiliaryEq" (formula "19"))
                                             (rule "elementOfSubsetImpliesElementOfSuperset" (formula "18") (ifseqformula "11"))
                                              (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "59")) (ifInst ""  (formula "58")))
                                             (rule "true_left" (formula "18"))
                                             (rule "commuteUnion" (formula "27") (term "1"))
                                             (rule "ifthenelse_split" (formula "16") (term "0"))
                                             (branch "(self_0, List::$seq) in self_0.footprint@anon_heap_ArrayList<<anonHeapFunction>> TRUE"
                                                (rule "elementOfSubsetImpliesElementOfSuperset" (formula "16") (ifseqformula "11"))
                                                 (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "60")) (ifInst ""  (formula "59")))
                                                (rule "true_left" (formula "16"))
                                                (rule "ifthenelse_split" (formula "50") (term "0"))
                                                (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> TRUE"
                                                   (rule "applyEqReverse" (formula "52") (term "0,0") (ifseqformula "51"))
                                                   (rule "hideAuxiliaryEq" (formula "51"))
                                                   (rule "elementOfSubsetImpliesElementOfSuperset" (formula "50") (ifseqformula "36"))
                                                    (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "60")))
                                                   (rule "replaceKnownSelect_taclet010000000000_31" (formula "50") (term "0,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet010000000000_32" (formula "50") (term "0,0"))
                                                   (rule "notLeft" (formula "50"))
                                                   (rule "close" (formula "53") (ifseqformula "8"))
                                                )
                                                (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> FALSE"
                                                   (rule "applyEqReverse" (formula "51") (term "0,0") (ifseqformula "50"))
                                                   (rule "hideAuxiliaryEq" (formula "50"))
                                                   (rule "getOfSeqConcat" (formula "50") (term "0"))
                                                    (builtin "One Step Simplification" (formula "50"))
                                                   (rule "sub_literals" (formula "50") (term "1,2,0"))
                                                    (builtin "One Step Simplification" (formula "50"))
                                                   (rule "castDel" (formula "50") (term "2,0"))
                                                   (rule "less_literals" (formula "50") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "50"))
                                                   (rule "eqSymm" (formula "50"))
                                                   (rule "close" (formula "61") (ifseqformula "50"))
                                                )
                                             )
                                             (branch "(self_0, List::$seq) in self_0.footprint@anon_heap_ArrayList<<anonHeapFunction>> FALSE"
                                                (rule "eqSymm" (formula "16"))
                                                (rule "applyEqRigid" (formula "49") (term "0,2,0") (ifseqformula "16"))
                                                 (builtin "One Step Simplification" (formula "49"))
                                                (rule "applyEq" (formula "25") (term "0,1") (ifseqformula "16"))
                                                 (builtin "One Step Simplification" (formula "25"))
                                                (rule "applyEqRigid" (formula "24") (term "0,1") (ifseqformula "16"))
                                                 (builtin "One Step Simplification" (formula "24"))
                                                (rule "applyEqRigid" (formula "17") (term "1") (ifseqformula "16"))
                                                (rule "applyEq" (formula "24") (term "2,0") (ifseqformula "16"))
                                                (rule "elementOfSubsetOfUnion2" (formula "24") (term "0,0") (ifseqformula "19") (ifseqformula "52"))
                                                (rule "elementOfIntersect" (formula "24") (term "1"))
                                                 (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "60")))
                                                (rule "replaceKnownSelect_taclet0_4" (formula "24") (term "0,0,1,1"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet0_5" (formula "24") (term "0,0,1,1"))
                                                (rule "replace_known_left" (formula "24") (term "0,1,1") (ifseqformula "8"))
                                                 (builtin "One Step Simplification" (formula "24"))
                                                (rule "notLeft" (formula "24"))
                                                (rule "replace_known_right" (formula "24") (term "0,0") (ifseqformula "52"))
                                                 (builtin "One Step Simplification" (formula "24"))
                                                (rule "eqSymm" (formula "24"))
                                                (rule "applyEq" (formula "49") (term "2,0") (ifseqformula "24"))
                                                (rule "applyEqRigid" (formula "25") (term "1") (ifseqformula "24"))
                                                (rule "elementOfSubsetOfUnion2" (formula "52") (ifseqformula "19") (ifseqformula "53"))
                                                (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "53"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "notLeft" (formula "1"))
                                                (rule "elementOfIntersect" (formula "52"))
                                                 (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "53")))
                                                (rule "false_right" (formula "52"))
                                                (rule "equalityToSeqGetAndSeqLenLeft" (formula "34") (inst "iv=iv"))
                                                 (builtin "One Step Simplification" (formula "34"))
                                                (rule "andLeft" (formula "34"))
                                                (rule "inEqSimp_ltToLeq" (formula "35") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "35") (term "0,0,0"))
                                                (rule "applyEq" (formula "35") (term "0,0,1,0") (ifseqformula "36"))
                                                 (builtin "One Step Simplification" (formula "35"))
                                                (rule "true_left" (formula "35"))
                                                (rule "applyEq" (formula "34") (term "0,0") (ifseqformula "35"))
                                                 (builtin "One Step Simplification" (formula "34"))
                                                (rule "true_left" (formula "34"))
                                                (rule "equalityToSeqGetAndSeqLenLeft" (formula "42") (inst "iv=iv"))
                                                 (builtin "One Step Simplification" (formula "42"))
                                                (rule "andLeft" (formula "42"))
                                                (rule "getOfSeqSingleton" (formula "43") (term "1,1,0"))
                                                (rule "castDel" (formula "43") (term "2,1,1,0"))
                                                (rule "castDel" (formula "43") (term "1,1,1,0"))
                                                (rule "eqSymm" (formula "43") (term "1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "43") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "43") (term "0,0,0"))
                                                (rule "applyEq" (formula "42") (term "0,0") (ifseqformula "44"))
                                                 (builtin "One Step Simplification" (formula "42"))
                                                (rule "true_left" (formula "42"))
                                                (rule "applyEq" (formula "42") (term "0,0,1,0,0,1,0,0") (ifseqformula "43"))
                                                 (builtin "One Step Simplification" (formula "42"))
                                                (rule "mul_literals" (formula "42") (term "1,0,0,1,0,0"))
                                                (rule "add_literals" (formula "42") (term "0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "42") (term "0,1,0,0"))
                                                (rule "applyEqRigid" (formula "42") (term "0,1,1,0") (ifseqformula "43"))
                                                (rule "getOfSeqSingleton" (formula "42") (term "1,1,0"))
                                                (rule "castDel" (formula "42") (term "1,1,1,0"))
                                                (rule "castDel" (formula "42") (term "2,1,1,0"))
                                                 (builtin "One Step Simplification" (formula "42"))
                                                (rule "true_left" (formula "42"))
                                                (rule "equalityToSeqGetAndSeqLenLeft" (formula "10") (inst "iv=iv"))
                                                 (builtin "One Step Simplification" (formula "10"))
                                                (rule "andLeft" (formula "10"))
                                                (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
                                                (rule "applyEq" (formula "11") (term "0,0,1,0,0,1,0,0") (ifseqformula "12"))
                                                 (builtin "One Step Simplification" (formula "11"))
                                                (rule "mul_literals" (formula "11") (term "1,0,0,1,0,0"))
                                                (rule "add_literals" (formula "11") (term "0,0,1,0,0"))
                                                (rule "applyEq" (formula "11") (term "0,0,1,0") (ifseqformula "12"))
                                                 (builtin "One Step Simplification" (formula "11"))
                                                (rule "true_left" (formula "11"))
                                                (rule "ifthenelse_split" (formula "27") (term "0"))
                                                (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_add<<anonHeapFunction>> TRUE"
                                                   (rule "applyEqReverse" (formula "29") (term "0") (ifseqformula "28"))
                                                   (rule "hideAuxiliaryEq" (formula "28"))
                                                   (rule "elementOfSubsetImpliesElementOfSuperset" (formula "27") (ifseqformula "20"))
                                                   (rule "elementOfUnion" (formula "27"))
                                                    (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "19")))
                                                   (rule "true_left" (formula "27"))
                                                   (rule "ifthenelse_split" (formula "50") (term "0"))
                                                   (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> TRUE"
                                                      (rule "applyEqReverse" (formula "52") (term "0,0") (ifseqformula "51"))
                                                      (rule "hideAuxiliaryEq" (formula "51"))
                                                      (rule "elementOfSubsetImpliesElementOfSuperset" (formula "50") (ifseqformula "36"))
                                                       (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "62")))
                                                      (rule "replaceKnownSelect_taclet010000000000_31" (formula "50") (term "0,0"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet010000000000_32" (formula "50") (term "0,0"))
                                                      (rule "notLeft" (formula "50"))
                                                      (rule "close" (formula "53") (ifseqformula "8"))
                                                   )
                                                   (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> FALSE"
                                                      (rule "applyEqReverse" (formula "51") (term "0,0") (ifseqformula "50"))
                                                      (rule "hideAuxiliaryEq" (formula "50"))
                                                      (rule "getOfSeqSingletonEQ" (formula "50") (term "0") (ifseqformula "25"))
                                                      (rule "castDel" (formula "50") (term "1,0"))
                                                      (rule "equal_literals" (formula "50") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "50"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "42") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "42"))
                                                      (rule "andLeft" (formula "42"))
                                                      (rule "getOfSeqSingleton" (formula "43") (term "1,1,0"))
                                                      (rule "castDel" (formula "43") (term "1,1,1,0"))
                                                      (rule "castDel" (formula "43") (term "2,1,1,0"))
                                                      (rule "eqSymm" (formula "43") (term "1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "43") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "43") (term "0,0,0"))
                                                      (rule "applyEq" (formula "42") (term "0,0") (ifseqformula "44"))
                                                       (builtin "One Step Simplification" (formula "42"))
                                                      (rule "true_left" (formula "42"))
                                                      (rule "applyEq" (formula "42") (term "0,0,1,0,0,1,0,0") (ifseqformula "43"))
                                                       (builtin "One Step Simplification" (formula "42"))
                                                      (rule "mul_literals" (formula "42") (term "1,0,0,1,0,0"))
                                                      (rule "add_literals" (formula "42") (term "0,0,1,0,0"))
                                                      (rule "add_zero_left" (formula "42") (term "0,1,0,0"))
                                                      (rule "applyEq" (formula "42") (term "0,1,1,0") (ifseqformula "43"))
                                                      (rule "getOfSeqSingleton" (formula "42") (term "1,1,0"))
                                                      (rule "castDel" (formula "42") (term "2,1,1,0"))
                                                      (rule "castDel" (formula "42") (term "1,1,1,0"))
                                                       (builtin "One Step Simplification" (formula "42"))
                                                      (rule "true_left" (formula "42"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "17") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "17"))
                                                      (rule "equal_literals" (formula "17") (term "0"))
                                                       (builtin "One Step Simplification" (formula "17"))
                                                      (rule "closeFalse" (formula "17"))
                                                   )
                                                )
                                                (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_add<<anonHeapFunction>> FALSE"
                                                   (rule "applyEqReverse" (formula "28") (term "0") (ifseqformula "27"))
                                                    (builtin "One Step Simplification" (formula "28"))
                                                   (rule "true_left" (formula "28"))
                                                   (rule "hideAuxiliaryEq" (formula "27"))
                                                   (rule "ifthenelse_split" (formula "48") (term "0"))
                                                   (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> TRUE"
                                                      (rule "applyEqReverse" (formula "50") (term "0,0") (ifseqformula "49"))
                                                      (rule "hideAuxiliaryEq" (formula "49"))
                                                      (rule "elementOfSubsetImpliesElementOfSuperset" (formula "48") (ifseqformula "34"))
                                                       (builtin "One Step Simplification" (formula "48") (ifInst ""  (formula "61")))
                                                      (rule "replaceKnownSelect_taclet010000000000_31" (formula "48") (term "0,0"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet010000000000_32" (formula "48") (term "0,0"))
                                                      (rule "notLeft" (formula "48"))
                                                      (rule "close" (formula "51") (ifseqformula "8"))
                                                   )
                                                   (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> FALSE"
                                                      (rule "applyEqReverse" (formula "49") (term "0,0") (ifseqformula "48"))
                                                      (rule "hideAuxiliaryEq" (formula "48"))
                                                      (rule "getOfSeqSingletonEQ" (formula "48") (term "0") (ifseqformula "17"))
                                                      (rule "castDel" (formula "48") (term "1,0"))
                                                      (rule "equal_literals" (formula "48") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "48"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "40") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "40"))
                                                      (rule "andLeft" (formula "40"))
                                                      (rule "getOfSeqSingleton" (formula "41") (term "1,1,0"))
                                                      (rule "castDel" (formula "41") (term "1,1,1,0"))
                                                      (rule "castDel" (formula "41") (term "2,1,1,0"))
                                                      (rule "eqSymm" (formula "41") (term "1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "41") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "41") (term "0,0,0"))
                                                      (rule "applyEq" (formula "41") (term "0,0,1,0,0,1,0,0") (ifseqformula "42"))
                                                       (builtin "One Step Simplification" (formula "41"))
                                                      (rule "mul_literals" (formula "41") (term "1,0,0,1,0,0"))
                                                      (rule "add_literals" (formula "41") (term "0,0,1,0,0"))
                                                      (rule "add_zero_left" (formula "41") (term "0,1,0,0"))
                                                      (rule "applyEq" (formula "40") (term "0,0") (ifseqformula "42"))
                                                       (builtin "One Step Simplification" (formula "40"))
                                                      (rule "true_left" (formula "40"))
                                                      (rule "applyEq" (formula "40") (term "0,1,1,0") (ifseqformula "41"))
                                                      (rule "getOfSeqSingleton" (formula "40") (term "1,1,0"))
                                                      (rule "castDel" (formula "40") (term "1,1,1,0"))
                                                      (rule "castDel" (formula "40") (term "2,1,1,0"))
                                                       (builtin "One Step Simplification" (formula "40"))
                                                      (rule "true_left" (formula "40"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "17") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "17"))
                                                      (rule "equal_literals" (formula "17") (term "0"))
                                                       (builtin "One Step Simplification" (formula "17"))
                                                      (rule "closeFalse" (formula "17"))
                                                   )
                                                )
                                             )
                                          )
                                          (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_ArrayList<<anonHeapFunction>> FALSE"
                                             (rule "applyEqReverse" (formula "26") (term "2,0,0") (ifseqformula "18"))
                                             (rule "applyEqReverse" (formula "27") (term "0,1") (ifseqformula "18"))
                                             (rule "applyEqReverse" (formula "24") (term "2,0,0") (ifseqformula "18"))
                                             (rule "applyEqReverse" (formula "22") (term "1,0") (ifseqformula "18"))
                                             (rule "applyEqReverse" (formula "19") (term "0") (ifseqformula "18"))
                                              (builtin "One Step Simplification" (formula "19"))
                                             (rule "true_left" (formula "19"))
                                             (rule "applyEqReverse" (formula "25") (term "2,0") (ifseqformula "18"))
                                             (rule "hideAuxiliaryEq" (formula "18"))
                                             (rule "replace_known_right" (formula "24") (term "0,0") (ifseqformula "50"))
                                              (builtin "One Step Simplification" (formula "24"))
                                             (rule "applyEqReverse" (formula "25") (term "0") (ifseqformula "24"))
                                              (builtin "One Step Simplification" (formula "25"))
                                             (rule "true_left" (formula "25"))
                                             (rule "hideAuxiliaryEq" (formula "24"))
                                             (rule "ifthenelse_split" (formula "16") (term "0"))
                                             (branch "(self_0, List::$seq) in self_0.footprint@anon_heap_ArrayList<<anonHeapFunction>> TRUE"
                                                (rule "replace_known_left" (formula "23") (term "0,0") (ifseqformula "16"))
                                                 (builtin "One Step Simplification" (formula "23"))
                                                (rule "elementOfSubsetImpliesElementOfSuperset" (formula "16") (ifseqformula "11"))
                                                 (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "57")) (ifInst ""  (formula "56")))
                                                (rule "true_left" (formula "16"))
                                                (rule "ifthenelse_split" (formula "46") (term "0"))
                                                (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> TRUE"
                                                   (rule "applyEqReverse" (formula "48") (term "0,0") (ifseqformula "47"))
                                                   (rule "hideAuxiliaryEq" (formula "47"))
                                                   (rule "elementOfSubsetImpliesElementOfSuperset" (formula "46") (ifseqformula "32"))
                                                    (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "57")))
                                                   (rule "replaceKnownSelect_taclet010000000000_31" (formula "46") (term "0,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet010000000000_32" (formula "46") (term "0,0"))
                                                   (rule "notLeft" (formula "46"))
                                                   (rule "close" (formula "49") (ifseqformula "8"))
                                                )
                                                (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> FALSE"
                                                   (rule "applyEqReverse" (formula "47") (term "0,0") (ifseqformula "46"))
                                                   (rule "hideAuxiliaryEq" (formula "46"))
                                                   (rule "getOfSeqConcat" (formula "46") (term "0"))
                                                    (builtin "One Step Simplification" (formula "46"))
                                                   (rule "sub_literals" (formula "46") (term "1,2,0"))
                                                    (builtin "One Step Simplification" (formula "46"))
                                                   (rule "castDel" (formula "46") (term "2,0"))
                                                   (rule "less_literals" (formula "46") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "46"))
                                                   (rule "eqSymm" (formula "46"))
                                                   (rule "close" (formula "58") (ifseqformula "46"))
                                                )
                                             )
                                             (branch "(self_0, List::$seq) in self_0.footprint@anon_heap_ArrayList<<anonHeapFunction>> FALSE"
                                                (rule "eqSymm" (formula "16"))
                                                (rule "replace_known_right" (formula "22") (term "0,0") (ifseqformula "48"))
                                                 (builtin "One Step Simplification" (formula "22"))
                                                (rule "eqSymm" (formula "22"))
                                                (rule "applyEqRigid" (formula "22") (term "1") (ifseqformula "16"))
                                                (rule "applyEq" (formula "45") (term "0,2,0") (ifseqformula "16"))
                                                 (builtin "One Step Simplification" (formula "45"))
                                                (rule "applyEq" (formula "23") (term "0,1") (ifseqformula "16"))
                                                 (builtin "One Step Simplification" (formula "23"))
                                                (rule "applyEq" (formula "17") (term "1") (ifseqformula "16"))
                                                (rule "applyEq" (formula "22") (term "0,0") (ifseqformula "16"))
                                                 (builtin "One Step Simplification" (formula "22"))
                                                (rule "applyEqRigid" (formula "45") (term "2,0") (ifseqformula "22"))
                                                (rule "applyEqRigid" (formula "23") (term "1") (ifseqformula "22"))
                                                (rule "equalityToSeqGetAndSeqLenLeft" (formula "30") (inst "iv=iv"))
                                                 (builtin "One Step Simplification" (formula "30"))
                                                (rule "andLeft" (formula "30"))
                                                (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "31") (term "0,0,0"))
                                                (rule "applyEq" (formula "31") (term "0,0,1,0,0,1,0,0") (ifseqformula "32"))
                                                 (builtin "One Step Simplification" (formula "31"))
                                                (rule "mul_literals" (formula "31") (term "1,0,0,1,0,0"))
                                                (rule "add_literals" (formula "31") (term "0,0,1,0,0"))
                                                (rule "applyEq" (formula "30") (term "0,0") (ifseqformula "32"))
                                                 (builtin "One Step Simplification" (formula "30"))
                                                (rule "true_left" (formula "30"))
                                                (rule "applyEq" (formula "30") (term "0,0,1,0") (ifseqformula "31"))
                                                 (builtin "One Step Simplification" (formula "30"))
                                                (rule "true_left" (formula "30"))
                                                (rule "equalityToSeqGetAndSeqLenLeft" (formula "10") (inst "iv=iv"))
                                                 (builtin "One Step Simplification" (formula "10"))
                                                (rule "andLeft" (formula "10"))
                                                (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
                                                (rule "applyEq" (formula "11") (term "0,0,1,0,0,1,0,0") (ifseqformula "12"))
                                                 (builtin "One Step Simplification" (formula "11"))
                                                (rule "mul_literals" (formula "11") (term "1,0,0,1,0,0"))
                                                (rule "add_literals" (formula "11") (term "0,0,1,0,0"))
                                                (rule "applyEq" (formula "11") (term "0,0,1,0") (ifseqformula "12"))
                                                 (builtin "One Step Simplification" (formula "11"))
                                                (rule "true_left" (formula "11"))
                                                (rule "equalityToSeqGetAndSeqLenLeft" (formula "39") (inst "iv=iv"))
                                                 (builtin "One Step Simplification" (formula "39"))
                                                (rule "andLeft" (formula "39"))
                                                (rule "getOfSeqSingleton" (formula "40") (term "1,1,0"))
                                                (rule "castDel" (formula "40") (term "2,1,1,0"))
                                                (rule "castDel" (formula "40") (term "1,1,1,0"))
                                                (rule "eqSymm" (formula "40") (term "1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "40") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "40") (term "0,0,0"))
                                                (rule "applyEq" (formula "40") (term "0,1,1,0") (ifseqformula "41"))
                                                (rule "getOfSeqSingleton" (formula "40") (term "1,1,0"))
                                                (rule "castDel" (formula "40") (term "1,1,1,0"))
                                                (rule "castDel" (formula "40") (term "2,1,1,0"))
                                                 (builtin "One Step Simplification" (formula "40"))
                                                (rule "true_left" (formula "40"))
                                                (rule "applyEqRigid" (formula "39") (term "0,0") (ifseqformula "40"))
                                                 (builtin "One Step Simplification" (formula "39"))
                                                (rule "true_left" (formula "39"))
                                                (rule "ifthenelse_split" (formula "46") (term "0"))
                                                (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> TRUE"
                                                   (rule "applyEqReverse" (formula "48") (term "0,0") (ifseqformula "47"))
                                                   (rule "hideAuxiliaryEq" (formula "47"))
                                                   (rule "elementOfSubsetImpliesElementOfSuperset" (formula "46") (ifseqformula "32"))
                                                    (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "58")))
                                                   (rule "replaceKnownSelect_taclet010000000000_31" (formula "46") (term "0,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet010000000000_32" (formula "46") (term "0,0"))
                                                   (rule "notLeft" (formula "46"))
                                                   (rule "close" (formula "49") (ifseqformula "8"))
                                                )
                                                (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> FALSE"
                                                   (rule "applyEqReverse" (formula "47") (term "0,0") (ifseqformula "46"))
                                                   (rule "hideAuxiliaryEq" (formula "46"))
                                                   (rule "getOfSeqSingletonEQ" (formula "46") (term "0") (ifseqformula "17"))
                                                   (rule "castDel" (formula "46") (term "1,0"))
                                                   (rule "equal_literals" (formula "46") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "46"))
                                                   (rule "equalityToSeqGetAndSeqLenLeft" (formula "38") (inst "iv=iv"))
                                                    (builtin "One Step Simplification" (formula "38"))
                                                   (rule "andLeft" (formula "38"))
                                                   (rule "getOfSeqSingleton" (formula "39") (term "1,1,0"))
                                                   (rule "castDel" (formula "39") (term "1,1,1,0"))
                                                   (rule "castDel" (formula "39") (term "2,1,1,0"))
                                                   (rule "eqSymm" (formula "39") (term "1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "39") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "39") (term "0,0,0"))
                                                   (rule "applyEq" (formula "39") (term "0,0,1,0,0,1,0,0") (ifseqformula "40"))
                                                    (builtin "One Step Simplification" (formula "39"))
                                                   (rule "mul_literals" (formula "39") (term "1,0,0,1,0,0"))
                                                   (rule "add_literals" (formula "39") (term "0,0,1,0,0"))
                                                   (rule "add_zero_left" (formula "39") (term "0,1,0,0"))
                                                   (rule "applyEq" (formula "38") (term "0,0") (ifseqformula "40"))
                                                    (builtin "One Step Simplification" (formula "38"))
                                                   (rule "true_left" (formula "38"))
                                                   (rule "applyEq" (formula "38") (term "0,1,1,0") (ifseqformula "39"))
                                                   (rule "getOfSeqSingleton" (formula "38") (term "1,1,0"))
                                                   (rule "castDel" (formula "38") (term "1,1,1,0"))
                                                   (rule "castDel" (formula "38") (term "2,1,1,0"))
                                                    (builtin "One Step Simplification" (formula "38"))
                                                   (rule "true_left" (formula "38"))
                                                   (rule "equalityToSeqGetAndSeqLenLeft" (formula "17") (inst "iv=iv"))
                                                    (builtin "One Step Simplification" (formula "17"))
                                                   (rule "equal_literals" (formula "17") (term "0"))
                                                    (builtin "One Step Simplification" (formula "17"))
                                                   (rule "closeFalse" (formula "17"))
                                                )
                                             )
                                          )
                                       )
                                       (branch "(self_1, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> FALSE"
                                          (rule "eqSymm" (formula "40"))
                                          (rule "applyEqRigid" (formula "41") (term "1") (ifseqformula "40"))
                                          (rule "ifthenelse_split" (formula "18") (term "0"))
                                          (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_ArrayList<<anonHeapFunction>> TRUE"
                                             (rule "applyEqReverse" (formula "27") (term "2,0") (ifseqformula "19"))
                                             (rule "applyEqReverse" (formula "28") (term "0,1") (ifseqformula "19"))
                                             (rule "applyEqReverse" (formula "20") (term "0") (ifseqformula "19"))
                                             (rule "applyEqReverse" (formula "23") (term "1,0") (ifseqformula "19"))
                                             (rule "applyEqReverse" (formula "25") (term "2,0,0") (ifseqformula "19"))
                                             (rule "applyEqReverse" (formula "27") (term "2,0,0") (ifseqformula "19"))
                                             (rule "hideAuxiliaryEq" (formula "19"))
                                             (rule "elementOfSubsetImpliesElementOfSuperset" (formula "18") (ifseqformula "11"))
                                              (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "59")) (ifInst ""  (formula "58")))
                                             (rule "true_left" (formula "18"))
                                             (rule "commuteUnion" (formula "27") (term "1"))
                                             (rule "ifthenelse_split" (formula "16") (term "0"))
                                             (branch "(self_0, List::$seq) in self_0.footprint@anon_heap_ArrayList<<anonHeapFunction>> TRUE"
                                                (rule "elementOfSubsetImpliesElementOfSuperset" (formula "16") (ifseqformula "11"))
                                                 (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "60")) (ifInst ""  (formula "59")))
                                                (rule "true_left" (formula "16"))
                                                (rule "ifthenelse_split" (formula "49") (term "0"))
                                                (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> TRUE"
                                                   (rule "applyEqReverse" (formula "51") (term "0,0") (ifseqformula "50"))
                                                   (rule "hideAuxiliaryEq" (formula "50"))
                                                   (rule "elementOfSubsetImpliesElementOfSuperset" (formula "49") (ifseqformula "36"))
                                                    (builtin "One Step Simplification" (formula "49") (ifInst ""  (formula "60")))
                                                   (rule "replaceKnownSelect_taclet010000000000_31" (formula "49") (term "0,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet010000000000_32" (formula "49") (term "0,0"))
                                                   (rule "notLeft" (formula "49"))
                                                   (rule "close" (formula "52") (ifseqformula "8"))
                                                )
                                                (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> FALSE"
                                                   (rule "applyEqReverse" (formula "50") (term "0,0") (ifseqformula "49"))
                                                   (rule "hideAuxiliaryEq" (formula "49"))
                                                   (rule "getOfSeqConcat" (formula "49") (term "0"))
                                                    (builtin "One Step Simplification" (formula "49"))
                                                   (rule "less_literals" (formula "49") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "49"))
                                                   (rule "sub_literals" (formula "49") (term "1,0"))
                                                    (builtin "One Step Simplification" (formula "49"))
                                                   (rule "castDel" (formula "49") (term "0"))
                                                   (rule "eqSymm" (formula "49"))
                                                   (rule "close" (formula "61") (ifseqformula "49"))
                                                )
                                             )
                                             (branch "(self_0, List::$seq) in self_0.footprint@anon_heap_ArrayList<<anonHeapFunction>> FALSE"
                                                (rule "eqSymm" (formula "16"))
                                                (rule "applyEqRigid" (formula "48") (term "0,2,0") (ifseqformula "16"))
                                                 (builtin "One Step Simplification" (formula "48"))
                                                (rule "applyEqRigid" (formula "24") (term "0,1") (ifseqformula "16"))
                                                 (builtin "One Step Simplification" (formula "24"))
                                                (rule "applyEqRigid" (formula "25") (term "0,1") (ifseqformula "16"))
                                                 (builtin "One Step Simplification" (formula "25"))
                                                (rule "applyEq" (formula "17") (term "1") (ifseqformula "16"))
                                                (rule "applyEqRigid" (formula "24") (term "2,0") (ifseqformula "16"))
                                                (rule "elementOfSubsetOfUnion2" (formula "24") (term "0,0") (ifseqformula "19") (ifseqformula "51"))
                                                (rule "elementOfIntersect" (formula "24") (term "1"))
                                                 (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "60")))
                                                (rule "replaceKnownSelect_taclet0_4" (formula "24") (term "0,0,1,1"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet0_5" (formula "24") (term "0,0,1,1"))
                                                (rule "replace_known_left" (formula "24") (term "0,1,1") (ifseqformula "8"))
                                                 (builtin "One Step Simplification" (formula "24"))
                                                (rule "notLeft" (formula "24"))
                                                (rule "replace_known_right" (formula "24") (term "0,0") (ifseqformula "51"))
                                                 (builtin "One Step Simplification" (formula "24"))
                                                (rule "eqSymm" (formula "24"))
                                                (rule "applyEq" (formula "25") (term "1") (ifseqformula "24"))
                                                (rule "applyEq" (formula "48") (term "2,0") (ifseqformula "24"))
                                                (rule "elementOfSubsetOfUnion2" (formula "51") (ifseqformula "19") (ifseqformula "52"))
                                                (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "52"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "notLeft" (formula "1"))
                                                (rule "elementOfIntersect" (formula "51"))
                                                 (builtin "One Step Simplification" (formula "51") (ifInst ""  (formula "52")))
                                                (rule "false_right" (formula "51"))
                                                (rule "equalityToSeqGetAndSeqLenLeft" (formula "34") (inst "iv=iv"))
                                                 (builtin "One Step Simplification" (formula "34"))
                                                (rule "andLeft" (formula "34"))
                                                (rule "inEqSimp_ltToLeq" (formula "35") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "35") (term "0,0,0"))
                                                (rule "applyEq" (formula "34") (term "0,0") (ifseqformula "36"))
                                                 (builtin "One Step Simplification" (formula "34"))
                                                (rule "true_left" (formula "34"))
                                                (rule "applyEq" (formula "34") (term "0,0,1,0") (ifseqformula "35"))
                                                 (builtin "One Step Simplification" (formula "34"))
                                                (rule "true_left" (formula "34"))
                                                (rule "equalityToSeqGetAndSeqLenLeft" (formula "10") (inst "iv=iv"))
                                                 (builtin "One Step Simplification" (formula "10"))
                                                (rule "andLeft" (formula "10"))
                                                (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
                                                (rule "applyEq" (formula "11") (term "0,0,1,0") (ifseqformula "12"))
                                                 (builtin "One Step Simplification" (formula "11"))
                                                (rule "true_left" (formula "11"))
                                                (rule "ifthenelse_split" (formula "27") (term "0"))
                                                (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_add<<anonHeapFunction>> TRUE"
                                                   (rule "applyEqReverse" (formula "29") (term "0") (ifseqformula "28"))
                                                   (rule "hideAuxiliaryEq" (formula "28"))
                                                   (rule "elementOfSubsetImpliesElementOfSuperset" (formula "27") (ifseqformula "20"))
                                                   (rule "elementOfUnion" (formula "27"))
                                                    (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "19")))
                                                   (rule "true_left" (formula "27"))
                                                   (rule "ifthenelse_split" (formula "49") (term "0"))
                                                   (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> TRUE"
                                                      (rule "applyEqReverse" (formula "51") (term "0,0") (ifseqformula "50"))
                                                      (rule "hideAuxiliaryEq" (formula "50"))
                                                      (rule "elementOfSubsetImpliesElementOfSuperset" (formula "49") (ifseqformula "36"))
                                                       (builtin "One Step Simplification" (formula "49") (ifInst ""  (formula "62")))
                                                      (rule "replaceKnownSelect_taclet010000000000_31" (formula "49") (term "0,0"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet010000000000_32" (formula "49") (term "0,0"))
                                                      (rule "notLeft" (formula "49"))
                                                      (rule "close" (formula "52") (ifseqformula "8"))
                                                   )
                                                   (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> FALSE"
                                                      (rule "applyEqReverse" (formula "50") (term "0,0") (ifseqformula "49"))
                                                      (rule "hideAuxiliaryEq" (formula "49"))
                                                      (rule "getOfSeqSingletonEQ" (formula "49") (term "0") (ifseqformula "25"))
                                                      (rule "castDel" (formula "49") (term "1,0"))
                                                      (rule "equal_literals" (formula "49") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "49"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "41") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "41"))
                                                      (rule "equal_literals" (formula "41") (term "0"))
                                                       (builtin "One Step Simplification" (formula "41"))
                                                      (rule "closeFalse" (formula "41"))
                                                   )
                                                )
                                                (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_add<<anonHeapFunction>> FALSE"
                                                   (rule "applyEqReverse" (formula "28") (term "0") (ifseqformula "27"))
                                                    (builtin "One Step Simplification" (formula "28"))
                                                   (rule "true_left" (formula "28"))
                                                   (rule "hideAuxiliaryEq" (formula "27"))
                                                   (rule "ifthenelse_split" (formula "47") (term "0"))
                                                   (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> TRUE"
                                                      (rule "applyEqReverse" (formula "49") (term "0,0") (ifseqformula "48"))
                                                      (rule "hideAuxiliaryEq" (formula "48"))
                                                      (rule "elementOfSubsetImpliesElementOfSuperset" (formula "47") (ifseqformula "34"))
                                                       (builtin "One Step Simplification" (formula "47") (ifInst ""  (formula "61")))
                                                      (rule "replaceKnownSelect_taclet010000000000_31" (formula "47") (term "0,0"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet010000000000_32" (formula "47") (term "0,0"))
                                                      (rule "notLeft" (formula "47"))
                                                      (rule "close" (formula "50") (ifseqformula "8"))
                                                   )
                                                   (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> FALSE"
                                                      (rule "applyEqReverse" (formula "48") (term "0,0") (ifseqformula "47"))
                                                      (rule "hideAuxiliaryEq" (formula "47"))
                                                      (rule "getOfSeqSingletonEQ" (formula "47") (term "0") (ifseqformula "25"))
                                                      (rule "castDel" (formula "47") (term "1,0"))
                                                      (rule "equal_literals" (formula "47") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "47"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "39") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "39"))
                                                      (rule "equal_literals" (formula "39") (term "0"))
                                                       (builtin "One Step Simplification" (formula "39"))
                                                      (rule "closeFalse" (formula "39"))
                                                   )
                                                )
                                             )
                                          )
                                          (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_ArrayList<<anonHeapFunction>> FALSE"
                                             (rule "applyEqReverse" (formula "26") (term "2,0,0") (ifseqformula "18"))
                                             (rule "applyEqReverse" (formula "27") (term "0,1") (ifseqformula "18"))
                                             (rule "applyEqReverse" (formula "22") (term "1,0") (ifseqformula "18"))
                                             (rule "applyEqReverse" (formula "19") (term "0") (ifseqformula "18"))
                                              (builtin "One Step Simplification" (formula "19"))
                                             (rule "true_left" (formula "19"))
                                             (rule "applyEqReverse" (formula "25") (term "2,0") (ifseqformula "18"))
                                             (rule "applyEqReverse" (formula "23") (term "2,0,0") (ifseqformula "18"))
                                             (rule "hideAuxiliaryEq" (formula "18"))
                                             (rule "replace_known_right" (formula "24") (term "0,0") (ifseqformula "49"))
                                              (builtin "One Step Simplification" (formula "24"))
                                             (rule "applyEqReverse" (formula "25") (term "0") (ifseqformula "24"))
                                              (builtin "One Step Simplification" (formula "25"))
                                             (rule "true_left" (formula "25"))
                                             (rule "hideAuxiliaryEq" (formula "24"))
                                             (rule "ifthenelse_split" (formula "16") (term "0"))
                                             (branch "(self_0, List::$seq) in self_0.footprint@anon_heap_ArrayList<<anonHeapFunction>> TRUE"
                                                (rule "replace_known_left" (formula "23") (term "0,0") (ifseqformula "16"))
                                                 (builtin "One Step Simplification" (formula "23"))
                                                (rule "elementOfSubsetImpliesElementOfSuperset" (formula "16") (ifseqformula "11"))
                                                 (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "57")) (ifInst ""  (formula "56")))
                                                (rule "true_left" (formula "16"))
                                                (rule "ifthenelse_split" (formula "45") (term "0"))
                                                (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> TRUE"
                                                   (rule "applyEqReverse" (formula "47") (term "0,0") (ifseqformula "46"))
                                                   (rule "hideAuxiliaryEq" (formula "46"))
                                                   (rule "elementOfSubsetImpliesElementOfSuperset" (formula "45") (ifseqformula "32"))
                                                    (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "57")))
                                                   (rule "replaceKnownSelect_taclet010000000000_31" (formula "45") (term "0,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet010000000000_32" (formula "45") (term "0,0"))
                                                   (rule "notLeft" (formula "45"))
                                                   (rule "close" (formula "48") (ifseqformula "8"))
                                                )
                                                (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> FALSE"
                                                   (rule "applyEqReverse" (formula "46") (term "0,0") (ifseqformula "45"))
                                                   (rule "hideAuxiliaryEq" (formula "45"))
                                                   (rule "getOfSeqConcat" (formula "45") (term "0"))
                                                    (builtin "One Step Simplification" (formula "45"))
                                                   (rule "sub_literals" (formula "45") (term "1,2,0"))
                                                    (builtin "One Step Simplification" (formula "45"))
                                                   (rule "castDel" (formula "45") (term "2,0"))
                                                   (rule "less_literals" (formula "45") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "45"))
                                                   (rule "eqSymm" (formula "45"))
                                                   (rule "close" (formula "58") (ifseqformula "45"))
                                                )
                                             )
                                             (branch "(self_0, List::$seq) in self_0.footprint@anon_heap_ArrayList<<anonHeapFunction>> FALSE"
                                                (rule "eqSymm" (formula "16"))
                                                (rule "replace_known_right" (formula "22") (term "0,0") (ifseqformula "47"))
                                                 (builtin "One Step Simplification" (formula "22"))
                                                (rule "eqSymm" (formula "22"))
                                                (rule "applyEqRigid" (formula "22") (term "1") (ifseqformula "16"))
                                                (rule "applyEqRigid" (formula "22") (term "0,0") (ifseqformula "16"))
                                                 (builtin "One Step Simplification" (formula "22"))
                                                (rule "applyEq" (formula "44") (term "0,2,0") (ifseqformula "16"))
                                                 (builtin "One Step Simplification" (formula "44"))
                                                (rule "applyEq" (formula "17") (term "1") (ifseqformula "16"))
                                                (rule "applyEqRigid" (formula "23") (term "0,1") (ifseqformula "16"))
                                                 (builtin "One Step Simplification" (formula "23"))
                                                (rule "applyEq" (formula "23") (term "1") (ifseqformula "22"))
                                                (rule "applyEq" (formula "44") (term "2,0") (ifseqformula "22"))
                                                (rule "equalityToSeqGetAndSeqLenLeft" (formula "30") (inst "iv=iv"))
                                                 (builtin "One Step Simplification" (formula "30"))
                                                (rule "andLeft" (formula "30"))
                                                (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "31") (term "0,0,0"))
                                                (rule "applyEq" (formula "31") (term "0,0,1,0") (ifseqformula "32"))
                                                 (builtin "One Step Simplification" (formula "31"))
                                                (rule "true_left" (formula "31"))
                                                (rule "applyEq" (formula "30") (term "0,0") (ifseqformula "31"))
                                                 (builtin "One Step Simplification" (formula "30"))
                                                (rule "true_left" (formula "30"))
                                                (rule "equalityToSeqGetAndSeqLenLeft" (formula "10") (inst "iv=iv"))
                                                 (builtin "One Step Simplification" (formula "10"))
                                                (rule "andLeft" (formula "10"))
                                                (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
                                                (rule "applyEq" (formula "11") (term "0,0,1,0") (ifseqformula "12"))
                                                 (builtin "One Step Simplification" (formula "11"))
                                                (rule "true_left" (formula "11"))
                                                (rule "ifthenelse_split" (formula "45") (term "0"))
                                                (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> TRUE"
                                                   (rule "applyEqReverse" (formula "47") (term "0,0") (ifseqformula "46"))
                                                   (rule "hideAuxiliaryEq" (formula "46"))
                                                   (rule "elementOfSubsetImpliesElementOfSuperset" (formula "45") (ifseqformula "32"))
                                                    (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "58")))
                                                   (rule "replaceKnownSelect_taclet010000000000_31" (formula "45") (term "0,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet010000000000_32" (formula "45") (term "0,0"))
                                                   (rule "notLeft" (formula "45"))
                                                   (rule "close" (formula "48") (ifseqformula "8"))
                                                )
                                                (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> FALSE"
                                                   (rule "applyEqReverse" (formula "46") (term "0,0") (ifseqformula "45"))
                                                   (rule "hideAuxiliaryEq" (formula "45"))
                                                   (rule "getOfSeqSingletonEQ" (formula "45") (term "0") (ifseqformula "23"))
                                                   (rule "castDel" (formula "45") (term "1,0"))
                                                   (rule "equal_literals" (formula "45") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "45"))
                                                   (rule "equalityToSeqGetAndSeqLenLeft" (formula "37") (inst "iv=iv"))
                                                    (builtin "One Step Simplification" (formula "37"))
                                                   (rule "equal_literals" (formula "37") (term "0"))
                                                    (builtin "One Step Simplification" (formula "37"))
                                                   (rule "closeFalse" (formula "37"))
                                                )
                                             )
                                          )
                                       )
                                    )
                                    (branch "(self_1, List::$footprint) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> FALSE"
                                       (rule "applyEqReverse" (formula "43") (term "0") (ifseqformula "42"))
                                        (builtin "One Step Simplification" (formula "43"))
                                       (rule "true_left" (formula "43"))
                                       (rule "hideAuxiliaryEq" (formula "42"))
                                       (rule "ifthenelse_split" (formula "40") (term "0"))
                                       (branch "(self_1, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> TRUE"
                                          (rule "elementOfSubsetImpliesElementOfSuperset" (formula "40") (ifseqformula "35"))
                                           (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "56")))
                                          (rule "replaceKnownSelect_taclet0000000_18" (formula "40") (term "0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet0000000_21" (formula "40") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "40"))
                                          (rule "true_left" (formula "40"))
                                          (rule "ifthenelse_split" (formula "18") (term "0"))
                                          (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_ArrayList<<anonHeapFunction>> TRUE"
                                             (rule "applyEqReverse" (formula "23") (term "1,0") (ifseqformula "19"))
                                             (rule "applyEqReverse" (formula "20") (term "0") (ifseqformula "19"))
                                             (rule "applyEqReverse" (formula "27") (term "2,0") (ifseqformula "19"))
                                             (rule "applyEqReverse" (formula "25") (term "2,0,0") (ifseqformula "19"))
                                             (rule "applyEqReverse" (formula "28") (term "0,1") (ifseqformula "19"))
                                             (rule "applyEqReverse" (formula "27") (term "2,0,0") (ifseqformula "19"))
                                             (rule "hideAuxiliaryEq" (formula "19"))
                                             (rule "elementOfSubsetImpliesElementOfSuperset" (formula "18") (ifseqformula "11"))
                                              (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "58")) (ifInst ""  (formula "57")))
                                             (rule "true_left" (formula "18"))
                                             (rule "commuteUnion" (formula "27") (term "1"))
                                             (rule "ifthenelse_split" (formula "16") (term "0"))
                                             (branch "(self_0, List::$seq) in self_0.footprint@anon_heap_ArrayList<<anonHeapFunction>> TRUE"
                                                (rule "elementOfSubsetImpliesElementOfSuperset" (formula "16") (ifseqformula "11"))
                                                 (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "59")) (ifInst ""  (formula "58")))
                                                (rule "true_left" (formula "16"))
                                                (rule "ifthenelse_split" (formula "48") (term "0"))
                                                (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> TRUE"
                                                   (rule "applyEqReverse" (formula "50") (term "0,0") (ifseqformula "49"))
                                                   (rule "hideAuxiliaryEq" (formula "49"))
                                                   (rule "elementOfSubsetImpliesElementOfSuperset" (formula "48") (ifseqformula "36"))
                                                    (builtin "One Step Simplification" (formula "48") (ifInst ""  (formula "59")))
                                                   (rule "replaceKnownSelect_taclet010000000000_31" (formula "48") (term "0,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet010000000000_32" (formula "48") (term "0,0"))
                                                   (rule "notLeft" (formula "48"))
                                                   (rule "close" (formula "51") (ifseqformula "8"))
                                                )
                                                (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> FALSE"
                                                   (rule "applyEqReverse" (formula "49") (term "0,0") (ifseqformula "48"))
                                                   (rule "hideAuxiliaryEq" (formula "48"))
                                                   (rule "getOfSeqConcat" (formula "48") (term "0"))
                                                    (builtin "One Step Simplification" (formula "48"))
                                                   (rule "less_literals" (formula "48") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "48"))
                                                   (rule "sub_literals" (formula "48") (term "1,0"))
                                                    (builtin "One Step Simplification" (formula "48"))
                                                   (rule "castDel" (formula "48") (term "0"))
                                                   (rule "eqSymm" (formula "48"))
                                                   (rule "close" (formula "60") (ifseqformula "48"))
                                                )
                                             )
                                             (branch "(self_0, List::$seq) in self_0.footprint@anon_heap_ArrayList<<anonHeapFunction>> FALSE"
                                                (rule "eqSymm" (formula "16"))
                                                (rule "applyEq" (formula "25") (term "0,1") (ifseqformula "16"))
                                                 (builtin "One Step Simplification" (formula "25"))
                                                (rule "applyEq" (formula "24") (term "2,0") (ifseqformula "16"))
                                                (rule "applyEqRigid" (formula "17") (term "1") (ifseqformula "16"))
                                                (rule "applyEqRigid" (formula "24") (term "0,1") (ifseqformula "16"))
                                                 (builtin "One Step Simplification" (formula "24"))
                                                (rule "applyEqRigid" (formula "47") (term "0,2,0") (ifseqformula "16"))
                                                 (builtin "One Step Simplification" (formula "47"))
                                                (rule "elementOfSubsetOfUnion2" (formula "24") (term "0,0") (ifseqformula "19") (ifseqformula "50"))
                                                (rule "elementOfIntersect" (formula "24") (term "1"))
                                                 (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "59")))
                                                (rule "replaceKnownSelect_taclet0_4" (formula "24") (term "0,0,1,1"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet0_5" (formula "24") (term "0,0,1,1"))
                                                (rule "replace_known_left" (formula "24") (term "0,1,1") (ifseqformula "8"))
                                                 (builtin "One Step Simplification" (formula "24"))
                                                (rule "notLeft" (formula "24"))
                                                (rule "replace_known_right" (formula "24") (term "0,0") (ifseqformula "50"))
                                                 (builtin "One Step Simplification" (formula "24"))
                                                (rule "eqSymm" (formula "24"))
                                                (rule "applyEq" (formula "25") (term "1") (ifseqformula "24"))
                                                (rule "applyEqRigid" (formula "47") (term "2,0") (ifseqformula "24"))
                                                (rule "elementOfSubsetOfUnion2" (formula "50") (ifseqformula "19") (ifseqformula "51"))
                                                (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "51"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "notLeft" (formula "1"))
                                                (rule "elementOfIntersect" (formula "50"))
                                                 (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "51")))
                                                (rule "false_right" (formula "50"))
                                                (rule "equalityToSeqGetAndSeqLenLeft" (formula "42") (inst "iv=iv"))
                                                 (builtin "One Step Simplification" (formula "42"))
                                                (rule "andLeft" (formula "42"))
                                                (rule "getOfSeqSingleton" (formula "43") (term "1,1,0"))
                                                (rule "castDel" (formula "43") (term "2,1,1,0"))
                                                (rule "castDel" (formula "43") (term "1,1,1,0"))
                                                (rule "eqSymm" (formula "43") (term "1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "43") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "43") (term "0,0,0"))
                                                (rule "applyEq" (formula "43") (term "0,0,1,0,0,1,0,0") (ifseqformula "44"))
                                                 (builtin "One Step Simplification" (formula "43"))
                                                (rule "mul_literals" (formula "43") (term "1,0,0,1,0,0"))
                                                (rule "add_literals" (formula "43") (term "0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "43") (term "0,1,0,0"))
                                                (rule "applyEq" (formula "42") (term "0,0") (ifseqformula "44"))
                                                 (builtin "One Step Simplification" (formula "42"))
                                                (rule "true_left" (formula "42"))
                                                (rule "applyEqRigid" (formula "42") (term "0,1,1,0") (ifseqformula "43"))
                                                (rule "getOfSeqSingleton" (formula "42") (term "1,1,0"))
                                                (rule "castDel" (formula "42") (term "2,1,1,0"))
                                                (rule "castDel" (formula "42") (term "1,1,1,0"))
                                                 (builtin "One Step Simplification" (formula "42"))
                                                (rule "true_left" (formula "42"))
                                                (rule "equalityToSeqGetAndSeqLenLeft" (formula "10") (inst "iv=iv"))
                                                 (builtin "One Step Simplification" (formula "10"))
                                                (rule "andLeft" (formula "10"))
                                                (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
                                                (rule "applyEq" (formula "11") (term "0,0,1,0") (ifseqformula "12"))
                                                 (builtin "One Step Simplification" (formula "11"))
                                                (rule "true_left" (formula "11"))
                                                (rule "equalityToSeqGetAndSeqLenLeft" (formula "35") (inst "iv=iv"))
                                                 (builtin "One Step Simplification" (formula "35"))
                                                (rule "andLeft" (formula "35"))
                                                (rule "inEqSimp_ltToLeq" (formula "36") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "36") (term "0,0,0"))
                                                (rule "applyEq" (formula "35") (term "0,0") (ifseqformula "37"))
                                                 (builtin "One Step Simplification" (formula "35"))
                                                (rule "true_left" (formula "35"))
                                                (rule "applyEq" (formula "35") (term "0,0,1,0") (ifseqformula "36"))
                                                 (builtin "One Step Simplification" (formula "35"))
                                                (rule "true_left" (formula "35"))
                                                (rule "ifthenelse_split" (formula "27") (term "0"))
                                                (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_add<<anonHeapFunction>> TRUE"
                                                   (rule "applyEqReverse" (formula "29") (term "0") (ifseqformula "28"))
                                                   (rule "hideAuxiliaryEq" (formula "28"))
                                                   (rule "elementOfSubsetImpliesElementOfSuperset" (formula "27") (ifseqformula "20"))
                                                   (rule "elementOfUnion" (formula "27"))
                                                    (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "19")))
                                                   (rule "true_left" (formula "27"))
                                                   (rule "ifthenelse_split" (formula "48") (term "0"))
                                                   (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> TRUE"
                                                      (rule "applyEqReverse" (formula "50") (term "0,0") (ifseqformula "49"))
                                                      (rule "hideAuxiliaryEq" (formula "49"))
                                                      (rule "elementOfSubsetImpliesElementOfSuperset" (formula "48") (ifseqformula "36"))
                                                       (builtin "One Step Simplification" (formula "48") (ifInst ""  (formula "61")))
                                                      (rule "replaceKnownSelect_taclet010000000000_31" (formula "48") (term "0,0"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet010000000000_32" (formula "48") (term "0,0"))
                                                      (rule "notLeft" (formula "48"))
                                                      (rule "close" (formula "51") (ifseqformula "8"))
                                                   )
                                                   (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> FALSE"
                                                      (rule "applyEqReverse" (formula "49") (term "0,0") (ifseqformula "48"))
                                                      (rule "hideAuxiliaryEq" (formula "48"))
                                                      (rule "getOfSeqSingletonEQ" (formula "48") (term "0") (ifseqformula "17"))
                                                      (rule "castDel" (formula "48") (term "1,0"))
                                                      (rule "equal_literals" (formula "48") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "48"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "42") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "42"))
                                                      (rule "andLeft" (formula "42"))
                                                      (rule "getOfSeqSingleton" (formula "43") (term "1,1,0"))
                                                      (rule "castDel" (formula "43") (term "1,1,1,0"))
                                                      (rule "castDel" (formula "43") (term "2,1,1,0"))
                                                      (rule "eqSymm" (formula "43") (term "1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "43") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "43") (term "0,0,0"))
                                                      (rule "applyEq" (formula "43") (term "0,0,1,0,0,1,0,0") (ifseqformula "44"))
                                                       (builtin "One Step Simplification" (formula "43"))
                                                      (rule "mul_literals" (formula "43") (term "1,0,0,1,0,0"))
                                                      (rule "add_literals" (formula "43") (term "0,0,1,0,0"))
                                                      (rule "add_zero_left" (formula "43") (term "0,1,0,0"))
                                                      (rule "applyEq" (formula "42") (term "0,0") (ifseqformula "44"))
                                                       (builtin "One Step Simplification" (formula "42"))
                                                      (rule "true_left" (formula "42"))
                                                      (rule "applyEq" (formula "42") (term "0,1,1,0") (ifseqformula "43"))
                                                      (rule "getOfSeqSingleton" (formula "42") (term "1,1,0"))
                                                      (rule "castDel" (formula "42") (term "1,1,1,0"))
                                                      (rule "castDel" (formula "42") (term "2,1,1,0"))
                                                       (builtin "One Step Simplification" (formula "42"))
                                                      (rule "true_left" (formula "42"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "17") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "17"))
                                                      (rule "equal_literals" (formula "17") (term "0"))
                                                       (builtin "One Step Simplification" (formula "17"))
                                                      (rule "closeFalse" (formula "17"))
                                                   )
                                                )
                                                (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_add<<anonHeapFunction>> FALSE"
                                                   (rule "applyEqReverse" (formula "28") (term "0") (ifseqformula "27"))
                                                    (builtin "One Step Simplification" (formula "28"))
                                                   (rule "true_left" (formula "28"))
                                                   (rule "hideAuxiliaryEq" (formula "27"))
                                                   (rule "ifthenelse_split" (formula "46") (term "0"))
                                                   (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> TRUE"
                                                      (rule "applyEqReverse" (formula "48") (term "0,0") (ifseqformula "47"))
                                                      (rule "hideAuxiliaryEq" (formula "47"))
                                                      (rule "elementOfSubsetImpliesElementOfSuperset" (formula "46") (ifseqformula "34"))
                                                       (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "60")))
                                                      (rule "replaceKnownSelect_taclet010000000000_31" (formula "46") (term "0,0"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet010000000000_32" (formula "46") (term "0,0"))
                                                      (rule "notLeft" (formula "46"))
                                                      (rule "close" (formula "49") (ifseqformula "8"))
                                                   )
                                                   (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> FALSE"
                                                      (rule "applyEqReverse" (formula "47") (term "0,0") (ifseqformula "46"))
                                                      (rule "hideAuxiliaryEq" (formula "46"))
                                                      (rule "getOfSeqSingletonEQ" (formula "46") (term "0") (ifseqformula "25"))
                                                      (rule "castDel" (formula "46") (term "1,0"))
                                                      (rule "equal_literals" (formula "46") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "46"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "40") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "40"))
                                                      (rule "andLeft" (formula "40"))
                                                      (rule "getOfSeqSingleton" (formula "41") (term "1,1,0"))
                                                      (rule "castDel" (formula "41") (term "1,1,1,0"))
                                                      (rule "castDel" (formula "41") (term "2,1,1,0"))
                                                      (rule "eqSymm" (formula "41") (term "1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "41") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "41") (term "0,0,0"))
                                                      (rule "applyEq" (formula "41") (term "0,1,1,0") (ifseqformula "42"))
                                                      (rule "getOfSeqSingleton" (formula "41") (term "1,1,0"))
                                                      (rule "castDel" (formula "41") (term "1,1,1,0"))
                                                      (rule "castDel" (formula "41") (term "2,1,1,0"))
                                                       (builtin "One Step Simplification" (formula "41"))
                                                      (rule "true_left" (formula "41"))
                                                      (rule "applyEq" (formula "40") (term "0,0") (ifseqformula "41"))
                                                       (builtin "One Step Simplification" (formula "40"))
                                                      (rule "true_left" (formula "40"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "17") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "17"))
                                                      (rule "equal_literals" (formula "17") (term "0"))
                                                       (builtin "One Step Simplification" (formula "17"))
                                                      (rule "closeFalse" (formula "17"))
                                                   )
                                                )
                                             )
                                          )
                                          (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_ArrayList<<anonHeapFunction>> FALSE"
                                             (rule "applyEqReverse" (formula "26") (term "2,0") (ifseqformula "18"))
                                             (rule "applyEqReverse" (formula "24") (term "2,0,0") (ifseqformula "18"))
                                             (rule "applyEqReverse" (formula "27") (term "0,1") (ifseqformula "18"))
                                             (rule "applyEqReverse" (formula "26") (term "2,0,0") (ifseqformula "18"))
                                             (rule "applyEqReverse" (formula "22") (term "1,0") (ifseqformula "18"))
                                             (rule "applyEqReverse" (formula "19") (term "0") (ifseqformula "18"))
                                              (builtin "One Step Simplification" (formula "19"))
                                             (rule "true_left" (formula "19"))
                                             (rule "hideAuxiliaryEq" (formula "18"))
                                             (rule "replace_known_right" (formula "24") (term "0,0") (ifseqformula "48"))
                                              (builtin "One Step Simplification" (formula "24"))
                                             (rule "applyEqReverse" (formula "25") (term "0") (ifseqformula "24"))
                                              (builtin "One Step Simplification" (formula "25"))
                                             (rule "true_left" (formula "25"))
                                             (rule "hideAuxiliaryEq" (formula "24"))
                                             (rule "ifthenelse_split" (formula "16") (term "0"))
                                             (branch "(self_0, List::$seq) in self_0.footprint@anon_heap_ArrayList<<anonHeapFunction>> TRUE"
                                                (rule "replace_known_left" (formula "23") (term "0,0") (ifseqformula "16"))
                                                 (builtin "One Step Simplification" (formula "23"))
                                                (rule "elementOfSubsetImpliesElementOfSuperset" (formula "16") (ifseqformula "11"))
                                                 (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "56")) (ifInst ""  (formula "55")))
                                                (rule "true_left" (formula "16"))
                                                (rule "ifthenelse_split" (formula "44") (term "0"))
                                                (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> TRUE"
                                                   (rule "applyEqReverse" (formula "46") (term "0,0") (ifseqformula "45"))
                                                   (rule "hideAuxiliaryEq" (formula "45"))
                                                   (rule "elementOfSubsetImpliesElementOfSuperset" (formula "44") (ifseqformula "32"))
                                                    (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "56")))
                                                   (rule "replaceKnownSelect_taclet010000000000_31" (formula "44") (term "0,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet010000000000_32" (formula "44") (term "0,0"))
                                                   (rule "notLeft" (formula "44"))
                                                   (rule "close" (formula "47") (ifseqformula "8"))
                                                )
                                                (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> FALSE"
                                                   (rule "applyEqReverse" (formula "45") (term "0,0") (ifseqformula "44"))
                                                   (rule "hideAuxiliaryEq" (formula "44"))
                                                   (rule "getOfSeqConcat" (formula "44") (term "0"))
                                                    (builtin "One Step Simplification" (formula "44"))
                                                   (rule "less_literals" (formula "44") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "44"))
                                                   (rule "sub_literals" (formula "44") (term "1,0"))
                                                    (builtin "One Step Simplification" (formula "44"))
                                                   (rule "castDel" (formula "44") (term "0"))
                                                   (rule "eqSymm" (formula "44"))
                                                   (rule "close" (formula "57") (ifseqformula "44"))
                                                )
                                             )
                                             (branch "(self_0, List::$seq) in self_0.footprint@anon_heap_ArrayList<<anonHeapFunction>> FALSE"
                                                (rule "eqSymm" (formula "16"))
                                                (rule "replace_known_right" (formula "22") (term "0,0") (ifseqformula "46"))
                                                 (builtin "One Step Simplification" (formula "22"))
                                                (rule "eqSymm" (formula "22"))
                                                (rule "applyEq" (formula "17") (term "1") (ifseqformula "16"))
                                                (rule "applyEqRigid" (formula "23") (term "1") (ifseqformula "22"))
                                                (rule "applyEqRigid" (formula "43") (term "2,0") (ifseqformula "22"))
                                                (rule "applyEq" (formula "22") (term "1") (ifseqformula "16"))
                                                (rule "applyEq" (formula "22") (term "0,0") (ifseqformula "16"))
                                                 (builtin "One Step Simplification" (formula "22"))
                                                (rule "applyEq" (formula "23") (term "1") (ifseqformula "16"))
                                                (rule "applyEq" (formula "43") (term "2,0") (ifseqformula "16"))
                                                (rule "equalityToSeqGetAndSeqLenLeft" (formula "10") (inst "iv=iv"))
                                                 (builtin "One Step Simplification" (formula "10"))
                                                (rule "andLeft" (formula "10"))
                                                (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
                                                (rule "applyEq" (formula "11") (term "0,0,1,0") (ifseqformula "12"))
                                                 (builtin "One Step Simplification" (formula "11"))
                                                (rule "true_left" (formula "11"))
                                                (rule "equalityToSeqGetAndSeqLenLeft" (formula "31") (inst "iv=iv"))
                                                 (builtin "One Step Simplification" (formula "31"))
                                                (rule "andLeft" (formula "31"))
                                                (rule "inEqSimp_ltToLeq" (formula "32") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "32") (term "0,0,0"))
                                                (rule "applyEq" (formula "32") (term "0,0,1,0") (ifseqformula "33"))
                                                 (builtin "One Step Simplification" (formula "32"))
                                                (rule "true_left" (formula "32"))
                                                (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "32"))
                                                 (builtin "One Step Simplification" (formula "31"))
                                                (rule "true_left" (formula "31"))
                                                (rule "equalityToSeqGetAndSeqLenLeft" (formula "39") (inst "iv=iv"))
                                                 (builtin "One Step Simplification" (formula "39"))
                                                (rule "andLeft" (formula "39"))
                                                (rule "getOfSeqSingleton" (formula "40") (term "1,1,0"))
                                                (rule "castDel" (formula "40") (term "1,1,1,0"))
                                                (rule "castDel" (formula "40") (term "2,1,1,0"))
                                                (rule "eqSymm" (formula "40") (term "1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "40") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "40") (term "0,0,0"))
                                                (rule "applyEqRigid" (formula "40") (term "0,1,1,0") (ifseqformula "41"))
                                                (rule "getOfSeqSingleton" (formula "40") (term "1,1,0"))
                                                (rule "castDel" (formula "40") (term "2,1,1,0"))
                                                (rule "castDel" (formula "40") (term "1,1,1,0"))
                                                 (builtin "One Step Simplification" (formula "40"))
                                                (rule "true_left" (formula "40"))
                                                (rule "applyEq" (formula "39") (term "0,0") (ifseqformula "40"))
                                                 (builtin "One Step Simplification" (formula "39"))
                                                (rule "true_left" (formula "39"))
                                                (rule "ifthenelse_split" (formula "44") (term "0"))
                                                (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> TRUE"
                                                   (rule "applyEqReverse" (formula "46") (term "0,0") (ifseqformula "45"))
                                                   (rule "hideAuxiliaryEq" (formula "45"))
                                                   (rule "elementOfSubsetImpliesElementOfSuperset" (formula "44") (ifseqformula "32"))
                                                    (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "57")))
                                                   (rule "replaceKnownSelect_taclet010000000000_31" (formula "44") (term "0,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet010000000000_32" (formula "44") (term "0,0"))
                                                   (rule "notLeft" (formula "44"))
                                                   (rule "close" (formula "47") (ifseqformula "8"))
                                                )
                                                (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> FALSE"
                                                   (rule "applyEqReverse" (formula "45") (term "0,0") (ifseqformula "44"))
                                                   (rule "hideAuxiliaryEq" (formula "44"))
                                                   (rule "getOfSeqSingletonEQ" (formula "44") (term "0") (ifseqformula "23"))
                                                   (rule "castDel" (formula "44") (term "1,0"))
                                                   (rule "equal_literals" (formula "44") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "44"))
                                                   (rule "equalityToSeqGetAndSeqLenLeft" (formula "38") (inst "iv=iv"))
                                                    (builtin "One Step Simplification" (formula "38"))
                                                   (rule "andLeft" (formula "38"))
                                                   (rule "getOfSeqSingleton" (formula "39") (term "1,1,0"))
                                                   (rule "castDel" (formula "39") (term "1,1,1,0"))
                                                   (rule "castDel" (formula "39") (term "2,1,1,0"))
                                                   (rule "eqSymm" (formula "39") (term "1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "39") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "39") (term "0,0,0"))
                                                   (rule "applyEq" (formula "39") (term "0,0,1,0,0,1,0,0") (ifseqformula "40"))
                                                    (builtin "One Step Simplification" (formula "39"))
                                                   (rule "mul_literals" (formula "39") (term "1,0,0,1,0,0"))
                                                   (rule "add_literals" (formula "39") (term "0,0,1,0,0"))
                                                   (rule "add_zero_left" (formula "39") (term "0,1,0,0"))
                                                   (rule "applyEq" (formula "38") (term "0,0") (ifseqformula "40"))
                                                    (builtin "One Step Simplification" (formula "38"))
                                                   (rule "true_left" (formula "38"))
                                                   (rule "applyEq" (formula "38") (term "0,1,1,0") (ifseqformula "39"))
                                                   (rule "getOfSeqSingleton" (formula "38") (term "1,1,0"))
                                                   (rule "castDel" (formula "38") (term "1,1,1,0"))
                                                   (rule "castDel" (formula "38") (term "2,1,1,0"))
                                                    (builtin "One Step Simplification" (formula "38"))
                                                   (rule "true_left" (formula "38"))
                                                   (rule "equalityToSeqGetAndSeqLenLeft" (formula "17") (inst "iv=iv"))
                                                    (builtin "One Step Simplification" (formula "17"))
                                                   (rule "equal_literals" (formula "17") (term "0"))
                                                    (builtin "One Step Simplification" (formula "17"))
                                                   (rule "closeFalse" (formula "17"))
                                                )
                                             )
                                          )
                                       )
                                       (branch "(self_1, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> FALSE"
                                          (rule "eqSymm" (formula "40"))
                                          (rule "applyEq" (formula "41") (term "1") (ifseqformula "40"))
                                          (rule "ifthenelse_split" (formula "18") (term "0"))
                                          (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_ArrayList<<anonHeapFunction>> TRUE"
                                             (rule "applyEqReverse" (formula "27") (term "2,0") (ifseqformula "19"))
                                             (rule "applyEqReverse" (formula "28") (term "0,1") (ifseqformula "19"))
                                             (rule "applyEqReverse" (formula "20") (term "0") (ifseqformula "19"))
                                             (rule "applyEqReverse" (formula "27") (term "2,0,0") (ifseqformula "19"))
                                             (rule "applyEqReverse" (formula "25") (term "2,0,0") (ifseqformula "19"))
                                             (rule "applyEqReverse" (formula "23") (term "1,0") (ifseqformula "19"))
                                             (rule "hideAuxiliaryEq" (formula "19"))
                                             (rule "elementOfSubsetImpliesElementOfSuperset" (formula "18") (ifseqformula "11"))
                                              (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "58")) (ifInst ""  (formula "57")))
                                             (rule "true_left" (formula "18"))
                                             (rule "commuteUnion" (formula "27") (term "1"))
                                             (rule "ifthenelse_split" (formula "16") (term "0"))
                                             (branch "(self_0, List::$seq) in self_0.footprint@anon_heap_ArrayList<<anonHeapFunction>> TRUE"
                                                (rule "elementOfSubsetImpliesElementOfSuperset" (formula "16") (ifseqformula "11"))
                                                 (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "59")) (ifInst ""  (formula "58")))
                                                (rule "true_left" (formula "16"))
                                                (rule "ifthenelse_split" (formula "47") (term "0"))
                                                (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> TRUE"
                                                   (rule "applyEqReverse" (formula "49") (term "0,0") (ifseqformula "48"))
                                                   (rule "hideAuxiliaryEq" (formula "48"))
                                                   (rule "elementOfSubsetImpliesElementOfSuperset" (formula "47") (ifseqformula "36"))
                                                    (builtin "One Step Simplification" (formula "47") (ifInst ""  (formula "59")))
                                                   (rule "replaceKnownSelect_taclet010000000000_31" (formula "47") (term "0,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet010000000000_32" (formula "47") (term "0,0"))
                                                   (rule "notLeft" (formula "47"))
                                                   (rule "close" (formula "50") (ifseqformula "8"))
                                                )
                                                (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> FALSE"
                                                   (rule "applyEqReverse" (formula "48") (term "0,0") (ifseqformula "47"))
                                                   (rule "hideAuxiliaryEq" (formula "47"))
                                                   (rule "getOfSeqConcat" (formula "47") (term "0"))
                                                    (builtin "One Step Simplification" (formula "47"))
                                                   (rule "sub_literals" (formula "47") (term "1,2,0"))
                                                    (builtin "One Step Simplification" (formula "47"))
                                                   (rule "castDel" (formula "47") (term "2,0"))
                                                   (rule "less_literals" (formula "47") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "47"))
                                                   (rule "eqSymm" (formula "47"))
                                                   (rule "close" (formula "60") (ifseqformula "47"))
                                                )
                                             )
                                             (branch "(self_0, List::$seq) in self_0.footprint@anon_heap_ArrayList<<anonHeapFunction>> FALSE"
                                                (rule "eqSymm" (formula "16"))
                                                (rule "applyEq" (formula "17") (term "1") (ifseqformula "16"))
                                                (rule "applyEq" (formula "25") (term "0,1") (ifseqformula "16"))
                                                 (builtin "One Step Simplification" (formula "25"))
                                                (rule "applyEqRigid" (formula "24") (term "0,1") (ifseqformula "16"))
                                                 (builtin "One Step Simplification" (formula "24"))
                                                (rule "applyEqRigid" (formula "46") (term "0,2,0") (ifseqformula "16"))
                                                 (builtin "One Step Simplification" (formula "46"))
                                                (rule "applyEq" (formula "24") (term "2,0") (ifseqformula "16"))
                                                (rule "elementOfSubsetOfUnion2" (formula "24") (term "0,0") (ifseqformula "19") (ifseqformula "49"))
                                                (rule "elementOfIntersect" (formula "24") (term "1"))
                                                 (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "59")))
                                                (rule "replaceKnownSelect_taclet0_4" (formula "24") (term "0,0,1,1"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet0_5" (formula "24") (term "0,0,1,1"))
                                                (rule "replace_known_left" (formula "24") (term "0,1,1") (ifseqformula "8"))
                                                 (builtin "One Step Simplification" (formula "24"))
                                                (rule "notLeft" (formula "24"))
                                                (rule "replace_known_right" (formula "24") (term "0,0") (ifseqformula "49"))
                                                 (builtin "One Step Simplification" (formula "24"))
                                                (rule "eqSymm" (formula "24"))
                                                (rule "applyEqRigid" (formula "25") (term "1") (ifseqformula "24"))
                                                (rule "applyEq" (formula "46") (term "2,0") (ifseqformula "24"))
                                                (rule "elementOfSubsetOfUnion2" (formula "49") (ifseqformula "19") (ifseqformula "50"))
                                                (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "50"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "notLeft" (formula "1"))
                                                (rule "elementOfIntersect" (formula "49"))
                                                 (builtin "One Step Simplification" (formula "49") (ifInst ""  (formula "50")))
                                                (rule "false_right" (formula "49"))
                                                (rule "equalityToSeqGetAndSeqLenLeft" (formula "10") (inst "iv=iv"))
                                                 (builtin "One Step Simplification" (formula "10"))
                                                (rule "andLeft" (formula "10"))
                                                (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
                                                (rule "applyEq" (formula "11") (term "0,0,1,0") (ifseqformula "12"))
                                                 (builtin "One Step Simplification" (formula "11"))
                                                (rule "true_left" (formula "11"))
                                                (rule "equalityToSeqGetAndSeqLenLeft" (formula "35") (inst "iv=iv"))
                                                 (builtin "One Step Simplification" (formula "35"))
                                                (rule "andLeft" (formula "35"))
                                                (rule "inEqSimp_ltToLeq" (formula "36") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "36") (term "0,0,0"))
                                                (rule "applyEq" (formula "36") (term "0,0,1,0") (ifseqformula "37"))
                                                 (builtin "One Step Simplification" (formula "36"))
                                                (rule "true_left" (formula "36"))
                                                (rule "applyEq" (formula "35") (term "0,0") (ifseqformula "36"))
                                                 (builtin "One Step Simplification" (formula "35"))
                                                (rule "true_left" (formula "35"))
                                                (rule "ifthenelse_split" (formula "27") (term "0"))
                                                (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_add<<anonHeapFunction>> TRUE"
                                                   (rule "applyEqReverse" (formula "29") (term "0") (ifseqformula "28"))
                                                   (rule "hideAuxiliaryEq" (formula "28"))
                                                   (rule "elementOfSubsetImpliesElementOfSuperset" (formula "27") (ifseqformula "20"))
                                                   (rule "elementOfUnion" (formula "27"))
                                                    (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "19")))
                                                   (rule "true_left" (formula "27"))
                                                   (rule "ifthenelse_split" (formula "47") (term "0"))
                                                   (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> TRUE"
                                                      (rule "applyEqReverse" (formula "49") (term "0,0") (ifseqformula "48"))
                                                      (rule "hideAuxiliaryEq" (formula "48"))
                                                      (rule "elementOfSubsetImpliesElementOfSuperset" (formula "47") (ifseqformula "36"))
                                                       (builtin "One Step Simplification" (formula "47") (ifInst ""  (formula "61")))
                                                      (rule "replaceKnownSelect_taclet010000000000_31" (formula "47") (term "0,0"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet010000000000_32" (formula "47") (term "0,0"))
                                                      (rule "notLeft" (formula "47"))
                                                      (rule "close" (formula "50") (ifseqformula "8"))
                                                   )
                                                   (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> FALSE"
                                                      (rule "applyEqReverse" (formula "48") (term "0,0") (ifseqformula "47"))
                                                      (rule "hideAuxiliaryEq" (formula "47"))
                                                      (rule "getOfSeqSingletonEQ" (formula "47") (term "0") (ifseqformula "25"))
                                                      (rule "castDel" (formula "47") (term "1,0"))
                                                      (rule "equal_literals" (formula "47") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "47"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "41") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "41"))
                                                      (rule "equal_literals" (formula "41") (term "0"))
                                                       (builtin "One Step Simplification" (formula "41"))
                                                      (rule "closeFalse" (formula "41"))
                                                   )
                                                )
                                                (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_add<<anonHeapFunction>> FALSE"
                                                   (rule "applyEqReverse" (formula "28") (term "0") (ifseqformula "27"))
                                                    (builtin "One Step Simplification" (formula "28"))
                                                   (rule "true_left" (formula "28"))
                                                   (rule "hideAuxiliaryEq" (formula "27"))
                                                   (rule "ifthenelse_split" (formula "45") (term "0"))
                                                   (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> TRUE"
                                                      (rule "applyEqReverse" (formula "47") (term "0,0") (ifseqformula "46"))
                                                      (rule "hideAuxiliaryEq" (formula "46"))
                                                      (rule "elementOfSubsetImpliesElementOfSuperset" (formula "45") (ifseqformula "34"))
                                                       (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "60")))
                                                      (rule "replaceKnownSelect_taclet010000000000_31" (formula "45") (term "0,0"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet010000000000_32" (formula "45") (term "0,0"))
                                                      (rule "notLeft" (formula "45"))
                                                      (rule "close" (formula "48") (ifseqformula "8"))
                                                   )
                                                   (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> FALSE"
                                                      (rule "applyEqReverse" (formula "46") (term "0,0") (ifseqformula "45"))
                                                      (rule "hideAuxiliaryEq" (formula "45"))
                                                      (rule "getOfSeqSingletonEQ" (formula "45") (term "0") (ifseqformula "25"))
                                                      (rule "castDel" (formula "45") (term "1,0"))
                                                      (rule "equal_literals" (formula "45") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "45"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "39") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "39"))
                                                      (rule "equal_literals" (formula "39") (term "0"))
                                                       (builtin "One Step Simplification" (formula "39"))
                                                      (rule "closeFalse" (formula "39"))
                                                   )
                                                )
                                             )
                                          )
                                          (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_ArrayList<<anonHeapFunction>> FALSE"
                                             (rule "applyEqReverse" (formula "24") (term "2,0,0") (ifseqformula "18"))
                                             (rule "applyEqReverse" (formula "26") (term "2,0") (ifseqformula "18"))
                                             (rule "applyEqReverse" (formula "27") (term "0,1") (ifseqformula "18"))
                                             (rule "applyEqReverse" (formula "26") (term "2,0,0") (ifseqformula "18"))
                                             (rule "applyEqReverse" (formula "22") (term "1,0") (ifseqformula "18"))
                                             (rule "applyEqReverse" (formula "19") (term "0") (ifseqformula "18"))
                                              (builtin "One Step Simplification" (formula "19"))
                                             (rule "true_left" (formula "19"))
                                             (rule "hideAuxiliaryEq" (formula "18"))
                                             (rule "replace_known_right" (formula "24") (term "0,0") (ifseqformula "47"))
                                              (builtin "One Step Simplification" (formula "24"))
                                             (rule "applyEqReverse" (formula "25") (term "0") (ifseqformula "24"))
                                              (builtin "One Step Simplification" (formula "25"))
                                             (rule "true_left" (formula "25"))
                                             (rule "hideAuxiliaryEq" (formula "24"))
                                             (rule "ifthenelse_split" (formula "16") (term "0"))
                                             (branch "(self_0, List::$seq) in self_0.footprint@anon_heap_ArrayList<<anonHeapFunction>> TRUE"
                                                (rule "replace_known_left" (formula "23") (term "0,0") (ifseqformula "16"))
                                                 (builtin "One Step Simplification" (formula "23"))
                                                (rule "elementOfSubsetImpliesElementOfSuperset" (formula "16") (ifseqformula "11"))
                                                 (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "56")) (ifInst ""  (formula "55")))
                                                (rule "true_left" (formula "16"))
                                                (rule "ifthenelse_split" (formula "43") (term "0"))
                                                (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> TRUE"
                                                   (rule "applyEqReverse" (formula "45") (term "0,0") (ifseqformula "44"))
                                                   (rule "hideAuxiliaryEq" (formula "44"))
                                                   (rule "elementOfSubsetImpliesElementOfSuperset" (formula "43") (ifseqformula "32"))
                                                    (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "56")))
                                                   (rule "replaceKnownSelect_taclet010000000000_31" (formula "43") (term "0,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet010000000000_32" (formula "43") (term "0,0"))
                                                   (rule "notLeft" (formula "43"))
                                                   (rule "close" (formula "46") (ifseqformula "8"))
                                                )
                                                (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> FALSE"
                                                   (rule "applyEqReverse" (formula "44") (term "0,0") (ifseqformula "43"))
                                                   (rule "hideAuxiliaryEq" (formula "43"))
                                                   (rule "getOfSeqConcat" (formula "43") (term "0"))
                                                    (builtin "One Step Simplification" (formula "43"))
                                                   (rule "sub_literals" (formula "43") (term "1,2,0"))
                                                    (builtin "One Step Simplification" (formula "43"))
                                                   (rule "castDel" (formula "43") (term "2,0"))
                                                   (rule "less_literals" (formula "43") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "43"))
                                                   (rule "eqSymm" (formula "43"))
                                                   (rule "close" (formula "57") (ifseqformula "43"))
                                                )
                                             )
                                             (branch "(self_0, List::$seq) in self_0.footprint@anon_heap_ArrayList<<anonHeapFunction>> FALSE"
                                                (rule "eqSymm" (formula "16"))
                                                (rule "replace_known_right" (formula "22") (term "0,0") (ifseqformula "45"))
                                                 (builtin "One Step Simplification" (formula "22"))
                                                (rule "eqSymm" (formula "22"))
                                                (rule "applyEq" (formula "42") (term "2,0") (ifseqformula "22"))
                                                (rule "applyEqRigid" (formula "17") (term "1") (ifseqformula "16"))
                                                (rule "applyEq" (formula "23") (term "0,1") (ifseqformula "16"))
                                                 (builtin "One Step Simplification" (formula "23"))
                                                (rule "applyEq" (formula "22") (term "1") (ifseqformula "16"))
                                                (rule "applyEqRigid" (formula "22") (term "0,0") (ifseqformula "16"))
                                                 (builtin "One Step Simplification" (formula "22"))
                                                (rule "applyEqRigid" (formula "42") (term "2,0") (ifseqformula "16"))
                                                (rule "applyEq" (formula "23") (term "1") (ifseqformula "22"))
                                                (rule "equalityToSeqGetAndSeqLenLeft" (formula "30") (inst "iv=iv"))
                                                 (builtin "One Step Simplification" (formula "30"))
                                                (rule "andLeft" (formula "30"))
                                                (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "31") (term "0,0,0"))
                                                (rule "applyEq" (formula "30") (term "0,0") (ifseqformula "32"))
                                                 (builtin "One Step Simplification" (formula "30"))
                                                (rule "true_left" (formula "30"))
                                                (rule "applyEq" (formula "30") (term "0,0,1,0,0,1,0,0") (ifseqformula "31"))
                                                 (builtin "One Step Simplification" (formula "30"))
                                                (rule "mul_literals" (formula "30") (term "1,0,0,1,0,0"))
                                                (rule "add_literals" (formula "30") (term "0,0,1,0,0"))
                                                (rule "applyEq" (formula "30") (term "0,0,1,0") (ifseqformula "31"))
                                                 (builtin "One Step Simplification" (formula "30"))
                                                (rule "true_left" (formula "30"))
                                                (rule "equalityToSeqGetAndSeqLenLeft" (formula "10") (inst "iv=iv"))
                                                 (builtin "One Step Simplification" (formula "10"))
                                                (rule "andLeft" (formula "10"))
                                                (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
                                                (rule "applyEq" (formula "11") (term "0,0,1,0,0,1,0,0") (ifseqformula "12"))
                                                 (builtin "One Step Simplification" (formula "11"))
                                                (rule "mul_literals" (formula "11") (term "1,0,0,1,0,0"))
                                                (rule "add_literals" (formula "11") (term "0,0,1,0,0"))
                                                (rule "applyEq" (formula "11") (term "0,0,1,0") (ifseqformula "12"))
                                                 (builtin "One Step Simplification" (formula "11"))
                                                (rule "true_left" (formula "11"))
                                                (rule "ifthenelse_split" (formula "43") (term "0"))
                                                (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> TRUE"
                                                   (rule "applyEqReverse" (formula "45") (term "0,0") (ifseqformula "44"))
                                                   (rule "hideAuxiliaryEq" (formula "44"))
                                                   (rule "elementOfSubsetImpliesElementOfSuperset" (formula "43") (ifseqformula "32"))
                                                    (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "57")))
                                                   (rule "replaceKnownSelect_taclet010000000000_31" (formula "43") (term "0,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet010000000000_32" (formula "43") (term "0,0"))
                                                   (rule "notLeft" (formula "43"))
                                                   (rule "close" (formula "46") (ifseqformula "8"))
                                                )
                                                (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> FALSE"
                                                   (rule "applyEqReverse" (formula "44") (term "0,0") (ifseqformula "43"))
                                                   (rule "hideAuxiliaryEq" (formula "43"))
                                                   (rule "getOfSeqSingletonEQ" (formula "43") (term "0") (ifseqformula "17"))
                                                   (rule "castDel" (formula "43") (term "1,0"))
                                                   (rule "equal_literals" (formula "43") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "43"))
                                                   (rule "equalityToSeqGetAndSeqLenLeft" (formula "37") (inst "iv=iv"))
                                                    (builtin "One Step Simplification" (formula "37"))
                                                   (rule "equal_literals" (formula "37") (term "0"))
                                                    (builtin "One Step Simplification" (formula "37"))
                                                   (rule "closeFalse" (formula "37"))
                                                )
                                             )
                                          )
                                       )
                                    )
                                 )
                                 (branch "Exceptional Post (get)"
                                     (builtin "One Step Simplification" (formula "47"))
                                     (builtin "One Step Simplification" (formula "56"))
                                    (rule "andLeft" (formula "47"))
                                    (rule "andLeft" (formula "48"))
                                    (rule "andLeft" (formula "49"))
                                    (rule "andLeft" (formula "48"))
                                    (rule "andLeft" (formula "50"))
                                    (rule "notLeft" (formula "48"))
                                    (rule "close" (formula "52") (ifseqformula "51"))
                                 )
                                 (branch "Pre (get)"
                                     (builtin "One Step Simplification" (formula "54"))
                                    (rule "wellFormedAnonEQ" (formula "54") (term "0,1") (ifseqformula "39"))
                                    (rule "wellFormedAnonEQ" (formula "54") (term "0,0,1") (ifseqformula "31"))
                                    (rule "wellFormedAnonEQ" (formula "54") (term "0,0,0,1") (ifseqformula "23"))
                                    (rule "wellFormedAnonEQ" (formula "54") (term "0,0,0,0,1") (ifseqformula "15"))
                                    (rule "wellFormedAnonEQ" (formula "54") (term "0,0,0,0,0,1") (ifseqformula "7"))
                                    (rule "selectOfAnonEQ" (formula "54") (term "0,1,1,0,0") (ifseqformula "39"))
                                     (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "1")) (ifInst ""  (formula "6")) (ifInst ""  (formula "14")) (ifInst ""  (formula "22")) (ifInst ""  (formula "30")) (ifInst ""  (formula "38")) (ifInst ""  (formula "52")))
                                    (rule "selectOfAnonEQ" (formula "54") (term "0,1") (ifseqformula "39"))
                                     (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "52")))
                                    (rule "ifthenelse_negated" (formula "54") (term "0,1"))
                                    (rule "selectOfAnonEQ" (formula "54") (term "2,0,1,1,0,0") (ifseqformula "31"))
                                     (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "52")))
                                    (rule "ifthenelse_negated" (formula "54") (term "2,0,1,1,0,0"))
                                    (rule "selectOfAnonEQ" (formula "54") (term "0,0,2,0,1,1,0,0") (ifseqformula "23"))
                                     (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "52")))
                                    (rule "ifthenelse_negated" (formula "54") (term "0,0,2,0,1,1,0,0"))
                                    (rule "selectCreatedOfAnonEQ" (formula "54") (term "1,0,0,2,0,1,1,0,0") (ifseqformula "15"))
                                    (rule "selectOfAnonEQ" (formula "54") (term "1,2,0,1,1,0,0") (ifseqformula "23"))
                                     (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "52")))
                                    (rule "selectOfAnonEQ" (formula "54") (term "2,1,2,0,1,1,0,0") (ifseqformula "15"))
                                     (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "52")))
                                    (rule "selectOfAnonEQ" (formula "54") (term "0,0,1,0,0,2,0,1,1,0,0") (ifseqformula "7"))
                                     (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "52")) (ifInst ""  (formula "51")) (ifInst ""  (formula "9")))
                                    (rule "selectOfAnonEQ" (formula "54") (term "1,0,1") (ifseqformula "31"))
                                     (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "52")))
                                    (rule "ifthenelse_negated" (formula "54") (term "1,0,1"))
                                    (rule "selectOfAnonEQ" (formula "54") (term "1,1,0,1") (ifseqformula "23"))
                                     (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "52")))
                                    (rule "ifthenelse_negated" (formula "54") (term "1,1,0,1"))
                                    (rule "selectOfAnonEQ" (formula "54") (term "1,1,1,0,1") (ifseqformula "15"))
                                     (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "52")))
                                    (rule "ifthenelse_negated" (formula "54") (term "1,1,1,0,1"))
                                    (rule "selectCreatedOfAnonEQ" (formula "54") (term "1,1,1,1,0,1") (ifseqformula "7"))
                                    (rule "selectOfAnonEQ" (formula "54") (term "0,0,1,1,1,0,1") (ifseqformula "7"))
                                     (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "51")) (ifInst ""  (formula "52")) (ifInst ""  (formula "51")) (ifInst ""  (formula "9")))
                                    (rule "selectOfAnonEQ" (formula "54") (term "0,0,1,0,2,1,2,0,1,1,0,0") (ifseqformula "7"))
                                     (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "52")) (ifInst ""  (formula "51")) (ifInst ""  (formula "9")))
                                    (rule "selectCreatedOfAnonEQ" (formula "54") (term "0,0,1,0,1,2,0,1,1,0,0") (ifseqformula "15"))
                                     (builtin "One Step Simplification" (formula "54"))
                                    (rule "selectOfAnonEQ" (formula "54") (term "2,2,1,2,0,1,1,0,0") (ifseqformula "7"))
                                     (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "52")) (ifInst ""  (formula "51")))
                                    (rule "selectCreatedOfAnonEQ" (formula "54") (term "0,0,1,0,0,1,1,0,0") (ifseqformula "31"))
                                     (builtin "One Step Simplification" (formula "54"))
                                    (rule "selectOfAnonEQ" (formula "54") (term "0,0,0,1") (ifseqformula "31"))
                                     (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "52")))
                                    (rule "ifthenelse_negated" (formula "54") (term "0,0,0,1"))
                                    (rule "selectOfAnonEQ" (formula "54") (term "0,0,1,0,1") (ifseqformula "23"))
                                     (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "52")))
                                    (rule "ifthenelse_negated" (formula "54") (term "0,0,1,0,1"))
                                    (rule "selectOfAnonEQ" (formula "54") (term "1,0,0,0,1") (ifseqformula "23"))
                                     (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "52")))
                                    (rule "ifthenelse_negated" (formula "54") (term "1,0,0,0,1"))
                                    (rule "selectOfAnonEQ" (formula "54") (term "0,0,0,0,0,1") (ifseqformula "23"))
                                     (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "52")))
                                    (rule "ifthenelse_negated" (formula "54") (term "0,0,0,0,0,1"))
                                    (rule "selectOfAnonEQ" (formula "54") (term "0,0,1,1,0,1") (ifseqformula "15"))
                                     (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "52")))
                                    (rule "ifthenelse_negated" (formula "54") (term "0,0,1,1,0,1"))
                                    (rule "selectOfAnonEQ" (formula "54") (term "0,0,0,1,0,0,1,1,0,0") (ifseqformula "23"))
                                     (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "52")))
                                    (rule "ifthenelse_negated" (formula "54") (term "0,0,0,1,0,0,1,1,0,0"))
                                    (rule "selectCreatedOfAnonEQ" (formula "54") (term "1,1,0,0,0,1") (ifseqformula "15"))
                                    (rule "selectCreatedOfAnonEQ" (formula "54") (term "0,0,1,0,0,0,1") (ifseqformula "15"))
                                     (builtin "One Step Simplification" (formula "54"))
                                    (rule "selectOfAnonEQ" (formula "54") (term "0,0,0,2,0,1,1,0,0") (ifseqformula "15"))
                                     (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "52")))
                                    (rule "ifthenelse_negated" (formula "54") (term "0,0,0,2,0,1,1,0,0"))
                                    (rule "selectOfAnonEQ" (formula "54") (term "0,0,0,0,0,2,0,1,1,0,0") (ifseqformula "7"))
                                     (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "52")) (ifInst ""  (formula "51")) (ifInst ""  (formula "9")))
                                    (rule "selectCreatedOfAnonEQ" (formula "54") (term "0,0,0,2,0,1,1,0,0") (ifseqformula "7"))
                                     (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "51")) (ifInst ""  (formula "9")))
                                    (rule "selectOfAnonEQ" (formula "54") (term "1,0,0,1,0,1") (ifseqformula "15"))
                                     (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "52")))
                                    (rule "ifthenelse_negated" (formula "54") (term "1,0,0,1,0,1"))
                                    (rule "selectCreatedOfAnonEQ" (formula "54") (term "0,0,0,1,0,2,0,1,1,0,0") (ifseqformula "7"))
                                     (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "51")) (ifInst ""  (formula "9")))
                                    (rule "selectOfAnonEQ" (formula "54") (term "0,0,0,0,0,1,0,0,1,1,0,0") (ifseqformula "15"))
                                     (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "52")))
                                    (rule "ifthenelse_negated" (formula "54") (term "0,0,0,0,0,1,0,0,1,1,0,0"))
                                    (rule "selectCreatedOfAnonEQ" (formula "54") (term "1,0,0,0,1,0,0,1,1,0,0") (ifseqformula "15"))
                                    (rule "selectOfAnonEQ" (formula "54") (term "1,0,0,0,0,0,1,0,0,1,1,0,0") (ifseqformula "7"))
                                     (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "52")) (ifInst ""  (formula "51")))
                                    (rule "selectCreatedOfAnonEQ" (formula "54") (term "0,0,0,1,0,0,0,1") (ifseqformula "7"))
                                     (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "51")) (ifInst ""  (formula "9")))
                                    (rule "selectOfAnonEQ" (formula "54") (term "1,0,0,0,0,0,1") (ifseqformula "15"))
                                     (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "52")))
                                    (rule "ifthenelse_negated" (formula "54") (term "1,0,0,0,0,0,1"))
                                    (rule "selectOfAnonEQ" (formula "54") (term "0,0,0,0,0,0,0,1,0,0,1,1,0,0") (ifseqformula "7"))
                                     (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "52")) (ifInst ""  (formula "51")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")))
                                    (rule "selectCreatedOfAnonEQ" (formula "54") (term "0,0,0,0,1,0,1") (ifseqformula "15"))
                                     (builtin "One Step Simplification" (formula "54"))
                                    (rule "selectCreatedOfAnonEQ" (formula "54") (term "1,1,0,0,0,0,0,1") (ifseqformula "7"))
                                    (rule "selectCreatedOfAnonEQ" (formula "54") (term "1,1,0,0,1,0,1") (ifseqformula "7"))
                                    (rule "selectCreatedOfAnonEQ" (formula "54") (term "0,0,1,0,0,1,0,1") (ifseqformula "7"))
                                     (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "51")) (ifInst ""  (formula "51")) (ifInst ""  (formula "51")) (ifInst ""  (formula "9")))
                                    (rule "selectCreatedOfAnonEQ" (formula "54") (term "1,0,0,1,1,0,1") (ifseqformula "7"))
                                    (rule "selectCreatedOfAnonEQ" (formula "54") (term "0,0,1,0,0,0,0,0,1") (ifseqformula "7"))
                                     (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "51")) (ifInst ""  (formula "51")) (ifInst ""  (formula "9")))
                                    (rule "selectOfAnonEQ" (formula "54") (term "0,0,0,0,1,0,0,1,1,0,0") (ifseqformula "7"))
                                     (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "52")) (ifInst ""  (formula "51")) (ifInst ""  (formula "9")))
                                    (rule "selectOfAnonEQ" (formula "54") (term "0,0,0,0,0,1,0,1") (ifseqformula "7"))
                                     (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "52")) (ifInst ""  (formula "51")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")))
                                    (rule "selectCreatedOfAnonEQ" (formula "54") (term "0,0,1,0,0,0,1") (ifseqformula "7"))
                                     (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "51")) (ifInst ""  (formula "9")))
                                    (rule "selectOfAnonEQ" (formula "54") (term "0,0,0,0,0,0,1") (ifseqformula "15"))
                                     (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "52")))
                                    (rule "ifthenelse_negated" (formula "54") (term "0,0,0,0,0,0,1"))
                                    (rule "selectOfAnonEQ" (formula "54") (term "0,0,0,0,0,0,0,0,1") (ifseqformula "7"))
                                     (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "52")) (ifInst ""  (formula "51")) (ifInst ""  (formula "9")))
                                    (rule "selectOfAnonEQ" (formula "54") (term "0,0,0,0,0,0,1") (ifseqformula "7"))
                                     (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "52")) (ifInst ""  (formula "51")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")))
                                    (rule "selectCreatedOfAnonEQ" (formula "54") (term "0,0,0,0,0,1") (ifseqformula "7"))
                                     (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "51")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")))
                                    (rule "leq_literals" (formula "54") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "54"))
                                    (rule "inEqSimp_ltToLeq" (formula "54") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "54") (term "0,0"))
                                    (rule "add_literals" (formula "54") (term "0,0,0"))
                                    (rule "applyEq" (formula "54") (term "2,2,2,0,0,1,0,0") (ifseqformula "11"))
                                    (rule "applyEq" (formula "54") (term "2,2,0,0,1,0,0") (ifseqformula "17"))
                                    (rule "applyEq" (formula "54") (term "2,0,0,1,0,0") (ifseqformula "25"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "54") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "54") (term "0,0"))
                                    (rule "polySimp_elimOne" (formula "54") (term "0,0"))
                                    (rule "Class_invariant_axiom_for_Test" (formula "5") (ifseqformula "3"))
                                    (rule "true_left" (formula "5"))
                                    (rule "commute_and" (formula "53"))
                                    (rule "ifthenelse_split" (formula "16") (term "0"))
                                    (branch "(self_0, List::$seq) in self_0.footprint@anon_heap_ArrayList<<anonHeapFunction>> TRUE"
                                       (rule "elementOfSubsetImpliesElementOfSuperset" (formula "16") (ifseqformula "11"))
                                        (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "53")) (ifInst ""  (formula "52")))
                                       (rule "true_left" (formula "16"))
                                       (rule "ifthenelse_split" (formula "43") (term "0"))
                                       (branch "(self_1, List::$footprint) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> TRUE"
                                          (rule "applyEqReverse" (formula "45") (term "0") (ifseqformula "44"))
                                          (rule "hideAuxiliaryEq" (formula "44"))
                                          (rule "elementOfSubsetImpliesElementOfSuperset" (formula "43") (ifseqformula "36"))
                                           (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "51")))
                                          (rule "replaceKnownSelect_taclet0000000_18" (formula "43") (term "0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet0000000_21" (formula "43") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "43"))
                                          (rule "true_left" (formula "43"))
                                          (rule "ifthenelse_split" (formula "19") (term "0"))
                                          (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_ArrayList<<anonHeapFunction>> TRUE"
                                             (rule "applyEqReverse" (formula "28") (term "2,0,0") (ifseqformula "20"))
                                             (rule "applyEqReverse" (formula "24") (term "1,0") (ifseqformula "20"))
                                             (rule "applyEqReverse" (formula "28") (term "2,0") (ifseqformula "20"))
                                             (rule "applyEqReverse" (formula "29") (term "0,1") (ifseqformula "20"))
                                             (rule "applyEqReverse" (formula "26") (term "2,0,0") (ifseqformula "20"))
                                             (rule "applyEqReverse" (formula "21") (term "0") (ifseqformula "20"))
                                             (rule "hideAuxiliaryEq" (formula "20"))
                                             (rule "elementOfSubsetImpliesElementOfSuperset" (formula "19") (ifseqformula "11"))
                                              (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "53")) (ifInst ""  (formula "52")))
                                             (rule "true_left" (formula "19"))
                                             (rule "commuteUnion" (formula "28") (term "1"))
                                             (rule "ifthenelse_split" (formula "41") (term "0"))
                                             (branch "(self_1, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> TRUE"
                                                (rule "elementOfSubsetImpliesElementOfSuperset" (formula "41") (ifseqformula "36"))
                                                 (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "52")))
                                                (rule "replaceKnownSelect_taclet0000000_18" (formula "41") (term "0,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet0000000_21" (formula "41") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "41"))
                                                (rule "true_left" (formula "41"))
                                                (rule "ifthenelse_split" (formula "55") (term "0,0,1"))
                                                (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> TRUE"
                                                   (rule "elementOfSubsetImpliesElementOfSuperset" (formula "1") (ifseqformula "37"))
                                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "55")))
                                                   (rule "notLeft" (formula "1"))
                                                   (rule "pullOutSelect" (formula "48") (term "0") (inst "selectSK=java_lang_Object_created__6"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "25"))
                                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "56")))
                                                   (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "2,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "2,0"))
                                                   (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "0,0,0,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "0,0,0,0"))
                                                   (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "10"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "applyEqReverse" (formula "49") (term "0") (ifseqformula "1"))
                                                   (rule "close" (formula "49") (ifseqformula "10"))
                                                )
                                                (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> FALSE"
                                                   (rule "lenOfSeqConcat" (formula "56") (term "0,1"))
                                                    (builtin "One Step Simplification" (formula "56"))
                                                   (rule "add_literals" (formula "56") (term "0,1"))
                                                   (rule "qeq_literals" (formula "56") (term "1"))
                                                    (builtin "One Step Simplification" (formula "56"))
                                                   (rule "ifthenelse_split" (formula "27") (term "0"))
                                                   (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_add<<anonHeapFunction>> TRUE"
                                                      (rule "applyEqReverse" (formula "29") (term "0") (ifseqformula "28"))
                                                      (rule "hideAuxiliaryEq" (formula "28"))
                                                      (rule "elementOfSubsetImpliesElementOfSuperset" (formula "27") (ifseqformula "20"))
                                                      (rule "elementOfUnion" (formula "27"))
                                                       (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "19")))
                                                      (rule "true_left" (formula "27"))
                                                      (rule "ifthenelse_split" (formula "25") (term "0"))
                                                      (branch "(self_0, List::$seq) in self_0.footprint@anon_heap_add<<anonHeapFunction>> TRUE"
                                                         (rule "elementOfSubsetImpliesElementOfSuperset" (formula "25") (ifseqformula "20"))
                                                         (rule "elementOfUnion" (formula "25"))
                                                          (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "16")))
                                                         (rule "true_left" (formula "25"))
                                                         (rule "equalityToSeqGetAndSeqLenLeft" (formula "36") (inst "iv=iv"))
                                                          (builtin "One Step Simplification" (formula "36"))
                                                         (rule "andLeft" (formula "36"))
                                                         (rule "inEqSimp_ltToLeq" (formula "37") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "37") (term "0,0,0"))
                                                         (rule "applyEq" (formula "37") (term "0,0,1,0,0,1,0,0") (ifseqformula "38"))
                                                          (builtin "One Step Simplification" (formula "37"))
                                                         (rule "times_zero_2" (formula "37") (term "1,0,0,1,0,0"))
                                                         (rule "add_literals" (formula "37") (term "0,0,1,0,0"))
                                                         (rule "applyEq" (formula "36") (term "0,0") (ifseqformula "38"))
                                                          (builtin "One Step Simplification" (formula "36"))
                                                         (rule "true_left" (formula "36"))
                                                         (rule "applyEq" (formula "36") (term "0,0,1,0") (ifseqformula "37"))
                                                          (builtin "One Step Simplification" (formula "36"))
                                                         (rule "true_left" (formula "36"))
                                                         (rule "equalityToSeqGetAndSeqLenLeft" (formula "44") (inst "iv=iv"))
                                                          (builtin "One Step Simplification" (formula "44"))
                                                         (rule "andLeft" (formula "44"))
                                                         (rule "getOfSeqSingleton" (formula "45") (term "1,1,0"))
                                                         (rule "castDel" (formula "45") (term "2,1,1,0"))
                                                         (rule "castDel" (formula "45") (term "1,1,1,0"))
                                                         (rule "eqSymm" (formula "45") (term "1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "45") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "45") (term "0,0,0"))
                                                         (rule "applyEq" (formula "45") (term "0,0,1,0,0,1,0,0") (ifseqformula "46"))
                                                          (builtin "One Step Simplification" (formula "45"))
                                                         (rule "mul_literals" (formula "45") (term "1,0,0,1,0,0"))
                                                         (rule "add_literals" (formula "45") (term "0,0,1,0,0"))
                                                         (rule "add_zero_left" (formula "45") (term "0,1,0,0"))
                                                         (rule "applyEqRigid" (formula "44") (term "0,0") (ifseqformula "46"))
                                                          (builtin "One Step Simplification" (formula "44"))
                                                         (rule "true_left" (formula "44"))
                                                         (rule "applyEqRigid" (formula "44") (term "0,1,1,0") (ifseqformula "45"))
                                                         (rule "getOfSeqSingleton" (formula "44") (term "1,1,0"))
                                                         (rule "castDel" (formula "44") (term "2,1,1,0"))
                                                         (rule "castDel" (formula "44") (term "1,1,1,0"))
                                                          (builtin "One Step Simplification" (formula "44"))
                                                         (rule "true_left" (formula "44"))
                                                         (rule "equalityToSeqGetAndSeqLenLeft" (formula "17") (inst "iv=iv"))
                                                          (builtin "One Step Simplification" (formula "17"))
                                                         (rule "andLeft" (formula "17"))
                                                         (rule "getOfSeqSingleton" (formula "18") (term "1,1,0"))
                                                         (rule "castDel" (formula "18") (term "2,1,1,0"))
                                                         (rule "castDel" (formula "18") (term "1,1,1,0"))
                                                         (rule "eqSymm" (formula "18") (term "1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
                                                         (rule "applyEq" (formula "18") (term "0,0,1,0,0,1,0,0") (ifseqformula "19"))
                                                          (builtin "One Step Simplification" (formula "18"))
                                                         (rule "mul_literals" (formula "18") (term "1,0,0,1,0,0"))
                                                         (rule "add_literals" (formula "18") (term "0,0,1,0,0"))
                                                         (rule "add_zero_left" (formula "18") (term "0,1,0,0"))
                                                         (rule "applyEq" (formula "17") (term "0,0") (ifseqformula "19"))
                                                          (builtin "One Step Simplification" (formula "17"))
                                                         (rule "true_left" (formula "17"))
                                                         (rule "applyEq" (formula "17") (term "0,1,1,0") (ifseqformula "18"))
                                                         (rule "getOfSeqSingleton" (formula "17") (term "1,1,0"))
                                                         (rule "castDel" (formula "17") (term "2,1,1,0"))
                                                         (rule "castDel" (formula "17") (term "1,1,1,0"))
                                                          (builtin "One Step Simplification" (formula "17"))
                                                         (rule "true_left" (formula "17"))
                                                         (rule "equalityToSeqGetAndSeqLenLeft" (formula "43") (inst "iv=iv"))
                                                          (builtin "One Step Simplification" (formula "43"))
                                                         (rule "andLeft" (formula "43"))
                                                         (rule "getOfSeqSingleton" (formula "44") (term "1,1,0"))
                                                         (rule "castDel" (formula "44") (term "2,1,1,0"))
                                                         (rule "castDel" (formula "44") (term "1,1,1,0"))
                                                         (rule "eqSymm" (formula "44") (term "1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "44") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "44") (term "0,0,0"))
                                                         (rule "applyEq" (formula "44") (term "0,0,1,0,0,1,0,0") (ifseqformula "45"))
                                                          (builtin "One Step Simplification" (formula "44"))
                                                         (rule "mul_literals" (formula "44") (term "1,0,0,1,0,0"))
                                                         (rule "add_literals" (formula "44") (term "0,0,1,0,0"))
                                                         (rule "add_zero_left" (formula "44") (term "0,1,0,0"))
                                                         (rule "applyEq" (formula "43") (term "0,0") (ifseqformula "45"))
                                                          (builtin "One Step Simplification" (formula "43"))
                                                         (rule "true_left" (formula "43"))
                                                         (rule "applyEq" (formula "43") (term "0,1,1,0") (ifseqformula "44"))
                                                         (rule "getOfSeqSingleton" (formula "43") (term "1,1,0"))
                                                         (rule "castDel" (formula "43") (term "2,1,1,0"))
                                                         (rule "castDel" (formula "43") (term "1,1,1,0"))
                                                          (builtin "One Step Simplification" (formula "43"))
                                                         (rule "true_left" (formula "43"))
                                                         (rule "equalityToSeqGetAndSeqLenLeft" (formula "26") (inst "iv=iv"))
                                                         (rule "andLeft" (formula "26"))
                                                         (rule "lenOfSeqConcat" (formula "26") (term "1"))
                                                          (builtin "One Step Simplification" (formula "26"))
                                                         (rule "add_literals" (formula "26") (term "1"))
                                                         (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0"))
                                                         (rule "applyEq" (formula "27") (term "0,0,1,0,0,1,0,0") (ifseqformula "28"))
                                                         (rule "lenOfSeqConcat" (formula "27") (term "0,1,0,0,1,0,0"))
                                                          (builtin "One Step Simplification" (formula "27"))
                                                         (rule "add_literals" (formula "27") (term "0,1,0,0,1,0,0"))
                                                         (rule "mul_literals" (formula "27") (term "1,0,0,1,0,0"))
                                                         (rule "add_literals" (formula "27") (term "0,0,1,0,0"))
                                                         (rule "applyEq" (formula "26") (term "0,0") (ifseqformula "28"))
                                                         (rule "lenOfSeqConcat" (formula "26") (term "0"))
                                                          (builtin "One Step Simplification" (formula "26"))
                                                         (rule "add_literals" (formula "26") (term "0"))
                                                          (builtin "One Step Simplification" (formula "26"))
                                                         (rule "true_left" (formula "26"))
                                                         (rule "applyEq" (formula "26") (term "0,0,1,0") (ifseqformula "27"))
                                                          (builtin "One Step Simplification" (formula "26"))
                                                         (rule "true_left" (formula "26"))
                                                         (rule "onlyCreatedObjectsAreInLocSets" (formula "16") (ifseqformula "5"))
                                                         (rule "replace_known_right" (formula "16") (term "0") (ifseqformula "55"))
                                                          (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "8")))
                                                         (rule "true_left" (formula "16"))
                                                         (rule "onlyCreatedObjectsAreInLocSets" (formula "42") (ifseqformula "31"))
                                                         (rule "replace_known_right" (formula "42") (term "0") (ifseqformula "53"))
                                                          (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "34")))
                                                         (rule "true_left" (formula "42"))
                                                         (rule "onlyCreatedObjectsAreInLocSets" (formula "45") (ifseqformula "31"))
                                                         (rule "replace_known_left" (formula "45") (term "1") (ifseqformula "34"))
                                                          (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "53")))
                                                         (rule "true_left" (formula "45"))
                                                         (rule "onlyCreatedObjectsAreInLocSets" (formula "19") (ifseqformula "5"))
                                                         (rule "replace_known_left" (formula "19") (term "1") (ifseqformula "8"))
                                                          (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "55")))
                                                         (rule "true_left" (formula "19"))
                                                         (rule "onlyCreatedObjectsAreInLocSets" (formula "25") (ifseqformula "13"))
                                                         (rule "replace_known_right" (formula "25") (term "0") (ifseqformula "55"))
                                                          (builtin "One Step Simplification" (formula "25"))
                                                         (rule "onlyCreatedObjectsAreInLocSets" (formula "29") (ifseqformula "13"))
                                                         (rule "replace_known_left" (formula "29") (term "1") (ifseqformula "25"))
                                                          (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "56")))
                                                         (rule "true_left" (formula "29"))
                                                          (builtin "Use Dependency Contract" (formula "58") (ifInst ""  (formula "31")) (ifInst ""  (formula "41")) (ifInst ""  (formula "33")) (contract "ArrayList[java.lang.Object::<inv>()].JML accessible clause.0"))
                                                         (rule "replaceKnownSelect_taclet0000_9" (formula "49") (term "1,1,0"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet010000210000000000_28" (formula "49") (term "1,1,0"))
                                                         (rule "wellFormedAnonEQ" (formula "49") (term "0,1,0,0,0") (ifseqformula "23"))
                                                         (rule "wellFormedAnonEQ" (formula "49") (term "1,1,0,0,0") (ifseqformula "41"))
                                                         (rule "wellFormedAnonEQ" (formula "49") (term "0,0,1,0,0,0") (ifseqformula "14"))
                                                         (rule "wellFormedAnonEQ" (formula "49") (term "0,1,1,0,0,0") (ifseqformula "33"))
                                                         (rule "wellFormedAnonEQ" (formula "49") (term "0,0,1,1,0,0,0") (ifseqformula "23"))
                                                         (rule "wellFormedAnonEQ" (formula "49") (term "0,0,0,1,0,0,0") (ifseqformula "6"))
                                                         (rule "wellFormedAnonEQ" (formula "49") (term "0,0,0,1,1,0,0,0") (ifseqformula "14"))
                                                         (rule "wellFormedAnonEQ" (formula "49") (term "0,0,0,0,1,1,0,0,0") (ifseqformula "6"))
                                                         (rule "replace_known_left" (formula "49") (term "1,1") (ifseqformula "31"))
                                                          (builtin "One Step Simplification" (formula "49") (ifInst ""  (formula "56")) (ifInst ""  (formula "1")) (ifInst ""  (formula "5")) (ifInst ""  (formula "13")) (ifInst ""  (formula "22")) (ifInst ""  (formula "1")) (ifInst ""  (formula "5")) (ifInst ""  (formula "13")) (ifInst ""  (formula "22")) (ifInst ""  (formula "32")) (ifInst ""  (formula "40")) (ifInst ""  (formula "31")) (ifInst ""  (formula "59")))
                                                         (rule "notLeft" (formula "49"))
                                                         (rule "disjointDefinition" (formula "49") (term "1"))
                                                         (rule "pullOutSelect" (formula "49") (term "0,0") (inst "selectSK=java_lang_Object_created__6"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
                                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "57")))
                                                         (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "2,0"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "2,0"))
                                                         (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "0,0,0,0"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "0,0,0,0"))
                                                         (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "9"))
                                                          (builtin "One Step Simplification" (formula "1"))
                                                         (rule "applyEqReverse" (formula "50") (term "0,0") (ifseqformula "1"))
                                                         (rule "hideAuxiliaryEq" (formula "1"))
                                                         (rule "replace_known_left" (formula "49") (term "0") (ifseqformula "8"))
                                                          (builtin "One Step Simplification" (formula "49"))
                                                         (rule "equalityToElementOfRight" (formula "49") (inst "fv=fv") (inst "ov=ov"))
                                                          (builtin "One Step Simplification" (formula "49"))
                                                         (rule "allRight" (formula "49") (inst "sk=ov_0"))
                                                         (rule "allRight" (formula "49") (inst "sk=fv_0"))
                                                         (rule "notRight" (formula "49"))
                                                         (rule "elementOfIntersect" (formula "1"))
                                                         (rule "andLeft" (formula "1"))
                                                         (rule "elementOfSubsetImpliesElementOfSuperset" (formula "1") (ifseqformula "40"))
                                                          (builtin "One Step Simplification" (formula "1"))
                                                         (rule "andLeft" (formula "1"))
                                                         (rule "notLeft" (formula "2"))
                                                         (rule "notLeft" (formula "1"))
                                                         (rule "elementOfSubsetImpliesElementOfSuperset" (formula "2") (ifseqformula "32"))
                                                         (rule "elementOfUnion" (formula "2"))
                                                          (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "52")))
                                                         (rule "pullOutSelect" (formula "53") (term "0") (inst "selectSK=java_lang_Object_created__7"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "27"))
                                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")))
                                                         (rule "ifthenelse_negated" (formula "1") (term "0"))
                                                         (rule "apply_eq_boolean_rigid" (formula "1") (term "1") (ifseqformula "54"))
                                                          (builtin "One Step Simplification" (formula "1"))
                                                         (rule "notLeft" (formula "1"))
                                                         (rule "ifEqualsTRUE" (formula "52"))
                                                          (builtin "One Step Simplification" (formula "52"))
                                                         (rule "orRight" (formula "52"))
                                                         (rule "replace_known_right" (formula "53") (term "0,0") (ifseqformula "52"))
                                                          (builtin "One Step Simplification" (formula "53"))
                                                         (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "52"))
                                                          (builtin "One Step Simplification" (formula "2"))
                                                         (rule "true_left" (formula "2"))
                                                         (rule "pullOutSelect" (formula "51") (term "0") (inst "selectSK=java_lang_Object_created__8"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "17"))
                                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "54")))
                                                         (rule "ifthenelse_negated" (formula "1") (term "0"))
                                                         (rule "apply_eq_boolean" (formula "1") (term "1") (ifseqformula "52"))
                                                          (builtin "One Step Simplification" (formula "1"))
                                                         (rule "notLeft" (formula "1"))
                                                         (rule "ifEqualsTRUE" (formula "51"))
                                                          (builtin "One Step Simplification" (formula "51"))
                                                         (rule "orRight" (formula "51"))
                                                         (rule "replace_known_right" (formula "52") (term "0,0") (ifseqformula "51"))
                                                          (builtin "One Step Simplification" (formula "52"))
                                                         (rule "pullOutSelect" (formula "51") (term "0") (inst "selectSK=java_lang_Object_created__9"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "9"))
                                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "56")))
                                                         (rule "ifthenelse_negated" (formula "1") (term "0"))
                                                         (rule "apply_eq_boolean" (formula "1") (term "1") (ifseqformula "52"))
                                                          (builtin "One Step Simplification" (formula "1"))
                                                         (rule "notLeft" (formula "1"))
                                                         (rule "ifEqualsTRUE" (formula "51"))
                                                          (builtin "One Step Simplification" (formula "51"))
                                                         (rule "orRight" (formula "51"))
                                                         (rule "replace_known_right" (formula "52") (term "0,0") (ifseqformula "51"))
                                                          (builtin "One Step Simplification" (formula "52"))
                                                         (rule "hideAuxiliaryEqConcrete2" (formula "58"))
                                                         (rule "hideAuxiliaryEqConcrete2" (formula "55"))
                                                         (rule "hideAuxiliaryEqConcrete2" (formula "53"))
                                                         (rule "onlyCreatedObjectsAreInLocSets" (formula "2") (ifseqformula "24"))
                                                         (rule "replace_known_right" (formula "2") (term "0") (ifseqformula "56"))
                                                          (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "55")))
                                                         (rule "closeFalse" (formula "2"))
                                                      )
                                                      (branch "(self_0, List::$seq) in self_0.footprint@anon_heap_add<<anonHeapFunction>> FALSE"
                                                         (rule "eqSymm" (formula "25"))
                                                         (rule "applyEqRigid" (formula "26") (term "1") (ifseqformula "25"))
                                                         (rule "equalityToSeqGetAndSeqLenLeft" (formula "35") (inst "iv=iv"))
                                                          (builtin "One Step Simplification" (formula "35"))
                                                         (rule "andLeft" (formula "35"))
                                                         (rule "inEqSimp_ltToLeq" (formula "36") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "36") (term "0,0,0"))
                                                         (rule "applyEq" (formula "36") (term "0,0,1,0") (ifseqformula "37"))
                                                          (builtin "One Step Simplification" (formula "36"))
                                                         (rule "true_left" (formula "36"))
                                                         (rule "applyEq" (formula "35") (term "0,0") (ifseqformula "36"))
                                                          (builtin "One Step Simplification" (formula "35"))
                                                         (rule "true_left" (formula "35"))
                                                         (rule "equalityToSeqGetAndSeqLenLeft" (formula "43") (inst "iv=iv"))
                                                          (builtin "One Step Simplification" (formula "43"))
                                                         (rule "andLeft" (formula "43"))
                                                         (rule "getOfSeqSingleton" (formula "44") (term "1,1,0"))
                                                         (rule "castDel" (formula "44") (term "2,1,1,0"))
                                                         (rule "castDel" (formula "44") (term "1,1,1,0"))
                                                         (rule "eqSymm" (formula "44") (term "1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "44") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "44") (term "0,0,0"))
                                                         (rule "applyEqRigid" (formula "43") (term "0,0") (ifseqformula "45"))
                                                          (builtin "One Step Simplification" (formula "43"))
                                                         (rule "true_left" (formula "43"))
                                                         (rule "applyEq" (formula "43") (term "0,1,1,0") (ifseqformula "44"))
                                                         (rule "getOfSeqSingleton" (formula "43") (term "1,1,0"))
                                                         (rule "castDel" (formula "43") (term "2,1,1,0"))
                                                         (rule "castDel" (formula "43") (term "1,1,1,0"))
                                                          (builtin "One Step Simplification" (formula "43"))
                                                         (rule "true_left" (formula "43"))
                                                         (rule "equalityToSeqGetAndSeqLenLeft" (formula "17") (inst "iv=iv"))
                                                          (builtin "One Step Simplification" (formula "17"))
                                                         (rule "andLeft" (formula "17"))
                                                         (rule "getOfSeqSingleton" (formula "18") (term "1,1,0"))
                                                         (rule "castDel" (formula "18") (term "2,1,1,0"))
                                                         (rule "castDel" (formula "18") (term "1,1,1,0"))
                                                         (rule "eqSymm" (formula "18") (term "1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
                                                         (rule "applyEq" (formula "18") (term "0,1,1,0") (ifseqformula "19"))
                                                         (rule "getOfSeqSingleton" (formula "18") (term "1,1,0"))
                                                         (rule "castDel" (formula "18") (term "1,1,1,0"))
                                                         (rule "castDel" (formula "18") (term "2,1,1,0"))
                                                          (builtin "One Step Simplification" (formula "18"))
                                                         (rule "true_left" (formula "18"))
                                                         (rule "applyEq" (formula "17") (term "0,0") (ifseqformula "18"))
                                                          (builtin "One Step Simplification" (formula "17"))
                                                         (rule "true_left" (formula "17"))
                                                         (rule "equalityToSeqGetAndSeqLenLeft" (formula "42") (inst "iv=iv"))
                                                          (builtin "One Step Simplification" (formula "42"))
                                                         (rule "andLeft" (formula "42"))
                                                         (rule "getOfSeqSingleton" (formula "43") (term "1,1,0"))
                                                         (rule "castDel" (formula "43") (term "2,1,1,0"))
                                                         (rule "castDel" (formula "43") (term "1,1,1,0"))
                                                         (rule "eqSymm" (formula "43") (term "1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "43") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "43") (term "0,0,0"))
                                                         (rule "applyEq" (formula "43") (term "0,1,1,0") (ifseqformula "44"))
                                                         (rule "getOfSeqSingleton" (formula "43") (term "1,1,0"))
                                                         (rule "castDel" (formula "43") (term "1,1,1,0"))
                                                         (rule "castDel" (formula "43") (term "2,1,1,0"))
                                                          (builtin "One Step Simplification" (formula "43"))
                                                         (rule "true_left" (formula "43"))
                                                         (rule "applyEq" (formula "42") (term "0,0") (ifseqformula "43"))
                                                          (builtin "One Step Simplification" (formula "42"))
                                                         (rule "true_left" (formula "42"))
                                                         (rule "equalityToSeqGetAndSeqLenLeft" (formula "25") (inst "iv=iv"))
                                                          (builtin "One Step Simplification" (formula "25"))
                                                         (rule "andLeft" (formula "25"))
                                                         (rule "lenOfSeqConcat" (formula "25") (term "0"))
                                                          (builtin "One Step Simplification" (formula "25"))
                                                         (rule "add_literals" (formula "25") (term "0"))
                                                         (rule "equal_literals" (formula "25"))
                                                         (rule "closeFalse" (formula "25"))
                                                      )
                                                   )
                                                   (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_add<<anonHeapFunction>> FALSE"
                                                      (rule "applyEqReverse" (formula "28") (term "0") (ifseqformula "27"))
                                                       (builtin "One Step Simplification" (formula "28"))
                                                      (rule "true_left" (formula "28"))
                                                      (rule "hideAuxiliaryEq" (formula "27"))
                                                      (rule "ifthenelse_split" (formula "25") (term "0"))
                                                      (branch "(self_0, List::$seq) in self_0.footprint@anon_heap_add<<anonHeapFunction>> TRUE"
                                                         (rule "elementOfSubsetImpliesElementOfSuperset" (formula "25") (ifseqformula "20"))
                                                         (rule "elementOfUnion" (formula "25"))
                                                          (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "16")))
                                                         (rule "true_left" (formula "25"))
                                                         (rule "equalityToSeqGetAndSeqLenLeft" (formula "34") (inst "iv=iv"))
                                                          (builtin "One Step Simplification" (formula "34"))
                                                         (rule "andLeft" (formula "34"))
                                                         (rule "inEqSimp_ltToLeq" (formula "35") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "35") (term "0,0,0"))
                                                         (rule "applyEq" (formula "35") (term "0,0,1,0,0,1,0,0") (ifseqformula "36"))
                                                          (builtin "One Step Simplification" (formula "35"))
                                                         (rule "mul_literals" (formula "35") (term "1,0,0,1,0,0"))
                                                         (rule "add_zero_right" (formula "35") (term "0,0,1,0,0"))
                                                         (rule "applyEq" (formula "34") (term "0,0") (ifseqformula "36"))
                                                          (builtin "One Step Simplification" (formula "34"))
                                                         (rule "true_left" (formula "34"))
                                                         (rule "applyEq" (formula "34") (term "0,0,1,0") (ifseqformula "35"))
                                                          (builtin "One Step Simplification" (formula "34"))
                                                         (rule "true_left" (formula "34"))
                                                         (rule "equalityToSeqGetAndSeqLenLeft" (formula "42") (inst "iv=iv"))
                                                          (builtin "One Step Simplification" (formula "42"))
                                                         (rule "andLeft" (formula "42"))
                                                         (rule "getOfSeqSingleton" (formula "43") (term "1,1,0"))
                                                         (rule "castDel" (formula "43") (term "1,1,1,0"))
                                                         (rule "castDel" (formula "43") (term "2,1,1,0"))
                                                         (rule "eqSymm" (formula "43") (term "1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "43") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "43") (term "0,0,0"))
                                                         (rule "applyEq" (formula "43") (term "0,1,1,0") (ifseqformula "44"))
                                                         (rule "getOfSeqSingleton" (formula "43") (term "1,1,0"))
                                                         (rule "castDel" (formula "43") (term "1,1,1,0"))
                                                         (rule "castDel" (formula "43") (term "2,1,1,0"))
                                                          (builtin "One Step Simplification" (formula "43"))
                                                         (rule "true_left" (formula "43"))
                                                         (rule "applyEqRigid" (formula "42") (term "0,0") (ifseqformula "43"))
                                                          (builtin "One Step Simplification" (formula "42"))
                                                         (rule "true_left" (formula "42"))
                                                         (rule "equalityToSeqGetAndSeqLenLeft" (formula "17") (inst "iv=iv"))
                                                          (builtin "One Step Simplification" (formula "17"))
                                                         (rule "andLeft" (formula "17"))
                                                         (rule "getOfSeqSingleton" (formula "18") (term "1,1,0"))
                                                         (rule "castDel" (formula "18") (term "1,1,1,0"))
                                                         (rule "castDel" (formula "18") (term "2,1,1,0"))
                                                         (rule "eqSymm" (formula "18") (term "1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
                                                         (rule "applyEq" (formula "18") (term "0,1,1,0") (ifseqformula "19"))
                                                         (rule "getOfSeqSingleton" (formula "18") (term "1,1,0"))
                                                         (rule "castDel" (formula "18") (term "1,1,1,0"))
                                                         (rule "castDel" (formula "18") (term "2,1,1,0"))
                                                          (builtin "One Step Simplification" (formula "18"))
                                                         (rule "true_left" (formula "18"))
                                                         (rule "applyEq" (formula "17") (term "0,0") (ifseqformula "18"))
                                                          (builtin "One Step Simplification" (formula "17"))
                                                         (rule "true_left" (formula "17"))
                                                         (rule "equalityToSeqGetAndSeqLenLeft" (formula "41") (inst "iv=iv"))
                                                          (builtin "One Step Simplification" (formula "41"))
                                                         (rule "andLeft" (formula "41"))
                                                         (rule "getOfSeqSingleton" (formula "42") (term "1,1,0"))
                                                         (rule "castDel" (formula "42") (term "1,1,1,0"))
                                                         (rule "castDel" (formula "42") (term "2,1,1,0"))
                                                         (rule "eqSymm" (formula "42") (term "1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "42") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "42") (term "0,0,0"))
                                                         (rule "applyEq" (formula "42") (term "0,0,1,0,0,1,0,0") (ifseqformula "43"))
                                                          (builtin "One Step Simplification" (formula "42"))
                                                         (rule "mul_literals" (formula "42") (term "1,0,0,1,0,0"))
                                                         (rule "add_literals" (formula "42") (term "0,0,1,0,0"))
                                                         (rule "add_zero_left" (formula "42") (term "0,1,0,0"))
                                                         (rule "applyEq" (formula "41") (term "0,0") (ifseqformula "43"))
                                                          (builtin "One Step Simplification" (formula "41"))
                                                         (rule "true_left" (formula "41"))
                                                         (rule "applyEq" (formula "41") (term "0,1,1,0") (ifseqformula "42"))
                                                         (rule "getOfSeqSingleton" (formula "41") (term "1,1,0"))
                                                         (rule "castDel" (formula "41") (term "2,1,1,0"))
                                                         (rule "castDel" (formula "41") (term "1,1,1,0"))
                                                          (builtin "One Step Simplification" (formula "41"))
                                                         (rule "true_left" (formula "41"))
                                                         (rule "equalityToSeqGetAndSeqLenLeft" (formula "26") (inst "iv=iv"))
                                                         (rule "andLeft" (formula "26"))
                                                         (rule "lenOfSeqConcat" (formula "26") (term "1"))
                                                          (builtin "One Step Simplification" (formula "26"))
                                                         (rule "add_literals" (formula "26") (term "1"))
                                                         (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0"))
                                                         (rule "applyEq" (formula "27") (term "0,0,1,0,0,1,0,0") (ifseqformula "28"))
                                                         (rule "lenOfSeqConcat" (formula "27") (term "0,1,0,0,1,0,0"))
                                                          (builtin "One Step Simplification" (formula "27"))
                                                         (rule "add_literals" (formula "27") (term "0,1,0,0,1,0,0"))
                                                         (rule "mul_literals" (formula "27") (term "1,0,0,1,0,0"))
                                                         (rule "add_literals" (formula "27") (term "0,0,1,0,0"))
                                                         (rule "applyEq" (formula "26") (term "0,0") (ifseqformula "28"))
                                                         (rule "lenOfSeqConcat" (formula "26") (term "0"))
                                                          (builtin "One Step Simplification" (formula "26"))
                                                         (rule "add_literals" (formula "26") (term "0"))
                                                          (builtin "One Step Simplification" (formula "26"))
                                                         (rule "true_left" (formula "26"))
                                                         (rule "applyEq" (formula "26") (term "0,0,1,0") (ifseqformula "27"))
                                                          (builtin "One Step Simplification" (formula "26"))
                                                         (rule "true_left" (formula "26"))
                                                         (rule "onlyCreatedObjectsAreInLocSets" (formula "16") (ifseqformula "5"))
                                                         (rule "replace_known_left" (formula "16") (term "1") (ifseqformula "8"))
                                                          (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "54")))
                                                         (rule "true_left" (formula "16"))
                                                         (rule "onlyCreatedObjectsAreInLocSets" (formula "40") (ifseqformula "29"))
                                                         (rule "replace_known_left" (formula "40") (term "1") (ifseqformula "32"))
                                                          (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "52")))
                                                         (rule "true_left" (formula "40"))
                                                         (rule "onlyCreatedObjectsAreInLocSets" (formula "43") (ifseqformula "29"))
                                                         (rule "replace_known_left" (formula "43") (term "1") (ifseqformula "32"))
                                                          (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "52")))
                                                         (rule "true_left" (formula "43"))
                                                         (rule "onlyCreatedObjectsAreInLocSets" (formula "19") (ifseqformula "5"))
                                                         (rule "replace_known_left" (formula "19") (term "1") (ifseqformula "8"))
                                                          (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "54")))
                                                         (rule "true_left" (formula "19"))
                                                         (rule "onlyCreatedObjectsAreInLocSets" (formula "25") (ifseqformula "13"))
                                                         (rule "replace_known_right" (formula "25") (term "0") (ifseqformula "54"))
                                                          (builtin "One Step Simplification" (formula "25"))
                                                          (builtin "Use Dependency Contract" (formula "57") (ifInst ""  (formula "29")) (ifInst ""  (formula "39")) (ifInst ""  (formula "31")) (contract "ArrayList[java.lang.Object::<inv>()].JML accessible clause.0"))
                                                         (rule "replaceKnownSelect_taclet0000_9" (formula "47") (term "1,1,0"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet110000210000000000_28" (formula "47") (term "1,1,0"))
                                                         (rule "wellFormedAnonEQ" (formula "47") (term "0,1,0,0,0") (ifseqformula "23"))
                                                         (rule "wellFormedAnonEQ" (formula "47") (term "1,1,0,0,0") (ifseqformula "39"))
                                                         (rule "wellFormedAnonEQ" (formula "47") (term "0,1,1,0,0,0") (ifseqformula "31"))
                                                         (rule "wellFormedAnonEQ" (formula "47") (term "0,0,1,0,0,0") (ifseqformula "14"))
                                                         (rule "wellFormedAnonEQ" (formula "47") (term "0,0,0,1,0,0,0") (ifseqformula "6"))
                                                         (rule "wellFormedAnonEQ" (formula "47") (term "0,0,1,1,0,0,0") (ifseqformula "23"))
                                                         (rule "wellFormedAnonEQ" (formula "47") (term "0,0,0,1,1,0,0,0") (ifseqformula "14"))
                                                         (rule "wellFormedAnonEQ" (formula "47") (term "0,0,0,0,1,1,0,0,0") (ifseqformula "6"))
                                                         (rule "replace_known_left" (formula "47") (term "1,0,0") (ifseqformula "29"))
                                                          (builtin "One Step Simplification" (formula "47") (ifInst ""  (formula "55")) (ifInst ""  (formula "1")) (ifInst ""  (formula "5")) (ifInst ""  (formula "13")) (ifInst ""  (formula "22")) (ifInst ""  (formula "1")) (ifInst ""  (formula "5")) (ifInst ""  (formula "13")) (ifInst ""  (formula "22")) (ifInst ""  (formula "30")) (ifInst ""  (formula "38")) (ifInst ""  (formula "58")) (ifInst ""  (formula "29")))
                                                         (rule "notLeft" (formula "47"))
                                                         (rule "disjointDefinition" (formula "47") (term "1"))
                                                         (rule "pullOutSelect" (formula "47") (term "0,0") (inst "selectSK=java_lang_Object_created__6"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
                                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "56")))
                                                         (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "2,0"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "2,0"))
                                                         (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "0,0,0,0"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "0,0,0,0"))
                                                         (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "9"))
                                                          (builtin "One Step Simplification" (formula "1"))
                                                         (rule "applyEqReverse" (formula "48") (term "0,0") (ifseqformula "1"))
                                                         (rule "hideAuxiliaryEq" (formula "1"))
                                                         (rule "replace_known_left" (formula "47") (term "0") (ifseqformula "8"))
                                                          (builtin "One Step Simplification" (formula "47"))
                                                         (rule "equalityToElementOfRight" (formula "47") (inst "fv=fv") (inst "ov=ov"))
                                                          (builtin "One Step Simplification" (formula "47"))
                                                         (rule "allRight" (formula "47") (inst "sk=ov_0"))
                                                         (rule "allRight" (formula "47") (inst "sk=fv_0"))
                                                         (rule "notRight" (formula "47"))
                                                         (rule "elementOfIntersect" (formula "1"))
                                                         (rule "andLeft" (formula "1"))
                                                         (rule "elementOfSubsetImpliesElementOfSuperset" (formula "2") (ifseqformula "22"))
                                                         (rule "elementOfSubsetImpliesElementOfSuperset" (formula "1") (ifseqformula "39"))
                                                          (builtin "One Step Simplification" (formula "1"))
                                                         (rule "andLeft" (formula "1"))
                                                         (rule "notLeft" (formula "2"))
                                                         (rule "notLeft" (formula "1"))
                                                         (rule "elementOfUnion" (formula "2"))
                                                          (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "50")))
                                                         (rule "pullOutSelect" (formula "51") (term "0") (inst "selectSK=java_lang_Object_created__7"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "27"))
                                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "51")))
                                                         (rule "ifthenelse_negated" (formula "1") (term "0"))
                                                         (rule "apply_eq_boolean_rigid" (formula "1") (term "1") (ifseqformula "52"))
                                                          (builtin "One Step Simplification" (formula "1"))
                                                         (rule "notLeft" (formula "1"))
                                                         (rule "ifEqualsTRUE" (formula "50"))
                                                          (builtin "One Step Simplification" (formula "50"))
                                                         (rule "orRight" (formula "50"))
                                                         (rule "replace_known_right" (formula "51") (term "0,0") (ifseqformula "50"))
                                                          (builtin "One Step Simplification" (formula "51"))
                                                         (rule "pullOutSelect" (formula "2") (term "0,0,0") (inst "selectSK=java_lang_Object_created__8"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "10"))
                                                          (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "53")))
                                                         (rule "ifthenelse_negated" (formula "2") (term "0"))
                                                         (rule "pullOutSelect" (formula "51") (term "0") (inst "selectSK=java_lang_Object_created__9"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "54")))
                                                         (rule "replaceKnownSelect_taclet0110000210000000000_32" (formula "1") (term "2,0"))
                                                         (rule "replaceKnownSelect_taclet0110000210000000000_32" (formula "1") (term "0,0,0,0"))
                                                         (rule "ifthenelse_negated" (formula "1") (term "0"))
                                                         (rule "apply_eq_boolean_rigid" (formula "1") (term "1") (ifseqformula "52"))
                                                          (builtin "One Step Simplification" (formula "1"))
                                                         (rule "notLeft" (formula "1"))
                                                         (rule "ifEqualsTRUE" (formula "51"))
                                                          (builtin "One Step Simplification" (formula "51"))
                                                         (rule "orRight" (formula "51"))
                                                         (rule "replace_known_right" (formula "52") (term "0,0") (ifseqformula "51"))
                                                          (builtin "One Step Simplification" (formula "52"))
                                                         (rule "replace_known_right" (formula "3") (term "0,0") (ifseqformula "51"))
                                                          (builtin "One Step Simplification" (formula "3"))
                                                         (rule "true_left" (formula "3"))
                                                         (rule "apply_eq_boolean" (formula "2") (term "1") (ifseqformula "50"))
                                                          (builtin "One Step Simplification" (formula "2"))
                                                         (rule "notLeft" (formula "2"))
                                                         (rule "ifEqualsTRUE" (formula "49"))
                                                          (builtin "One Step Simplification" (formula "49"))
                                                         (rule "orRight" (formula "49"))
                                                         (rule "replace_known_right" (formula "50") (term "0,0") (ifseqformula "49"))
                                                          (builtin "One Step Simplification" (formula "50"))
                                                         (rule "hideAuxiliaryEqConcrete2" (formula "56"))
                                                         (rule "hideAuxiliaryEqConcrete2" (formula "53"))
                                                         (rule "hideAuxiliaryEqConcrete2" (formula "51"))
                                                         (rule "onlyCreatedObjectsAreInLocSets" (formula "2") (ifseqformula "15"))
                                                         (rule "replace_known_right" (formula "2") (term "0") (ifseqformula "54"))
                                                          (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "52")))
                                                         (rule "closeFalse" (formula "2"))
                                                      )
                                                      (branch "(self_0, List::$seq) in self_0.footprint@anon_heap_add<<anonHeapFunction>> FALSE"
                                                         (rule "eqSymm" (formula "25"))
                                                         (rule "applyEq" (formula "26") (term "1") (ifseqformula "25"))
                                                         (rule "equalityToSeqGetAndSeqLenLeft" (formula "33") (inst "iv=iv"))
                                                          (builtin "One Step Simplification" (formula "33"))
                                                         (rule "andLeft" (formula "33"))
                                                         (rule "inEqSimp_ltToLeq" (formula "34") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "34") (term "0,0,0"))
                                                         (rule "applyEq" (formula "34") (term "0,0,1,0,0,1,0,0") (ifseqformula "35"))
                                                          (builtin "One Step Simplification" (formula "34"))
                                                         (rule "mul_literals" (formula "34") (term "1,0,0,1,0,0"))
                                                         (rule "add_zero_right" (formula "34") (term "0,0,1,0,0"))
                                                         (rule "applyEq" (formula "33") (term "0,0") (ifseqformula "35"))
                                                          (builtin "One Step Simplification" (formula "33"))
                                                         (rule "true_left" (formula "33"))
                                                         (rule "applyEq" (formula "33") (term "0,0,1,0") (ifseqformula "34"))
                                                          (builtin "One Step Simplification" (formula "33"))
                                                         (rule "true_left" (formula "33"))
                                                         (rule "equalityToSeqGetAndSeqLenLeft" (formula "41") (inst "iv=iv"))
                                                          (builtin "One Step Simplification" (formula "41"))
                                                         (rule "andLeft" (formula "41"))
                                                         (rule "getOfSeqSingleton" (formula "42") (term "1,1,0"))
                                                         (rule "castDel" (formula "42") (term "1,1,1,0"))
                                                         (rule "castDel" (formula "42") (term "2,1,1,0"))
                                                         (rule "eqSymm" (formula "42") (term "1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "42") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "42") (term "0,0,0"))
                                                         (rule "applyEq" (formula "41") (term "0,0") (ifseqformula "43"))
                                                          (builtin "One Step Simplification" (formula "41"))
                                                         (rule "true_left" (formula "41"))
                                                         (rule "applyEqRigid" (formula "41") (term "0,1,1,0") (ifseqformula "42"))
                                                         (rule "getOfSeqSingleton" (formula "41") (term "1,1,0"))
                                                         (rule "castDel" (formula "41") (term "1,1,1,0"))
                                                         (rule "castDel" (formula "41") (term "2,1,1,0"))
                                                          (builtin "One Step Simplification" (formula "41"))
                                                         (rule "true_left" (formula "41"))
                                                         (rule "equalityToSeqGetAndSeqLenLeft" (formula "17") (inst "iv=iv"))
                                                          (builtin "One Step Simplification" (formula "17"))
                                                         (rule "andLeft" (formula "17"))
                                                         (rule "getOfSeqSingleton" (formula "18") (term "1,1,0"))
                                                         (rule "castDel" (formula "18") (term "1,1,1,0"))
                                                         (rule "castDel" (formula "18") (term "2,1,1,0"))
                                                         (rule "eqSymm" (formula "18") (term "1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
                                                         (rule "applyEq" (formula "17") (term "0,0") (ifseqformula "19"))
                                                          (builtin "One Step Simplification" (formula "17"))
                                                         (rule "true_left" (formula "17"))
                                                         (rule "applyEq" (formula "17") (term "0,1,1,0") (ifseqformula "18"))
                                                         (rule "getOfSeqSingleton" (formula "17") (term "1,1,0"))
                                                         (rule "castDel" (formula "17") (term "2,1,1,0"))
                                                         (rule "castDel" (formula "17") (term "1,1,1,0"))
                                                          (builtin "One Step Simplification" (formula "17"))
                                                         (rule "true_left" (formula "17"))
                                                         (rule "equalityToSeqGetAndSeqLenLeft" (formula "40") (inst "iv=iv"))
                                                          (builtin "One Step Simplification" (formula "40"))
                                                         (rule "andLeft" (formula "40"))
                                                         (rule "getOfSeqSingleton" (formula "41") (term "1,1,0"))
                                                         (rule "castDel" (formula "41") (term "1,1,1,0"))
                                                         (rule "castDel" (formula "41") (term "2,1,1,0"))
                                                         (rule "eqSymm" (formula "41") (term "1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "41") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "41") (term "0,0,0"))
                                                         (rule "applyEq" (formula "41") (term "0,1,1,0") (ifseqformula "42"))
                                                         (rule "getOfSeqSingleton" (formula "41") (term "1,1,0"))
                                                         (rule "castDel" (formula "41") (term "1,1,1,0"))
                                                         (rule "castDel" (formula "41") (term "2,1,1,0"))
                                                          (builtin "One Step Simplification" (formula "41"))
                                                         (rule "true_left" (formula "41"))
                                                         (rule "applyEq" (formula "40") (term "0,0") (ifseqformula "41"))
                                                          (builtin "One Step Simplification" (formula "40"))
                                                         (rule "true_left" (formula "40"))
                                                         (rule "equalityToSeqGetAndSeqLenLeft" (formula "25") (inst "iv=iv"))
                                                          (builtin "One Step Simplification" (formula "25"))
                                                         (rule "andLeft" (formula "25"))
                                                         (rule "lenOfSeqConcat" (formula "25") (term "0"))
                                                          (builtin "One Step Simplification" (formula "25"))
                                                         (rule "add_literals" (formula "25") (term "0"))
                                                         (rule "equal_literals" (formula "25"))
                                                         (rule "closeFalse" (formula "25"))
                                                      )
                                                   )
                                                )
                                             )
                                             (branch "(self_1, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> FALSE"
                                                (rule "eqSymm" (formula "41"))
                                                (rule "applyEq" (formula "42") (term "1") (ifseqformula "41"))
                                                (rule "ifthenelse_split" (formula "55") (term "0,0,1"))
                                                (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> TRUE"
                                                   (rule "elementOfSubsetImpliesElementOfSuperset" (formula "1") (ifseqformula "37"))
                                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "55")))
                                                   (rule "notLeft" (formula "1"))
                                                   (rule "pullOutSelect" (formula "47") (term "0") (inst "selectSK=java_lang_Object_created__6"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "25"))
                                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "56")))
                                                   (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "2,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "2,0"))
                                                   (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "0,0,0,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "0,0,0,0"))
                                                   (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "10"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "applyEqReverse" (formula "48") (term "0") (ifseqformula "1"))
                                                   (rule "close" (formula "48") (ifseqformula "10"))
                                                )
                                                (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> FALSE"
                                                   (rule "lenOfSeqConcat" (formula "56") (term "0,1"))
                                                    (builtin "One Step Simplification" (formula "56"))
                                                   (rule "add_literals" (formula "56") (term "0,1"))
                                                   (rule "qeq_literals" (formula "56") (term "1"))
                                                    (builtin "One Step Simplification" (formula "56"))
                                                   (rule "ifthenelse_split" (formula "27") (term "0"))
                                                   (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_add<<anonHeapFunction>> TRUE"
                                                      (rule "applyEqReverse" (formula "29") (term "0") (ifseqformula "28"))
                                                      (rule "hideAuxiliaryEq" (formula "28"))
                                                      (rule "elementOfSubsetImpliesElementOfSuperset" (formula "27") (ifseqformula "20"))
                                                      (rule "elementOfUnion" (formula "27"))
                                                       (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "19")))
                                                      (rule "true_left" (formula "27"))
                                                      (rule "ifthenelse_split" (formula "25") (term "0"))
                                                      (branch "(self_0, List::$seq) in self_0.footprint@anon_heap_add<<anonHeapFunction>> TRUE"
                                                         (rule "elementOfSubsetImpliesElementOfSuperset" (formula "25") (ifseqformula "20"))
                                                         (rule "elementOfUnion" (formula "25"))
                                                          (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "16")))
                                                         (rule "true_left" (formula "25"))
                                                         (rule "equalityToSeqGetAndSeqLenLeft" (formula "36") (inst "iv=iv"))
                                                          (builtin "One Step Simplification" (formula "36"))
                                                         (rule "andLeft" (formula "36"))
                                                         (rule "inEqSimp_ltToLeq" (formula "37") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "37") (term "0,0,0"))
                                                         (rule "applyEq" (formula "36") (term "0,0") (ifseqformula "38"))
                                                          (builtin "One Step Simplification" (formula "36"))
                                                         (rule "true_left" (formula "36"))
                                                         (rule "applyEq" (formula "36") (term "0,0,1,0") (ifseqformula "37"))
                                                          (builtin "One Step Simplification" (formula "36"))
                                                         (rule "true_left" (formula "36"))
                                                         (rule "equalityToSeqGetAndSeqLenLeft" (formula "17") (inst "iv=iv"))
                                                          (builtin "One Step Simplification" (formula "17"))
                                                         (rule "andLeft" (formula "17"))
                                                         (rule "getOfSeqSingleton" (formula "18") (term "1,1,0"))
                                                         (rule "castDel" (formula "18") (term "2,1,1,0"))
                                                         (rule "castDel" (formula "18") (term "1,1,1,0"))
                                                         (rule "eqSymm" (formula "18") (term "1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
                                                         (rule "applyEq" (formula "18") (term "0,1,1,0") (ifseqformula "19"))
                                                         (rule "getOfSeqSingleton" (formula "18") (term "1,1,0"))
                                                         (rule "castDel" (formula "18") (term "1,1,1,0"))
                                                         (rule "castDel" (formula "18") (term "2,1,1,0"))
                                                          (builtin "One Step Simplification" (formula "18"))
                                                         (rule "true_left" (formula "18"))
                                                         (rule "applyEq" (formula "17") (term "0,0") (ifseqformula "18"))
                                                          (builtin "One Step Simplification" (formula "17"))
                                                         (rule "true_left" (formula "17"))
                                                         (rule "equalityToSeqGetAndSeqLenLeft" (formula "42") (inst "iv=iv"))
                                                          (builtin "One Step Simplification" (formula "42"))
                                                         (rule "equal_literals" (formula "42") (term "0"))
                                                          (builtin "One Step Simplification" (formula "42"))
                                                         (rule "closeFalse" (formula "42"))
                                                      )
                                                      (branch "(self_0, List::$seq) in self_0.footprint@anon_heap_add<<anonHeapFunction>> FALSE"
                                                         (rule "eqSymm" (formula "25"))
                                                         (rule "applyEq" (formula "26") (term "1") (ifseqformula "25"))
                                                         (rule "equalityToSeqGetAndSeqLenLeft" (formula "35") (inst "iv=iv"))
                                                          (builtin "One Step Simplification" (formula "35"))
                                                         (rule "andLeft" (formula "35"))
                                                         (rule "inEqSimp_ltToLeq" (formula "36") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "36") (term "0,0,0"))
                                                         (rule "applyEq" (formula "35") (term "0,0") (ifseqformula "37"))
                                                          (builtin "One Step Simplification" (formula "35"))
                                                         (rule "true_left" (formula "35"))
                                                         (rule "applyEq" (formula "35") (term "0,0,1,0") (ifseqformula "36"))
                                                          (builtin "One Step Simplification" (formula "35"))
                                                         (rule "true_left" (formula "35"))
                                                         (rule "equalityToSeqGetAndSeqLenLeft" (formula "17") (inst "iv=iv"))
                                                          (builtin "One Step Simplification" (formula "17"))
                                                         (rule "andLeft" (formula "17"))
                                                         (rule "getOfSeqSingleton" (formula "18") (term "1,1,0"))
                                                         (rule "castDel" (formula "18") (term "2,1,1,0"))
                                                         (rule "castDel" (formula "18") (term "1,1,1,0"))
                                                         (rule "eqSymm" (formula "18") (term "1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
                                                         (rule "applyEq" (formula "18") (term "0,1,1,0") (ifseqformula "19"))
                                                         (rule "getOfSeqSingleton" (formula "18") (term "1,1,0"))
                                                         (rule "castDel" (formula "18") (term "1,1,1,0"))
                                                         (rule "castDel" (formula "18") (term "2,1,1,0"))
                                                          (builtin "One Step Simplification" (formula "18"))
                                                         (rule "true_left" (formula "18"))
                                                         (rule "applyEq" (formula "17") (term "0,0") (ifseqformula "18"))
                                                          (builtin "One Step Simplification" (formula "17"))
                                                         (rule "true_left" (formula "17"))
                                                         (rule "equalityToSeqGetAndSeqLenLeft" (formula "41") (inst "iv=iv"))
                                                          (builtin "One Step Simplification" (formula "41"))
                                                         (rule "equal_literals" (formula "41") (term "0"))
                                                          (builtin "One Step Simplification" (formula "41"))
                                                         (rule "closeFalse" (formula "41"))
                                                      )
                                                   )
                                                   (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_add<<anonHeapFunction>> FALSE"
                                                      (rule "applyEqReverse" (formula "28") (term "0") (ifseqformula "27"))
                                                       (builtin "One Step Simplification" (formula "28"))
                                                      (rule "true_left" (formula "28"))
                                                      (rule "hideAuxiliaryEq" (formula "27"))
                                                      (rule "ifthenelse_split" (formula "25") (term "0"))
                                                      (branch "(self_0, List::$seq) in self_0.footprint@anon_heap_add<<anonHeapFunction>> TRUE"
                                                         (rule "elementOfSubsetImpliesElementOfSuperset" (formula "25") (ifseqformula "20"))
                                                         (rule "elementOfUnion" (formula "25"))
                                                          (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "16")))
                                                         (rule "true_left" (formula "25"))
                                                         (rule "equalityToSeqGetAndSeqLenLeft" (formula "34") (inst "iv=iv"))
                                                          (builtin "One Step Simplification" (formula "34"))
                                                         (rule "andLeft" (formula "34"))
                                                         (rule "inEqSimp_ltToLeq" (formula "35") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "35") (term "0,0,0"))
                                                         (rule "applyEq" (formula "35") (term "0,0,1,0,0,1,0,0") (ifseqformula "36"))
                                                          (builtin "One Step Simplification" (formula "35"))
                                                         (rule "mul_literals" (formula "35") (term "1,0,0,1,0,0"))
                                                         (rule "add_zero_right" (formula "35") (term "0,0,1,0,0"))
                                                         (rule "applyEq" (formula "34") (term "0,0") (ifseqformula "36"))
                                                          (builtin "One Step Simplification" (formula "34"))
                                                         (rule "true_left" (formula "34"))
                                                         (rule "applyEq" (formula "34") (term "0,0,1,0") (ifseqformula "35"))
                                                          (builtin "One Step Simplification" (formula "34"))
                                                         (rule "true_left" (formula "34"))
                                                         (rule "equalityToSeqGetAndSeqLenLeft" (formula "17") (inst "iv=iv"))
                                                          (builtin "One Step Simplification" (formula "17"))
                                                         (rule "andLeft" (formula "17"))
                                                         (rule "getOfSeqSingleton" (formula "18") (term "1,1,0"))
                                                         (rule "castDel" (formula "18") (term "1,1,1,0"))
                                                         (rule "castDel" (formula "18") (term "2,1,1,0"))
                                                         (rule "eqSymm" (formula "18") (term "1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
                                                         (rule "applyEq" (formula "18") (term "0,0,1,0,0,1,0,0") (ifseqformula "19"))
                                                          (builtin "One Step Simplification" (formula "18"))
                                                         (rule "mul_literals" (formula "18") (term "1,0,0,1,0,0"))
                                                         (rule "add_literals" (formula "18") (term "0,0,1,0,0"))
                                                         (rule "add_zero_left" (formula "18") (term "0,1,0,0"))
                                                         (rule "applyEq" (formula "17") (term "0,0") (ifseqformula "19"))
                                                          (builtin "One Step Simplification" (formula "17"))
                                                         (rule "true_left" (formula "17"))
                                                         (rule "applyEq" (formula "17") (term "0,1,1,0") (ifseqformula "18"))
                                                         (rule "getOfSeqSingleton" (formula "17") (term "1,1,0"))
                                                         (rule "castDel" (formula "17") (term "2,1,1,0"))
                                                         (rule "castDel" (formula "17") (term "1,1,1,0"))
                                                          (builtin "One Step Simplification" (formula "17"))
                                                         (rule "true_left" (formula "17"))
                                                         (rule "equalityToSeqGetAndSeqLenLeft" (formula "40") (inst "iv=iv"))
                                                          (builtin "One Step Simplification" (formula "40"))
                                                         (rule "equal_literals" (formula "40") (term "0"))
                                                          (builtin "One Step Simplification" (formula "40"))
                                                         (rule "closeFalse" (formula "40"))
                                                      )
                                                      (branch "(self_0, List::$seq) in self_0.footprint@anon_heap_add<<anonHeapFunction>> FALSE"
                                                         (rule "eqSymm" (formula "25"))
                                                         (rule "applyEqRigid" (formula "26") (term "1") (ifseqformula "25"))
                                                         (rule "equalityToSeqGetAndSeqLenLeft" (formula "33") (inst "iv=iv"))
                                                          (builtin "One Step Simplification" (formula "33"))
                                                         (rule "andLeft" (formula "33"))
                                                         (rule "inEqSimp_ltToLeq" (formula "34") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "34") (term "0,0,0"))
                                                         (rule "applyEq" (formula "34") (term "0,0,1,0,0,1,0,0") (ifseqformula "35"))
                                                          (builtin "One Step Simplification" (formula "34"))
                                                         (rule "mul_literals" (formula "34") (term "1,0,0,1,0,0"))
                                                         (rule "add_zero_right" (formula "34") (term "0,0,1,0,0"))
                                                         (rule "applyEq" (formula "33") (term "0,0") (ifseqformula "35"))
                                                          (builtin "One Step Simplification" (formula "33"))
                                                         (rule "true_left" (formula "33"))
                                                         (rule "applyEq" (formula "33") (term "0,0,1,0") (ifseqformula "34"))
                                                          (builtin "One Step Simplification" (formula "33"))
                                                         (rule "true_left" (formula "33"))
                                                         (rule "equalityToSeqGetAndSeqLenLeft" (formula "17") (inst "iv=iv"))
                                                          (builtin "One Step Simplification" (formula "17"))
                                                         (rule "andLeft" (formula "17"))
                                                         (rule "getOfSeqSingleton" (formula "18") (term "1,1,0"))
                                                         (rule "castDel" (formula "18") (term "2,1,1,0"))
                                                         (rule "castDel" (formula "18") (term "1,1,1,0"))
                                                         (rule "eqSymm" (formula "18") (term "1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
                                                         (rule "applyEq" (formula "18") (term "0,1,1,0") (ifseqformula "19"))
                                                         (rule "getOfSeqSingleton" (formula "18") (term "1,1,0"))
                                                         (rule "castDel" (formula "18") (term "2,1,1,0"))
                                                         (rule "castDel" (formula "18") (term "1,1,1,0"))
                                                          (builtin "One Step Simplification" (formula "18"))
                                                         (rule "true_left" (formula "18"))
                                                         (rule "applyEq" (formula "17") (term "0,0") (ifseqformula "18"))
                                                          (builtin "One Step Simplification" (formula "17"))
                                                         (rule "true_left" (formula "17"))
                                                         (rule "equalityToSeqGetAndSeqLenLeft" (formula "39") (inst "iv=iv"))
                                                          (builtin "One Step Simplification" (formula "39"))
                                                         (rule "equal_literals" (formula "39") (term "0"))
                                                          (builtin "One Step Simplification" (formula "39"))
                                                         (rule "closeFalse" (formula "39"))
                                                      )
                                                   )
                                                )
                                             )
                                          )
                                          (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_ArrayList<<anonHeapFunction>> FALSE"
                                             (rule "applyEqReverse" (formula "27") (term "2,0,0") (ifseqformula "19"))
                                             (rule "applyEqReverse" (formula "27") (term "2,0") (ifseqformula "19"))
                                             (rule "applyEqReverse" (formula "20") (term "0") (ifseqformula "19"))
                                              (builtin "One Step Simplification" (formula "20"))
                                             (rule "true_left" (formula "20"))
                                             (rule "applyEqReverse" (formula "24") (term "2,0,0") (ifseqformula "19"))
                                             (rule "applyEqReverse" (formula "27") (term "0,1") (ifseqformula "19"))
                                             (rule "applyEqReverse" (formula "22") (term "1,0") (ifseqformula "19"))
                                             (rule "hideAuxiliaryEq" (formula "19"))
                                             (rule "replace_known_right" (formula "25") (term "0,0") (ifseqformula "44"))
                                              (builtin "One Step Simplification" (formula "25"))
                                             (rule "applyEqReverse" (formula "26") (term "0") (ifseqformula "25"))
                                              (builtin "One Step Simplification" (formula "26"))
                                             (rule "true_left" (formula "26"))
                                             (rule "hideAuxiliaryEq" (formula "25"))
                                             (rule "replace_known_left" (formula "23") (term "0,0") (ifseqformula "16"))
                                              (builtin "One Step Simplification" (formula "23"))
                                             (rule "ifthenelse_split" (formula "37") (term "0"))
                                             (branch "(self_1, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> TRUE"
                                                (rule "elementOfSubsetImpliesElementOfSuperset" (formula "37") (ifseqformula "32"))
                                                 (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "49")))
                                                (rule "replaceKnownSelect_taclet0000000_18" (formula "37") (term "0,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet0000000_21" (formula "37") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "37"))
                                                (rule "true_left" (formula "37"))
                                                (rule "ifthenelse_split" (formula "52") (term "0,0,1"))
                                                (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> TRUE"
                                                   (rule "elementOfSubsetImpliesElementOfSuperset" (formula "1") (ifseqformula "33"))
                                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "52")))
                                                   (rule "notLeft" (formula "1"))
                                                   (rule "pullOutSelect" (formula "44") (term "0") (inst "selectSK=java_lang_Object_created__6"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")))
                                                   (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "2,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "2,0"))
                                                   (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "0,0,0,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "0,0,0,0"))
                                                   (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "10"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "applyEqReverse" (formula "45") (term "0") (ifseqformula "1"))
                                                   (rule "close" (formula "45") (ifseqformula "10"))
                                                )
                                                (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> FALSE"
                                                   (rule "lenOfSeqConcat" (formula "53") (term "0,1"))
                                                    (builtin "One Step Simplification" (formula "53"))
                                                   (rule "add_literals" (formula "53") (term "0,1"))
                                                   (rule "qeq_literals" (formula "53") (term "1"))
                                                    (builtin "One Step Simplification" (formula "53"))
                                                   (rule "equalityToSeqGetAndSeqLenLeft" (formula "39") (inst "iv=iv"))
                                                    (builtin "One Step Simplification" (formula "39"))
                                                   (rule "andLeft" (formula "39"))
                                                   (rule "getOfSeqSingleton" (formula "40") (term "1,1,0"))
                                                   (rule "castDel" (formula "40") (term "2,1,1,0"))
                                                   (rule "castDel" (formula "40") (term "1,1,1,0"))
                                                   (rule "eqSymm" (formula "40") (term "1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "40") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "40") (term "0,0,0"))
                                                   (rule "applyEq" (formula "39") (term "0,0") (ifseqformula "41"))
                                                    (builtin "One Step Simplification" (formula "39"))
                                                   (rule "true_left" (formula "39"))
                                                   (rule "applyEq" (formula "39") (term "0,1,1,0") (ifseqformula "40"))
                                                   (rule "getOfSeqSingleton" (formula "39") (term "1,1,0"))
                                                   (rule "castDel" (formula "39") (term "1,1,1,0"))
                                                   (rule "castDel" (formula "39") (term "2,1,1,0"))
                                                    (builtin "One Step Simplification" (formula "39"))
                                                   (rule "true_left" (formula "39"))
                                                   (rule "equalityToSeqGetAndSeqLenLeft" (formula "31") (inst "iv=iv"))
                                                    (builtin "One Step Simplification" (formula "31"))
                                                   (rule "andLeft" (formula "31"))
                                                   (rule "inEqSimp_ltToLeq" (formula "32") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "32") (term "0,0,0"))
                                                   (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "33"))
                                                    (builtin "One Step Simplification" (formula "31"))
                                                   (rule "true_left" (formula "31"))
                                                   (rule "applyEq" (formula "31") (term "0,0,1,0,0,1,0,0") (ifseqformula "32"))
                                                    (builtin "One Step Simplification" (formula "31"))
                                                   (rule "mul_literals" (formula "31") (term "1,0,0,1,0,0"))
                                                   (rule "add_zero_right" (formula "31") (term "0,0,1,0,0"))
                                                   (rule "applyEq" (formula "31") (term "0,0,1,0") (ifseqformula "32"))
                                                    (builtin "One Step Simplification" (formula "31"))
                                                   (rule "true_left" (formula "31"))
                                                   (rule "equalityToSeqGetAndSeqLenLeft" (formula "17") (inst "iv=iv"))
                                                    (builtin "One Step Simplification" (formula "17"))
                                                   (rule "andLeft" (formula "17"))
                                                   (rule "getOfSeqSingleton" (formula "18") (term "1,1,0"))
                                                   (rule "castDel" (formula "18") (term "1,1,1,0"))
                                                   (rule "castDel" (formula "18") (term "2,1,1,0"))
                                                   (rule "eqSymm" (formula "18") (term "1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
                                                   (rule "applyEq" (formula "18") (term "0,1,1,0") (ifseqformula "19"))
                                                   (rule "getOfSeqSingleton" (formula "18") (term "1,1,0"))
                                                   (rule "castDel" (formula "18") (term "2,1,1,0"))
                                                   (rule "castDel" (formula "18") (term "1,1,1,0"))
                                                    (builtin "One Step Simplification" (formula "18"))
                                                   (rule "true_left" (formula "18"))
                                                   (rule "applyEq" (formula "17") (term "0,0") (ifseqformula "18"))
                                                    (builtin "One Step Simplification" (formula "17"))
                                                   (rule "true_left" (formula "17"))
                                                   (rule "equalityToSeqGetAndSeqLenLeft" (formula "23") (inst "iv=iv"))
                                                   (rule "andLeft" (formula "23"))
                                                   (rule "lenOfSeqConcat" (formula "23") (term "1"))
                                                    (builtin "One Step Simplification" (formula "23"))
                                                   (rule "add_literals" (formula "23") (term "1"))
                                                   (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0"))
                                                   (rule "applyEq" (formula "24") (term "0,0,1,0,0,1,0,0") (ifseqformula "25"))
                                                   (rule "lenOfSeqConcat" (formula "24") (term "0,1,0,0,1,0,0"))
                                                    (builtin "One Step Simplification" (formula "24"))
                                                   (rule "add_literals" (formula "24") (term "0,1,0,0,1,0,0"))
                                                   (rule "mul_literals" (formula "24") (term "1,0,0,1,0,0"))
                                                   (rule "add_literals" (formula "24") (term "0,0,1,0,0"))
                                                   (rule "applyEq" (formula "23") (term "0,0") (ifseqformula "25"))
                                                   (rule "lenOfSeqConcat" (formula "23") (term "0"))
                                                    (builtin "One Step Simplification" (formula "23"))
                                                   (rule "add_literals" (formula "23") (term "0"))
                                                    (builtin "One Step Simplification" (formula "23"))
                                                   (rule "true_left" (formula "23"))
                                                   (rule "applyEq" (formula "23") (term "0,0,1,0") (ifseqformula "24"))
                                                    (builtin "One Step Simplification" (formula "23"))
                                                   (rule "true_left" (formula "23"))
                                                   (rule "equalityToSeqGetAndSeqLenLeft" (formula "38") (inst "iv=iv"))
                                                    (builtin "One Step Simplification" (formula "38"))
                                                   (rule "andLeft" (formula "38"))
                                                   (rule "getOfSeqSingleton" (formula "39") (term "1,1,0"))
                                                   (rule "castDel" (formula "39") (term "1,1,1,0"))
                                                   (rule "castDel" (formula "39") (term "2,1,1,0"))
                                                   (rule "eqSymm" (formula "39") (term "1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "39") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "39") (term "0,0,0"))
                                                   (rule "applyEq" (formula "39") (term "0,1,1,0") (ifseqformula "40"))
                                                   (rule "getOfSeqSingleton" (formula "39") (term "1,1,0"))
                                                   (rule "castDel" (formula "39") (term "1,1,1,0"))
                                                   (rule "castDel" (formula "39") (term "2,1,1,0"))
                                                    (builtin "One Step Simplification" (formula "39"))
                                                   (rule "true_left" (formula "39"))
                                                   (rule "applyEq" (formula "38") (term "0,0") (ifseqformula "39"))
                                                    (builtin "One Step Simplification" (formula "38"))
                                                   (rule "true_left" (formula "38"))
                                                   (rule "onlyCreatedObjectsAreInLocSets" (formula "16") (ifseqformula "5"))
                                                   (rule "replace_known_left" (formula "16") (term "1") (ifseqformula "8"))
                                                    (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "51")))
                                                   (rule "true_left" (formula "16"))
                                                   (rule "onlyCreatedObjectsAreInLocSets" (formula "40") (ifseqformula "26"))
                                                   (rule "replace_known_left" (formula "40") (term "1") (ifseqformula "29"))
                                                    (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "49")))
                                                   (rule "true_left" (formula "40"))
                                                   (rule "onlyCreatedObjectsAreInLocSets" (formula "37") (ifseqformula "26"))
                                                   (rule "replace_known_left" (formula "37") (term "1") (ifseqformula "29"))
                                                    (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "49")))
                                                   (rule "true_left" (formula "37"))
                                                    (builtin "Use Dependency Contract" (formula "53") (ifInst ""  (formula "25")) (ifInst ""  (formula "35")) (ifInst ""  (formula "27")) (contract "ArrayList[java.lang.Object::<inv>()].JML accessible clause.0"))
                                                   (rule "replaceKnownSelect_taclet0000_9" (formula "43") (term "1,1,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet100210000000000_28" (formula "43") (term "1,1,0"))
                                                   (rule "wellFormedAnonEQ" (formula "43") (term "0,1,0,0,0") (ifseqformula "21"))
                                                   (rule "wellFormedAnonEQ" (formula "43") (term "1,1,0,0,0") (ifseqformula "35"))
                                                   (rule "wellFormedAnonEQ" (formula "43") (term "0,1,1,0,0,0") (ifseqformula "27"))
                                                   (rule "wellFormedAnonEQ" (formula "43") (term "0,0,1,0,0,0") (ifseqformula "14"))
                                                   (rule "wellFormedAnonEQ" (formula "43") (term "0,0,0,1,0,0,0") (ifseqformula "6"))
                                                   (rule "wellFormedAnonEQ" (formula "43") (term "0,0,1,1,0,0,0") (ifseqformula "21"))
                                                   (rule "wellFormedAnonEQ" (formula "43") (term "0,0,0,1,1,0,0,0") (ifseqformula "14"))
                                                   (rule "wellFormedAnonEQ" (formula "43") (term "0,0,0,0,1,1,0,0,0") (ifseqformula "6"))
                                                   (rule "replace_known_left" (formula "43") (term "1,0,0") (ifseqformula "25"))
                                                    (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "51")) (ifInst ""  (formula "1")) (ifInst ""  (formula "5")) (ifInst ""  (formula "13")) (ifInst ""  (formula "20")) (ifInst ""  (formula "1")) (ifInst ""  (formula "5")) (ifInst ""  (formula "13")) (ifInst ""  (formula "20")) (ifInst ""  (formula "26")) (ifInst ""  (formula "34")) (ifInst ""  (formula "54")) (ifInst ""  (formula "25")))
                                                   (rule "notLeft" (formula "43"))
                                                   (rule "disjointDefinition" (formula "43") (term "1"))
                                                   (rule "pullOutSelect" (formula "43") (term "0,0") (inst "selectSK=java_lang_Object_created__6"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "22"))
                                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "52")))
                                                   (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "2,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "2,0"))
                                                   (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "0,0,0,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "0,0,0,0"))
                                                   (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "9"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "applyEqReverse" (formula "44") (term "0,0") (ifseqformula "1"))
                                                   (rule "hideAuxiliaryEq" (formula "1"))
                                                   (rule "replace_known_left" (formula "43") (term "0") (ifseqformula "8"))
                                                    (builtin "One Step Simplification" (formula "43"))
                                                   (rule "commuteIntersection" (formula "43") (term "0"))
                                                   (rule "equalityToElementOfRight" (formula "43") (inst "fv=fv") (inst "ov=ov"))
                                                    (builtin "One Step Simplification" (formula "43"))
                                                   (rule "allRight" (formula "43") (inst "sk=ov_0"))
                                                   (rule "allRight" (formula "43") (inst "sk=fv_0"))
                                                   (rule "notRight" (formula "43"))
                                                   (rule "elementOfIntersect" (formula "1"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "elementOfSubsetImpliesElementOfSuperset" (formula "2") (ifseqformula "34"))
                                                    (builtin "One Step Simplification" (formula "2"))
                                                   (rule "andLeft" (formula "2"))
                                                   (rule "notLeft" (formula "3"))
                                                   (rule "notLeft" (formula "2"))
                                                   (rule "elementOfSubsetImpliesElementOfSuperset" (formula "1") (ifseqformula "13"))
                                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "46")))
                                                   (rule "notLeft" (formula "1"))
                                                   (rule "pullOutSelect" (formula "47") (term "0") (inst "selectSK=java_lang_Object_created__7"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
                                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "47")))
                                                   (rule "ifthenelse_negated" (formula "1") (term "0"))
                                                   (rule "apply_eq_boolean" (formula "1") (term "1") (ifseqformula "48"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "notLeft" (formula "1"))
                                                   (rule "ifEqualsTRUE" (formula "45"))
                                                    (builtin "One Step Simplification" (formula "45"))
                                                   (rule "orRight" (formula "45"))
                                                   (rule "replace_known_right" (formula "46") (term "0,0") (ifseqformula "45"))
                                                    (builtin "One Step Simplification" (formula "46"))
                                                   (rule "pullOutSelect" (formula "45") (term "0") (inst "selectSK=java_lang_Object_created__8"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "17"))
                                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "49")))
                                                   (rule "ifthenelse_negated" (formula "1") (term "0"))
                                                   (rule "apply_eq_boolean_rigid" (formula "1") (term "1") (ifseqformula "46"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "notLeft" (formula "1"))
                                                   (rule "ifEqualsTRUE" (formula "45"))
                                                    (builtin "One Step Simplification" (formula "45"))
                                                   (rule "orRight" (formula "45"))
                                                   (rule "replace_known_right" (formula "46") (term "0,0") (ifseqformula "45"))
                                                    (builtin "One Step Simplification" (formula "46"))
                                                   (rule "pullOutSelect" (formula "45") (term "0") (inst "selectSK=java_lang_Object_created__9"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "9"))
                                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "51")) (ifInst ""  (formula "50")))
                                                   (rule "applyEqReverse" (formula "46") (term "0") (ifseqformula "1"))
                                                   (rule "hideAuxiliaryEq" (formula "1"))
                                                   (rule "hideAuxiliaryEqConcrete2" (formula "51"))
                                                   (rule "hideAuxiliaryEqConcrete2" (formula "47"))
                                                   (rule "onlyCreatedObjectsAreInLocSets" (formula "1") (ifseqformula "7"))
                                                   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "50"))
                                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "46")))
                                                   (rule "closeFalse" (formula "1"))
                                                )
                                             )
                                             (branch "(self_1, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> FALSE"
                                                (rule "eqSymm" (formula "37"))
                                                (rule "applyEq" (formula "38") (term "1") (ifseqformula "37"))
                                                (rule "ifthenelse_split" (formula "52") (term "0,0,1"))
                                                (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> TRUE"
                                                   (rule "elementOfSubsetImpliesElementOfSuperset" (formula "1") (ifseqformula "33"))
                                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "52")))
                                                   (rule "notLeft" (formula "1"))
                                                   (rule "pullOutSelect" (formula "43") (term "0") (inst "selectSK=java_lang_Object_created__6"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")))
                                                   (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "2,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "2,0"))
                                                   (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "0,0,0,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "0,0,0,0"))
                                                   (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "10"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "applyEqReverse" (formula "44") (term "0") (ifseqformula "1"))
                                                   (rule "close" (formula "44") (ifseqformula "10"))
                                                )
                                                (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> FALSE"
                                                   (rule "lenOfSeqConcat" (formula "53") (term "0,1"))
                                                    (builtin "One Step Simplification" (formula "53"))
                                                   (rule "add_literals" (formula "53") (term "0,1"))
                                                   (rule "qeq_literals" (formula "53") (term "1"))
                                                    (builtin "One Step Simplification" (formula "53"))
                                                   (rule "equalityToSeqGetAndSeqLenLeft" (formula "31") (inst "iv=iv"))
                                                    (builtin "One Step Simplification" (formula "31"))
                                                   (rule "andLeft" (formula "31"))
                                                   (rule "inEqSimp_ltToLeq" (formula "32") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "32") (term "0,0,0"))
                                                   (rule "applyEq" (formula "32") (term "0,0,1,0,0,1,0,0") (ifseqformula "33"))
                                                    (builtin "One Step Simplification" (formula "32"))
                                                   (rule "mul_literals" (formula "32") (term "1,0,0,1,0,0"))
                                                   (rule "add_literals" (formula "32") (term "0,0,1,0,0"))
                                                   (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "33"))
                                                    (builtin "One Step Simplification" (formula "31"))
                                                   (rule "true_left" (formula "31"))
                                                   (rule "applyEq" (formula "31") (term "0,0,1,0") (ifseqformula "32"))
                                                    (builtin "One Step Simplification" (formula "31"))
                                                   (rule "true_left" (formula "31"))
                                                   (rule "equalityToSeqGetAndSeqLenLeft" (formula "17") (inst "iv=iv"))
                                                    (builtin "One Step Simplification" (formula "17"))
                                                   (rule "andLeft" (formula "17"))
                                                   (rule "getOfSeqSingleton" (formula "18") (term "1,1,0"))
                                                   (rule "castDel" (formula "18") (term "1,1,1,0"))
                                                   (rule "castDel" (formula "18") (term "2,1,1,0"))
                                                   (rule "eqSymm" (formula "18") (term "1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
                                                   (rule "applyEq" (formula "18") (term "0,1,1,0") (ifseqformula "19"))
                                                   (rule "getOfSeqSingleton" (formula "18") (term "1,1,0"))
                                                   (rule "castDel" (formula "18") (term "2,1,1,0"))
                                                   (rule "castDel" (formula "18") (term "1,1,1,0"))
                                                    (builtin "One Step Simplification" (formula "18"))
                                                   (rule "true_left" (formula "18"))
                                                   (rule "applyEq" (formula "17") (term "0,0") (ifseqformula "18"))
                                                    (builtin "One Step Simplification" (formula "17"))
                                                   (rule "true_left" (formula "17"))
                                                   (rule "equalityToSeqGetAndSeqLenLeft" (formula "23") (inst "iv=iv"))
                                                   (rule "andLeft" (formula "23"))
                                                   (rule "lenOfSeqConcat" (formula "23") (term "1"))
                                                    (builtin "One Step Simplification" (formula "23"))
                                                   (rule "add_literals" (formula "23") (term "1"))
                                                   (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0"))
                                                   (rule "applyEq" (formula "24") (term "0,0,1,0,0,1,0,0") (ifseqformula "25"))
                                                   (rule "lenOfSeqConcat" (formula "24") (term "0,1,0,0,1,0,0"))
                                                    (builtin "One Step Simplification" (formula "24"))
                                                   (rule "add_literals" (formula "24") (term "0,1,0,0,1,0,0"))
                                                   (rule "mul_literals" (formula "24") (term "1,0,0,1,0,0"))
                                                   (rule "add_literals" (formula "24") (term "0,0,1,0,0"))
                                                   (rule "applyEq" (formula "23") (term "0,0") (ifseqformula "25"))
                                                   (rule "lenOfSeqConcat" (formula "23") (term "0"))
                                                    (builtin "One Step Simplification" (formula "23"))
                                                   (rule "add_literals" (formula "23") (term "0"))
                                                    (builtin "One Step Simplification" (formula "23"))
                                                   (rule "true_left" (formula "23"))
                                                   (rule "applyEq" (formula "23") (term "0,0,1,0") (ifseqformula "24"))
                                                    (builtin "One Step Simplification" (formula "23"))
                                                   (rule "true_left" (formula "23"))
                                                   (rule "equalityToSeqGetAndSeqLenLeft" (formula "37") (inst "iv=iv"))
                                                    (builtin "One Step Simplification" (formula "37"))
                                                   (rule "equal_literals" (formula "37") (term "0"))
                                                    (builtin "One Step Simplification" (formula "37"))
                                                   (rule "closeFalse" (formula "37"))
                                                )
                                             )
                                          )
                                       )
                                       (branch "(self_1, List::$footprint) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> FALSE"
                                          (rule "applyEqReverse" (formula "44") (term "0") (ifseqformula "43"))
                                           (builtin "One Step Simplification" (formula "44"))
                                          (rule "true_left" (formula "44"))
                                          (rule "hideAuxiliaryEq" (formula "43"))
                                          (rule "ifthenelse_split" (formula "19") (term "0"))
                                          (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_ArrayList<<anonHeapFunction>> TRUE"
                                             (rule "applyEqReverse" (formula "26") (term "2,0,0") (ifseqformula "20"))
                                             (rule "applyEqReverse" (formula "24") (term "1,0") (ifseqformula "20"))
                                             (rule "applyEqReverse" (formula "28") (term "2,0,0") (ifseqformula "20"))
                                             (rule "applyEqReverse" (formula "29") (term "0,1") (ifseqformula "20"))
                                             (rule "applyEqReverse" (formula "28") (term "2,0") (ifseqformula "20"))
                                             (rule "applyEqReverse" (formula "21") (term "0") (ifseqformula "20"))
                                             (rule "hideAuxiliaryEq" (formula "20"))
                                             (rule "elementOfSubsetImpliesElementOfSuperset" (formula "19") (ifseqformula "11"))
                                              (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "52")) (ifInst ""  (formula "51")))
                                             (rule "true_left" (formula "19"))
                                             (rule "commuteUnion" (formula "28") (term "1"))
                                             (rule "ifthenelse_split" (formula "41") (term "0"))
                                             (branch "(self_1, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> TRUE"
                                                (rule "elementOfSubsetImpliesElementOfSuperset" (formula "41") (ifseqformula "36"))
                                                 (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "51")))
                                                (rule "replaceKnownSelect_taclet0000000_18" (formula "41") (term "0,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet0000000_21" (formula "41") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "41"))
                                                (rule "true_left" (formula "41"))
                                                (rule "ifthenelse_split" (formula "54") (term "0,0,1"))
                                                (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> TRUE"
                                                   (rule "elementOfSubsetImpliesElementOfSuperset" (formula "1") (ifseqformula "37"))
                                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "54")))
                                                   (rule "notLeft" (formula "1"))
                                                   (rule "pullOutSelect" (formula "46") (term "0") (inst "selectSK=java_lang_Object_created__6"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "25"))
                                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "55")))
                                                   (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "2,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "2,0"))
                                                   (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "0,0,0,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "0,0,0,0"))
                                                   (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "10"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "applyEqReverse" (formula "47") (term "0") (ifseqformula "1"))
                                                   (rule "close" (formula "47") (ifseqformula "10"))
                                                )
                                                (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> FALSE"
                                                   (rule "lenOfSeqConcat" (formula "55") (term "0,1"))
                                                    (builtin "One Step Simplification" (formula "55"))
                                                   (rule "add_literals" (formula "55") (term "0,1"))
                                                   (rule "qeq_literals" (formula "55") (term "1"))
                                                    (builtin "One Step Simplification" (formula "55"))
                                                   (rule "ifthenelse_split" (formula "25") (term "0"))
                                                   (branch "(self_0, List::$seq) in self_0.footprint@anon_heap_add<<anonHeapFunction>> TRUE"
                                                      (rule "elementOfSubsetImpliesElementOfSuperset" (formula "25") (ifseqformula "20"))
                                                      (rule "elementOfUnion" (formula "25"))
                                                       (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "16")))
                                                      (rule "true_left" (formula "25"))
                                                      (rule "ifthenelse_split" (formula "28") (term "0"))
                                                      (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_add<<anonHeapFunction>> TRUE"
                                                         (rule "applyEqReverse" (formula "30") (term "0") (ifseqformula "29"))
                                                         (rule "hideAuxiliaryEq" (formula "29"))
                                                         (rule "elementOfSubsetImpliesElementOfSuperset" (formula "28") (ifseqformula "20"))
                                                         (rule "elementOfUnion" (formula "28"))
                                                          (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "19")))
                                                         (rule "true_left" (formula "28"))
                                                         (rule "equalityToSeqGetAndSeqLenLeft" (formula "36") (inst "iv=iv"))
                                                          (builtin "One Step Simplification" (formula "36"))
                                                         (rule "andLeft" (formula "36"))
                                                         (rule "inEqSimp_ltToLeq" (formula "37") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "37") (term "0,0,0"))
                                                         (rule "applyEq" (formula "36") (term "0,0") (ifseqformula "38"))
                                                          (builtin "One Step Simplification" (formula "36"))
                                                         (rule "true_left" (formula "36"))
                                                         (rule "applyEq" (formula "36") (term "0,0,1,0") (ifseqformula "37"))
                                                          (builtin "One Step Simplification" (formula "36"))
                                                         (rule "true_left" (formula "36"))
                                                         (rule "equalityToSeqGetAndSeqLenLeft" (formula "44") (inst "iv=iv"))
                                                          (builtin "One Step Simplification" (formula "44"))
                                                         (rule "andLeft" (formula "44"))
                                                         (rule "getOfSeqSingleton" (formula "45") (term "1,1,0"))
                                                         (rule "castDel" (formula "45") (term "1,1,1,0"))
                                                         (rule "castDel" (formula "45") (term "2,1,1,0"))
                                                         (rule "eqSymm" (formula "45") (term "1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "45") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "45") (term "0,0,0"))
                                                         (rule "applyEq" (formula "45") (term "0,1,1,0") (ifseqformula "46"))
                                                         (rule "getOfSeqSingleton" (formula "45") (term "1,1,0"))
                                                         (rule "castDel" (formula "45") (term "2,1,1,0"))
                                                         (rule "castDel" (formula "45") (term "1,1,1,0"))
                                                          (builtin "One Step Simplification" (formula "45"))
                                                         (rule "true_left" (formula "45"))
                                                         (rule "applyEq" (formula "44") (term "0,0") (ifseqformula "45"))
                                                          (builtin "One Step Simplification" (formula "44"))
                                                         (rule "true_left" (formula "44"))
                                                         (rule "equalityToSeqGetAndSeqLenLeft" (formula "17") (inst "iv=iv"))
                                                          (builtin "One Step Simplification" (formula "17"))
                                                         (rule "andLeft" (formula "17"))
                                                         (rule "getOfSeqSingleton" (formula "18") (term "1,1,0"))
                                                         (rule "castDel" (formula "18") (term "1,1,1,0"))
                                                         (rule "castDel" (formula "18") (term "2,1,1,0"))
                                                         (rule "eqSymm" (formula "18") (term "1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
                                                         (rule "applyEq" (formula "18") (term "0,0,1,0,0,1,0,0") (ifseqformula "19"))
                                                          (builtin "One Step Simplification" (formula "18"))
                                                         (rule "mul_literals" (formula "18") (term "1,0,0,1,0,0"))
                                                         (rule "add_literals" (formula "18") (term "0,0,1,0,0"))
                                                         (rule "add_zero_left" (formula "18") (term "0,1,0,0"))
                                                         (rule "applyEq" (formula "17") (term "0,0") (ifseqformula "19"))
                                                          (builtin "One Step Simplification" (formula "17"))
                                                         (rule "true_left" (formula "17"))
                                                         (rule "applyEq" (formula "17") (term "0,1,1,0") (ifseqformula "18"))
                                                         (rule "getOfSeqSingleton" (formula "17") (term "1,1,0"))
                                                         (rule "castDel" (formula "17") (term "2,1,1,0"))
                                                         (rule "castDel" (formula "17") (term "1,1,1,0"))
                                                          (builtin "One Step Simplification" (formula "17"))
                                                         (rule "true_left" (formula "17"))
                                                         (rule "equalityToSeqGetAndSeqLenLeft" (formula "43") (inst "iv=iv"))
                                                          (builtin "One Step Simplification" (formula "43"))
                                                         (rule "andLeft" (formula "43"))
                                                         (rule "getOfSeqSingleton" (formula "44") (term "1,1,0"))
                                                         (rule "castDel" (formula "44") (term "1,1,1,0"))
                                                         (rule "castDel" (formula "44") (term "2,1,1,0"))
                                                         (rule "eqSymm" (formula "44") (term "1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "44") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "44") (term "0,0,0"))
                                                         (rule "applyEq" (formula "44") (term "0,1,1,0") (ifseqformula "45"))
                                                         (rule "getOfSeqSingleton" (formula "44") (term "1,1,0"))
                                                         (rule "castDel" (formula "44") (term "2,1,1,0"))
                                                         (rule "castDel" (formula "44") (term "1,1,1,0"))
                                                          (builtin "One Step Simplification" (formula "44"))
                                                         (rule "true_left" (formula "44"))
                                                         (rule "applyEq" (formula "43") (term "0,0") (ifseqformula "44"))
                                                          (builtin "One Step Simplification" (formula "43"))
                                                         (rule "true_left" (formula "43"))
                                                         (rule "equalityToSeqGetAndSeqLenLeft" (formula "26") (inst "iv=iv"))
                                                         (rule "andLeft" (formula "26"))
                                                         (rule "lenOfSeqConcat" (formula "26") (term "1"))
                                                          (builtin "One Step Simplification" (formula "26"))
                                                         (rule "add_literals" (formula "26") (term "1"))
                                                         (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0"))
                                                         (rule "applyEq" (formula "26") (term "0,0") (ifseqformula "28"))
                                                         (rule "lenOfSeqConcat" (formula "26") (term "0"))
                                                          (builtin "One Step Simplification" (formula "26"))
                                                         (rule "add_literals" (formula "26") (term "0"))
                                                          (builtin "One Step Simplification" (formula "26"))
                                                         (rule "true_left" (formula "26"))
                                                         (rule "applyEq" (formula "26") (term "0,0,1,0") (ifseqformula "27"))
                                                          (builtin "One Step Simplification" (formula "26"))
                                                         (rule "true_left" (formula "26"))
                                                         (rule "onlyCreatedObjectsAreInLocSets" (formula "16") (ifseqformula "5"))
                                                         (rule "replace_known_left" (formula "16") (term "1") (ifseqformula "8"))
                                                          (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "54")))
                                                         (rule "true_left" (formula "16"))
                                                         (rule "onlyCreatedObjectsAreInLocSets" (formula "42") (ifseqformula "31"))
                                                         (rule "replace_known_left" (formula "42") (term "1") (ifseqformula "34"))
                                                          (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "52")))
                                                         (rule "true_left" (formula "42"))
                                                         (rule "onlyCreatedObjectsAreInLocSets" (formula "19") (ifseqformula "5"))
                                                         (rule "replace_known_left" (formula "19") (term "1") (ifseqformula "8"))
                                                          (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "54")))
                                                         (rule "true_left" (formula "19"))
                                                         (rule "onlyCreatedObjectsAreInLocSets" (formula "25") (ifseqformula "13"))
                                                         (rule "replace_known_right" (formula "25") (term "0") (ifseqformula "54"))
                                                          (builtin "One Step Simplification" (formula "25"))
                                                         (rule "onlyCreatedObjectsAreInLocSets" (formula "29") (ifseqformula "13"))
                                                         (rule "replace_known_left" (formula "29") (term "1") (ifseqformula "25"))
                                                          (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "55")))
                                                         (rule "true_left" (formula "29"))
                                                          (builtin "Use Dependency Contract" (formula "57") (ifInst ""  (formula "31")) (ifInst ""  (formula "41")) (ifInst ""  (formula "33")) (contract "ArrayList[java.lang.Object::<inv>()].JML accessible clause.0"))
                                                         (rule "replaceKnownSelect_taclet0000_9" (formula "47") (term "1,1,0"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet0010010210000000000_28" (formula "47") (term "1,1,0"))
                                                         (rule "wellFormedAnonEQ" (formula "47") (term "0,1,0,0,0") (ifseqformula "23"))
                                                         (rule "wellFormedAnonEQ" (formula "47") (term "1,1,0,0,0") (ifseqformula "41"))
                                                         (rule "wellFormedAnonEQ" (formula "47") (term "0,1,1,0,0,0") (ifseqformula "33"))
                                                         (rule "wellFormedAnonEQ" (formula "47") (term "0,0,1,0,0,0") (ifseqformula "14"))
                                                         (rule "wellFormedAnonEQ" (formula "47") (term "0,0,0,1,0,0,0") (ifseqformula "6"))
                                                         (rule "wellFormedAnonEQ" (formula "47") (term "0,0,1,1,0,0,0") (ifseqformula "23"))
                                                         (rule "wellFormedAnonEQ" (formula "47") (term "0,0,0,1,1,0,0,0") (ifseqformula "14"))
                                                         (rule "wellFormedAnonEQ" (formula "47") (term "0,0,0,0,1,1,0,0,0") (ifseqformula "6"))
                                                         (rule "replace_known_left" (formula "47") (term "1,0,0") (ifseqformula "31"))
                                                          (builtin "One Step Simplification" (formula "47") (ifInst ""  (formula "55")) (ifInst ""  (formula "1")) (ifInst ""  (formula "5")) (ifInst ""  (formula "13")) (ifInst ""  (formula "22")) (ifInst ""  (formula "1")) (ifInst ""  (formula "5")) (ifInst ""  (formula "13")) (ifInst ""  (formula "22")) (ifInst ""  (formula "32")) (ifInst ""  (formula "40")) (ifInst ""  (formula "58")) (ifInst ""  (formula "31")))
                                                         (rule "notLeft" (formula "47"))
                                                         (rule "disjointDefinition" (formula "47") (term "1"))
                                                         (rule "pullOutSelect" (formula "47") (term "0,0") (inst "selectSK=java_lang_Object_created__6"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
                                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "56")))
                                                         (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "2,0"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "2,0"))
                                                         (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "0,0,0,0"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "0,0,0,0"))
                                                         (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "9"))
                                                          (builtin "One Step Simplification" (formula "1"))
                                                         (rule "applyEqReverse" (formula "48") (term "0,0") (ifseqformula "1"))
                                                         (rule "hideAuxiliaryEq" (formula "1"))
                                                         (rule "replace_known_left" (formula "47") (term "0") (ifseqformula "8"))
                                                          (builtin "One Step Simplification" (formula "47"))
                                                         (rule "equalityToElementOfRight" (formula "47") (inst "fv=fv") (inst "ov=ov"))
                                                          (builtin "One Step Simplification" (formula "47"))
                                                         (rule "allRight" (formula "47") (inst "sk=ov_0"))
                                                         (rule "allRight" (formula "47") (inst "sk=fv_0"))
                                                         (rule "notRight" (formula "47"))
                                                         (rule "elementOfIntersect" (formula "1"))
                                                         (rule "andLeft" (formula "1"))
                                                         (rule "elementOfSubsetImpliesElementOfSuperset" (formula "2") (ifseqformula "32"))
                                                         (rule "elementOfSubsetImpliesElementOfSuperset" (formula "1") (ifseqformula "41"))
                                                          (builtin "One Step Simplification" (formula "1"))
                                                         (rule "andLeft" (formula "1"))
                                                         (rule "notLeft" (formula "2"))
                                                         (rule "notLeft" (formula "1"))
                                                         (rule "elementOfUnion" (formula "2"))
                                                          (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "50")))
                                                         (rule "pullOutSelect" (formula "51") (term "0") (inst "selectSK=java_lang_Object_created__7"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "27"))
                                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "51")))
                                                         (rule "ifthenelse_negated" (formula "1") (term "0"))
                                                         (rule "apply_eq_boolean_rigid" (formula "1") (term "1") (ifseqformula "52"))
                                                          (builtin "One Step Simplification" (formula "1"))
                                                         (rule "notLeft" (formula "1"))
                                                         (rule "ifEqualsTRUE" (formula "50"))
                                                          (builtin "One Step Simplification" (formula "50"))
                                                         (rule "orRight" (formula "50"))
                                                         (rule "replace_known_right" (formula "51") (term "0,0") (ifseqformula "50"))
                                                          (builtin "One Step Simplification" (formula "51"))
                                                         (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "50"))
                                                          (builtin "One Step Simplification" (formula "2"))
                                                         (rule "true_left" (formula "2"))
                                                         (rule "pullOutSelect" (formula "49") (term "0") (inst "selectSK=java_lang_Object_created__8"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "17"))
                                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "52")))
                                                         (rule "ifthenelse_negated" (formula "1") (term "0"))
                                                         (rule "apply_eq_boolean" (formula "1") (term "1") (ifseqformula "50"))
                                                          (builtin "One Step Simplification" (formula "1"))
                                                         (rule "notLeft" (formula "1"))
                                                         (rule "ifEqualsTRUE" (formula "49"))
                                                          (builtin "One Step Simplification" (formula "49"))
                                                         (rule "orRight" (formula "49"))
                                                         (rule "replace_known_right" (formula "50") (term "0,0") (ifseqformula "49"))
                                                          (builtin "One Step Simplification" (formula "50"))
                                                         (rule "pullOutSelect" (formula "49") (term "0") (inst "selectSK=java_lang_Object_created__9"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "9"))
                                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "54")))
                                                         (rule "ifthenelse_negated" (formula "1") (term "0"))
                                                         (rule "apply_eq_boolean_rigid" (formula "1") (term "1") (ifseqformula "50"))
                                                          (builtin "One Step Simplification" (formula "1"))
                                                         (rule "notLeft" (formula "1"))
                                                         (rule "ifEqualsTRUE" (formula "49"))
                                                          (builtin "One Step Simplification" (formula "49"))
                                                         (rule "orRight" (formula "49"))
                                                         (rule "replace_known_right" (formula "50") (term "0,0") (ifseqformula "49"))
                                                          (builtin "One Step Simplification" (formula "50"))
                                                         (rule "hideAuxiliaryEqConcrete2" (formula "56"))
                                                         (rule "hideAuxiliaryEqConcrete2" (formula "53"))
                                                         (rule "hideAuxiliaryEqConcrete2" (formula "51"))
                                                         (rule "onlyCreatedObjectsAreInLocSets" (formula "2") (ifseqformula "24"))
                                                         (rule "replace_known_right" (formula "2") (term "0") (ifseqformula "54"))
                                                          (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "53")))
                                                         (rule "closeFalse" (formula "2"))
                                                      )
                                                      (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_add<<anonHeapFunction>> FALSE"
                                                         (rule "applyEqReverse" (formula "29") (term "0") (ifseqformula "28"))
                                                          (builtin "One Step Simplification" (formula "29"))
                                                         (rule "true_left" (formula "29"))
                                                         (rule "hideAuxiliaryEq" (formula "28"))
                                                         (rule "equalityToSeqGetAndSeqLenLeft" (formula "34") (inst "iv=iv"))
                                                          (builtin "One Step Simplification" (formula "34"))
                                                         (rule "andLeft" (formula "34"))
                                                         (rule "inEqSimp_ltToLeq" (formula "35") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "35") (term "0,0,0"))
                                                         (rule "applyEq" (formula "35") (term "0,0,1,0") (ifseqformula "36"))
                                                          (builtin "One Step Simplification" (formula "35"))
                                                         (rule "true_left" (formula "35"))
                                                         (rule "applyEq" (formula "34") (term "0,0") (ifseqformula "35"))
                                                          (builtin "One Step Simplification" (formula "34"))
                                                         (rule "true_left" (formula "34"))
                                                         (rule "equalityToSeqGetAndSeqLenLeft" (formula "42") (inst "iv=iv"))
                                                          (builtin "One Step Simplification" (formula "42"))
                                                         (rule "andLeft" (formula "42"))
                                                         (rule "getOfSeqSingleton" (formula "43") (term "1,1,0"))
                                                         (rule "castDel" (formula "43") (term "1,1,1,0"))
                                                         (rule "castDel" (formula "43") (term "2,1,1,0"))
                                                         (rule "eqSymm" (formula "43") (term "1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "43") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "43") (term "0,0,0"))
                                                         (rule "applyEqRigid" (formula "43") (term "0,0,1,0,0,1,0,0") (ifseqformula "44"))
                                                          (builtin "One Step Simplification" (formula "43"))
                                                         (rule "mul_literals" (formula "43") (term "1,0,0,1,0,0"))
                                                         (rule "add_literals" (formula "43") (term "0,0,1,0,0"))
                                                         (rule "add_zero_left" (formula "43") (term "0,1,0,0"))
                                                         (rule "applyEqRigid" (formula "42") (term "0,0") (ifseqformula "44"))
                                                          (builtin "One Step Simplification" (formula "42"))
                                                         (rule "true_left" (formula "42"))
                                                         (rule "applyEq" (formula "42") (term "0,1,1,0") (ifseqformula "43"))
                                                         (rule "getOfSeqSingleton" (formula "42") (term "1,1,0"))
                                                         (rule "castDel" (formula "42") (term "1,1,1,0"))
                                                         (rule "castDel" (formula "42") (term "2,1,1,0"))
                                                          (builtin "One Step Simplification" (formula "42"))
                                                         (rule "true_left" (formula "42"))
                                                         (rule "equalityToSeqGetAndSeqLenLeft" (formula "17") (inst "iv=iv"))
                                                          (builtin "One Step Simplification" (formula "17"))
                                                         (rule "andLeft" (formula "17"))
                                                         (rule "getOfSeqSingleton" (formula "18") (term "1,1,0"))
                                                         (rule "castDel" (formula "18") (term "1,1,1,0"))
                                                         (rule "castDel" (formula "18") (term "2,1,1,0"))
                                                         (rule "eqSymm" (formula "18") (term "1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
                                                         (rule "applyEq" (formula "18") (term "0,0,1,0,0,1,0,0") (ifseqformula "19"))
                                                          (builtin "One Step Simplification" (formula "18"))
                                                         (rule "mul_literals" (formula "18") (term "1,0,0,1,0,0"))
                                                         (rule "add_literals" (formula "18") (term "0,0,1,0,0"))
                                                         (rule "add_zero_left" (formula "18") (term "0,1,0,0"))
                                                         (rule "applyEq" (formula "17") (term "0,0") (ifseqformula "19"))
                                                          (builtin "One Step Simplification" (formula "17"))
                                                         (rule "true_left" (formula "17"))
                                                         (rule "applyEq" (formula "17") (term "0,1,1,0") (ifseqformula "18"))
                                                         (rule "getOfSeqSingleton" (formula "17") (term "1,1,0"))
                                                         (rule "castDel" (formula "17") (term "2,1,1,0"))
                                                         (rule "castDel" (formula "17") (term "1,1,1,0"))
                                                          (builtin "One Step Simplification" (formula "17"))
                                                         (rule "true_left" (formula "17"))
                                                         (rule "equalityToSeqGetAndSeqLenLeft" (formula "41") (inst "iv=iv"))
                                                          (builtin "One Step Simplification" (formula "41"))
                                                         (rule "andLeft" (formula "41"))
                                                         (rule "getOfSeqSingleton" (formula "42") (term "1,1,0"))
                                                         (rule "castDel" (formula "42") (term "2,1,1,0"))
                                                         (rule "castDel" (formula "42") (term "1,1,1,0"))
                                                         (rule "eqSymm" (formula "42") (term "1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "42") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "42") (term "0,0,0"))
                                                         (rule "applyEq" (formula "42") (term "0,1,1,0") (ifseqformula "43"))
                                                         (rule "getOfSeqSingleton" (formula "42") (term "1,1,0"))
                                                         (rule "castDel" (formula "42") (term "2,1,1,0"))
                                                         (rule "castDel" (formula "42") (term "1,1,1,0"))
                                                          (builtin "One Step Simplification" (formula "42"))
                                                         (rule "true_left" (formula "42"))
                                                         (rule "applyEq" (formula "41") (term "0,0") (ifseqformula "42"))
                                                          (builtin "One Step Simplification" (formula "41"))
                                                         (rule "true_left" (formula "41"))
                                                         (rule "equalityToSeqGetAndSeqLenLeft" (formula "26") (inst "iv=iv"))
                                                         (rule "andLeft" (formula "26"))
                                                         (rule "lenOfSeqConcat" (formula "26") (term "1"))
                                                          (builtin "One Step Simplification" (formula "26"))
                                                         (rule "add_literals" (formula "26") (term "1"))
                                                         (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0"))
                                                         (rule "applyEq" (formula "26") (term "0,0") (ifseqformula "28"))
                                                         (rule "lenOfSeqConcat" (formula "26") (term "0"))
                                                          (builtin "One Step Simplification" (formula "26"))
                                                         (rule "add_literals" (formula "26") (term "0"))
                                                          (builtin "One Step Simplification" (formula "26"))
                                                         (rule "true_left" (formula "26"))
                                                         (rule "applyEq" (formula "26") (term "0,0,1,0") (ifseqformula "27"))
                                                          (builtin "One Step Simplification" (formula "26"))
                                                         (rule "true_left" (formula "26"))
                                                         (rule "onlyCreatedObjectsAreInLocSets" (formula "16") (ifseqformula "5"))
                                                         (rule "replace_known_left" (formula "16") (term "1") (ifseqformula "8"))
                                                          (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "53")))
                                                         (rule "true_left" (formula "16"))
                                                         (rule "onlyCreatedObjectsAreInLocSets" (formula "40") (ifseqformula "29"))
                                                         (rule "replace_known_left" (formula "40") (term "1") (ifseqformula "32"))
                                                          (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "51")))
                                                         (rule "true_left" (formula "40"))
                                                         (rule "onlyCreatedObjectsAreInLocSets" (formula "19") (ifseqformula "5"))
                                                         (rule "replace_known_right" (formula "19") (term "0") (ifseqformula "53"))
                                                          (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "8")))
                                                         (rule "true_left" (formula "19"))
                                                         (rule "onlyCreatedObjectsAreInLocSets" (formula "25") (ifseqformula "13"))
                                                         (rule "replace_known_right" (formula "25") (term "0") (ifseqformula "53"))
                                                          (builtin "One Step Simplification" (formula "25"))
                                                          (builtin "Use Dependency Contract" (formula "56") (ifInst ""  (formula "29")) (ifInst ""  (formula "39")) (ifInst ""  (formula "31")) (contract "ArrayList[java.lang.Object::<inv>()].JML accessible clause.0"))
                                                         (rule "replaceKnownSelect_taclet0000_9" (formula "45") (term "1,1,0"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet1010010210000000000_28" (formula "45") (term "1,1,0"))
                                                         (rule "wellFormedAnonEQ" (formula "45") (term "1,1,0,0,0") (ifseqformula "39"))
                                                         (rule "wellFormedAnonEQ" (formula "45") (term "0,1,0,0,0") (ifseqformula "23"))
                                                         (rule "wellFormedAnonEQ" (formula "45") (term "0,0,1,0,0,0") (ifseqformula "14"))
                                                         (rule "wellFormedAnonEQ" (formula "45") (term "0,1,1,0,0,0") (ifseqformula "31"))
                                                         (rule "wellFormedAnonEQ" (formula "45") (term "0,0,0,1,0,0,0") (ifseqformula "6"))
                                                         (rule "wellFormedAnonEQ" (formula "45") (term "0,0,1,1,0,0,0") (ifseqformula "23"))
                                                         (rule "wellFormedAnonEQ" (formula "45") (term "0,0,0,1,1,0,0,0") (ifseqformula "14"))
                                                         (rule "wellFormedAnonEQ" (formula "45") (term "0,0,0,0,1,1,0,0,0") (ifseqformula "6"))
                                                         (rule "replace_known_right" (formula "45") (term "0,0,0,0,0,0") (ifseqformula "54"))
                                                          (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "1")) (ifInst ""  (formula "5")) (ifInst ""  (formula "13")) (ifInst ""  (formula "22")) (ifInst ""  (formula "1")) (ifInst ""  (formula "5")) (ifInst ""  (formula "13")) (ifInst ""  (formula "22")) (ifInst ""  (formula "30")) (ifInst ""  (formula "38")) (ifInst ""  (formula "29")) (ifInst ""  (formula "57")) (ifInst ""  (formula "29")))
                                                         (rule "notLeft" (formula "45"))
                                                         (rule "disjointDefinition" (formula "45") (term "1"))
                                                         (rule "pullOutSelect" (formula "45") (term "0,0") (inst "selectSK=java_lang_Object_created__6"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
                                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "55")))
                                                         (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "2,0"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "2,0"))
                                                         (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "0,0,0,0"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "0,0,0,0"))
                                                         (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "9"))
                                                          (builtin "One Step Simplification" (formula "1"))
                                                         (rule "applyEqReverse" (formula "46") (term "0,0") (ifseqformula "1"))
                                                         (rule "hideAuxiliaryEq" (formula "1"))
                                                         (rule "replace_known_left" (formula "45") (term "0") (ifseqformula "8"))
                                                          (builtin "One Step Simplification" (formula "45"))
                                                         (rule "equalityToElementOfRight" (formula "45") (inst "fv=fv") (inst "ov=ov"))
                                                          (builtin "One Step Simplification" (formula "45"))
                                                         (rule "allRight" (formula "45") (inst "sk=ov_0"))
                                                         (rule "allRight" (formula "45") (inst "sk=fv_0"))
                                                         (rule "notRight" (formula "45"))
                                                         (rule "elementOfIntersect" (formula "1"))
                                                         (rule "andLeft" (formula "1"))
                                                         (rule "elementOfSubsetImpliesElementOfSuperset" (formula "2") (ifseqformula "22"))
                                                         (rule "elementOfSubsetImpliesElementOfSuperset" (formula "1") (ifseqformula "39"))
                                                          (builtin "One Step Simplification" (formula "1"))
                                                         (rule "andLeft" (formula "1"))
                                                         (rule "notLeft" (formula "2"))
                                                         (rule "notLeft" (formula "1"))
                                                         (rule "elementOfUnion" (formula "2"))
                                                          (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "48")))
                                                         (rule "pullOutSelect" (formula "49") (term "0") (inst "selectSK=java_lang_Object_created__7"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "27"))
                                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "49")))
                                                         (rule "ifthenelse_negated" (formula "1") (term "0"))
                                                         (rule "apply_eq_boolean_rigid" (formula "1") (term "1") (ifseqformula "50"))
                                                          (builtin "One Step Simplification" (formula "1"))
                                                         (rule "notLeft" (formula "1"))
                                                         (rule "ifEqualsTRUE" (formula "48"))
                                                          (builtin "One Step Simplification" (formula "48"))
                                                         (rule "orRight" (formula "48"))
                                                         (rule "replace_known_right" (formula "49") (term "0,0") (ifseqformula "48"))
                                                          (builtin "One Step Simplification" (formula "49"))
                                                         (rule "pullOutSelect" (formula "2") (term "0,0,0") (inst "selectSK=java_lang_Object_created__8"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "10"))
                                                          (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "51")))
                                                         (rule "ifthenelse_negated" (formula "2") (term "0"))
                                                         (rule "pullOutSelect" (formula "49") (term "0") (inst "selectSK=java_lang_Object_created__9"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "52")))
                                                         (rule "replaceKnownSelect_taclet1010010210000000000_32" (formula "1") (term "2,0"))
                                                         (rule "replaceKnownSelect_taclet1010010210000000000_32" (formula "1") (term "0,0,0,0"))
                                                         (rule "ifthenelse_negated" (formula "1") (term "0"))
                                                         (rule "apply_eq_boolean" (formula "1") (term "1") (ifseqformula "50"))
                                                          (builtin "One Step Simplification" (formula "1"))
                                                         (rule "notLeft" (formula "1"))
                                                         (rule "ifEqualsTRUE" (formula "49"))
                                                          (builtin "One Step Simplification" (formula "49"))
                                                         (rule "orRight" (formula "49"))
                                                         (rule "replace_known_right" (formula "50") (term "0,0") (ifseqformula "49"))
                                                          (builtin "One Step Simplification" (formula "50"))
                                                         (rule "replace_known_right" (formula "3") (term "0,0") (ifseqformula "49"))
                                                          (builtin "One Step Simplification" (formula "3"))
                                                         (rule "true_left" (formula "3"))
                                                         (rule "apply_eq_boolean" (formula "2") (term "1") (ifseqformula "48"))
                                                          (builtin "One Step Simplification" (formula "2"))
                                                         (rule "notLeft" (formula "2"))
                                                         (rule "ifEqualsTRUE" (formula "47"))
                                                          (builtin "One Step Simplification" (formula "47"))
                                                         (rule "orRight" (formula "47"))
                                                         (rule "replace_known_right" (formula "48") (term "0,0") (ifseqformula "47"))
                                                          (builtin "One Step Simplification" (formula "48"))
                                                         (rule "hideAuxiliaryEqConcrete2" (formula "54"))
                                                         (rule "hideAuxiliaryEqConcrete2" (formula "51"))
                                                         (rule "hideAuxiliaryEqConcrete2" (formula "49"))
                                                         (rule "onlyCreatedObjectsAreInLocSets" (formula "1") (ifseqformula "32"))
                                                         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "52"))
                                                          (builtin "One Step Simplification" (formula "1"))
                                                         (rule "onlyCreatedObjectsAreInLocSets" (formula "3") (ifseqformula "16"))
                                                         (rule "replace_known_right" (formula "3") (term "0") (ifseqformula "53"))
                                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "51")))
                                                         (rule "closeFalse" (formula "3"))
                                                      )
                                                   )
                                                   (branch "(self_0, List::$seq) in self_0.footprint@anon_heap_add<<anonHeapFunction>> FALSE"
                                                      (rule "eqSymm" (formula "25"))
                                                      (rule "applyEq" (formula "26") (term "1") (ifseqformula "25"))
                                                      (rule "ifthenelse_split" (formula "27") (term "0"))
                                                      (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_add<<anonHeapFunction>> TRUE"
                                                         (rule "applyEqReverse" (formula "29") (term "0") (ifseqformula "28"))
                                                         (rule "hideAuxiliaryEq" (formula "28"))
                                                         (rule "elementOfSubsetImpliesElementOfSuperset" (formula "27") (ifseqformula "20"))
                                                         (rule "elementOfUnion" (formula "27"))
                                                          (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "19")))
                                                         (rule "true_left" (formula "27"))
                                                         (rule "equalityToSeqGetAndSeqLenLeft" (formula "35") (inst "iv=iv"))
                                                          (builtin "One Step Simplification" (formula "35"))
                                                         (rule "andLeft" (formula "35"))
                                                         (rule "inEqSimp_ltToLeq" (formula "36") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "36") (term "0,0,0"))
                                                         (rule "applyEq" (formula "36") (term "0,0,1,0,0,1,0,0") (ifseqformula "37"))
                                                          (builtin "One Step Simplification" (formula "36"))
                                                         (rule "mul_literals" (formula "36") (term "1,0,0,1,0,0"))
                                                         (rule "add_zero_right" (formula "36") (term "0,0,1,0,0"))
                                                         (rule "applyEq" (formula "35") (term "0,0") (ifseqformula "37"))
                                                          (builtin "One Step Simplification" (formula "35"))
                                                         (rule "true_left" (formula "35"))
                                                         (rule "applyEq" (formula "35") (term "0,0,1,0") (ifseqformula "36"))
                                                          (builtin "One Step Simplification" (formula "35"))
                                                         (rule "true_left" (formula "35"))
                                                         (rule "equalityToSeqGetAndSeqLenLeft" (formula "43") (inst "iv=iv"))
                                                          (builtin "One Step Simplification" (formula "43"))
                                                         (rule "andLeft" (formula "43"))
                                                         (rule "getOfSeqSingleton" (formula "44") (term "1,1,0"))
                                                         (rule "castDel" (formula "44") (term "1,1,1,0"))
                                                         (rule "castDel" (formula "44") (term "2,1,1,0"))
                                                         (rule "eqSymm" (formula "44") (term "1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "44") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "44") (term "0,0,0"))
                                                         (rule "applyEq" (formula "43") (term "0,0") (ifseqformula "45"))
                                                          (builtin "One Step Simplification" (formula "43"))
                                                         (rule "true_left" (formula "43"))
                                                         (rule "applyEqRigid" (formula "43") (term "0,1,1,0") (ifseqformula "44"))
                                                         (rule "getOfSeqSingleton" (formula "43") (term "1,1,0"))
                                                         (rule "castDel" (formula "43") (term "1,1,1,0"))
                                                         (rule "castDel" (formula "43") (term "2,1,1,0"))
                                                          (builtin "One Step Simplification" (formula "43"))
                                                         (rule "true_left" (formula "43"))
                                                         (rule "equalityToSeqGetAndSeqLenLeft" (formula "17") (inst "iv=iv"))
                                                          (builtin "One Step Simplification" (formula "17"))
                                                         (rule "andLeft" (formula "17"))
                                                         (rule "getOfSeqSingleton" (formula "18") (term "1,1,0"))
                                                         (rule "castDel" (formula "18") (term "1,1,1,0"))
                                                         (rule "castDel" (formula "18") (term "2,1,1,0"))
                                                         (rule "eqSymm" (formula "18") (term "1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
                                                         (rule "applyEq" (formula "17") (term "0,0") (ifseqformula "19"))
                                                          (builtin "One Step Simplification" (formula "17"))
                                                         (rule "true_left" (formula "17"))
                                                         (rule "applyEq" (formula "17") (term "0,1,1,0") (ifseqformula "18"))
                                                         (rule "getOfSeqSingleton" (formula "17") (term "1,1,0"))
                                                         (rule "castDel" (formula "17") (term "2,1,1,0"))
                                                         (rule "castDel" (formula "17") (term "1,1,1,0"))
                                                          (builtin "One Step Simplification" (formula "17"))
                                                         (rule "true_left" (formula "17"))
                                                         (rule "equalityToSeqGetAndSeqLenLeft" (formula "42") (inst "iv=iv"))
                                                          (builtin "One Step Simplification" (formula "42"))
                                                         (rule "andLeft" (formula "42"))
                                                         (rule "getOfSeqSingleton" (formula "43") (term "1,1,0"))
                                                         (rule "castDel" (formula "43") (term "1,1,1,0"))
                                                         (rule "castDel" (formula "43") (term "2,1,1,0"))
                                                         (rule "eqSymm" (formula "43") (term "1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "43") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "43") (term "0,0,0"))
                                                         (rule "applyEq" (formula "42") (term "0,0") (ifseqformula "44"))
                                                          (builtin "One Step Simplification" (formula "42"))
                                                         (rule "true_left" (formula "42"))
                                                         (rule "applyEq" (formula "42") (term "0,1,1,0") (ifseqformula "43"))
                                                         (rule "getOfSeqSingleton" (formula "42") (term "1,1,0"))
                                                         (rule "castDel" (formula "42") (term "1,1,1,0"))
                                                         (rule "castDel" (formula "42") (term "2,1,1,0"))
                                                          (builtin "One Step Simplification" (formula "42"))
                                                         (rule "true_left" (formula "42"))
                                                         (rule "equalityToSeqGetAndSeqLenLeft" (formula "25") (inst "iv=iv"))
                                                          (builtin "One Step Simplification" (formula "25"))
                                                         (rule "andLeft" (formula "25"))
                                                         (rule "lenOfSeqConcat" (formula "25") (term "0"))
                                                          (builtin "One Step Simplification" (formula "25"))
                                                         (rule "add_literals" (formula "25") (term "0"))
                                                         (rule "equal_literals" (formula "25"))
                                                         (rule "closeFalse" (formula "25"))
                                                      )
                                                      (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_add<<anonHeapFunction>> FALSE"
                                                         (rule "applyEqReverse" (formula "28") (term "0") (ifseqformula "27"))
                                                          (builtin "One Step Simplification" (formula "28"))
                                                         (rule "true_left" (formula "28"))
                                                         (rule "hideAuxiliaryEq" (formula "27"))
                                                         (rule "equalityToSeqGetAndSeqLenLeft" (formula "33") (inst "iv=iv"))
                                                          (builtin "One Step Simplification" (formula "33"))
                                                         (rule "andLeft" (formula "33"))
                                                         (rule "inEqSimp_ltToLeq" (formula "34") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "34") (term "0,0,0"))
                                                         (rule "applyEq" (formula "33") (term "0,0") (ifseqformula "35"))
                                                          (builtin "One Step Simplification" (formula "33"))
                                                         (rule "true_left" (formula "33"))
                                                         (rule "applyEq" (formula "33") (term "0,0,1,0") (ifseqformula "34"))
                                                          (builtin "One Step Simplification" (formula "33"))
                                                         (rule "true_left" (formula "33"))
                                                         (rule "equalityToSeqGetAndSeqLenLeft" (formula "41") (inst "iv=iv"))
                                                          (builtin "One Step Simplification" (formula "41"))
                                                         (rule "andLeft" (formula "41"))
                                                         (rule "getOfSeqSingleton" (formula "42") (term "1,1,0"))
                                                         (rule "castDel" (formula "42") (term "2,1,1,0"))
                                                         (rule "castDel" (formula "42") (term "1,1,1,0"))
                                                         (rule "eqSymm" (formula "42") (term "1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "42") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "42") (term "0,0,0"))
                                                         (rule "applyEqRigid" (formula "42") (term "0,1,1,0") (ifseqformula "43"))
                                                         (rule "getOfSeqSingleton" (formula "42") (term "1,1,0"))
                                                         (rule "castDel" (formula "42") (term "1,1,1,0"))
                                                         (rule "castDel" (formula "42") (term "2,1,1,0"))
                                                          (builtin "One Step Simplification" (formula "42"))
                                                         (rule "true_left" (formula "42"))
                                                         (rule "applyEq" (formula "41") (term "0,0") (ifseqformula "42"))
                                                          (builtin "One Step Simplification" (formula "41"))
                                                         (rule "true_left" (formula "41"))
                                                         (rule "equalityToSeqGetAndSeqLenLeft" (formula "17") (inst "iv=iv"))
                                                          (builtin "One Step Simplification" (formula "17"))
                                                         (rule "andLeft" (formula "17"))
                                                         (rule "getOfSeqSingleton" (formula "18") (term "1,1,0"))
                                                         (rule "castDel" (formula "18") (term "2,1,1,0"))
                                                         (rule "castDel" (formula "18") (term "1,1,1,0"))
                                                         (rule "eqSymm" (formula "18") (term "1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
                                                         (rule "applyEq" (formula "18") (term "0,1,1,0") (ifseqformula "19"))
                                                         (rule "getOfSeqSingleton" (formula "18") (term "1,1,0"))
                                                         (rule "castDel" (formula "18") (term "2,1,1,0"))
                                                         (rule "castDel" (formula "18") (term "1,1,1,0"))
                                                          (builtin "One Step Simplification" (formula "18"))
                                                         (rule "true_left" (formula "18"))
                                                         (rule "applyEq" (formula "17") (term "0,0") (ifseqformula "18"))
                                                          (builtin "One Step Simplification" (formula "17"))
                                                         (rule "true_left" (formula "17"))
                                                         (rule "equalityToSeqGetAndSeqLenLeft" (formula "40") (inst "iv=iv"))
                                                          (builtin "One Step Simplification" (formula "40"))
                                                         (rule "andLeft" (formula "40"))
                                                         (rule "getOfSeqSingleton" (formula "41") (term "1,1,0"))
                                                         (rule "castDel" (formula "41") (term "2,1,1,0"))
                                                         (rule "castDel" (formula "41") (term "1,1,1,0"))
                                                         (rule "eqSymm" (formula "41") (term "1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "41") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "41") (term "0,0,0"))
                                                         (rule "applyEq" (formula "41") (term "0,1,1,0") (ifseqformula "42"))
                                                         (rule "getOfSeqSingleton" (formula "41") (term "1,1,0"))
                                                         (rule "castDel" (formula "41") (term "2,1,1,0"))
                                                         (rule "castDel" (formula "41") (term "1,1,1,0"))
                                                          (builtin "One Step Simplification" (formula "41"))
                                                         (rule "true_left" (formula "41"))
                                                         (rule "applyEq" (formula "40") (term "0,0") (ifseqformula "41"))
                                                          (builtin "One Step Simplification" (formula "40"))
                                                         (rule "true_left" (formula "40"))
                                                         (rule "equalityToSeqGetAndSeqLenLeft" (formula "25") (inst "iv=iv"))
                                                          (builtin "One Step Simplification" (formula "25"))
                                                         (rule "andLeft" (formula "25"))
                                                         (rule "lenOfSeqConcat" (formula "25") (term "0"))
                                                          (builtin "One Step Simplification" (formula "25"))
                                                         (rule "add_literals" (formula "25") (term "0"))
                                                         (rule "equal_literals" (formula "25"))
                                                         (rule "closeFalse" (formula "25"))
                                                      )
                                                   )
                                                )
                                             )
                                             (branch "(self_1, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> FALSE"
                                                (rule "eqSymm" (formula "41"))
                                                (rule "applyEq" (formula "42") (term "1") (ifseqformula "41"))
                                                (rule "ifthenelse_split" (formula "54") (term "0,0,1"))
                                                (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> TRUE"
                                                   (rule "elementOfSubsetImpliesElementOfSuperset" (formula "1") (ifseqformula "37"))
                                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "54")))
                                                   (rule "notLeft" (formula "1"))
                                                   (rule "pullOutSelect" (formula "45") (term "0") (inst "selectSK=java_lang_Object_created__6"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "25"))
                                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "55")))
                                                   (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "2,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "2,0"))
                                                   (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "0,0,0,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "0,0,0,0"))
                                                   (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "10"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "applyEqReverse" (formula "46") (term "0") (ifseqformula "1"))
                                                   (rule "close" (formula "46") (ifseqformula "10"))
                                                )
                                                (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> FALSE"
                                                   (rule "lenOfSeqConcat" (formula "55") (term "0,1"))
                                                    (builtin "One Step Simplification" (formula "55"))
                                                   (rule "add_literals" (formula "55") (term "0,1"))
                                                   (rule "qeq_literals" (formula "55") (term "1"))
                                                    (builtin "One Step Simplification" (formula "55"))
                                                   (rule "ifthenelse_split" (formula "25") (term "0"))
                                                   (branch "(self_0, List::$seq) in self_0.footprint@anon_heap_add<<anonHeapFunction>> TRUE"
                                                      (rule "elementOfSubsetImpliesElementOfSuperset" (formula "25") (ifseqformula "20"))
                                                      (rule "elementOfUnion" (formula "25"))
                                                       (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "16")))
                                                      (rule "true_left" (formula "25"))
                                                      (rule "ifthenelse_split" (formula "28") (term "0"))
                                                      (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_add<<anonHeapFunction>> TRUE"
                                                         (rule "applyEqReverse" (formula "30") (term "0") (ifseqformula "29"))
                                                         (rule "hideAuxiliaryEq" (formula "29"))
                                                         (rule "elementOfSubsetImpliesElementOfSuperset" (formula "28") (ifseqformula "20"))
                                                         (rule "elementOfUnion" (formula "28"))
                                                          (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "19")))
                                                         (rule "true_left" (formula "28"))
                                                         (rule "equalityToSeqGetAndSeqLenLeft" (formula "36") (inst "iv=iv"))
                                                          (builtin "One Step Simplification" (formula "36"))
                                                         (rule "andLeft" (formula "36"))
                                                         (rule "inEqSimp_ltToLeq" (formula "37") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "37") (term "0,0,0"))
                                                         (rule "applyEq" (formula "36") (term "0,0") (ifseqformula "38"))
                                                          (builtin "One Step Simplification" (formula "36"))
                                                         (rule "true_left" (formula "36"))
                                                         (rule "applyEq" (formula "36") (term "0,0,1,0") (ifseqformula "37"))
                                                          (builtin "One Step Simplification" (formula "36"))
                                                         (rule "true_left" (formula "36"))
                                                         (rule "equalityToSeqGetAndSeqLenLeft" (formula "17") (inst "iv=iv"))
                                                          (builtin "One Step Simplification" (formula "17"))
                                                         (rule "andLeft" (formula "17"))
                                                         (rule "getOfSeqSingleton" (formula "18") (term "1,1,0"))
                                                         (rule "castDel" (formula "18") (term "1,1,1,0"))
                                                         (rule "castDel" (formula "18") (term "2,1,1,0"))
                                                         (rule "eqSymm" (formula "18") (term "1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
                                                         (rule "applyEq" (formula "18") (term "0,0,1,0,0,1,0,0") (ifseqformula "19"))
                                                          (builtin "One Step Simplification" (formula "18"))
                                                         (rule "mul_literals" (formula "18") (term "1,0,0,1,0,0"))
                                                         (rule "add_literals" (formula "18") (term "0,0,1,0,0"))
                                                         (rule "add_zero_left" (formula "18") (term "0,1,0,0"))
                                                         (rule "applyEq" (formula "17") (term "0,0") (ifseqformula "19"))
                                                          (builtin "One Step Simplification" (formula "17"))
                                                         (rule "true_left" (formula "17"))
                                                         (rule "applyEq" (formula "17") (term "0,1,1,0") (ifseqformula "18"))
                                                         (rule "getOfSeqSingleton" (formula "17") (term "1,1,0"))
                                                         (rule "castDel" (formula "17") (term "2,1,1,0"))
                                                         (rule "castDel" (formula "17") (term "1,1,1,0"))
                                                          (builtin "One Step Simplification" (formula "17"))
                                                         (rule "true_left" (formula "17"))
                                                         (rule "equalityToSeqGetAndSeqLenLeft" (formula "42") (inst "iv=iv"))
                                                          (builtin "One Step Simplification" (formula "42"))
                                                         (rule "equal_literals" (formula "42") (term "0"))
                                                          (builtin "One Step Simplification" (formula "42"))
                                                         (rule "closeFalse" (formula "42"))
                                                      )
                                                      (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_add<<anonHeapFunction>> FALSE"
                                                         (rule "applyEqReverse" (formula "29") (term "0") (ifseqformula "28"))
                                                          (builtin "One Step Simplification" (formula "29"))
                                                         (rule "true_left" (formula "29"))
                                                         (rule "hideAuxiliaryEq" (formula "28"))
                                                         (rule "equalityToSeqGetAndSeqLenLeft" (formula "34") (inst "iv=iv"))
                                                          (builtin "One Step Simplification" (formula "34"))
                                                         (rule "andLeft" (formula "34"))
                                                         (rule "inEqSimp_ltToLeq" (formula "35") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "35") (term "0,0,0"))
                                                         (rule "applyEq" (formula "34") (term "0,0") (ifseqformula "36"))
                                                          (builtin "One Step Simplification" (formula "34"))
                                                         (rule "true_left" (formula "34"))
                                                         (rule "applyEq" (formula "34") (term "0,0,1,0") (ifseqformula "35"))
                                                          (builtin "One Step Simplification" (formula "34"))
                                                         (rule "true_left" (formula "34"))
                                                         (rule "equalityToSeqGetAndSeqLenLeft" (formula "17") (inst "iv=iv"))
                                                          (builtin "One Step Simplification" (formula "17"))
                                                         (rule "andLeft" (formula "17"))
                                                         (rule "getOfSeqSingleton" (formula "18") (term "1,1,0"))
                                                         (rule "castDel" (formula "18") (term "2,1,1,0"))
                                                         (rule "castDel" (formula "18") (term "1,1,1,0"))
                                                         (rule "eqSymm" (formula "18") (term "1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
                                                         (rule "applyEq" (formula "18") (term "0,0,1,0,0,1,0,0") (ifseqformula "19"))
                                                          (builtin "One Step Simplification" (formula "18"))
                                                         (rule "mul_literals" (formula "18") (term "1,0,0,1,0,0"))
                                                         (rule "add_literals" (formula "18") (term "0,0,1,0,0"))
                                                         (rule "add_zero_left" (formula "18") (term "0,1,0,0"))
                                                         (rule "applyEq" (formula "17") (term "0,0") (ifseqformula "19"))
                                                          (builtin "One Step Simplification" (formula "17"))
                                                         (rule "true_left" (formula "17"))
                                                         (rule "applyEq" (formula "17") (term "0,1,1,0") (ifseqformula "18"))
                                                         (rule "getOfSeqSingleton" (formula "17") (term "1,1,0"))
                                                         (rule "castDel" (formula "17") (term "2,1,1,0"))
                                                         (rule "castDel" (formula "17") (term "1,1,1,0"))
                                                          (builtin "One Step Simplification" (formula "17"))
                                                         (rule "true_left" (formula "17"))
                                                         (rule "equalityToSeqGetAndSeqLenLeft" (formula "40") (inst "iv=iv"))
                                                          (builtin "One Step Simplification" (formula "40"))
                                                         (rule "equal_literals" (formula "40") (term "0"))
                                                          (builtin "One Step Simplification" (formula "40"))
                                                         (rule "closeFalse" (formula "40"))
                                                      )
                                                   )
                                                   (branch "(self_0, List::$seq) in self_0.footprint@anon_heap_add<<anonHeapFunction>> FALSE"
                                                      (rule "eqSymm" (formula "25"))
                                                      (rule "applyEqRigid" (formula "26") (term "1") (ifseqformula "25"))
                                                      (rule "ifthenelse_split" (formula "27") (term "0"))
                                                      (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_add<<anonHeapFunction>> TRUE"
                                                         (rule "applyEqReverse" (formula "29") (term "0") (ifseqformula "28"))
                                                         (rule "hideAuxiliaryEq" (formula "28"))
                                                         (rule "elementOfSubsetImpliesElementOfSuperset" (formula "27") (ifseqformula "20"))
                                                         (rule "elementOfUnion" (formula "27"))
                                                          (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "19")))
                                                         (rule "true_left" (formula "27"))
                                                         (rule "equalityToSeqGetAndSeqLenLeft" (formula "35") (inst "iv=iv"))
                                                          (builtin "One Step Simplification" (formula "35"))
                                                         (rule "andLeft" (formula "35"))
                                                         (rule "inEqSimp_ltToLeq" (formula "36") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "36") (term "0,0,0"))
                                                         (rule "applyEq" (formula "36") (term "0,0,1,0,0,1,0,0") (ifseqformula "37"))
                                                          (builtin "One Step Simplification" (formula "36"))
                                                         (rule "mul_literals" (formula "36") (term "1,0,0,1,0,0"))
                                                         (rule "add_zero_right" (formula "36") (term "0,0,1,0,0"))
                                                         (rule "applyEq" (formula "35") (term "0,0") (ifseqformula "37"))
                                                          (builtin "One Step Simplification" (formula "35"))
                                                         (rule "true_left" (formula "35"))
                                                         (rule "applyEq" (formula "35") (term "0,0,1,0") (ifseqformula "36"))
                                                          (builtin "One Step Simplification" (formula "35"))
                                                         (rule "true_left" (formula "35"))
                                                         (rule "equalityToSeqGetAndSeqLenLeft" (formula "17") (inst "iv=iv"))
                                                          (builtin "One Step Simplification" (formula "17"))
                                                         (rule "andLeft" (formula "17"))
                                                         (rule "getOfSeqSingleton" (formula "18") (term "1,1,0"))
                                                         (rule "castDel" (formula "18") (term "2,1,1,0"))
                                                         (rule "castDel" (formula "18") (term "1,1,1,0"))
                                                         (rule "eqSymm" (formula "18") (term "1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
                                                         (rule "applyEq" (formula "17") (term "0,0") (ifseqformula "19"))
                                                          (builtin "One Step Simplification" (formula "17"))
                                                         (rule "true_left" (formula "17"))
                                                         (rule "applyEq" (formula "17") (term "0,0,1,0,0,1,0,0") (ifseqformula "18"))
                                                          (builtin "One Step Simplification" (formula "17"))
                                                         (rule "mul_literals" (formula "17") (term "1,0,0,1,0,0"))
                                                         (rule "add_literals" (formula "17") (term "0,0,1,0,0"))
                                                         (rule "add_zero_left" (formula "17") (term "0,1,0,0"))
                                                         (rule "applyEq" (formula "17") (term "0,1,1,0") (ifseqformula "18"))
                                                         (rule "getOfSeqSingleton" (formula "17") (term "1,1,0"))
                                                         (rule "castDel" (formula "17") (term "1,1,1,0"))
                                                         (rule "castDel" (formula "17") (term "2,1,1,0"))
                                                          (builtin "One Step Simplification" (formula "17"))
                                                         (rule "true_left" (formula "17"))
                                                         (rule "equalityToSeqGetAndSeqLenLeft" (formula "41") (inst "iv=iv"))
                                                          (builtin "One Step Simplification" (formula "41"))
                                                         (rule "equal_literals" (formula "41") (term "0"))
                                                          (builtin "One Step Simplification" (formula "41"))
                                                         (rule "closeFalse" (formula "41"))
                                                      )
                                                      (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_add<<anonHeapFunction>> FALSE"
                                                         (rule "applyEqReverse" (formula "28") (term "0") (ifseqformula "27"))
                                                          (builtin "One Step Simplification" (formula "28"))
                                                         (rule "true_left" (formula "28"))
                                                         (rule "hideAuxiliaryEq" (formula "27"))
                                                         (rule "equalityToSeqGetAndSeqLenLeft" (formula "33") (inst "iv=iv"))
                                                          (builtin "One Step Simplification" (formula "33"))
                                                         (rule "andLeft" (formula "33"))
                                                         (rule "inEqSimp_ltToLeq" (formula "34") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "34") (term "0,0,0"))
                                                         (rule "applyEq" (formula "34") (term "0,0,1,0,0,1,0,0") (ifseqformula "35"))
                                                          (builtin "One Step Simplification" (formula "34"))
                                                         (rule "mul_literals" (formula "34") (term "1,0,0,1,0,0"))
                                                         (rule "add_literals" (formula "34") (term "0,0,1,0,0"))
                                                         (rule "applyEq" (formula "33") (term "0,0") (ifseqformula "35"))
                                                          (builtin "One Step Simplification" (formula "33"))
                                                         (rule "true_left" (formula "33"))
                                                         (rule "applyEq" (formula "33") (term "0,0,1,0") (ifseqformula "34"))
                                                          (builtin "One Step Simplification" (formula "33"))
                                                         (rule "true_left" (formula "33"))
                                                         (rule "equalityToSeqGetAndSeqLenLeft" (formula "17") (inst "iv=iv"))
                                                          (builtin "One Step Simplification" (formula "17"))
                                                         (rule "andLeft" (formula "17"))
                                                         (rule "getOfSeqSingleton" (formula "18") (term "1,1,0"))
                                                         (rule "castDel" (formula "18") (term "2,1,1,0"))
                                                         (rule "castDel" (formula "18") (term "1,1,1,0"))
                                                         (rule "eqSymm" (formula "18") (term "1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
                                                         (rule "applyEq" (formula "17") (term "0,0") (ifseqformula "19"))
                                                          (builtin "One Step Simplification" (formula "17"))
                                                         (rule "true_left" (formula "17"))
                                                         (rule "applyEq" (formula "17") (term "0,1,1,0") (ifseqformula "18"))
                                                         (rule "getOfSeqSingleton" (formula "17") (term "1,1,0"))
                                                         (rule "castDel" (formula "17") (term "1,1,1,0"))
                                                         (rule "castDel" (formula "17") (term "2,1,1,0"))
                                                          (builtin "One Step Simplification" (formula "17"))
                                                         (rule "true_left" (formula "17"))
                                                         (rule "equalityToSeqGetAndSeqLenLeft" (formula "39") (inst "iv=iv"))
                                                          (builtin "One Step Simplification" (formula "39"))
                                                         (rule "equal_literals" (formula "39") (term "0"))
                                                          (builtin "One Step Simplification" (formula "39"))
                                                         (rule "closeFalse" (formula "39"))
                                                      )
                                                   )
                                                )
                                             )
                                          )
                                          (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_ArrayList<<anonHeapFunction>> FALSE"
                                             (rule "applyEqReverse" (formula "27") (term "2,0") (ifseqformula "19"))
                                             (rule "applyEqReverse" (formula "20") (term "0") (ifseqformula "19"))
                                              (builtin "One Step Simplification" (formula "20"))
                                             (rule "true_left" (formula "20"))
                                             (rule "applyEqReverse" (formula "26") (term "2,0,0") (ifseqformula "19"))
                                             (rule "applyEqReverse" (formula "22") (term "1,0") (ifseqformula "19"))
                                             (rule "applyEqReverse" (formula "24") (term "2,0,0") (ifseqformula "19"))
                                             (rule "applyEqReverse" (formula "27") (term "0,1") (ifseqformula "19"))
                                             (rule "hideAuxiliaryEq" (formula "19"))
                                             (rule "replace_known_right" (formula "25") (term "0,0") (ifseqformula "42"))
                                              (builtin "One Step Simplification" (formula "25"))
                                             (rule "applyEqReverse" (formula "26") (term "0") (ifseqformula "25"))
                                              (builtin "One Step Simplification" (formula "26"))
                                             (rule "true_left" (formula "26"))
                                             (rule "hideAuxiliaryEq" (formula "25"))
                                             (rule "replace_known_left" (formula "23") (term "0,0") (ifseqformula "16"))
                                              (builtin "One Step Simplification" (formula "23"))
                                             (rule "ifthenelse_split" (formula "37") (term "0"))
                                             (branch "(self_1, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> TRUE"
                                                (rule "elementOfSubsetImpliesElementOfSuperset" (formula "37") (ifseqformula "32"))
                                                 (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "48")))
                                                (rule "replaceKnownSelect_taclet0000000_18" (formula "37") (term "0,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet0000000_21" (formula "37") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "37"))
                                                (rule "true_left" (formula "37"))
                                                (rule "ifthenelse_split" (formula "51") (term "0,0,1"))
                                                (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> TRUE"
                                                   (rule "elementOfSubsetImpliesElementOfSuperset" (formula "1") (ifseqformula "33"))
                                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "51")))
                                                   (rule "notLeft" (formula "1"))
                                                   (rule "pullOutSelect" (formula "42") (term "0") (inst "selectSK=java_lang_Object_created__6"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "52")))
                                                   (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "2,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "2,0"))
                                                   (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "0,0,0,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "0,0,0,0"))
                                                   (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "10"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "applyEqReverse" (formula "43") (term "0") (ifseqformula "1"))
                                                   (rule "close" (formula "43") (ifseqformula "10"))
                                                )
                                                (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> FALSE"
                                                   (rule "lenOfSeqConcat" (formula "52") (term "0,1"))
                                                    (builtin "One Step Simplification" (formula "52"))
                                                   (rule "add_literals" (formula "52") (term "0,1"))
                                                   (rule "qeq_literals" (formula "52") (term "1"))
                                                    (builtin "One Step Simplification" (formula "52"))
                                                   (rule "equalityToSeqGetAndSeqLenLeft" (formula "39") (inst "iv=iv"))
                                                    (builtin "One Step Simplification" (formula "39"))
                                                   (rule "andLeft" (formula "39"))
                                                   (rule "getOfSeqSingleton" (formula "40") (term "1,1,0"))
                                                   (rule "castDel" (formula "40") (term "2,1,1,0"))
                                                   (rule "castDel" (formula "40") (term "1,1,1,0"))
                                                   (rule "eqSymm" (formula "40") (term "1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "40") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "40") (term "0,0,0"))
                                                   (rule "applyEq" (formula "40") (term "0,1,1,0") (ifseqformula "41"))
                                                   (rule "getOfSeqSingleton" (formula "40") (term "1,1,0"))
                                                   (rule "castDel" (formula "40") (term "1,1,1,0"))
                                                   (rule "castDel" (formula "40") (term "2,1,1,0"))
                                                    (builtin "One Step Simplification" (formula "40"))
                                                   (rule "true_left" (formula "40"))
                                                   (rule "applyEq" (formula "39") (term "0,0") (ifseqformula "40"))
                                                    (builtin "One Step Simplification" (formula "39"))
                                                   (rule "true_left" (formula "39"))
                                                   (rule "equalityToSeqGetAndSeqLenLeft" (formula "31") (inst "iv=iv"))
                                                    (builtin "One Step Simplification" (formula "31"))
                                                   (rule "andLeft" (formula "31"))
                                                   (rule "inEqSimp_ltToLeq" (formula "32") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "32") (term "0,0,0"))
                                                   (rule "applyEq" (formula "32") (term "0,0,1,0,0,1,0,0") (ifseqformula "33"))
                                                    (builtin "One Step Simplification" (formula "32"))
                                                   (rule "mul_literals" (formula "32") (term "1,0,0,1,0,0"))
                                                   (rule "add_zero_right" (formula "32") (term "0,0,1,0,0"))
                                                   (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "33"))
                                                    (builtin "One Step Simplification" (formula "31"))
                                                   (rule "true_left" (formula "31"))
                                                   (rule "applyEq" (formula "31") (term "0,0,1,0") (ifseqformula "32"))
                                                    (builtin "One Step Simplification" (formula "31"))
                                                   (rule "true_left" (formula "31"))
                                                   (rule "equalityToSeqGetAndSeqLenLeft" (formula "17") (inst "iv=iv"))
                                                    (builtin "One Step Simplification" (formula "17"))
                                                   (rule "andLeft" (formula "17"))
                                                   (rule "getOfSeqSingleton" (formula "18") (term "1,1,0"))
                                                   (rule "castDel" (formula "18") (term "2,1,1,0"))
                                                   (rule "castDel" (formula "18") (term "1,1,1,0"))
                                                   (rule "eqSymm" (formula "18") (term "1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
                                                   (rule "applyEq" (formula "18") (term "0,0,1,0,0,1,0,0") (ifseqformula "19"))
                                                    (builtin "One Step Simplification" (formula "18"))
                                                   (rule "mul_literals" (formula "18") (term "1,0,0,1,0,0"))
                                                   (rule "add_literals" (formula "18") (term "0,0,1,0,0"))
                                                   (rule "add_zero_left" (formula "18") (term "0,1,0,0"))
                                                   (rule "applyEq" (formula "17") (term "0,0") (ifseqformula "19"))
                                                    (builtin "One Step Simplification" (formula "17"))
                                                   (rule "true_left" (formula "17"))
                                                   (rule "applyEq" (formula "17") (term "0,1,1,0") (ifseqformula "18"))
                                                   (rule "getOfSeqSingleton" (formula "17") (term "1,1,0"))
                                                   (rule "castDel" (formula "17") (term "1,1,1,0"))
                                                   (rule "castDel" (formula "17") (term "2,1,1,0"))
                                                    (builtin "One Step Simplification" (formula "17"))
                                                   (rule "true_left" (formula "17"))
                                                   (rule "equalityToSeqGetAndSeqLenLeft" (formula "23") (inst "iv=iv"))
                                                   (rule "andLeft" (formula "23"))
                                                   (rule "lenOfSeqConcat" (formula "23") (term "1"))
                                                    (builtin "One Step Simplification" (formula "23"))
                                                   (rule "add_literals" (formula "23") (term "1"))
                                                   (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0"))
                                                   (rule "applyEq" (formula "24") (term "0,0,1,0") (ifseqformula "25"))
                                                    (builtin "One Step Simplification" (formula "24"))
                                                   (rule "true_left" (formula "24"))
                                                   (rule "applyEq" (formula "23") (term "0,0") (ifseqformula "24"))
                                                   (rule "lenOfSeqConcat" (formula "23") (term "0"))
                                                    (builtin "One Step Simplification" (formula "23"))
                                                   (rule "add_literals" (formula "23") (term "0"))
                                                    (builtin "One Step Simplification" (formula "23"))
                                                   (rule "true_left" (formula "23"))
                                                   (rule "equalityToSeqGetAndSeqLenLeft" (formula "38") (inst "iv=iv"))
                                                    (builtin "One Step Simplification" (formula "38"))
                                                   (rule "andLeft" (formula "38"))
                                                   (rule "getOfSeqSingleton" (formula "39") (term "1,1,0"))
                                                   (rule "castDel" (formula "39") (term "2,1,1,0"))
                                                   (rule "castDel" (formula "39") (term "1,1,1,0"))
                                                   (rule "eqSymm" (formula "39") (term "1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "39") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "39") (term "0,0,0"))
                                                   (rule "applyEq" (formula "39") (term "0,1,1,0") (ifseqformula "40"))
                                                   (rule "getOfSeqSingleton" (formula "39") (term "1,1,0"))
                                                   (rule "castDel" (formula "39") (term "1,1,1,0"))
                                                   (rule "castDel" (formula "39") (term "2,1,1,0"))
                                                    (builtin "One Step Simplification" (formula "39"))
                                                   (rule "true_left" (formula "39"))
                                                   (rule "applyEq" (formula "38") (term "0,0") (ifseqformula "39"))
                                                    (builtin "One Step Simplification" (formula "38"))
                                                   (rule "true_left" (formula "38"))
                                                   (rule "onlyCreatedObjectsAreInLocSets" (formula "16") (ifseqformula "5"))
                                                   (rule "replace_known_right" (formula "16") (term "0") (ifseqformula "50"))
                                                    (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "8")))
                                                   (rule "true_left" (formula "16"))
                                                   (rule "onlyCreatedObjectsAreInLocSets" (formula "37") (ifseqformula "26"))
                                                   (rule "replace_known_right" (formula "37") (term "0") (ifseqformula "48"))
                                                    (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "29")))
                                                   (rule "true_left" (formula "37"))
                                                    (builtin "Use Dependency Contract" (formula "52") (ifInst ""  (formula "25")) (ifInst ""  (formula "35")) (ifInst ""  (formula "27")) (contract "ArrayList[java.lang.Object::<inv>()].JML accessible clause.0"))
                                                   (rule "replaceKnownSelect_taclet0000_9" (formula "41") (term "1,1,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet110210000000000_28" (formula "41") (term "1,1,0"))
                                                   (rule "wellFormedAnonEQ" (formula "41") (term "0,1,0,0,0") (ifseqformula "21"))
                                                   (rule "wellFormedAnonEQ" (formula "41") (term "1,1,0,0,0") (ifseqformula "35"))
                                                   (rule "wellFormedAnonEQ" (formula "41") (term "0,1,1,0,0,0") (ifseqformula "27"))
                                                   (rule "wellFormedAnonEQ" (formula "41") (term "0,0,1,0,0,0") (ifseqformula "14"))
                                                   (rule "wellFormedAnonEQ" (formula "41") (term "0,0,0,1,0,0,0") (ifseqformula "6"))
                                                   (rule "wellFormedAnonEQ" (formula "41") (term "0,0,1,1,0,0,0") (ifseqformula "21"))
                                                   (rule "wellFormedAnonEQ" (formula "41") (term "0,0,0,1,1,0,0,0") (ifseqformula "14"))
                                                   (rule "wellFormedAnonEQ" (formula "41") (term "0,0,0,0,1,1,0,0,0") (ifseqformula "6"))
                                                   (rule "replace_known_left" (formula "41") (term "1,1") (ifseqformula "25"))
                                                    (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "50")) (ifInst ""  (formula "1")) (ifInst ""  (formula "5")) (ifInst ""  (formula "13")) (ifInst ""  (formula "20")) (ifInst ""  (formula "1")) (ifInst ""  (formula "5")) (ifInst ""  (formula "13")) (ifInst ""  (formula "20")) (ifInst ""  (formula "26")) (ifInst ""  (formula "34")) (ifInst ""  (formula "25")) (ifInst ""  (formula "53")))
                                                   (rule "notLeft" (formula "41"))
                                                   (rule "disjointDefinition" (formula "41") (term "1"))
                                                   (rule "pullOutSelect" (formula "41") (term "0,0") (inst "selectSK=java_lang_Object_created__6"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "22"))
                                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "51")))
                                                   (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "2,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "2,0"))
                                                   (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "0,0,0,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "0,0,0,0"))
                                                   (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "9"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "applyEqReverse" (formula "42") (term "0,0") (ifseqformula "1"))
                                                   (rule "hideAuxiliaryEq" (formula "1"))
                                                   (rule "replace_known_left" (formula "41") (term "0") (ifseqformula "8"))
                                                    (builtin "One Step Simplification" (formula "41"))
                                                   (rule "commuteIntersection" (formula "41") (term "0"))
                                                   (rule "equalityToElementOfRight" (formula "41") (inst "fv=fv") (inst "ov=ov"))
                                                    (builtin "One Step Simplification" (formula "41"))
                                                   (rule "allRight" (formula "41") (inst "sk=ov_0"))
                                                   (rule "allRight" (formula "41") (inst "sk=fv_0"))
                                                   (rule "notRight" (formula "41"))
                                                   (rule "elementOfIntersect" (formula "1"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "elementOfSubsetImpliesElementOfSuperset" (formula "2") (ifseqformula "34"))
                                                    (builtin "One Step Simplification" (formula "2"))
                                                   (rule "andLeft" (formula "2"))
                                                   (rule "notLeft" (formula "3"))
                                                   (rule "notLeft" (formula "2"))
                                                   (rule "elementOfSubsetImpliesElementOfSuperset" (formula "1") (ifseqformula "13"))
                                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "44")))
                                                   (rule "notLeft" (formula "1"))
                                                   (rule "pullOutSelect" (formula "45") (term "0") (inst "selectSK=java_lang_Object_created__7"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
                                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "45")))
                                                   (rule "ifthenelse_negated" (formula "1") (term "0"))
                                                   (rule "apply_eq_boolean_rigid" (formula "1") (term "1") (ifseqformula "46"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "notLeft" (formula "1"))
                                                   (rule "ifEqualsTRUE" (formula "43"))
                                                    (builtin "One Step Simplification" (formula "43"))
                                                   (rule "orRight" (formula "43"))
                                                   (rule "replace_known_right" (formula "44") (term "0,0") (ifseqformula "43"))
                                                    (builtin "One Step Simplification" (formula "44"))
                                                   (rule "pullOutSelect" (formula "43") (term "0") (inst "selectSK=java_lang_Object_created__8"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "17"))
                                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "47")))
                                                   (rule "ifthenelse_negated" (formula "1") (term "0"))
                                                   (rule "apply_eq_boolean" (formula "1") (term "1") (ifseqformula "44"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "notLeft" (formula "1"))
                                                   (rule "ifEqualsTRUE" (formula "43"))
                                                    (builtin "One Step Simplification" (formula "43"))
                                                   (rule "orRight" (formula "43"))
                                                   (rule "replace_known_right" (formula "44") (term "0,0") (ifseqformula "43"))
                                                    (builtin "One Step Simplification" (formula "44"))
                                                   (rule "pullOutSelect" (formula "43") (term "0") (inst "selectSK=java_lang_Object_created__9"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "9"))
                                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "49")) (ifInst ""  (formula "48")))
                                                   (rule "applyEqReverse" (formula "44") (term "0") (ifseqformula "1"))
                                                   (rule "hideAuxiliaryEq" (formula "1"))
                                                   (rule "hideAuxiliaryEqConcrete2" (formula "49"))
                                                   (rule "hideAuxiliaryEqConcrete2" (formula "45"))
                                                   (rule "onlyCreatedObjectsAreInLocSets" (formula "2") (ifseqformula "28"))
                                                   (rule "replace_known_right" (formula "2") (term "0") (ifseqformula "48"))
                                                    (builtin "One Step Simplification" (formula "2"))
                                                   (rule "onlyCreatedObjectsAreInLocSets" (formula "1") (ifseqformula "8"))
                                                   (rule "replace_known_right" (formula "1") (term "1") (ifseqformula "45"))
                                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "49")))
                                                   (rule "closeFalse" (formula "1"))
                                                )
                                             )
                                             (branch "(self_1, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> FALSE"
                                                (rule "eqSymm" (formula "37"))
                                                (rule "applyEq" (formula "38") (term "1") (ifseqformula "37"))
                                                (rule "ifthenelse_split" (formula "51") (term "0,0,1"))
                                                (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> TRUE"
                                                   (rule "elementOfSubsetImpliesElementOfSuperset" (formula "1") (ifseqformula "33"))
                                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "51")))
                                                   (rule "notLeft" (formula "1"))
                                                   (rule "pullOutSelect" (formula "41") (term "0") (inst "selectSK=java_lang_Object_created__6"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "52")))
                                                   (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "2,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "2,0"))
                                                   (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "0,0,0,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "0,0,0,0"))
                                                   (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "10"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "applyEqReverse" (formula "42") (term "0") (ifseqformula "1"))
                                                   (rule "close" (formula "42") (ifseqformula "10"))
                                                )
                                                (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> FALSE"
                                                   (rule "lenOfSeqConcat" (formula "52") (term "0,1"))
                                                    (builtin "One Step Simplification" (formula "52"))
                                                   (rule "add_literals" (formula "52") (term "0,1"))
                                                   (rule "qeq_literals" (formula "52") (term "1"))
                                                    (builtin "One Step Simplification" (formula "52"))
                                                   (rule "equalityToSeqGetAndSeqLenLeft" (formula "31") (inst "iv=iv"))
                                                    (builtin "One Step Simplification" (formula "31"))
                                                   (rule "andLeft" (formula "31"))
                                                   (rule "inEqSimp_ltToLeq" (formula "32") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "32") (term "0,0,0"))
                                                   (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "33"))
                                                    (builtin "One Step Simplification" (formula "31"))
                                                   (rule "true_left" (formula "31"))
                                                   (rule "applyEq" (formula "31") (term "0,0,1,0,0,1,0,0") (ifseqformula "32"))
                                                    (builtin "One Step Simplification" (formula "31"))
                                                   (rule "times_zero_2" (formula "31") (term "1,0,0,1,0,0"))
                                                   (rule "add_zero_right" (formula "31") (term "0,0,1,0,0"))
                                                   (rule "applyEq" (formula "31") (term "0,0,1,0") (ifseqformula "32"))
                                                    (builtin "One Step Simplification" (formula "31"))
                                                   (rule "true_left" (formula "31"))
                                                   (rule "equalityToSeqGetAndSeqLenLeft" (formula "17") (inst "iv=iv"))
                                                    (builtin "One Step Simplification" (formula "17"))
                                                   (rule "andLeft" (formula "17"))
                                                   (rule "getOfSeqSingleton" (formula "18") (term "1,1,0"))
                                                   (rule "castDel" (formula "18") (term "2,1,1,0"))
                                                   (rule "castDel" (formula "18") (term "1,1,1,0"))
                                                   (rule "eqSymm" (formula "18") (term "1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
                                                   (rule "applyEq" (formula "18") (term "0,0,1,0,0,1,0,0") (ifseqformula "19"))
                                                    (builtin "One Step Simplification" (formula "18"))
                                                   (rule "mul_literals" (formula "18") (term "1,0,0,1,0,0"))
                                                   (rule "add_literals" (formula "18") (term "0,0,1,0,0"))
                                                   (rule "add_zero_left" (formula "18") (term "0,1,0,0"))
                                                   (rule "applyEq" (formula "17") (term "0,0") (ifseqformula "19"))
                                                    (builtin "One Step Simplification" (formula "17"))
                                                   (rule "true_left" (formula "17"))
                                                   (rule "applyEq" (formula "17") (term "0,1,1,0") (ifseqformula "18"))
                                                   (rule "getOfSeqSingleton" (formula "17") (term "1,1,0"))
                                                   (rule "castDel" (formula "17") (term "1,1,1,0"))
                                                   (rule "castDel" (formula "17") (term "2,1,1,0"))
                                                    (builtin "One Step Simplification" (formula "17"))
                                                   (rule "true_left" (formula "17"))
                                                   (rule "equalityToSeqGetAndSeqLenLeft" (formula "23") (inst "iv=iv"))
                                                   (rule "andLeft" (formula "23"))
                                                   (rule "lenOfSeqConcat" (formula "23") (term "1"))
                                                    (builtin "One Step Simplification" (formula "23"))
                                                   (rule "add_literals" (formula "23") (term "1"))
                                                   (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0"))
                                                   (rule "applyEq" (formula "24") (term "0,0,1,0,0,1,0,0") (ifseqformula "25"))
                                                   (rule "lenOfSeqConcat" (formula "24") (term "0,1,0,0,1,0,0"))
                                                    (builtin "One Step Simplification" (formula "24"))
                                                   (rule "add_literals" (formula "24") (term "0,1,0,0,1,0,0"))
                                                   (rule "mul_literals" (formula "24") (term "1,0,0,1,0,0"))
                                                   (rule "add_literals" (formula "24") (term "0,0,1,0,0"))
                                                   (rule "applyEq" (formula "23") (term "0,0") (ifseqformula "25"))
                                                   (rule "lenOfSeqConcat" (formula "23") (term "0"))
                                                    (builtin "One Step Simplification" (formula "23"))
                                                   (rule "add_literals" (formula "23") (term "0"))
                                                    (builtin "One Step Simplification" (formula "23"))
                                                   (rule "true_left" (formula "23"))
                                                   (rule "applyEq" (formula "23") (term "0,0,1,0") (ifseqformula "24"))
                                                    (builtin "One Step Simplification" (formula "23"))
                                                   (rule "true_left" (formula "23"))
                                                   (rule "equalityToSeqGetAndSeqLenLeft" (formula "37") (inst "iv=iv"))
                                                    (builtin "One Step Simplification" (formula "37"))
                                                   (rule "equal_literals" (formula "37") (term "0"))
                                                    (builtin "One Step Simplification" (formula "37"))
                                                   (rule "closeFalse" (formula "37"))
                                                )
                                             )
                                          )
                                       )
                                    )
                                    (branch "(self_0, List::$seq) in self_0.footprint@anon_heap_ArrayList<<anonHeapFunction>> FALSE"
                                       (rule "eqSymm" (formula "16"))
                                       (rule "applyEq" (formula "24") (term "0,1") (ifseqformula "16"))
                                        (builtin "One Step Simplification" (formula "24"))
                                       (rule "applyEq" (formula "54") (term "0,2,0,0,1") (ifseqformula "16"))
                                        (builtin "One Step Simplification" (formula "54"))
                                       (rule "applyEqRigid" (formula "25") (term "0,1") (ifseqformula "16"))
                                        (builtin "One Step Simplification" (formula "25"))
                                       (rule "applyEqRigid" (formula "17") (term "1") (ifseqformula "16"))
                                       (rule "applyEq" (formula "24") (term "2,0") (ifseqformula "16"))
                                       (rule "elementOfSubsetOfUnion2" (formula "24") (term "0,0") (ifseqformula "19") (ifseqformula "45"))
                                       (rule "elementOfIntersect" (formula "24") (term "1"))
                                        (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "53")))
                                       (rule "replaceKnownSelect_taclet0_4" (formula "24") (term "0,0,1,1"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet0_5" (formula "24") (term "0,0,1,1"))
                                       (rule "replace_known_left" (formula "24") (term "0,1,1") (ifseqformula "8"))
                                        (builtin "One Step Simplification" (formula "24"))
                                       (rule "notLeft" (formula "24"))
                                       (rule "replace_known_right" (formula "24") (term "0,0") (ifseqformula "45"))
                                        (builtin "One Step Simplification" (formula "24"))
                                       (rule "eqSymm" (formula "24"))
                                       (rule "applyEqRigid" (formula "55") (term "2,0,0,1") (ifseqformula "24"))
                                       (rule "applyEqRigid" (formula "25") (term "1") (ifseqformula "24"))
                                       (rule "elementOfSubsetOfUnion2" (formula "45") (ifseqformula "19") (ifseqformula "46"))
                                       (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "46"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "notLeft" (formula "1"))
                                       (rule "elementOfIntersect" (formula "45"))
                                        (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "46")))
                                       (rule "false_right" (formula "45"))
                                       (rule "ifthenelse_split" (formula "18") (term "0"))
                                       (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_ArrayList<<anonHeapFunction>> TRUE"
                                          (rule "applyEqReverse" (formula "28") (term "0,1") (ifseqformula "19"))
                                          (rule "applyEqReverse" (formula "20") (term "0") (ifseqformula "19"))
                                          (rule "applyEqReverse" (formula "27") (term "2,0") (ifseqformula "19"))
                                          (rule "applyEqReverse" (formula "27") (term "2,0,0") (ifseqformula "19"))
                                          (rule "applyEqReverse" (formula "23") (term "1,0") (ifseqformula "19"))
                                          (rule "applyEqReverse" (formula "46") (term "2") (ifseqformula "19"))
                                          (rule "hideAuxiliaryEq" (formula "19"))
                                          (rule "elementOfSubsetImpliesElementOfSuperset" (formula "18") (ifseqformula "11"))
                                           (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "54")) (ifInst ""  (formula "53")))
                                          (rule "true_left" (formula "18"))
                                          (rule "elementOfSubsetOfUnion2" (formula "45") (ifseqformula "19") (ifseqformula "46"))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "46"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "notLeft" (formula "1"))
                                          (rule "elementOfIntersect" (formula "45"))
                                           (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "46")))
                                          (rule "false_right" (formula "45"))
                                          (rule "commuteUnion" (formula "27") (term "1"))
                                          (rule "ifthenelse_split" (formula "42") (term "0"))
                                          (branch "(self_1, List::$footprint) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> TRUE"
                                             (rule "applyEqReverse" (formula "44") (term "0") (ifseqformula "43"))
                                             (rule "hideAuxiliaryEq" (formula "43"))
                                             (rule "elementOfSubsetImpliesElementOfSuperset" (formula "42") (ifseqformula "35"))
                                              (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "52")))
                                             (rule "replaceKnownSelect_taclet0000000_18" (formula "42") (term "0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet0000000_21" (formula "42") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "42"))
                                             (rule "true_left" (formula "42"))
                                             (rule "ifthenelse_split" (formula "40") (term "0"))
                                             (branch "(self_1, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> TRUE"
                                                (rule "elementOfSubsetImpliesElementOfSuperset" (formula "40") (ifseqformula "35"))
                                                 (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "53")))
                                                (rule "replaceKnownSelect_taclet0000000_18" (formula "40") (term "0,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet0000000_21" (formula "40") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "40"))
                                                (rule "true_left" (formula "40"))
                                                (rule "ifthenelse_split" (formula "56") (term "0,0,1"))
                                                (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> TRUE"
                                                   (rule "elementOfSubsetImpliesElementOfSuperset" (formula "1") (ifseqformula "36"))
                                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "56")))
                                                   (rule "notLeft" (formula "1"))
                                                   (rule "pullOutSelect" (formula "47") (term "0") (inst "selectSK=java_lang_Object_created__6"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
                                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "57")))
                                                   (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "2,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "2,0"))
                                                   (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "0,0,0,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "0,0,0,0"))
                                                   (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "10"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "applyEqReverse" (formula "48") (term "0") (ifseqformula "1"))
                                                   (rule "close" (formula "48") (ifseqformula "10"))
                                                )
                                                (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> FALSE"
                                                    (builtin "One Step Simplification" (formula "57"))
                                                   (rule "qeq_literals" (formula "57") (term "1"))
                                                    (builtin "One Step Simplification" (formula "57"))
                                                   (rule "false_right" (formula "57"))
                                                   (rule "ifthenelse_split" (formula "26") (term "0"))
                                                   (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_add<<anonHeapFunction>> TRUE"
                                                      (rule "applyEqReverse" (formula "28") (term "0") (ifseqformula "27"))
                                                      (rule "hideAuxiliaryEq" (formula "27"))
                                                      (rule "elementOfSubsetImpliesElementOfSuperset" (formula "26") (ifseqformula "19"))
                                                      (rule "elementOfUnion" (formula "26"))
                                                       (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "18")))
                                                      (rule "true_left" (formula "26"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "42") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "42"))
                                                      (rule "andLeft" (formula "42"))
                                                      (rule "getOfSeqSingleton" (formula "43") (term "1,1,0"))
                                                      (rule "castDel" (formula "43") (term "1,1,1,0"))
                                                      (rule "castDel" (formula "43") (term "2,1,1,0"))
                                                      (rule "eqSymm" (formula "43") (term "1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "43") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "43") (term "0,0,0"))
                                                      (rule "applyEqRigid" (formula "43") (term "0,0,1,0,0,1,0,0") (ifseqformula "44"))
                                                       (builtin "One Step Simplification" (formula "43"))
                                                      (rule "mul_literals" (formula "43") (term "1,0,0,1,0,0"))
                                                      (rule "add_literals" (formula "43") (term "0,0,1,0,0"))
                                                      (rule "add_zero_left" (formula "43") (term "0,1,0,0"))
                                                      (rule "applyEqRigid" (formula "42") (term "0,0") (ifseqformula "44"))
                                                       (builtin "One Step Simplification" (formula "42"))
                                                      (rule "true_left" (formula "42"))
                                                      (rule "applyEqRigid" (formula "42") (term "0,1,1,0") (ifseqformula "43"))
                                                      (rule "getOfSeqSingleton" (formula "42") (term "1,1,0"))
                                                      (rule "castDel" (formula "42") (term "2,1,1,0"))
                                                      (rule "castDel" (formula "42") (term "1,1,1,0"))
                                                       (builtin "One Step Simplification" (formula "42"))
                                                      (rule "true_left" (formula "42"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "34") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "34"))
                                                      (rule "andLeft" (formula "34"))
                                                      (rule "inEqSimp_ltToLeq" (formula "35") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "35") (term "0,0,0"))
                                                      (rule "applyEq" (formula "35") (term "0,0,1,0,0,1,0,0") (ifseqformula "36"))
                                                       (builtin "One Step Simplification" (formula "35"))
                                                      (rule "mul_literals" (formula "35") (term "1,0,0,1,0,0"))
                                                      (rule "add_literals" (formula "35") (term "0,0,1,0,0"))
                                                      (rule "applyEq" (formula "34") (term "0,0") (ifseqformula "36"))
                                                       (builtin "One Step Simplification" (formula "34"))
                                                      (rule "true_left" (formula "34"))
                                                      (rule "applyEq" (formula "34") (term "0,0,1,0") (ifseqformula "35"))
                                                       (builtin "One Step Simplification" (formula "34"))
                                                      (rule "true_left" (formula "34"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "16") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "16"))
                                                      (rule "equal_literals" (formula "16") (term "0"))
                                                       (builtin "One Step Simplification" (formula "16"))
                                                      (rule "closeFalse" (formula "16"))
                                                   )
                                                   (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_add<<anonHeapFunction>> FALSE"
                                                      (rule "applyEqReverse" (formula "27") (term "0") (ifseqformula "26"))
                                                       (builtin "One Step Simplification" (formula "27"))
                                                      (rule "true_left" (formula "27"))
                                                      (rule "hideAuxiliaryEq" (formula "26"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "40") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "40"))
                                                      (rule "andLeft" (formula "40"))
                                                      (rule "getOfSeqSingleton" (formula "41") (term "1,1,0"))
                                                      (rule "castDel" (formula "41") (term "2,1,1,0"))
                                                      (rule "castDel" (formula "41") (term "1,1,1,0"))
                                                      (rule "eqSymm" (formula "41") (term "1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "41") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "41") (term "0,0,0"))
                                                      (rule "applyEqRigid" (formula "41") (term "0,1,1,0") (ifseqformula "42"))
                                                      (rule "getOfSeqSingleton" (formula "41") (term "1,1,0"))
                                                      (rule "castDel" (formula "41") (term "1,1,1,0"))
                                                      (rule "castDel" (formula "41") (term "2,1,1,0"))
                                                       (builtin "One Step Simplification" (formula "41"))
                                                      (rule "true_left" (formula "41"))
                                                      (rule "applyEq" (formula "40") (term "0,0") (ifseqformula "41"))
                                                       (builtin "One Step Simplification" (formula "40"))
                                                      (rule "true_left" (formula "40"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "32") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "32"))
                                                      (rule "andLeft" (formula "32"))
                                                      (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0,0"))
                                                      (rule "applyEq" (formula "33") (term "0,0,1,0,0,1,0,0") (ifseqformula "34"))
                                                       (builtin "One Step Simplification" (formula "33"))
                                                      (rule "mul_literals" (formula "33") (term "1,0,0,1,0,0"))
                                                      (rule "add_zero_right" (formula "33") (term "0,0,1,0,0"))
                                                      (rule "applyEq" (formula "32") (term "0,0") (ifseqformula "34"))
                                                       (builtin "One Step Simplification" (formula "32"))
                                                      (rule "true_left" (formula "32"))
                                                      (rule "applyEq" (formula "32") (term "0,0,1,0") (ifseqformula "33"))
                                                       (builtin "One Step Simplification" (formula "32"))
                                                      (rule "true_left" (formula "32"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "16") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "16"))
                                                      (rule "equal_literals" (formula "16") (term "0"))
                                                       (builtin "One Step Simplification" (formula "16"))
                                                      (rule "closeFalse" (formula "16"))
                                                   )
                                                )
                                             )
                                             (branch "(self_1, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> FALSE"
                                                (rule "eqSymm" (formula "40"))
                                                (rule "applyEq" (formula "41") (term "1") (ifseqformula "40"))
                                                (rule "ifthenelse_split" (formula "56") (term "0,0,1"))
                                                (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> TRUE"
                                                   (rule "elementOfSubsetImpliesElementOfSuperset" (formula "1") (ifseqformula "36"))
                                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "56")))
                                                   (rule "notLeft" (formula "1"))
                                                   (rule "pullOutSelect" (formula "46") (term "0") (inst "selectSK=java_lang_Object_created__6"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
                                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "57")))
                                                   (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "2,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "2,0"))
                                                   (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "0,0,0,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "0,0,0,0"))
                                                   (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "10"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "applyEqReverse" (formula "47") (term "0") (ifseqformula "1"))
                                                   (rule "close" (formula "47") (ifseqformula "10"))
                                                )
                                                (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> FALSE"
                                                    (builtin "One Step Simplification" (formula "57"))
                                                   (rule "qeq_literals" (formula "57") (term "1"))
                                                    (builtin "One Step Simplification" (formula "57"))
                                                   (rule "false_right" (formula "57"))
                                                   (rule "ifthenelse_split" (formula "26") (term "0"))
                                                   (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_add<<anonHeapFunction>> TRUE"
                                                      (rule "applyEqReverse" (formula "28") (term "0") (ifseqformula "27"))
                                                      (rule "hideAuxiliaryEq" (formula "27"))
                                                      (rule "elementOfSubsetImpliesElementOfSuperset" (formula "26") (ifseqformula "19"))
                                                      (rule "elementOfUnion" (formula "26"))
                                                       (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "18")))
                                                      (rule "true_left" (formula "26"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "34") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "34"))
                                                      (rule "andLeft" (formula "34"))
                                                      (rule "inEqSimp_ltToLeq" (formula "35") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "35") (term "0,0,0"))
                                                      (rule "applyEq" (formula "35") (term "0,0,1,0") (ifseqformula "36"))
                                                       (builtin "One Step Simplification" (formula "35"))
                                                      (rule "true_left" (formula "35"))
                                                      (rule "applyEq" (formula "34") (term "0,0") (ifseqformula "35"))
                                                       (builtin "One Step Simplification" (formula "34"))
                                                      (rule "true_left" (formula "34"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "16") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "16"))
                                                      (rule "equal_literals" (formula "16") (term "0"))
                                                       (builtin "One Step Simplification" (formula "16"))
                                                      (rule "closeFalse" (formula "16"))
                                                   )
                                                   (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_add<<anonHeapFunction>> FALSE"
                                                      (rule "applyEqReverse" (formula "27") (term "0") (ifseqformula "26"))
                                                       (builtin "One Step Simplification" (formula "27"))
                                                      (rule "true_left" (formula "27"))
                                                      (rule "hideAuxiliaryEq" (formula "26"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "32") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "32"))
                                                      (rule "andLeft" (formula "32"))
                                                      (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0,0"))
                                                      (rule "applyEq" (formula "32") (term "0,0") (ifseqformula "34"))
                                                       (builtin "One Step Simplification" (formula "32"))
                                                      (rule "true_left" (formula "32"))
                                                      (rule "applyEq" (formula "32") (term "0,0,1,0") (ifseqformula "33"))
                                                       (builtin "One Step Simplification" (formula "32"))
                                                      (rule "true_left" (formula "32"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "16") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "16"))
                                                      (rule "equal_literals" (formula "16") (term "0"))
                                                       (builtin "One Step Simplification" (formula "16"))
                                                      (rule "closeFalse" (formula "16"))
                                                   )
                                                )
                                             )
                                          )
                                          (branch "(self_1, List::$footprint) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> FALSE"
                                             (rule "applyEqReverse" (formula "43") (term "0") (ifseqformula "42"))
                                              (builtin "One Step Simplification" (formula "43"))
                                             (rule "true_left" (formula "43"))
                                             (rule "hideAuxiliaryEq" (formula "42"))
                                             (rule "ifthenelse_split" (formula "40") (term "0"))
                                             (branch "(self_1, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> TRUE"
                                                (rule "elementOfSubsetImpliesElementOfSuperset" (formula "40") (ifseqformula "35"))
                                                 (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "52")))
                                                (rule "replaceKnownSelect_taclet0000000_18" (formula "40") (term "0,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet0000000_21" (formula "40") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "40"))
                                                (rule "true_left" (formula "40"))
                                                (rule "ifthenelse_split" (formula "55") (term "0,0,1"))
                                                (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> TRUE"
                                                   (rule "elementOfSubsetImpliesElementOfSuperset" (formula "1") (ifseqformula "36"))
                                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "55")))
                                                   (rule "notLeft" (formula "1"))
                                                   (rule "pullOutSelect" (formula "45") (term "0") (inst "selectSK=java_lang_Object_created__6"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
                                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "56")))
                                                   (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "2,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "2,0"))
                                                   (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "0,0,0,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "0,0,0,0"))
                                                   (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "10"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "applyEqReverse" (formula "46") (term "0") (ifseqformula "1"))
                                                   (rule "close" (formula "46") (ifseqformula "10"))
                                                )
                                                (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> FALSE"
                                                    (builtin "One Step Simplification" (formula "56"))
                                                   (rule "qeq_literals" (formula "56") (term "1"))
                                                    (builtin "One Step Simplification" (formula "56"))
                                                   (rule "false_right" (formula "56"))
                                                   (rule "ifthenelse_split" (formula "26") (term "0"))
                                                   (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_add<<anonHeapFunction>> TRUE"
                                                      (rule "applyEqReverse" (formula "28") (term "0") (ifseqformula "27"))
                                                      (rule "hideAuxiliaryEq" (formula "27"))
                                                      (rule "elementOfSubsetImpliesElementOfSuperset" (formula "26") (ifseqformula "19"))
                                                      (rule "elementOfUnion" (formula "26"))
                                                       (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "18")))
                                                      (rule "true_left" (formula "26"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "34") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "34"))
                                                      (rule "andLeft" (formula "34"))
                                                      (rule "inEqSimp_ltToLeq" (formula "35") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "35") (term "0,0,0"))
                                                      (rule "applyEq" (formula "35") (term "0,0,1,0") (ifseqformula "36"))
                                                       (builtin "One Step Simplification" (formula "35"))
                                                      (rule "true_left" (formula "35"))
                                                      (rule "applyEq" (formula "34") (term "0,0") (ifseqformula "35"))
                                                       (builtin "One Step Simplification" (formula "34"))
                                                      (rule "true_left" (formula "34"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "42") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "42"))
                                                      (rule "andLeft" (formula "42"))
                                                      (rule "getOfSeqSingleton" (formula "43") (term "1,1,0"))
                                                      (rule "castDel" (formula "43") (term "2,1,1,0"))
                                                      (rule "castDel" (formula "43") (term "1,1,1,0"))
                                                      (rule "eqSymm" (formula "43") (term "1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "43") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "43") (term "0,0,0"))
                                                      (rule "applyEqRigid" (formula "43") (term "0,1,1,0") (ifseqformula "44"))
                                                      (rule "getOfSeqSingleton" (formula "43") (term "1,1,0"))
                                                      (rule "castDel" (formula "43") (term "2,1,1,0"))
                                                      (rule "castDel" (formula "43") (term "1,1,1,0"))
                                                       (builtin "One Step Simplification" (formula "43"))
                                                      (rule "true_left" (formula "43"))
                                                      (rule "applyEqRigid" (formula "42") (term "0,0") (ifseqformula "43"))
                                                       (builtin "One Step Simplification" (formula "42"))
                                                      (rule "true_left" (formula "42"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "16") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "16"))
                                                      (rule "equal_literals" (formula "16") (term "0"))
                                                       (builtin "One Step Simplification" (formula "16"))
                                                      (rule "closeFalse" (formula "16"))
                                                   )
                                                   (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_add<<anonHeapFunction>> FALSE"
                                                      (rule "applyEqReverse" (formula "27") (term "0") (ifseqformula "26"))
                                                       (builtin "One Step Simplification" (formula "27"))
                                                      (rule "true_left" (formula "27"))
                                                      (rule "hideAuxiliaryEq" (formula "26"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "32") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "32"))
                                                      (rule "andLeft" (formula "32"))
                                                      (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0,0"))
                                                      (rule "applyEq" (formula "32") (term "0,0") (ifseqformula "34"))
                                                       (builtin "One Step Simplification" (formula "32"))
                                                      (rule "true_left" (formula "32"))
                                                      (rule "applyEq" (formula "32") (term "0,0,1,0,0,1,0,0") (ifseqformula "33"))
                                                       (builtin "One Step Simplification" (formula "32"))
                                                      (rule "mul_literals" (formula "32") (term "1,0,0,1,0,0"))
                                                      (rule "add_literals" (formula "32") (term "0,0,1,0,0"))
                                                      (rule "applyEq" (formula "32") (term "0,0,1,0") (ifseqformula "33"))
                                                       (builtin "One Step Simplification" (formula "32"))
                                                      (rule "true_left" (formula "32"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "40") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "40"))
                                                      (rule "andLeft" (formula "40"))
                                                      (rule "getOfSeqSingleton" (formula "41") (term "1,1,0"))
                                                      (rule "castDel" (formula "41") (term "1,1,1,0"))
                                                      (rule "castDel" (formula "41") (term "2,1,1,0"))
                                                      (rule "eqSymm" (formula "41") (term "1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "41") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "41") (term "0,0,0"))
                                                      (rule "applyEqRigid" (formula "40") (term "0,0") (ifseqformula "42"))
                                                       (builtin "One Step Simplification" (formula "40"))
                                                      (rule "true_left" (formula "40"))
                                                      (rule "applyEq" (formula "40") (term "0,1,1,0") (ifseqformula "41"))
                                                      (rule "getOfSeqSingleton" (formula "40") (term "1,1,0"))
                                                      (rule "castDel" (formula "40") (term "1,1,1,0"))
                                                      (rule "castDel" (formula "40") (term "2,1,1,0"))
                                                       (builtin "One Step Simplification" (formula "40"))
                                                      (rule "true_left" (formula "40"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "16") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "16"))
                                                      (rule "equal_literals" (formula "16") (term "0"))
                                                       (builtin "One Step Simplification" (formula "16"))
                                                      (rule "closeFalse" (formula "16"))
                                                   )
                                                )
                                             )
                                             (branch "(self_1, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> FALSE"
                                                (rule "eqSymm" (formula "40"))
                                                (rule "applyEq" (formula "41") (term "1") (ifseqformula "40"))
                                                (rule "ifthenelse_split" (formula "55") (term "0,0,1"))
                                                (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> TRUE"
                                                   (rule "elementOfSubsetImpliesElementOfSuperset" (formula "1") (ifseqformula "36"))
                                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "55")))
                                                   (rule "notLeft" (formula "1"))
                                                   (rule "pullOutSelect" (formula "44") (term "0") (inst "selectSK=java_lang_Object_created__6"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
                                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "56")))
                                                   (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "2,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "2,0"))
                                                   (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "0,0,0,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "0,0,0,0"))
                                                   (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "10"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "applyEqReverse" (formula "45") (term "0") (ifseqformula "1"))
                                                   (rule "close" (formula "45") (ifseqformula "10"))
                                                )
                                                (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> FALSE"
                                                    (builtin "One Step Simplification" (formula "56"))
                                                   (rule "qeq_literals" (formula "56") (term "1"))
                                                    (builtin "One Step Simplification" (formula "56"))
                                                   (rule "false_right" (formula "56"))
                                                   (rule "ifthenelse_split" (formula "26") (term "0"))
                                                   (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_add<<anonHeapFunction>> TRUE"
                                                      (rule "applyEqReverse" (formula "28") (term "0") (ifseqformula "27"))
                                                      (rule "hideAuxiliaryEq" (formula "27"))
                                                      (rule "elementOfSubsetImpliesElementOfSuperset" (formula "26") (ifseqformula "19"))
                                                      (rule "elementOfUnion" (formula "26"))
                                                       (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "18")))
                                                      (rule "true_left" (formula "26"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "34") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "34"))
                                                      (rule "andLeft" (formula "34"))
                                                      (rule "inEqSimp_ltToLeq" (formula "35") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "35") (term "0,0,0"))
                                                      (rule "applyEq" (formula "34") (term "0,0") (ifseqformula "36"))
                                                       (builtin "One Step Simplification" (formula "34"))
                                                      (rule "true_left" (formula "34"))
                                                      (rule "applyEq" (formula "34") (term "0,0,1,0") (ifseqformula "35"))
                                                       (builtin "One Step Simplification" (formula "34"))
                                                      (rule "true_left" (formula "34"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "16") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "16"))
                                                      (rule "equal_literals" (formula "16") (term "0"))
                                                       (builtin "One Step Simplification" (formula "16"))
                                                      (rule "closeFalse" (formula "16"))
                                                   )
                                                   (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_add<<anonHeapFunction>> FALSE"
                                                      (rule "applyEqReverse" (formula "27") (term "0") (ifseqformula "26"))
                                                       (builtin "One Step Simplification" (formula "27"))
                                                      (rule "true_left" (formula "27"))
                                                      (rule "hideAuxiliaryEq" (formula "26"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "32") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "32"))
                                                      (rule "andLeft" (formula "32"))
                                                      (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0,0"))
                                                      (rule "applyEq" (formula "33") (term "0,0,1,0") (ifseqformula "34"))
                                                       (builtin "One Step Simplification" (formula "33"))
                                                      (rule "true_left" (formula "33"))
                                                      (rule "applyEq" (formula "32") (term "0,0") (ifseqformula "33"))
                                                       (builtin "One Step Simplification" (formula "32"))
                                                      (rule "true_left" (formula "32"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "16") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "16"))
                                                      (rule "equal_literals" (formula "16") (term "0"))
                                                       (builtin "One Step Simplification" (formula "16"))
                                                      (rule "closeFalse" (formula "16"))
                                                   )
                                                )
                                             )
                                          )
                                       )
                                       (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_ArrayList<<anonHeapFunction>> FALSE"
                                          (rule "applyEqReverse" (formula "22") (term "1,0") (ifseqformula "18"))
                                          (rule "applyEqReverse" (formula "19") (term "0") (ifseqformula "18"))
                                           (builtin "One Step Simplification" (formula "19"))
                                          (rule "true_left" (formula "19"))
                                          (rule "applyEqReverse" (formula "25") (term "2,0,0") (ifseqformula "18"))
                                          (rule "applyEqReverse" (formula "25") (term "2,0") (ifseqformula "18"))
                                          (rule "applyEqReverse" (formula "45") (term "2") (ifseqformula "18"))
                                          (rule "applyEqReverse" (formula "26") (term "0,1") (ifseqformula "18"))
                                          (rule "hideAuxiliaryEq" (formula "18"))
                                          (rule "replace_known_right" (formula "24") (term "0,0") (ifseqformula "43"))
                                           (builtin "One Step Simplification" (formula "24"))
                                          (rule "applyEqReverse" (formula "25") (term "0") (ifseqformula "24"))
                                           (builtin "One Step Simplification" (formula "25"))
                                          (rule "true_left" (formula "25"))
                                          (rule "hideAuxiliaryEq" (formula "24"))
                                          (rule "ifthenelse_split" (formula "38") (term "0"))
                                          (branch "(self_1, List::$footprint) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> TRUE"
                                             (rule "applyEqReverse" (formula "40") (term "0") (ifseqformula "39"))
                                             (rule "hideAuxiliaryEq" (formula "39"))
                                             (rule "elementOfSubsetImpliesElementOfSuperset" (formula "38") (ifseqformula "31"))
                                              (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "48")))
                                             (rule "replaceKnownSelect_taclet0000000_18" (formula "38") (term "0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet0000000_21" (formula "38") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "38"))
                                             (rule "true_left" (formula "38"))
                                             (rule "ifthenelse_split" (formula "36") (term "0"))
                                             (branch "(self_1, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> TRUE"
                                                (rule "elementOfSubsetImpliesElementOfSuperset" (formula "36") (ifseqformula "31"))
                                                 (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "49")))
                                                (rule "replaceKnownSelect_taclet0000000_18" (formula "36") (term "0,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet0000000_21" (formula "36") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "36"))
                                                (rule "true_left" (formula "36"))
                                                (rule "ifthenelse_split" (formula "52") (term "0,0,1"))
                                                (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> TRUE"
                                                   (rule "elementOfSubsetImpliesElementOfSuperset" (formula "1") (ifseqformula "32"))
                                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "52")))
                                                   (rule "notLeft" (formula "1"))
                                                   (rule "pullOutSelect" (formula "43") (term "0") (inst "selectSK=java_lang_Object_created__6"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "22"))
                                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")))
                                                   (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "2,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "2,0"))
                                                   (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "0,0,0,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "0,0,0,0"))
                                                   (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "10"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "applyEqReverse" (formula "44") (term "0") (ifseqformula "1"))
                                                   (rule "close" (formula "44") (ifseqformula "10"))
                                                )
                                                (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> FALSE"
                                                    (builtin "One Step Simplification" (formula "53"))
                                                   (rule "qeq_literals" (formula "53") (term "1"))
                                                    (builtin "One Step Simplification" (formula "53"))
                                                   (rule "false_right" (formula "53"))
                                                   (rule "equalityToSeqGetAndSeqLenLeft" (formula "38") (inst "iv=iv"))
                                                    (builtin "One Step Simplification" (formula "38"))
                                                   (rule "andLeft" (formula "38"))
                                                   (rule "getOfSeqSingleton" (formula "39") (term "1,1,0"))
                                                   (rule "castDel" (formula "39") (term "1,1,1,0"))
                                                   (rule "castDel" (formula "39") (term "2,1,1,0"))
                                                   (rule "eqSymm" (formula "39") (term "1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "39") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "39") (term "0,0,0"))
                                                   (rule "applyEqRigid" (formula "39") (term "0,0,1,0,0,1,0,0") (ifseqformula "40"))
                                                    (builtin "One Step Simplification" (formula "39"))
                                                   (rule "mul_literals" (formula "39") (term "1,0,0,1,0,0"))
                                                   (rule "add_literals" (formula "39") (term "0,0,1,0,0"))
                                                   (rule "add_zero_left" (formula "39") (term "0,1,0,0"))
                                                   (rule "applyEq" (formula "38") (term "0,0") (ifseqformula "40"))
                                                    (builtin "One Step Simplification" (formula "38"))
                                                   (rule "true_left" (formula "38"))
                                                   (rule "applyEq" (formula "38") (term "0,1,1,0") (ifseqformula "39"))
                                                   (rule "getOfSeqSingleton" (formula "38") (term "1,1,0"))
                                                   (rule "castDel" (formula "38") (term "1,1,1,0"))
                                                   (rule "castDel" (formula "38") (term "2,1,1,0"))
                                                    (builtin "One Step Simplification" (formula "38"))
                                                   (rule "true_left" (formula "38"))
                                                   (rule "equalityToSeqGetAndSeqLenLeft" (formula "30") (inst "iv=iv"))
                                                    (builtin "One Step Simplification" (formula "30"))
                                                   (rule "andLeft" (formula "30"))
                                                   (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "31") (term "0,0,0"))
                                                   (rule "applyEq" (formula "31") (term "0,0,1,0,0,1,0,0") (ifseqformula "32"))
                                                    (builtin "One Step Simplification" (formula "31"))
                                                   (rule "mul_literals" (formula "31") (term "1,0,0,1,0,0"))
                                                   (rule "add_literals" (formula "31") (term "0,0,1,0,0"))
                                                   (rule "applyEq" (formula "30") (term "0,0") (ifseqformula "32"))
                                                    (builtin "One Step Simplification" (formula "30"))
                                                   (rule "true_left" (formula "30"))
                                                   (rule "applyEq" (formula "30") (term "0,0,1,0") (ifseqformula "31"))
                                                    (builtin "One Step Simplification" (formula "30"))
                                                   (rule "true_left" (formula "30"))
                                                   (rule "equalityToSeqGetAndSeqLenLeft" (formula "16") (inst "iv=iv"))
                                                    (builtin "One Step Simplification" (formula "16"))
                                                   (rule "equal_literals" (formula "16") (term "0"))
                                                    (builtin "One Step Simplification" (formula "16"))
                                                   (rule "closeFalse" (formula "16"))
                                                )
                                             )
                                             (branch "(self_1, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> FALSE"
                                                (rule "eqSymm" (formula "36"))
                                                (rule "applyEq" (formula "37") (term "1") (ifseqformula "36"))
                                                (rule "ifthenelse_split" (formula "52") (term "0,0,1"))
                                                (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> TRUE"
                                                   (rule "elementOfSubsetImpliesElementOfSuperset" (formula "1") (ifseqformula "32"))
                                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "52")))
                                                   (rule "notLeft" (formula "1"))
                                                   (rule "pullOutSelect" (formula "42") (term "0") (inst "selectSK=java_lang_Object_created__6"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "22"))
                                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")))
                                                   (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "2,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "2,0"))
                                                   (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "0,0,0,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "0,0,0,0"))
                                                   (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "10"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "applyEqReverse" (formula "43") (term "0") (ifseqformula "1"))
                                                   (rule "close" (formula "43") (ifseqformula "10"))
                                                )
                                                (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> FALSE"
                                                    (builtin "One Step Simplification" (formula "53"))
                                                   (rule "qeq_literals" (formula "53") (term "1"))
                                                    (builtin "One Step Simplification" (formula "53"))
                                                   (rule "false_right" (formula "53"))
                                                   (rule "equalityToSeqGetAndSeqLenLeft" (formula "30") (inst "iv=iv"))
                                                    (builtin "One Step Simplification" (formula "30"))
                                                   (rule "andLeft" (formula "30"))
                                                   (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "31") (term "0,0,0"))
                                                   (rule "applyEq" (formula "30") (term "0,0") (ifseqformula "32"))
                                                    (builtin "One Step Simplification" (formula "30"))
                                                   (rule "true_left" (formula "30"))
                                                   (rule "applyEq" (formula "30") (term "0,0,1,0") (ifseqformula "31"))
                                                    (builtin "One Step Simplification" (formula "30"))
                                                   (rule "true_left" (formula "30"))
                                                   (rule "equalityToSeqGetAndSeqLenLeft" (formula "16") (inst "iv=iv"))
                                                    (builtin "One Step Simplification" (formula "16"))
                                                   (rule "equal_literals" (formula "16") (term "0"))
                                                    (builtin "One Step Simplification" (formula "16"))
                                                   (rule "closeFalse" (formula "16"))
                                                )
                                             )
                                          )
                                          (branch "(self_1, List::$footprint) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> FALSE"
                                             (rule "applyEqReverse" (formula "39") (term "0") (ifseqformula "38"))
                                              (builtin "One Step Simplification" (formula "39"))
                                             (rule "true_left" (formula "39"))
                                             (rule "hideAuxiliaryEq" (formula "38"))
                                             (rule "ifthenelse_split" (formula "36") (term "0"))
                                             (branch "(self_1, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> TRUE"
                                                (rule "elementOfSubsetImpliesElementOfSuperset" (formula "36") (ifseqformula "31"))
                                                 (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "48")))
                                                (rule "replaceKnownSelect_taclet0000000_18" (formula "36") (term "0,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet0000000_21" (formula "36") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "36"))
                                                (rule "true_left" (formula "36"))
                                                (rule "ifthenelse_split" (formula "51") (term "0,0,1"))
                                                (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> TRUE"
                                                   (rule "elementOfSubsetImpliesElementOfSuperset" (formula "1") (ifseqformula "32"))
                                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "51")))
                                                   (rule "notLeft" (formula "1"))
                                                   (rule "pullOutSelect" (formula "41") (term "0") (inst "selectSK=java_lang_Object_created__6"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "22"))
                                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "52")))
                                                   (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "2,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "2,0"))
                                                   (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "0,0,0,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "0,0,0,0"))
                                                   (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "10"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "applyEqReverse" (formula "42") (term "0") (ifseqformula "1"))
                                                   (rule "close" (formula "42") (ifseqformula "10"))
                                                )
                                                (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> FALSE"
                                                    (builtin "One Step Simplification" (formula "52"))
                                                   (rule "qeq_literals" (formula "52") (term "1"))
                                                    (builtin "One Step Simplification" (formula "52"))
                                                   (rule "false_right" (formula "52"))
                                                   (rule "equalityToSeqGetAndSeqLenLeft" (formula "38") (inst "iv=iv"))
                                                    (builtin "One Step Simplification" (formula "38"))
                                                   (rule "andLeft" (formula "38"))
                                                   (rule "getOfSeqSingleton" (formula "39") (term "1,1,0"))
                                                   (rule "castDel" (formula "39") (term "2,1,1,0"))
                                                   (rule "castDel" (formula "39") (term "1,1,1,0"))
                                                   (rule "eqSymm" (formula "39") (term "1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "39") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "39") (term "0,0,0"))
                                                   (rule "applyEq" (formula "39") (term "0,1,1,0") (ifseqformula "40"))
                                                   (rule "getOfSeqSingleton" (formula "39") (term "1,1,0"))
                                                   (rule "castDel" (formula "39") (term "2,1,1,0"))
                                                   (rule "castDel" (formula "39") (term "1,1,1,0"))
                                                    (builtin "One Step Simplification" (formula "39"))
                                                   (rule "true_left" (formula "39"))
                                                   (rule "applyEq" (formula "38") (term "0,0") (ifseqformula "39"))
                                                    (builtin "One Step Simplification" (formula "38"))
                                                   (rule "true_left" (formula "38"))
                                                   (rule "equalityToSeqGetAndSeqLenLeft" (formula "30") (inst "iv=iv"))
                                                    (builtin "One Step Simplification" (formula "30"))
                                                   (rule "andLeft" (formula "30"))
                                                   (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "31") (term "0,0,0"))
                                                   (rule "applyEq" (formula "31") (term "0,0,1,0,0,1,0,0") (ifseqformula "32"))
                                                    (builtin "One Step Simplification" (formula "31"))
                                                   (rule "mul_literals" (formula "31") (term "1,0,0,1,0,0"))
                                                   (rule "add_zero_right" (formula "31") (term "0,0,1,0,0"))
                                                   (rule "applyEq" (formula "30") (term "0,0") (ifseqformula "32"))
                                                    (builtin "One Step Simplification" (formula "30"))
                                                   (rule "true_left" (formula "30"))
                                                   (rule "applyEq" (formula "30") (term "0,0,1,0") (ifseqformula "31"))
                                                    (builtin "One Step Simplification" (formula "30"))
                                                   (rule "true_left" (formula "30"))
                                                   (rule "equalityToSeqGetAndSeqLenLeft" (formula "16") (inst "iv=iv"))
                                                    (builtin "One Step Simplification" (formula "16"))
                                                   (rule "equal_literals" (formula "16") (term "0"))
                                                    (builtin "One Step Simplification" (formula "16"))
                                                   (rule "closeFalse" (formula "16"))
                                                )
                                             )
                                             (branch "(self_1, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> FALSE"
                                                (rule "eqSymm" (formula "36"))
                                                (rule "applyEqRigid" (formula "37") (term "1") (ifseqformula "36"))
                                                (rule "ifthenelse_split" (formula "51") (term "0,0,1"))
                                                (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> TRUE"
                                                   (rule "elementOfSubsetImpliesElementOfSuperset" (formula "1") (ifseqformula "32"))
                                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "51")))
                                                   (rule "notLeft" (formula "1"))
                                                   (rule "pullOutSelect" (formula "40") (term "0") (inst "selectSK=java_lang_Object_created__6"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "22"))
                                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "52")))
                                                   (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "2,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "2,0"))
                                                   (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "0,0,0,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "0,0,0,0"))
                                                   (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "10"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "applyEqReverse" (formula "41") (term "0") (ifseqformula "1"))
                                                   (rule "close" (formula "41") (ifseqformula "10"))
                                                )
                                                (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> FALSE"
                                                    (builtin "One Step Simplification" (formula "52"))
                                                   (rule "qeq_literals" (formula "52") (term "1"))
                                                    (builtin "One Step Simplification" (formula "52"))
                                                   (rule "false_right" (formula "52"))
                                                   (rule "equalityToSeqGetAndSeqLenLeft" (formula "30") (inst "iv=iv"))
                                                    (builtin "One Step Simplification" (formula "30"))
                                                   (rule "andLeft" (formula "30"))
                                                   (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "31") (term "0,0,0"))
                                                   (rule "applyEq" (formula "30") (term "0,0") (ifseqformula "32"))
                                                    (builtin "One Step Simplification" (formula "30"))
                                                   (rule "true_left" (formula "30"))
                                                   (rule "applyEq" (formula "30") (term "0,0,1,0") (ifseqformula "31"))
                                                    (builtin "One Step Simplification" (formula "30"))
                                                   (rule "true_left" (formula "30"))
                                                   (rule "equalityToSeqGetAndSeqLenLeft" (formula "16") (inst "iv=iv"))
                                                    (builtin "One Step Simplification" (formula "16"))
                                                   (rule "equal_literals" (formula "16") (term "0"))
                                                    (builtin "One Step Simplification" (formula "16"))
                                                   (rule "closeFalse" (formula "16"))
                                                )
                                             )
                                          )
                                       )
                                    )
                                 )
                                 (branch "Null reference (l = null)"
                                     (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "52")))
                                    (rule "closeTrue" (formula "54"))
                                 )
                              )
                              (branch "Assertion (l.get(1) == 42) No Effects"
                                  (builtin "One Step Simplification" (formula "55"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "variableDeclarationAssign" (formula "55") (term "1"))
                                 (rule "variableDeclaration" (formula "55") (term "1") (newnames "b"))
                                 (rule "applyEqRigid" (formula "55") (term "0,0,0,1,0,0,0,0,1") (ifseqformula "1"))
                                 (rule "applyEqRigid" (formula "55") (term "0,0,1,0,0,0,1") (ifseqformula "1"))
                                 (rule "compound_equality_comparison_1" (formula "55") (term "1") (inst "#v0=i"))
                                 (rule "variableDeclarationAssign" (formula "55") (term "1"))
                                 (rule "variableDeclaration" (formula "55") (term "1") (newnames "i"))
                                 (rule "equalityToSeqGetAndSeqLenLeft" (formula "19") (inst "iv=iv"))
                                  (builtin "One Step Simplification" (formula "19"))
                                 (rule "andLeft" (formula "19"))
                                 (rule "getOfSeqSingleton" (formula "20") (term "1,1,0"))
                                 (rule "castDel" (formula "20") (term "2,1,1,0"))
                                 (rule "castDel" (formula "20") (term "1,1,1,0"))
                                 (rule "eqSymm" (formula "20") (term "1,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0,0"))
                                 (rule "applyEqRigid" (formula "20") (term "0,1,1,0") (ifseqformula "21"))
                                 (rule "getOfSeqSingleton" (formula "20") (term "1,1,0"))
                                 (rule "castDel" (formula "20") (term "1,1,1,0"))
                                 (rule "castDel" (formula "20") (term "2,1,1,0"))
                                  (builtin "One Step Simplification" (formula "20"))
                                 (rule "true_left" (formula "20"))
                                 (rule "applyEqRigid" (formula "19") (term "0,0") (ifseqformula "20"))
                                  (builtin "One Step Simplification" (formula "19"))
                                 (rule "true_left" (formula "19"))
                                 (rule "equalityToSeqGetAndSeqLenLeft" (formula "18") (inst "iv=iv"))
                                  (builtin "One Step Simplification" (formula "18"))
                                 (rule "andLeft" (formula "18"))
                                 (rule "getOfSeqSingleton" (formula "19") (term "1,1,0"))
                                 (rule "castDel" (formula "19") (term "2,1,1,0"))
                                 (rule "castDel" (formula "19") (term "1,1,1,0"))
                                 (rule "eqSymm" (formula "19") (term "1,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
                                 (rule "applyEq" (formula "18") (term "0,0") (ifseqformula "20"))
                                  (builtin "One Step Simplification" (formula "18"))
                                 (rule "true_left" (formula "18"))
                                 (rule "applyEq" (formula "18") (term "0,1,1,0,0") (ifseqformula "19"))
                                  (builtin "One Step Simplification" (formula "18"))
                                 (rule "applyEq" (formula "18") (term "0,1,1,0") (ifseqformula "19"))
                                 (rule "getOfSeqSingleton" (formula "18") (term "1,1,0"))
                                 (rule "castDel" (formula "18") (term "2,1,1,0"))
                                 (rule "castDel" (formula "18") (term "1,1,1,0"))
                                  (builtin "One Step Simplification" (formula "18"))
                                 (rule "true_left" (formula "18"))
                                 (rule "equalityToSeqGetAndSeqLenLeft" (formula "27") (inst "iv=iv"))
                                 (rule "andLeft" (formula "27"))
                                 (rule "lenOfSeqConcat" (formula "27") (term "1"))
                                  (builtin "One Step Simplification" (formula "27"))
                                 (rule "add_literals" (formula "27") (term "1"))
                                 (rule "inEqSimp_commuteLeq" (formula "28") (term "0,0,0"))
                                 (rule "applyEq" (formula "28") (term "1,1,0,0") (ifseqformula "27"))
                                 (rule "applyEqRigid" (formula "27") (term "0,0") (ifseqformula "29"))
                                 (rule "lenOfSeqConcat" (formula "27") (term "0"))
                                  (builtin "One Step Simplification" (formula "27"))
                                 (rule "add_literals" (formula "27") (term "0"))
                                  (builtin "One Step Simplification" (formula "27"))
                                 (rule "true_left" (formula "27"))
                                 (rule "applyEq" (formula "27") (term "0,0,1,0") (ifseqformula "28"))
                                  (builtin "One Step Simplification" (formula "27"))
                                 (rule "true_left" (formula "27"))
                                 (rule "equalityToSeqGetAndSeqLenLeft" (formula "26") (inst "iv=iv"))
                                 (rule "andLeft" (formula "26"))
                                 (rule "lenOfSeqConcat" (formula "26") (term "1"))
                                  (builtin "One Step Simplification" (formula "26"))
                                 (rule "add_literals" (formula "26") (term "1"))
                                 (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0"))
                                 (rule "applyEq" (formula "27") (term "0,1,1,0,0") (ifseqformula "28"))
                                 (rule "lenOfSeqConcat" (formula "27") (term "1,1,0,0"))
                                  (builtin "One Step Simplification" (formula "27"))
                                 (rule "add_literals" (formula "27") (term "1,1,0,0"))
                                 (rule "applyEq" (formula "26") (term "0,0") (ifseqformula "28"))
                                 (rule "lenOfSeqConcat" (formula "26") (term "0"))
                                  (builtin "One Step Simplification" (formula "26"))
                                 (rule "add_literals" (formula "26") (term "0"))
                                  (builtin "One Step Simplification" (formula "26"))
                                 (rule "true_left" (formula "26"))
                                 (rule "applyEq" (formula "26") (term "0,0,1,0") (ifseqformula "27"))
                                  (builtin "One Step Simplification" (formula "26"))
                                 (rule "true_left" (formula "26"))
                                  (builtin "Use Operation Contract" (formula "55") (newnames "heapBefore_get,result_get,exc_5,heapAfter_get,anon_heap_get") (contract "List[List::get(int)].JML normal_behavior operation contract.0") (modality "box"))
                                 (branch "Post (get)"
                                     (builtin "One Step Simplification" (formula "57"))
                                     (builtin "One Step Simplification" (formula "48"))
                                    (rule "andLeft" (formula "48"))
                                    (rule "andLeft" (formula "49"))
                                    (rule "andLeft" (formula "50"))
                                    (rule "andLeft" (formula "50"))
                                    (rule "eqSymm" (formula "50"))
                                    (rule "assignment" (formula "60") (term "1"))
                                     (builtin "One Step Simplification" (formula "60"))
                                    (rule "castedGetAny" (formula "50") (term "0"))
                                    (rule "pullOutSelect" (formula "50") (term "0,0") (inst "selectSK=List_seq_5"))
                                    (rule "simplifySelectOfAnonEQ" (formula "50") (ifseqformula "48"))
                                     (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "59")))
                                    (rule "ifthenelse_negated" (formula "50") (term "0"))
                                    (rule "pullOutSelect" (formula "50") (term "0,0,0") (inst "selectSK=java_lang_Object_created__6"))
                                    (rule "simplifySelectOfAnonEQ" (formula "50") (ifseqformula "40"))
                                     (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "60")))
                                    (rule "ifthenelse_negated" (formula "50") (term "0"))
                                    (rule "pullOutSelect" (formula "51") (term "1,0") (inst "selectSK=List_seq_6"))
                                    (rule "simplifySelectOfAnonEQ" (formula "51") (ifseqformula "40"))
                                     (builtin "One Step Simplification" (formula "51") (ifInst ""  (formula "61")))
                                    (rule "pullOutSelect" (formula "50") (term "1,0") (inst "selectSK=java_lang_Object_created__7"))
                                    (rule "applyEq" (formula "52") (term "0,0,1,0,0") (ifseqformula "50"))
                                    (rule "applyEq" (formula "51") (term "0,0,0") (ifseqformula "50"))
                                    (rule "simplifySelectOfAnonEQ" (formula "50") (ifseqformula "32"))
                                     (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "62")))
                                    (rule "ifthenelse_negated" (formula "50") (term "0"))
                                    (rule "pullOutSelect" (formula "52") (term "2,0") (inst "selectSK=List_seq_7"))
                                    (rule "simplifySelectOfAnonEQ" (formula "52") (ifseqformula "32"))
                                     (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "63")))
                                    (rule "replaceKnownSelect_taclet0000_8" (formula "52") (term "2,0"))
                                    (rule "ifthenelse_negated" (formula "52") (term "0"))
                                    (rule "applyEq" (formula "52") (term "1,0") (ifseqformula "27"))
                                    (rule "pullOutSelect" (formula "50") (term "0,0,0") (inst "selectSK=java_lang_Object_created__8"))
                                    (rule "applyEq" (formula "53") (term "0,0,0") (ifseqformula "50"))
                                    (rule "applyEq" (formula "51") (term "1,0") (ifseqformula "50"))
                                    (rule "simplifySelectOfAnonEQ" (formula "50") (ifseqformula "24"))
                                     (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "64")))
                                    (rule "replaceKnownSelect_taclet0000_10" (formula "50") (term "2,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "50") (term "2,0"))
                                    (rule "replaceKnownSelect_taclet0000_10" (formula "50") (term "0,0,0,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "50") (term "0,0,0,0"))
                                    (rule "replace_known_left" (formula "50") (term "0,0,0") (ifseqformula "10"))
                                     (builtin "One Step Simplification" (formula "50"))
                                    (rule "applyEqReverse" (formula "53") (term "0,0,0") (ifseqformula "50"))
                                    (rule "applyEqReverse" (formula "51") (term "0,0,0") (ifseqformula "50"))
                                    (rule "applyEqReverse" (formula "51") (term "1,0") (ifseqformula "50"))
                                    (rule "hideAuxiliaryEq" (formula "50"))
                                    (rule "replace_known_left" (formula "52") (term "0,0") (ifseqformula "10"))
                                     (builtin "One Step Simplification" (formula "52"))
                                    (rule "applyEqReverse" (formula "53") (term "2,0") (ifseqformula "52"))
                                    (rule "hideAuxiliaryEq" (formula "52"))
                                    (rule "replace_known_left" (formula "50") (term "0,0") (ifseqformula "10"))
                                     (builtin "One Step Simplification" (formula "50"))
                                    (rule "applyEqReverse" (formula "51") (term "0,0,0") (ifseqformula "50"))
                                    (rule "applyEqReverse" (formula "51") (term "1,0") (ifseqformula "50"))
                                    (rule "applyEqReverse" (formula "52") (term "0,0,1,0,0") (ifseqformula "50"))
                                    (rule "hideAuxiliaryEq" (formula "50"))
                                    (rule "replace_known_left" (formula "51") (term "0,1,0,0") (ifseqformula "10"))
                                     (builtin "One Step Simplification" (formula "51"))
                                    (rule "replace_known_left" (formula "50") (term "0,0") (ifseqformula "10"))
                                     (builtin "One Step Simplification" (formula "50"))
                                    (rule "applyEqReverse" (formula "52") (term "0,0,0") (ifseqformula "50"))
                                    (rule "hideAuxiliaryEq" (formula "50"))
                                    (rule "replace_known_left" (formula "51") (term "0,0") (ifseqformula "10"))
                                     (builtin "One Step Simplification" (formula "51"))
                                    (rule "applyEqReverse" (formula "52") (term "0,0") (ifseqformula "51"))
                                    (rule "hideAuxiliaryEq" (formula "51"))
                                    (rule "equality_comparison_simple" (formula "61") (term "1"))
                                     (builtin "One Step Simplification" (formula "61"))
                                    (rule "methodCallEmpty" (formula "61") (term "1"))
                                    (rule "emptyModality" (formula "61") (term "1"))
                                     (builtin "One Step Simplification" (formula "61"))
                                    (rule "allRight" (formula "61") (inst "sk=f_0"))
                                    (rule "allRight" (formula "61") (inst "sk=o_0"))
                                    (rule "orRight" (formula "61"))
                                    (rule "eqSymm" (formula "62"))
                                    (rule "pullOutSelect" (formula "61") (term "0,0,1") (inst "selectSK=java_lang_Object_created__9"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "41"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "pullOutSelect" (formula "63") (term "1") (inst "selectSK=f_0_0"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "42"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "pullOutSelect" (formula "64") (term "0") (inst "selectSK=f_0_1"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "51"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "replaceKnownSelect_taclet020000000000_38" (formula "1") (term "2,0"))
                                    (rule "replaceKnownSelect_taclet020000000000_37" (formula "1") (term "0,0,1,0,0"))
                                    (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "64"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "applyEqReverse" (formula "65") (term "0") (ifseqformula "1"))
                                     (builtin "One Step Simplification" (formula "65"))
                                    (rule "closeTrue" (formula "65"))
                                 )
                                 (branch "Exceptional Post (get)"
                                     (builtin "One Step Simplification" (formula "48"))
                                     (builtin "One Step Simplification" (formula "57"))
                                    (rule "andLeft" (formula "48"))
                                    (rule "andLeft" (formula "49"))
                                    (rule "andLeft" (formula "50"))
                                    (rule "andLeft" (formula "49"))
                                    (rule "andLeft" (formula "51"))
                                    (rule "notLeft" (formula "49"))
                                    (rule "close" (formula "53") (ifseqformula "52"))
                                 )
                                 (branch "Pre (get)"
                                     (builtin "One Step Simplification" (formula "55"))
                                    (rule "wellFormedAnonEQ" (formula "55") (term "0,1") (ifseqformula "40"))
                                    (rule "wellFormedAnonEQ" (formula "55") (term "0,0,1") (ifseqformula "32"))
                                    (rule "wellFormedAnonEQ" (formula "55") (term "0,0,0,1") (ifseqformula "24"))
                                    (rule "wellFormedAnonEQ" (formula "55") (term "0,0,0,0,1") (ifseqformula "16"))
                                    (rule "wellFormedAnonEQ" (formula "55") (term "0,0,0,0,0,1") (ifseqformula "8"))
                                    (rule "selectOfAnonEQ" (formula "55") (term "0,1,1") (ifseqformula "40"))
                                     (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "2")) (ifInst ""  (formula "7")) (ifInst ""  (formula "15")) (ifInst ""  (formula "23")) (ifInst ""  (formula "31")) (ifInst ""  (formula "39")) (ifInst ""  (formula "53")))
                                    (rule "ifthenelse_negated" (formula "55") (term "0,1"))
                                    (rule "selectOfAnonEQ" (formula "55") (term "0,1,1,0,0") (ifseqformula "40"))
                                     (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "53")))
                                    (rule "selectOfAnonEQ" (formula "55") (term "0,0,1,0,0,1,1,0,0") (ifseqformula "32"))
                                     (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "53")))
                                    (rule "ifthenelse_negated" (formula "55") (term "0,0,1,0,0,1,1,0,0"))
                                    (rule "selectOfAnonEQ" (formula "55") (term "1,0,1") (ifseqformula "32"))
                                     (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "53")))
                                    (rule "ifthenelse_negated" (formula "55") (term "1,0,1"))
                                    (rule "selectCreatedOfAnonEQ" (formula "55") (term "0,0,0,1") (ifseqformula "32"))
                                     (builtin "One Step Simplification" (formula "55"))
                                    (rule "selectOfAnonEQ" (formula "55") (term "0,0,0,0,1,0,0,1,1,0,0") (ifseqformula "24"))
                                     (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "53")))
                                    (rule "ifthenelse_negated" (formula "55") (term "0,0,0,0,1,0,0,1,1,0,0"))
                                    (rule "selectCreatedOfAnonEQ" (formula "55") (term "0,0,0,0,0,0,1,0,0,1,1,0,0") (ifseqformula "16"))
                                     (builtin "One Step Simplification" (formula "55"))
                                    (rule "selectCreatedOfAnonEQ" (formula "55") (term "1,0,0,0,0,1,0,0,1,1,0,0") (ifseqformula "16"))
                                    (rule "selectCreatedOfAnonEQ" (formula "55") (term "1,0,0,1,0,0,1,1,0,0") (ifseqformula "24"))
                                    (rule "selectOfAnonEQ" (formula "55") (term "0,0,1,0,0,0,0,1,0,0,1,1,0,0") (ifseqformula "8"))
                                     (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "53")) (ifInst ""  (formula "52")) (ifInst ""  (formula "10")))
                                    (rule "selectOfAnonEQ" (formula "55") (term "0,0,0,0,0,0,1,0,0,1,1,0,0") (ifseqformula "8"))
                                     (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "53")) (ifInst ""  (formula "52")) (ifInst ""  (formula "10")))
                                    (rule "selectOfAnonEQ" (formula "55") (term "1,1,0,1") (ifseqformula "24"))
                                     (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "53")))
                                    (rule "ifthenelse_negated" (formula "55") (term "1,1,0,1"))
                                    (rule "selectOfAnonEQ" (formula "55") (term "2,0,1,1,0,0") (ifseqformula "32"))
                                     (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "53")))
                                    (rule "ifthenelse_negated" (formula "55") (term "2,0,1,1,0,0"))
                                    (rule "selectOfAnonEQ" (formula "55") (term "0,0,0,1,0,0,1,1,0,0") (ifseqformula "16"))
                                     (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "53")))
                                    (rule "ifthenelse_negated" (formula "55") (term "0,0,0,1,0,0,1,1,0,0"))
                                    (rule "selectCreatedOfAnonEQ" (formula "55") (term "0,0,2,0,1,1,0,0") (ifseqformula "24"))
                                     (builtin "One Step Simplification" (formula "55"))
                                    (rule "selectOfAnonEQ" (formula "55") (term "1,1,1,0,1") (ifseqformula "16"))
                                     (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "53")))
                                    (rule "ifthenelse_negated" (formula "55") (term "1,1,1,0,1"))
                                    (rule "selectOfAnonEQ" (formula "55") (term "1,1,1,1,0,1") (ifseqformula "8"))
                                     (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "53")) (ifInst ""  (formula "52")))
                                    (rule "selectOfAnonEQ" (formula "55") (term "0,0,0,0,0,1,0,0,1,1,0,0") (ifseqformula "8"))
                                     (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "53")) (ifInst ""  (formula "52")) (ifInst ""  (formula "10")))
                                    (rule "selectOfAnonEQ" (formula "55") (term "0,0,1,1,0,1") (ifseqformula "16"))
                                     (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "53")))
                                    (rule "ifthenelse_negated" (formula "55") (term "0,0,1,1,0,1"))
                                    (rule "selectOfAnonEQ" (formula "55") (term "0,0,0,2,0,1,1,0,0") (ifseqformula "16"))
                                     (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "53")))
                                    (rule "ifthenelse_negated" (formula "55") (term "0,0,0,2,0,1,1,0,0"))
                                    (rule "selectCreatedOfAnonEQ" (formula "55") (term "0,0,0,0,0,2,0,1,1,0,0") (ifseqformula "8"))
                                     (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "52")) (ifInst ""  (formula "10")))
                                    (rule "selectOfAnonEQ" (formula "55") (term "1,2,0,1,1,0,0") (ifseqformula "24"))
                                     (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "53")))
                                    (rule "selectOfAnonEQ" (formula "55") (term "0,0,0,2,0,1,1,0,0") (ifseqformula "8"))
                                     (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "53")) (ifInst ""  (formula "52")) (ifInst ""  (formula "10")))
                                    (rule "selectOfAnonEQ" (formula "55") (term "0,0,0,0,1") (ifseqformula "24"))
                                     (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "53")))
                                    (rule "ifthenelse_negated" (formula "55") (term "0,0,0,0,1"))
                                    (rule "selectOfAnonEQ" (formula "55") (term "0,0,0,0,0,0,1") (ifseqformula "16"))
                                     (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "53")))
                                    (rule "ifthenelse_negated" (formula "55") (term "0,0,0,0,0,0,1"))
                                    (rule "selectOfAnonEQ" (formula "55") (term "0,0,1,0,1") (ifseqformula "24"))
                                     (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "53")))
                                    (rule "ifthenelse_negated" (formula "55") (term "0,0,1,0,1"))
                                    (rule "selectCreatedOfAnonEQ" (formula "55") (term "0,0,0,0,1,0,1") (ifseqformula "16"))
                                     (builtin "One Step Simplification" (formula "55"))
                                    (rule "selectOfAnonEQ" (formula "55") (term "0,0,0,0,1,1,0,1") (ifseqformula "8"))
                                     (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "53")) (ifInst ""  (formula "52")) (ifInst ""  (formula "10")))
                                    (rule "selectOfAnonEQ" (formula "55") (term "0,0,0,1,0,0,1,1,0,0") (ifseqformula "8"))
                                     (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "53")) (ifInst ""  (formula "52")) (ifInst ""  (formula "10")))
                                    (rule "selectOfAnonEQ" (formula "55") (term "2,2,0,1,1,0,0") (ifseqformula "16"))
                                     (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "53")))
                                    (rule "selectCreatedOfAnonEQ" (formula "55") (term "0,0,1,1,1,0,1") (ifseqformula "8"))
                                     (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "52")) (ifInst ""  (formula "10")))
                                    (rule "selectCreatedOfAnonEQ" (formula "55") (term "0,0,0,0,0,0,0,0,1") (ifseqformula "8"))
                                     (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "52")) (ifInst ""  (formula "10")))
                                    (rule "selectOfAnonEQ" (formula "55") (term "1,0,0,0,0,1") (ifseqformula "16"))
                                     (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "53")))
                                    (rule "ifthenelse_negated" (formula "55") (term "1,0,0,0,0,1"))
                                    (rule "selectOfAnonEQ" (formula "55") (term "0,0,0,0,0,1,0,1") (ifseqformula "8"))
                                     (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "53")) (ifInst ""  (formula "52")) (ifInst ""  (formula "10")))
                                    (rule "selectOfAnonEQ" (formula "55") (term "1,1,0,0,0,0,1") (ifseqformula "8"))
                                     (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "53")) (ifInst ""  (formula "52")))
                                    (rule "selectOfAnonEQ" (formula "55") (term "0,0,1,0,2,2,0,1,1,0,0") (ifseqformula "8"))
                                     (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "53")) (ifInst ""  (formula "52")) (ifInst ""  (formula "10")))
                                    (rule "selectOfAnonEQ" (formula "55") (term "0,0,1,0,2,0,1,1,0,0") (ifseqformula "16"))
                                     (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "53")))
                                    (rule "ifthenelse_negated" (formula "55") (term "0,0,1,0,2,0,1,1,0,0"))
                                    (rule "selectOfAnonEQ" (formula "55") (term "0,0,1,0,1") (ifseqformula "16"))
                                     (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "53")))
                                    (rule "ifthenelse_negated" (formula "55") (term "0,0,1,0,1"))
                                    (rule "selectCreatedOfAnonEQ" (formula "55") (term "0,0,1,0,0,0,0,1") (ifseqformula "8"))
                                     (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "52")) (ifInst ""  (formula "10")))
                                    (rule "selectOfAnonEQ" (formula "55") (term "0,0,1,1,0,1") (ifseqformula "8"))
                                     (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "53")) (ifInst ""  (formula "52")) (ifInst ""  (formula "10")))
                                    (rule "selectOfAnonEQ" (formula "55") (term "0,0,0,0,0,0,1") (ifseqformula "8"))
                                     (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "53")) (ifInst ""  (formula "52")) (ifInst ""  (formula "10")) (ifInst ""  (formula "10")))
                                    (rule "selectCreatedOfAnonEQ" (formula "55") (term "1,0,0,1,0,2,0,1,1,0,0") (ifseqformula "8"))
                                    (rule "selectCreatedOfAnonEQ" (formula "55") (term "0,0,0,0,1,0,2,0,1,1,0,0") (ifseqformula "8"))
                                     (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "52")) (ifInst ""  (formula "52")) (ifInst ""  (formula "10")) (ifInst ""  (formula "10")))
                                    (rule "selectCreatedOfAnonEQ" (formula "55") (term "1,0,0,0,1") (ifseqformula "8"))
                                    (rule "selectCreatedOfAnonEQ" (formula "55") (term "0,0,0,0,0,1") (ifseqformula "8"))
                                     (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "52")) (ifInst ""  (formula "52")) (ifInst ""  (formula "10")) (ifInst ""  (formula "10")) (ifInst ""  (formula "10")))
                                    (rule "selectOfAnonEQ" (formula "55") (term "2,2,2,0,1,1,0") (ifseqformula "8"))
                                     (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "53")) (ifInst ""  (formula "52")))
                                    (rule "leq_literals" (formula "55") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "55"))
                                    (rule "inEqSimp_ltToLeq" (formula "55") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "55") (term "0,0"))
                                    (rule "add_literals" (formula "55") (term "0,0,0"))
                                    (rule "applyEq" (formula "55") (term "2,2,2,0,0,1,0,0") (ifseqformula "12"))
                                    (rule "applyEq" (formula "55") (term "2,2,0,0,1,0,0") (ifseqformula "18"))
                                    (rule "applyEq" (formula "55") (term "2,0,0,1,0,0") (ifseqformula "26"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "55") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "55") (term "0,0"))
                                    (rule "polySimp_elimOne" (formula "55") (term "0,0"))
                                    (rule "Class_invariant_axiom_for_Test" (formula "6") (ifseqformula "4"))
                                    (rule "true_left" (formula "6"))
                                    (rule "commute_and" (formula "54"))
                                    (rule "ifthenelse_split" (formula "17") (term "0"))
                                    (branch "(self_0, List::$seq) in self_0.footprint@anon_heap_ArrayList<<anonHeapFunction>> TRUE"
                                       (rule "elementOfSubsetImpliesElementOfSuperset" (formula "17") (ifseqformula "12"))
                                        (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "54")) (ifInst ""  (formula "53")))
                                       (rule "true_left" (formula "17"))
                                       (rule "ifthenelse_split" (formula "20") (term "0"))
                                       (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_ArrayList<<anonHeapFunction>> TRUE"
                                          (rule "applyEqReverse" (formula "25") (term "1,0") (ifseqformula "21"))
                                          (rule "applyEqReverse" (formula "30") (term "0,1") (ifseqformula "21"))
                                          (rule "applyEqReverse" (formula "22") (term "0") (ifseqformula "21"))
                                          (rule "applyEqReverse" (formula "27") (term "2,0,0") (ifseqformula "21"))
                                          (rule "applyEqReverse" (formula "29") (term "2,0") (ifseqformula "21"))
                                          (rule "applyEqReverse" (formula "29") (term "2,0,0") (ifseqformula "21"))
                                          (rule "hideAuxiliaryEq" (formula "21"))
                                          (rule "elementOfSubsetImpliesElementOfSuperset" (formula "20") (ifseqformula "12"))
                                           (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "54")) (ifInst ""  (formula "53")))
                                          (rule "true_left" (formula "20"))
                                          (rule "commuteUnion" (formula "29") (term "1"))
                                          (rule "ifthenelse_split" (formula "44") (term "0"))
                                          (branch "(self_1, List::$footprint) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> TRUE"
                                             (rule "applyEqReverse" (formula "46") (term "0") (ifseqformula "45"))
                                             (rule "hideAuxiliaryEq" (formula "45"))
                                             (rule "elementOfSubsetImpliesElementOfSuperset" (formula "44") (ifseqformula "37"))
                                              (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "52")))
                                             (rule "replaceKnownSelect_taclet0000000_18" (formula "44") (term "0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet0000000_21" (formula "44") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "44"))
                                             (rule "true_left" (formula "44"))
                                             (rule "ifthenelse_split" (formula "42") (term "0"))
                                             (branch "(self_1, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> TRUE"
                                                (rule "elementOfSubsetImpliesElementOfSuperset" (formula "42") (ifseqformula "37"))
                                                 (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "53")))
                                                (rule "replaceKnownSelect_taclet0000000_18" (formula "42") (term "0,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet0000000_21" (formula "42") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "42"))
                                                (rule "true_left" (formula "42"))
                                                (rule "ifthenelse_split" (formula "56") (term "0,0,1"))
                                                (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> TRUE"
                                                   (rule "elementOfSubsetImpliesElementOfSuperset" (formula "1") (ifseqformula "38"))
                                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "56")))
                                                   (rule "notLeft" (formula "1"))
                                                   (rule "pullOutSelect" (formula "49") (term "0") (inst "selectSK=java_lang_Object_created__6"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "26"))
                                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "57")))
                                                   (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "2,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "2,0"))
                                                   (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "0,0,0,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "0,0,0,0"))
                                                   (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "11"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "applyEqReverse" (formula "50") (term "0") (ifseqformula "1"))
                                                   (rule "close" (formula "50") (ifseqformula "11"))
                                                )
                                                (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> FALSE"
                                                   (rule "lenOfSeqConcat" (formula "57") (term "0,1"))
                                                    (builtin "One Step Simplification" (formula "57"))
                                                   (rule "add_literals" (formula "57") (term "0,1"))
                                                   (rule "qeq_literals" (formula "57") (term "1"))
                                                    (builtin "One Step Simplification" (formula "57"))
                                                   (rule "ifthenelse_split" (formula "26") (term "0"))
                                                   (branch "(self_0, List::$seq) in self_0.footprint@anon_heap_add<<anonHeapFunction>> TRUE"
                                                      (rule "elementOfSubsetImpliesElementOfSuperset" (formula "26") (ifseqformula "21"))
                                                      (rule "elementOfUnion" (formula "26"))
                                                       (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "17")))
                                                      (rule "true_left" (formula "26"))
                                                      (rule "ifthenelse_split" (formula "29") (term "0"))
                                                      (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_add<<anonHeapFunction>> TRUE"
                                                         (rule "applyEqReverse" (formula "31") (term "0") (ifseqformula "30"))
                                                         (rule "hideAuxiliaryEq" (formula "30"))
                                                         (rule "elementOfSubsetImpliesElementOfSuperset" (formula "29") (ifseqformula "21"))
                                                         (rule "elementOfUnion" (formula "29"))
                                                          (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "20")))
                                                         (rule "true_left" (formula "29"))
                                                         (rule "equalityToSeqGetAndSeqLenLeft" (formula "37") (inst "iv=iv"))
                                                          (builtin "One Step Simplification" (formula "37"))
                                                         (rule "andLeft" (formula "37"))
                                                         (rule "inEqSimp_ltToLeq" (formula "38") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "38") (term "0,0,0"))
                                                         (rule "applyEq" (formula "37") (term "0,0") (ifseqformula "39"))
                                                          (builtin "One Step Simplification" (formula "37"))
                                                         (rule "true_left" (formula "37"))
                                                         (rule "applyEq" (formula "37") (term "0,0,1,0") (ifseqformula "38"))
                                                          (builtin "One Step Simplification" (formula "37"))
                                                         (rule "true_left" (formula "37"))
                                                         (rule "equalityToSeqGetAndSeqLenLeft" (formula "45") (inst "iv=iv"))
                                                          (builtin "One Step Simplification" (formula "45"))
                                                         (rule "andLeft" (formula "45"))
                                                         (rule "getOfSeqSingleton" (formula "46") (term "1,1,0"))
                                                         (rule "castDel" (formula "46") (term "1,1,1,0"))
                                                         (rule "castDel" (formula "46") (term "2,1,1,0"))
                                                         (rule "eqSymm" (formula "46") (term "1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "46") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "46") (term "0,0,0"))
                                                         (rule "applyEqRigid" (formula "46") (term "0,0,1,0,0,1,0,0") (ifseqformula "47"))
                                                          (builtin "One Step Simplification" (formula "46"))
                                                         (rule "mul_literals" (formula "46") (term "1,0,0,1,0,0"))
                                                         (rule "add_literals" (formula "46") (term "0,0,1,0,0"))
                                                         (rule "add_zero_left" (formula "46") (term "0,1,0,0"))
                                                         (rule "applyEqRigid" (formula "45") (term "0,0") (ifseqformula "47"))
                                                          (builtin "One Step Simplification" (formula "45"))
                                                         (rule "true_left" (formula "45"))
                                                         (rule "applyEq" (formula "45") (term "0,1,1,0") (ifseqformula "46"))
                                                         (rule "getOfSeqSingleton" (formula "45") (term "1,1,0"))
                                                         (rule "castDel" (formula "45") (term "1,1,1,0"))
                                                         (rule "castDel" (formula "45") (term "2,1,1,0"))
                                                          (builtin "One Step Simplification" (formula "45"))
                                                         (rule "true_left" (formula "45"))
                                                         (rule "equalityToSeqGetAndSeqLenLeft" (formula "18") (inst "iv=iv"))
                                                          (builtin "One Step Simplification" (formula "18"))
                                                         (rule "andLeft" (formula "18"))
                                                         (rule "getOfSeqSingleton" (formula "19") (term "1,1,0"))
                                                         (rule "castDel" (formula "19") (term "1,1,1,0"))
                                                         (rule "castDel" (formula "19") (term "2,1,1,0"))
                                                         (rule "eqSymm" (formula "19") (term "1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
                                                         (rule "applyEq" (formula "19") (term "0,0,1,0,0,1,0,0") (ifseqformula "20"))
                                                          (builtin "One Step Simplification" (formula "19"))
                                                         (rule "mul_literals" (formula "19") (term "1,0,0,1,0,0"))
                                                         (rule "add_literals" (formula "19") (term "0,0,1,0,0"))
                                                         (rule "add_zero_left" (formula "19") (term "0,1,0,0"))
                                                         (rule "applyEq" (formula "18") (term "0,0") (ifseqformula "20"))
                                                          (builtin "One Step Simplification" (formula "18"))
                                                         (rule "true_left" (formula "18"))
                                                         (rule "applyEq" (formula "18") (term "0,1,1,0") (ifseqformula "19"))
                                                         (rule "getOfSeqSingleton" (formula "18") (term "1,1,0"))
                                                         (rule "castDel" (formula "18") (term "1,1,1,0"))
                                                         (rule "castDel" (formula "18") (term "2,1,1,0"))
                                                          (builtin "One Step Simplification" (formula "18"))
                                                         (rule "true_left" (formula "18"))
                                                         (rule "equalityToSeqGetAndSeqLenLeft" (formula "44") (inst "iv=iv"))
                                                          (builtin "One Step Simplification" (formula "44"))
                                                         (rule "andLeft" (formula "44"))
                                                         (rule "getOfSeqSingleton" (formula "45") (term "1,1,0"))
                                                         (rule "castDel" (formula "45") (term "1,1,1,0"))
                                                         (rule "castDel" (formula "45") (term "2,1,1,0"))
                                                         (rule "eqSymm" (formula "45") (term "1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "45") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "45") (term "0,0,0"))
                                                         (rule "applyEq" (formula "45") (term "0,1,1,0") (ifseqformula "46"))
                                                         (rule "getOfSeqSingleton" (formula "45") (term "1,1,0"))
                                                         (rule "castDel" (formula "45") (term "2,1,1,0"))
                                                         (rule "castDel" (formula "45") (term "1,1,1,0"))
                                                          (builtin "One Step Simplification" (formula "45"))
                                                         (rule "true_left" (formula "45"))
                                                         (rule "applyEq" (formula "44") (term "0,0") (ifseqformula "45"))
                                                          (builtin "One Step Simplification" (formula "44"))
                                                         (rule "true_left" (formula "44"))
                                                         (rule "equalityToSeqGetAndSeqLenLeft" (formula "27") (inst "iv=iv"))
                                                         (rule "andLeft" (formula "27"))
                                                         (rule "lenOfSeqConcat" (formula "27") (term "1"))
                                                          (builtin "One Step Simplification" (formula "27"))
                                                         (rule "add_literals" (formula "27") (term "1"))
                                                         (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "28") (term "0,0,0"))
                                                         (rule "applyEq" (formula "28") (term "0,0,1,0,0,1,0,0") (ifseqformula "29"))
                                                         (rule "lenOfSeqConcat" (formula "28") (term "0,1,0,0,1,0,0"))
                                                          (builtin "One Step Simplification" (formula "28"))
                                                         (rule "add_literals" (formula "28") (term "0,1,0,0,1,0,0"))
                                                         (rule "mul_literals" (formula "28") (term "1,0,0,1,0,0"))
                                                         (rule "add_literals" (formula "28") (term "0,0,1,0,0"))
                                                         (rule "applyEq" (formula "27") (term "0,0") (ifseqformula "29"))
                                                         (rule "lenOfSeqConcat" (formula "27") (term "0"))
                                                          (builtin "One Step Simplification" (formula "27"))
                                                         (rule "add_literals" (formula "27") (term "0"))
                                                          (builtin "One Step Simplification" (formula "27"))
                                                         (rule "true_left" (formula "27"))
                                                         (rule "applyEq" (formula "27") (term "0,0,1,0") (ifseqformula "28"))
                                                          (builtin "One Step Simplification" (formula "27"))
                                                         (rule "true_left" (formula "27"))
                                                         (rule "onlyCreatedObjectsAreInLocSets" (formula "17") (ifseqformula "6"))
                                                         (rule "replace_known_right" (formula "17") (term "0") (ifseqformula "56"))
                                                          (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "9")))
                                                         (rule "true_left" (formula "17"))
                                                         (rule "onlyCreatedObjectsAreInLocSets" (formula "43") (ifseqformula "32"))
                                                         (rule "replace_known_right" (formula "43") (term "0") (ifseqformula "54"))
                                                          (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "35")))
                                                         (rule "true_left" (formula "43"))
                                                         (rule "onlyCreatedObjectsAreInLocSets" (formula "46") (ifseqformula "32"))
                                                         (rule "replace_known_left" (formula "46") (term "1") (ifseqformula "35"))
                                                          (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "54")))
                                                         (rule "true_left" (formula "46"))
                                                         (rule "onlyCreatedObjectsAreInLocSets" (formula "20") (ifseqformula "6"))
                                                         (rule "replace_known_left" (formula "20") (term "1") (ifseqformula "9"))
                                                          (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "56")))
                                                         (rule "true_left" (formula "20"))
                                                         (rule "onlyCreatedObjectsAreInLocSets" (formula "26") (ifseqformula "14"))
                                                         (rule "replace_known_right" (formula "26") (term "0") (ifseqformula "56"))
                                                          (builtin "One Step Simplification" (formula "26"))
                                                         (rule "onlyCreatedObjectsAreInLocSets" (formula "30") (ifseqformula "14"))
                                                         (rule "replace_known_right" (formula "30") (term "0") (ifseqformula "57"))
                                                          (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "26")))
                                                         (rule "true_left" (formula "30"))
                                                          (builtin "Use Dependency Contract" (formula "59") (ifInst ""  (formula "32")) (ifInst ""  (formula "42")) (ifInst ""  (formula "34")) (contract "ArrayList[java.lang.Object::<inv>()].JML accessible clause.0"))
                                                         (rule "replaceKnownSelect_taclet0000_9" (formula "50") (term "1,1,0"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet0010000220000000000_28" (formula "50") (term "1,1,0"))
                                                         (rule "wellFormedAnonEQ" (formula "50") (term "0,1,0,0,0") (ifseqformula "24"))
                                                         (rule "wellFormedAnonEQ" (formula "50") (term "1,1,0,0,0") (ifseqformula "42"))
                                                         (rule "wellFormedAnonEQ" (formula "50") (term "0,0,1,0,0,0") (ifseqformula "15"))
                                                         (rule "wellFormedAnonEQ" (formula "50") (term "0,1,1,0,0,0") (ifseqformula "34"))
                                                         (rule "wellFormedAnonEQ" (formula "50") (term "0,0,1,1,0,0,0") (ifseqformula "24"))
                                                         (rule "wellFormedAnonEQ" (formula "50") (term "0,0,0,1,0,0,0") (ifseqformula "7"))
                                                         (rule "wellFormedAnonEQ" (formula "50") (term "0,0,0,1,1,0,0,0") (ifseqformula "15"))
                                                         (rule "wellFormedAnonEQ" (formula "50") (term "0,0,0,0,1,1,0,0,0") (ifseqformula "7"))
                                                         (rule "replace_known_left" (formula "50") (term "1,0,0") (ifseqformula "32"))
                                                          (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "57")) (ifInst ""  (formula "2")) (ifInst ""  (formula "6")) (ifInst ""  (formula "14")) (ifInst ""  (formula "23")) (ifInst ""  (formula "2")) (ifInst ""  (formula "6")) (ifInst ""  (formula "14")) (ifInst ""  (formula "23")) (ifInst ""  (formula "33")) (ifInst ""  (formula "41")) (ifInst ""  (formula "60")) (ifInst ""  (formula "32")))
                                                         (rule "notLeft" (formula "50"))
                                                         (rule "disjointDefinition" (formula "50") (term "1"))
                                                         (rule "pullOutSelect" (formula "50") (term "0,0") (inst "selectSK=java_lang_Object_created__6"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "25"))
                                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "58")))
                                                         (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "2,0"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "2,0"))
                                                         (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "0,0,0,0"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "0,0,0,0"))
                                                         (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "10"))
                                                          (builtin "One Step Simplification" (formula "1"))
                                                         (rule "applyEqReverse" (formula "51") (term "0,0") (ifseqformula "1"))
                                                         (rule "hideAuxiliaryEq" (formula "1"))
                                                         (rule "replace_known_left" (formula "50") (term "0") (ifseqformula "9"))
                                                          (builtin "One Step Simplification" (formula "50"))
                                                         (rule "equalityToElementOfRight" (formula "50") (inst "fv=fv") (inst "ov=ov"))
                                                          (builtin "One Step Simplification" (formula "50"))
                                                         (rule "allRight" (formula "50") (inst "sk=ov_0"))
                                                         (rule "allRight" (formula "50") (inst "sk=fv_0"))
                                                         (rule "notRight" (formula "50"))
                                                         (rule "elementOfIntersect" (formula "1"))
                                                         (rule "andLeft" (formula "1"))
                                                         (rule "elementOfSubsetImpliesElementOfSuperset" (formula "1") (ifseqformula "41"))
                                                          (builtin "One Step Simplification" (formula "1"))
                                                         (rule "andLeft" (formula "1"))
                                                         (rule "notLeft" (formula "1"))
                                                         (rule "notLeft" (formula "1"))
                                                         (rule "elementOfSubsetImpliesElementOfSuperset" (formula "2") (ifseqformula "33"))
                                                         (rule "elementOfUnion" (formula "2"))
                                                          (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "54")))
                                                         (rule "pullOutSelect" (formula "53") (term "0") (inst "selectSK=java_lang_Object_created__7"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "28"))
                                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "55")))
                                                         (rule "ifthenelse_negated" (formula "1") (term "0"))
                                                         (rule "apply_eq_boolean_rigid" (formula "1") (term "1") (ifseqformula "54"))
                                                          (builtin "One Step Simplification" (formula "1"))
                                                         (rule "notLeft" (formula "1"))
                                                         (rule "ifEqualsTRUE" (formula "53"))
                                                          (builtin "One Step Simplification" (formula "53"))
                                                         (rule "orRight" (formula "53"))
                                                         (rule "replace_known_right" (formula "54") (term "0,0") (ifseqformula "53"))
                                                          (builtin "One Step Simplification" (formula "54"))
                                                         (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "53"))
                                                          (builtin "One Step Simplification" (formula "2"))
                                                         (rule "true_left" (formula "2"))
                                                         (rule "pullOutSelect" (formula "52") (term "0") (inst "selectSK=java_lang_Object_created__8"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "18"))
                                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "56")))
                                                         (rule "ifthenelse_negated" (formula "1") (term "0"))
                                                         (rule "apply_eq_boolean" (formula "1") (term "1") (ifseqformula "53"))
                                                          (builtin "One Step Simplification" (formula "1"))
                                                         (rule "notLeft" (formula "1"))
                                                         (rule "ifEqualsTRUE" (formula "52"))
                                                          (builtin "One Step Simplification" (formula "52"))
                                                         (rule "orRight" (formula "52"))
                                                         (rule "replace_known_right" (formula "53") (term "0,0") (ifseqformula "52"))
                                                          (builtin "One Step Simplification" (formula "53"))
                                                         (rule "pullOutSelect" (formula "52") (term "0") (inst "selectSK=java_lang_Object_created__9"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "10"))
                                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "58")))
                                                         (rule "ifthenelse_negated" (formula "1") (term "0"))
                                                         (rule "apply_eq_boolean_rigid" (formula "1") (term "1") (ifseqformula "53"))
                                                          (builtin "One Step Simplification" (formula "1"))
                                                         (rule "notLeft" (formula "1"))
                                                         (rule "ifEqualsTRUE" (formula "52"))
                                                          (builtin "One Step Simplification" (formula "52"))
                                                         (rule "orRight" (formula "52"))
                                                         (rule "replace_known_right" (formula "53") (term "0,0") (ifseqformula "52"))
                                                          (builtin "One Step Simplification" (formula "53"))
                                                         (rule "hideAuxiliaryEqConcrete2" (formula "58"))
                                                         (rule "hideAuxiliaryEqConcrete2" (formula "56"))
                                                         (rule "hideAuxiliaryEqConcrete2" (formula "54"))
                                                         (rule "onlyCreatedObjectsAreInLocSets" (formula "1") (ifseqformula "35"))
                                                         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "57"))
                                                          (builtin "One Step Simplification" (formula "1"))
                                                         (rule "onlyCreatedObjectsAreInLocSets" (formula "3") (ifseqformula "26"))
                                                         (rule "replace_known_right" (formula "3") (term "0") (ifseqformula "58"))
                                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "57")))
                                                         (rule "closeFalse" (formula "3"))
                                                      )
                                                      (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_add<<anonHeapFunction>> FALSE"
                                                         (rule "applyEqReverse" (formula "30") (term "0") (ifseqformula "29"))
                                                          (builtin "One Step Simplification" (formula "30"))
                                                         (rule "true_left" (formula "30"))
                                                         (rule "hideAuxiliaryEq" (formula "29"))
                                                         (rule "equalityToSeqGetAndSeqLenLeft" (formula "35") (inst "iv=iv"))
                                                          (builtin "One Step Simplification" (formula "35"))
                                                         (rule "andLeft" (formula "35"))
                                                         (rule "inEqSimp_ltToLeq" (formula "36") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "36") (term "0,0,0"))
                                                         (rule "applyEq" (formula "36") (term "0,0,1,0") (ifseqformula "37"))
                                                          (builtin "One Step Simplification" (formula "36"))
                                                         (rule "true_left" (formula "36"))
                                                         (rule "applyEq" (formula "35") (term "0,0") (ifseqformula "36"))
                                                          (builtin "One Step Simplification" (formula "35"))
                                                         (rule "true_left" (formula "35"))
                                                         (rule "equalityToSeqGetAndSeqLenLeft" (formula "43") (inst "iv=iv"))
                                                          (builtin "One Step Simplification" (formula "43"))
                                                         (rule "andLeft" (formula "43"))
                                                         (rule "getOfSeqSingleton" (formula "44") (term "1,1,0"))
                                                         (rule "castDel" (formula "44") (term "1,1,1,0"))
                                                         (rule "castDel" (formula "44") (term "2,1,1,0"))
                                                         (rule "eqSymm" (formula "44") (term "1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "44") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "44") (term "0,0,0"))
                                                         (rule "applyEq" (formula "44") (term "0,0,1,0,0,1,0,0") (ifseqformula "45"))
                                                          (builtin "One Step Simplification" (formula "44"))
                                                         (rule "mul_literals" (formula "44") (term "1,0,0,1,0,0"))
                                                         (rule "add_literals" (formula "44") (term "0,0,1,0,0"))
                                                         (rule "add_zero_left" (formula "44") (term "0,1,0,0"))
                                                         (rule "applyEqRigid" (formula "43") (term "0,0") (ifseqformula "45"))
                                                          (builtin "One Step Simplification" (formula "43"))
                                                         (rule "true_left" (formula "43"))
                                                         (rule "applyEq" (formula "43") (term "0,1,1,0") (ifseqformula "44"))
                                                         (rule "getOfSeqSingleton" (formula "43") (term "1,1,0"))
                                                         (rule "castDel" (formula "43") (term "1,1,1,0"))
                                                         (rule "castDel" (formula "43") (term "2,1,1,0"))
                                                          (builtin "One Step Simplification" (formula "43"))
                                                         (rule "true_left" (formula "43"))
                                                         (rule "equalityToSeqGetAndSeqLenLeft" (formula "18") (inst "iv=iv"))
                                                          (builtin "One Step Simplification" (formula "18"))
                                                         (rule "andLeft" (formula "18"))
                                                         (rule "getOfSeqSingleton" (formula "19") (term "1,1,0"))
                                                         (rule "castDel" (formula "19") (term "1,1,1,0"))
                                                         (rule "castDel" (formula "19") (term "2,1,1,0"))
                                                         (rule "eqSymm" (formula "19") (term "1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
                                                         (rule "applyEq" (formula "19") (term "0,0,1,0,0,1,0,0") (ifseqformula "20"))
                                                          (builtin "One Step Simplification" (formula "19"))
                                                         (rule "mul_literals" (formula "19") (term "1,0,0,1,0,0"))
                                                         (rule "add_literals" (formula "19") (term "0,0,1,0,0"))
                                                         (rule "add_zero_left" (formula "19") (term "0,1,0,0"))
                                                         (rule "applyEq" (formula "18") (term "0,0") (ifseqformula "20"))
                                                          (builtin "One Step Simplification" (formula "18"))
                                                         (rule "true_left" (formula "18"))
                                                         (rule "applyEq" (formula "18") (term "0,1,1,0") (ifseqformula "19"))
                                                         (rule "getOfSeqSingleton" (formula "18") (term "1,1,0"))
                                                         (rule "castDel" (formula "18") (term "2,1,1,0"))
                                                         (rule "castDel" (formula "18") (term "1,1,1,0"))
                                                          (builtin "One Step Simplification" (formula "18"))
                                                         (rule "true_left" (formula "18"))
                                                         (rule "equalityToSeqGetAndSeqLenLeft" (formula "42") (inst "iv=iv"))
                                                          (builtin "One Step Simplification" (formula "42"))
                                                         (rule "andLeft" (formula "42"))
                                                         (rule "getOfSeqSingleton" (formula "43") (term "1,1,0"))
                                                         (rule "castDel" (formula "43") (term "1,1,1,0"))
                                                         (rule "castDel" (formula "43") (term "2,1,1,0"))
                                                         (rule "eqSymm" (formula "43") (term "1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "43") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "43") (term "0,0,0"))
                                                         (rule "applyEq" (formula "43") (term "0,1,1,0") (ifseqformula "44"))
                                                         (rule "getOfSeqSingleton" (formula "43") (term "1,1,0"))
                                                         (rule "castDel" (formula "43") (term "2,1,1,0"))
                                                         (rule "castDel" (formula "43") (term "1,1,1,0"))
                                                          (builtin "One Step Simplification" (formula "43"))
                                                         (rule "true_left" (formula "43"))
                                                         (rule "applyEq" (formula "42") (term "0,0") (ifseqformula "43"))
                                                          (builtin "One Step Simplification" (formula "42"))
                                                         (rule "true_left" (formula "42"))
                                                         (rule "equalityToSeqGetAndSeqLenLeft" (formula "27") (inst "iv=iv"))
                                                         (rule "andLeft" (formula "27"))
                                                         (rule "lenOfSeqConcat" (formula "27") (term "1"))
                                                          (builtin "One Step Simplification" (formula "27"))
                                                         (rule "add_literals" (formula "27") (term "1"))
                                                         (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "28") (term "0,0,0"))
                                                         (rule "applyEq" (formula "27") (term "0,0") (ifseqformula "29"))
                                                         (rule "lenOfSeqConcat" (formula "27") (term "0"))
                                                          (builtin "One Step Simplification" (formula "27"))
                                                         (rule "add_literals" (formula "27") (term "0"))
                                                          (builtin "One Step Simplification" (formula "27"))
                                                         (rule "true_left" (formula "27"))
                                                         (rule "applyEq" (formula "27") (term "0,0,1,0") (ifseqformula "28"))
                                                          (builtin "One Step Simplification" (formula "27"))
                                                         (rule "true_left" (formula "27"))
                                                         (rule "onlyCreatedObjectsAreInLocSets" (formula "17") (ifseqformula "6"))
                                                         (rule "replace_known_left" (formula "17") (term "1") (ifseqformula "9"))
                                                          (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "55")))
                                                         (rule "true_left" (formula "17"))
                                                         (rule "onlyCreatedObjectsAreInLocSets" (formula "44") (ifseqformula "30"))
                                                         (rule "replace_known_left" (formula "44") (term "1") (ifseqformula "33"))
                                                          (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "53")))
                                                         (rule "true_left" (formula "44"))
                                                         (rule "onlyCreatedObjectsAreInLocSets" (formula "20") (ifseqformula "6"))
                                                         (rule "replace_known_right" (formula "20") (term "0") (ifseqformula "55"))
                                                          (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "9")))
                                                         (rule "true_left" (formula "20"))
                                                         (rule "onlyCreatedObjectsAreInLocSets" (formula "41") (ifseqformula "30"))
                                                         (rule "replace_known_right" (formula "41") (term "0") (ifseqformula "53"))
                                                          (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "33")))
                                                         (rule "true_left" (formula "41"))
                                                         (rule "onlyCreatedObjectsAreInLocSets" (formula "26") (ifseqformula "14"))
                                                         (rule "replace_known_right" (formula "26") (term "0") (ifseqformula "55"))
                                                          (builtin "One Step Simplification" (formula "26"))
                                                          (builtin "Use Dependency Contract" (formula "58") (ifInst ""  (formula "30")) (ifInst ""  (formula "40")) (ifInst ""  (formula "32")) (contract "ArrayList[java.lang.Object::<inv>()].JML accessible clause.0"))
                                                         (rule "replaceKnownSelect_taclet0000_9" (formula "48") (term "1,1,0"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet1010000220000000000_28" (formula "48") (term "1,1,0"))
                                                         (rule "wellFormedAnonEQ" (formula "48") (term "0,1,0,0,0") (ifseqformula "24"))
                                                         (rule "wellFormedAnonEQ" (formula "48") (term "1,1,0,0,0") (ifseqformula "40"))
                                                         (rule "wellFormedAnonEQ" (formula "48") (term "0,1,1,0,0,0") (ifseqformula "32"))
                                                         (rule "wellFormedAnonEQ" (formula "48") (term "0,0,1,0,0,0") (ifseqformula "15"))
                                                         (rule "wellFormedAnonEQ" (formula "48") (term "0,0,0,1,0,0,0") (ifseqformula "7"))
                                                         (rule "wellFormedAnonEQ" (formula "48") (term "0,0,1,1,0,0,0") (ifseqformula "24"))
                                                         (rule "wellFormedAnonEQ" (formula "48") (term "0,0,0,1,1,0,0,0") (ifseqformula "15"))
                                                         (rule "wellFormedAnonEQ" (formula "48") (term "0,0,0,0,1,1,0,0,0") (ifseqformula "7"))
                                                         (rule "replace_known_left" (formula "48") (term "1,0,1,0,0,0") (ifseqformula "23"))
                                                          (builtin "One Step Simplification" (formula "48") (ifInst ""  (formula "56")) (ifInst ""  (formula "2")) (ifInst ""  (formula "6")) (ifInst ""  (formula "14")) (ifInst ""  (formula "2")) (ifInst ""  (formula "6")) (ifInst ""  (formula "14")) (ifInst ""  (formula "23")) (ifInst ""  (formula "31")) (ifInst ""  (formula "39")) (ifInst ""  (formula "30")) (ifInst ""  (formula "59")) (ifInst ""  (formula "30")))
                                                         (rule "notLeft" (formula "48"))
                                                         (rule "disjointDefinition" (formula "48") (term "1"))
                                                         (rule "pullOutSelect" (formula "48") (term "0,0") (inst "selectSK=java_lang_Object_created__6"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "25"))
                                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "57")))
                                                         (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "2,0"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "2,0"))
                                                         (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "0,0,0,0"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "0,0,0,0"))
                                                         (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "10"))
                                                          (builtin "One Step Simplification" (formula "1"))
                                                         (rule "applyEqReverse" (formula "49") (term "0,0") (ifseqformula "1"))
                                                         (rule "hideAuxiliaryEq" (formula "1"))
                                                         (rule "replace_known_left" (formula "48") (term "0") (ifseqformula "9"))
                                                          (builtin "One Step Simplification" (formula "48"))
                                                         (rule "equalityToElementOfRight" (formula "48") (inst "fv=fv") (inst "ov=ov"))
                                                          (builtin "One Step Simplification" (formula "48"))
                                                         (rule "allRight" (formula "48") (inst "sk=ov_0"))
                                                         (rule "allRight" (formula "48") (inst "sk=fv_0"))
                                                         (rule "notRight" (formula "48"))
                                                         (rule "elementOfIntersect" (formula "1"))
                                                         (rule "andLeft" (formula "1"))
                                                         (rule "elementOfSubsetImpliesElementOfSuperset" (formula "1") (ifseqformula "39"))
                                                          (builtin "One Step Simplification" (formula "1"))
                                                         (rule "andLeft" (formula "1"))
                                                         (rule "notLeft" (formula "2"))
                                                         (rule "notLeft" (formula "1"))
                                                         (rule "elementOfSubsetImpliesElementOfSuperset" (formula "2") (ifseqformula "23"))
                                                         (rule "elementOfUnion" (formula "2"))
                                                          (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "51")))
                                                         (rule "pullOutSelect" (formula "52") (term "0") (inst "selectSK=java_lang_Object_created__7"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "28"))
                                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "52")))
                                                         (rule "ifthenelse_negated" (formula "1") (term "0"))
                                                         (rule "apply_eq_boolean_rigid" (formula "1") (term "1") (ifseqformula "53"))
                                                          (builtin "One Step Simplification" (formula "1"))
                                                         (rule "notLeft" (formula "1"))
                                                         (rule "ifEqualsTRUE" (formula "51"))
                                                          (builtin "One Step Simplification" (formula "51"))
                                                         (rule "orRight" (formula "51"))
                                                         (rule "replace_known_right" (formula "52") (term "0,0") (ifseqformula "51"))
                                                          (builtin "One Step Simplification" (formula "52"))
                                                         (rule "pullOutSelect" (formula "2") (term "0,0,0") (inst "selectSK=java_lang_Object_created__8"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "11"))
                                                          (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "54")))
                                                         (rule "ifthenelse_negated" (formula "2") (term "0"))
                                                         (rule "pullOutSelect" (formula "52") (term "0") (inst "selectSK=java_lang_Object_created__9"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "20"))
                                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "55")))
                                                         (rule "replaceKnownSelect_taclet1010000220000000000_32" (formula "1") (term "2,0"))
                                                         (rule "replaceKnownSelect_taclet1010000220000000000_32" (formula "1") (term "0,0,0,0"))
                                                         (rule "ifthenelse_negated" (formula "1") (term "0"))
                                                         (rule "apply_eq_boolean_rigid" (formula "1") (term "1") (ifseqformula "53"))
                                                          (builtin "One Step Simplification" (formula "1"))
                                                         (rule "notLeft" (formula "1"))
                                                         (rule "ifEqualsTRUE" (formula "52"))
                                                          (builtin "One Step Simplification" (formula "52"))
                                                         (rule "orRight" (formula "52"))
                                                         (rule "replace_known_right" (formula "53") (term "0,0") (ifseqformula "52"))
                                                          (builtin "One Step Simplification" (formula "53"))
                                                         (rule "replace_known_right" (formula "3") (term "0,0") (ifseqformula "52"))
                                                          (builtin "One Step Simplification" (formula "3"))
                                                         (rule "true_left" (formula "3"))
                                                         (rule "apply_eq_boolean" (formula "2") (term "1") (ifseqformula "51"))
                                                          (builtin "One Step Simplification" (formula "2"))
                                                         (rule "notLeft" (formula "2"))
                                                         (rule "ifEqualsTRUE" (formula "50"))
                                                          (builtin "One Step Simplification" (formula "50"))
                                                         (rule "orRight" (formula "50"))
                                                         (rule "replace_known_right" (formula "51") (term "0,0") (ifseqformula "50"))
                                                          (builtin "One Step Simplification" (formula "51"))
                                                         (rule "hideAuxiliaryEqConcrete2" (formula "57"))
                                                         (rule "hideAuxiliaryEqConcrete2" (formula "54"))
                                                         (rule "hideAuxiliaryEqConcrete2" (formula "52"))
                                                         (rule "onlyCreatedObjectsAreInLocSets" (formula "2") (ifseqformula "16"))
                                                         (rule "replace_known_right" (formula "2") (term "1") (ifseqformula "53"))
                                                          (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "55")))
                                                         (rule "closeFalse" (formula "2"))
                                                      )
                                                   )
                                                   (branch "(self_0, List::$seq) in self_0.footprint@anon_heap_add<<anonHeapFunction>> FALSE"
                                                      (rule "eqSymm" (formula "26"))
                                                      (rule "applyEqRigid" (formula "27") (term "1") (ifseqformula "26"))
                                                      (rule "ifthenelse_split" (formula "28") (term "0"))
                                                      (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_add<<anonHeapFunction>> TRUE"
                                                         (rule "applyEqReverse" (formula "30") (term "0") (ifseqformula "29"))
                                                         (rule "hideAuxiliaryEq" (formula "29"))
                                                         (rule "elementOfSubsetImpliesElementOfSuperset" (formula "28") (ifseqformula "21"))
                                                         (rule "elementOfUnion" (formula "28"))
                                                          (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "20")))
                                                         (rule "true_left" (formula "28"))
                                                         (rule "equalityToSeqGetAndSeqLenLeft" (formula "36") (inst "iv=iv"))
                                                          (builtin "One Step Simplification" (formula "36"))
                                                         (rule "andLeft" (formula "36"))
                                                         (rule "inEqSimp_ltToLeq" (formula "37") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "37") (term "0,0,0"))
                                                         (rule "applyEq" (formula "36") (term "0,0") (ifseqformula "38"))
                                                          (builtin "One Step Simplification" (formula "36"))
                                                         (rule "true_left" (formula "36"))
                                                         (rule "applyEq" (formula "36") (term "0,0,1,0") (ifseqformula "37"))
                                                          (builtin "One Step Simplification" (formula "36"))
                                                         (rule "true_left" (formula "36"))
                                                         (rule "equalityToSeqGetAndSeqLenLeft" (formula "44") (inst "iv=iv"))
                                                          (builtin "One Step Simplification" (formula "44"))
                                                         (rule "andLeft" (formula "44"))
                                                         (rule "getOfSeqSingleton" (formula "45") (term "1,1,0"))
                                                         (rule "castDel" (formula "45") (term "1,1,1,0"))
                                                         (rule "castDel" (formula "45") (term "2,1,1,0"))
                                                         (rule "eqSymm" (formula "45") (term "1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "45") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "45") (term "0,0,0"))
                                                         (rule "applyEq" (formula "45") (term "0,0,1,0,0,1,0,0") (ifseqformula "46"))
                                                          (builtin "One Step Simplification" (formula "45"))
                                                         (rule "mul_literals" (formula "45") (term "1,0,0,1,0,0"))
                                                         (rule "add_literals" (formula "45") (term "0,0,1,0,0"))
                                                         (rule "add_zero_left" (formula "45") (term "0,1,0,0"))
                                                         (rule "applyEq" (formula "44") (term "0,0") (ifseqformula "46"))
                                                          (builtin "One Step Simplification" (formula "44"))
                                                         (rule "true_left" (formula "44"))
                                                         (rule "applyEqRigid" (formula "44") (term "0,1,1,0") (ifseqformula "45"))
                                                         (rule "getOfSeqSingleton" (formula "44") (term "1,1,0"))
                                                         (rule "castDel" (formula "44") (term "2,1,1,0"))
                                                         (rule "castDel" (formula "44") (term "1,1,1,0"))
                                                          (builtin "One Step Simplification" (formula "44"))
                                                         (rule "true_left" (formula "44"))
                                                         (rule "equalityToSeqGetAndSeqLenLeft" (formula "18") (inst "iv=iv"))
                                                          (builtin "One Step Simplification" (formula "18"))
                                                         (rule "andLeft" (formula "18"))
                                                         (rule "getOfSeqSingleton" (formula "19") (term "1,1,0"))
                                                         (rule "castDel" (formula "19") (term "1,1,1,0"))
                                                         (rule "castDel" (formula "19") (term "2,1,1,0"))
                                                         (rule "eqSymm" (formula "19") (term "1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
                                                         (rule "applyEq" (formula "19") (term "0,1,1,0") (ifseqformula "20"))
                                                         (rule "getOfSeqSingleton" (formula "19") (term "1,1,0"))
                                                         (rule "castDel" (formula "19") (term "1,1,1,0"))
                                                         (rule "castDel" (formula "19") (term "2,1,1,0"))
                                                          (builtin "One Step Simplification" (formula "19"))
                                                         (rule "true_left" (formula "19"))
                                                         (rule "applyEq" (formula "18") (term "0,0") (ifseqformula "19"))
                                                          (builtin "One Step Simplification" (formula "18"))
                                                         (rule "true_left" (formula "18"))
                                                         (rule "equalityToSeqGetAndSeqLenLeft" (formula "43") (inst "iv=iv"))
                                                          (builtin "One Step Simplification" (formula "43"))
                                                         (rule "andLeft" (formula "43"))
                                                         (rule "getOfSeqSingleton" (formula "44") (term "1,1,0"))
                                                         (rule "castDel" (formula "44") (term "1,1,1,0"))
                                                         (rule "castDel" (formula "44") (term "2,1,1,0"))
                                                         (rule "eqSymm" (formula "44") (term "1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "44") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "44") (term "0,0,0"))
                                                         (rule "applyEq" (formula "44") (term "0,0,1,0,0,1,0,0") (ifseqformula "45"))
                                                          (builtin "One Step Simplification" (formula "44"))
                                                         (rule "mul_literals" (formula "44") (term "1,0,0,1,0,0"))
                                                         (rule "add_literals" (formula "44") (term "0,0,1,0,0"))
                                                         (rule "add_zero_left" (formula "44") (term "0,1,0,0"))
                                                         (rule "applyEq" (formula "43") (term "0,0") (ifseqformula "45"))
                                                          (builtin "One Step Simplification" (formula "43"))
                                                         (rule "true_left" (formula "43"))
                                                         (rule "applyEq" (formula "43") (term "0,1,1,0") (ifseqformula "44"))
                                                         (rule "getOfSeqSingleton" (formula "43") (term "1,1,0"))
                                                         (rule "castDel" (formula "43") (term "2,1,1,0"))
                                                         (rule "castDel" (formula "43") (term "1,1,1,0"))
                                                          (builtin "One Step Simplification" (formula "43"))
                                                         (rule "true_left" (formula "43"))
                                                         (rule "equalityToSeqGetAndSeqLenLeft" (formula "26") (inst "iv=iv"))
                                                          (builtin "One Step Simplification" (formula "26"))
                                                         (rule "andLeft" (formula "26"))
                                                         (rule "lenOfSeqConcat" (formula "27") (term "1,1,0,0"))
                                                          (builtin "One Step Simplification" (formula "27"))
                                                         (rule "add_literals" (formula "27") (term "1,1,0,0"))
                                                         (rule "lenOfSeqConcat" (formula "26") (term "0"))
                                                          (builtin "One Step Simplification" (formula "26"))
                                                         (rule "add_literals" (formula "26") (term "0"))
                                                         (rule "equal_literals" (formula "26"))
                                                         (rule "closeFalse" (formula "26"))
                                                      )
                                                      (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_add<<anonHeapFunction>> FALSE"
                                                         (rule "applyEqReverse" (formula "29") (term "0") (ifseqformula "28"))
                                                          (builtin "One Step Simplification" (formula "29"))
                                                         (rule "true_left" (formula "29"))
                                                         (rule "hideAuxiliaryEq" (formula "28"))
                                                         (rule "equalityToSeqGetAndSeqLenLeft" (formula "42") (inst "iv=iv"))
                                                          (builtin "One Step Simplification" (formula "42"))
                                                         (rule "andLeft" (formula "42"))
                                                         (rule "getOfSeqSingleton" (formula "43") (term "1,1,0"))
                                                         (rule "castDel" (formula "43") (term "1,1,1,0"))
                                                         (rule "castDel" (formula "43") (term "2,1,1,0"))
                                                         (rule "eqSymm" (formula "43") (term "1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "43") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "43") (term "0,0,0"))
                                                         (rule "applyEqRigid" (formula "43") (term "0,0,1,0,0,1,0,0") (ifseqformula "44"))
                                                          (builtin "One Step Simplification" (formula "43"))
                                                         (rule "mul_literals" (formula "43") (term "1,0,0,1,0,0"))
                                                         (rule "add_literals" (formula "43") (term "0,0,1,0,0"))
                                                         (rule "add_zero_left" (formula "43") (term "0,1,0,0"))
                                                         (rule "applyEq" (formula "42") (term "0,0") (ifseqformula "44"))
                                                          (builtin "One Step Simplification" (formula "42"))
                                                         (rule "true_left" (formula "42"))
                                                         (rule "applyEqRigid" (formula "42") (term "0,1,1,0") (ifseqformula "43"))
                                                         (rule "getOfSeqSingleton" (formula "42") (term "1,1,0"))
                                                         (rule "castDel" (formula "42") (term "1,1,1,0"))
                                                         (rule "castDel" (formula "42") (term "2,1,1,0"))
                                                          (builtin "One Step Simplification" (formula "42"))
                                                         (rule "true_left" (formula "42"))
                                                         (rule "equalityToSeqGetAndSeqLenLeft" (formula "34") (inst "iv=iv"))
                                                          (builtin "One Step Simplification" (formula "34"))
                                                         (rule "andLeft" (formula "34"))
                                                         (rule "inEqSimp_ltToLeq" (formula "35") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "35") (term "0,0,0"))
                                                         (rule "applyEq" (formula "35") (term "0,0,1,0") (ifseqformula "36"))
                                                          (builtin "One Step Simplification" (formula "35"))
                                                         (rule "true_left" (formula "35"))
                                                         (rule "applyEq" (formula "34") (term "0,0") (ifseqformula "35"))
                                                          (builtin "One Step Simplification" (formula "34"))
                                                         (rule "true_left" (formula "34"))
                                                         (rule "equalityToSeqGetAndSeqLenLeft" (formula "18") (inst "iv=iv"))
                                                          (builtin "One Step Simplification" (formula "18"))
                                                         (rule "andLeft" (formula "18"))
                                                         (rule "getOfSeqSingleton" (formula "19") (term "1,1,0"))
                                                         (rule "castDel" (formula "19") (term "1,1,1,0"))
                                                         (rule "castDel" (formula "19") (term "2,1,1,0"))
                                                         (rule "eqSymm" (formula "19") (term "1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
                                                         (rule "applyEq" (formula "18") (term "0,0") (ifseqformula "20"))
                                                          (builtin "One Step Simplification" (formula "18"))
                                                         (rule "true_left" (formula "18"))
                                                         (rule "applyEq" (formula "18") (term "0,0,1,0,0,1,0,0") (ifseqformula "19"))
                                                          (builtin "One Step Simplification" (formula "18"))
                                                         (rule "mul_literals" (formula "18") (term "1,0,0,1,0,0"))
                                                         (rule "add_literals" (formula "18") (term "0,0,1,0,0"))
                                                         (rule "add_zero_left" (formula "18") (term "0,1,0,0"))
                                                         (rule "applyEq" (formula "18") (term "0,1,1,0") (ifseqformula "19"))
                                                         (rule "getOfSeqSingleton" (formula "18") (term "1,1,0"))
                                                         (rule "castDel" (formula "18") (term "2,1,1,0"))
                                                         (rule "castDel" (formula "18") (term "1,1,1,0"))
                                                          (builtin "One Step Simplification" (formula "18"))
                                                         (rule "true_left" (formula "18"))
                                                         (rule "equalityToSeqGetAndSeqLenLeft" (formula "41") (inst "iv=iv"))
                                                          (builtin "One Step Simplification" (formula "41"))
                                                         (rule "andLeft" (formula "41"))
                                                         (rule "getOfSeqSingleton" (formula "42") (term "1,1,0"))
                                                         (rule "castDel" (formula "42") (term "1,1,1,0"))
                                                         (rule "castDel" (formula "42") (term "2,1,1,0"))
                                                         (rule "eqSymm" (formula "42") (term "1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "42") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "42") (term "0,0,0"))
                                                         (rule "applyEq" (formula "42") (term "0,0,1,0,0,1,0,0") (ifseqformula "43"))
                                                          (builtin "One Step Simplification" (formula "42"))
                                                         (rule "mul_literals" (formula "42") (term "1,0,0,1,0,0"))
                                                         (rule "add_literals" (formula "42") (term "0,0,1,0,0"))
                                                         (rule "add_zero_left" (formula "42") (term "0,1,0,0"))
                                                         (rule "applyEq" (formula "41") (term "0,0") (ifseqformula "43"))
                                                          (builtin "One Step Simplification" (formula "41"))
                                                         (rule "true_left" (formula "41"))
                                                         (rule "applyEq" (formula "41") (term "0,1,1,0") (ifseqformula "42"))
                                                         (rule "getOfSeqSingleton" (formula "41") (term "1,1,0"))
                                                         (rule "castDel" (formula "41") (term "1,1,1,0"))
                                                         (rule "castDel" (formula "41") (term "2,1,1,0"))
                                                          (builtin "One Step Simplification" (formula "41"))
                                                         (rule "true_left" (formula "41"))
                                                         (rule "equalityToSeqGetAndSeqLenLeft" (formula "26") (inst "iv=iv"))
                                                          (builtin "One Step Simplification" (formula "26"))
                                                         (rule "andLeft" (formula "26"))
                                                         (rule "getOfSeqSingleton" (formula "27") (term "1,1,0"))
                                                         (rule "castDel" (formula "27") (term "2,1,1,0"))
                                                         (rule "castDel" (formula "27") (term "1,1,1,0"))
                                                         (rule "eqSymm" (formula "27") (term "1,0"))
                                                         (rule "lenOfSeqConcat" (formula "27") (term "1,1,0,0"))
                                                          (builtin "One Step Simplification" (formula "27"))
                                                         (rule "add_literals" (formula "27") (term "1,1,0,0"))
                                                         (rule "lenOfSeqConcat" (formula "26") (term "0"))
                                                          (builtin "One Step Simplification" (formula "26"))
                                                         (rule "add_literals" (formula "26") (term "0"))
                                                         (rule "equal_literals" (formula "26"))
                                                         (rule "closeFalse" (formula "26"))
                                                      )
                                                   )
                                                )
                                             )
                                             (branch "(self_1, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> FALSE"
                                                (rule "eqSymm" (formula "42"))
                                                (rule "applyEq" (formula "43") (term "1") (ifseqformula "42"))
                                                (rule "ifthenelse_split" (formula "56") (term "0,0,1"))
                                                (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> TRUE"
                                                   (rule "elementOfSubsetImpliesElementOfSuperset" (formula "1") (ifseqformula "38"))
                                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "56")))
                                                   (rule "notLeft" (formula "1"))
                                                   (rule "pullOutSelect" (formula "48") (term "0") (inst "selectSK=java_lang_Object_created__6"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "26"))
                                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "57")))
                                                   (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "2,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "2,0"))
                                                   (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "0,0,0,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "0,0,0,0"))
                                                   (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "11"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "applyEqReverse" (formula "49") (term "0") (ifseqformula "1"))
                                                   (rule "close" (formula "49") (ifseqformula "11"))
                                                )
                                                (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> FALSE"
                                                   (rule "lenOfSeqConcat" (formula "57") (term "0,1"))
                                                    (builtin "One Step Simplification" (formula "57"))
                                                   (rule "add_literals" (formula "57") (term "0,1"))
                                                   (rule "qeq_literals" (formula "57") (term "1"))
                                                    (builtin "One Step Simplification" (formula "57"))
                                                   (rule "ifthenelse_split" (formula "26") (term "0"))
                                                   (branch "(self_0, List::$seq) in self_0.footprint@anon_heap_add<<anonHeapFunction>> TRUE"
                                                      (rule "elementOfSubsetImpliesElementOfSuperset" (formula "26") (ifseqformula "21"))
                                                      (rule "elementOfUnion" (formula "26"))
                                                       (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "17")))
                                                      (rule "true_left" (formula "26"))
                                                      (rule "ifthenelse_split" (formula "29") (term "0"))
                                                      (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_add<<anonHeapFunction>> TRUE"
                                                         (rule "applyEqReverse" (formula "31") (term "0") (ifseqformula "30"))
                                                         (rule "hideAuxiliaryEq" (formula "30"))
                                                         (rule "elementOfSubsetImpliesElementOfSuperset" (formula "29") (ifseqformula "21"))
                                                         (rule "elementOfUnion" (formula "29"))
                                                          (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "20")))
                                                         (rule "true_left" (formula "29"))
                                                         (rule "equalityToSeqGetAndSeqLenLeft" (formula "37") (inst "iv=iv"))
                                                          (builtin "One Step Simplification" (formula "37"))
                                                         (rule "andLeft" (formula "37"))
                                                         (rule "inEqSimp_ltToLeq" (formula "38") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "38") (term "0,0,0"))
                                                         (rule "applyEq" (formula "38") (term "0,0,1,0,0,1,0,0") (ifseqformula "39"))
                                                          (builtin "One Step Simplification" (formula "38"))
                                                         (rule "mul_literals" (formula "38") (term "1,0,0,1,0,0"))
                                                         (rule "add_literals" (formula "38") (term "0,0,1,0,0"))
                                                         (rule "applyEq" (formula "37") (term "0,0") (ifseqformula "39"))
                                                          (builtin "One Step Simplification" (formula "37"))
                                                         (rule "true_left" (formula "37"))
                                                         (rule "applyEq" (formula "37") (term "0,0,1,0") (ifseqformula "38"))
                                                          (builtin "One Step Simplification" (formula "37"))
                                                         (rule "true_left" (formula "37"))
                                                         (rule "equalityToSeqGetAndSeqLenLeft" (formula "18") (inst "iv=iv"))
                                                          (builtin "One Step Simplification" (formula "18"))
                                                         (rule "andLeft" (formula "18"))
                                                         (rule "getOfSeqSingleton" (formula "19") (term "1,1,0"))
                                                         (rule "castDel" (formula "19") (term "1,1,1,0"))
                                                         (rule "castDel" (formula "19") (term "2,1,1,0"))
                                                         (rule "eqSymm" (formula "19") (term "1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
                                                         (rule "applyEq" (formula "19") (term "0,0,1,0,0,1,0,0") (ifseqformula "20"))
                                                          (builtin "One Step Simplification" (formula "19"))
                                                         (rule "mul_literals" (formula "19") (term "1,0,0,1,0,0"))
                                                         (rule "add_literals" (formula "19") (term "0,0,1,0,0"))
                                                         (rule "add_zero_left" (formula "19") (term "0,1,0,0"))
                                                         (rule "applyEq" (formula "18") (term "0,0") (ifseqformula "20"))
                                                          (builtin "One Step Simplification" (formula "18"))
                                                         (rule "true_left" (formula "18"))
                                                         (rule "applyEq" (formula "18") (term "0,1,1,0") (ifseqformula "19"))
                                                         (rule "getOfSeqSingleton" (formula "18") (term "1,1,0"))
                                                         (rule "castDel" (formula "18") (term "2,1,1,0"))
                                                         (rule "castDel" (formula "18") (term "1,1,1,0"))
                                                          (builtin "One Step Simplification" (formula "18"))
                                                         (rule "true_left" (formula "18"))
                                                         (rule "equalityToSeqGetAndSeqLenLeft" (formula "43") (inst "iv=iv"))
                                                          (builtin "One Step Simplification" (formula "43"))
                                                         (rule "equal_literals" (formula "43") (term "0"))
                                                          (builtin "One Step Simplification" (formula "43"))
                                                         (rule "closeFalse" (formula "43"))
                                                      )
                                                      (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_add<<anonHeapFunction>> FALSE"
                                                         (rule "applyEqReverse" (formula "30") (term "0") (ifseqformula "29"))
                                                          (builtin "One Step Simplification" (formula "30"))
                                                         (rule "true_left" (formula "30"))
                                                         (rule "hideAuxiliaryEq" (formula "29"))
                                                         (rule "equalityToSeqGetAndSeqLenLeft" (formula "35") (inst "iv=iv"))
                                                          (builtin "One Step Simplification" (formula "35"))
                                                         (rule "andLeft" (formula "35"))
                                                         (rule "inEqSimp_ltToLeq" (formula "36") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "36") (term "0,0,0"))
                                                         (rule "applyEq" (formula "36") (term "0,0,1,0,0,1,0,0") (ifseqformula "37"))
                                                          (builtin "One Step Simplification" (formula "36"))
                                                         (rule "mul_literals" (formula "36") (term "1,0,0,1,0,0"))
                                                         (rule "add_zero_right" (formula "36") (term "0,0,1,0,0"))
                                                         (rule "applyEq" (formula "35") (term "0,0") (ifseqformula "37"))
                                                          (builtin "One Step Simplification" (formula "35"))
                                                         (rule "true_left" (formula "35"))
                                                         (rule "applyEq" (formula "35") (term "0,0,1,0") (ifseqformula "36"))
                                                          (builtin "One Step Simplification" (formula "35"))
                                                         (rule "true_left" (formula "35"))
                                                         (rule "equalityToSeqGetAndSeqLenLeft" (formula "18") (inst "iv=iv"))
                                                          (builtin "One Step Simplification" (formula "18"))
                                                         (rule "andLeft" (formula "18"))
                                                         (rule "getOfSeqSingleton" (formula "19") (term "1,1,0"))
                                                         (rule "castDel" (formula "19") (term "2,1,1,0"))
                                                         (rule "castDel" (formula "19") (term "1,1,1,0"))
                                                         (rule "eqSymm" (formula "19") (term "1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
                                                         (rule "applyEq" (formula "19") (term "0,0,1,0,0,1,0,0") (ifseqformula "20"))
                                                          (builtin "One Step Simplification" (formula "19"))
                                                         (rule "mul_literals" (formula "19") (term "1,0,0,1,0,0"))
                                                         (rule "add_literals" (formula "19") (term "0,0,1,0,0"))
                                                         (rule "add_zero_left" (formula "19") (term "0,1,0,0"))
                                                         (rule "applyEq" (formula "18") (term "0,0") (ifseqformula "20"))
                                                          (builtin "One Step Simplification" (formula "18"))
                                                         (rule "true_left" (formula "18"))
                                                         (rule "applyEq" (formula "18") (term "0,1,1,0") (ifseqformula "19"))
                                                         (rule "getOfSeqSingleton" (formula "18") (term "1,1,0"))
                                                         (rule "castDel" (formula "18") (term "2,1,1,0"))
                                                         (rule "castDel" (formula "18") (term "1,1,1,0"))
                                                          (builtin "One Step Simplification" (formula "18"))
                                                         (rule "true_left" (formula "18"))
                                                         (rule "equalityToSeqGetAndSeqLenLeft" (formula "41") (inst "iv=iv"))
                                                          (builtin "One Step Simplification" (formula "41"))
                                                         (rule "equal_literals" (formula "41") (term "0"))
                                                          (builtin "One Step Simplification" (formula "41"))
                                                         (rule "closeFalse" (formula "41"))
                                                      )
                                                   )
                                                   (branch "(self_0, List::$seq) in self_0.footprint@anon_heap_add<<anonHeapFunction>> FALSE"
                                                      (rule "eqSymm" (formula "26"))
                                                      (rule "applyEqRigid" (formula "27") (term "1") (ifseqformula "26"))
                                                      (rule "ifthenelse_split" (formula "28") (term "0"))
                                                      (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_add<<anonHeapFunction>> TRUE"
                                                         (rule "applyEqReverse" (formula "30") (term "0") (ifseqformula "29"))
                                                         (rule "hideAuxiliaryEq" (formula "29"))
                                                         (rule "elementOfSubsetImpliesElementOfSuperset" (formula "28") (ifseqformula "21"))
                                                         (rule "elementOfUnion" (formula "28"))
                                                          (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "20")))
                                                         (rule "true_left" (formula "28"))
                                                         (rule "equalityToSeqGetAndSeqLenLeft" (formula "36") (inst "iv=iv"))
                                                          (builtin "One Step Simplification" (formula "36"))
                                                         (rule "andLeft" (formula "36"))
                                                         (rule "inEqSimp_ltToLeq" (formula "37") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "37") (term "0,0,0"))
                                                         (rule "applyEq" (formula "37") (term "0,0,1,0") (ifseqformula "38"))
                                                          (builtin "One Step Simplification" (formula "37"))
                                                         (rule "true_left" (formula "37"))
                                                         (rule "applyEq" (formula "36") (term "0,0") (ifseqformula "37"))
                                                          (builtin "One Step Simplification" (formula "36"))
                                                         (rule "true_left" (formula "36"))
                                                         (rule "equalityToSeqGetAndSeqLenLeft" (formula "18") (inst "iv=iv"))
                                                          (builtin "One Step Simplification" (formula "18"))
                                                         (rule "andLeft" (formula "18"))
                                                         (rule "getOfSeqSingleton" (formula "19") (term "1,1,0"))
                                                         (rule "castDel" (formula "19") (term "2,1,1,0"))
                                                         (rule "castDel" (formula "19") (term "1,1,1,0"))
                                                         (rule "eqSymm" (formula "19") (term "1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
                                                         (rule "applyEq" (formula "18") (term "0,0") (ifseqformula "20"))
                                                          (builtin "One Step Simplification" (formula "18"))
                                                         (rule "true_left" (formula "18"))
                                                         (rule "applyEq" (formula "18") (term "0,1,1,0") (ifseqformula "19"))
                                                         (rule "getOfSeqSingleton" (formula "18") (term "1,1,0"))
                                                         (rule "castDel" (formula "18") (term "2,1,1,0"))
                                                         (rule "castDel" (formula "18") (term "1,1,1,0"))
                                                          (builtin "One Step Simplification" (formula "18"))
                                                         (rule "true_left" (formula "18"))
                                                         (rule "equalityToSeqGetAndSeqLenLeft" (formula "42") (inst "iv=iv"))
                                                          (builtin "One Step Simplification" (formula "42"))
                                                         (rule "equal_literals" (formula "42") (term "0"))
                                                          (builtin "One Step Simplification" (formula "42"))
                                                         (rule "closeFalse" (formula "42"))
                                                      )
                                                      (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_add<<anonHeapFunction>> FALSE"
                                                         (rule "applyEqReverse" (formula "29") (term "0") (ifseqformula "28"))
                                                          (builtin "One Step Simplification" (formula "29"))
                                                         (rule "true_left" (formula "29"))
                                                         (rule "hideAuxiliaryEq" (formula "28"))
                                                         (rule "equalityToSeqGetAndSeqLenLeft" (formula "34") (inst "iv=iv"))
                                                          (builtin "One Step Simplification" (formula "34"))
                                                         (rule "andLeft" (formula "34"))
                                                         (rule "inEqSimp_ltToLeq" (formula "35") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "35") (term "0,0,0"))
                                                         (rule "applyEq" (formula "34") (term "0,0") (ifseqformula "36"))
                                                          (builtin "One Step Simplification" (formula "34"))
                                                         (rule "true_left" (formula "34"))
                                                         (rule "applyEq" (formula "34") (term "0,0,1,0") (ifseqformula "35"))
                                                          (builtin "One Step Simplification" (formula "34"))
                                                         (rule "true_left" (formula "34"))
                                                         (rule "equalityToSeqGetAndSeqLenLeft" (formula "18") (inst "iv=iv"))
                                                          (builtin "One Step Simplification" (formula "18"))
                                                         (rule "andLeft" (formula "18"))
                                                         (rule "getOfSeqSingleton" (formula "19") (term "1,1,0"))
                                                         (rule "castDel" (formula "19") (term "1,1,1,0"))
                                                         (rule "castDel" (formula "19") (term "2,1,1,0"))
                                                         (rule "eqSymm" (formula "19") (term "1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
                                                         (rule "applyEq" (formula "19") (term "0,1,1,0") (ifseqformula "20"))
                                                         (rule "getOfSeqSingleton" (formula "19") (term "1,1,0"))
                                                         (rule "castDel" (formula "19") (term "1,1,1,0"))
                                                         (rule "castDel" (formula "19") (term "2,1,1,0"))
                                                          (builtin "One Step Simplification" (formula "19"))
                                                         (rule "true_left" (formula "19"))
                                                         (rule "applyEq" (formula "18") (term "0,0") (ifseqformula "19"))
                                                          (builtin "One Step Simplification" (formula "18"))
                                                         (rule "true_left" (formula "18"))
                                                         (rule "equalityToSeqGetAndSeqLenLeft" (formula "40") (inst "iv=iv"))
                                                          (builtin "One Step Simplification" (formula "40"))
                                                         (rule "equal_literals" (formula "40") (term "0"))
                                                          (builtin "One Step Simplification" (formula "40"))
                                                         (rule "closeFalse" (formula "40"))
                                                      )
                                                   )
                                                )
                                             )
                                          )
                                          (branch "(self_1, List::$footprint) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> FALSE"
                                             (rule "applyEqReverse" (formula "45") (term "0") (ifseqformula "44"))
                                              (builtin "One Step Simplification" (formula "45"))
                                             (rule "true_left" (formula "45"))
                                             (rule "hideAuxiliaryEq" (formula "44"))
                                             (rule "ifthenelse_split" (formula "42") (term "0"))
                                             (branch "(self_1, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> TRUE"
                                                (rule "elementOfSubsetImpliesElementOfSuperset" (formula "42") (ifseqformula "37"))
                                                 (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "52")))
                                                (rule "replaceKnownSelect_taclet0000000_18" (formula "42") (term "0,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet0000000_21" (formula "42") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "42"))
                                                (rule "true_left" (formula "42"))
                                                (rule "ifthenelse_split" (formula "55") (term "0,0,1"))
                                                (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> TRUE"
                                                   (rule "elementOfSubsetImpliesElementOfSuperset" (formula "1") (ifseqformula "38"))
                                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "55")))
                                                   (rule "notLeft" (formula "1"))
                                                   (rule "pullOutSelect" (formula "47") (term "0") (inst "selectSK=java_lang_Object_created__6"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "26"))
                                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "56")))
                                                   (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "2,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "2,0"))
                                                   (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "0,0,0,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "0,0,0,0"))
                                                   (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "11"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "applyEqReverse" (formula "48") (term "0") (ifseqformula "1"))
                                                   (rule "close" (formula "48") (ifseqformula "11"))
                                                )
                                                (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> FALSE"
                                                   (rule "lenOfSeqConcat" (formula "56") (term "0,1"))
                                                    (builtin "One Step Simplification" (formula "56"))
                                                   (rule "add_literals" (formula "56") (term "0,1"))
                                                   (rule "qeq_literals" (formula "56") (term "1"))
                                                    (builtin "One Step Simplification" (formula "56"))
                                                   (rule "ifthenelse_split" (formula "26") (term "0"))
                                                   (branch "(self_0, List::$seq) in self_0.footprint@anon_heap_add<<anonHeapFunction>> TRUE"
                                                      (rule "elementOfSubsetImpliesElementOfSuperset" (formula "26") (ifseqformula "21"))
                                                      (rule "elementOfUnion" (formula "26"))
                                                       (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "17")))
                                                      (rule "true_left" (formula "26"))
                                                      (rule "ifthenelse_split" (formula "29") (term "0"))
                                                      (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_add<<anonHeapFunction>> TRUE"
                                                         (rule "applyEqReverse" (formula "31") (term "0") (ifseqformula "30"))
                                                         (rule "hideAuxiliaryEq" (formula "30"))
                                                         (rule "elementOfSubsetImpliesElementOfSuperset" (formula "29") (ifseqformula "21"))
                                                         (rule "elementOfUnion" (formula "29"))
                                                          (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "20")))
                                                         (rule "true_left" (formula "29"))
                                                         (rule "equalityToSeqGetAndSeqLenLeft" (formula "45") (inst "iv=iv"))
                                                          (builtin "One Step Simplification" (formula "45"))
                                                         (rule "andLeft" (formula "45"))
                                                         (rule "getOfSeqSingleton" (formula "46") (term "1,1,0"))
                                                         (rule "castDel" (formula "46") (term "1,1,1,0"))
                                                         (rule "castDel" (formula "46") (term "2,1,1,0"))
                                                         (rule "eqSymm" (formula "46") (term "1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "46") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "46") (term "0,0,0"))
                                                         (rule "applyEqRigid" (formula "46") (term "0,0,1,0,0,1,0,0") (ifseqformula "47"))
                                                          (builtin "One Step Simplification" (formula "46"))
                                                         (rule "mul_literals" (formula "46") (term "1,0,0,1,0,0"))
                                                         (rule "add_literals" (formula "46") (term "0,0,1,0,0"))
                                                         (rule "add_zero_left" (formula "46") (term "0,1,0,0"))
                                                         (rule "applyEqRigid" (formula "45") (term "0,0") (ifseqformula "47"))
                                                          (builtin "One Step Simplification" (formula "45"))
                                                         (rule "true_left" (formula "45"))
                                                         (rule "applyEq" (formula "45") (term "0,1,1,0") (ifseqformula "46"))
                                                         (rule "getOfSeqSingleton" (formula "45") (term "1,1,0"))
                                                         (rule "castDel" (formula "45") (term "1,1,1,0"))
                                                         (rule "castDel" (formula "45") (term "2,1,1,0"))
                                                          (builtin "One Step Simplification" (formula "45"))
                                                         (rule "true_left" (formula "45"))
                                                         (rule "equalityToSeqGetAndSeqLenLeft" (formula "37") (inst "iv=iv"))
                                                          (builtin "One Step Simplification" (formula "37"))
                                                         (rule "andLeft" (formula "37"))
                                                         (rule "inEqSimp_ltToLeq" (formula "38") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "38") (term "0,0,0"))
                                                         (rule "applyEq" (formula "38") (term "0,0,1,0") (ifseqformula "39"))
                                                          (builtin "One Step Simplification" (formula "38"))
                                                         (rule "true_left" (formula "38"))
                                                         (rule "applyEq" (formula "37") (term "0,0") (ifseqformula "38"))
                                                          (builtin "One Step Simplification" (formula "37"))
                                                         (rule "true_left" (formula "37"))
                                                         (rule "equalityToSeqGetAndSeqLenLeft" (formula "18") (inst "iv=iv"))
                                                          (builtin "One Step Simplification" (formula "18"))
                                                         (rule "andLeft" (formula "18"))
                                                         (rule "getOfSeqSingleton" (formula "19") (term "1,1,0"))
                                                         (rule "castDel" (formula "19") (term "1,1,1,0"))
                                                         (rule "castDel" (formula "19") (term "2,1,1,0"))
                                                         (rule "eqSymm" (formula "19") (term "1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
                                                         (rule "applyEq" (formula "19") (term "0,0,1,0,0,1,0,0") (ifseqformula "20"))
                                                          (builtin "One Step Simplification" (formula "19"))
                                                         (rule "mul_literals" (formula "19") (term "1,0,0,1,0,0"))
                                                         (rule "add_literals" (formula "19") (term "0,0,1,0,0"))
                                                         (rule "add_zero_left" (formula "19") (term "0,1,0,0"))
                                                         (rule "applyEq" (formula "18") (term "0,0") (ifseqformula "20"))
                                                          (builtin "One Step Simplification" (formula "18"))
                                                         (rule "true_left" (formula "18"))
                                                         (rule "applyEq" (formula "18") (term "0,1,1,0") (ifseqformula "19"))
                                                         (rule "getOfSeqSingleton" (formula "18") (term "1,1,0"))
                                                         (rule "castDel" (formula "18") (term "2,1,1,0"))
                                                         (rule "castDel" (formula "18") (term "1,1,1,0"))
                                                          (builtin "One Step Simplification" (formula "18"))
                                                         (rule "true_left" (formula "18"))
                                                         (rule "equalityToSeqGetAndSeqLenLeft" (formula "44") (inst "iv=iv"))
                                                          (builtin "One Step Simplification" (formula "44"))
                                                         (rule "andLeft" (formula "44"))
                                                         (rule "getOfSeqSingleton" (formula "45") (term "1,1,0"))
                                                         (rule "castDel" (formula "45") (term "1,1,1,0"))
                                                         (rule "castDel" (formula "45") (term "2,1,1,0"))
                                                         (rule "eqSymm" (formula "45") (term "1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "45") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "45") (term "0,0,0"))
                                                         (rule "applyEq" (formula "45") (term "0,1,1,0") (ifseqformula "46"))
                                                         (rule "getOfSeqSingleton" (formula "45") (term "1,1,0"))
                                                         (rule "castDel" (formula "45") (term "2,1,1,0"))
                                                         (rule "castDel" (formula "45") (term "1,1,1,0"))
                                                          (builtin "One Step Simplification" (formula "45"))
                                                         (rule "true_left" (formula "45"))
                                                         (rule "applyEq" (formula "44") (term "0,0") (ifseqformula "45"))
                                                          (builtin "One Step Simplification" (formula "44"))
                                                         (rule "true_left" (formula "44"))
                                                         (rule "equalityToSeqGetAndSeqLenLeft" (formula "27") (inst "iv=iv"))
                                                         (rule "andLeft" (formula "27"))
                                                         (rule "lenOfSeqConcat" (formula "27") (term "1"))
                                                          (builtin "One Step Simplification" (formula "27"))
                                                         (rule "add_literals" (formula "27") (term "1"))
                                                         (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "28") (term "0,0,0"))
                                                         (rule "applyEq" (formula "27") (term "0,0") (ifseqformula "29"))
                                                         (rule "lenOfSeqConcat" (formula "27") (term "0"))
                                                          (builtin "One Step Simplification" (formula "27"))
                                                         (rule "add_literals" (formula "27") (term "0"))
                                                          (builtin "One Step Simplification" (formula "27"))
                                                         (rule "true_left" (formula "27"))
                                                         (rule "applyEq" (formula "27") (term "0,0,1,0") (ifseqformula "28"))
                                                          (builtin "One Step Simplification" (formula "27"))
                                                         (rule "true_left" (formula "27"))
                                                         (rule "onlyCreatedObjectsAreInLocSets" (formula "17") (ifseqformula "6"))
                                                         (rule "replace_known_left" (formula "17") (term "1") (ifseqformula "9"))
                                                          (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "55")))
                                                         (rule "true_left" (formula "17"))
                                                         (rule "onlyCreatedObjectsAreInLocSets" (formula "43") (ifseqformula "32"))
                                                         (rule "replace_known_left" (formula "43") (term "1") (ifseqformula "35"))
                                                          (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "53")))
                                                         (rule "true_left" (formula "43"))
                                                         (rule "onlyCreatedObjectsAreInLocSets" (formula "20") (ifseqformula "6"))
                                                         (rule "replace_known_right" (formula "20") (term "0") (ifseqformula "55"))
                                                          (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "9")))
                                                         (rule "true_left" (formula "20"))
                                                         (rule "onlyCreatedObjectsAreInLocSets" (formula "26") (ifseqformula "14"))
                                                         (rule "replace_known_right" (formula "26") (term "0") (ifseqformula "55"))
                                                          (builtin "One Step Simplification" (formula "26"))
                                                         (rule "onlyCreatedObjectsAreInLocSets" (formula "30") (ifseqformula "14"))
                                                         (rule "replace_known_left" (formula "30") (term "1") (ifseqformula "26"))
                                                          (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "56")))
                                                         (rule "true_left" (formula "30"))
                                                          (builtin "Use Dependency Contract" (formula "58") (ifInst ""  (formula "32")) (ifInst ""  (formula "42")) (ifInst ""  (formula "34")) (contract "ArrayList[java.lang.Object::<inv>()].JML accessible clause.0"))
                                                         (rule "replaceKnownSelect_taclet0000_9" (formula "48") (term "1,1,0"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet0010100220000000000_28" (formula "48") (term "1,1,0"))
                                                         (rule "wellFormedAnonEQ" (formula "48") (term "0,1,0,0,0") (ifseqformula "24"))
                                                         (rule "wellFormedAnonEQ" (formula "48") (term "1,1,0,0,0") (ifseqformula "42"))
                                                         (rule "wellFormedAnonEQ" (formula "48") (term "0,1,1,0,0,0") (ifseqformula "34"))
                                                         (rule "wellFormedAnonEQ" (formula "48") (term "0,0,1,0,0,0") (ifseqformula "15"))
                                                         (rule "wellFormedAnonEQ" (formula "48") (term "0,0,0,1,0,0,0") (ifseqformula "7"))
                                                         (rule "wellFormedAnonEQ" (formula "48") (term "0,0,1,1,0,0,0") (ifseqformula "24"))
                                                         (rule "wellFormedAnonEQ" (formula "48") (term "0,0,0,1,1,0,0,0") (ifseqformula "15"))
                                                         (rule "wellFormedAnonEQ" (formula "48") (term "0,0,0,0,1,1,0,0,0") (ifseqformula "7"))
                                                         (rule "replace_known_left" (formula "48") (term "1,0,1,0,0,0") (ifseqformula "23"))
                                                          (builtin "One Step Simplification" (formula "48") (ifInst ""  (formula "56")) (ifInst ""  (formula "2")) (ifInst ""  (formula "6")) (ifInst ""  (formula "14")) (ifInst ""  (formula "2")) (ifInst ""  (formula "6")) (ifInst ""  (formula "14")) (ifInst ""  (formula "23")) (ifInst ""  (formula "33")) (ifInst ""  (formula "41")) (ifInst ""  (formula "32")) (ifInst ""  (formula "59")) (ifInst ""  (formula "32")))
                                                         (rule "notLeft" (formula "48"))
                                                         (rule "disjointDefinition" (formula "48") (term "1"))
                                                         (rule "pullOutSelect" (formula "48") (term "0,0") (inst "selectSK=java_lang_Object_created__6"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "25"))
                                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "57")))
                                                         (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "2,0"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "2,0"))
                                                         (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "0,0,0,0"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "0,0,0,0"))
                                                         (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "10"))
                                                          (builtin "One Step Simplification" (formula "1"))
                                                         (rule "applyEqReverse" (formula "49") (term "0,0") (ifseqformula "1"))
                                                         (rule "hideAuxiliaryEq" (formula "1"))
                                                         (rule "replace_known_left" (formula "48") (term "0") (ifseqformula "9"))
                                                          (builtin "One Step Simplification" (formula "48"))
                                                         (rule "equalityToElementOfRight" (formula "48") (inst "fv=fv") (inst "ov=ov"))
                                                          (builtin "One Step Simplification" (formula "48"))
                                                         (rule "allRight" (formula "48") (inst "sk=ov_0"))
                                                         (rule "allRight" (formula "48") (inst "sk=fv_0"))
                                                         (rule "notRight" (formula "48"))
                                                         (rule "elementOfIntersect" (formula "1"))
                                                         (rule "andLeft" (formula "1"))
                                                         (rule "elementOfSubsetImpliesElementOfSuperset" (formula "1") (ifseqformula "41"))
                                                          (builtin "One Step Simplification" (formula "1"))
                                                         (rule "andLeft" (formula "1"))
                                                         (rule "notLeft" (formula "2"))
                                                         (rule "notLeft" (formula "1"))
                                                         (rule "elementOfSubsetImpliesElementOfSuperset" (formula "2") (ifseqformula "33"))
                                                         (rule "elementOfUnion" (formula "2"))
                                                          (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "51")))
                                                         (rule "pullOutSelect" (formula "52") (term "0") (inst "selectSK=java_lang_Object_created__7"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "28"))
                                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "52")))
                                                         (rule "ifthenelse_negated" (formula "1") (term "0"))
                                                         (rule "apply_eq_boolean_rigid" (formula "1") (term "1") (ifseqformula "53"))
                                                          (builtin "One Step Simplification" (formula "1"))
                                                         (rule "notLeft" (formula "1"))
                                                         (rule "ifEqualsTRUE" (formula "51"))
                                                          (builtin "One Step Simplification" (formula "51"))
                                                         (rule "orRight" (formula "51"))
                                                         (rule "replace_known_right" (formula "52") (term "0,0") (ifseqformula "51"))
                                                          (builtin "One Step Simplification" (formula "52"))
                                                         (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "51"))
                                                          (builtin "One Step Simplification" (formula "2"))
                                                         (rule "true_left" (formula "2"))
                                                         (rule "pullOutSelect" (formula "50") (term "0") (inst "selectSK=java_lang_Object_created__8"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "18"))
                                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")))
                                                         (rule "ifthenelse_negated" (formula "1") (term "0"))
                                                         (rule "apply_eq_boolean_rigid" (formula "1") (term "1") (ifseqformula "51"))
                                                          (builtin "One Step Simplification" (formula "1"))
                                                         (rule "notLeft" (formula "1"))
                                                         (rule "ifEqualsTRUE" (formula "50"))
                                                          (builtin "One Step Simplification" (formula "50"))
                                                         (rule "orRight" (formula "50"))
                                                         (rule "replace_known_right" (formula "51") (term "0,0") (ifseqformula "50"))
                                                          (builtin "One Step Simplification" (formula "51"))
                                                         (rule "pullOutSelect" (formula "50") (term "0") (inst "selectSK=java_lang_Object_created__9"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "10"))
                                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "55")))
                                                         (rule "ifthenelse_negated" (formula "1") (term "0"))
                                                         (rule "apply_eq_boolean" (formula "1") (term "1") (ifseqformula "51"))
                                                          (builtin "One Step Simplification" (formula "1"))
                                                         (rule "notLeft" (formula "1"))
                                                         (rule "ifEqualsTRUE" (formula "50"))
                                                          (builtin "One Step Simplification" (formula "50"))
                                                         (rule "orRight" (formula "50"))
                                                         (rule "replace_known_right" (formula "51") (term "0,0") (ifseqformula "50"))
                                                          (builtin "One Step Simplification" (formula "51"))
                                                         (rule "hideAuxiliaryEqConcrete2" (formula "57"))
                                                         (rule "hideAuxiliaryEqConcrete2" (formula "54"))
                                                         (rule "hideAuxiliaryEqConcrete2" (formula "52"))
                                                         (rule "onlyCreatedObjectsAreInLocSets" (formula "2") (ifseqformula "25"))
                                                         (rule "replace_known_right" (formula "2") (term "1") (ifseqformula "54"))
                                                          (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "55")))
                                                         (rule "closeFalse" (formula "2"))
                                                      )
                                                      (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_add<<anonHeapFunction>> FALSE"
                                                         (rule "applyEqReverse" (formula "30") (term "0") (ifseqformula "29"))
                                                          (builtin "One Step Simplification" (formula "30"))
                                                         (rule "true_left" (formula "30"))
                                                         (rule "hideAuxiliaryEq" (formula "29"))
                                                         (rule "equalityToSeqGetAndSeqLenLeft" (formula "43") (inst "iv=iv"))
                                                          (builtin "One Step Simplification" (formula "43"))
                                                         (rule "andLeft" (formula "43"))
                                                         (rule "getOfSeqSingleton" (formula "44") (term "1,1,0"))
                                                         (rule "castDel" (formula "44") (term "2,1,1,0"))
                                                         (rule "castDel" (formula "44") (term "1,1,1,0"))
                                                         (rule "eqSymm" (formula "44") (term "1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "44") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "44") (term "0,0,0"))
                                                         (rule "applyEq" (formula "44") (term "0,1,1,0") (ifseqformula "45"))
                                                         (rule "getOfSeqSingleton" (formula "44") (term "1,1,0"))
                                                         (rule "castDel" (formula "44") (term "2,1,1,0"))
                                                         (rule "castDel" (formula "44") (term "1,1,1,0"))
                                                          (builtin "One Step Simplification" (formula "44"))
                                                         (rule "true_left" (formula "44"))
                                                         (rule "applyEqRigid" (formula "43") (term "0,0") (ifseqformula "44"))
                                                          (builtin "One Step Simplification" (formula "43"))
                                                         (rule "true_left" (formula "43"))
                                                         (rule "equalityToSeqGetAndSeqLenLeft" (formula "35") (inst "iv=iv"))
                                                          (builtin "One Step Simplification" (formula "35"))
                                                         (rule "andLeft" (formula "35"))
                                                         (rule "inEqSimp_ltToLeq" (formula "36") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "36") (term "0,0,0"))
                                                         (rule "applyEq" (formula "36") (term "0,0,1,0") (ifseqformula "37"))
                                                          (builtin "One Step Simplification" (formula "36"))
                                                         (rule "true_left" (formula "36"))
                                                         (rule "applyEq" (formula "35") (term "0,0") (ifseqformula "36"))
                                                          (builtin "One Step Simplification" (formula "35"))
                                                         (rule "true_left" (formula "35"))
                                                         (rule "equalityToSeqGetAndSeqLenLeft" (formula "18") (inst "iv=iv"))
                                                          (builtin "One Step Simplification" (formula "18"))
                                                         (rule "andLeft" (formula "18"))
                                                         (rule "getOfSeqSingleton" (formula "19") (term "1,1,0"))
                                                         (rule "castDel" (formula "19") (term "2,1,1,0"))
                                                         (rule "castDel" (formula "19") (term "1,1,1,0"))
                                                         (rule "eqSymm" (formula "19") (term "1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
                                                         (rule "applyEq" (formula "18") (term "0,0") (ifseqformula "20"))
                                                          (builtin "One Step Simplification" (formula "18"))
                                                         (rule "true_left" (formula "18"))
                                                         (rule "applyEq" (formula "18") (term "0,1,1,0") (ifseqformula "19"))
                                                         (rule "getOfSeqSingleton" (formula "18") (term "1,1,0"))
                                                         (rule "castDel" (formula "18") (term "1,1,1,0"))
                                                         (rule "castDel" (formula "18") (term "2,1,1,0"))
                                                          (builtin "One Step Simplification" (formula "18"))
                                                         (rule "true_left" (formula "18"))
                                                         (rule "equalityToSeqGetAndSeqLenLeft" (formula "42") (inst "iv=iv"))
                                                          (builtin "One Step Simplification" (formula "42"))
                                                         (rule "andLeft" (formula "42"))
                                                         (rule "getOfSeqSingleton" (formula "43") (term "1,1,0"))
                                                         (rule "castDel" (formula "43") (term "2,1,1,0"))
                                                         (rule "castDel" (formula "43") (term "1,1,1,0"))
                                                         (rule "eqSymm" (formula "43") (term "1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "43") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "43") (term "0,0,0"))
                                                         (rule "applyEq" (formula "43") (term "0,1,1,0") (ifseqformula "44"))
                                                         (rule "getOfSeqSingleton" (formula "43") (term "1,1,0"))
                                                         (rule "castDel" (formula "43") (term "2,1,1,0"))
                                                         (rule "castDel" (formula "43") (term "1,1,1,0"))
                                                          (builtin "One Step Simplification" (formula "43"))
                                                         (rule "true_left" (formula "43"))
                                                         (rule "applyEq" (formula "42") (term "0,0") (ifseqformula "43"))
                                                          (builtin "One Step Simplification" (formula "42"))
                                                         (rule "true_left" (formula "42"))
                                                         (rule "equalityToSeqGetAndSeqLenLeft" (formula "27") (inst "iv=iv"))
                                                         (rule "andLeft" (formula "27"))
                                                         (rule "lenOfSeqConcat" (formula "27") (term "1"))
                                                          (builtin "One Step Simplification" (formula "27"))
                                                         (rule "add_literals" (formula "27") (term "1"))
                                                         (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "28") (term "0,0,0"))
                                                         (rule "applyEq" (formula "27") (term "0,0") (ifseqformula "29"))
                                                         (rule "lenOfSeqConcat" (formula "27") (term "0"))
                                                          (builtin "One Step Simplification" (formula "27"))
                                                         (rule "add_literals" (formula "27") (term "0"))
                                                          (builtin "One Step Simplification" (formula "27"))
                                                         (rule "true_left" (formula "27"))
                                                         (rule "applyEq" (formula "27") (term "0,0,1,0") (ifseqformula "28"))
                                                          (builtin "One Step Simplification" (formula "27"))
                                                         (rule "true_left" (formula "27"))
                                                         (rule "onlyCreatedObjectsAreInLocSets" (formula "17") (ifseqformula "6"))
                                                         (rule "replace_known_right" (formula "17") (term "0") (ifseqformula "54"))
                                                          (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "9")))
                                                         (rule "true_left" (formula "17"))
                                                         (rule "onlyCreatedObjectsAreInLocSets" (formula "41") (ifseqformula "30"))
                                                         (rule "replace_known_right" (formula "41") (term "0") (ifseqformula "52"))
                                                          (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "33")))
                                                         (rule "true_left" (formula "41"))
                                                         (rule "onlyCreatedObjectsAreInLocSets" (formula "20") (ifseqformula "6"))
                                                         (rule "replace_known_left" (formula "20") (term "1") (ifseqformula "9"))
                                                          (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "54")))
                                                         (rule "true_left" (formula "20"))
                                                         (rule "onlyCreatedObjectsAreInLocSets" (formula "26") (ifseqformula "14"))
                                                         (rule "replace_known_right" (formula "26") (term "0") (ifseqformula "54"))
                                                          (builtin "One Step Simplification" (formula "26"))
                                                          (builtin "Use Dependency Contract" (formula "57") (ifInst ""  (formula "30")) (ifInst ""  (formula "40")) (ifInst ""  (formula "32")) (contract "ArrayList[java.lang.Object::<inv>()].JML accessible clause.0"))
                                                         (rule "replaceKnownSelect_taclet0000_9" (formula "46") (term "1,1,0"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet1010100220000000000_28" (formula "46") (term "1,1,0"))
                                                         (rule "wellFormedAnonEQ" (formula "46") (term "1,1,0,0,0") (ifseqformula "40"))
                                                         (rule "wellFormedAnonEQ" (formula "46") (term "0,1,0,0,0") (ifseqformula "24"))
                                                         (rule "wellFormedAnonEQ" (formula "46") (term "0,0,1,0,0,0") (ifseqformula "15"))
                                                         (rule "wellFormedAnonEQ" (formula "46") (term "0,1,1,0,0,0") (ifseqformula "32"))
                                                         (rule "wellFormedAnonEQ" (formula "46") (term "0,0,0,1,0,0,0") (ifseqformula "7"))
                                                         (rule "wellFormedAnonEQ" (formula "46") (term "0,0,1,1,0,0,0") (ifseqformula "24"))
                                                         (rule "wellFormedAnonEQ" (formula "46") (term "0,0,0,1,1,0,0,0") (ifseqformula "15"))
                                                         (rule "wellFormedAnonEQ" (formula "46") (term "0,0,0,0,1,1,0,0,0") (ifseqformula "7"))
                                                         (rule "replace_known_left" (formula "46") (term "1,0,0") (ifseqformula "30"))
                                                          (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "55")) (ifInst ""  (formula "2")) (ifInst ""  (formula "6")) (ifInst ""  (formula "14")) (ifInst ""  (formula "23")) (ifInst ""  (formula "2")) (ifInst ""  (formula "6")) (ifInst ""  (formula "14")) (ifInst ""  (formula "23")) (ifInst ""  (formula "31")) (ifInst ""  (formula "39")) (ifInst ""  (formula "58")) (ifInst ""  (formula "30")))
                                                         (rule "notLeft" (formula "46"))
                                                         (rule "disjointDefinition" (formula "46") (term "1"))
                                                         (rule "pullOutSelect" (formula "46") (term "0,0") (inst "selectSK=java_lang_Object_created__6"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "25"))
                                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "56")))
                                                         (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "2,0"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "2,0"))
                                                         (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "0,0,0,0"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "0,0,0,0"))
                                                         (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "10"))
                                                          (builtin "One Step Simplification" (formula "1"))
                                                         (rule "applyEqReverse" (formula "47") (term "0,0") (ifseqformula "1"))
                                                         (rule "hideAuxiliaryEq" (formula "1"))
                                                         (rule "replace_known_left" (formula "46") (term "0") (ifseqformula "9"))
                                                          (builtin "One Step Simplification" (formula "46"))
                                                         (rule "equalityToElementOfRight" (formula "46") (inst "fv=fv") (inst "ov=ov"))
                                                          (builtin "One Step Simplification" (formula "46"))
                                                         (rule "allRight" (formula "46") (inst "sk=ov_0"))
                                                         (rule "allRight" (formula "46") (inst "sk=fv_0"))
                                                         (rule "notRight" (formula "46"))
                                                         (rule "elementOfIntersect" (formula "1"))
                                                         (rule "andLeft" (formula "1"))
                                                         (rule "elementOfSubsetImpliesElementOfSuperset" (formula "1") (ifseqformula "39"))
                                                          (builtin "One Step Simplification" (formula "1"))
                                                         (rule "andLeft" (formula "1"))
                                                         (rule "notLeft" (formula "1"))
                                                         (rule "notLeft" (formula "1"))
                                                         (rule "elementOfSubsetImpliesElementOfSuperset" (formula "2") (ifseqformula "23"))
                                                         (rule "elementOfUnion" (formula "2"))
                                                          (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "50")))
                                                         (rule "pullOutSelect" (formula "49") (term "0") (inst "selectSK=java_lang_Object_created__7"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "28"))
                                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "51")))
                                                         (rule "ifthenelse_negated" (formula "1") (term "0"))
                                                         (rule "apply_eq_boolean_rigid" (formula "1") (term "1") (ifseqformula "50"))
                                                          (builtin "One Step Simplification" (formula "1"))
                                                         (rule "notLeft" (formula "1"))
                                                         (rule "ifEqualsTRUE" (formula "49"))
                                                          (builtin "One Step Simplification" (formula "49"))
                                                         (rule "orRight" (formula "49"))
                                                         (rule "replace_known_right" (formula "50") (term "0,0") (ifseqformula "49"))
                                                          (builtin "One Step Simplification" (formula "50"))
                                                         (rule "pullOutSelect" (formula "2") (term "0,0,0") (inst "selectSK=java_lang_Object_created__8"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "11"))
                                                          (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "53")))
                                                         (rule "ifthenelse_negated" (formula "2") (term "0"))
                                                         (rule "pullOutSelect" (formula "50") (term "0") (inst "selectSK=java_lang_Object_created__9"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "20"))
                                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "54")))
                                                         (rule "replaceKnownSelect_taclet1010100220000000000_32" (formula "1") (term "2,0"))
                                                         (rule "replaceKnownSelect_taclet1010100220000000000_32" (formula "1") (term "0,0,0,0"))
                                                         (rule "ifthenelse_negated" (formula "1") (term "0"))
                                                         (rule "apply_eq_boolean_rigid" (formula "1") (term "1") (ifseqformula "51"))
                                                          (builtin "One Step Simplification" (formula "1"))
                                                         (rule "notLeft" (formula "1"))
                                                         (rule "ifEqualsTRUE" (formula "50"))
                                                          (builtin "One Step Simplification" (formula "50"))
                                                         (rule "orRight" (formula "50"))
                                                         (rule "replace_known_right" (formula "51") (term "0,0") (ifseqformula "50"))
                                                          (builtin "One Step Simplification" (formula "51"))
                                                         (rule "replace_known_right" (formula "3") (term "0,0") (ifseqformula "50"))
                                                          (builtin "One Step Simplification" (formula "3"))
                                                         (rule "true_left" (formula "3"))
                                                         (rule "apply_eq_boolean_rigid" (formula "2") (term "1") (ifseqformula "49"))
                                                          (builtin "One Step Simplification" (formula "2"))
                                                         (rule "notLeft" (formula "2"))
                                                         (rule "ifEqualsTRUE" (formula "48"))
                                                          (builtin "One Step Simplification" (formula "48"))
                                                         (rule "orRight" (formula "48"))
                                                         (rule "replace_known_right" (formula "49") (term "0,0") (ifseqformula "48"))
                                                          (builtin "One Step Simplification" (formula "49"))
                                                         (rule "hideAuxiliaryEqConcrete2" (formula "54"))
                                                         (rule "hideAuxiliaryEqConcrete2" (formula "52"))
                                                         (rule "hideAuxiliaryEqConcrete2" (formula "50"))
                                                         (rule "onlyCreatedObjectsAreInLocSets" (formula "1") (ifseqformula "33"))
                                                         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "53"))
                                                          (builtin "One Step Simplification" (formula "1"))
                                                         (rule "onlyCreatedObjectsAreInLocSets" (formula "3") (ifseqformula "17"))
                                                         (rule "replace_known_right" (formula "3") (term "0") (ifseqformula "54"))
                                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "52")))
                                                         (rule "closeFalse" (formula "3"))
                                                      )
                                                   )
                                                   (branch "(self_0, List::$seq) in self_0.footprint@anon_heap_add<<anonHeapFunction>> FALSE"
                                                      (rule "eqSymm" (formula "26"))
                                                      (rule "applyEq" (formula "27") (term "1") (ifseqformula "26"))
                                                      (rule "ifthenelse_split" (formula "28") (term "0"))
                                                      (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_add<<anonHeapFunction>> TRUE"
                                                         (rule "applyEqReverse" (formula "30") (term "0") (ifseqformula "29"))
                                                         (rule "hideAuxiliaryEq" (formula "29"))
                                                         (rule "elementOfSubsetImpliesElementOfSuperset" (formula "28") (ifseqformula "21"))
                                                         (rule "elementOfUnion" (formula "28"))
                                                          (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "20")))
                                                         (rule "true_left" (formula "28"))
                                                         (rule "equalityToSeqGetAndSeqLenLeft" (formula "44") (inst "iv=iv"))
                                                          (builtin "One Step Simplification" (formula "44"))
                                                         (rule "andLeft" (formula "44"))
                                                         (rule "getOfSeqSingleton" (formula "45") (term "1,1,0"))
                                                         (rule "castDel" (formula "45") (term "1,1,1,0"))
                                                         (rule "castDel" (formula "45") (term "2,1,1,0"))
                                                         (rule "eqSymm" (formula "45") (term "1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "45") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "45") (term "0,0,0"))
                                                         (rule "applyEqRigid" (formula "45") (term "0,0,1,0,0,1,0,0") (ifseqformula "46"))
                                                          (builtin "One Step Simplification" (formula "45"))
                                                         (rule "mul_literals" (formula "45") (term "1,0,0,1,0,0"))
                                                         (rule "add_literals" (formula "45") (term "0,0,1,0,0"))
                                                         (rule "add_zero_left" (formula "45") (term "0,1,0,0"))
                                                         (rule "applyEq" (formula "44") (term "0,0") (ifseqformula "46"))
                                                          (builtin "One Step Simplification" (formula "44"))
                                                         (rule "true_left" (formula "44"))
                                                         (rule "applyEqRigid" (formula "44") (term "0,1,1,0") (ifseqformula "45"))
                                                         (rule "getOfSeqSingleton" (formula "44") (term "1,1,0"))
                                                         (rule "castDel" (formula "44") (term "1,1,1,0"))
                                                         (rule "castDel" (formula "44") (term "2,1,1,0"))
                                                          (builtin "One Step Simplification" (formula "44"))
                                                         (rule "true_left" (formula "44"))
                                                         (rule "equalityToSeqGetAndSeqLenLeft" (formula "36") (inst "iv=iv"))
                                                          (builtin "One Step Simplification" (formula "36"))
                                                         (rule "andLeft" (formula "36"))
                                                         (rule "inEqSimp_ltToLeq" (formula "37") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "37") (term "0,0,0"))
                                                         (rule "applyEq" (formula "37") (term "0,0,1,0") (ifseqformula "38"))
                                                          (builtin "One Step Simplification" (formula "37"))
                                                         (rule "true_left" (formula "37"))
                                                         (rule "applyEq" (formula "36") (term "0,0") (ifseqformula "37"))
                                                          (builtin "One Step Simplification" (formula "36"))
                                                         (rule "true_left" (formula "36"))
                                                         (rule "equalityToSeqGetAndSeqLenLeft" (formula "18") (inst "iv=iv"))
                                                          (builtin "One Step Simplification" (formula "18"))
                                                         (rule "andLeft" (formula "18"))
                                                         (rule "getOfSeqSingleton" (formula "19") (term "1,1,0"))
                                                         (rule "castDel" (formula "19") (term "1,1,1,0"))
                                                         (rule "castDel" (formula "19") (term "2,1,1,0"))
                                                         (rule "eqSymm" (formula "19") (term "1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
                                                         (rule "applyEq" (formula "18") (term "0,0") (ifseqformula "20"))
                                                          (builtin "One Step Simplification" (formula "18"))
                                                         (rule "true_left" (formula "18"))
                                                         (rule "applyEq" (formula "18") (term "0,0,1,0,0,1,0,0") (ifseqformula "19"))
                                                          (builtin "One Step Simplification" (formula "18"))
                                                         (rule "mul_literals" (formula "18") (term "1,0,0,1,0,0"))
                                                         (rule "add_literals" (formula "18") (term "0,0,1,0,0"))
                                                         (rule "add_zero_left" (formula "18") (term "0,1,0,0"))
                                                         (rule "applyEq" (formula "18") (term "0,1,1,0") (ifseqformula "19"))
                                                         (rule "getOfSeqSingleton" (formula "18") (term "1,1,0"))
                                                         (rule "castDel" (formula "18") (term "2,1,1,0"))
                                                         (rule "castDel" (formula "18") (term "1,1,1,0"))
                                                          (builtin "One Step Simplification" (formula "18"))
                                                         (rule "true_left" (formula "18"))
                                                         (rule "equalityToSeqGetAndSeqLenLeft" (formula "43") (inst "iv=iv"))
                                                          (builtin "One Step Simplification" (formula "43"))
                                                         (rule "andLeft" (formula "43"))
                                                         (rule "getOfSeqSingleton" (formula "44") (term "1,1,0"))
                                                         (rule "castDel" (formula "44") (term "1,1,1,0"))
                                                         (rule "castDel" (formula "44") (term "2,1,1,0"))
                                                         (rule "eqSymm" (formula "44") (term "1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "44") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "44") (term "0,0,0"))
                                                         (rule "applyEq" (formula "44") (term "0,0,1,0,0,1,0,0") (ifseqformula "45"))
                                                          (builtin "One Step Simplification" (formula "44"))
                                                         (rule "mul_literals" (formula "44") (term "1,0,0,1,0,0"))
                                                         (rule "add_literals" (formula "44") (term "0,0,1,0,0"))
                                                         (rule "add_zero_left" (formula "44") (term "0,1,0,0"))
                                                         (rule "applyEq" (formula "43") (term "0,0") (ifseqformula "45"))
                                                          (builtin "One Step Simplification" (formula "43"))
                                                         (rule "true_left" (formula "43"))
                                                         (rule "applyEq" (formula "43") (term "0,1,1,0") (ifseqformula "44"))
                                                         (rule "getOfSeqSingleton" (formula "43") (term "1,1,0"))
                                                         (rule "castDel" (formula "43") (term "1,1,1,0"))
                                                         (rule "castDel" (formula "43") (term "2,1,1,0"))
                                                          (builtin "One Step Simplification" (formula "43"))
                                                         (rule "true_left" (formula "43"))
                                                         (rule "equalityToSeqGetAndSeqLenLeft" (formula "26") (inst "iv=iv"))
                                                          (builtin "One Step Simplification" (formula "26"))
                                                         (rule "andLeft" (formula "26"))
                                                         (rule "getOfSeqSingleton" (formula "27") (term "1,1,0"))
                                                         (rule "castDel" (formula "27") (term "2,1,1,0"))
                                                         (rule "castDel" (formula "27") (term "1,1,1,0"))
                                                         (rule "eqSymm" (formula "27") (term "1,0"))
                                                         (rule "lenOfSeqConcat" (formula "27") (term "1,1,0,0"))
                                                          (builtin "One Step Simplification" (formula "27"))
                                                         (rule "add_literals" (formula "27") (term "1,1,0,0"))
                                                         (rule "lenOfSeqConcat" (formula "26") (term "0"))
                                                          (builtin "One Step Simplification" (formula "26"))
                                                         (rule "add_literals" (formula "26") (term "0"))
                                                         (rule "equal_literals" (formula "26"))
                                                         (rule "closeFalse" (formula "26"))
                                                      )
                                                      (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_add<<anonHeapFunction>> FALSE"
                                                         (rule "applyEqReverse" (formula "29") (term "0") (ifseqformula "28"))
                                                          (builtin "One Step Simplification" (formula "29"))
                                                         (rule "true_left" (formula "29"))
                                                         (rule "hideAuxiliaryEq" (formula "28"))
                                                         (rule "equalityToSeqGetAndSeqLenLeft" (formula "42") (inst "iv=iv"))
                                                          (builtin "One Step Simplification" (formula "42"))
                                                         (rule "andLeft" (formula "42"))
                                                         (rule "getOfSeqSingleton" (formula "43") (term "1,1,0"))
                                                         (rule "castDel" (formula "43") (term "2,1,1,0"))
                                                         (rule "castDel" (formula "43") (term "1,1,1,0"))
                                                         (rule "eqSymm" (formula "43") (term "1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "43") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "43") (term "0,0,0"))
                                                         (rule "applyEq" (formula "43") (term "0,1,1,0") (ifseqformula "44"))
                                                         (rule "getOfSeqSingleton" (formula "43") (term "1,1,0"))
                                                         (rule "castDel" (formula "43") (term "1,1,1,0"))
                                                         (rule "castDel" (formula "43") (term "2,1,1,0"))
                                                          (builtin "One Step Simplification" (formula "43"))
                                                         (rule "true_left" (formula "43"))
                                                         (rule "applyEqRigid" (formula "42") (term "0,0") (ifseqformula "43"))
                                                          (builtin "One Step Simplification" (formula "42"))
                                                         (rule "true_left" (formula "42"))
                                                         (rule "equalityToSeqGetAndSeqLenLeft" (formula "34") (inst "iv=iv"))
                                                          (builtin "One Step Simplification" (formula "34"))
                                                         (rule "andLeft" (formula "34"))
                                                         (rule "inEqSimp_ltToLeq" (formula "35") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "35") (term "0,0,0"))
                                                         (rule "applyEq" (formula "34") (term "0,0") (ifseqformula "36"))
                                                          (builtin "One Step Simplification" (formula "34"))
                                                         (rule "true_left" (formula "34"))
                                                         (rule "applyEq" (formula "34") (term "0,0,1,0,0,1,0,0") (ifseqformula "35"))
                                                          (builtin "One Step Simplification" (formula "34"))
                                                         (rule "mul_literals" (formula "34") (term "1,0,0,1,0,0"))
                                                         (rule "add_literals" (formula "34") (term "0,0,1,0,0"))
                                                         (rule "applyEq" (formula "34") (term "0,0,1,0") (ifseqformula "35"))
                                                          (builtin "One Step Simplification" (formula "34"))
                                                         (rule "true_left" (formula "34"))
                                                         (rule "equalityToSeqGetAndSeqLenLeft" (formula "18") (inst "iv=iv"))
                                                          (builtin "One Step Simplification" (formula "18"))
                                                         (rule "andLeft" (formula "18"))
                                                         (rule "getOfSeqSingleton" (formula "19") (term "1,1,0"))
                                                         (rule "castDel" (formula "19") (term "2,1,1,0"))
                                                         (rule "castDel" (formula "19") (term "1,1,1,0"))
                                                         (rule "eqSymm" (formula "19") (term "1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
                                                         (rule "applyEq" (formula "19") (term "0,0,1,0,0,1,0,0") (ifseqformula "20"))
                                                          (builtin "One Step Simplification" (formula "19"))
                                                         (rule "mul_literals" (formula "19") (term "1,0,0,1,0,0"))
                                                         (rule "add_literals" (formula "19") (term "0,0,1,0,0"))
                                                         (rule "add_zero_left" (formula "19") (term "0,1,0,0"))
                                                         (rule "applyEq" (formula "18") (term "0,0") (ifseqformula "20"))
                                                          (builtin "One Step Simplification" (formula "18"))
                                                         (rule "true_left" (formula "18"))
                                                         (rule "applyEq" (formula "18") (term "0,1,1,0") (ifseqformula "19"))
                                                         (rule "getOfSeqSingleton" (formula "18") (term "1,1,0"))
                                                         (rule "castDel" (formula "18") (term "2,1,1,0"))
                                                         (rule "castDel" (formula "18") (term "1,1,1,0"))
                                                          (builtin "One Step Simplification" (formula "18"))
                                                         (rule "true_left" (formula "18"))
                                                         (rule "equalityToSeqGetAndSeqLenLeft" (formula "41") (inst "iv=iv"))
                                                          (builtin "One Step Simplification" (formula "41"))
                                                         (rule "andLeft" (formula "41"))
                                                         (rule "getOfSeqSingleton" (formula "42") (term "1,1,0"))
                                                         (rule "castDel" (formula "42") (term "1,1,1,0"))
                                                         (rule "castDel" (formula "42") (term "2,1,1,0"))
                                                         (rule "eqSymm" (formula "42") (term "1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "42") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "42") (term "0,0,0"))
                                                         (rule "applyEq" (formula "42") (term "0,1,1,0") (ifseqformula "43"))
                                                         (rule "getOfSeqSingleton" (formula "42") (term "1,1,0"))
                                                         (rule "castDel" (formula "42") (term "1,1,1,0"))
                                                         (rule "castDel" (formula "42") (term "2,1,1,0"))
                                                          (builtin "One Step Simplification" (formula "42"))
                                                         (rule "true_left" (formula "42"))
                                                         (rule "applyEq" (formula "41") (term "0,0") (ifseqformula "42"))
                                                          (builtin "One Step Simplification" (formula "41"))
                                                         (rule "true_left" (formula "41"))
                                                         (rule "equalityToSeqGetAndSeqLenLeft" (formula "26") (inst "iv=iv"))
                                                          (builtin "One Step Simplification" (formula "26"))
                                                         (rule "andLeft" (formula "26"))
                                                         (rule "getOfSeqSingleton" (formula "27") (term "1,1,0"))
                                                         (rule "castDel" (formula "27") (term "2,1,1,0"))
                                                         (rule "castDel" (formula "27") (term "1,1,1,0"))
                                                         (rule "eqSymm" (formula "27") (term "1,0"))
                                                         (rule "lenOfSeqConcat" (formula "26") (term "0"))
                                                          (builtin "One Step Simplification" (formula "26"))
                                                         (rule "add_literals" (formula "26") (term "0"))
                                                         (rule "equal_literals" (formula "26"))
                                                         (rule "closeFalse" (formula "26"))
                                                      )
                                                   )
                                                )
                                             )
                                             (branch "(self_1, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> FALSE"
                                                (rule "eqSymm" (formula "42"))
                                                (rule "applyEqRigid" (formula "43") (term "1") (ifseqformula "42"))
                                                (rule "ifthenelse_split" (formula "55") (term "0,0,1"))
                                                (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> TRUE"
                                                   (rule "elementOfSubsetImpliesElementOfSuperset" (formula "1") (ifseqformula "38"))
                                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "55")))
                                                   (rule "notLeft" (formula "1"))
                                                   (rule "pullOutSelect" (formula "46") (term "0") (inst "selectSK=java_lang_Object_created__6"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "26"))
                                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "56")))
                                                   (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "2,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "2,0"))
                                                   (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "0,0,0,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "0,0,0,0"))
                                                   (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "11"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "applyEqReverse" (formula "47") (term "0") (ifseqformula "1"))
                                                   (rule "close" (formula "47") (ifseqformula "11"))
                                                )
                                                (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> FALSE"
                                                   (rule "lenOfSeqConcat" (formula "56") (term "0,1"))
                                                    (builtin "One Step Simplification" (formula "56"))
                                                   (rule "add_literals" (formula "56") (term "0,1"))
                                                   (rule "qeq_literals" (formula "56") (term "1"))
                                                    (builtin "One Step Simplification" (formula "56"))
                                                   (rule "ifthenelse_split" (formula "26") (term "0"))
                                                   (branch "(self_0, List::$seq) in self_0.footprint@anon_heap_add<<anonHeapFunction>> TRUE"
                                                      (rule "elementOfSubsetImpliesElementOfSuperset" (formula "26") (ifseqformula "21"))
                                                      (rule "elementOfUnion" (formula "26"))
                                                       (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "17")))
                                                      (rule "true_left" (formula "26"))
                                                      (rule "ifthenelse_split" (formula "29") (term "0"))
                                                      (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_add<<anonHeapFunction>> TRUE"
                                                         (rule "applyEqReverse" (formula "31") (term "0") (ifseqformula "30"))
                                                         (rule "hideAuxiliaryEq" (formula "30"))
                                                         (rule "elementOfSubsetImpliesElementOfSuperset" (formula "29") (ifseqformula "21"))
                                                         (rule "elementOfUnion" (formula "29"))
                                                          (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "20")))
                                                         (rule "true_left" (formula "29"))
                                                         (rule "equalityToSeqGetAndSeqLenLeft" (formula "37") (inst "iv=iv"))
                                                          (builtin "One Step Simplification" (formula "37"))
                                                         (rule "andLeft" (formula "37"))
                                                         (rule "inEqSimp_ltToLeq" (formula "38") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "38") (term "0,0,0"))
                                                         (rule "applyEq" (formula "38") (term "0,0,1,0,0,1,0,0") (ifseqformula "39"))
                                                          (builtin "One Step Simplification" (formula "38"))
                                                         (rule "mul_literals" (formula "38") (term "1,0,0,1,0,0"))
                                                         (rule "add_zero_right" (formula "38") (term "0,0,1,0,0"))
                                                         (rule "applyEq" (formula "37") (term "0,0") (ifseqformula "39"))
                                                          (builtin "One Step Simplification" (formula "37"))
                                                         (rule "true_left" (formula "37"))
                                                         (rule "applyEq" (formula "37") (term "0,0,1,0") (ifseqformula "38"))
                                                          (builtin "One Step Simplification" (formula "37"))
                                                         (rule "true_left" (formula "37"))
                                                         (rule "equalityToSeqGetAndSeqLenLeft" (formula "18") (inst "iv=iv"))
                                                          (builtin "One Step Simplification" (formula "18"))
                                                         (rule "andLeft" (formula "18"))
                                                         (rule "getOfSeqSingleton" (formula "19") (term "1,1,0"))
                                                         (rule "castDel" (formula "19") (term "2,1,1,0"))
                                                         (rule "castDel" (formula "19") (term "1,1,1,0"))
                                                         (rule "eqSymm" (formula "19") (term "1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
                                                         (rule "applyEq" (formula "19") (term "0,0,1,0,0,1,0,0") (ifseqformula "20"))
                                                          (builtin "One Step Simplification" (formula "19"))
                                                         (rule "mul_literals" (formula "19") (term "1,0,0,1,0,0"))
                                                         (rule "add_literals" (formula "19") (term "0,0,1,0,0"))
                                                         (rule "add_zero_left" (formula "19") (term "0,1,0,0"))
                                                         (rule "applyEq" (formula "18") (term "0,0") (ifseqformula "20"))
                                                          (builtin "One Step Simplification" (formula "18"))
                                                         (rule "true_left" (formula "18"))
                                                         (rule "applyEq" (formula "18") (term "0,1,1,0") (ifseqformula "19"))
                                                         (rule "getOfSeqSingleton" (formula "18") (term "1,1,0"))
                                                         (rule "castDel" (formula "18") (term "2,1,1,0"))
                                                         (rule "castDel" (formula "18") (term "1,1,1,0"))
                                                          (builtin "One Step Simplification" (formula "18"))
                                                         (rule "true_left" (formula "18"))
                                                         (rule "equalityToSeqGetAndSeqLenLeft" (formula "43") (inst "iv=iv"))
                                                          (builtin "One Step Simplification" (formula "43"))
                                                         (rule "equal_literals" (formula "43") (term "0"))
                                                          (builtin "One Step Simplification" (formula "43"))
                                                         (rule "closeFalse" (formula "43"))
                                                      )
                                                      (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_add<<anonHeapFunction>> FALSE"
                                                         (rule "applyEqReverse" (formula "30") (term "0") (ifseqformula "29"))
                                                          (builtin "One Step Simplification" (formula "30"))
                                                         (rule "true_left" (formula "30"))
                                                         (rule "hideAuxiliaryEq" (formula "29"))
                                                         (rule "equalityToSeqGetAndSeqLenLeft" (formula "35") (inst "iv=iv"))
                                                          (builtin "One Step Simplification" (formula "35"))
                                                         (rule "andLeft" (formula "35"))
                                                         (rule "inEqSimp_ltToLeq" (formula "36") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "36") (term "0,0,0"))
                                                         (rule "applyEq" (formula "36") (term "0,0,1,0,0,1,0,0") (ifseqformula "37"))
                                                          (builtin "One Step Simplification" (formula "36"))
                                                         (rule "mul_literals" (formula "36") (term "1,0,0,1,0,0"))
                                                         (rule "add_zero_right" (formula "36") (term "0,0,1,0,0"))
                                                         (rule "applyEq" (formula "35") (term "0,0") (ifseqformula "37"))
                                                          (builtin "One Step Simplification" (formula "35"))
                                                         (rule "true_left" (formula "35"))
                                                         (rule "applyEq" (formula "35") (term "0,0,1,0") (ifseqformula "36"))
                                                          (builtin "One Step Simplification" (formula "35"))
                                                         (rule "true_left" (formula "35"))
                                                         (rule "equalityToSeqGetAndSeqLenLeft" (formula "18") (inst "iv=iv"))
                                                          (builtin "One Step Simplification" (formula "18"))
                                                         (rule "andLeft" (formula "18"))
                                                         (rule "getOfSeqSingleton" (formula "19") (term "1,1,0"))
                                                         (rule "castDel" (formula "19") (term "1,1,1,0"))
                                                         (rule "castDel" (formula "19") (term "2,1,1,0"))
                                                         (rule "eqSymm" (formula "19") (term "1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
                                                         (rule "applyEq" (formula "18") (term "0,0") (ifseqformula "20"))
                                                          (builtin "One Step Simplification" (formula "18"))
                                                         (rule "true_left" (formula "18"))
                                                         (rule "applyEq" (formula "18") (term "0,1,1,0") (ifseqformula "19"))
                                                         (rule "getOfSeqSingleton" (formula "18") (term "1,1,0"))
                                                         (rule "castDel" (formula "18") (term "2,1,1,0"))
                                                         (rule "castDel" (formula "18") (term "1,1,1,0"))
                                                          (builtin "One Step Simplification" (formula "18"))
                                                         (rule "true_left" (formula "18"))
                                                         (rule "equalityToSeqGetAndSeqLenLeft" (formula "41") (inst "iv=iv"))
                                                          (builtin "One Step Simplification" (formula "41"))
                                                         (rule "equal_literals" (formula "41") (term "0"))
                                                          (builtin "One Step Simplification" (formula "41"))
                                                         (rule "closeFalse" (formula "41"))
                                                      )
                                                   )
                                                   (branch "(self_0, List::$seq) in self_0.footprint@anon_heap_add<<anonHeapFunction>> FALSE"
                                                      (rule "eqSymm" (formula "26"))
                                                      (rule "applyEqRigid" (formula "27") (term "1") (ifseqformula "26"))
                                                      (rule "ifthenelse_split" (formula "28") (term "0"))
                                                      (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_add<<anonHeapFunction>> TRUE"
                                                         (rule "applyEqReverse" (formula "30") (term "0") (ifseqformula "29"))
                                                         (rule "hideAuxiliaryEq" (formula "29"))
                                                         (rule "elementOfSubsetImpliesElementOfSuperset" (formula "28") (ifseqformula "21"))
                                                         (rule "elementOfUnion" (formula "28"))
                                                          (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "20")))
                                                         (rule "true_left" (formula "28"))
                                                         (rule "equalityToSeqGetAndSeqLenLeft" (formula "36") (inst "iv=iv"))
                                                          (builtin "One Step Simplification" (formula "36"))
                                                         (rule "andLeft" (formula "36"))
                                                         (rule "inEqSimp_ltToLeq" (formula "37") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "37") (term "0,0,0"))
                                                         (rule "applyEq" (formula "36") (term "0,0") (ifseqformula "38"))
                                                          (builtin "One Step Simplification" (formula "36"))
                                                         (rule "true_left" (formula "36"))
                                                         (rule "applyEq" (formula "36") (term "0,0,1,0") (ifseqformula "37"))
                                                          (builtin "One Step Simplification" (formula "36"))
                                                         (rule "true_left" (formula "36"))
                                                         (rule "equalityToSeqGetAndSeqLenLeft" (formula "18") (inst "iv=iv"))
                                                          (builtin "One Step Simplification" (formula "18"))
                                                         (rule "andLeft" (formula "18"))
                                                         (rule "getOfSeqSingleton" (formula "19") (term "1,1,0"))
                                                         (rule "castDel" (formula "19") (term "1,1,1,0"))
                                                         (rule "castDel" (formula "19") (term "2,1,1,0"))
                                                         (rule "eqSymm" (formula "19") (term "1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
                                                         (rule "applyEq" (formula "19") (term "0,1,1,0") (ifseqformula "20"))
                                                         (rule "getOfSeqSingleton" (formula "19") (term "1,1,0"))
                                                         (rule "castDel" (formula "19") (term "1,1,1,0"))
                                                         (rule "castDel" (formula "19") (term "2,1,1,0"))
                                                          (builtin "One Step Simplification" (formula "19"))
                                                         (rule "true_left" (formula "19"))
                                                         (rule "applyEq" (formula "18") (term "0,0") (ifseqformula "19"))
                                                          (builtin "One Step Simplification" (formula "18"))
                                                         (rule "true_left" (formula "18"))
                                                         (rule "equalityToSeqGetAndSeqLenLeft" (formula "42") (inst "iv=iv"))
                                                          (builtin "One Step Simplification" (formula "42"))
                                                         (rule "equal_literals" (formula "42") (term "0"))
                                                          (builtin "One Step Simplification" (formula "42"))
                                                         (rule "closeFalse" (formula "42"))
                                                      )
                                                      (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_add<<anonHeapFunction>> FALSE"
                                                         (rule "applyEqReverse" (formula "29") (term "0") (ifseqformula "28"))
                                                          (builtin "One Step Simplification" (formula "29"))
                                                         (rule "true_left" (formula "29"))
                                                         (rule "hideAuxiliaryEq" (formula "28"))
                                                         (rule "equalityToSeqGetAndSeqLenLeft" (formula "34") (inst "iv=iv"))
                                                          (builtin "One Step Simplification" (formula "34"))
                                                         (rule "andLeft" (formula "34"))
                                                         (rule "inEqSimp_ltToLeq" (formula "35") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "35") (term "0,0,0"))
                                                         (rule "applyEq" (formula "34") (term "0,0") (ifseqformula "36"))
                                                          (builtin "One Step Simplification" (formula "34"))
                                                         (rule "true_left" (formula "34"))
                                                         (rule "applyEq" (formula "34") (term "0,0,1,0") (ifseqformula "35"))
                                                          (builtin "One Step Simplification" (formula "34"))
                                                         (rule "true_left" (formula "34"))
                                                         (rule "equalityToSeqGetAndSeqLenLeft" (formula "18") (inst "iv=iv"))
                                                          (builtin "One Step Simplification" (formula "18"))
                                                         (rule "andLeft" (formula "18"))
                                                         (rule "getOfSeqSingleton" (formula "19") (term "1,1,0"))
                                                         (rule "castDel" (formula "19") (term "2,1,1,0"))
                                                         (rule "castDel" (formula "19") (term "1,1,1,0"))
                                                         (rule "eqSymm" (formula "19") (term "1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
                                                         (rule "applyEq" (formula "19") (term "0,0,1,0,0,1,0,0") (ifseqformula "20"))
                                                          (builtin "One Step Simplification" (formula "19"))
                                                         (rule "mul_literals" (formula "19") (term "1,0,0,1,0,0"))
                                                         (rule "add_literals" (formula "19") (term "0,0,1,0,0"))
                                                         (rule "add_zero_left" (formula "19") (term "0,1,0,0"))
                                                         (rule "applyEq" (formula "18") (term "0,0") (ifseqformula "20"))
                                                          (builtin "One Step Simplification" (formula "18"))
                                                         (rule "true_left" (formula "18"))
                                                         (rule "applyEq" (formula "18") (term "0,1,1,0") (ifseqformula "19"))
                                                         (rule "getOfSeqSingleton" (formula "18") (term "1,1,0"))
                                                         (rule "castDel" (formula "18") (term "2,1,1,0"))
                                                         (rule "castDel" (formula "18") (term "1,1,1,0"))
                                                          (builtin "One Step Simplification" (formula "18"))
                                                         (rule "true_left" (formula "18"))
                                                         (rule "equalityToSeqGetAndSeqLenLeft" (formula "40") (inst "iv=iv"))
                                                          (builtin "One Step Simplification" (formula "40"))
                                                         (rule "equal_literals" (formula "40") (term "0"))
                                                          (builtin "One Step Simplification" (formula "40"))
                                                         (rule "closeFalse" (formula "40"))
                                                      )
                                                   )
                                                )
                                             )
                                          )
                                       )
                                       (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_ArrayList<<anonHeapFunction>> FALSE"
                                          (rule "applyEqReverse" (formula "24") (term "1,0") (ifseqformula "20"))
                                          (rule "applyEqReverse" (formula "21") (term "0") (ifseqformula "20"))
                                           (builtin "One Step Simplification" (formula "21"))
                                          (rule "true_left" (formula "21"))
                                          (rule "applyEqReverse" (formula "27") (term "2,0") (ifseqformula "20"))
                                          (rule "applyEqReverse" (formula "27") (term "2,0,0") (ifseqformula "20"))
                                          (rule "applyEqReverse" (formula "28") (term "0,1") (ifseqformula "20"))
                                          (rule "applyEqReverse" (formula "25") (term "2,0,0") (ifseqformula "20"))
                                          (rule "hideAuxiliaryEq" (formula "20"))
                                          (rule "replace_known_right" (formula "26") (term "0,0") (ifseqformula "45"))
                                           (builtin "One Step Simplification" (formula "26"))
                                          (rule "applyEqReverse" (formula "27") (term "0") (ifseqformula "26"))
                                           (builtin "One Step Simplification" (formula "27"))
                                          (rule "true_left" (formula "27"))
                                          (rule "hideAuxiliaryEq" (formula "26"))
                                          (rule "replace_known_left" (formula "24") (term "0,0") (ifseqformula "17"))
                                           (builtin "One Step Simplification" (formula "24"))
                                          (rule "ifthenelse_split" (formula "40") (term "0"))
                                          (branch "(self_1, List::$footprint) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> TRUE"
                                             (rule "applyEqReverse" (formula "42") (term "0") (ifseqformula "41"))
                                             (rule "hideAuxiliaryEq" (formula "41"))
                                             (rule "elementOfSubsetImpliesElementOfSuperset" (formula "40") (ifseqformula "33"))
                                              (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "49")))
                                             (rule "replaceKnownSelect_taclet0000000_18" (formula "40") (term "0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet0000000_21" (formula "40") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "40"))
                                             (rule "true_left" (formula "40"))
                                             (rule "ifthenelse_split" (formula "38") (term "0"))
                                             (branch "(self_1, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> TRUE"
                                                (rule "elementOfSubsetImpliesElementOfSuperset" (formula "38") (ifseqformula "33"))
                                                 (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "50")))
                                                (rule "replaceKnownSelect_taclet0000000_18" (formula "38") (term "0,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet0000000_21" (formula "38") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "38"))
                                                (rule "true_left" (formula "38"))
                                                (rule "ifthenelse_split" (formula "53") (term "0,0,1"))
                                                (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> TRUE"
                                                   (rule "elementOfSubsetImpliesElementOfSuperset" (formula "1") (ifseqformula "34"))
                                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")))
                                                   (rule "notLeft" (formula "1"))
                                                   (rule "pullOutSelect" (formula "45") (term "0") (inst "selectSK=java_lang_Object_created__6"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
                                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "54")))
                                                   (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "2,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "2,0"))
                                                   (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "0,0,0,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "0,0,0,0"))
                                                   (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "11"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "applyEqReverse" (formula "46") (term "0") (ifseqformula "1"))
                                                   (rule "close" (formula "46") (ifseqformula "11"))
                                                )
                                                (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> FALSE"
                                                   (rule "lenOfSeqConcat" (formula "54") (term "0,1"))
                                                    (builtin "One Step Simplification" (formula "54"))
                                                   (rule "add_literals" (formula "54") (term "0,1"))
                                                   (rule "qeq_literals" (formula "54") (term "1"))
                                                    (builtin "One Step Simplification" (formula "54"))
                                                   (rule "equalityToSeqGetAndSeqLenLeft" (formula "40") (inst "iv=iv"))
                                                    (builtin "One Step Simplification" (formula "40"))
                                                   (rule "andLeft" (formula "40"))
                                                   (rule "getOfSeqSingleton" (formula "41") (term "1,1,0"))
                                                   (rule "castDel" (formula "41") (term "2,1,1,0"))
                                                   (rule "castDel" (formula "41") (term "1,1,1,0"))
                                                   (rule "eqSymm" (formula "41") (term "1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "41") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "41") (term "0,0,0"))
                                                   (rule "applyEqRigid" (formula "41") (term "0,0,1,0,0,1,0,0") (ifseqformula "42"))
                                                    (builtin "One Step Simplification" (formula "41"))
                                                   (rule "mul_literals" (formula "41") (term "1,0,0,1,0,0"))
                                                   (rule "add_literals" (formula "41") (term "0,0,1,0,0"))
                                                   (rule "add_zero_left" (formula "41") (term "0,1,0,0"))
                                                   (rule "applyEqRigid" (formula "40") (term "0,0") (ifseqformula "42"))
                                                    (builtin "One Step Simplification" (formula "40"))
                                                   (rule "true_left" (formula "40"))
                                                   (rule "applyEq" (formula "40") (term "0,1,1,0") (ifseqformula "41"))
                                                   (rule "getOfSeqSingleton" (formula "40") (term "1,1,0"))
                                                   (rule "castDel" (formula "40") (term "1,1,1,0"))
                                                   (rule "castDel" (formula "40") (term "2,1,1,0"))
                                                    (builtin "One Step Simplification" (formula "40"))
                                                   (rule "true_left" (formula "40"))
                                                   (rule "equalityToSeqGetAndSeqLenLeft" (formula "32") (inst "iv=iv"))
                                                    (builtin "One Step Simplification" (formula "32"))
                                                   (rule "andLeft" (formula "32"))
                                                   (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0,0"))
                                                   (rule "applyEq" (formula "33") (term "0,0,1,0") (ifseqformula "34"))
                                                    (builtin "One Step Simplification" (formula "33"))
                                                   (rule "true_left" (formula "33"))
                                                   (rule "applyEq" (formula "32") (term "0,0") (ifseqformula "33"))
                                                    (builtin "One Step Simplification" (formula "32"))
                                                   (rule "true_left" (formula "32"))
                                                   (rule "equalityToSeqGetAndSeqLenLeft" (formula "18") (inst "iv=iv"))
                                                    (builtin "One Step Simplification" (formula "18"))
                                                   (rule "andLeft" (formula "18"))
                                                   (rule "getOfSeqSingleton" (formula "19") (term "1,1,0"))
                                                   (rule "castDel" (formula "19") (term "2,1,1,0"))
                                                   (rule "castDel" (formula "19") (term "1,1,1,0"))
                                                   (rule "eqSymm" (formula "19") (term "1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
                                                   (rule "applyEq" (formula "19") (term "0,0,1,0,0,1,0,0") (ifseqformula "20"))
                                                    (builtin "One Step Simplification" (formula "19"))
                                                   (rule "mul_literals" (formula "19") (term "1,0,0,1,0,0"))
                                                   (rule "add_literals" (formula "19") (term "0,0,1,0,0"))
                                                   (rule "add_zero_left" (formula "19") (term "0,1,0,0"))
                                                   (rule "applyEq" (formula "18") (term "0,0") (ifseqformula "20"))
                                                    (builtin "One Step Simplification" (formula "18"))
                                                   (rule "true_left" (formula "18"))
                                                   (rule "applyEq" (formula "18") (term "0,1,1,0") (ifseqformula "19"))
                                                   (rule "getOfSeqSingleton" (formula "18") (term "1,1,0"))
                                                   (rule "castDel" (formula "18") (term "1,1,1,0"))
                                                   (rule "castDel" (formula "18") (term "2,1,1,0"))
                                                    (builtin "One Step Simplification" (formula "18"))
                                                   (rule "true_left" (formula "18"))
                                                   (rule "equalityToSeqGetAndSeqLenLeft" (formula "24") (inst "iv=iv"))
                                                   (rule "andLeft" (formula "24"))
                                                   (rule "lenOfSeqConcat" (formula "24") (term "1"))
                                                    (builtin "One Step Simplification" (formula "24"))
                                                   (rule "add_literals" (formula "24") (term "1"))
                                                   (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0"))
                                                   (rule "applyEq" (formula "25") (term "0,0,1,0,0,1,0,0") (ifseqformula "26"))
                                                   (rule "lenOfSeqConcat" (formula "25") (term "0,1,0,0,1,0,0"))
                                                    (builtin "One Step Simplification" (formula "25"))
                                                   (rule "add_literals" (formula "25") (term "0,1,0,0,1,0,0"))
                                                   (rule "mul_literals" (formula "25") (term "1,0,0,1,0,0"))
                                                   (rule "add_literals" (formula "25") (term "0,0,1,0,0"))
                                                   (rule "applyEq" (formula "24") (term "0,0") (ifseqformula "26"))
                                                   (rule "lenOfSeqConcat" (formula "24") (term "0"))
                                                    (builtin "One Step Simplification" (formula "24"))
                                                   (rule "add_literals" (formula "24") (term "0"))
                                                    (builtin "One Step Simplification" (formula "24"))
                                                   (rule "true_left" (formula "24"))
                                                   (rule "applyEq" (formula "24") (term "0,0,1,0") (ifseqformula "25"))
                                                    (builtin "One Step Simplification" (formula "24"))
                                                   (rule "true_left" (formula "24"))
                                                   (rule "equalityToSeqGetAndSeqLenLeft" (formula "39") (inst "iv=iv"))
                                                    (builtin "One Step Simplification" (formula "39"))
                                                   (rule "andLeft" (formula "39"))
                                                   (rule "getOfSeqSingleton" (formula "40") (term "1,1,0"))
                                                   (rule "castDel" (formula "40") (term "2,1,1,0"))
                                                   (rule "castDel" (formula "40") (term "1,1,1,0"))
                                                   (rule "eqSymm" (formula "40") (term "1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "40") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "40") (term "0,0,0"))
                                                   (rule "applyEq" (formula "40") (term "0,1,1,0") (ifseqformula "41"))
                                                   (rule "getOfSeqSingleton" (formula "40") (term "1,1,0"))
                                                   (rule "castDel" (formula "40") (term "1,1,1,0"))
                                                   (rule "castDel" (formula "40") (term "2,1,1,0"))
                                                    (builtin "One Step Simplification" (formula "40"))
                                                   (rule "true_left" (formula "40"))
                                                   (rule "applyEq" (formula "39") (term "0,0") (ifseqformula "40"))
                                                    (builtin "One Step Simplification" (formula "39"))
                                                   (rule "true_left" (formula "39"))
                                                   (rule "onlyCreatedObjectsAreInLocSets" (formula "17") (ifseqformula "6"))
                                                   (rule "replace_known_left" (formula "17") (term "1") (ifseqformula "9"))
                                                    (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "52")))
                                                   (rule "true_left" (formula "17"))
                                                   (rule "onlyCreatedObjectsAreInLocSets" (formula "38") (ifseqformula "27"))
                                                   (rule "replace_known_left" (formula "38") (term "1") (ifseqformula "30"))
                                                    (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "50")))
                                                   (rule "true_left" (formula "38"))
                                                   (rule "onlyCreatedObjectsAreInLocSets" (formula "41") (ifseqformula "27"))
                                                   (rule "replace_known_right" (formula "41") (term "0") (ifseqformula "50"))
                                                    (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "30")))
                                                   (rule "true_left" (formula "41"))
                                                    (builtin "Use Dependency Contract" (formula "54") (ifInst ""  (formula "26")) (ifInst ""  (formula "36")) (ifInst ""  (formula "28")) (contract "ArrayList[java.lang.Object::<inv>()].JML accessible clause.0"))
                                                   (rule "replaceKnownSelect_taclet0000_9" (formula "44") (term "1,1,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet10220000000000_27" (formula "44") (term "1,1,0"))
                                                   (rule "wellFormedAnonEQ" (formula "44") (term "1,1,0,0,0") (ifseqformula "36"))
                                                   (rule "wellFormedAnonEQ" (formula "44") (term "0,1,0,0,0") (ifseqformula "22"))
                                                   (rule "wellFormedAnonEQ" (formula "44") (term "0,0,1,0,0,0") (ifseqformula "15"))
                                                   (rule "wellFormedAnonEQ" (formula "44") (term "0,1,1,0,0,0") (ifseqformula "28"))
                                                   (rule "wellFormedAnonEQ" (formula "44") (term "0,0,1,1,0,0,0") (ifseqformula "22"))
                                                   (rule "wellFormedAnonEQ" (formula "44") (term "0,0,0,1,0,0,0") (ifseqformula "7"))
                                                   (rule "wellFormedAnonEQ" (formula "44") (term "0,0,0,1,1,0,0,0") (ifseqformula "15"))
                                                   (rule "wellFormedAnonEQ" (formula "44") (term "0,0,0,0,1,1,0,0,0") (ifseqformula "7"))
                                                   (rule "replace_known_left" (formula "44") (term "1,1") (ifseqformula "26"))
                                                    (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "52")) (ifInst ""  (formula "2")) (ifInst ""  (formula "6")) (ifInst ""  (formula "14")) (ifInst ""  (formula "21")) (ifInst ""  (formula "2")) (ifInst ""  (formula "6")) (ifInst ""  (formula "14")) (ifInst ""  (formula "21")) (ifInst ""  (formula "27")) (ifInst ""  (formula "35")) (ifInst ""  (formula "26")) (ifInst ""  (formula "55")))
                                                   (rule "notLeft" (formula "44"))
                                                   (rule "disjointDefinition" (formula "44") (term "1"))
                                                   (rule "pullOutSelect" (formula "44") (term "0,0") (inst "selectSK=java_lang_Object_created__6"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")))
                                                   (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "2,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "2,0"))
                                                   (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "0,0,0,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "0,0,0,0"))
                                                   (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "10"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "applyEqReverse" (formula "45") (term "0,0") (ifseqformula "1"))
                                                   (rule "hideAuxiliaryEq" (formula "1"))
                                                   (rule "replace_known_left" (formula "44") (term "0") (ifseqformula "9"))
                                                    (builtin "One Step Simplification" (formula "44"))
                                                   (rule "commuteIntersection" (formula "44") (term "0"))
                                                   (rule "equalityToElementOfRight" (formula "44") (inst "fv=fv") (inst "ov=ov"))
                                                    (builtin "One Step Simplification" (formula "44"))
                                                   (rule "allRight" (formula "44") (inst "sk=ov_0"))
                                                   (rule "allRight" (formula "44") (inst "sk=fv_0"))
                                                   (rule "notRight" (formula "44"))
                                                   (rule "elementOfIntersect" (formula "1"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "elementOfSubsetImpliesElementOfSuperset" (formula "1") (ifseqformula "14"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "notLeft" (formula "2"))
                                                   (rule "notLeft" (formula "1"))
                                                   (rule "elementOfSubsetImpliesElementOfSuperset" (formula "2") (ifseqformula "35"))
                                                    (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "47")))
                                                   (rule "notLeft" (formula "2"))
                                                   (rule "pullOutSelect" (formula "46") (term "0") (inst "selectSK=java_lang_Object_created__7"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "25"))
                                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "48")))
                                                   (rule "ifthenelse_negated" (formula "1") (term "0"))
                                                   (rule "apply_eq_boolean" (formula "1") (term "1") (ifseqformula "47"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "notLeft" (formula "1"))
                                                   (rule "ifEqualsTRUE" (formula "46"))
                                                    (builtin "One Step Simplification" (formula "46"))
                                                   (rule "orRight" (formula "46"))
                                                   (rule "replace_known_right" (formula "47") (term "0,0") (ifseqformula "46"))
                                                    (builtin "One Step Simplification" (formula "47"))
                                                   (rule "pullOutSelect" (formula "46") (term "0") (inst "selectSK=java_lang_Object_created__8"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "18"))
                                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "50")))
                                                   (rule "ifthenelse_negated" (formula "1") (term "0"))
                                                   (rule "apply_eq_boolean" (formula "1") (term "1") (ifseqformula "47"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "notLeft" (formula "1"))
                                                   (rule "ifEqualsTRUE" (formula "46"))
                                                    (builtin "One Step Simplification" (formula "46"))
                                                   (rule "orRight" (formula "46"))
                                                   (rule "replace_known_right" (formula "47") (term "0,0") (ifseqformula "46"))
                                                    (builtin "One Step Simplification" (formula "47"))
                                                   (rule "pullOutSelect" (formula "46") (term "0") (inst "selectSK=java_lang_Object_created__9"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "10"))
                                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "52")) (ifInst ""  (formula "53")))
                                                   (rule "applyEqReverse" (formula "47") (term "0") (ifseqformula "1"))
                                                   (rule "hideAuxiliaryEq" (formula "1"))
                                                   (rule "hideAuxiliaryEqConcrete2" (formula "50"))
                                                   (rule "hideAuxiliaryEqConcrete2" (formula "48"))
                                                   (rule "onlyCreatedObjectsAreInLocSets" (formula "1") (ifseqformula "8"))
                                                   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "50"))
                                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "47")))
                                                   (rule "closeFalse" (formula "1"))
                                                )
                                             )
                                             (branch "(self_1, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> FALSE"
                                                (rule "eqSymm" (formula "38"))
                                                (rule "applyEq" (formula "39") (term "1") (ifseqformula "38"))
                                                (rule "ifthenelse_split" (formula "53") (term "0,0,1"))
                                                (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> TRUE"
                                                   (rule "elementOfSubsetImpliesElementOfSuperset" (formula "1") (ifseqformula "34"))
                                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")))
                                                   (rule "notLeft" (formula "1"))
                                                   (rule "pullOutSelect" (formula "44") (term "0") (inst "selectSK=java_lang_Object_created__6"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
                                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "54")))
                                                   (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "2,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "2,0"))
                                                   (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "0,0,0,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "0,0,0,0"))
                                                   (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "11"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "applyEqReverse" (formula "45") (term "0") (ifseqformula "1"))
                                                   (rule "close" (formula "45") (ifseqformula "11"))
                                                )
                                                (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> FALSE"
                                                   (rule "lenOfSeqConcat" (formula "54") (term "0,1"))
                                                    (builtin "One Step Simplification" (formula "54"))
                                                   (rule "add_literals" (formula "54") (term "0,1"))
                                                   (rule "qeq_literals" (formula "54") (term "1"))
                                                    (builtin "One Step Simplification" (formula "54"))
                                                   (rule "equalityToSeqGetAndSeqLenLeft" (formula "32") (inst "iv=iv"))
                                                    (builtin "One Step Simplification" (formula "32"))
                                                   (rule "andLeft" (formula "32"))
                                                   (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0,0"))
                                                   (rule "applyEq" (formula "33") (term "0,0,1,0,0,1,0,0") (ifseqformula "34"))
                                                    (builtin "One Step Simplification" (formula "33"))
                                                   (rule "mul_literals" (formula "33") (term "1,0,0,1,0,0"))
                                                   (rule "add_literals" (formula "33") (term "0,0,1,0,0"))
                                                   (rule "applyEq" (formula "32") (term "0,0") (ifseqformula "34"))
                                                    (builtin "One Step Simplification" (formula "32"))
                                                   (rule "true_left" (formula "32"))
                                                   (rule "applyEq" (formula "32") (term "0,0,1,0") (ifseqformula "33"))
                                                    (builtin "One Step Simplification" (formula "32"))
                                                   (rule "true_left" (formula "32"))
                                                   (rule "equalityToSeqGetAndSeqLenLeft" (formula "18") (inst "iv=iv"))
                                                    (builtin "One Step Simplification" (formula "18"))
                                                   (rule "andLeft" (formula "18"))
                                                   (rule "getOfSeqSingleton" (formula "19") (term "1,1,0"))
                                                   (rule "castDel" (formula "19") (term "2,1,1,0"))
                                                   (rule "castDel" (formula "19") (term "1,1,1,0"))
                                                   (rule "eqSymm" (formula "19") (term "1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
                                                   (rule "applyEq" (formula "19") (term "0,1,1,0") (ifseqformula "20"))
                                                   (rule "getOfSeqSingleton" (formula "19") (term "1,1,0"))
                                                   (rule "castDel" (formula "19") (term "2,1,1,0"))
                                                   (rule "castDel" (formula "19") (term "1,1,1,0"))
                                                    (builtin "One Step Simplification" (formula "19"))
                                                   (rule "true_left" (formula "19"))
                                                   (rule "applyEq" (formula "18") (term "0,0") (ifseqformula "19"))
                                                    (builtin "One Step Simplification" (formula "18"))
                                                   (rule "true_left" (formula "18"))
                                                   (rule "equalityToSeqGetAndSeqLenLeft" (formula "24") (inst "iv=iv"))
                                                   (rule "andLeft" (formula "24"))
                                                   (rule "lenOfSeqConcat" (formula "24") (term "1"))
                                                    (builtin "One Step Simplification" (formula "24"))
                                                   (rule "add_literals" (formula "24") (term "1"))
                                                   (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0"))
                                                   (rule "applyEq" (formula "25") (term "0,0,1,0") (ifseqformula "26"))
                                                    (builtin "One Step Simplification" (formula "25"))
                                                   (rule "true_left" (formula "25"))
                                                   (rule "applyEq" (formula "24") (term "0,0") (ifseqformula "25"))
                                                   (rule "lenOfSeqConcat" (formula "24") (term "0"))
                                                    (builtin "One Step Simplification" (formula "24"))
                                                   (rule "add_literals" (formula "24") (term "0"))
                                                    (builtin "One Step Simplification" (formula "24"))
                                                   (rule "true_left" (formula "24"))
                                                   (rule "equalityToSeqGetAndSeqLenLeft" (formula "38") (inst "iv=iv"))
                                                    (builtin "One Step Simplification" (formula "38"))
                                                   (rule "equal_literals" (formula "38") (term "0"))
                                                    (builtin "One Step Simplification" (formula "38"))
                                                   (rule "closeFalse" (formula "38"))
                                                )
                                             )
                                          )
                                          (branch "(self_1, List::$footprint) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> FALSE"
                                             (rule "applyEqReverse" (formula "41") (term "0") (ifseqformula "40"))
                                              (builtin "One Step Simplification" (formula "41"))
                                             (rule "true_left" (formula "41"))
                                             (rule "hideAuxiliaryEq" (formula "40"))
                                             (rule "ifthenelse_split" (formula "38") (term "0"))
                                             (branch "(self_1, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> TRUE"
                                                (rule "elementOfSubsetImpliesElementOfSuperset" (formula "38") (ifseqformula "33"))
                                                 (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "49")))
                                                (rule "replaceKnownSelect_taclet0000000_18" (formula "38") (term "0,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet0000000_21" (formula "38") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "38"))
                                                (rule "true_left" (formula "38"))
                                                (rule "ifthenelse_split" (formula "52") (term "0,0,1"))
                                                (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> TRUE"
                                                   (rule "elementOfSubsetImpliesElementOfSuperset" (formula "1") (ifseqformula "34"))
                                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "52")))
                                                   (rule "notLeft" (formula "1"))
                                                   (rule "pullOutSelect" (formula "43") (term "0") (inst "selectSK=java_lang_Object_created__6"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
                                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")))
                                                   (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "2,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "2,0"))
                                                   (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "0,0,0,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "0,0,0,0"))
                                                   (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "11"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "applyEqReverse" (formula "44") (term "0") (ifseqformula "1"))
                                                   (rule "close" (formula "44") (ifseqformula "11"))
                                                )
                                                (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> FALSE"
                                                   (rule "lenOfSeqConcat" (formula "53") (term "0,1"))
                                                    (builtin "One Step Simplification" (formula "53"))
                                                   (rule "add_literals" (formula "53") (term "0,1"))
                                                   (rule "qeq_literals" (formula "53") (term "1"))
                                                    (builtin "One Step Simplification" (formula "53"))
                                                   (rule "equalityToSeqGetAndSeqLenLeft" (formula "40") (inst "iv=iv"))
                                                    (builtin "One Step Simplification" (formula "40"))
                                                   (rule "andLeft" (formula "40"))
                                                   (rule "getOfSeqSingleton" (formula "41") (term "1,1,0"))
                                                   (rule "castDel" (formula "41") (term "1,1,1,0"))
                                                   (rule "castDel" (formula "41") (term "2,1,1,0"))
                                                   (rule "eqSymm" (formula "41") (term "1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "41") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "41") (term "0,0,0"))
                                                   (rule "applyEqRigid" (formula "41") (term "0,0,1,0,0,1,0,0") (ifseqformula "42"))
                                                    (builtin "One Step Simplification" (formula "41"))
                                                   (rule "mul_literals" (formula "41") (term "1,0,0,1,0,0"))
                                                   (rule "add_literals" (formula "41") (term "0,0,1,0,0"))
                                                   (rule "add_zero_left" (formula "41") (term "0,1,0,0"))
                                                   (rule "applyEqRigid" (formula "40") (term "0,0") (ifseqformula "42"))
                                                    (builtin "One Step Simplification" (formula "40"))
                                                   (rule "true_left" (formula "40"))
                                                   (rule "applyEq" (formula "40") (term "0,1,1,0") (ifseqformula "41"))
                                                   (rule "getOfSeqSingleton" (formula "40") (term "1,1,0"))
                                                   (rule "castDel" (formula "40") (term "2,1,1,0"))
                                                   (rule "castDel" (formula "40") (term "1,1,1,0"))
                                                    (builtin "One Step Simplification" (formula "40"))
                                                   (rule "true_left" (formula "40"))
                                                   (rule "equalityToSeqGetAndSeqLenLeft" (formula "32") (inst "iv=iv"))
                                                    (builtin "One Step Simplification" (formula "32"))
                                                   (rule "andLeft" (formula "32"))
                                                   (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0,0"))
                                                   (rule "applyEq" (formula "33") (term "0,0,1,0") (ifseqformula "34"))
                                                    (builtin "One Step Simplification" (formula "33"))
                                                   (rule "true_left" (formula "33"))
                                                   (rule "applyEq" (formula "32") (term "0,0") (ifseqformula "33"))
                                                    (builtin "One Step Simplification" (formula "32"))
                                                   (rule "true_left" (formula "32"))
                                                   (rule "equalityToSeqGetAndSeqLenLeft" (formula "18") (inst "iv=iv"))
                                                    (builtin "One Step Simplification" (formula "18"))
                                                   (rule "andLeft" (formula "18"))
                                                   (rule "getOfSeqSingleton" (formula "19") (term "1,1,0"))
                                                   (rule "castDel" (formula "19") (term "1,1,1,0"))
                                                   (rule "castDel" (formula "19") (term "2,1,1,0"))
                                                   (rule "eqSymm" (formula "19") (term "1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
                                                   (rule "applyEq" (formula "19") (term "0,1,1,0") (ifseqformula "20"))
                                                   (rule "getOfSeqSingleton" (formula "19") (term "1,1,0"))
                                                   (rule "castDel" (formula "19") (term "2,1,1,0"))
                                                   (rule "castDel" (formula "19") (term "1,1,1,0"))
                                                    (builtin "One Step Simplification" (formula "19"))
                                                   (rule "true_left" (formula "19"))
                                                   (rule "applyEq" (formula "18") (term "0,0") (ifseqformula "19"))
                                                    (builtin "One Step Simplification" (formula "18"))
                                                   (rule "true_left" (formula "18"))
                                                   (rule "equalityToSeqGetAndSeqLenLeft" (formula "24") (inst "iv=iv"))
                                                   (rule "andLeft" (formula "24"))
                                                   (rule "lenOfSeqConcat" (formula "24") (term "1"))
                                                    (builtin "One Step Simplification" (formula "24"))
                                                   (rule "add_literals" (formula "24") (term "1"))
                                                   (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0"))
                                                   (rule "applyEq" (formula "25") (term "0,0,1,0,0,1,0,0") (ifseqformula "26"))
                                                   (rule "lenOfSeqConcat" (formula "25") (term "0,1,0,0,1,0,0"))
                                                    (builtin "One Step Simplification" (formula "25"))
                                                   (rule "add_literals" (formula "25") (term "0,1,0,0,1,0,0"))
                                                   (rule "mul_literals" (formula "25") (term "1,0,0,1,0,0"))
                                                   (rule "add_literals" (formula "25") (term "0,0,1,0,0"))
                                                   (rule "applyEq" (formula "24") (term "0,0") (ifseqformula "26"))
                                                   (rule "lenOfSeqConcat" (formula "24") (term "0"))
                                                    (builtin "One Step Simplification" (formula "24"))
                                                   (rule "add_literals" (formula "24") (term "0"))
                                                    (builtin "One Step Simplification" (formula "24"))
                                                   (rule "true_left" (formula "24"))
                                                   (rule "applyEq" (formula "24") (term "0,0,1,0") (ifseqformula "25"))
                                                    (builtin "One Step Simplification" (formula "24"))
                                                   (rule "true_left" (formula "24"))
                                                   (rule "equalityToSeqGetAndSeqLenLeft" (formula "39") (inst "iv=iv"))
                                                    (builtin "One Step Simplification" (formula "39"))
                                                   (rule "andLeft" (formula "39"))
                                                   (rule "getOfSeqSingleton" (formula "40") (term "1,1,0"))
                                                   (rule "castDel" (formula "40") (term "1,1,1,0"))
                                                   (rule "castDel" (formula "40") (term "2,1,1,0"))
                                                   (rule "eqSymm" (formula "40") (term "1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "40") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "40") (term "0,0,0"))
                                                   (rule "applyEq" (formula "40") (term "0,1,1,0") (ifseqformula "41"))
                                                   (rule "getOfSeqSingleton" (formula "40") (term "1,1,0"))
                                                   (rule "castDel" (formula "40") (term "2,1,1,0"))
                                                   (rule "castDel" (formula "40") (term "1,1,1,0"))
                                                    (builtin "One Step Simplification" (formula "40"))
                                                   (rule "true_left" (formula "40"))
                                                   (rule "applyEq" (formula "39") (term "0,0") (ifseqformula "40"))
                                                    (builtin "One Step Simplification" (formula "39"))
                                                   (rule "true_left" (formula "39"))
                                                   (rule "onlyCreatedObjectsAreInLocSets" (formula "17") (ifseqformula "6"))
                                                   (rule "replace_known_left" (formula "17") (term "1") (ifseqformula "9"))
                                                    (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "51")))
                                                   (rule "true_left" (formula "17"))
                                                   (rule "onlyCreatedObjectsAreInLocSets" (formula "38") (ifseqformula "27"))
                                                   (rule "replace_known_left" (formula "38") (term "1") (ifseqformula "30"))
                                                    (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "49")))
                                                   (rule "true_left" (formula "38"))
                                                    (builtin "Use Dependency Contract" (formula "53") (ifInst ""  (formula "26")) (ifInst ""  (formula "36")) (ifInst ""  (formula "28")) (contract "ArrayList[java.lang.Object::<inv>()].JML accessible clause.0"))
                                                   (rule "replaceKnownSelect_taclet0000_9" (formula "42") (term "1,1,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet10220000000000_27" (formula "42") (term "1,1,0"))
                                                   (rule "wellFormedAnonEQ" (formula "42") (term "1,1,0,0,0") (ifseqformula "36"))
                                                   (rule "wellFormedAnonEQ" (formula "42") (term "0,1,0,0,0") (ifseqformula "22"))
                                                   (rule "wellFormedAnonEQ" (formula "42") (term "0,0,1,0,0,0") (ifseqformula "15"))
                                                   (rule "wellFormedAnonEQ" (formula "42") (term "0,1,1,0,0,0") (ifseqformula "28"))
                                                   (rule "wellFormedAnonEQ" (formula "42") (term "0,0,1,1,0,0,0") (ifseqformula "22"))
                                                   (rule "wellFormedAnonEQ" (formula "42") (term "0,0,0,1,0,0,0") (ifseqformula "7"))
                                                   (rule "wellFormedAnonEQ" (formula "42") (term "0,0,0,1,1,0,0,0") (ifseqformula "15"))
                                                   (rule "wellFormedAnonEQ" (formula "42") (term "0,0,0,0,1,1,0,0,0") (ifseqformula "7"))
                                                   (rule "replace_known_right" (formula "42") (term "0,0,0,0,0,0") (ifseqformula "51"))
                                                    (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "2")) (ifInst ""  (formula "6")) (ifInst ""  (formula "14")) (ifInst ""  (formula "21")) (ifInst ""  (formula "2")) (ifInst ""  (formula "6")) (ifInst ""  (formula "14")) (ifInst ""  (formula "21")) (ifInst ""  (formula "27")) (ifInst ""  (formula "35")) (ifInst ""  (formula "26")) (ifInst ""  (formula "54")) (ifInst ""  (formula "26")))
                                                   (rule "notLeft" (formula "42"))
                                                   (rule "disjointDefinition" (formula "42") (term "1"))
                                                   (rule "pullOutSelect" (formula "42") (term "0,0") (inst "selectSK=java_lang_Object_created__6"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "52")))
                                                   (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "2,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "2,0"))
                                                   (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "0,0,0,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "0,0,0,0"))
                                                   (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "10"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "applyEqReverse" (formula "43") (term "0,0") (ifseqformula "1"))
                                                   (rule "hideAuxiliaryEq" (formula "1"))
                                                   (rule "replace_known_left" (formula "42") (term "0") (ifseqformula "9"))
                                                    (builtin "One Step Simplification" (formula "42"))
                                                   (rule "commuteIntersection" (formula "42") (term "0"))
                                                   (rule "equalityToElementOfRight" (formula "42") (inst "fv=fv") (inst "ov=ov"))
                                                    (builtin "One Step Simplification" (formula "42"))
                                                   (rule "allRight" (formula "42") (inst "sk=ov_0"))
                                                   (rule "allRight" (formula "42") (inst "sk=fv_0"))
                                                   (rule "notRight" (formula "42"))
                                                   (rule "elementOfIntersect" (formula "1"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "elementOfSubsetImpliesElementOfSuperset" (formula "2") (ifseqformula "35"))
                                                    (builtin "One Step Simplification" (formula "2"))
                                                   (rule "andLeft" (formula "2"))
                                                   (rule "notLeft" (formula "3"))
                                                   (rule "notLeft" (formula "2"))
                                                   (rule "elementOfSubsetImpliesElementOfSuperset" (formula "1") (ifseqformula "14"))
                                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "45")))
                                                   (rule "notLeft" (formula "1"))
                                                   (rule "pullOutSelect" (formula "46") (term "0") (inst "selectSK=java_lang_Object_created__7"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "25"))
                                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "46")))
                                                   (rule "ifthenelse_negated" (formula "1") (term "0"))
                                                   (rule "apply_eq_boolean_rigid" (formula "1") (term "1") (ifseqformula "47"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "notLeft" (formula "1"))
                                                   (rule "ifEqualsTRUE" (formula "44"))
                                                    (builtin "One Step Simplification" (formula "44"))
                                                   (rule "orRight" (formula "44"))
                                                   (rule "replace_known_right" (formula "45") (term "0,0") (ifseqformula "44"))
                                                    (builtin "One Step Simplification" (formula "45"))
                                                   (rule "pullOutSelect" (formula "44") (term "0") (inst "selectSK=java_lang_Object_created__8"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "18"))
                                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "48")))
                                                   (rule "ifthenelse_negated" (formula "1") (term "0"))
                                                   (rule "apply_eq_boolean" (formula "1") (term "1") (ifseqformula "45"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "notLeft" (formula "1"))
                                                   (rule "ifEqualsTRUE" (formula "44"))
                                                    (builtin "One Step Simplification" (formula "44"))
                                                   (rule "orRight" (formula "44"))
                                                   (rule "replace_known_right" (formula "45") (term "0,0") (ifseqformula "44"))
                                                    (builtin "One Step Simplification" (formula "45"))
                                                   (rule "pullOutSelect" (formula "44") (term "0") (inst "selectSK=java_lang_Object_created__9"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "10"))
                                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "50")) (ifInst ""  (formula "49")))
                                                   (rule "applyEqReverse" (formula "45") (term "0") (ifseqformula "1"))
                                                   (rule "hideAuxiliaryEq" (formula "1"))
                                                   (rule "hideAuxiliaryEqConcrete2" (formula "50"))
                                                   (rule "hideAuxiliaryEqConcrete2" (formula "46"))
                                                   (rule "onlyCreatedObjectsAreInLocSets" (formula "1") (ifseqformula "8"))
                                                   (rule "replace_known_right" (formula "1") (term "1") (ifseqformula "45"))
                                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "49")))
                                                   (rule "closeFalse" (formula "1"))
                                                )
                                             )
                                             (branch "(self_1, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> FALSE"
                                                (rule "eqSymm" (formula "38"))
                                                (rule "applyEqRigid" (formula "39") (term "1") (ifseqformula "38"))
                                                (rule "ifthenelse_split" (formula "52") (term "0,0,1"))
                                                (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> TRUE"
                                                   (rule "elementOfSubsetImpliesElementOfSuperset" (formula "1") (ifseqformula "34"))
                                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "52")))
                                                   (rule "notLeft" (formula "1"))
                                                   (rule "pullOutSelect" (formula "42") (term "0") (inst "selectSK=java_lang_Object_created__6"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
                                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")))
                                                   (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "2,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "2,0"))
                                                   (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "0,0,0,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "0,0,0,0"))
                                                   (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "11"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "applyEqReverse" (formula "43") (term "0") (ifseqformula "1"))
                                                   (rule "close" (formula "43") (ifseqformula "11"))
                                                )
                                                (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> FALSE"
                                                   (rule "lenOfSeqConcat" (formula "53") (term "0,1"))
                                                    (builtin "One Step Simplification" (formula "53"))
                                                   (rule "add_literals" (formula "53") (term "0,1"))
                                                   (rule "qeq_literals" (formula "53") (term "1"))
                                                    (builtin "One Step Simplification" (formula "53"))
                                                   (rule "equalityToSeqGetAndSeqLenLeft" (formula "32") (inst "iv=iv"))
                                                    (builtin "One Step Simplification" (formula "32"))
                                                   (rule "andLeft" (formula "32"))
                                                   (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0,0"))
                                                   (rule "applyEq" (formula "33") (term "0,0,1,0,0,1,0,0") (ifseqformula "34"))
                                                    (builtin "One Step Simplification" (formula "33"))
                                                   (rule "mul_literals" (formula "33") (term "1,0,0,1,0,0"))
                                                   (rule "add_literals" (formula "33") (term "0,0,1,0,0"))
                                                   (rule "applyEq" (formula "32") (term "0,0") (ifseqformula "34"))
                                                    (builtin "One Step Simplification" (formula "32"))
                                                   (rule "true_left" (formula "32"))
                                                   (rule "applyEq" (formula "32") (term "0,0,1,0") (ifseqformula "33"))
                                                    (builtin "One Step Simplification" (formula "32"))
                                                   (rule "true_left" (formula "32"))
                                                   (rule "equalityToSeqGetAndSeqLenLeft" (formula "18") (inst "iv=iv"))
                                                    (builtin "One Step Simplification" (formula "18"))
                                                   (rule "andLeft" (formula "18"))
                                                   (rule "getOfSeqSingleton" (formula "19") (term "1,1,0"))
                                                   (rule "castDel" (formula "19") (term "2,1,1,0"))
                                                   (rule "castDel" (formula "19") (term "1,1,1,0"))
                                                   (rule "eqSymm" (formula "19") (term "1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
                                                   (rule "applyEq" (formula "19") (term "0,1,1,0") (ifseqformula "20"))
                                                   (rule "getOfSeqSingleton" (formula "19") (term "1,1,0"))
                                                   (rule "castDel" (formula "19") (term "2,1,1,0"))
                                                   (rule "castDel" (formula "19") (term "1,1,1,0"))
                                                    (builtin "One Step Simplification" (formula "19"))
                                                   (rule "true_left" (formula "19"))
                                                   (rule "applyEq" (formula "18") (term "0,0") (ifseqformula "19"))
                                                    (builtin "One Step Simplification" (formula "18"))
                                                   (rule "true_left" (formula "18"))
                                                   (rule "equalityToSeqGetAndSeqLenLeft" (formula "24") (inst "iv=iv"))
                                                   (rule "andLeft" (formula "24"))
                                                   (rule "lenOfSeqConcat" (formula "24") (term "1"))
                                                    (builtin "One Step Simplification" (formula "24"))
                                                   (rule "add_literals" (formula "24") (term "1"))
                                                   (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0"))
                                                   (rule "applyEq" (formula "25") (term "0,0,1,0,0,1,0,0") (ifseqformula "26"))
                                                   (rule "lenOfSeqConcat" (formula "25") (term "0,1,0,0,1,0,0"))
                                                    (builtin "One Step Simplification" (formula "25"))
                                                   (rule "add_literals" (formula "25") (term "0,1,0,0,1,0,0"))
                                                   (rule "mul_literals" (formula "25") (term "1,0,0,1,0,0"))
                                                   (rule "add_literals" (formula "25") (term "0,0,1,0,0"))
                                                   (rule "applyEq" (formula "24") (term "0,0") (ifseqformula "26"))
                                                   (rule "lenOfSeqConcat" (formula "24") (term "0"))
                                                    (builtin "One Step Simplification" (formula "24"))
                                                   (rule "add_literals" (formula "24") (term "0"))
                                                    (builtin "One Step Simplification" (formula "24"))
                                                   (rule "true_left" (formula "24"))
                                                   (rule "applyEq" (formula "24") (term "0,0,1,0") (ifseqformula "25"))
                                                    (builtin "One Step Simplification" (formula "24"))
                                                   (rule "true_left" (formula "24"))
                                                   (rule "equalityToSeqGetAndSeqLenLeft" (formula "38") (inst "iv=iv"))
                                                    (builtin "One Step Simplification" (formula "38"))
                                                   (rule "equal_literals" (formula "38") (term "0"))
                                                    (builtin "One Step Simplification" (formula "38"))
                                                   (rule "closeFalse" (formula "38"))
                                                )
                                             )
                                          )
                                       )
                                    )
                                    (branch "(self_0, List::$seq) in self_0.footprint@anon_heap_ArrayList<<anonHeapFunction>> FALSE"
                                       (rule "eqSymm" (formula "17"))
                                       (rule "applyEqRigid" (formula "26") (term "0,1") (ifseqformula "17"))
                                        (builtin "One Step Simplification" (formula "26"))
                                       (rule "applyEq" (formula "55") (term "0,2,0,0,1") (ifseqformula "17"))
                                        (builtin "One Step Simplification" (formula "55"))
                                       (rule "applyEqRigid" (formula "25") (term "0,1") (ifseqformula "17"))
                                        (builtin "One Step Simplification" (formula "25"))
                                       (rule "applyEq" (formula "18") (term "1") (ifseqformula "17"))
                                       (rule "applyEq" (formula "25") (term "2,0") (ifseqformula "17"))
                                       (rule "elementOfSubsetOfUnion2" (formula "25") (term "0,0") (ifseqformula "20") (ifseqformula "46"))
                                       (rule "elementOfIntersect" (formula "25") (term "1"))
                                        (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "54")))
                                       (rule "replaceKnownSelect_taclet0_4" (formula "25") (term "0,0,1,1"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet0_5" (formula "25") (term "0,0,1,1"))
                                       (rule "replace_known_left" (formula "25") (term "0,1,1") (ifseqformula "9"))
                                        (builtin "One Step Simplification" (formula "25"))
                                       (rule "notLeft" (formula "25"))
                                       (rule "replace_known_right" (formula "25") (term "0,0") (ifseqformula "46"))
                                        (builtin "One Step Simplification" (formula "25"))
                                       (rule "eqSymm" (formula "25"))
                                       (rule "applyEqRigid" (formula "56") (term "2,0,0,1") (ifseqformula "25"))
                                       (rule "applyEq" (formula "26") (term "1") (ifseqformula "25"))
                                       (rule "elementOfSubsetOfUnion2" (formula "46") (ifseqformula "20") (ifseqformula "47"))
                                       (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "47"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "notLeft" (formula "1"))
                                       (rule "elementOfIntersect" (formula "46"))
                                        (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "47")))
                                       (rule "false_right" (formula "46"))
                                       (rule "ifthenelse_split" (formula "43") (term "0"))
                                       (branch "(self_1, List::$footprint) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> TRUE"
                                          (rule "applyEqReverse" (formula "45") (term "0") (ifseqformula "44"))
                                          (rule "hideAuxiliaryEq" (formula "44"))
                                          (rule "elementOfSubsetImpliesElementOfSuperset" (formula "43") (ifseqformula "36"))
                                           (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "53")))
                                          (rule "replaceKnownSelect_taclet0000000_18" (formula "43") (term "0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet0000000_21" (formula "43") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "43"))
                                          (rule "true_left" (formula "43"))
                                          (rule "ifthenelse_split" (formula "41") (term "0"))
                                          (branch "(self_1, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> TRUE"
                                             (rule "elementOfSubsetImpliesElementOfSuperset" (formula "41") (ifseqformula "36"))
                                              (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "54")))
                                             (rule "replaceKnownSelect_taclet0000000_18" (formula "41") (term "0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet0000000_21" (formula "41") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "41"))
                                             (rule "true_left" (formula "41"))
                                             (rule "ifthenelse_split" (formula "19") (term "0"))
                                             (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_ArrayList<<anonHeapFunction>> TRUE"
                                                (rule "applyEqReverse" (formula "24") (term "1,0") (ifseqformula "20"))
                                                (rule "applyEqReverse" (formula "29") (term "0,1") (ifseqformula "20"))
                                                (rule "applyEqReverse" (formula "48") (term "2") (ifseqformula "20"))
                                                (rule "applyEqReverse" (formula "21") (term "0") (ifseqformula "20"))
                                                (rule "applyEqReverse" (formula "28") (term "2,0") (ifseqformula "20"))
                                                (rule "applyEqReverse" (formula "28") (term "2,0,0") (ifseqformula "20"))
                                                (rule "hideAuxiliaryEq" (formula "20"))
                                                (rule "elementOfSubsetOfUnion2" (formula "47") (ifseqformula "20") (ifseqformula "48"))
                                                (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "48"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "notLeft" (formula "1"))
                                                (rule "elementOfSubsetImpliesElementOfSuperset" (formula "19") (ifseqformula "12"))
                                                 (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "57")) (ifInst ""  (formula "56")))
                                                (rule "true_left" (formula "19"))
                                                (rule "elementOfIntersect" (formula "47"))
                                                 (builtin "One Step Simplification" (formula "47") (ifInst ""  (formula "48")))
                                                (rule "false_right" (formula "47"))
                                                (rule "commuteUnion" (formula "28") (term "1"))
                                                (rule "ifthenelse_split" (formula "57") (term "0,0,1"))
                                                (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> TRUE"
                                                   (rule "elementOfSubsetImpliesElementOfSuperset" (formula "1") (ifseqformula "37"))
                                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "57")))
                                                   (rule "notLeft" (formula "1"))
                                                   (rule "pullOutSelect" (formula "48") (term "0") (inst "selectSK=java_lang_Object_created__6"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "25"))
                                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "58")))
                                                   (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "2,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "2,0"))
                                                   (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "0,0,0,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "0,0,0,0"))
                                                   (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "11"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "applyEqReverse" (formula "49") (term "0") (ifseqformula "1"))
                                                   (rule "close" (formula "49") (ifseqformula "11"))
                                                )
                                                (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> FALSE"
                                                    (builtin "One Step Simplification" (formula "58"))
                                                   (rule "qeq_literals" (formula "58") (term "1"))
                                                    (builtin "One Step Simplification" (formula "58"))
                                                   (rule "false_right" (formula "58"))
                                                   (rule "ifthenelse_split" (formula "27") (term "0"))
                                                   (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_add<<anonHeapFunction>> TRUE"
                                                      (rule "applyEqReverse" (formula "29") (term "0") (ifseqformula "28"))
                                                      (rule "hideAuxiliaryEq" (formula "28"))
                                                      (rule "elementOfSubsetImpliesElementOfSuperset" (formula "27") (ifseqformula "20"))
                                                      (rule "elementOfUnion" (formula "27"))
                                                       (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "19")))
                                                      (rule "true_left" (formula "27"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "43") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "43"))
                                                      (rule "andLeft" (formula "43"))
                                                      (rule "getOfSeqSingleton" (formula "44") (term "1,1,0"))
                                                      (rule "castDel" (formula "44") (term "2,1,1,0"))
                                                      (rule "castDel" (formula "44") (term "1,1,1,0"))
                                                      (rule "eqSymm" (formula "44") (term "1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "44") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "44") (term "0,0,0"))
                                                      (rule "applyEqRigid" (formula "44") (term "0,1,1,0") (ifseqformula "45"))
                                                      (rule "getOfSeqSingleton" (formula "44") (term "1,1,0"))
                                                      (rule "castDel" (formula "44") (term "1,1,1,0"))
                                                      (rule "castDel" (formula "44") (term "2,1,1,0"))
                                                       (builtin "One Step Simplification" (formula "44"))
                                                      (rule "true_left" (formula "44"))
                                                      (rule "applyEq" (formula "43") (term "0,0") (ifseqformula "44"))
                                                       (builtin "One Step Simplification" (formula "43"))
                                                      (rule "true_left" (formula "43"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "35") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "35"))
                                                      (rule "andLeft" (formula "35"))
                                                      (rule "inEqSimp_ltToLeq" (formula "36") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "36") (term "0,0,0"))
                                                      (rule "applyEq" (formula "35") (term "0,0") (ifseqformula "37"))
                                                       (builtin "One Step Simplification" (formula "35"))
                                                      (rule "true_left" (formula "35"))
                                                      (rule "applyEq" (formula "35") (term "0,0,1,0") (ifseqformula "36"))
                                                       (builtin "One Step Simplification" (formula "35"))
                                                      (rule "true_left" (formula "35"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "17") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "17"))
                                                      (rule "equal_literals" (formula "17") (term "0"))
                                                       (builtin "One Step Simplification" (formula "17"))
                                                      (rule "closeFalse" (formula "17"))
                                                   )
                                                   (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_add<<anonHeapFunction>> FALSE"
                                                      (rule "applyEqReverse" (formula "28") (term "0") (ifseqformula "27"))
                                                       (builtin "One Step Simplification" (formula "28"))
                                                      (rule "true_left" (formula "28"))
                                                      (rule "hideAuxiliaryEq" (formula "27"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "41") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "41"))
                                                      (rule "andLeft" (formula "41"))
                                                      (rule "getOfSeqSingleton" (formula "42") (term "1,1,0"))
                                                      (rule "castDel" (formula "42") (term "2,1,1,0"))
                                                      (rule "castDel" (formula "42") (term "1,1,1,0"))
                                                      (rule "eqSymm" (formula "42") (term "1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "42") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "42") (term "0,0,0"))
                                                      (rule "applyEq" (formula "41") (term "0,0") (ifseqformula "43"))
                                                       (builtin "One Step Simplification" (formula "41"))
                                                      (rule "true_left" (formula "41"))
                                                      (rule "applyEq" (formula "41") (term "0,0,1,0,0,1,0,0") (ifseqformula "42"))
                                                       (builtin "One Step Simplification" (formula "41"))
                                                      (rule "mul_literals" (formula "41") (term "1,0,0,1,0,0"))
                                                      (rule "add_literals" (formula "41") (term "0,0,1,0,0"))
                                                      (rule "add_zero_left" (formula "41") (term "0,1,0,0"))
                                                      (rule "applyEqRigid" (formula "41") (term "0,1,1,0") (ifseqformula "42"))
                                                      (rule "getOfSeqSingleton" (formula "41") (term "1,1,0"))
                                                      (rule "castDel" (formula "41") (term "1,1,1,0"))
                                                      (rule "castDel" (formula "41") (term "2,1,1,0"))
                                                       (builtin "One Step Simplification" (formula "41"))
                                                      (rule "true_left" (formula "41"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "33") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "33"))
                                                      (rule "andLeft" (formula "33"))
                                                      (rule "inEqSimp_ltToLeq" (formula "34") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "34") (term "0,0,0"))
                                                      (rule "applyEq" (formula "34") (term "0,0,1,0,0,1,0,0") (ifseqformula "35"))
                                                       (builtin "One Step Simplification" (formula "34"))
                                                      (rule "mul_literals" (formula "34") (term "1,0,0,1,0,0"))
                                                      (rule "add_zero_right" (formula "34") (term "0,0,1,0,0"))
                                                      (rule "applyEq" (formula "33") (term "0,0") (ifseqformula "35"))
                                                       (builtin "One Step Simplification" (formula "33"))
                                                      (rule "true_left" (formula "33"))
                                                      (rule "applyEq" (formula "33") (term "0,0,1,0") (ifseqformula "34"))
                                                       (builtin "One Step Simplification" (formula "33"))
                                                      (rule "true_left" (formula "33"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "17") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "17"))
                                                      (rule "equal_literals" (formula "17") (term "0"))
                                                       (builtin "One Step Simplification" (formula "17"))
                                                      (rule "closeFalse" (formula "17"))
                                                   )
                                                )
                                             )
                                             (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_ArrayList<<anonHeapFunction>> FALSE"
                                                (rule "applyEqReverse" (formula "23") (term "1,0") (ifseqformula "19"))
                                                (rule "applyEqReverse" (formula "28") (term "0,1") (ifseqformula "19"))
                                                (rule "applyEqReverse" (formula "48") (term "2") (ifseqformula "19"))
                                                (rule "applyEqReverse" (formula "20") (term "0") (ifseqformula "19"))
                                                 (builtin "One Step Simplification" (formula "20"))
                                                (rule "true_left" (formula "20"))
                                                (rule "applyEqReverse" (formula "26") (term "2,0,0") (ifseqformula "19"))
                                                (rule "applyEqReverse" (formula "26") (term "2,0") (ifseqformula "19"))
                                                (rule "hideAuxiliaryEq" (formula "19"))
                                                (rule "replace_known_right" (formula "25") (term "0,0") (ifseqformula "45"))
                                                 (builtin "One Step Simplification" (formula "25"))
                                                (rule "applyEqReverse" (formula "26") (term "0") (ifseqformula "25"))
                                                 (builtin "One Step Simplification" (formula "26"))
                                                (rule "true_left" (formula "26"))
                                                (rule "hideAuxiliaryEq" (formula "25"))
                                                (rule "ifthenelse_split" (formula "53") (term "0,0,1"))
                                                (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> TRUE"
                                                   (rule "elementOfSubsetImpliesElementOfSuperset" (formula "1") (ifseqformula "33"))
                                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")))
                                                   (rule "notLeft" (formula "1"))
                                                   (rule "pullOutSelect" (formula "44") (term "0") (inst "selectSK=java_lang_Object_created__6"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "54")))
                                                   (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "2,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "2,0"))
                                                   (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "0,0,0,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "0,0,0,0"))
                                                   (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "11"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "applyEqReverse" (formula "45") (term "0") (ifseqformula "1"))
                                                   (rule "close" (formula "45") (ifseqformula "11"))
                                                )
                                                (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> FALSE"
                                                    (builtin "One Step Simplification" (formula "54"))
                                                   (rule "qeq_literals" (formula "54") (term "1"))
                                                    (builtin "One Step Simplification" (formula "54"))
                                                   (rule "false_right" (formula "54"))
                                                   (rule "equalityToSeqGetAndSeqLenLeft" (formula "39") (inst "iv=iv"))
                                                    (builtin "One Step Simplification" (formula "39"))
                                                   (rule "andLeft" (formula "39"))
                                                   (rule "getOfSeqSingleton" (formula "40") (term "1,1,0"))
                                                   (rule "castDel" (formula "40") (term "2,1,1,0"))
                                                   (rule "castDel" (formula "40") (term "1,1,1,0"))
                                                   (rule "eqSymm" (formula "40") (term "1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "40") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "40") (term "0,0,0"))
                                                   (rule "applyEq" (formula "40") (term "0,1,1,0") (ifseqformula "41"))
                                                   (rule "getOfSeqSingleton" (formula "40") (term "1,1,0"))
                                                   (rule "castDel" (formula "40") (term "1,1,1,0"))
                                                   (rule "castDel" (formula "40") (term "2,1,1,0"))
                                                    (builtin "One Step Simplification" (formula "40"))
                                                   (rule "true_left" (formula "40"))
                                                   (rule "applyEq" (formula "39") (term "0,0") (ifseqformula "40"))
                                                    (builtin "One Step Simplification" (formula "39"))
                                                   (rule "true_left" (formula "39"))
                                                   (rule "equalityToSeqGetAndSeqLenLeft" (formula "31") (inst "iv=iv"))
                                                    (builtin "One Step Simplification" (formula "31"))
                                                   (rule "andLeft" (formula "31"))
                                                   (rule "inEqSimp_ltToLeq" (formula "32") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "32") (term "0,0,0"))
                                                   (rule "applyEq" (formula "32") (term "0,0,1,0,0,1,0,0") (ifseqformula "33"))
                                                    (builtin "One Step Simplification" (formula "32"))
                                                   (rule "mul_literals" (formula "32") (term "1,0,0,1,0,0"))
                                                   (rule "add_literals" (formula "32") (term "0,0,1,0,0"))
                                                   (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "33"))
                                                    (builtin "One Step Simplification" (formula "31"))
                                                   (rule "true_left" (formula "31"))
                                                   (rule "applyEq" (formula "31") (term "0,0,1,0") (ifseqformula "32"))
                                                    (builtin "One Step Simplification" (formula "31"))
                                                   (rule "true_left" (formula "31"))
                                                   (rule "equalityToSeqGetAndSeqLenLeft" (formula "17") (inst "iv=iv"))
                                                    (builtin "One Step Simplification" (formula "17"))
                                                   (rule "equal_literals" (formula "17") (term "0"))
                                                    (builtin "One Step Simplification" (formula "17"))
                                                   (rule "closeFalse" (formula "17"))
                                                )
                                             )
                                          )
                                          (branch "(self_1, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> FALSE"
                                             (rule "eqSymm" (formula "41"))
                                             (rule "applyEq" (formula "42") (term "1") (ifseqformula "41"))
                                             (rule "ifthenelse_split" (formula "19") (term "0"))
                                             (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_ArrayList<<anonHeapFunction>> TRUE"
                                                (rule "applyEqReverse" (formula "28") (term "2,0,0") (ifseqformula "20"))
                                                (rule "applyEqReverse" (formula "29") (term "0,1") (ifseqformula "20"))
                                                (rule "applyEqReverse" (formula "28") (term "2,0") (ifseqformula "20"))
                                                (rule "applyEqReverse" (formula "21") (term "0") (ifseqformula "20"))
                                                (rule "applyEqReverse" (formula "48") (term "2") (ifseqformula "20"))
                                                (rule "applyEqReverse" (formula "24") (term "1,0") (ifseqformula "20"))
                                                (rule "hideAuxiliaryEq" (formula "20"))
                                                (rule "elementOfSubsetImpliesElementOfSuperset" (formula "19") (ifseqformula "12"))
                                                 (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "56")) (ifInst ""  (formula "55")))
                                                (rule "true_left" (formula "19"))
                                                (rule "elementOfSubsetOfUnion2" (formula "47") (ifseqformula "20") (ifseqformula "48"))
                                                (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "48"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "notLeft" (formula "1"))
                                                (rule "elementOfIntersect" (formula "46"))
                                                 (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "48")))
                                                (rule "false_right" (formula "46"))
                                                (rule "commuteUnion" (formula "28") (term "1"))
                                                (rule "ifthenelse_split" (formula "57") (term "0,0,1"))
                                                (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> TRUE"
                                                   (rule "elementOfSubsetImpliesElementOfSuperset" (formula "1") (ifseqformula "37"))
                                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "57")))
                                                   (rule "notLeft" (formula "1"))
                                                   (rule "pullOutSelect" (formula "47") (term "0") (inst "selectSK=java_lang_Object_created__6"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "25"))
                                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "58")))
                                                   (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "2,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "2,0"))
                                                   (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "0,0,0,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "0,0,0,0"))
                                                   (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "11"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "applyEqReverse" (formula "48") (term "0") (ifseqformula "1"))
                                                   (rule "close" (formula "48") (ifseqformula "11"))
                                                )
                                                (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> FALSE"
                                                    (builtin "One Step Simplification" (formula "58"))
                                                   (rule "qeq_literals" (formula "58") (term "1"))
                                                    (builtin "One Step Simplification" (formula "58"))
                                                   (rule "false_right" (formula "58"))
                                                   (rule "ifthenelse_split" (formula "27") (term "0"))
                                                   (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_add<<anonHeapFunction>> TRUE"
                                                      (rule "applyEqReverse" (formula "29") (term "0") (ifseqformula "28"))
                                                      (rule "hideAuxiliaryEq" (formula "28"))
                                                      (rule "elementOfSubsetImpliesElementOfSuperset" (formula "27") (ifseqformula "20"))
                                                      (rule "elementOfUnion" (formula "27"))
                                                       (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "19")))
                                                      (rule "true_left" (formula "27"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "35") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "35"))
                                                      (rule "andLeft" (formula "35"))
                                                      (rule "inEqSimp_ltToLeq" (formula "36") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "36") (term "0,0,0"))
                                                      (rule "applyEq" (formula "36") (term "0,0,1,0") (ifseqformula "37"))
                                                       (builtin "One Step Simplification" (formula "36"))
                                                      (rule "true_left" (formula "36"))
                                                      (rule "applyEq" (formula "35") (term "0,0") (ifseqformula "36"))
                                                       (builtin "One Step Simplification" (formula "35"))
                                                      (rule "true_left" (formula "35"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "17") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "17"))
                                                      (rule "equal_literals" (formula "17") (term "0"))
                                                       (builtin "One Step Simplification" (formula "17"))
                                                      (rule "closeFalse" (formula "17"))
                                                   )
                                                   (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_add<<anonHeapFunction>> FALSE"
                                                      (rule "applyEqReverse" (formula "28") (term "0") (ifseqformula "27"))
                                                       (builtin "One Step Simplification" (formula "28"))
                                                      (rule "true_left" (formula "28"))
                                                      (rule "hideAuxiliaryEq" (formula "27"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "33") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "33"))
                                                      (rule "andLeft" (formula "33"))
                                                      (rule "inEqSimp_ltToLeq" (formula "34") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "34") (term "0,0,0"))
                                                      (rule "applyEq" (formula "33") (term "0,0") (ifseqformula "35"))
                                                       (builtin "One Step Simplification" (formula "33"))
                                                      (rule "true_left" (formula "33"))
                                                      (rule "applyEq" (formula "33") (term "0,0,1,0") (ifseqformula "34"))
                                                       (builtin "One Step Simplification" (formula "33"))
                                                      (rule "true_left" (formula "33"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "17") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "17"))
                                                      (rule "equal_literals" (formula "17") (term "0"))
                                                       (builtin "One Step Simplification" (formula "17"))
                                                      (rule "closeFalse" (formula "17"))
                                                   )
                                                )
                                             )
                                             (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_ArrayList<<anonHeapFunction>> FALSE"
                                                (rule "applyEqReverse" (formula "27") (term "2,0") (ifseqformula "19"))
                                                (rule "applyEqReverse" (formula "27") (term "2,0,0") (ifseqformula "19"))
                                                (rule "applyEqReverse" (formula "20") (term "0") (ifseqformula "19"))
                                                 (builtin "One Step Simplification" (formula "20"))
                                                (rule "true_left" (formula "20"))
                                                (rule "applyEqReverse" (formula "27") (term "0,1") (ifseqformula "19"))
                                                (rule "applyEqReverse" (formula "47") (term "2") (ifseqformula "19"))
                                                (rule "applyEqReverse" (formula "22") (term "1,0") (ifseqformula "19"))
                                                (rule "hideAuxiliaryEq" (formula "19"))
                                                (rule "replace_known_right" (formula "25") (term "0,0") (ifseqformula "44"))
                                                 (builtin "One Step Simplification" (formula "25"))
                                                (rule "applyEqReverse" (formula "26") (term "0") (ifseqformula "25"))
                                                 (builtin "One Step Simplification" (formula "26"))
                                                (rule "true_left" (formula "26"))
                                                (rule "hideAuxiliaryEq" (formula "25"))
                                                (rule "ifthenelse_split" (formula "53") (term "0,0,1"))
                                                (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> TRUE"
                                                   (rule "elementOfSubsetImpliesElementOfSuperset" (formula "1") (ifseqformula "33"))
                                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")))
                                                   (rule "notLeft" (formula "1"))
                                                   (rule "pullOutSelect" (formula "43") (term "0") (inst "selectSK=java_lang_Object_created__6"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "54")))
                                                   (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "2,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "2,0"))
                                                   (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "0,0,0,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "0,0,0,0"))
                                                   (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "11"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "applyEqReverse" (formula "44") (term "0") (ifseqformula "1"))
                                                   (rule "close" (formula "44") (ifseqformula "11"))
                                                )
                                                (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> FALSE"
                                                    (builtin "One Step Simplification" (formula "54"))
                                                   (rule "qeq_literals" (formula "54") (term "1"))
                                                    (builtin "One Step Simplification" (formula "54"))
                                                   (rule "false_right" (formula "54"))
                                                   (rule "equalityToSeqGetAndSeqLenLeft" (formula "31") (inst "iv=iv"))
                                                    (builtin "One Step Simplification" (formula "31"))
                                                   (rule "andLeft" (formula "31"))
                                                   (rule "inEqSimp_ltToLeq" (formula "32") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "32") (term "0,0,0"))
                                                   (rule "applyEq" (formula "32") (term "0,0,1,0") (ifseqformula "33"))
                                                    (builtin "One Step Simplification" (formula "32"))
                                                   (rule "true_left" (formula "32"))
                                                   (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "32"))
                                                    (builtin "One Step Simplification" (formula "31"))
                                                   (rule "true_left" (formula "31"))
                                                   (rule "equalityToSeqGetAndSeqLenLeft" (formula "17") (inst "iv=iv"))
                                                    (builtin "One Step Simplification" (formula "17"))
                                                   (rule "equal_literals" (formula "17") (term "0"))
                                                    (builtin "One Step Simplification" (formula "17"))
                                                   (rule "closeFalse" (formula "17"))
                                                )
                                             )
                                          )
                                       )
                                       (branch "(self_1, List::$footprint) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> FALSE"
                                          (rule "applyEqReverse" (formula "44") (term "0") (ifseqformula "43"))
                                           (builtin "One Step Simplification" (formula "44"))
                                          (rule "true_left" (formula "44"))
                                          (rule "hideAuxiliaryEq" (formula "43"))
                                          (rule "ifthenelse_split" (formula "41") (term "0"))
                                          (branch "(self_1, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> TRUE"
                                             (rule "elementOfSubsetImpliesElementOfSuperset" (formula "41") (ifseqformula "36"))
                                              (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "53")))
                                             (rule "replaceKnownSelect_taclet0000000_18" (formula "41") (term "0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet0000000_21" (formula "41") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "41"))
                                             (rule "true_left" (formula "41"))
                                             (rule "ifthenelse_split" (formula "19") (term "0"))
                                             (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_ArrayList<<anonHeapFunction>> TRUE"
                                                (rule "applyEqReverse" (formula "47") (term "2") (ifseqformula "20"))
                                                (rule "applyEqReverse" (formula "21") (term "0") (ifseqformula "20"))
                                                (rule "applyEqReverse" (formula "29") (term "0,1") (ifseqformula "20"))
                                                (rule "applyEqReverse" (formula "28") (term "2,0") (ifseqformula "20"))
                                                (rule "applyEqReverse" (formula "28") (term "2,0,0") (ifseqformula "20"))
                                                (rule "applyEqReverse" (formula "24") (term "1,0") (ifseqformula "20"))
                                                (rule "hideAuxiliaryEq" (formula "20"))
                                                (rule "elementOfSubsetImpliesElementOfSuperset" (formula "19") (ifseqformula "12"))
                                                 (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "55")) (ifInst ""  (formula "54")))
                                                (rule "true_left" (formula "19"))
                                                (rule "elementOfSubsetOfUnion2" (formula "46") (ifseqformula "20") (ifseqformula "47"))
                                                (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "47"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "notLeft" (formula "1"))
                                                (rule "elementOfIntersect" (formula "45"))
                                                 (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "47")))
                                                (rule "false_right" (formula "45"))
                                                (rule "commuteUnion" (formula "28") (term "1"))
                                                (rule "ifthenelse_split" (formula "56") (term "0,0,1"))
                                                (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> TRUE"
                                                   (rule "elementOfSubsetImpliesElementOfSuperset" (formula "1") (ifseqformula "37"))
                                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "56")))
                                                   (rule "notLeft" (formula "1"))
                                                   (rule "pullOutSelect" (formula "46") (term "0") (inst "selectSK=java_lang_Object_created__6"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "25"))
                                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "57")))
                                                   (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "2,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "2,0"))
                                                   (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "0,0,0,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "0,0,0,0"))
                                                   (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "11"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "applyEqReverse" (formula "47") (term "0") (ifseqformula "1"))
                                                   (rule "close" (formula "47") (ifseqformula "11"))
                                                )
                                                (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> FALSE"
                                                    (builtin "One Step Simplification" (formula "57"))
                                                   (rule "qeq_literals" (formula "57") (term "1"))
                                                    (builtin "One Step Simplification" (formula "57"))
                                                   (rule "false_right" (formula "57"))
                                                   (rule "ifthenelse_split" (formula "27") (term "0"))
                                                   (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_add<<anonHeapFunction>> TRUE"
                                                      (rule "applyEqReverse" (formula "29") (term "0") (ifseqformula "28"))
                                                      (rule "hideAuxiliaryEq" (formula "28"))
                                                      (rule "elementOfSubsetImpliesElementOfSuperset" (formula "27") (ifseqformula "20"))
                                                      (rule "elementOfUnion" (formula "27"))
                                                       (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "19")))
                                                      (rule "true_left" (formula "27"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "43") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "43"))
                                                      (rule "andLeft" (formula "43"))
                                                      (rule "getOfSeqSingleton" (formula "44") (term "1,1,0"))
                                                      (rule "castDel" (formula "44") (term "2,1,1,0"))
                                                      (rule "castDel" (formula "44") (term "1,1,1,0"))
                                                      (rule "eqSymm" (formula "44") (term "1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "44") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "44") (term "0,0,0"))
                                                      (rule "applyEq" (formula "43") (term "0,0") (ifseqformula "45"))
                                                       (builtin "One Step Simplification" (formula "43"))
                                                      (rule "true_left" (formula "43"))
                                                      (rule "applyEq" (formula "43") (term "0,0,1,0,0,1,0,0") (ifseqformula "44"))
                                                       (builtin "One Step Simplification" (formula "43"))
                                                      (rule "mul_literals" (formula "43") (term "1,0,0,1,0,0"))
                                                      (rule "add_literals" (formula "43") (term "0,0,1,0,0"))
                                                      (rule "add_zero_left" (formula "43") (term "0,1,0,0"))
                                                      (rule "applyEqRigid" (formula "43") (term "0,1,1,0") (ifseqformula "44"))
                                                      (rule "getOfSeqSingleton" (formula "43") (term "1,1,0"))
                                                      (rule "castDel" (formula "43") (term "1,1,1,0"))
                                                      (rule "castDel" (formula "43") (term "2,1,1,0"))
                                                       (builtin "One Step Simplification" (formula "43"))
                                                      (rule "true_left" (formula "43"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "35") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "35"))
                                                      (rule "andLeft" (formula "35"))
                                                      (rule "inEqSimp_ltToLeq" (formula "36") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "36") (term "0,0,0"))
                                                      (rule "applyEq" (formula "36") (term "0,0,1,0,0,1,0,0") (ifseqformula "37"))
                                                       (builtin "One Step Simplification" (formula "36"))
                                                      (rule "mul_literals" (formula "36") (term "1,0,0,1,0,0"))
                                                      (rule "add_zero_right" (formula "36") (term "0,0,1,0,0"))
                                                      (rule "applyEq" (formula "35") (term "0,0") (ifseqformula "37"))
                                                       (builtin "One Step Simplification" (formula "35"))
                                                      (rule "true_left" (formula "35"))
                                                      (rule "applyEq" (formula "35") (term "0,0,1,0") (ifseqformula "36"))
                                                       (builtin "One Step Simplification" (formula "35"))
                                                      (rule "true_left" (formula "35"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "17") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "17"))
                                                      (rule "equal_literals" (formula "17") (term "0"))
                                                       (builtin "One Step Simplification" (formula "17"))
                                                      (rule "closeFalse" (formula "17"))
                                                   )
                                                   (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_add<<anonHeapFunction>> FALSE"
                                                      (rule "applyEqReverse" (formula "28") (term "0") (ifseqformula "27"))
                                                       (builtin "One Step Simplification" (formula "28"))
                                                      (rule "true_left" (formula "28"))
                                                      (rule "hideAuxiliaryEq" (formula "27"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "41") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "41"))
                                                      (rule "andLeft" (formula "41"))
                                                      (rule "getOfSeqSingleton" (formula "42") (term "1,1,0"))
                                                      (rule "castDel" (formula "42") (term "1,1,1,0"))
                                                      (rule "castDel" (formula "42") (term "2,1,1,0"))
                                                      (rule "eqSymm" (formula "42") (term "1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "42") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "42") (term "0,0,0"))
                                                      (rule "applyEqRigid" (formula "42") (term "0,0,1,0,0,1,0,0") (ifseqformula "43"))
                                                       (builtin "One Step Simplification" (formula "42"))
                                                      (rule "mul_literals" (formula "42") (term "1,0,0,1,0,0"))
                                                      (rule "add_literals" (formula "42") (term "0,0,1,0,0"))
                                                      (rule "add_zero_left" (formula "42") (term "0,1,0,0"))
                                                      (rule "applyEqRigid" (formula "41") (term "0,0") (ifseqformula "43"))
                                                       (builtin "One Step Simplification" (formula "41"))
                                                      (rule "true_left" (formula "41"))
                                                      (rule "applyEqRigid" (formula "41") (term "0,1,1,0") (ifseqformula "42"))
                                                      (rule "getOfSeqSingleton" (formula "41") (term "1,1,0"))
                                                      (rule "castDel" (formula "41") (term "2,1,1,0"))
                                                      (rule "castDel" (formula "41") (term "1,1,1,0"))
                                                       (builtin "One Step Simplification" (formula "41"))
                                                      (rule "true_left" (formula "41"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "33") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "33"))
                                                      (rule "andLeft" (formula "33"))
                                                      (rule "inEqSimp_ltToLeq" (formula "34") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "34") (term "0,0,0"))
                                                      (rule "applyEq" (formula "34") (term "0,0,1,0,0,1,0,0") (ifseqformula "35"))
                                                       (builtin "One Step Simplification" (formula "34"))
                                                      (rule "mul_literals" (formula "34") (term "1,0,0,1,0,0"))
                                                      (rule "add_zero_right" (formula "34") (term "0,0,1,0,0"))
                                                      (rule "applyEq" (formula "33") (term "0,0") (ifseqformula "35"))
                                                       (builtin "One Step Simplification" (formula "33"))
                                                      (rule "true_left" (formula "33"))
                                                      (rule "applyEq" (formula "33") (term "0,0,1,0") (ifseqformula "34"))
                                                       (builtin "One Step Simplification" (formula "33"))
                                                      (rule "true_left" (formula "33"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "17") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "17"))
                                                      (rule "equal_literals" (formula "17") (term "0"))
                                                       (builtin "One Step Simplification" (formula "17"))
                                                      (rule "closeFalse" (formula "17"))
                                                   )
                                                )
                                             )
                                             (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_ArrayList<<anonHeapFunction>> FALSE"
                                                (rule "applyEqReverse" (formula "23") (term "1,0") (ifseqformula "19"))
                                                (rule "applyEqReverse" (formula "28") (term "0,1") (ifseqformula "19"))
                                                (rule "applyEqReverse" (formula "47") (term "2") (ifseqformula "19"))
                                                (rule "applyEqReverse" (formula "27") (term "2,0") (ifseqformula "19"))
                                                (rule "applyEqReverse" (formula "27") (term "2,0,0") (ifseqformula "19"))
                                                (rule "applyEqReverse" (formula "20") (term "0") (ifseqformula "19"))
                                                 (builtin "One Step Simplification" (formula "20"))
                                                (rule "true_left" (formula "20"))
                                                (rule "hideAuxiliaryEq" (formula "19"))
                                                (rule "replace_known_right" (formula "25") (term "0,0") (ifseqformula "43"))
                                                 (builtin "One Step Simplification" (formula "25"))
                                                (rule "applyEqReverse" (formula "26") (term "0") (ifseqformula "25"))
                                                 (builtin "One Step Simplification" (formula "26"))
                                                (rule "true_left" (formula "26"))
                                                (rule "hideAuxiliaryEq" (formula "25"))
                                                (rule "ifthenelse_split" (formula "52") (term "0,0,1"))
                                                (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> TRUE"
                                                   (rule "elementOfSubsetImpliesElementOfSuperset" (formula "1") (ifseqformula "33"))
                                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "52")))
                                                   (rule "notLeft" (formula "1"))
                                                   (rule "pullOutSelect" (formula "42") (term "0") (inst "selectSK=java_lang_Object_created__6"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")))
                                                   (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "2,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "2,0"))
                                                   (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "0,0,0,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "0,0,0,0"))
                                                   (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "11"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "applyEqReverse" (formula "43") (term "0") (ifseqformula "1"))
                                                   (rule "close" (formula "43") (ifseqformula "11"))
                                                )
                                                (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> FALSE"
                                                    (builtin "One Step Simplification" (formula "53"))
                                                   (rule "qeq_literals" (formula "53") (term "1"))
                                                    (builtin "One Step Simplification" (formula "53"))
                                                   (rule "false_right" (formula "53"))
                                                   (rule "equalityToSeqGetAndSeqLenLeft" (formula "39") (inst "iv=iv"))
                                                    (builtin "One Step Simplification" (formula "39"))
                                                   (rule "andLeft" (formula "39"))
                                                   (rule "getOfSeqSingleton" (formula "40") (term "1,1,0"))
                                                   (rule "castDel" (formula "40") (term "1,1,1,0"))
                                                   (rule "castDel" (formula "40") (term "2,1,1,0"))
                                                   (rule "eqSymm" (formula "40") (term "1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "40") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "40") (term "0,0,0"))
                                                   (rule "applyEqRigid" (formula "40") (term "0,0,1,0,0,1,0,0") (ifseqformula "41"))
                                                    (builtin "One Step Simplification" (formula "40"))
                                                   (rule "mul_literals" (formula "40") (term "1,0,0,1,0,0"))
                                                   (rule "add_literals" (formula "40") (term "0,0,1,0,0"))
                                                   (rule "add_zero_left" (formula "40") (term "0,1,0,0"))
                                                   (rule "applyEqRigid" (formula "39") (term "0,0") (ifseqformula "41"))
                                                    (builtin "One Step Simplification" (formula "39"))
                                                   (rule "true_left" (formula "39"))
                                                   (rule "applyEq" (formula "39") (term "0,1,1,0") (ifseqformula "40"))
                                                   (rule "getOfSeqSingleton" (formula "39") (term "1,1,0"))
                                                   (rule "castDel" (formula "39") (term "1,1,1,0"))
                                                   (rule "castDel" (formula "39") (term "2,1,1,0"))
                                                    (builtin "One Step Simplification" (formula "39"))
                                                   (rule "true_left" (formula "39"))
                                                   (rule "equalityToSeqGetAndSeqLenLeft" (formula "31") (inst "iv=iv"))
                                                    (builtin "One Step Simplification" (formula "31"))
                                                   (rule "andLeft" (formula "31"))
                                                   (rule "inEqSimp_ltToLeq" (formula "32") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "32") (term "0,0,0"))
                                                   (rule "applyEq" (formula "32") (term "0,0,1,0,0,1,0,0") (ifseqformula "33"))
                                                    (builtin "One Step Simplification" (formula "32"))
                                                   (rule "mul_literals" (formula "32") (term "1,0,0,1,0,0"))
                                                   (rule "add_zero_right" (formula "32") (term "0,0,1,0,0"))
                                                   (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "33"))
                                                    (builtin "One Step Simplification" (formula "31"))
                                                   (rule "true_left" (formula "31"))
                                                   (rule "applyEq" (formula "31") (term "0,0,1,0") (ifseqformula "32"))
                                                    (builtin "One Step Simplification" (formula "31"))
                                                   (rule "true_left" (formula "31"))
                                                   (rule "equalityToSeqGetAndSeqLenLeft" (formula "17") (inst "iv=iv"))
                                                    (builtin "One Step Simplification" (formula "17"))
                                                   (rule "equal_literals" (formula "17") (term "0"))
                                                    (builtin "One Step Simplification" (formula "17"))
                                                   (rule "closeFalse" (formula "17"))
                                                )
                                             )
                                          )
                                          (branch "(self_1, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> FALSE"
                                             (rule "eqSymm" (formula "41"))
                                             (rule "applyEq" (formula "42") (term "1") (ifseqformula "41"))
                                             (rule "ifthenelse_split" (formula "19") (term "0"))
                                             (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_ArrayList<<anonHeapFunction>> TRUE"
                                                (rule "applyEqReverse" (formula "47") (term "2") (ifseqformula "20"))
                                                (rule "applyEqReverse" (formula "24") (term "1,0") (ifseqformula "20"))
                                                (rule "applyEqReverse" (formula "28") (term "2,0") (ifseqformula "20"))
                                                (rule "applyEqReverse" (formula "28") (term "2,0,0") (ifseqformula "20"))
                                                (rule "applyEqReverse" (formula "29") (term "0,1") (ifseqformula "20"))
                                                (rule "applyEqReverse" (formula "21") (term "0") (ifseqformula "20"))
                                                (rule "hideAuxiliaryEq" (formula "20"))
                                                (rule "elementOfSubsetImpliesElementOfSuperset" (formula "19") (ifseqformula "12"))
                                                 (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "55")) (ifInst ""  (formula "54")))
                                                (rule "true_left" (formula "19"))
                                                (rule "elementOfSubsetOfUnion2" (formula "46") (ifseqformula "20") (ifseqformula "47"))
                                                (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "47"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "notLeft" (formula "1"))
                                                (rule "elementOfIntersect" (formula "44"))
                                                 (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "47")))
                                                (rule "false_right" (formula "44"))
                                                (rule "commuteUnion" (formula "28") (term "1"))
                                                (rule "ifthenelse_split" (formula "56") (term "0,0,1"))
                                                (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> TRUE"
                                                   (rule "elementOfSubsetImpliesElementOfSuperset" (formula "1") (ifseqformula "37"))
                                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "56")))
                                                   (rule "notLeft" (formula "1"))
                                                   (rule "pullOutSelect" (formula "45") (term "0") (inst "selectSK=java_lang_Object_created__6"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "25"))
                                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "57")))
                                                   (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "2,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "2,0"))
                                                   (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "0,0,0,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "0,0,0,0"))
                                                   (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "11"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "applyEqReverse" (formula "46") (term "0") (ifseqformula "1"))
                                                   (rule "close" (formula "46") (ifseqformula "11"))
                                                )
                                                (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> FALSE"
                                                    (builtin "One Step Simplification" (formula "57"))
                                                   (rule "qeq_literals" (formula "57") (term "1"))
                                                    (builtin "One Step Simplification" (formula "57"))
                                                   (rule "false_right" (formula "57"))
                                                   (rule "ifthenelse_split" (formula "27") (term "0"))
                                                   (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_add<<anonHeapFunction>> TRUE"
                                                      (rule "applyEqReverse" (formula "29") (term "0") (ifseqformula "28"))
                                                      (rule "hideAuxiliaryEq" (formula "28"))
                                                      (rule "elementOfSubsetImpliesElementOfSuperset" (formula "27") (ifseqformula "20"))
                                                      (rule "elementOfUnion" (formula "27"))
                                                       (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "19")))
                                                      (rule "true_left" (formula "27"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "35") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "35"))
                                                      (rule "andLeft" (formula "35"))
                                                      (rule "inEqSimp_ltToLeq" (formula "36") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "36") (term "0,0,0"))
                                                      (rule "applyEq" (formula "35") (term "0,0") (ifseqformula "37"))
                                                       (builtin "One Step Simplification" (formula "35"))
                                                      (rule "true_left" (formula "35"))
                                                      (rule "applyEq" (formula "35") (term "0,0,1,0") (ifseqformula "36"))
                                                       (builtin "One Step Simplification" (formula "35"))
                                                      (rule "true_left" (formula "35"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "17") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "17"))
                                                      (rule "equal_literals" (formula "17") (term "0"))
                                                       (builtin "One Step Simplification" (formula "17"))
                                                      (rule "closeFalse" (formula "17"))
                                                   )
                                                   (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_add<<anonHeapFunction>> FALSE"
                                                      (rule "applyEqReverse" (formula "28") (term "0") (ifseqformula "27"))
                                                       (builtin "One Step Simplification" (formula "28"))
                                                      (rule "true_left" (formula "28"))
                                                      (rule "hideAuxiliaryEq" (formula "27"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "33") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "33"))
                                                      (rule "andLeft" (formula "33"))
                                                      (rule "inEqSimp_ltToLeq" (formula "34") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "34") (term "0,0,0"))
                                                      (rule "applyEq" (formula "34") (term "0,0,1,0,0,1,0,0") (ifseqformula "35"))
                                                       (builtin "One Step Simplification" (formula "34"))
                                                      (rule "mul_literals" (formula "34") (term "1,0,0,1,0,0"))
                                                      (rule "add_literals" (formula "34") (term "0,0,1,0,0"))
                                                      (rule "applyEq" (formula "33") (term "0,0") (ifseqformula "35"))
                                                       (builtin "One Step Simplification" (formula "33"))
                                                      (rule "true_left" (formula "33"))
                                                      (rule "applyEq" (formula "33") (term "0,0,1,0") (ifseqformula "34"))
                                                       (builtin "One Step Simplification" (formula "33"))
                                                      (rule "true_left" (formula "33"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "17") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "17"))
                                                      (rule "equal_literals" (formula "17") (term "0"))
                                                       (builtin "One Step Simplification" (formula "17"))
                                                      (rule "closeFalse" (formula "17"))
                                                   )
                                                )
                                             )
                                             (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_ArrayList<<anonHeapFunction>> FALSE"
                                                (rule "applyEqReverse" (formula "27") (term "2,0") (ifseqformula "19"))
                                                (rule "applyEqReverse" (formula "27") (term "2,0,0") (ifseqformula "19"))
                                                (rule "applyEqReverse" (formula "23") (term "1,0") (ifseqformula "19"))
                                                (rule "applyEqReverse" (formula "20") (term "0") (ifseqformula "19"))
                                                 (builtin "One Step Simplification" (formula "20"))
                                                (rule "true_left" (formula "20"))
                                                (rule "applyEqReverse" (formula "46") (term "2") (ifseqformula "19"))
                                                (rule "applyEqReverse" (formula "27") (term "0,1") (ifseqformula "19"))
                                                (rule "hideAuxiliaryEq" (formula "19"))
                                                (rule "replace_known_right" (formula "25") (term "0,0") (ifseqformula "42"))
                                                 (builtin "One Step Simplification" (formula "25"))
                                                (rule "applyEqReverse" (formula "26") (term "0") (ifseqformula "25"))
                                                 (builtin "One Step Simplification" (formula "26"))
                                                (rule "true_left" (formula "26"))
                                                (rule "hideAuxiliaryEq" (formula "25"))
                                                (rule "ifthenelse_split" (formula "52") (term "0,0,1"))
                                                (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> TRUE"
                                                   (rule "elementOfSubsetImpliesElementOfSuperset" (formula "1") (ifseqformula "33"))
                                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "52")))
                                                   (rule "notLeft" (formula "1"))
                                                   (rule "pullOutSelect" (formula "41") (term "0") (inst "selectSK=java_lang_Object_created__6"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")))
                                                   (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "2,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "2,0"))
                                                   (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "0,0,0,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "0,0,0,0"))
                                                   (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "11"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "applyEqReverse" (formula "42") (term "0") (ifseqformula "1"))
                                                   (rule "close" (formula "42") (ifseqformula "11"))
                                                )
                                                (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> FALSE"
                                                    (builtin "One Step Simplification" (formula "53"))
                                                   (rule "qeq_literals" (formula "53") (term "1"))
                                                    (builtin "One Step Simplification" (formula "53"))
                                                   (rule "false_right" (formula "53"))
                                                   (rule "equalityToSeqGetAndSeqLenLeft" (formula "31") (inst "iv=iv"))
                                                    (builtin "One Step Simplification" (formula "31"))
                                                   (rule "andLeft" (formula "31"))
                                                   (rule "inEqSimp_ltToLeq" (formula "32") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "32") (term "0,0,0"))
                                                   (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "33"))
                                                    (builtin "One Step Simplification" (formula "31"))
                                                   (rule "true_left" (formula "31"))
                                                   (rule "applyEq" (formula "31") (term "0,0,1,0") (ifseqformula "32"))
                                                    (builtin "One Step Simplification" (formula "31"))
                                                   (rule "true_left" (formula "31"))
                                                   (rule "equalityToSeqGetAndSeqLenLeft" (formula "17") (inst "iv=iv"))
                                                    (builtin "One Step Simplification" (formula "17"))
                                                   (rule "equal_literals" (formula "17") (term "0"))
                                                    (builtin "One Step Simplification" (formula "17"))
                                                   (rule "closeFalse" (formula "17"))
                                                )
                                             )
                                          )
                                       )
                                    )
                                 )
                                 (branch "Null reference (l = null)"
                                     (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "53")))
                                    (rule "closeTrue" (formula "55"))
                                 )
                              )
                           )
                           (branch "Assertion (l.get(0) == 23) Terminates And OK"
                               (builtin "One Step Simplification" (formula "54"))
                              (rule "compound_equality_comparison_1" (formula "54") (term "1") (inst "#v0=i"))
                              (rule "variableDeclarationAssign" (formula "54") (term "1"))
                              (rule "variableDeclaration" (formula "54") (term "1") (newnames "i"))
                              (rule "equalityToSeqGetAndSeqLenLeft" (formula "18") (inst "iv=iv"))
                               (builtin "One Step Simplification" (formula "18"))
                              (rule "andLeft" (formula "18"))
                              (rule "getOfSeqSingleton" (formula "19") (term "1,1,0"))
                              (rule "castDel" (formula "19") (term "1,1,1,0"))
                              (rule "castDel" (formula "19") (term "2,1,1,0"))
                              (rule "eqSymm" (formula "19") (term "1,0"))
                              (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
                              (rule "applyEq" (formula "19") (term "0,1,1,0,0") (ifseqformula "20"))
                               (builtin "One Step Simplification" (formula "19"))
                              (rule "applyEq" (formula "18") (term "0,0") (ifseqformula "20"))
                               (builtin "One Step Simplification" (formula "18"))
                              (rule "true_left" (formula "18"))
                              (rule "applyEq" (formula "18") (term "0,1,1,0") (ifseqformula "19"))
                              (rule "getOfSeqSingleton" (formula "18") (term "1,1,0"))
                              (rule "castDel" (formula "18") (term "1,1,1,0"))
                              (rule "castDel" (formula "18") (term "2,1,1,0"))
                               (builtin "One Step Simplification" (formula "18"))
                              (rule "true_left" (formula "18"))
                              (rule "equalityToSeqGetAndSeqLenLeft" (formula "17") (inst "iv=iv"))
                               (builtin "One Step Simplification" (formula "17"))
                              (rule "andLeft" (formula "17"))
                              (rule "getOfSeqSingleton" (formula "18") (term "1,1,0"))
                              (rule "castDel" (formula "18") (term "1,1,1,0"))
                              (rule "castDel" (formula "18") (term "2,1,1,0"))
                              (rule "eqSymm" (formula "18") (term "1,0"))
                              (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
                              (rule "applyEq" (formula "18") (term "1,1,0,0") (ifseqformula "17"))
                              (rule "applyEq" (formula "18") (term "0,1,1,0") (ifseqformula "19"))
                              (rule "getOfSeqSingleton" (formula "18") (term "1,1,0"))
                              (rule "castDel" (formula "18") (term "1,1,1,0"))
                              (rule "castDel" (formula "18") (term "2,1,1,0"))
                               (builtin "One Step Simplification" (formula "18"))
                              (rule "true_left" (formula "18"))
                              (rule "applyEq" (formula "17") (term "0,0") (ifseqformula "18"))
                               (builtin "One Step Simplification" (formula "17"))
                              (rule "true_left" (formula "17"))
                              (rule "equalityToSeqGetAndSeqLenLeft" (formula "26") (inst "iv=iv"))
                              (rule "andLeft" (formula "26"))
                              (rule "lenOfSeqConcat" (formula "26") (term "1"))
                               (builtin "One Step Simplification" (formula "26"))
                              (rule "add_literals" (formula "26") (term "1"))
                              (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0"))
                              (rule "applyEqRigid" (formula "27") (term "0,0,1,0") (ifseqformula "28"))
                               (builtin "One Step Simplification" (formula "27"))
                              (rule "true_left" (formula "27"))
                              (rule "applyEqRigid" (formula "26") (term "0,0") (ifseqformula "27"))
                              (rule "lenOfSeqConcat" (formula "26") (term "0"))
                               (builtin "One Step Simplification" (formula "26"))
                              (rule "add_literals" (formula "26") (term "0"))
                               (builtin "One Step Simplification" (formula "26"))
                              (rule "true_left" (formula "26"))
                              (rule "equalityToSeqGetAndSeqLenLeft" (formula "25") (inst "iv=iv"))
                              (rule "andLeft" (formula "25"))
                              (rule "lenOfSeqConcat" (formula "25") (term "1"))
                               (builtin "One Step Simplification" (formula "25"))
                              (rule "add_literals" (formula "25") (term "1"))
                              (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0"))
                              (rule "applyEq" (formula "26") (term "1,1,0,0") (ifseqformula "25"))
                              (rule "applyEq" (formula "26") (term "0,0,1,0") (ifseqformula "27"))
                               (builtin "One Step Simplification" (formula "26"))
                              (rule "true_left" (formula "26"))
                              (rule "applyEq" (formula "25") (term "0,0") (ifseqformula "26"))
                              (rule "lenOfSeqConcat" (formula "25") (term "0"))
                               (builtin "One Step Simplification" (formula "25"))
                              (rule "add_literals" (formula "25") (term "0"))
                               (builtin "One Step Simplification" (formula "25"))
                              (rule "true_left" (formula "25"))
                               (builtin "Use Operation Contract" (formula "54") (newnames "heapBefore_get,result_get,exc_5,heapAfter_get,anon_heap_get") (contract "List[List::get(int)].JML normal_behavior operation contract.0") (modality "diamond"))
                              (branch "Post (get)"
                                  (builtin "One Step Simplification" (formula "56"))
                                  (builtin "One Step Simplification" (formula "47"))
                                 (rule "andLeft" (formula "47"))
                                 (rule "andLeft" (formula "48"))
                                 (rule "andLeft" (formula "49"))
                                 (rule "andLeft" (formula "49"))
                                 (rule "eqSymm" (formula "49"))
                                 (rule "assignment" (formula "59") (term "1"))
                                  (builtin "One Step Simplification" (formula "59"))
                                 (rule "castedGetAny" (formula "49") (term "0"))
                                 (rule "pullOutSelect" (formula "49") (term "0,0") (inst "selectSK=List_seq_5"))
                                 (rule "simplifySelectOfAnonEQ" (formula "49") (ifseqformula "47"))
                                  (builtin "One Step Simplification" (formula "49") (ifInst ""  (formula "58")))
                                 (rule "ifthenelse_negated" (formula "49") (term "0"))
                                 (rule "pullOutSelect" (formula "49") (term "1,0") (inst "selectSK=List_seq_6"))
                                 (rule "simplifySelectOfAnonEQ" (formula "49") (ifseqformula "39"))
                                  (builtin "One Step Simplification" (formula "49") (ifInst ""  (formula "59")))
                                 (rule "pullOutSelect" (formula "50") (term "0,0,0") (inst "selectSK=java_lang_Object_created__6"))
                                 (rule "simplifySelectOfAnonEQ" (formula "50") (ifseqformula "39"))
                                  (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "60")))
                                 (rule "ifthenelse_negated" (formula "50") (term "0"))
                                 (rule "pullOutSelect" (formula "49") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__7"))
                                 (rule "applyEq" (formula "51") (term "1,0") (ifseqformula "49"))
                                 (rule "applyEq" (formula "51") (term "0,0,0") (ifseqformula "49"))
                                 (rule "simplifySelectOfAnonEQ" (formula "49") (ifseqformula "31"))
                                  (builtin "One Step Simplification" (formula "49") (ifInst ""  (formula "61")))
                                 (rule "ifthenelse_negated" (formula "49") (term "0"))
                                 (rule "pullOutSelect" (formula "50") (term "2,0") (inst "selectSK=List_seq_7"))
                                 (rule "simplifySelectOfAnonEQ" (formula "50") (ifseqformula "31"))
                                  (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "62")))
                                 (rule "replaceKnownSelect_taclet0000_8" (formula "50") (term "2,0"))
                                 (rule "ifthenelse_negated" (formula "50") (term "0"))
                                 (rule "applyEqRigid" (formula "50") (term "1,0") (ifseqformula "26"))
                                 (rule "pullOutSelect" (formula "49") (term "1,0") (inst "selectSK=java_lang_Object_created__8"))
                                 (rule "applyEq" (formula "51") (term "0,0,0") (ifseqformula "49"))
                                 (rule "applyEq" (formula "50") (term "0,0,0") (ifseqformula "49"))
                                 (rule "simplifySelectOfAnonEQ" (formula "49") (ifseqformula "23"))
                                  (builtin "One Step Simplification" (formula "49") (ifInst ""  (formula "63")))
                                 (rule "replaceKnownSelect_taclet0000_10" (formula "49") (term "2,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "49") (term "2,0"))
                                 (rule "replaceKnownSelect_taclet0000_10" (formula "49") (term "0,0,0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "49") (term "0,0,0,0"))
                                 (rule "replace_known_left" (formula "49") (term "0,0,0") (ifseqformula "9"))
                                  (builtin "One Step Simplification" (formula "49"))
                                 (rule "applyEqReverse" (formula "51") (term "0,0,0") (ifseqformula "49"))
                                 (rule "applyEqReverse" (formula "50") (term "0,0,0") (ifseqformula "49"))
                                 (rule "applyEqReverse" (formula "50") (term "1,0") (ifseqformula "49"))
                                 (rule "hideAuxiliaryEq" (formula "49"))
                                 (rule "replace_known_left" (formula "49") (term "0,0") (ifseqformula "9"))
                                  (builtin "One Step Simplification" (formula "49"))
                                 (rule "applyEqReverse" (formula "52") (term "1,0") (ifseqformula "49"))
                                 (rule "applyEqReverse" (formula "52") (term "0,0,0") (ifseqformula "49"))
                                 (rule "applyEqReverse" (formula "51") (term "0,0,1,0,0") (ifseqformula "49"))
                                 (rule "hideAuxiliaryEq" (formula "49"))
                                 (rule "replace_known_left" (formula "49") (term "0,0") (ifseqformula "9"))
                                  (builtin "One Step Simplification" (formula "49"))
                                 (rule "applyEqReverse" (formula "50") (term "2,0") (ifseqformula "49"))
                                 (rule "hideAuxiliaryEq" (formula "49"))
                                 (rule "replace_known_left" (formula "49") (term "0,1,0,0") (ifseqformula "9"))
                                  (builtin "One Step Simplification" (formula "49"))
                                 (rule "replace_known_left" (formula "50") (term "0,0") (ifseqformula "9"))
                                  (builtin "One Step Simplification" (formula "50"))
                                 (rule "applyEqReverse" (formula "51") (term "0,0,0") (ifseqformula "50"))
                                 (rule "hideAuxiliaryEq" (formula "50"))
                                 (rule "replace_known_left" (formula "50") (term "0,0") (ifseqformula "9"))
                                  (builtin "One Step Simplification" (formula "50"))
                                 (rule "applyEqReverse" (formula "51") (term "0,0") (ifseqformula "50"))
                                 (rule "hideAuxiliaryEq" (formula "50"))
                                 (rule "equality_comparison_simple" (formula "60") (term "1"))
                                  (builtin "One Step Simplification" (formula "60"))
                                 (rule "methodCallEmpty" (formula "60") (term "1"))
                                  (builtin "One Step Simplification" (formula "60"))
                                 (rule "emptyModality" (formula "60") (term "1"))
                                  (builtin "One Step Simplification" (formula "60"))
                                 (rule "Class_invariant_axiom_for_Test" (formula "5") (ifseqformula "3"))
                                 (rule "true_left" (formula "5"))
                                 (rule "ifthenelse_split" (formula "42") (term "0"))
                                 (branch "(self_1, List::$footprint) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> TRUE"
                                    (rule "applyEqReverse" (formula "44") (term "0") (ifseqformula "43"))
                                    (rule "hideAuxiliaryEq" (formula "43"))
                                    (rule "elementOfSubsetImpliesElementOfSuperset" (formula "42") (ifseqformula "35"))
                                     (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "56")))
                                    (rule "replaceKnownSelect_taclet0000000_18" (formula "42") (term "0,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet0000000_21" (formula "42") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "42"))
                                    (rule "true_left" (formula "42"))
                                    (rule "ifthenelse_split" (formula "40") (term "0"))
                                    (branch "(self_1, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> TRUE"
                                       (rule "elementOfSubsetImpliesElementOfSuperset" (formula "40") (ifseqformula "35"))
                                        (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "57")))
                                       (rule "replaceKnownSelect_taclet0000000_18" (formula "40") (term "0,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet0000000_21" (formula "40") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "40"))
                                       (rule "true_left" (formula "40"))
                                       (rule "ifthenelse_split" (formula "18") (term "0"))
                                       (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_ArrayList<<anonHeapFunction>> TRUE"
                                          (rule "applyEqReverse" (formula "28") (term "0,1") (ifseqformula "19"))
                                          (rule "applyEqReverse" (formula "20") (term "0") (ifseqformula "19"))
                                          (rule "applyEqReverse" (formula "25") (term "2,0,0") (ifseqformula "19"))
                                          (rule "applyEqReverse" (formula "23") (term "1,0") (ifseqformula "19"))
                                          (rule "applyEqReverse" (formula "27") (term "2,0,0") (ifseqformula "19"))
                                          (rule "applyEqReverse" (formula "27") (term "2,0") (ifseqformula "19"))
                                          (rule "hideAuxiliaryEq" (formula "19"))
                                          (rule "elementOfSubsetImpliesElementOfSuperset" (formula "18") (ifseqformula "11"))
                                           (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "59")) (ifInst ""  (formula "58")))
                                          (rule "true_left" (formula "18"))
                                          (rule "commuteUnion" (formula "27") (term "1"))
                                          (rule "ifthenelse_split" (formula "16") (term "0"))
                                          (branch "(self_0, List::$seq) in self_0.footprint@anon_heap_ArrayList<<anonHeapFunction>> TRUE"
                                             (rule "elementOfSubsetImpliesElementOfSuperset" (formula "16") (ifseqformula "11"))
                                              (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "60")) (ifInst ""  (formula "59")))
                                             (rule "true_left" (formula "16"))
                                             (rule "ifthenelse_split" (formula "50") (term "0"))
                                             (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> TRUE"
                                                (rule "applyEqReverse" (formula "52") (term "0,0") (ifseqformula "51"))
                                                (rule "hideAuxiliaryEq" (formula "51"))
                                                (rule "elementOfSubsetImpliesElementOfSuperset" (formula "50") (ifseqformula "36"))
                                                 (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "60")))
                                                (rule "replaceKnownSelect_taclet01000000000_31" (formula "50") (term "0,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet01000000000_32" (formula "50") (term "0,0"))
                                                (rule "notLeft" (formula "50"))
                                                (rule "close" (formula "53") (ifseqformula "8"))
                                             )
                                             (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> FALSE"
                                                (rule "applyEqReverse" (formula "51") (term "0,0") (ifseqformula "50"))
                                                (rule "hideAuxiliaryEq" (formula "50"))
                                                (rule "getOfSeqConcat" (formula "50") (term "0"))
                                                 (builtin "One Step Simplification" (formula "50"))
                                                (rule "castDel" (formula "50") (term "1,0"))
                                                (rule "less_literals" (formula "50") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "50"))
                                                (rule "eqSymm" (formula "50"))
                                                (rule "close" (formula "61") (ifseqformula "50"))
                                             )
                                          )
                                          (branch "(self_0, List::$seq) in self_0.footprint@anon_heap_ArrayList<<anonHeapFunction>> FALSE"
                                             (rule "eqSymm" (formula "16"))
                                             (rule "applyEqRigid" (formula "49") (term "0,2,0") (ifseqformula "16"))
                                              (builtin "One Step Simplification" (formula "49"))
                                             (rule "applyEq" (formula "25") (term "0,1") (ifseqformula "16"))
                                              (builtin "One Step Simplification" (formula "25"))
                                             (rule "applyEqRigid" (formula "24") (term "0,1") (ifseqformula "16"))
                                              (builtin "One Step Simplification" (formula "24"))
                                             (rule "applyEqRigid" (formula "17") (term "1") (ifseqformula "16"))
                                             (rule "applyEq" (formula "24") (term "2,0") (ifseqformula "16"))
                                             (rule "elementOfSubsetOfUnion2" (formula "24") (term "0,0") (ifseqformula "19") (ifseqformula "52"))
                                             (rule "elementOfIntersect" (formula "24") (term "1"))
                                              (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "60")))
                                             (rule "replaceKnownSelect_taclet0_4" (formula "24") (term "0,0,1,1"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet0_5" (formula "24") (term "0,0,1,1"))
                                             (rule "replace_known_left" (formula "24") (term "0,1,1") (ifseqformula "8"))
                                              (builtin "One Step Simplification" (formula "24"))
                                             (rule "notLeft" (formula "24"))
                                             (rule "replace_known_right" (formula "24") (term "0,0") (ifseqformula "52"))
                                              (builtin "One Step Simplification" (formula "24"))
                                             (rule "eqSymm" (formula "24"))
                                             (rule "applyEq" (formula "49") (term "2,0") (ifseqformula "24"))
                                             (rule "applyEqRigid" (formula "25") (term "1") (ifseqformula "24"))
                                             (rule "elementOfSubsetOfUnion2" (formula "52") (ifseqformula "19") (ifseqformula "53"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "53"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "notLeft" (formula "1"))
                                             (rule "elementOfIntersect" (formula "52"))
                                              (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "53")))
                                             (rule "false_right" (formula "52"))
                                             (rule "equalityToSeqGetAndSeqLenLeft" (formula "34") (inst "iv=iv"))
                                              (builtin "One Step Simplification" (formula "34"))
                                             (rule "andLeft" (formula "34"))
                                             (rule "inEqSimp_ltToLeq" (formula "35") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "35") (term "0,0,0"))
                                             (rule "applyEq" (formula "35") (term "0,0,1,0") (ifseqformula "36"))
                                              (builtin "One Step Simplification" (formula "35"))
                                             (rule "true_left" (formula "35"))
                                             (rule "applyEq" (formula "34") (term "0,0") (ifseqformula "35"))
                                              (builtin "One Step Simplification" (formula "34"))
                                             (rule "true_left" (formula "34"))
                                             (rule "equalityToSeqGetAndSeqLenLeft" (formula "42") (inst "iv=iv"))
                                              (builtin "One Step Simplification" (formula "42"))
                                             (rule "andLeft" (formula "42"))
                                             (rule "getOfSeqSingleton" (formula "43") (term "1,1,0"))
                                             (rule "castDel" (formula "43") (term "2,1,1,0"))
                                             (rule "castDel" (formula "43") (term "1,1,1,0"))
                                             (rule "eqSymm" (formula "43") (term "1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "43") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "43") (term "0,0,0"))
                                             (rule "applyEq" (formula "42") (term "0,0") (ifseqformula "44"))
                                              (builtin "One Step Simplification" (formula "42"))
                                             (rule "true_left" (formula "42"))
                                             (rule "applyEq" (formula "42") (term "0,0,1,0,0,1,0,0") (ifseqformula "43"))
                                              (builtin "One Step Simplification" (formula "42"))
                                             (rule "mul_literals" (formula "42") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "42") (term "0,0,1,0,0"))
                                             (rule "add_zero_left" (formula "42") (term "0,1,0,0"))
                                             (rule "applyEqRigid" (formula "42") (term "0,1,1,0") (ifseqformula "43"))
                                             (rule "getOfSeqSingleton" (formula "42") (term "1,1,0"))
                                             (rule "castDel" (formula "42") (term "1,1,1,0"))
                                             (rule "castDel" (formula "42") (term "2,1,1,0"))
                                              (builtin "One Step Simplification" (formula "42"))
                                             (rule "true_left" (formula "42"))
                                             (rule "equalityToSeqGetAndSeqLenLeft" (formula "10") (inst "iv=iv"))
                                              (builtin "One Step Simplification" (formula "10"))
                                             (rule "andLeft" (formula "10"))
                                             (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
                                             (rule "applyEq" (formula "11") (term "0,0,1,0,0,1,0,0") (ifseqformula "12"))
                                              (builtin "One Step Simplification" (formula "11"))
                                             (rule "mul_literals" (formula "11") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "11") (term "0,0,1,0,0"))
                                             (rule "applyEq" (formula "11") (term "0,0,1,0") (ifseqformula "12"))
                                              (builtin "One Step Simplification" (formula "11"))
                                             (rule "true_left" (formula "11"))
                                             (rule "ifthenelse_split" (formula "27") (term "0"))
                                             (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_add<<anonHeapFunction>> TRUE"
                                                (rule "applyEqReverse" (formula "29") (term "0") (ifseqformula "28"))
                                                (rule "hideAuxiliaryEq" (formula "28"))
                                                (rule "elementOfSubsetImpliesElementOfSuperset" (formula "27") (ifseqformula "20"))
                                                (rule "elementOfUnion" (formula "27"))
                                                 (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "19")))
                                                (rule "true_left" (formula "27"))
                                                (rule "ifthenelse_split" (formula "50") (term "0"))
                                                (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> TRUE"
                                                   (rule "applyEqReverse" (formula "52") (term "0,0") (ifseqformula "51"))
                                                   (rule "hideAuxiliaryEq" (formula "51"))
                                                   (rule "elementOfSubsetImpliesElementOfSuperset" (formula "50") (ifseqformula "36"))
                                                    (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "62")))
                                                   (rule "replaceKnownSelect_taclet01000000000_31" (formula "50") (term "0,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet01000000000_32" (formula "50") (term "0,0"))
                                                   (rule "notLeft" (formula "50"))
                                                   (rule "close" (formula "53") (ifseqformula "8"))
                                                )
                                                (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> FALSE"
                                                   (rule "applyEqReverse" (formula "51") (term "0,0") (ifseqformula "50"))
                                                   (rule "hideAuxiliaryEq" (formula "50"))
                                                   (rule "getOfSeqSingletonEQ" (formula "50") (term "0") (ifseqformula "25"))
                                                    (builtin "One Step Simplification" (formula "50"))
                                                   (rule "castDel" (formula "50") (term "0"))
                                                   (rule "eqSymm" (formula "50"))
                                                   (rule "applyEq" (formula "63") (term "0") (ifseqformula "50"))
                                                   (rule "equal_literals" (formula "63"))
                                                   (rule "false_right" (formula "63"))
                                                   (rule "equalityToSeqGetAndSeqLenLeft" (formula "42") (inst "iv=iv"))
                                                    (builtin "One Step Simplification" (formula "42"))
                                                   (rule "andLeft" (formula "42"))
                                                   (rule "getOfSeqSingleton" (formula "43") (term "1,1,0"))
                                                   (rule "castDel" (formula "43") (term "1,1,1,0"))
                                                   (rule "castDel" (formula "43") (term "2,1,1,0"))
                                                   (rule "eqSymm" (formula "43") (term "1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "43") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "43") (term "0,0,0"))
                                                   (rule "applyEq" (formula "42") (term "0,0") (ifseqformula "44"))
                                                    (builtin "One Step Simplification" (formula "42"))
                                                   (rule "true_left" (formula "42"))
                                                   (rule "applyEq" (formula "42") (term "0,1,1,0") (ifseqformula "43"))
                                                   (rule "getOfSeqSingleton" (formula "42") (term "1,1,0"))
                                                   (rule "castDel" (formula "42") (term "1,1,1,0"))
                                                   (rule "castDel" (formula "42") (term "2,1,1,0"))
                                                    (builtin "One Step Simplification" (formula "42"))
                                                   (rule "true_left" (formula "42"))
                                                   (rule "equalityToSeqGetAndSeqLenLeft" (formula "17") (inst "iv=iv"))
                                                    (builtin "One Step Simplification" (formula "17"))
                                                   (rule "equal_literals" (formula "17") (term "0"))
                                                    (builtin "One Step Simplification" (formula "17"))
                                                   (rule "closeFalse" (formula "17"))
                                                )
                                             )
                                             (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_add<<anonHeapFunction>> FALSE"
                                                (rule "applyEqReverse" (formula "28") (term "0") (ifseqformula "27"))
                                                 (builtin "One Step Simplification" (formula "28"))
                                                (rule "true_left" (formula "28"))
                                                (rule "hideAuxiliaryEq" (formula "27"))
                                                (rule "ifthenelse_split" (formula "48") (term "0"))
                                                (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> TRUE"
                                                   (rule "applyEqReverse" (formula "50") (term "0,0") (ifseqformula "49"))
                                                   (rule "hideAuxiliaryEq" (formula "49"))
                                                   (rule "elementOfSubsetImpliesElementOfSuperset" (formula "48") (ifseqformula "34"))
                                                    (builtin "One Step Simplification" (formula "48") (ifInst ""  (formula "61")))
                                                   (rule "replaceKnownSelect_taclet01000000000_31" (formula "48") (term "0,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet01000000000_32" (formula "48") (term "0,0"))
                                                   (rule "notLeft" (formula "48"))
                                                   (rule "close" (formula "51") (ifseqformula "8"))
                                                )
                                                (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> FALSE"
                                                   (rule "applyEqReverse" (formula "49") (term "0,0") (ifseqformula "48"))
                                                   (rule "hideAuxiliaryEq" (formula "48"))
                                                   (rule "getOfSeqSingletonEQ" (formula "48") (term "0") (ifseqformula "17"))
                                                    (builtin "One Step Simplification" (formula "48"))
                                                   (rule "castDel" (formula "48") (term "0"))
                                                   (rule "eqSymm" (formula "48"))
                                                   (rule "close" (formula "62") (ifseqformula "48"))
                                                )
                                             )
                                          )
                                       )
                                       (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_ArrayList<<anonHeapFunction>> FALSE"
                                          (rule "applyEqReverse" (formula "26") (term "2,0,0") (ifseqformula "18"))
                                          (rule "applyEqReverse" (formula "27") (term "0,1") (ifseqformula "18"))
                                          (rule "applyEqReverse" (formula "24") (term "2,0,0") (ifseqformula "18"))
                                          (rule "applyEqReverse" (formula "22") (term "1,0") (ifseqformula "18"))
                                          (rule "applyEqReverse" (formula "19") (term "0") (ifseqformula "18"))
                                           (builtin "One Step Simplification" (formula "19"))
                                          (rule "true_left" (formula "19"))
                                          (rule "applyEqReverse" (formula "25") (term "2,0") (ifseqformula "18"))
                                          (rule "hideAuxiliaryEq" (formula "18"))
                                          (rule "replace_known_right" (formula "24") (term "0,0") (ifseqformula "50"))
                                           (builtin "One Step Simplification" (formula "24"))
                                          (rule "applyEqReverse" (formula "25") (term "0") (ifseqformula "24"))
                                           (builtin "One Step Simplification" (formula "25"))
                                          (rule "true_left" (formula "25"))
                                          (rule "hideAuxiliaryEq" (formula "24"))
                                          (rule "ifthenelse_split" (formula "16") (term "0"))
                                          (branch "(self_0, List::$seq) in self_0.footprint@anon_heap_ArrayList<<anonHeapFunction>> TRUE"
                                             (rule "replace_known_left" (formula "23") (term "0,0") (ifseqformula "16"))
                                              (builtin "One Step Simplification" (formula "23"))
                                             (rule "elementOfSubsetImpliesElementOfSuperset" (formula "16") (ifseqformula "11"))
                                              (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "57")) (ifInst ""  (formula "56")))
                                             (rule "true_left" (formula "16"))
                                             (rule "ifthenelse_split" (formula "46") (term "0"))
                                             (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> TRUE"
                                                (rule "applyEqReverse" (formula "48") (term "0,0") (ifseqformula "47"))
                                                (rule "hideAuxiliaryEq" (formula "47"))
                                                (rule "elementOfSubsetImpliesElementOfSuperset" (formula "46") (ifseqformula "32"))
                                                 (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "57")))
                                                (rule "replaceKnownSelect_taclet01000000000_31" (formula "46") (term "0,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet01000000000_32" (formula "46") (term "0,0"))
                                                (rule "notLeft" (formula "46"))
                                                (rule "close" (formula "49") (ifseqformula "8"))
                                             )
                                             (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> FALSE"
                                                (rule "applyEqReverse" (formula "47") (term "0,0") (ifseqformula "46"))
                                                (rule "hideAuxiliaryEq" (formula "46"))
                                                (rule "getOfSeqConcat" (formula "46") (term "0"))
                                                 (builtin "One Step Simplification" (formula "46"))
                                                (rule "castDel" (formula "46") (term "1,0"))
                                                (rule "sub_literals" (formula "46") (term "1,2,0"))
                                                (rule "less_literals" (formula "46") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "46"))
                                                (rule "eqSymm" (formula "46"))
                                                (rule "close" (formula "58") (ifseqformula "46"))
                                             )
                                          )
                                          (branch "(self_0, List::$seq) in self_0.footprint@anon_heap_ArrayList<<anonHeapFunction>> FALSE"
                                             (rule "eqSymm" (formula "16"))
                                             (rule "replace_known_right" (formula "22") (term "0,0") (ifseqformula "48"))
                                              (builtin "One Step Simplification" (formula "22"))
                                             (rule "eqSymm" (formula "22"))
                                             (rule "applyEqRigid" (formula "22") (term "1") (ifseqformula "16"))
                                             (rule "applyEq" (formula "45") (term "0,2,0") (ifseqformula "16"))
                                              (builtin "One Step Simplification" (formula "45"))
                                             (rule "applyEq" (formula "23") (term "0,1") (ifseqformula "16"))
                                              (builtin "One Step Simplification" (formula "23"))
                                             (rule "applyEq" (formula "17") (term "1") (ifseqformula "16"))
                                             (rule "applyEq" (formula "22") (term "0,0") (ifseqformula "16"))
                                              (builtin "One Step Simplification" (formula "22"))
                                             (rule "applyEqRigid" (formula "45") (term "2,0") (ifseqformula "22"))
                                             (rule "applyEqRigid" (formula "23") (term "1") (ifseqformula "22"))
                                             (rule "equalityToSeqGetAndSeqLenLeft" (formula "30") (inst "iv=iv"))
                                              (builtin "One Step Simplification" (formula "30"))
                                             (rule "andLeft" (formula "30"))
                                             (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "31") (term "0,0,0"))
                                             (rule "applyEq" (formula "31") (term "0,0,1,0,0,1,0,0") (ifseqformula "32"))
                                              (builtin "One Step Simplification" (formula "31"))
                                             (rule "mul_literals" (formula "31") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "31") (term "0,0,1,0,0"))
                                             (rule "applyEq" (formula "30") (term "0,0") (ifseqformula "32"))
                                              (builtin "One Step Simplification" (formula "30"))
                                             (rule "true_left" (formula "30"))
                                             (rule "applyEq" (formula "30") (term "0,0,1,0") (ifseqformula "31"))
                                              (builtin "One Step Simplification" (formula "30"))
                                             (rule "true_left" (formula "30"))
                                             (rule "equalityToSeqGetAndSeqLenLeft" (formula "10") (inst "iv=iv"))
                                              (builtin "One Step Simplification" (formula "10"))
                                             (rule "andLeft" (formula "10"))
                                             (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
                                             (rule "applyEq" (formula "11") (term "0,0,1,0,0,1,0,0") (ifseqformula "12"))
                                              (builtin "One Step Simplification" (formula "11"))
                                             (rule "mul_literals" (formula "11") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "11") (term "0,0,1,0,0"))
                                             (rule "applyEq" (formula "11") (term "0,0,1,0") (ifseqformula "12"))
                                              (builtin "One Step Simplification" (formula "11"))
                                             (rule "true_left" (formula "11"))
                                             (rule "equalityToSeqGetAndSeqLenLeft" (formula "39") (inst "iv=iv"))
                                              (builtin "One Step Simplification" (formula "39"))
                                             (rule "andLeft" (formula "39"))
                                             (rule "getOfSeqSingleton" (formula "40") (term "1,1,0"))
                                             (rule "castDel" (formula "40") (term "2,1,1,0"))
                                             (rule "castDel" (formula "40") (term "1,1,1,0"))
                                             (rule "eqSymm" (formula "40") (term "1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "40") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "40") (term "0,0,0"))
                                             (rule "applyEq" (formula "40") (term "0,1,1,0") (ifseqformula "41"))
                                             (rule "getOfSeqSingleton" (formula "40") (term "1,1,0"))
                                             (rule "castDel" (formula "40") (term "1,1,1,0"))
                                             (rule "castDel" (formula "40") (term "2,1,1,0"))
                                              (builtin "One Step Simplification" (formula "40"))
                                             (rule "true_left" (formula "40"))
                                             (rule "applyEqRigid" (formula "39") (term "0,0") (ifseqformula "40"))
                                              (builtin "One Step Simplification" (formula "39"))
                                             (rule "true_left" (formula "39"))
                                             (rule "ifthenelse_split" (formula "46") (term "0"))
                                             (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> TRUE"
                                                (rule "applyEqReverse" (formula "48") (term "0,0") (ifseqformula "47"))
                                                (rule "hideAuxiliaryEq" (formula "47"))
                                                (rule "elementOfSubsetImpliesElementOfSuperset" (formula "46") (ifseqformula "32"))
                                                 (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "58")))
                                                (rule "replaceKnownSelect_taclet01000000000_31" (formula "46") (term "0,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet01000000000_32" (formula "46") (term "0,0"))
                                                (rule "notLeft" (formula "46"))
                                                (rule "close" (formula "49") (ifseqformula "8"))
                                             )
                                             (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> FALSE"
                                                (rule "applyEqReverse" (formula "47") (term "0,0") (ifseqformula "46"))
                                                (rule "hideAuxiliaryEq" (formula "46"))
                                                (rule "getOfSeqSingletonEQ" (formula "46") (term "0") (ifseqformula "17"))
                                                 (builtin "One Step Simplification" (formula "46"))
                                                (rule "castDel" (formula "46") (term "0"))
                                                (rule "eqSymm" (formula "46"))
                                                (rule "close" (formula "59") (ifseqformula "46"))
                                             )
                                          )
                                       )
                                    )
                                    (branch "(self_1, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> FALSE"
                                       (rule "eqSymm" (formula "40"))
                                       (rule "applyEqRigid" (formula "41") (term "1") (ifseqformula "40"))
                                       (rule "ifthenelse_split" (formula "18") (term "0"))
                                       (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_ArrayList<<anonHeapFunction>> TRUE"
                                          (rule "applyEqReverse" (formula "27") (term "2,0") (ifseqformula "19"))
                                          (rule "applyEqReverse" (formula "28") (term "0,1") (ifseqformula "19"))
                                          (rule "applyEqReverse" (formula "20") (term "0") (ifseqformula "19"))
                                          (rule "applyEqReverse" (formula "23") (term "1,0") (ifseqformula "19"))
                                          (rule "applyEqReverse" (formula "25") (term "2,0,0") (ifseqformula "19"))
                                          (rule "applyEqReverse" (formula "27") (term "2,0,0") (ifseqformula "19"))
                                          (rule "hideAuxiliaryEq" (formula "19"))
                                          (rule "elementOfSubsetImpliesElementOfSuperset" (formula "18") (ifseqformula "11"))
                                           (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "59")) (ifInst ""  (formula "58")))
                                          (rule "true_left" (formula "18"))
                                          (rule "commuteUnion" (formula "27") (term "1"))
                                          (rule "ifthenelse_split" (formula "16") (term "0"))
                                          (branch "(self_0, List::$seq) in self_0.footprint@anon_heap_ArrayList<<anonHeapFunction>> TRUE"
                                             (rule "elementOfSubsetImpliesElementOfSuperset" (formula "16") (ifseqformula "11"))
                                              (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "60")) (ifInst ""  (formula "59")))
                                             (rule "true_left" (formula "16"))
                                             (rule "ifthenelse_split" (formula "49") (term "0"))
                                             (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> TRUE"
                                                (rule "applyEqReverse" (formula "51") (term "0,0") (ifseqformula "50"))
                                                (rule "hideAuxiliaryEq" (formula "50"))
                                                (rule "elementOfSubsetImpliesElementOfSuperset" (formula "49") (ifseqformula "36"))
                                                 (builtin "One Step Simplification" (formula "49") (ifInst ""  (formula "60")))
                                                (rule "replaceKnownSelect_taclet01000000000_31" (formula "49") (term "0,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet01000000000_32" (formula "49") (term "0,0"))
                                                (rule "notLeft" (formula "49"))
                                                (rule "close" (formula "52") (ifseqformula "8"))
                                             )
                                             (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> FALSE"
                                                (rule "applyEqReverse" (formula "50") (term "0,0") (ifseqformula "49"))
                                                (rule "hideAuxiliaryEq" (formula "49"))
                                                (rule "getOfSeqConcat" (formula "49") (term "0"))
                                                 (builtin "One Step Simplification" (formula "49"))
                                                (rule "castDel" (formula "49") (term "1,0"))
                                                (rule "sub_literals" (formula "49") (term "1,2,0"))
                                                (rule "less_literals" (formula "49") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "49"))
                                                (rule "eqSymm" (formula "49"))
                                                (rule "close" (formula "61") (ifseqformula "49"))
                                             )
                                          )
                                          (branch "(self_0, List::$seq) in self_0.footprint@anon_heap_ArrayList<<anonHeapFunction>> FALSE"
                                             (rule "eqSymm" (formula "16"))
                                             (rule "applyEqRigid" (formula "48") (term "0,2,0") (ifseqformula "16"))
                                              (builtin "One Step Simplification" (formula "48"))
                                             (rule "applyEqRigid" (formula "24") (term "0,1") (ifseqformula "16"))
                                              (builtin "One Step Simplification" (formula "24"))
                                             (rule "applyEqRigid" (formula "25") (term "0,1") (ifseqformula "16"))
                                              (builtin "One Step Simplification" (formula "25"))
                                             (rule "applyEq" (formula "17") (term "1") (ifseqformula "16"))
                                             (rule "applyEqRigid" (formula "24") (term "2,0") (ifseqformula "16"))
                                             (rule "elementOfSubsetOfUnion2" (formula "24") (term "0,0") (ifseqformula "19") (ifseqformula "51"))
                                             (rule "elementOfIntersect" (formula "24") (term "1"))
                                              (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "60")))
                                             (rule "replaceKnownSelect_taclet0_4" (formula "24") (term "0,0,1,1"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet0_5" (formula "24") (term "0,0,1,1"))
                                             (rule "replace_known_left" (formula "24") (term "0,1,1") (ifseqformula "8"))
                                              (builtin "One Step Simplification" (formula "24"))
                                             (rule "notLeft" (formula "24"))
                                             (rule "replace_known_right" (formula "24") (term "0,0") (ifseqformula "51"))
                                              (builtin "One Step Simplification" (formula "24"))
                                             (rule "eqSymm" (formula "24"))
                                             (rule "applyEq" (formula "25") (term "1") (ifseqformula "24"))
                                             (rule "applyEq" (formula "48") (term "2,0") (ifseqformula "24"))
                                             (rule "elementOfSubsetOfUnion2" (formula "51") (ifseqformula "19") (ifseqformula "52"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "52"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "notLeft" (formula "1"))
                                             (rule "elementOfIntersect" (formula "51"))
                                              (builtin "One Step Simplification" (formula "51") (ifInst ""  (formula "52")))
                                             (rule "false_right" (formula "51"))
                                             (rule "equalityToSeqGetAndSeqLenLeft" (formula "34") (inst "iv=iv"))
                                              (builtin "One Step Simplification" (formula "34"))
                                             (rule "andLeft" (formula "34"))
                                             (rule "inEqSimp_ltToLeq" (formula "35") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "35") (term "0,0,0"))
                                             (rule "applyEq" (formula "34") (term "0,0") (ifseqformula "36"))
                                              (builtin "One Step Simplification" (formula "34"))
                                             (rule "true_left" (formula "34"))
                                             (rule "applyEq" (formula "34") (term "0,0,1,0") (ifseqformula "35"))
                                              (builtin "One Step Simplification" (formula "34"))
                                             (rule "true_left" (formula "34"))
                                             (rule "equalityToSeqGetAndSeqLenLeft" (formula "10") (inst "iv=iv"))
                                              (builtin "One Step Simplification" (formula "10"))
                                             (rule "andLeft" (formula "10"))
                                             (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
                                             (rule "applyEq" (formula "11") (term "0,0,1,0") (ifseqformula "12"))
                                              (builtin "One Step Simplification" (formula "11"))
                                             (rule "true_left" (formula "11"))
                                             (rule "ifthenelse_split" (formula "27") (term "0"))
                                             (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_add<<anonHeapFunction>> TRUE"
                                                (rule "applyEqReverse" (formula "29") (term "0") (ifseqformula "28"))
                                                (rule "hideAuxiliaryEq" (formula "28"))
                                                (rule "elementOfSubsetImpliesElementOfSuperset" (formula "27") (ifseqformula "20"))
                                                (rule "elementOfUnion" (formula "27"))
                                                 (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "19")))
                                                (rule "true_left" (formula "27"))
                                                (rule "ifthenelse_split" (formula "49") (term "0"))
                                                (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> TRUE"
                                                   (rule "applyEqReverse" (formula "51") (term "0,0") (ifseqformula "50"))
                                                   (rule "hideAuxiliaryEq" (formula "50"))
                                                   (rule "elementOfSubsetImpliesElementOfSuperset" (formula "49") (ifseqformula "36"))
                                                    (builtin "One Step Simplification" (formula "49") (ifInst ""  (formula "62")))
                                                   (rule "replaceKnownSelect_taclet01000000000_31" (formula "49") (term "0,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet01000000000_32" (formula "49") (term "0,0"))
                                                   (rule "notLeft" (formula "49"))
                                                   (rule "close" (formula "52") (ifseqformula "8"))
                                                )
                                                (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> FALSE"
                                                   (rule "applyEqReverse" (formula "50") (term "0,0") (ifseqformula "49"))
                                                   (rule "hideAuxiliaryEq" (formula "49"))
                                                   (rule "getOfSeqSingletonEQ" (formula "49") (term "0") (ifseqformula "25"))
                                                    (builtin "One Step Simplification" (formula "49"))
                                                   (rule "castDel" (formula "49") (term "0"))
                                                   (rule "eqSymm" (formula "49"))
                                                   (rule "applyEq" (formula "63") (term "0") (ifseqformula "49"))
                                                   (rule "equal_literals" (formula "63"))
                                                   (rule "false_right" (formula "63"))
                                                   (rule "equalityToSeqGetAndSeqLenLeft" (formula "41") (inst "iv=iv"))
                                                    (builtin "One Step Simplification" (formula "41"))
                                                   (rule "equal_literals" (formula "41") (term "0"))
                                                    (builtin "One Step Simplification" (formula "41"))
                                                   (rule "closeFalse" (formula "41"))
                                                )
                                             )
                                             (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_add<<anonHeapFunction>> FALSE"
                                                (rule "applyEqReverse" (formula "28") (term "0") (ifseqformula "27"))
                                                 (builtin "One Step Simplification" (formula "28"))
                                                (rule "true_left" (formula "28"))
                                                (rule "hideAuxiliaryEq" (formula "27"))
                                                (rule "ifthenelse_split" (formula "47") (term "0"))
                                                (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> TRUE"
                                                   (rule "applyEqReverse" (formula "49") (term "0,0") (ifseqformula "48"))
                                                   (rule "hideAuxiliaryEq" (formula "48"))
                                                   (rule "elementOfSubsetImpliesElementOfSuperset" (formula "47") (ifseqformula "34"))
                                                    (builtin "One Step Simplification" (formula "47") (ifInst ""  (formula "61")))
                                                   (rule "replaceKnownSelect_taclet01000000000_31" (formula "47") (term "0,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet01000000000_32" (formula "47") (term "0,0"))
                                                   (rule "notLeft" (formula "47"))
                                                   (rule "close" (formula "50") (ifseqformula "8"))
                                                )
                                                (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> FALSE"
                                                   (rule "applyEqReverse" (formula "48") (term "0,0") (ifseqformula "47"))
                                                   (rule "hideAuxiliaryEq" (formula "47"))
                                                   (rule "getOfSeqSingletonEQ" (formula "47") (term "0") (ifseqformula "25"))
                                                    (builtin "One Step Simplification" (formula "47"))
                                                   (rule "castDel" (formula "47") (term "0"))
                                                   (rule "eqSymm" (formula "47"))
                                                   (rule "applyEq" (formula "62") (term "0") (ifseqformula "47"))
                                                   (rule "equal_literals" (formula "62"))
                                                   (rule "false_right" (formula "62"))
                                                   (rule "equalityToSeqGetAndSeqLenLeft" (formula "39") (inst "iv=iv"))
                                                    (builtin "One Step Simplification" (formula "39"))
                                                   (rule "equal_literals" (formula "39") (term "0"))
                                                    (builtin "One Step Simplification" (formula "39"))
                                                   (rule "closeFalse" (formula "39"))
                                                )
                                             )
                                          )
                                       )
                                       (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_ArrayList<<anonHeapFunction>> FALSE"
                                          (rule "applyEqReverse" (formula "26") (term "2,0,0") (ifseqformula "18"))
                                          (rule "applyEqReverse" (formula "27") (term "0,1") (ifseqformula "18"))
                                          (rule "applyEqReverse" (formula "22") (term "1,0") (ifseqformula "18"))
                                          (rule "applyEqReverse" (formula "19") (term "0") (ifseqformula "18"))
                                           (builtin "One Step Simplification" (formula "19"))
                                          (rule "true_left" (formula "19"))
                                          (rule "applyEqReverse" (formula "25") (term "2,0") (ifseqformula "18"))
                                          (rule "applyEqReverse" (formula "23") (term "2,0,0") (ifseqformula "18"))
                                          (rule "hideAuxiliaryEq" (formula "18"))
                                          (rule "replace_known_right" (formula "24") (term "0,0") (ifseqformula "49"))
                                           (builtin "One Step Simplification" (formula "24"))
                                          (rule "applyEqReverse" (formula "25") (term "0") (ifseqformula "24"))
                                           (builtin "One Step Simplification" (formula "25"))
                                          (rule "true_left" (formula "25"))
                                          (rule "hideAuxiliaryEq" (formula "24"))
                                          (rule "ifthenelse_split" (formula "16") (term "0"))
                                          (branch "(self_0, List::$seq) in self_0.footprint@anon_heap_ArrayList<<anonHeapFunction>> TRUE"
                                             (rule "replace_known_left" (formula "23") (term "0,0") (ifseqformula "16"))
                                              (builtin "One Step Simplification" (formula "23"))
                                             (rule "elementOfSubsetImpliesElementOfSuperset" (formula "16") (ifseqformula "11"))
                                              (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "57")) (ifInst ""  (formula "56")))
                                             (rule "true_left" (formula "16"))
                                             (rule "ifthenelse_split" (formula "45") (term "0"))
                                             (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> TRUE"
                                                (rule "applyEqReverse" (formula "47") (term "0,0") (ifseqformula "46"))
                                                (rule "hideAuxiliaryEq" (formula "46"))
                                                (rule "elementOfSubsetImpliesElementOfSuperset" (formula "45") (ifseqformula "32"))
                                                 (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "57")))
                                                (rule "replaceKnownSelect_taclet01000000000_31" (formula "45") (term "0,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet01000000000_32" (formula "45") (term "0,0"))
                                                (rule "notLeft" (formula "45"))
                                                (rule "close" (formula "48") (ifseqformula "8"))
                                             )
                                             (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> FALSE"
                                                (rule "applyEqReverse" (formula "46") (term "0,0") (ifseqformula "45"))
                                                (rule "hideAuxiliaryEq" (formula "45"))
                                                (rule "getOfSeqConcat" (formula "45") (term "0"))
                                                 (builtin "One Step Simplification" (formula "45"))
                                                (rule "castDel" (formula "45") (term "1,0"))
                                                (rule "sub_literals" (formula "45") (term "1,2,0"))
                                                (rule "less_literals" (formula "45") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "45"))
                                                (rule "eqSymm" (formula "45"))
                                                (rule "close" (formula "58") (ifseqformula "45"))
                                             )
                                          )
                                          (branch "(self_0, List::$seq) in self_0.footprint@anon_heap_ArrayList<<anonHeapFunction>> FALSE"
                                             (rule "eqSymm" (formula "16"))
                                             (rule "replace_known_right" (formula "22") (term "0,0") (ifseqformula "47"))
                                              (builtin "One Step Simplification" (formula "22"))
                                             (rule "eqSymm" (formula "22"))
                                             (rule "applyEqRigid" (formula "22") (term "1") (ifseqformula "16"))
                                             (rule "applyEqRigid" (formula "22") (term "0,0") (ifseqformula "16"))
                                              (builtin "One Step Simplification" (formula "22"))
                                             (rule "applyEq" (formula "44") (term "0,2,0") (ifseqformula "16"))
                                              (builtin "One Step Simplification" (formula "44"))
                                             (rule "applyEq" (formula "17") (term "1") (ifseqformula "16"))
                                             (rule "applyEqRigid" (formula "23") (term "0,1") (ifseqformula "16"))
                                              (builtin "One Step Simplification" (formula "23"))
                                             (rule "applyEq" (formula "23") (term "1") (ifseqformula "22"))
                                             (rule "applyEq" (formula "44") (term "2,0") (ifseqformula "22"))
                                             (rule "equalityToSeqGetAndSeqLenLeft" (formula "30") (inst "iv=iv"))
                                              (builtin "One Step Simplification" (formula "30"))
                                             (rule "andLeft" (formula "30"))
                                             (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "31") (term "0,0,0"))
                                             (rule "applyEq" (formula "31") (term "0,0,1,0") (ifseqformula "32"))
                                              (builtin "One Step Simplification" (formula "31"))
                                             (rule "true_left" (formula "31"))
                                             (rule "applyEq" (formula "30") (term "0,0") (ifseqformula "31"))
                                              (builtin "One Step Simplification" (formula "30"))
                                             (rule "true_left" (formula "30"))
                                             (rule "equalityToSeqGetAndSeqLenLeft" (formula "10") (inst "iv=iv"))
                                              (builtin "One Step Simplification" (formula "10"))
                                             (rule "andLeft" (formula "10"))
                                             (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
                                             (rule "applyEq" (formula "11") (term "0,0,1,0") (ifseqformula "12"))
                                              (builtin "One Step Simplification" (formula "11"))
                                             (rule "true_left" (formula "11"))
                                             (rule "ifthenelse_split" (formula "45") (term "0"))
                                             (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> TRUE"
                                                (rule "applyEqReverse" (formula "47") (term "0,0") (ifseqformula "46"))
                                                (rule "hideAuxiliaryEq" (formula "46"))
                                                (rule "elementOfSubsetImpliesElementOfSuperset" (formula "45") (ifseqformula "32"))
                                                 (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "58")))
                                                (rule "replaceKnownSelect_taclet01000000000_31" (formula "45") (term "0,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet01000000000_32" (formula "45") (term "0,0"))
                                                (rule "notLeft" (formula "45"))
                                                (rule "close" (formula "48") (ifseqformula "8"))
                                             )
                                             (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> FALSE"
                                                (rule "applyEqReverse" (formula "46") (term "0,0") (ifseqformula "45"))
                                                (rule "hideAuxiliaryEq" (formula "45"))
                                                (rule "getOfSeqSingletonEQ" (formula "45") (term "0") (ifseqformula "23"))
                                                 (builtin "One Step Simplification" (formula "45"))
                                                (rule "castDel" (formula "45") (term "0"))
                                                (rule "eqSymm" (formula "45"))
                                                (rule "applyEq" (formula "59") (term "0") (ifseqformula "45"))
                                                (rule "equal_literals" (formula "59"))
                                                (rule "false_right" (formula "59"))
                                                (rule "equalityToSeqGetAndSeqLenLeft" (formula "37") (inst "iv=iv"))
                                                 (builtin "One Step Simplification" (formula "37"))
                                                (rule "equal_literals" (formula "37") (term "0"))
                                                 (builtin "One Step Simplification" (formula "37"))
                                                (rule "closeFalse" (formula "37"))
                                             )
                                          )
                                       )
                                    )
                                 )
                                 (branch "(self_1, List::$footprint) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> FALSE"
                                    (rule "applyEqReverse" (formula "43") (term "0") (ifseqformula "42"))
                                     (builtin "One Step Simplification" (formula "43"))
                                    (rule "true_left" (formula "43"))
                                    (rule "hideAuxiliaryEq" (formula "42"))
                                    (rule "ifthenelse_split" (formula "40") (term "0"))
                                    (branch "(self_1, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> TRUE"
                                       (rule "elementOfSubsetImpliesElementOfSuperset" (formula "40") (ifseqformula "35"))
                                        (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "56")))
                                       (rule "replaceKnownSelect_taclet0000000_18" (formula "40") (term "0,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet0000000_21" (formula "40") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "40"))
                                       (rule "true_left" (formula "40"))
                                       (rule "ifthenelse_split" (formula "18") (term "0"))
                                       (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_ArrayList<<anonHeapFunction>> TRUE"
                                          (rule "applyEqReverse" (formula "23") (term "1,0") (ifseqformula "19"))
                                          (rule "applyEqReverse" (formula "20") (term "0") (ifseqformula "19"))
                                          (rule "applyEqReverse" (formula "27") (term "2,0") (ifseqformula "19"))
                                          (rule "applyEqReverse" (formula "25") (term "2,0,0") (ifseqformula "19"))
                                          (rule "applyEqReverse" (formula "28") (term "0,1") (ifseqformula "19"))
                                          (rule "applyEqReverse" (formula "27") (term "2,0,0") (ifseqformula "19"))
                                          (rule "hideAuxiliaryEq" (formula "19"))
                                          (rule "elementOfSubsetImpliesElementOfSuperset" (formula "18") (ifseqformula "11"))
                                           (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "58")) (ifInst ""  (formula "57")))
                                          (rule "true_left" (formula "18"))
                                          (rule "commuteUnion" (formula "27") (term "1"))
                                          (rule "ifthenelse_split" (formula "16") (term "0"))
                                          (branch "(self_0, List::$seq) in self_0.footprint@anon_heap_ArrayList<<anonHeapFunction>> TRUE"
                                             (rule "elementOfSubsetImpliesElementOfSuperset" (formula "16") (ifseqformula "11"))
                                              (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "59")) (ifInst ""  (formula "58")))
                                             (rule "true_left" (formula "16"))
                                             (rule "ifthenelse_split" (formula "48") (term "0"))
                                             (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> TRUE"
                                                (rule "applyEqReverse" (formula "50") (term "0,0") (ifseqformula "49"))
                                                (rule "hideAuxiliaryEq" (formula "49"))
                                                (rule "elementOfSubsetImpliesElementOfSuperset" (formula "48") (ifseqformula "36"))
                                                 (builtin "One Step Simplification" (formula "48") (ifInst ""  (formula "59")))
                                                (rule "replaceKnownSelect_taclet01000000000_31" (formula "48") (term "0,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet01000000000_32" (formula "48") (term "0,0"))
                                                (rule "notLeft" (formula "48"))
                                                (rule "close" (formula "51") (ifseqformula "8"))
                                             )
                                             (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> FALSE"
                                                (rule "applyEqReverse" (formula "49") (term "0,0") (ifseqformula "48"))
                                                (rule "hideAuxiliaryEq" (formula "48"))
                                                (rule "getOfSeqConcat" (formula "48") (term "0"))
                                                 (builtin "One Step Simplification" (formula "48"))
                                                (rule "castDel" (formula "48") (term "1,0"))
                                                (rule "less_literals" (formula "48") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "48"))
                                                (rule "eqSymm" (formula "48"))
                                                (rule "close" (formula "60") (ifseqformula "48"))
                                             )
                                          )
                                          (branch "(self_0, List::$seq) in self_0.footprint@anon_heap_ArrayList<<anonHeapFunction>> FALSE"
                                             (rule "eqSymm" (formula "16"))
                                             (rule "applyEq" (formula "25") (term "0,1") (ifseqformula "16"))
                                              (builtin "One Step Simplification" (formula "25"))
                                             (rule "applyEq" (formula "24") (term "2,0") (ifseqformula "16"))
                                             (rule "applyEqRigid" (formula "17") (term "1") (ifseqformula "16"))
                                             (rule "applyEqRigid" (formula "24") (term "0,1") (ifseqformula "16"))
                                              (builtin "One Step Simplification" (formula "24"))
                                             (rule "applyEqRigid" (formula "47") (term "0,2,0") (ifseqformula "16"))
                                              (builtin "One Step Simplification" (formula "47"))
                                             (rule "elementOfSubsetOfUnion2" (formula "24") (term "0,0") (ifseqformula "19") (ifseqformula "50"))
                                             (rule "elementOfIntersect" (formula "24") (term "1"))
                                              (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "59")))
                                             (rule "replaceKnownSelect_taclet0_4" (formula "24") (term "0,0,1,1"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet0_5" (formula "24") (term "0,0,1,1"))
                                             (rule "replace_known_left" (formula "24") (term "0,1,1") (ifseqformula "8"))
                                              (builtin "One Step Simplification" (formula "24"))
                                             (rule "notLeft" (formula "24"))
                                             (rule "replace_known_right" (formula "24") (term "0,0") (ifseqformula "50"))
                                              (builtin "One Step Simplification" (formula "24"))
                                             (rule "eqSymm" (formula "24"))
                                             (rule "applyEq" (formula "25") (term "1") (ifseqformula "24"))
                                             (rule "applyEqRigid" (formula "47") (term "2,0") (ifseqformula "24"))
                                             (rule "elementOfSubsetOfUnion2" (formula "50") (ifseqformula "19") (ifseqformula "51"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "51"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "notLeft" (formula "1"))
                                             (rule "elementOfIntersect" (formula "50"))
                                              (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "51")))
                                             (rule "false_right" (formula "50"))
                                             (rule "equalityToSeqGetAndSeqLenLeft" (formula "42") (inst "iv=iv"))
                                              (builtin "One Step Simplification" (formula "42"))
                                             (rule "andLeft" (formula "42"))
                                             (rule "getOfSeqSingleton" (formula "43") (term "1,1,0"))
                                             (rule "castDel" (formula "43") (term "2,1,1,0"))
                                             (rule "castDel" (formula "43") (term "1,1,1,0"))
                                             (rule "eqSymm" (formula "43") (term "1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "43") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "43") (term "0,0,0"))
                                             (rule "applyEq" (formula "43") (term "0,0,1,0,0,1,0,0") (ifseqformula "44"))
                                              (builtin "One Step Simplification" (formula "43"))
                                             (rule "mul_literals" (formula "43") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "43") (term "0,0,1,0,0"))
                                             (rule "add_zero_left" (formula "43") (term "0,1,0,0"))
                                             (rule "applyEq" (formula "42") (term "0,0") (ifseqformula "44"))
                                              (builtin "One Step Simplification" (formula "42"))
                                             (rule "true_left" (formula "42"))
                                             (rule "applyEqRigid" (formula "42") (term "0,1,1,0") (ifseqformula "43"))
                                             (rule "getOfSeqSingleton" (formula "42") (term "1,1,0"))
                                             (rule "castDel" (formula "42") (term "2,1,1,0"))
                                             (rule "castDel" (formula "42") (term "1,1,1,0"))
                                              (builtin "One Step Simplification" (formula "42"))
                                             (rule "true_left" (formula "42"))
                                             (rule "equalityToSeqGetAndSeqLenLeft" (formula "10") (inst "iv=iv"))
                                              (builtin "One Step Simplification" (formula "10"))
                                             (rule "andLeft" (formula "10"))
                                             (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
                                             (rule "applyEq" (formula "11") (term "0,0,1,0") (ifseqformula "12"))
                                              (builtin "One Step Simplification" (formula "11"))
                                             (rule "true_left" (formula "11"))
                                             (rule "equalityToSeqGetAndSeqLenLeft" (formula "35") (inst "iv=iv"))
                                              (builtin "One Step Simplification" (formula "35"))
                                             (rule "andLeft" (formula "35"))
                                             (rule "inEqSimp_ltToLeq" (formula "36") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "36") (term "0,0,0"))
                                             (rule "applyEq" (formula "35") (term "0,0") (ifseqformula "37"))
                                              (builtin "One Step Simplification" (formula "35"))
                                             (rule "true_left" (formula "35"))
                                             (rule "applyEq" (formula "35") (term "0,0,1,0") (ifseqformula "36"))
                                              (builtin "One Step Simplification" (formula "35"))
                                             (rule "true_left" (formula "35"))
                                             (rule "ifthenelse_split" (formula "27") (term "0"))
                                             (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_add<<anonHeapFunction>> TRUE"
                                                (rule "applyEqReverse" (formula "29") (term "0") (ifseqformula "28"))
                                                (rule "hideAuxiliaryEq" (formula "28"))
                                                (rule "elementOfSubsetImpliesElementOfSuperset" (formula "27") (ifseqformula "20"))
                                                (rule "elementOfUnion" (formula "27"))
                                                 (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "19")))
                                                (rule "true_left" (formula "27"))
                                                (rule "ifthenelse_split" (formula "48") (term "0"))
                                                (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> TRUE"
                                                   (rule "applyEqReverse" (formula "50") (term "0,0") (ifseqformula "49"))
                                                   (rule "hideAuxiliaryEq" (formula "49"))
                                                   (rule "elementOfSubsetImpliesElementOfSuperset" (formula "48") (ifseqformula "36"))
                                                    (builtin "One Step Simplification" (formula "48") (ifInst ""  (formula "61")))
                                                   (rule "replaceKnownSelect_taclet01000000000_31" (formula "48") (term "0,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet01000000000_32" (formula "48") (term "0,0"))
                                                   (rule "notLeft" (formula "48"))
                                                   (rule "close" (formula "51") (ifseqformula "8"))
                                                )
                                                (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> FALSE"
                                                   (rule "applyEqReverse" (formula "49") (term "0,0") (ifseqformula "48"))
                                                   (rule "hideAuxiliaryEq" (formula "48"))
                                                   (rule "getOfSeqSingletonEQ" (formula "48") (term "0") (ifseqformula "17"))
                                                    (builtin "One Step Simplification" (formula "48"))
                                                   (rule "castDel" (formula "48") (term "0"))
                                                   (rule "eqSymm" (formula "48"))
                                                   (rule "close" (formula "62") (ifseqformula "48"))
                                                )
                                             )
                                             (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_add<<anonHeapFunction>> FALSE"
                                                (rule "applyEqReverse" (formula "28") (term "0") (ifseqformula "27"))
                                                 (builtin "One Step Simplification" (formula "28"))
                                                (rule "true_left" (formula "28"))
                                                (rule "hideAuxiliaryEq" (formula "27"))
                                                (rule "ifthenelse_split" (formula "46") (term "0"))
                                                (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> TRUE"
                                                   (rule "applyEqReverse" (formula "48") (term "0,0") (ifseqformula "47"))
                                                   (rule "hideAuxiliaryEq" (formula "47"))
                                                   (rule "elementOfSubsetImpliesElementOfSuperset" (formula "46") (ifseqformula "34"))
                                                    (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "60")))
                                                   (rule "replaceKnownSelect_taclet01000000000_31" (formula "46") (term "0,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet01000000000_32" (formula "46") (term "0,0"))
                                                   (rule "notLeft" (formula "46"))
                                                   (rule "close" (formula "49") (ifseqformula "8"))
                                                )
                                                (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> FALSE"
                                                   (rule "applyEqReverse" (formula "47") (term "0,0") (ifseqformula "46"))
                                                   (rule "hideAuxiliaryEq" (formula "46"))
                                                   (rule "getOfSeqSingletonEQ" (formula "46") (term "0") (ifseqformula "25"))
                                                    (builtin "One Step Simplification" (formula "46"))
                                                   (rule "castDel" (formula "46") (term "0"))
                                                   (rule "eqSymm" (formula "46"))
                                                   (rule "applyEq" (formula "61") (term "0") (ifseqformula "46"))
                                                   (rule "equal_literals" (formula "61"))
                                                   (rule "false_right" (formula "61"))
                                                   (rule "equalityToSeqGetAndSeqLenLeft" (formula "40") (inst "iv=iv"))
                                                    (builtin "One Step Simplification" (formula "40"))
                                                   (rule "andLeft" (formula "40"))
                                                   (rule "getOfSeqSingleton" (formula "41") (term "1,1,0"))
                                                   (rule "castDel" (formula "41") (term "2,1,1,0"))
                                                   (rule "castDel" (formula "41") (term "1,1,1,0"))
                                                   (rule "eqSymm" (formula "41") (term "1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "41") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "41") (term "0,0,0"))
                                                   (rule "applyEq" (formula "41") (term "0,0,1,0,0,1,0,0") (ifseqformula "42"))
                                                    (builtin "One Step Simplification" (formula "41"))
                                                   (rule "mul_literals" (formula "41") (term "1,0,0,1,0,0"))
                                                   (rule "add_literals" (formula "41") (term "0,0,1,0,0"))
                                                   (rule "add_zero_left" (formula "41") (term "0,1,0,0"))
                                                   (rule "applyEq" (formula "40") (term "0,0") (ifseqformula "42"))
                                                    (builtin "One Step Simplification" (formula "40"))
                                                   (rule "true_left" (formula "40"))
                                                   (rule "applyEq" (formula "40") (term "0,1,1,0") (ifseqformula "41"))
                                                   (rule "getOfSeqSingleton" (formula "40") (term "1,1,0"))
                                                   (rule "castDel" (formula "40") (term "1,1,1,0"))
                                                   (rule "castDel" (formula "40") (term "2,1,1,0"))
                                                    (builtin "One Step Simplification" (formula "40"))
                                                   (rule "true_left" (formula "40"))
                                                   (rule "equalityToSeqGetAndSeqLenLeft" (formula "17") (inst "iv=iv"))
                                                    (builtin "One Step Simplification" (formula "17"))
                                                   (rule "equal_literals" (formula "17") (term "0"))
                                                    (builtin "One Step Simplification" (formula "17"))
                                                   (rule "closeFalse" (formula "17"))
                                                )
                                             )
                                          )
                                       )
                                       (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_ArrayList<<anonHeapFunction>> FALSE"
                                          (rule "applyEqReverse" (formula "26") (term "2,0") (ifseqformula "18"))
                                          (rule "applyEqReverse" (formula "24") (term "2,0,0") (ifseqformula "18"))
                                          (rule "applyEqReverse" (formula "27") (term "0,1") (ifseqformula "18"))
                                          (rule "applyEqReverse" (formula "26") (term "2,0,0") (ifseqformula "18"))
                                          (rule "applyEqReverse" (formula "22") (term "1,0") (ifseqformula "18"))
                                          (rule "applyEqReverse" (formula "19") (term "0") (ifseqformula "18"))
                                           (builtin "One Step Simplification" (formula "19"))
                                          (rule "true_left" (formula "19"))
                                          (rule "hideAuxiliaryEq" (formula "18"))
                                          (rule "replace_known_right" (formula "24") (term "0,0") (ifseqformula "48"))
                                           (builtin "One Step Simplification" (formula "24"))
                                          (rule "applyEqReverse" (formula "25") (term "0") (ifseqformula "24"))
                                           (builtin "One Step Simplification" (formula "25"))
                                          (rule "true_left" (formula "25"))
                                          (rule "hideAuxiliaryEq" (formula "24"))
                                          (rule "ifthenelse_split" (formula "16") (term "0"))
                                          (branch "(self_0, List::$seq) in self_0.footprint@anon_heap_ArrayList<<anonHeapFunction>> TRUE"
                                             (rule "replace_known_left" (formula "23") (term "0,0") (ifseqformula "16"))
                                              (builtin "One Step Simplification" (formula "23"))
                                             (rule "elementOfSubsetImpliesElementOfSuperset" (formula "16") (ifseqformula "11"))
                                              (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "56")) (ifInst ""  (formula "55")))
                                             (rule "true_left" (formula "16"))
                                             (rule "ifthenelse_split" (formula "44") (term "0"))
                                             (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> TRUE"
                                                (rule "applyEqReverse" (formula "46") (term "0,0") (ifseqformula "45"))
                                                (rule "hideAuxiliaryEq" (formula "45"))
                                                (rule "elementOfSubsetImpliesElementOfSuperset" (formula "44") (ifseqformula "32"))
                                                 (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "56")))
                                                (rule "replaceKnownSelect_taclet01000000000_31" (formula "44") (term "0,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet01000000000_32" (formula "44") (term "0,0"))
                                                (rule "notLeft" (formula "44"))
                                                (rule "close" (formula "47") (ifseqformula "8"))
                                             )
                                             (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> FALSE"
                                                (rule "applyEqReverse" (formula "45") (term "0,0") (ifseqformula "44"))
                                                (rule "hideAuxiliaryEq" (formula "44"))
                                                (rule "getOfSeqConcat" (formula "44") (term "0"))
                                                 (builtin "One Step Simplification" (formula "44"))
                                                (rule "castDel" (formula "44") (term "1,0"))
                                                (rule "sub_literals" (formula "44") (term "1,2,0"))
                                                (rule "less_literals" (formula "44") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "44"))
                                                (rule "eqSymm" (formula "44"))
                                                (rule "close" (formula "57") (ifseqformula "44"))
                                             )
                                          )
                                          (branch "(self_0, List::$seq) in self_0.footprint@anon_heap_ArrayList<<anonHeapFunction>> FALSE"
                                             (rule "eqSymm" (formula "16"))
                                             (rule "replace_known_right" (formula "22") (term "0,0") (ifseqformula "46"))
                                              (builtin "One Step Simplification" (formula "22"))
                                             (rule "eqSymm" (formula "22"))
                                             (rule "applyEq" (formula "17") (term "1") (ifseqformula "16"))
                                             (rule "applyEqRigid" (formula "23") (term "1") (ifseqformula "22"))
                                             (rule "applyEqRigid" (formula "43") (term "2,0") (ifseqformula "22"))
                                             (rule "applyEq" (formula "22") (term "1") (ifseqformula "16"))
                                             (rule "applyEq" (formula "22") (term "0,0") (ifseqformula "16"))
                                              (builtin "One Step Simplification" (formula "22"))
                                             (rule "applyEq" (formula "23") (term "1") (ifseqformula "16"))
                                             (rule "applyEq" (formula "43") (term "2,0") (ifseqformula "16"))
                                             (rule "equalityToSeqGetAndSeqLenLeft" (formula "10") (inst "iv=iv"))
                                              (builtin "One Step Simplification" (formula "10"))
                                             (rule "andLeft" (formula "10"))
                                             (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
                                             (rule "applyEq" (formula "11") (term "0,0,1,0") (ifseqformula "12"))
                                              (builtin "One Step Simplification" (formula "11"))
                                             (rule "true_left" (formula "11"))
                                             (rule "equalityToSeqGetAndSeqLenLeft" (formula "31") (inst "iv=iv"))
                                              (builtin "One Step Simplification" (formula "31"))
                                             (rule "andLeft" (formula "31"))
                                             (rule "inEqSimp_ltToLeq" (formula "32") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "32") (term "0,0,0"))
                                             (rule "applyEq" (formula "32") (term "0,0,1,0") (ifseqformula "33"))
                                              (builtin "One Step Simplification" (formula "32"))
                                             (rule "true_left" (formula "32"))
                                             (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "32"))
                                              (builtin "One Step Simplification" (formula "31"))
                                             (rule "true_left" (formula "31"))
                                             (rule "equalityToSeqGetAndSeqLenLeft" (formula "39") (inst "iv=iv"))
                                              (builtin "One Step Simplification" (formula "39"))
                                             (rule "andLeft" (formula "39"))
                                             (rule "getOfSeqSingleton" (formula "40") (term "1,1,0"))
                                             (rule "castDel" (formula "40") (term "1,1,1,0"))
                                             (rule "castDel" (formula "40") (term "2,1,1,0"))
                                             (rule "eqSymm" (formula "40") (term "1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "40") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "40") (term "0,0,0"))
                                             (rule "applyEqRigid" (formula "40") (term "0,1,1,0") (ifseqformula "41"))
                                             (rule "getOfSeqSingleton" (formula "40") (term "1,1,0"))
                                             (rule "castDel" (formula "40") (term "2,1,1,0"))
                                             (rule "castDel" (formula "40") (term "1,1,1,0"))
                                              (builtin "One Step Simplification" (formula "40"))
                                             (rule "true_left" (formula "40"))
                                             (rule "applyEq" (formula "39") (term "0,0") (ifseqformula "40"))
                                              (builtin "One Step Simplification" (formula "39"))
                                             (rule "true_left" (formula "39"))
                                             (rule "ifthenelse_split" (formula "44") (term "0"))
                                             (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> TRUE"
                                                (rule "applyEqReverse" (formula "46") (term "0,0") (ifseqformula "45"))
                                                (rule "hideAuxiliaryEq" (formula "45"))
                                                (rule "elementOfSubsetImpliesElementOfSuperset" (formula "44") (ifseqformula "32"))
                                                 (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "57")))
                                                (rule "replaceKnownSelect_taclet01000000000_31" (formula "44") (term "0,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet01000000000_32" (formula "44") (term "0,0"))
                                                (rule "notLeft" (formula "44"))
                                                (rule "close" (formula "47") (ifseqformula "8"))
                                             )
                                             (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> FALSE"
                                                (rule "applyEqReverse" (formula "45") (term "0,0") (ifseqformula "44"))
                                                (rule "hideAuxiliaryEq" (formula "44"))
                                                (rule "getOfSeqSingletonEQ" (formula "44") (term "0") (ifseqformula "23"))
                                                 (builtin "One Step Simplification" (formula "44"))
                                                (rule "castDel" (formula "44") (term "0"))
                                                (rule "eqSymm" (formula "44"))
                                                (rule "applyEq" (formula "58") (term "0") (ifseqformula "44"))
                                                (rule "equal_literals" (formula "58"))
                                                (rule "false_right" (formula "58"))
                                                (rule "equalityToSeqGetAndSeqLenLeft" (formula "38") (inst "iv=iv"))
                                                 (builtin "One Step Simplification" (formula "38"))
                                                (rule "andLeft" (formula "38"))
                                                (rule "getOfSeqSingleton" (formula "39") (term "1,1,0"))
                                                (rule "castDel" (formula "39") (term "1,1,1,0"))
                                                (rule "castDel" (formula "39") (term "2,1,1,0"))
                                                (rule "eqSymm" (formula "39") (term "1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "39") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "39") (term "0,0,0"))
                                                (rule "applyEq" (formula "39") (term "0,1,1,0") (ifseqformula "40"))
                                                (rule "getOfSeqSingleton" (formula "39") (term "1,1,0"))
                                                (rule "castDel" (formula "39") (term "1,1,1,0"))
                                                (rule "castDel" (formula "39") (term "2,1,1,0"))
                                                 (builtin "One Step Simplification" (formula "39"))
                                                (rule "true_left" (formula "39"))
                                                (rule "applyEq" (formula "38") (term "0,0") (ifseqformula "39"))
                                                 (builtin "One Step Simplification" (formula "38"))
                                                (rule "true_left" (formula "38"))
                                                (rule "equalityToSeqGetAndSeqLenLeft" (formula "17") (inst "iv=iv"))
                                                 (builtin "One Step Simplification" (formula "17"))
                                                (rule "equal_literals" (formula "17") (term "0"))
                                                 (builtin "One Step Simplification" (formula "17"))
                                                (rule "closeFalse" (formula "17"))
                                             )
                                          )
                                       )
                                    )
                                    (branch "(self_1, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> FALSE"
                                       (rule "eqSymm" (formula "40"))
                                       (rule "applyEq" (formula "41") (term "1") (ifseqformula "40"))
                                       (rule "ifthenelse_split" (formula "18") (term "0"))
                                       (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_ArrayList<<anonHeapFunction>> TRUE"
                                          (rule "applyEqReverse" (formula "27") (term "2,0") (ifseqformula "19"))
                                          (rule "applyEqReverse" (formula "28") (term "0,1") (ifseqformula "19"))
                                          (rule "applyEqReverse" (formula "20") (term "0") (ifseqformula "19"))
                                          (rule "applyEqReverse" (formula "27") (term "2,0,0") (ifseqformula "19"))
                                          (rule "applyEqReverse" (formula "25") (term "2,0,0") (ifseqformula "19"))
                                          (rule "applyEqReverse" (formula "23") (term "1,0") (ifseqformula "19"))
                                          (rule "hideAuxiliaryEq" (formula "19"))
                                          (rule "elementOfSubsetImpliesElementOfSuperset" (formula "18") (ifseqformula "11"))
                                           (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "58")) (ifInst ""  (formula "57")))
                                          (rule "true_left" (formula "18"))
                                          (rule "commuteUnion" (formula "27") (term "1"))
                                          (rule "ifthenelse_split" (formula "16") (term "0"))
                                          (branch "(self_0, List::$seq) in self_0.footprint@anon_heap_ArrayList<<anonHeapFunction>> TRUE"
                                             (rule "elementOfSubsetImpliesElementOfSuperset" (formula "16") (ifseqformula "11"))
                                              (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "59")) (ifInst ""  (formula "58")))
                                             (rule "true_left" (formula "16"))
                                             (rule "ifthenelse_split" (formula "47") (term "0"))
                                             (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> TRUE"
                                                (rule "applyEqReverse" (formula "49") (term "0,0") (ifseqformula "48"))
                                                (rule "hideAuxiliaryEq" (formula "48"))
                                                (rule "elementOfSubsetImpliesElementOfSuperset" (formula "47") (ifseqformula "36"))
                                                 (builtin "One Step Simplification" (formula "47") (ifInst ""  (formula "59")))
                                                (rule "replaceKnownSelect_taclet01000000000_31" (formula "47") (term "0,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet01000000000_32" (formula "47") (term "0,0"))
                                                (rule "notLeft" (formula "47"))
                                                (rule "close" (formula "50") (ifseqformula "8"))
                                             )
                                             (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> FALSE"
                                                (rule "applyEqReverse" (formula "48") (term "0,0") (ifseqformula "47"))
                                                (rule "hideAuxiliaryEq" (formula "47"))
                                                (rule "getOfSeqConcat" (formula "47") (term "0"))
                                                 (builtin "One Step Simplification" (formula "47"))
                                                (rule "castDel" (formula "47") (term "1,0"))
                                                (rule "sub_literals" (formula "47") (term "1,2,0"))
                                                (rule "less_literals" (formula "47") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "47"))
                                                (rule "eqSymm" (formula "47"))
                                                (rule "close" (formula "60") (ifseqformula "47"))
                                             )
                                          )
                                          (branch "(self_0, List::$seq) in self_0.footprint@anon_heap_ArrayList<<anonHeapFunction>> FALSE"
                                             (rule "eqSymm" (formula "16"))
                                             (rule "applyEq" (formula "17") (term "1") (ifseqformula "16"))
                                             (rule "applyEq" (formula "25") (term "0,1") (ifseqformula "16"))
                                              (builtin "One Step Simplification" (formula "25"))
                                             (rule "applyEqRigid" (formula "24") (term "0,1") (ifseqformula "16"))
                                              (builtin "One Step Simplification" (formula "24"))
                                             (rule "applyEqRigid" (formula "46") (term "0,2,0") (ifseqformula "16"))
                                              (builtin "One Step Simplification" (formula "46"))
                                             (rule "applyEq" (formula "24") (term "2,0") (ifseqformula "16"))
                                             (rule "elementOfSubsetOfUnion2" (formula "24") (term "0,0") (ifseqformula "19") (ifseqformula "49"))
                                             (rule "elementOfIntersect" (formula "24") (term "1"))
                                              (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "59")))
                                             (rule "replaceKnownSelect_taclet0_4" (formula "24") (term "0,0,1,1"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet0_5" (formula "24") (term "0,0,1,1"))
                                             (rule "replace_known_left" (formula "24") (term "0,1,1") (ifseqformula "8"))
                                              (builtin "One Step Simplification" (formula "24"))
                                             (rule "notLeft" (formula "24"))
                                             (rule "replace_known_right" (formula "24") (term "0,0") (ifseqformula "49"))
                                              (builtin "One Step Simplification" (formula "24"))
                                             (rule "eqSymm" (formula "24"))
                                             (rule "applyEqRigid" (formula "25") (term "1") (ifseqformula "24"))
                                             (rule "applyEq" (formula "46") (term "2,0") (ifseqformula "24"))
                                             (rule "elementOfSubsetOfUnion2" (formula "49") (ifseqformula "19") (ifseqformula "50"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "50"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "notLeft" (formula "1"))
                                             (rule "elementOfIntersect" (formula "49"))
                                              (builtin "One Step Simplification" (formula "49") (ifInst ""  (formula "50")))
                                             (rule "false_right" (formula "49"))
                                             (rule "equalityToSeqGetAndSeqLenLeft" (formula "10") (inst "iv=iv"))
                                              (builtin "One Step Simplification" (formula "10"))
                                             (rule "andLeft" (formula "10"))
                                             (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
                                             (rule "applyEq" (formula "11") (term "0,0,1,0") (ifseqformula "12"))
                                              (builtin "One Step Simplification" (formula "11"))
                                             (rule "true_left" (formula "11"))
                                             (rule "equalityToSeqGetAndSeqLenLeft" (formula "35") (inst "iv=iv"))
                                              (builtin "One Step Simplification" (formula "35"))
                                             (rule "andLeft" (formula "35"))
                                             (rule "inEqSimp_ltToLeq" (formula "36") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "36") (term "0,0,0"))
                                             (rule "applyEq" (formula "36") (term "0,0,1,0") (ifseqformula "37"))
                                              (builtin "One Step Simplification" (formula "36"))
                                             (rule "true_left" (formula "36"))
                                             (rule "applyEq" (formula "35") (term "0,0") (ifseqformula "36"))
                                              (builtin "One Step Simplification" (formula "35"))
                                             (rule "true_left" (formula "35"))
                                             (rule "ifthenelse_split" (formula "27") (term "0"))
                                             (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_add<<anonHeapFunction>> TRUE"
                                                (rule "applyEqReverse" (formula "29") (term "0") (ifseqformula "28"))
                                                (rule "hideAuxiliaryEq" (formula "28"))
                                                (rule "elementOfSubsetImpliesElementOfSuperset" (formula "27") (ifseqformula "20"))
                                                (rule "elementOfUnion" (formula "27"))
                                                 (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "19")))
                                                (rule "true_left" (formula "27"))
                                                (rule "ifthenelse_split" (formula "47") (term "0"))
                                                (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> TRUE"
                                                   (rule "applyEqReverse" (formula "49") (term "0,0") (ifseqformula "48"))
                                                   (rule "hideAuxiliaryEq" (formula "48"))
                                                   (rule "elementOfSubsetImpliesElementOfSuperset" (formula "47") (ifseqformula "36"))
                                                    (builtin "One Step Simplification" (formula "47") (ifInst ""  (formula "61")))
                                                   (rule "replaceKnownSelect_taclet01000000000_31" (formula "47") (term "0,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet01000000000_32" (formula "47") (term "0,0"))
                                                   (rule "notLeft" (formula "47"))
                                                   (rule "close" (formula "50") (ifseqformula "8"))
                                                )
                                                (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> FALSE"
                                                   (rule "applyEqReverse" (formula "48") (term "0,0") (ifseqformula "47"))
                                                   (rule "hideAuxiliaryEq" (formula "47"))
                                                   (rule "getOfSeqSingletonEQ" (formula "47") (term "0") (ifseqformula "25"))
                                                    (builtin "One Step Simplification" (formula "47"))
                                                   (rule "castDel" (formula "47") (term "0"))
                                                   (rule "eqSymm" (formula "47"))
                                                   (rule "applyEq" (formula "62") (term "0") (ifseqformula "47"))
                                                   (rule "equal_literals" (formula "62"))
                                                   (rule "false_right" (formula "62"))
                                                   (rule "equalityToSeqGetAndSeqLenLeft" (formula "41") (inst "iv=iv"))
                                                    (builtin "One Step Simplification" (formula "41"))
                                                   (rule "equal_literals" (formula "41") (term "0"))
                                                    (builtin "One Step Simplification" (formula "41"))
                                                   (rule "closeFalse" (formula "41"))
                                                )
                                             )
                                             (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_add<<anonHeapFunction>> FALSE"
                                                (rule "applyEqReverse" (formula "28") (term "0") (ifseqformula "27"))
                                                 (builtin "One Step Simplification" (formula "28"))
                                                (rule "true_left" (formula "28"))
                                                (rule "hideAuxiliaryEq" (formula "27"))
                                                (rule "ifthenelse_split" (formula "45") (term "0"))
                                                (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> TRUE"
                                                   (rule "applyEqReverse" (formula "47") (term "0,0") (ifseqformula "46"))
                                                   (rule "hideAuxiliaryEq" (formula "46"))
                                                   (rule "elementOfSubsetImpliesElementOfSuperset" (formula "45") (ifseqformula "34"))
                                                    (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "60")))
                                                   (rule "replaceKnownSelect_taclet01000000000_31" (formula "45") (term "0,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet01000000000_32" (formula "45") (term "0,0"))
                                                   (rule "notLeft" (formula "45"))
                                                   (rule "close" (formula "48") (ifseqformula "8"))
                                                )
                                                (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> FALSE"
                                                   (rule "applyEqReverse" (formula "46") (term "0,0") (ifseqformula "45"))
                                                   (rule "hideAuxiliaryEq" (formula "45"))
                                                   (rule "getOfSeqSingletonEQ" (formula "45") (term "0") (ifseqformula "25"))
                                                    (builtin "One Step Simplification" (formula "45"))
                                                   (rule "castDel" (formula "45") (term "0"))
                                                   (rule "eqSymm" (formula "45"))
                                                   (rule "applyEq" (formula "61") (term "0") (ifseqformula "45"))
                                                   (rule "equal_literals" (formula "61"))
                                                   (rule "false_right" (formula "61"))
                                                   (rule "equalityToSeqGetAndSeqLenLeft" (formula "39") (inst "iv=iv"))
                                                    (builtin "One Step Simplification" (formula "39"))
                                                   (rule "equal_literals" (formula "39") (term "0"))
                                                    (builtin "One Step Simplification" (formula "39"))
                                                   (rule "closeFalse" (formula "39"))
                                                )
                                             )
                                          )
                                       )
                                       (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_ArrayList<<anonHeapFunction>> FALSE"
                                          (rule "applyEqReverse" (formula "24") (term "2,0,0") (ifseqformula "18"))
                                          (rule "applyEqReverse" (formula "26") (term "2,0") (ifseqformula "18"))
                                          (rule "applyEqReverse" (formula "27") (term "0,1") (ifseqformula "18"))
                                          (rule "applyEqReverse" (formula "26") (term "2,0,0") (ifseqformula "18"))
                                          (rule "applyEqReverse" (formula "22") (term "1,0") (ifseqformula "18"))
                                          (rule "applyEqReverse" (formula "19") (term "0") (ifseqformula "18"))
                                           (builtin "One Step Simplification" (formula "19"))
                                          (rule "true_left" (formula "19"))
                                          (rule "hideAuxiliaryEq" (formula "18"))
                                          (rule "replace_known_right" (formula "24") (term "0,0") (ifseqformula "47"))
                                           (builtin "One Step Simplification" (formula "24"))
                                          (rule "applyEqReverse" (formula "25") (term "0") (ifseqformula "24"))
                                           (builtin "One Step Simplification" (formula "25"))
                                          (rule "true_left" (formula "25"))
                                          (rule "hideAuxiliaryEq" (formula "24"))
                                          (rule "ifthenelse_split" (formula "16") (term "0"))
                                          (branch "(self_0, List::$seq) in self_0.footprint@anon_heap_ArrayList<<anonHeapFunction>> TRUE"
                                             (rule "replace_known_left" (formula "23") (term "0,0") (ifseqformula "16"))
                                              (builtin "One Step Simplification" (formula "23"))
                                             (rule "elementOfSubsetImpliesElementOfSuperset" (formula "16") (ifseqformula "11"))
                                              (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "56")) (ifInst ""  (formula "55")))
                                             (rule "true_left" (formula "16"))
                                             (rule "ifthenelse_split" (formula "43") (term "0"))
                                             (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> TRUE"
                                                (rule "applyEqReverse" (formula "45") (term "0,0") (ifseqformula "44"))
                                                (rule "hideAuxiliaryEq" (formula "44"))
                                                (rule "elementOfSubsetImpliesElementOfSuperset" (formula "43") (ifseqformula "32"))
                                                 (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "56")))
                                                (rule "replaceKnownSelect_taclet01000000000_31" (formula "43") (term "0,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet01000000000_32" (formula "43") (term "0,0"))
                                                (rule "notLeft" (formula "43"))
                                                (rule "close" (formula "46") (ifseqformula "8"))
                                             )
                                             (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> FALSE"
                                                (rule "applyEqReverse" (formula "44") (term "0,0") (ifseqformula "43"))
                                                (rule "hideAuxiliaryEq" (formula "43"))
                                                (rule "getOfSeqConcat" (formula "43") (term "0"))
                                                 (builtin "One Step Simplification" (formula "43"))
                                                (rule "castDel" (formula "43") (term "1,0"))
                                                (rule "sub_literals" (formula "43") (term "1,2,0"))
                                                (rule "less_literals" (formula "43") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "43"))
                                                (rule "eqSymm" (formula "43"))
                                                (rule "close" (formula "57") (ifseqformula "43"))
                                             )
                                          )
                                          (branch "(self_0, List::$seq) in self_0.footprint@anon_heap_ArrayList<<anonHeapFunction>> FALSE"
                                             (rule "eqSymm" (formula "16"))
                                             (rule "replace_known_right" (formula "22") (term "0,0") (ifseqformula "45"))
                                              (builtin "One Step Simplification" (formula "22"))
                                             (rule "eqSymm" (formula "22"))
                                             (rule "applyEq" (formula "42") (term "2,0") (ifseqformula "22"))
                                             (rule "applyEqRigid" (formula "17") (term "1") (ifseqformula "16"))
                                             (rule "applyEq" (formula "23") (term "0,1") (ifseqformula "16"))
                                              (builtin "One Step Simplification" (formula "23"))
                                             (rule "applyEq" (formula "22") (term "1") (ifseqformula "16"))
                                             (rule "applyEqRigid" (formula "22") (term "0,0") (ifseqformula "16"))
                                              (builtin "One Step Simplification" (formula "22"))
                                             (rule "applyEqRigid" (formula "42") (term "2,0") (ifseqformula "16"))
                                             (rule "applyEq" (formula "23") (term "1") (ifseqformula "22"))
                                             (rule "equalityToSeqGetAndSeqLenLeft" (formula "30") (inst "iv=iv"))
                                              (builtin "One Step Simplification" (formula "30"))
                                             (rule "andLeft" (formula "30"))
                                             (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "31") (term "0,0,0"))
                                             (rule "applyEq" (formula "30") (term "0,0") (ifseqformula "32"))
                                              (builtin "One Step Simplification" (formula "30"))
                                             (rule "true_left" (formula "30"))
                                             (rule "applyEq" (formula "30") (term "0,0,1,0,0,1,0,0") (ifseqformula "31"))
                                              (builtin "One Step Simplification" (formula "30"))
                                             (rule "mul_literals" (formula "30") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "30") (term "0,0,1,0,0"))
                                             (rule "applyEq" (formula "30") (term "0,0,1,0") (ifseqformula "31"))
                                              (builtin "One Step Simplification" (formula "30"))
                                             (rule "true_left" (formula "30"))
                                             (rule "equalityToSeqGetAndSeqLenLeft" (formula "10") (inst "iv=iv"))
                                              (builtin "One Step Simplification" (formula "10"))
                                             (rule "andLeft" (formula "10"))
                                             (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
                                             (rule "applyEq" (formula "11") (term "0,0,1,0,0,1,0,0") (ifseqformula "12"))
                                              (builtin "One Step Simplification" (formula "11"))
                                             (rule "mul_literals" (formula "11") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "11") (term "0,0,1,0,0"))
                                             (rule "applyEq" (formula "11") (term "0,0,1,0") (ifseqformula "12"))
                                              (builtin "One Step Simplification" (formula "11"))
                                             (rule "true_left" (formula "11"))
                                             (rule "ifthenelse_split" (formula "43") (term "0"))
                                             (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> TRUE"
                                                (rule "applyEqReverse" (formula "45") (term "0,0") (ifseqformula "44"))
                                                (rule "hideAuxiliaryEq" (formula "44"))
                                                (rule "elementOfSubsetImpliesElementOfSuperset" (formula "43") (ifseqformula "32"))
                                                 (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "57")))
                                                (rule "replaceKnownSelect_taclet01000000000_31" (formula "43") (term "0,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet01000000000_32" (formula "43") (term "0,0"))
                                                (rule "notLeft" (formula "43"))
                                                (rule "close" (formula "46") (ifseqformula "8"))
                                             )
                                             (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> FALSE"
                                                (rule "applyEqReverse" (formula "44") (term "0,0") (ifseqformula "43"))
                                                (rule "hideAuxiliaryEq" (formula "43"))
                                                (rule "getOfSeqSingletonEQ" (formula "43") (term "0") (ifseqformula "17"))
                                                 (builtin "One Step Simplification" (formula "43"))
                                                (rule "castDel" (formula "43") (term "0"))
                                                (rule "eqSymm" (formula "43"))
                                                (rule "close" (formula "58") (ifseqformula "43"))
                                             )
                                          )
                                       )
                                    )
                                 )
                              )
                              (branch "Exceptional Post (get)"
                                  (builtin "One Step Simplification" (formula "47"))
                                  (builtin "One Step Simplification" (formula "56"))
                                 (rule "andLeft" (formula "47"))
                                 (rule "andLeft" (formula "48"))
                                 (rule "andLeft" (formula "49"))
                                 (rule "andLeft" (formula "48"))
                                 (rule "andLeft" (formula "50"))
                                 (rule "notLeft" (formula "48"))
                                 (rule "close" (formula "52") (ifseqformula "51"))
                              )
                              (branch "Pre (get)"
                                  (builtin "One Step Simplification" (formula "54"))
                                 (rule "wellFormedAnonEQ" (formula "54") (term "0,1") (ifseqformula "39"))
                                 (rule "wellFormedAnonEQ" (formula "54") (term "0,0,1") (ifseqformula "31"))
                                 (rule "wellFormedAnonEQ" (formula "54") (term "0,0,0,1") (ifseqformula "23"))
                                 (rule "wellFormedAnonEQ" (formula "54") (term "0,0,0,0,1") (ifseqformula "15"))
                                 (rule "wellFormedAnonEQ" (formula "54") (term "0,0,0,0,0,1") (ifseqformula "7"))
                                 (rule "selectOfAnonEQ" (formula "54") (term "0,1,1,0,0") (ifseqformula "39"))
                                  (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "1")) (ifInst ""  (formula "6")) (ifInst ""  (formula "14")) (ifInst ""  (formula "22")) (ifInst ""  (formula "30")) (ifInst ""  (formula "38")) (ifInst ""  (formula "52")))
                                 (rule "selectOfAnonEQ" (formula "54") (term "0,1") (ifseqformula "39"))
                                  (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "52")))
                                 (rule "ifthenelse_negated" (formula "54") (term "0,1"))
                                 (rule "selectOfAnonEQ" (formula "54") (term "2,0,1,1,0,0") (ifseqformula "31"))
                                  (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "52")))
                                 (rule "ifthenelse_negated" (formula "54") (term "2,0,1,1,0,0"))
                                 (rule "selectOfAnonEQ" (formula "54") (term "0,0,2,0,1,1,0,0") (ifseqformula "23"))
                                  (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "52")))
                                 (rule "ifthenelse_negated" (formula "54") (term "0,0,2,0,1,1,0,0"))
                                 (rule "selectCreatedOfAnonEQ" (formula "54") (term "1,0,0,2,0,1,1,0,0") (ifseqformula "15"))
                                 (rule "selectOfAnonEQ" (formula "54") (term "1,2,0,1,1,0,0") (ifseqformula "23"))
                                  (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "52")))
                                 (rule "selectOfAnonEQ" (formula "54") (term "1,0,1") (ifseqformula "31"))
                                  (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "52")))
                                 (rule "ifthenelse_negated" (formula "54") (term "1,0,1"))
                                 (rule "selectOfAnonEQ" (formula "54") (term "0,0,1,0,0,2,0,1,1,0,0") (ifseqformula "7"))
                                  (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "52")) (ifInst ""  (formula "51")) (ifInst ""  (formula "9")))
                                 (rule "selectCreatedOfAnonEQ" (formula "54") (term "1,1,0,1") (ifseqformula "23"))
                                 (rule "selectOfAnonEQ" (formula "54") (term "0,0,0,1") (ifseqformula "31"))
                                  (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "52")))
                                 (rule "ifthenelse_negated" (formula "54") (term "0,0,0,1"))
                                 (rule "selectCreatedOfAnonEQ" (formula "54") (term "0,0,0,0,0,1") (ifseqformula "23"))
                                  (builtin "One Step Simplification" (formula "54"))
                                 (rule "selectCreatedOfAnonEQ" (formula "54") (term "0,0,1,0,0,1,1,0,0") (ifseqformula "31"))
                                  (builtin "One Step Simplification" (formula "54"))
                                 (rule "selectOfAnonEQ" (formula "54") (term "0,0,1,0,1,2,0,1,1,0,0") (ifseqformula "15"))
                                  (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "52")))
                                 (rule "ifthenelse_negated" (formula "54") (term "0,0,1,0,1,2,0,1,1,0,0"))
                                 (rule "selectOfAnonEQ" (formula "54") (term "0,0,0,2,0,1,1,0,0") (ifseqformula "15"))
                                  (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "52")))
                                 (rule "ifthenelse_negated" (formula "54") (term "0,0,0,2,0,1,1,0,0"))
                                 (rule "selectOfAnonEQ" (formula "54") (term "0,0,0,0,0,2,0,1,1,0,0") (ifseqformula "7"))
                                  (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "52")) (ifInst ""  (formula "51")) (ifInst ""  (formula "9")))
                                 (rule "selectCreatedOfAnonEQ" (formula "54") (term "1,0,0,0,1") (ifseqformula "23"))
                                 (rule "selectOfAnonEQ" (formula "54") (term "0,0,0,0,0,0,1") (ifseqformula "15"))
                                  (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "52")))
                                 (rule "ifthenelse_negated" (formula "54") (term "0,0,0,0,0,0,1"))
                                 (rule "selectOfAnonEQ" (formula "54") (term "1,0,0,0,0,0,0,1") (ifseqformula "7"))
                                  (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "52")) (ifInst ""  (formula "51")))
                                 (rule "selectCreatedOfAnonEQ" (formula "54") (term "0,0,0,2,0,1,1,0,0") (ifseqformula "7"))
                                  (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "51")) (ifInst ""  (formula "9")))
                                 (rule "selectCreatedOfAnonEQ" (formula "54") (term "0,0,0,0,1,0,2,0,1,1,0,0") (ifseqformula "7"))
                                  (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "51")) (ifInst ""  (formula "9")))
                                 (rule "selectCreatedOfAnonEQ" (formula "54") (term "0,0,0,1,0,0,1,1,0,0") (ifseqformula "23"))
                                  (builtin "One Step Simplification" (formula "54"))
                                 (rule "selectOfAnonEQ" (formula "54") (term "0,0,1,1,0,1") (ifseqformula "15"))
                                  (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "52")))
                                 (rule "ifthenelse_negated" (formula "54") (term "0,0,1,1,0,1"))
                                 (rule "selectCreatedOfAnonEQ" (formula "54") (term "1,0,0,1,1,0,1") (ifseqformula "7"))
                                 (rule "selectCreatedOfAnonEQ" (formula "54") (term "0,0,0,0,1,1,0,1") (ifseqformula "7"))
                                  (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "51")) (ifInst ""  (formula "51")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")))
                                 (rule "selectCreatedOfAnonEQ" (formula "54") (term "0,0,0,0,1,0,0,1,1,0,0") (ifseqformula "15"))
                                  (builtin "One Step Simplification" (formula "54"))
                                 (rule "selectOfAnonEQ" (formula "54") (term "0,0,0,0,0,0,0,0,1") (ifseqformula "7"))
                                  (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "52")) (ifInst ""  (formula "51")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")))
                                 (rule "selectCreatedOfAnonEQ" (formula "54") (term "0,0,0,0,1") (ifseqformula "15"))
                                  (builtin "One Step Simplification" (formula "54"))
                                 (rule "selectOfAnonEQ" (formula "54") (term "0,0,0,0,0,1") (ifseqformula "7"))
                                  (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "52")) (ifInst ""  (formula "51")) (ifInst ""  (formula "9")))
                                 (rule "selectCreatedOfAnonEQ" (formula "54") (term "0,0,0,0,0,1,0,0,1,1,0,0") (ifseqformula "7"))
                                  (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "51")) (ifInst ""  (formula "9")))
                                 (rule "selectCreatedOfAnonEQ" (formula "54") (term "0,0,1") (ifseqformula "23"))
                                  (builtin "One Step Simplification" (formula "54"))
                                 (rule "selectOfAnonEQ" (formula "54") (term "2,2,0,1,1,0,0") (ifseqformula "15"))
                                  (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "52")))
                                 (rule "selectOfAnonEQ" (formula "54") (term "0,0,0,1") (ifseqformula "15"))
                                  (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "52")))
                                 (rule "ifthenelse_negated" (formula "54") (term "0,0,0,1"))
                                 (rule "selectOfAnonEQ" (formula "54") (term "0,0,0,0,0,1") (ifseqformula "7"))
                                  (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "52")) (ifInst ""  (formula "51")) (ifInst ""  (formula "9")))
                                 (rule "selectCreatedOfAnonEQ" (formula "54") (term "0,0,0,1") (ifseqformula "7"))
                                  (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "51")) (ifInst ""  (formula "9")))
                                 (rule "selectCreatedOfAnonEQ" (formula "54") (term "0,0,1,0,2,0,1,1,0") (ifseqformula "7"))
                                  (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "51")) (ifInst ""  (formula "9")))
                                 (rule "selectOfAnonEQ" (formula "54") (term "2,2,2,0,1,1,0") (ifseqformula "7"))
                                  (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "52")) (ifInst ""  (formula "51")))
                                 (rule "selectOfAnonEQ" (formula "54") (term "0,0,1,0,2,2,0,1,1,0") (ifseqformula "7"))
                                  (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "52")) (ifInst ""  (formula "51")) (ifInst ""  (formula "9")))
                                 (rule "leq_literals" (formula "54") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "54"))
                                 (rule "inEqSimp_ltToLeq" (formula "54") (term "0"))
                                 (rule "add_zero_right" (formula "54") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "54") (term "1,0,0"))
                                 (rule "applyEq" (formula "54") (term "2,2,2,0,0,1,0,0") (ifseqformula "11"))
                                 (rule "applyEq" (formula "54") (term "2,2,0,0,1,0,0") (ifseqformula "17"))
                                 (rule "applyEq" (formula "54") (term "2,0,0,1,0,0") (ifseqformula "25"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "54") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "54") (term "0,0"))
                                 (rule "polySimp_elimOne" (formula "54") (term "0,0"))
                                 (rule "Class_invariant_axiom_for_Test" (formula "5") (ifseqformula "3"))
                                 (rule "true_left" (formula "5"))
                                 (rule "commute_and" (formula "53"))
                                 (rule "ifthenelse_split" (formula "16") (term "0"))
                                 (branch "(self_0, List::$seq) in self_0.footprint@anon_heap_ArrayList<<anonHeapFunction>> TRUE"
                                    (rule "elementOfSubsetImpliesElementOfSuperset" (formula "16") (ifseqformula "11"))
                                     (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "53")) (ifInst ""  (formula "52")))
                                    (rule "true_left" (formula "16"))
                                    (rule "ifthenelse_split" (formula "43") (term "0"))
                                    (branch "(self_1, List::$footprint) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> TRUE"
                                       (rule "applyEqReverse" (formula "45") (term "0") (ifseqformula "44"))
                                       (rule "hideAuxiliaryEq" (formula "44"))
                                       (rule "elementOfSubsetImpliesElementOfSuperset" (formula "43") (ifseqformula "36"))
                                        (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "51")))
                                       (rule "replaceKnownSelect_taclet0000000_18" (formula "43") (term "0,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet0000000_21" (formula "43") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "43"))
                                       (rule "true_left" (formula "43"))
                                       (rule "ifthenelse_split" (formula "41") (term "0"))
                                       (branch "(self_1, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> TRUE"
                                          (rule "elementOfSubsetImpliesElementOfSuperset" (formula "41") (ifseqformula "36"))
                                           (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "52")))
                                          (rule "replaceKnownSelect_taclet0000000_18" (formula "41") (term "0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet0000000_21" (formula "41") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "41"))
                                          (rule "true_left" (formula "41"))
                                          (rule "ifthenelse_split" (formula "19") (term "0"))
                                          (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_ArrayList<<anonHeapFunction>> TRUE"
                                             (rule "applyEqReverse" (formula "28") (term "2,0") (ifseqformula "20"))
                                             (rule "applyEqReverse" (formula "28") (term "2,0,0") (ifseqformula "20"))
                                             (rule "applyEqReverse" (formula "26") (term "2,0,0") (ifseqformula "20"))
                                             (rule "applyEqReverse" (formula "29") (term "0,1") (ifseqformula "20"))
                                             (rule "applyEqReverse" (formula "24") (term "1,0") (ifseqformula "20"))
                                             (rule "applyEqReverse" (formula "21") (term "0") (ifseqformula "20"))
                                             (rule "hideAuxiliaryEq" (formula "20"))
                                             (rule "elementOfSubsetImpliesElementOfSuperset" (formula "19") (ifseqformula "11"))
                                              (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "54")) (ifInst ""  (formula "53")))
                                             (rule "true_left" (formula "19"))
                                             (rule "commuteUnion" (formula "28") (term "1"))
                                             (rule "ifthenelse_split" (formula "55") (term "0,0,1"))
                                             (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> TRUE"
                                                (rule "elementOfSubsetImpliesElementOfSuperset" (formula "1") (ifseqformula "37"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "55")))
                                                (rule "notLeft" (formula "1"))
                                                (rule "pullOutSelect" (formula "48") (term "0") (inst "selectSK=java_lang_Object_created__6"))
                                                (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "25"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "56")))
                                                (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "2,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "2,0"))
                                                (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "0,0,0,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "0,0,0,0"))
                                                (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "10"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "applyEqReverse" (formula "49") (term "0") (ifseqformula "1"))
                                                (rule "close" (formula "49") (ifseqformula "10"))
                                             )
                                             (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> FALSE"
                                                (rule "lenOfSeqConcat" (formula "56") (term "0,1"))
                                                 (builtin "One Step Simplification" (formula "56"))
                                                (rule "add_literals" (formula "56") (term "0,1"))
                                                (rule "qeq_literals" (formula "56") (term "1"))
                                                 (builtin "One Step Simplification" (formula "56"))
                                                (rule "ifthenelse_split" (formula "27") (term "0"))
                                                (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_add<<anonHeapFunction>> TRUE"
                                                   (rule "applyEqReverse" (formula "29") (term "0") (ifseqformula "28"))
                                                   (rule "hideAuxiliaryEq" (formula "28"))
                                                   (rule "elementOfSubsetImpliesElementOfSuperset" (formula "27") (ifseqformula "20"))
                                                   (rule "elementOfUnion" (formula "27"))
                                                    (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "19")))
                                                   (rule "true_left" (formula "27"))
                                                   (rule "ifthenelse_split" (formula "25") (term "0"))
                                                   (branch "(self_0, List::$seq) in self_0.footprint@anon_heap_add<<anonHeapFunction>> TRUE"
                                                      (rule "elementOfSubsetImpliesElementOfSuperset" (formula "25") (ifseqformula "20"))
                                                      (rule "elementOfUnion" (formula "25"))
                                                       (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "16")))
                                                      (rule "true_left" (formula "25"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "44") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "44"))
                                                      (rule "andLeft" (formula "44"))
                                                      (rule "getOfSeqSingleton" (formula "45") (term "1,1,0"))
                                                      (rule "castDel" (formula "45") (term "2,1,1,0"))
                                                      (rule "castDel" (formula "45") (term "1,1,1,0"))
                                                      (rule "eqSymm" (formula "45") (term "1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "45") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "45") (term "0,0,0"))
                                                      (rule "applyEq" (formula "45") (term "0,0,1,0,0,1,0,0") (ifseqformula "46"))
                                                       (builtin "One Step Simplification" (formula "45"))
                                                      (rule "mul_literals" (formula "45") (term "1,0,0,1,0,0"))
                                                      (rule "add_literals" (formula "45") (term "0,0,1,0,0"))
                                                      (rule "add_zero_left" (formula "45") (term "0,1,0,0"))
                                                      (rule "applyEqRigid" (formula "44") (term "0,0") (ifseqformula "46"))
                                                       (builtin "One Step Simplification" (formula "44"))
                                                      (rule "true_left" (formula "44"))
                                                      (rule "applyEqRigid" (formula "44") (term "0,1,1,0") (ifseqformula "45"))
                                                      (rule "getOfSeqSingleton" (formula "44") (term "1,1,0"))
                                                      (rule "castDel" (formula "44") (term "2,1,1,0"))
                                                      (rule "castDel" (formula "44") (term "1,1,1,0"))
                                                       (builtin "One Step Simplification" (formula "44"))
                                                      (rule "true_left" (formula "44"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "36") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "36"))
                                                      (rule "andLeft" (formula "36"))
                                                      (rule "inEqSimp_ltToLeq" (formula "37") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "37") (term "0,0,0"))
                                                      (rule "applyEq" (formula "37") (term "0,0,1,0,0,1,0,0") (ifseqformula "38"))
                                                       (builtin "One Step Simplification" (formula "37"))
                                                      (rule "times_zero_2" (formula "37") (term "1,0,0,1,0,0"))
                                                      (rule "add_literals" (formula "37") (term "0,0,1,0,0"))
                                                      (rule "applyEq" (formula "36") (term "0,0") (ifseqformula "38"))
                                                       (builtin "One Step Simplification" (formula "36"))
                                                      (rule "true_left" (formula "36"))
                                                      (rule "applyEq" (formula "36") (term "0,0,1,0") (ifseqformula "37"))
                                                       (builtin "One Step Simplification" (formula "36"))
                                                      (rule "true_left" (formula "36"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "17") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "17"))
                                                      (rule "andLeft" (formula "17"))
                                                      (rule "getOfSeqSingleton" (formula "18") (term "1,1,0"))
                                                      (rule "castDel" (formula "18") (term "2,1,1,0"))
                                                      (rule "castDel" (formula "18") (term "1,1,1,0"))
                                                      (rule "eqSymm" (formula "18") (term "1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
                                                      (rule "applyEq" (formula "18") (term "0,0,1,0,0,1,0,0") (ifseqformula "19"))
                                                       (builtin "One Step Simplification" (formula "18"))
                                                      (rule "mul_literals" (formula "18") (term "1,0,0,1,0,0"))
                                                      (rule "add_literals" (formula "18") (term "0,0,1,0,0"))
                                                      (rule "add_zero_left" (formula "18") (term "0,1,0,0"))
                                                      (rule "applyEq" (formula "17") (term "0,0") (ifseqformula "19"))
                                                       (builtin "One Step Simplification" (formula "17"))
                                                      (rule "true_left" (formula "17"))
                                                      (rule "applyEq" (formula "17") (term "0,1,1,0") (ifseqformula "18"))
                                                      (rule "getOfSeqSingleton" (formula "17") (term "1,1,0"))
                                                      (rule "castDel" (formula "17") (term "2,1,1,0"))
                                                      (rule "castDel" (formula "17") (term "1,1,1,0"))
                                                       (builtin "One Step Simplification" (formula "17"))
                                                      (rule "true_left" (formula "17"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "43") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "43"))
                                                      (rule "andLeft" (formula "43"))
                                                      (rule "getOfSeqSingleton" (formula "44") (term "1,1,0"))
                                                      (rule "castDel" (formula "44") (term "2,1,1,0"))
                                                      (rule "castDel" (formula "44") (term "1,1,1,0"))
                                                      (rule "eqSymm" (formula "44") (term "1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "44") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "44") (term "0,0,0"))
                                                      (rule "applyEq" (formula "44") (term "0,1,1,0") (ifseqformula "45"))
                                                      (rule "getOfSeqSingleton" (formula "44") (term "1,1,0"))
                                                      (rule "castDel" (formula "44") (term "1,1,1,0"))
                                                      (rule "castDel" (formula "44") (term "2,1,1,0"))
                                                       (builtin "One Step Simplification" (formula "44"))
                                                      (rule "true_left" (formula "44"))
                                                      (rule "applyEq" (formula "43") (term "0,0") (ifseqformula "44"))
                                                       (builtin "One Step Simplification" (formula "43"))
                                                      (rule "true_left" (formula "43"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "26") (inst "iv=iv"))
                                                      (rule "andLeft" (formula "26"))
                                                      (rule "lenOfSeqConcat" (formula "26") (term "1"))
                                                       (builtin "One Step Simplification" (formula "26"))
                                                      (rule "add_literals" (formula "26") (term "1"))
                                                      (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0"))
                                                      (rule "applyEq" (formula "27") (term "0,0,1,0,0,1,0,0") (ifseqformula "28"))
                                                      (rule "lenOfSeqConcat" (formula "27") (term "0,1,0,0,1,0,0"))
                                                       (builtin "One Step Simplification" (formula "27"))
                                                      (rule "add_literals" (formula "27") (term "0,1,0,0,1,0,0"))
                                                      (rule "mul_literals" (formula "27") (term "1,0,0,1,0,0"))
                                                      (rule "add_literals" (formula "27") (term "0,0,1,0,0"))
                                                      (rule "applyEq" (formula "26") (term "0,0") (ifseqformula "28"))
                                                      (rule "lenOfSeqConcat" (formula "26") (term "0"))
                                                       (builtin "One Step Simplification" (formula "26"))
                                                      (rule "add_literals" (formula "26") (term "0"))
                                                       (builtin "One Step Simplification" (formula "26"))
                                                      (rule "true_left" (formula "26"))
                                                      (rule "applyEq" (formula "26") (term "0,0,1,0") (ifseqformula "27"))
                                                       (builtin "One Step Simplification" (formula "26"))
                                                      (rule "true_left" (formula "26"))
                                                      (rule "onlyCreatedObjectsAreInLocSets" (formula "16") (ifseqformula "5"))
                                                      (rule "replace_known_right" (formula "16") (term "0") (ifseqformula "55"))
                                                       (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "8")))
                                                      (rule "true_left" (formula "16"))
                                                      (rule "onlyCreatedObjectsAreInLocSets" (formula "42") (ifseqformula "31"))
                                                      (rule "replace_known_right" (formula "42") (term "0") (ifseqformula "53"))
                                                       (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "34")))
                                                      (rule "true_left" (formula "42"))
                                                      (rule "onlyCreatedObjectsAreInLocSets" (formula "45") (ifseqformula "31"))
                                                      (rule "replace_known_left" (formula "45") (term "1") (ifseqformula "34"))
                                                       (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "53")))
                                                      (rule "true_left" (formula "45"))
                                                      (rule "onlyCreatedObjectsAreInLocSets" (formula "25") (ifseqformula "13"))
                                                      (rule "replace_known_right" (formula "25") (term "0") (ifseqformula "55"))
                                                       (builtin "One Step Simplification" (formula "25"))
                                                      (rule "onlyCreatedObjectsAreInLocSets" (formula "19") (ifseqformula "5"))
                                                      (rule "replace_known_left" (formula "19") (term "1") (ifseqformula "8"))
                                                       (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "56")))
                                                      (rule "true_left" (formula "19"))
                                                      (rule "onlyCreatedObjectsAreInLocSets" (formula "29") (ifseqformula "13"))
                                                      (rule "replace_known_left" (formula "29") (term "1") (ifseqformula "25"))
                                                       (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "56")))
                                                      (rule "true_left" (formula "29"))
                                                       (builtin "Use Dependency Contract" (formula "58") (ifInst ""  (formula "31")) (ifInst ""  (formula "41")) (ifInst ""  (formula "33")) (contract "ArrayList[java.lang.Object::<inv>()].JML accessible clause.0"))
                                                      (rule "replaceKnownSelect_taclet0000_9" (formula "49") (term "1,1,0"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet01000021000000000_28" (formula "49") (term "1,1,0"))
                                                      (rule "wellFormedAnonEQ" (formula "49") (term "0,1,0,0,0") (ifseqformula "23"))
                                                      (rule "wellFormedAnonEQ" (formula "49") (term "1,1,0,0,0") (ifseqformula "41"))
                                                      (rule "wellFormedAnonEQ" (formula "49") (term "0,0,1,0,0,0") (ifseqformula "14"))
                                                      (rule "wellFormedAnonEQ" (formula "49") (term "0,1,1,0,0,0") (ifseqformula "33"))
                                                      (rule "wellFormedAnonEQ" (formula "49") (term "0,0,1,1,0,0,0") (ifseqformula "23"))
                                                      (rule "wellFormedAnonEQ" (formula "49") (term "0,0,0,1,0,0,0") (ifseqformula "6"))
                                                      (rule "wellFormedAnonEQ" (formula "49") (term "0,0,0,1,1,0,0,0") (ifseqformula "14"))
                                                      (rule "wellFormedAnonEQ" (formula "49") (term "0,0,0,0,1,1,0,0,0") (ifseqformula "6"))
                                                      (rule "replace_known_left" (formula "49") (term "1,1") (ifseqformula "31"))
                                                       (builtin "One Step Simplification" (formula "49") (ifInst ""  (formula "56")) (ifInst ""  (formula "1")) (ifInst ""  (formula "5")) (ifInst ""  (formula "13")) (ifInst ""  (formula "22")) (ifInst ""  (formula "1")) (ifInst ""  (formula "5")) (ifInst ""  (formula "13")) (ifInst ""  (formula "22")) (ifInst ""  (formula "32")) (ifInst ""  (formula "40")) (ifInst ""  (formula "31")) (ifInst ""  (formula "59")))
                                                      (rule "notLeft" (formula "49"))
                                                      (rule "disjointDefinition" (formula "49") (term "1"))
                                                      (rule "pullOutSelect" (formula "49") (term "0,0") (inst "selectSK=java_lang_Object_created__6"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
                                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "57")))
                                                      (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "2,0"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "2,0"))
                                                      (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "0,0,0,0"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "0,0,0,0"))
                                                      (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "9"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "applyEqReverse" (formula "50") (term "0,0") (ifseqformula "1"))
                                                      (rule "hideAuxiliaryEq" (formula "1"))
                                                      (rule "replace_known_left" (formula "49") (term "0") (ifseqformula "8"))
                                                       (builtin "One Step Simplification" (formula "49"))
                                                      (rule "equalityToElementOfRight" (formula "49") (inst "fv=fv") (inst "ov=ov"))
                                                       (builtin "One Step Simplification" (formula "49"))
                                                      (rule "allRight" (formula "49") (inst "sk=ov_0"))
                                                      (rule "allRight" (formula "49") (inst "sk=fv_0"))
                                                      (rule "notRight" (formula "49"))
                                                      (rule "elementOfIntersect" (formula "1"))
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "elementOfSubsetImpliesElementOfSuperset" (formula "1") (ifseqformula "40"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "notLeft" (formula "2"))
                                                      (rule "notLeft" (formula "1"))
                                                      (rule "elementOfSubsetImpliesElementOfSuperset" (formula "2") (ifseqformula "32"))
                                                      (rule "elementOfUnion" (formula "2"))
                                                       (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "52")))
                                                      (rule "pullOutSelect" (formula "53") (term "0") (inst "selectSK=java_lang_Object_created__7"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "27"))
                                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")))
                                                      (rule "ifthenelse_negated" (formula "1") (term "0"))
                                                      (rule "apply_eq_boolean_rigid" (formula "1") (term "1") (ifseqformula "54"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "notLeft" (formula "1"))
                                                      (rule "ifEqualsTRUE" (formula "52"))
                                                       (builtin "One Step Simplification" (formula "52"))
                                                      (rule "orRight" (formula "52"))
                                                      (rule "replace_known_right" (formula "53") (term "0,0") (ifseqformula "52"))
                                                       (builtin "One Step Simplification" (formula "53"))
                                                      (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "52"))
                                                       (builtin "One Step Simplification" (formula "2"))
                                                      (rule "true_left" (formula "2"))
                                                      (rule "pullOutSelect" (formula "51") (term "0") (inst "selectSK=java_lang_Object_created__8"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "17"))
                                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "54")))
                                                      (rule "ifthenelse_negated" (formula "1") (term "0"))
                                                      (rule "apply_eq_boolean" (formula "1") (term "1") (ifseqformula "52"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "notLeft" (formula "1"))
                                                      (rule "ifEqualsTRUE" (formula "51"))
                                                       (builtin "One Step Simplification" (formula "51"))
                                                      (rule "orRight" (formula "51"))
                                                      (rule "replace_known_right" (formula "52") (term "0,0") (ifseqformula "51"))
                                                       (builtin "One Step Simplification" (formula "52"))
                                                      (rule "pullOutSelect" (formula "51") (term "0") (inst "selectSK=java_lang_Object_created__9"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "9"))
                                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "56")))
                                                      (rule "ifthenelse_negated" (formula "1") (term "0"))
                                                      (rule "apply_eq_boolean" (formula "1") (term "1") (ifseqformula "52"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "notLeft" (formula "1"))
                                                      (rule "ifEqualsTRUE" (formula "51"))
                                                       (builtin "One Step Simplification" (formula "51"))
                                                      (rule "orRight" (formula "51"))
                                                      (rule "replace_known_right" (formula "52") (term "0,0") (ifseqformula "51"))
                                                       (builtin "One Step Simplification" (formula "52"))
                                                      (rule "hideAuxiliaryEqConcrete2" (formula "58"))
                                                      (rule "hideAuxiliaryEqConcrete2" (formula "55"))
                                                      (rule "hideAuxiliaryEqConcrete2" (formula "53"))
                                                      (rule "onlyCreatedObjectsAreInLocSets" (formula "1") (ifseqformula "34"))
                                                      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "56"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "onlyCreatedObjectsAreInLocSets" (formula "3") (ifseqformula "25"))
                                                      (rule "replace_known_right" (formula "3") (term "0") (ifseqformula "57"))
                                                       (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "56")))
                                                      (rule "closeFalse" (formula "3"))
                                                   )
                                                   (branch "(self_0, List::$seq) in self_0.footprint@anon_heap_add<<anonHeapFunction>> FALSE"
                                                      (rule "eqSymm" (formula "25"))
                                                      (rule "applyEq" (formula "26") (term "1") (ifseqformula "25"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "43") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "43"))
                                                      (rule "andLeft" (formula "43"))
                                                      (rule "getOfSeqSingleton" (formula "44") (term "1,1,0"))
                                                      (rule "castDel" (formula "44") (term "2,1,1,0"))
                                                      (rule "castDel" (formula "44") (term "1,1,1,0"))
                                                      (rule "eqSymm" (formula "44") (term "1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "44") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "44") (term "0,0,0"))
                                                      (rule "applyEqRigid" (formula "43") (term "0,0") (ifseqformula "45"))
                                                       (builtin "One Step Simplification" (formula "43"))
                                                      (rule "true_left" (formula "43"))
                                                      (rule "applyEq" (formula "43") (term "0,1,1,0") (ifseqformula "44"))
                                                      (rule "getOfSeqSingleton" (formula "43") (term "1,1,0"))
                                                      (rule "castDel" (formula "43") (term "2,1,1,0"))
                                                      (rule "castDel" (formula "43") (term "1,1,1,0"))
                                                       (builtin "One Step Simplification" (formula "43"))
                                                      (rule "true_left" (formula "43"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "35") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "35"))
                                                      (rule "andLeft" (formula "35"))
                                                      (rule "inEqSimp_ltToLeq" (formula "36") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "36") (term "0,0,0"))
                                                      (rule "applyEq" (formula "36") (term "0,0,1,0") (ifseqformula "37"))
                                                       (builtin "One Step Simplification" (formula "36"))
                                                      (rule "true_left" (formula "36"))
                                                      (rule "applyEq" (formula "35") (term "0,0") (ifseqformula "36"))
                                                       (builtin "One Step Simplification" (formula "35"))
                                                      (rule "true_left" (formula "35"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "17") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "17"))
                                                      (rule "andLeft" (formula "17"))
                                                      (rule "getOfSeqSingleton" (formula "18") (term "1,1,0"))
                                                      (rule "castDel" (formula "18") (term "2,1,1,0"))
                                                      (rule "castDel" (formula "18") (term "1,1,1,0"))
                                                      (rule "eqSymm" (formula "18") (term "1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
                                                      (rule "applyEq" (formula "18") (term "0,0,1,0,0,1,0,0") (ifseqformula "19"))
                                                       (builtin "One Step Simplification" (formula "18"))
                                                      (rule "mul_literals" (formula "18") (term "1,0,0,1,0,0"))
                                                      (rule "add_literals" (formula "18") (term "0,0,1,0,0"))
                                                      (rule "add_zero_left" (formula "18") (term "0,1,0,0"))
                                                      (rule "applyEq" (formula "17") (term "0,0") (ifseqformula "19"))
                                                       (builtin "One Step Simplification" (formula "17"))
                                                      (rule "true_left" (formula "17"))
                                                      (rule "applyEq" (formula "17") (term "0,1,1,0") (ifseqformula "18"))
                                                      (rule "getOfSeqSingleton" (formula "17") (term "1,1,0"))
                                                      (rule "castDel" (formula "17") (term "1,1,1,0"))
                                                      (rule "castDel" (formula "17") (term "2,1,1,0"))
                                                       (builtin "One Step Simplification" (formula "17"))
                                                      (rule "true_left" (formula "17"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "42") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "42"))
                                                      (rule "andLeft" (formula "42"))
                                                      (rule "getOfSeqSingleton" (formula "43") (term "1,1,0"))
                                                      (rule "castDel" (formula "43") (term "2,1,1,0"))
                                                      (rule "castDel" (formula "43") (term "1,1,1,0"))
                                                      (rule "eqSymm" (formula "43") (term "1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "43") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "43") (term "0,0,0"))
                                                      (rule "applyEq" (formula "43") (term "0,1,1,0") (ifseqformula "44"))
                                                      (rule "getOfSeqSingleton" (formula "43") (term "1,1,0"))
                                                      (rule "castDel" (formula "43") (term "1,1,1,0"))
                                                      (rule "castDel" (formula "43") (term "2,1,1,0"))
                                                       (builtin "One Step Simplification" (formula "43"))
                                                      (rule "true_left" (formula "43"))
                                                      (rule "applyEq" (formula "42") (term "0,0") (ifseqformula "43"))
                                                       (builtin "One Step Simplification" (formula "42"))
                                                      (rule "true_left" (formula "42"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "25") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "25"))
                                                      (rule "andLeft" (formula "25"))
                                                      (rule "lenOfSeqConcat" (formula "25") (term "0"))
                                                       (builtin "One Step Simplification" (formula "25"))
                                                      (rule "add_literals" (formula "25") (term "0"))
                                                      (rule "equal_literals" (formula "25"))
                                                      (rule "closeFalse" (formula "25"))
                                                   )
                                                )
                                                (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_add<<anonHeapFunction>> FALSE"
                                                   (rule "applyEqReverse" (formula "28") (term "0") (ifseqformula "27"))
                                                    (builtin "One Step Simplification" (formula "28"))
                                                   (rule "true_left" (formula "28"))
                                                   (rule "hideAuxiliaryEq" (formula "27"))
                                                   (rule "ifthenelse_split" (formula "25") (term "0"))
                                                   (branch "(self_0, List::$seq) in self_0.footprint@anon_heap_add<<anonHeapFunction>> TRUE"
                                                      (rule "elementOfSubsetImpliesElementOfSuperset" (formula "25") (ifseqformula "20"))
                                                      (rule "elementOfUnion" (formula "25"))
                                                       (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "16")))
                                                      (rule "true_left" (formula "25"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "42") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "42"))
                                                      (rule "andLeft" (formula "42"))
                                                      (rule "getOfSeqSingleton" (formula "43") (term "1,1,0"))
                                                      (rule "castDel" (formula "43") (term "1,1,1,0"))
                                                      (rule "castDel" (formula "43") (term "2,1,1,0"))
                                                      (rule "eqSymm" (formula "43") (term "1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "43") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "43") (term "0,0,0"))
                                                      (rule "applyEq" (formula "43") (term "0,1,1,0") (ifseqformula "44"))
                                                      (rule "getOfSeqSingleton" (formula "43") (term "1,1,0"))
                                                      (rule "castDel" (formula "43") (term "1,1,1,0"))
                                                      (rule "castDel" (formula "43") (term "2,1,1,0"))
                                                       (builtin "One Step Simplification" (formula "43"))
                                                      (rule "true_left" (formula "43"))
                                                      (rule "applyEqRigid" (formula "42") (term "0,0") (ifseqformula "43"))
                                                       (builtin "One Step Simplification" (formula "42"))
                                                      (rule "true_left" (formula "42"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "34") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "34"))
                                                      (rule "andLeft" (formula "34"))
                                                      (rule "inEqSimp_ltToLeq" (formula "35") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "35") (term "0,0,0"))
                                                      (rule "applyEq" (formula "35") (term "0,0,1,0,0,1,0,0") (ifseqformula "36"))
                                                       (builtin "One Step Simplification" (formula "35"))
                                                      (rule "mul_literals" (formula "35") (term "1,0,0,1,0,0"))
                                                      (rule "add_zero_right" (formula "35") (term "0,0,1,0,0"))
                                                      (rule "applyEq" (formula "34") (term "0,0") (ifseqformula "36"))
                                                       (builtin "One Step Simplification" (formula "34"))
                                                      (rule "true_left" (formula "34"))
                                                      (rule "applyEq" (formula "34") (term "0,0,1,0") (ifseqformula "35"))
                                                       (builtin "One Step Simplification" (formula "34"))
                                                      (rule "true_left" (formula "34"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "17") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "17"))
                                                      (rule "andLeft" (formula "17"))
                                                      (rule "getOfSeqSingleton" (formula "18") (term "1,1,0"))
                                                      (rule "castDel" (formula "18") (term "1,1,1,0"))
                                                      (rule "castDel" (formula "18") (term "2,1,1,0"))
                                                      (rule "eqSymm" (formula "18") (term "1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
                                                      (rule "applyEq" (formula "18") (term "0,1,1,0") (ifseqformula "19"))
                                                      (rule "getOfSeqSingleton" (formula "18") (term "1,1,0"))
                                                      (rule "castDel" (formula "18") (term "1,1,1,0"))
                                                      (rule "castDel" (formula "18") (term "2,1,1,0"))
                                                       (builtin "One Step Simplification" (formula "18"))
                                                      (rule "true_left" (formula "18"))
                                                      (rule "applyEq" (formula "17") (term "0,0") (ifseqformula "18"))
                                                       (builtin "One Step Simplification" (formula "17"))
                                                      (rule "true_left" (formula "17"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "41") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "41"))
                                                      (rule "andLeft" (formula "41"))
                                                      (rule "getOfSeqSingleton" (formula "42") (term "1,1,0"))
                                                      (rule "castDel" (formula "42") (term "1,1,1,0"))
                                                      (rule "castDel" (formula "42") (term "2,1,1,0"))
                                                      (rule "eqSymm" (formula "42") (term "1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "42") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "42") (term "0,0,0"))
                                                      (rule "applyEq" (formula "42") (term "0,0,1,0,0,1,0,0") (ifseqformula "43"))
                                                       (builtin "One Step Simplification" (formula "42"))
                                                      (rule "mul_literals" (formula "42") (term "1,0,0,1,0,0"))
                                                      (rule "add_literals" (formula "42") (term "0,0,1,0,0"))
                                                      (rule "add_zero_left" (formula "42") (term "0,1,0,0"))
                                                      (rule "applyEq" (formula "41") (term "0,0") (ifseqformula "43"))
                                                       (builtin "One Step Simplification" (formula "41"))
                                                      (rule "true_left" (formula "41"))
                                                      (rule "applyEq" (formula "41") (term "0,1,1,0") (ifseqformula "42"))
                                                      (rule "getOfSeqSingleton" (formula "41") (term "1,1,0"))
                                                      (rule "castDel" (formula "41") (term "2,1,1,0"))
                                                      (rule "castDel" (formula "41") (term "1,1,1,0"))
                                                       (builtin "One Step Simplification" (formula "41"))
                                                      (rule "true_left" (formula "41"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "26") (inst "iv=iv"))
                                                      (rule "andLeft" (formula "26"))
                                                      (rule "lenOfSeqConcat" (formula "26") (term "1"))
                                                       (builtin "One Step Simplification" (formula "26"))
                                                      (rule "add_literals" (formula "26") (term "1"))
                                                      (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0"))
                                                      (rule "applyEq" (formula "27") (term "0,0,1,0,0,1,0,0") (ifseqformula "28"))
                                                      (rule "lenOfSeqConcat" (formula "27") (term "0,1,0,0,1,0,0"))
                                                       (builtin "One Step Simplification" (formula "27"))
                                                      (rule "add_literals" (formula "27") (term "0,1,0,0,1,0,0"))
                                                      (rule "mul_literals" (formula "27") (term "1,0,0,1,0,0"))
                                                      (rule "add_literals" (formula "27") (term "0,0,1,0,0"))
                                                      (rule "applyEq" (formula "26") (term "0,0") (ifseqformula "28"))
                                                      (rule "lenOfSeqConcat" (formula "26") (term "0"))
                                                       (builtin "One Step Simplification" (formula "26"))
                                                      (rule "add_literals" (formula "26") (term "0"))
                                                       (builtin "One Step Simplification" (formula "26"))
                                                      (rule "true_left" (formula "26"))
                                                      (rule "applyEq" (formula "26") (term "0,0,1,0") (ifseqformula "27"))
                                                       (builtin "One Step Simplification" (formula "26"))
                                                      (rule "true_left" (formula "26"))
                                                      (rule "onlyCreatedObjectsAreInLocSets" (formula "16") (ifseqformula "5"))
                                                      (rule "replace_known_left" (formula "16") (term "1") (ifseqformula "8"))
                                                       (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "54")))
                                                      (rule "true_left" (formula "16"))
                                                      (rule "onlyCreatedObjectsAreInLocSets" (formula "40") (ifseqformula "29"))
                                                      (rule "replace_known_left" (formula "40") (term "1") (ifseqformula "32"))
                                                       (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "52")))
                                                      (rule "true_left" (formula "40"))
                                                      (rule "onlyCreatedObjectsAreInLocSets" (formula "43") (ifseqformula "29"))
                                                      (rule "replace_known_left" (formula "43") (term "1") (ifseqformula "32"))
                                                       (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "52")))
                                                      (rule "true_left" (formula "43"))
                                                      (rule "onlyCreatedObjectsAreInLocSets" (formula "25") (ifseqformula "13"))
                                                      (rule "replace_known_right" (formula "25") (term "0") (ifseqformula "54"))
                                                       (builtin "One Step Simplification" (formula "25"))
                                                      (rule "onlyCreatedObjectsAreInLocSets" (formula "19") (ifseqformula "5"))
                                                      (rule "replace_known_left" (formula "19") (term "1") (ifseqformula "8"))
                                                       (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "55")))
                                                      (rule "true_left" (formula "19"))
                                                       (builtin "Use Dependency Contract" (formula "57") (ifInst ""  (formula "29")) (ifInst ""  (formula "39")) (ifInst ""  (formula "31")) (contract "ArrayList[java.lang.Object::<inv>()].JML accessible clause.0"))
                                                      (rule "replaceKnownSelect_taclet0000_9" (formula "47") (term "1,1,0"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet11000021000000000_28" (formula "47") (term "1,1,0"))
                                                      (rule "wellFormedAnonEQ" (formula "47") (term "0,1,0,0,0") (ifseqformula "23"))
                                                      (rule "wellFormedAnonEQ" (formula "47") (term "1,1,0,0,0") (ifseqformula "39"))
                                                      (rule "wellFormedAnonEQ" (formula "47") (term "0,1,1,0,0,0") (ifseqformula "31"))
                                                      (rule "wellFormedAnonEQ" (formula "47") (term "0,0,1,0,0,0") (ifseqformula "14"))
                                                      (rule "wellFormedAnonEQ" (formula "47") (term "0,0,0,1,0,0,0") (ifseqformula "6"))
                                                      (rule "wellFormedAnonEQ" (formula "47") (term "0,0,1,1,0,0,0") (ifseqformula "23"))
                                                      (rule "wellFormedAnonEQ" (formula "47") (term "0,0,0,1,1,0,0,0") (ifseqformula "14"))
                                                      (rule "wellFormedAnonEQ" (formula "47") (term "0,0,0,0,1,1,0,0,0") (ifseqformula "6"))
                                                      (rule "replace_known_left" (formula "47") (term "1,0,0") (ifseqformula "29"))
                                                       (builtin "One Step Simplification" (formula "47") (ifInst ""  (formula "55")) (ifInst ""  (formula "1")) (ifInst ""  (formula "5")) (ifInst ""  (formula "13")) (ifInst ""  (formula "22")) (ifInst ""  (formula "1")) (ifInst ""  (formula "5")) (ifInst ""  (formula "13")) (ifInst ""  (formula "22")) (ifInst ""  (formula "30")) (ifInst ""  (formula "38")) (ifInst ""  (formula "58")) (ifInst ""  (formula "29")))
                                                      (rule "notLeft" (formula "47"))
                                                      (rule "disjointDefinition" (formula "47") (term "1"))
                                                      (rule "pullOutSelect" (formula "47") (term "0,0") (inst "selectSK=java_lang_Object_created__6"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
                                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "56")))
                                                      (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "2,0"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "2,0"))
                                                      (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "0,0,0,0"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "0,0,0,0"))
                                                      (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "9"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "applyEqReverse" (formula "48") (term "0,0") (ifseqformula "1"))
                                                      (rule "hideAuxiliaryEq" (formula "1"))
                                                      (rule "replace_known_left" (formula "47") (term "0") (ifseqformula "8"))
                                                       (builtin "One Step Simplification" (formula "47"))
                                                      (rule "equalityToElementOfRight" (formula "47") (inst "fv=fv") (inst "ov=ov"))
                                                       (builtin "One Step Simplification" (formula "47"))
                                                      (rule "allRight" (formula "47") (inst "sk=ov_0"))
                                                      (rule "allRight" (formula "47") (inst "sk=fv_0"))
                                                      (rule "notRight" (formula "47"))
                                                      (rule "elementOfIntersect" (formula "1"))
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "elementOfSubsetImpliesElementOfSuperset" (formula "2") (ifseqformula "22"))
                                                      (rule "elementOfSubsetImpliesElementOfSuperset" (formula "1") (ifseqformula "39"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "notLeft" (formula "2"))
                                                      (rule "notLeft" (formula "1"))
                                                      (rule "elementOfUnion" (formula "2"))
                                                       (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "50")))
                                                      (rule "pullOutSelect" (formula "51") (term "0") (inst "selectSK=java_lang_Object_created__7"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "27"))
                                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "51")))
                                                      (rule "ifthenelse_negated" (formula "1") (term "0"))
                                                      (rule "apply_eq_boolean_rigid" (formula "1") (term "1") (ifseqformula "52"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "notLeft" (formula "1"))
                                                      (rule "ifEqualsTRUE" (formula "50"))
                                                       (builtin "One Step Simplification" (formula "50"))
                                                      (rule "orRight" (formula "50"))
                                                      (rule "replace_known_right" (formula "51") (term "0,0") (ifseqformula "50"))
                                                       (builtin "One Step Simplification" (formula "51"))
                                                      (rule "pullOutSelect" (formula "2") (term "0,0,0") (inst "selectSK=java_lang_Object_created__8"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "10"))
                                                       (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "53")))
                                                      (rule "ifthenelse_negated" (formula "2") (term "0"))
                                                      (rule "pullOutSelect" (formula "51") (term "0") (inst "selectSK=java_lang_Object_created__9"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "54")))
                                                      (rule "replaceKnownSelect_taclet011000021000000000_32" (formula "1") (term "2,0"))
                                                      (rule "replaceKnownSelect_taclet011000021000000000_32" (formula "1") (term "0,0,0,0"))
                                                      (rule "ifthenelse_negated" (formula "1") (term "0"))
                                                      (rule "apply_eq_boolean_rigid" (formula "1") (term "1") (ifseqformula "52"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "notLeft" (formula "1"))
                                                      (rule "ifEqualsTRUE" (formula "51"))
                                                       (builtin "One Step Simplification" (formula "51"))
                                                      (rule "orRight" (formula "51"))
                                                      (rule "replace_known_right" (formula "52") (term "0,0") (ifseqformula "51"))
                                                       (builtin "One Step Simplification" (formula "52"))
                                                      (rule "replace_known_right" (formula "3") (term "0,0") (ifseqformula "51"))
                                                       (builtin "One Step Simplification" (formula "3"))
                                                      (rule "true_left" (formula "3"))
                                                      (rule "apply_eq_boolean" (formula "2") (term "1") (ifseqformula "50"))
                                                       (builtin "One Step Simplification" (formula "2"))
                                                      (rule "notLeft" (formula "2"))
                                                      (rule "ifEqualsTRUE" (formula "49"))
                                                       (builtin "One Step Simplification" (formula "49"))
                                                      (rule "orRight" (formula "49"))
                                                      (rule "replace_known_right" (formula "50") (term "0,0") (ifseqformula "49"))
                                                       (builtin "One Step Simplification" (formula "50"))
                                                      (rule "hideAuxiliaryEqConcrete2" (formula "56"))
                                                      (rule "hideAuxiliaryEqConcrete2" (formula "53"))
                                                      (rule "hideAuxiliaryEqConcrete2" (formula "51"))
                                                      (rule "onlyCreatedObjectsAreInLocSets" (formula "2") (ifseqformula "15"))
                                                      (rule "replace_known_right" (formula "2") (term "0") (ifseqformula "54"))
                                                       (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "52")))
                                                      (rule "closeFalse" (formula "2"))
                                                   )
                                                   (branch "(self_0, List::$seq) in self_0.footprint@anon_heap_add<<anonHeapFunction>> FALSE"
                                                      (rule "eqSymm" (formula "25"))
                                                      (rule "applyEqRigid" (formula "26") (term "1") (ifseqformula "25"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "41") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "41"))
                                                      (rule "andLeft" (formula "41"))
                                                      (rule "getOfSeqSingleton" (formula "42") (term "1,1,0"))
                                                      (rule "castDel" (formula "42") (term "1,1,1,0"))
                                                      (rule "castDel" (formula "42") (term "2,1,1,0"))
                                                      (rule "eqSymm" (formula "42") (term "1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "42") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "42") (term "0,0,0"))
                                                      (rule "applyEq" (formula "41") (term "0,0") (ifseqformula "43"))
                                                       (builtin "One Step Simplification" (formula "41"))
                                                      (rule "true_left" (formula "41"))
                                                      (rule "applyEqRigid" (formula "41") (term "0,1,1,0") (ifseqformula "42"))
                                                      (rule "getOfSeqSingleton" (formula "41") (term "1,1,0"))
                                                      (rule "castDel" (formula "41") (term "1,1,1,0"))
                                                      (rule "castDel" (formula "41") (term "2,1,1,0"))
                                                       (builtin "One Step Simplification" (formula "41"))
                                                      (rule "true_left" (formula "41"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "33") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "33"))
                                                      (rule "andLeft" (formula "33"))
                                                      (rule "inEqSimp_ltToLeq" (formula "34") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "34") (term "0,0,0"))
                                                      (rule "applyEq" (formula "34") (term "0,0,1,0,0,1,0,0") (ifseqformula "35"))
                                                       (builtin "One Step Simplification" (formula "34"))
                                                      (rule "mul_literals" (formula "34") (term "1,0,0,1,0,0"))
                                                      (rule "add_zero_right" (formula "34") (term "0,0,1,0,0"))
                                                      (rule "applyEq" (formula "33") (term "0,0") (ifseqformula "35"))
                                                       (builtin "One Step Simplification" (formula "33"))
                                                      (rule "true_left" (formula "33"))
                                                      (rule "applyEq" (formula "33") (term "0,0,1,0") (ifseqformula "34"))
                                                       (builtin "One Step Simplification" (formula "33"))
                                                      (rule "true_left" (formula "33"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "17") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "17"))
                                                      (rule "andLeft" (formula "17"))
                                                      (rule "getOfSeqSingleton" (formula "18") (term "1,1,0"))
                                                      (rule "castDel" (formula "18") (term "1,1,1,0"))
                                                      (rule "castDel" (formula "18") (term "2,1,1,0"))
                                                      (rule "eqSymm" (formula "18") (term "1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
                                                      (rule "applyEq" (formula "18") (term "0,0,1,0,0,1,0,0") (ifseqformula "19"))
                                                       (builtin "One Step Simplification" (formula "18"))
                                                      (rule "mul_literals" (formula "18") (term "1,0,0,1,0,0"))
                                                      (rule "add_literals" (formula "18") (term "0,0,1,0,0"))
                                                      (rule "add_zero_left" (formula "18") (term "0,1,0,0"))
                                                      (rule "applyEq" (formula "17") (term "0,0") (ifseqformula "19"))
                                                       (builtin "One Step Simplification" (formula "17"))
                                                      (rule "true_left" (formula "17"))
                                                      (rule "applyEq" (formula "17") (term "0,1,1,0") (ifseqformula "18"))
                                                      (rule "getOfSeqSingleton" (formula "17") (term "1,1,0"))
                                                      (rule "castDel" (formula "17") (term "2,1,1,0"))
                                                      (rule "castDel" (formula "17") (term "1,1,1,0"))
                                                       (builtin "One Step Simplification" (formula "17"))
                                                      (rule "true_left" (formula "17"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "40") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "40"))
                                                      (rule "andLeft" (formula "40"))
                                                      (rule "getOfSeqSingleton" (formula "41") (term "1,1,0"))
                                                      (rule "castDel" (formula "41") (term "1,1,1,0"))
                                                      (rule "castDel" (formula "41") (term "2,1,1,0"))
                                                      (rule "eqSymm" (formula "41") (term "1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "41") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "41") (term "0,0,0"))
                                                      (rule "applyEq" (formula "40") (term "0,0") (ifseqformula "42"))
                                                       (builtin "One Step Simplification" (formula "40"))
                                                      (rule "true_left" (formula "40"))
                                                      (rule "applyEq" (formula "40") (term "0,1,1,0") (ifseqformula "41"))
                                                      (rule "getOfSeqSingleton" (formula "40") (term "1,1,0"))
                                                      (rule "castDel" (formula "40") (term "1,1,1,0"))
                                                      (rule "castDel" (formula "40") (term "2,1,1,0"))
                                                       (builtin "One Step Simplification" (formula "40"))
                                                      (rule "true_left" (formula "40"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "25") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "25"))
                                                      (rule "andLeft" (formula "25"))
                                                      (rule "getOfSeqSingleton" (formula "26") (term "1,1,0"))
                                                      (rule "castDel" (formula "26") (term "2,1,1,0"))
                                                      (rule "castDel" (formula "26") (term "1,1,1,0"))
                                                      (rule "eqSymm" (formula "26") (term "1,0"))
                                                      (rule "lenOfSeqConcat" (formula "26") (term "1,1,0,0"))
                                                       (builtin "One Step Simplification" (formula "26"))
                                                      (rule "add_literals" (formula "26") (term "1,1,0,0"))
                                                      (rule "lenOfSeqConcat" (formula "25") (term "0"))
                                                       (builtin "One Step Simplification" (formula "25"))
                                                      (rule "add_literals" (formula "25") (term "0"))
                                                      (rule "equal_literals" (formula "25"))
                                                      (rule "closeFalse" (formula "25"))
                                                   )
                                                )
                                             )
                                          )
                                          (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_ArrayList<<anonHeapFunction>> FALSE"
                                             (rule "applyEqReverse" (formula "20") (term "0") (ifseqformula "19"))
                                              (builtin "One Step Simplification" (formula "20"))
                                             (rule "true_left" (formula "20"))
                                             (rule "applyEqReverse" (formula "27") (term "0,1") (ifseqformula "19"))
                                             (rule "applyEqReverse" (formula "26") (term "2,0,0") (ifseqformula "19"))
                                             (rule "applyEqReverse" (formula "24") (term "2,0,0") (ifseqformula "19"))
                                             (rule "applyEqReverse" (formula "26") (term "2,0") (ifseqformula "19"))
                                             (rule "applyEqReverse" (formula "22") (term "1,0") (ifseqformula "19"))
                                             (rule "hideAuxiliaryEq" (formula "19"))
                                             (rule "replace_known_left" (formula "23") (term "0,0") (ifseqformula "16"))
                                              (builtin "One Step Simplification" (formula "23"))
                                             (rule "replace_known_right" (formula "25") (term "0,0") (ifseqformula "45"))
                                              (builtin "One Step Simplification" (formula "25"))
                                             (rule "applyEqReverse" (formula "26") (term "0") (ifseqformula "25"))
                                              (builtin "One Step Simplification" (formula "26"))
                                             (rule "true_left" (formula "26"))
                                             (rule "hideAuxiliaryEq" (formula "25"))
                                             (rule "ifthenelse_split" (formula "52") (term "0,0,1"))
                                             (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> TRUE"
                                                (rule "elementOfSubsetImpliesElementOfSuperset" (formula "1") (ifseqformula "33"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "52")))
                                                (rule "notLeft" (formula "1"))
                                                (rule "pullOutSelect" (formula "44") (term "0") (inst "selectSK=java_lang_Object_created__6"))
                                                (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")))
                                                (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "2,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "2,0"))
                                                (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "0,0,0,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "0,0,0,0"))
                                                (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "10"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "applyEqReverse" (formula "45") (term "0") (ifseqformula "1"))
                                                (rule "close" (formula "45") (ifseqformula "10"))
                                             )
                                             (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> FALSE"
                                                (rule "lenOfSeqConcat" (formula "53") (term "0,1"))
                                                 (builtin "One Step Simplification" (formula "53"))
                                                (rule "add_literals" (formula "53") (term "0,1"))
                                                (rule "qeq_literals" (formula "53") (term "1"))
                                                 (builtin "One Step Simplification" (formula "53"))
                                                (rule "equalityToSeqGetAndSeqLenLeft" (formula "39") (inst "iv=iv"))
                                                 (builtin "One Step Simplification" (formula "39"))
                                                (rule "andLeft" (formula "39"))
                                                (rule "getOfSeqSingleton" (formula "40") (term "1,1,0"))
                                                (rule "castDel" (formula "40") (term "2,1,1,0"))
                                                (rule "castDel" (formula "40") (term "1,1,1,0"))
                                                (rule "eqSymm" (formula "40") (term "1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "40") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "40") (term "0,0,0"))
                                                (rule "applyEq" (formula "39") (term "0,0") (ifseqformula "41"))
                                                 (builtin "One Step Simplification" (formula "39"))
                                                (rule "true_left" (formula "39"))
                                                (rule "applyEq" (formula "39") (term "0,1,1,0") (ifseqformula "40"))
                                                (rule "getOfSeqSingleton" (formula "39") (term "1,1,0"))
                                                (rule "castDel" (formula "39") (term "1,1,1,0"))
                                                (rule "castDel" (formula "39") (term "2,1,1,0"))
                                                 (builtin "One Step Simplification" (formula "39"))
                                                (rule "true_left" (formula "39"))
                                                (rule "equalityToSeqGetAndSeqLenLeft" (formula "31") (inst "iv=iv"))
                                                 (builtin "One Step Simplification" (formula "31"))
                                                (rule "andLeft" (formula "31"))
                                                (rule "inEqSimp_ltToLeq" (formula "32") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "32") (term "0,0,0"))
                                                (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "33"))
                                                 (builtin "One Step Simplification" (formula "31"))
                                                (rule "true_left" (formula "31"))
                                                (rule "applyEq" (formula "31") (term "0,0,1,0,0,1,0,0") (ifseqformula "32"))
                                                 (builtin "One Step Simplification" (formula "31"))
                                                (rule "mul_literals" (formula "31") (term "1,0,0,1,0,0"))
                                                (rule "add_zero_right" (formula "31") (term "0,0,1,0,0"))
                                                (rule "applyEq" (formula "31") (term "0,0,1,0") (ifseqformula "32"))
                                                 (builtin "One Step Simplification" (formula "31"))
                                                (rule "true_left" (formula "31"))
                                                (rule "equalityToSeqGetAndSeqLenLeft" (formula "17") (inst "iv=iv"))
                                                 (builtin "One Step Simplification" (formula "17"))
                                                (rule "andLeft" (formula "17"))
                                                (rule "getOfSeqSingleton" (formula "18") (term "1,1,0"))
                                                (rule "castDel" (formula "18") (term "1,1,1,0"))
                                                (rule "castDel" (formula "18") (term "2,1,1,0"))
                                                (rule "eqSymm" (formula "18") (term "1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
                                                (rule "applyEq" (formula "18") (term "0,0,1,0,0,1,0,0") (ifseqformula "19"))
                                                 (builtin "One Step Simplification" (formula "18"))
                                                (rule "mul_literals" (formula "18") (term "1,0,0,1,0,0"))
                                                (rule "add_literals" (formula "18") (term "0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "18") (term "0,1,0,0"))
                                                (rule "applyEq" (formula "17") (term "0,0") (ifseqformula "19"))
                                                 (builtin "One Step Simplification" (formula "17"))
                                                (rule "true_left" (formula "17"))
                                                (rule "applyEq" (formula "17") (term "0,1,1,0") (ifseqformula "18"))
                                                (rule "getOfSeqSingleton" (formula "17") (term "1,1,0"))
                                                (rule "castDel" (formula "17") (term "1,1,1,0"))
                                                (rule "castDel" (formula "17") (term "2,1,1,0"))
                                                 (builtin "One Step Simplification" (formula "17"))
                                                (rule "true_left" (formula "17"))
                                                (rule "equalityToSeqGetAndSeqLenLeft" (formula "38") (inst "iv=iv"))
                                                 (builtin "One Step Simplification" (formula "38"))
                                                (rule "andLeft" (formula "38"))
                                                (rule "getOfSeqSingleton" (formula "39") (term "1,1,0"))
                                                (rule "castDel" (formula "39") (term "1,1,1,0"))
                                                (rule "castDel" (formula "39") (term "2,1,1,0"))
                                                (rule "eqSymm" (formula "39") (term "1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "39") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "39") (term "0,0,0"))
                                                (rule "applyEq" (formula "39") (term "0,0,1,0,0,1,0,0") (ifseqformula "40"))
                                                 (builtin "One Step Simplification" (formula "39"))
                                                (rule "mul_literals" (formula "39") (term "1,0,0,1,0,0"))
                                                (rule "add_literals" (formula "39") (term "0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "39") (term "0,1,0,0"))
                                                (rule "applyEq" (formula "38") (term "0,0") (ifseqformula "40"))
                                                 (builtin "One Step Simplification" (formula "38"))
                                                (rule "true_left" (formula "38"))
                                                (rule "applyEq" (formula "38") (term "0,1,1,0") (ifseqformula "39"))
                                                (rule "getOfSeqSingleton" (formula "38") (term "1,1,0"))
                                                (rule "castDel" (formula "38") (term "1,1,1,0"))
                                                (rule "castDel" (formula "38") (term "2,1,1,0"))
                                                 (builtin "One Step Simplification" (formula "38"))
                                                (rule "true_left" (formula "38"))
                                                (rule "equalityToSeqGetAndSeqLenLeft" (formula "23") (inst "iv=iv"))
                                                (rule "andLeft" (formula "23"))
                                                (rule "lenOfSeqConcat" (formula "23") (term "1"))
                                                 (builtin "One Step Simplification" (formula "23"))
                                                (rule "add_literals" (formula "23") (term "1"))
                                                (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0"))
                                                (rule "applyEq" (formula "24") (term "0,0,1,0,0,1,0,0") (ifseqformula "25"))
                                                (rule "lenOfSeqConcat" (formula "24") (term "0,1,0,0,1,0,0"))
                                                 (builtin "One Step Simplification" (formula "24"))
                                                (rule "add_literals" (formula "24") (term "0,1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "24") (term "1,0,0,1,0,0"))
                                                (rule "add_literals" (formula "24") (term "0,0,1,0,0"))
                                                (rule "applyEq" (formula "23") (term "0,0") (ifseqformula "25"))
                                                (rule "lenOfSeqConcat" (formula "23") (term "0"))
                                                 (builtin "One Step Simplification" (formula "23"))
                                                (rule "add_literals" (formula "23") (term "0"))
                                                 (builtin "One Step Simplification" (formula "23"))
                                                (rule "true_left" (formula "23"))
                                                (rule "applyEq" (formula "23") (term "0,0,1,0") (ifseqformula "24"))
                                                 (builtin "One Step Simplification" (formula "23"))
                                                (rule "true_left" (formula "23"))
                                                (rule "onlyCreatedObjectsAreInLocSets" (formula "16") (ifseqformula "5"))
                                                (rule "replace_known_left" (formula "16") (term "1") (ifseqformula "8"))
                                                 (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "51")))
                                                (rule "true_left" (formula "16"))
                                                (rule "onlyCreatedObjectsAreInLocSets" (formula "37") (ifseqformula "26"))
                                                (rule "replace_known_left" (formula "37") (term "1") (ifseqformula "29"))
                                                 (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "49")))
                                                (rule "true_left" (formula "37"))
                                                (rule "onlyCreatedObjectsAreInLocSets" (formula "40") (ifseqformula "26"))
                                                (rule "replace_known_left" (formula "40") (term "1") (ifseqformula "29"))
                                                 (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "49")))
                                                (rule "true_left" (formula "40"))
                                                 (builtin "Use Dependency Contract" (formula "53") (ifInst ""  (formula "25")) (ifInst ""  (formula "35")) (ifInst ""  (formula "27")) (contract "ArrayList[java.lang.Object::<inv>()].JML accessible clause.0"))
                                                (rule "replaceKnownSelect_taclet0000_9" (formula "43") (term "1,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet100021000000000_28" (formula "43") (term "1,1,0"))
                                                (rule "wellFormedAnonEQ" (formula "43") (term "0,1,0,0,0") (ifseqformula "21"))
                                                (rule "wellFormedAnonEQ" (formula "43") (term "1,1,0,0,0") (ifseqformula "35"))
                                                (rule "wellFormedAnonEQ" (formula "43") (term "0,1,1,0,0,0") (ifseqformula "27"))
                                                (rule "wellFormedAnonEQ" (formula "43") (term "0,0,1,0,0,0") (ifseqformula "14"))
                                                (rule "wellFormedAnonEQ" (formula "43") (term "0,0,0,1,0,0,0") (ifseqformula "6"))
                                                (rule "wellFormedAnonEQ" (formula "43") (term "0,0,1,1,0,0,0") (ifseqformula "21"))
                                                (rule "wellFormedAnonEQ" (formula "43") (term "0,0,0,1,1,0,0,0") (ifseqformula "14"))
                                                (rule "wellFormedAnonEQ" (formula "43") (term "0,0,0,0,1,1,0,0,0") (ifseqformula "6"))
                                                (rule "replace_known_left" (formula "43") (term "1,0,0") (ifseqformula "25"))
                                                 (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "51")) (ifInst ""  (formula "1")) (ifInst ""  (formula "5")) (ifInst ""  (formula "13")) (ifInst ""  (formula "20")) (ifInst ""  (formula "1")) (ifInst ""  (formula "5")) (ifInst ""  (formula "13")) (ifInst ""  (formula "20")) (ifInst ""  (formula "26")) (ifInst ""  (formula "34")) (ifInst ""  (formula "54")) (ifInst ""  (formula "25")))
                                                (rule "notLeft" (formula "43"))
                                                (rule "disjointDefinition" (formula "43") (term "1"))
                                                (rule "pullOutSelect" (formula "43") (term "0,0") (inst "selectSK=java_lang_Object_created__6"))
                                                (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "22"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "52")))
                                                (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "2,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "2,0"))
                                                (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "0,0,0,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "0,0,0,0"))
                                                (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "9"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "applyEqReverse" (formula "44") (term "0,0") (ifseqformula "1"))
                                                (rule "hideAuxiliaryEq" (formula "1"))
                                                (rule "replace_known_left" (formula "43") (term "0") (ifseqformula "8"))
                                                 (builtin "One Step Simplification" (formula "43"))
                                                (rule "commuteIntersection" (formula "43") (term "0"))
                                                (rule "equalityToElementOfRight" (formula "43") (inst "fv=fv") (inst "ov=ov"))
                                                 (builtin "One Step Simplification" (formula "43"))
                                                (rule "allRight" (formula "43") (inst "sk=ov_0"))
                                                (rule "allRight" (formula "43") (inst "sk=fv_0"))
                                                (rule "notRight" (formula "43"))
                                                (rule "elementOfIntersect" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "elementOfSubsetImpliesElementOfSuperset" (formula "2") (ifseqformula "34"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "andLeft" (formula "2"))
                                                (rule "notLeft" (formula "3"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "elementOfSubsetImpliesElementOfSuperset" (formula "1") (ifseqformula "13"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "46")))
                                                (rule "notLeft" (formula "1"))
                                                (rule "pullOutSelect" (formula "47") (term "0") (inst "selectSK=java_lang_Object_created__7"))
                                                (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "47")))
                                                (rule "ifthenelse_negated" (formula "1") (term "0"))
                                                (rule "apply_eq_boolean" (formula "1") (term "1") (ifseqformula "48"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "notLeft" (formula "1"))
                                                (rule "ifEqualsTRUE" (formula "45"))
                                                 (builtin "One Step Simplification" (formula "45"))
                                                (rule "orRight" (formula "45"))
                                                (rule "replace_known_right" (formula "46") (term "0,0") (ifseqformula "45"))
                                                 (builtin "One Step Simplification" (formula "46"))
                                                (rule "pullOutSelect" (formula "45") (term "0") (inst "selectSK=java_lang_Object_created__8"))
                                                (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "17"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "49")))
                                                (rule "ifthenelse_negated" (formula "1") (term "0"))
                                                (rule "apply_eq_boolean" (formula "1") (term "1") (ifseqformula "46"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "notLeft" (formula "1"))
                                                (rule "ifEqualsTRUE" (formula "45"))
                                                 (builtin "One Step Simplification" (formula "45"))
                                                (rule "orRight" (formula "45"))
                                                (rule "replace_known_right" (formula "46") (term "0,0") (ifseqformula "45"))
                                                 (builtin "One Step Simplification" (formula "46"))
                                                (rule "pullOutSelect" (formula "45") (term "0") (inst "selectSK=java_lang_Object_created__9"))
                                                (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "9"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "51")) (ifInst ""  (formula "50")))
                                                (rule "applyEqReverse" (formula "46") (term "0") (ifseqformula "1"))
                                                (rule "hideAuxiliaryEq" (formula "1"))
                                                (rule "hideAuxiliaryEqConcrete2" (formula "51"))
                                                (rule "hideAuxiliaryEqConcrete2" (formula "47"))
                                                (rule "onlyCreatedObjectsAreInLocSets" (formula "2") (ifseqformula "28"))
                                                (rule "replace_known_right" (formula "2") (term "0") (ifseqformula "50"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "onlyCreatedObjectsAreInLocSets" (formula "1") (ifseqformula "8"))
                                                (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "51"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "47")))
                                                (rule "closeFalse" (formula "1"))
                                             )
                                          )
                                       )
                                       (branch "(self_1, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> FALSE"
                                          (rule "eqSymm" (formula "41"))
                                          (rule "applyEqRigid" (formula "42") (term "1") (ifseqformula "41"))
                                          (rule "ifthenelse_split" (formula "19") (term "0"))
                                          (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_ArrayList<<anonHeapFunction>> TRUE"
                                             (rule "applyEqReverse" (formula "28") (term "2,0,0") (ifseqformula "20"))
                                             (rule "applyEqReverse" (formula "28") (term "2,0") (ifseqformula "20"))
                                             (rule "applyEqReverse" (formula "26") (term "2,0,0") (ifseqformula "20"))
                                             (rule "applyEqReverse" (formula "24") (term "1,0") (ifseqformula "20"))
                                             (rule "applyEqReverse" (formula "29") (term "0,1") (ifseqformula "20"))
                                             (rule "applyEqReverse" (formula "21") (term "0") (ifseqformula "20"))
                                             (rule "hideAuxiliaryEq" (formula "20"))
                                             (rule "elementOfSubsetImpliesElementOfSuperset" (formula "19") (ifseqformula "11"))
                                              (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "54")) (ifInst ""  (formula "53")))
                                             (rule "true_left" (formula "19"))
                                             (rule "commuteUnion" (formula "28") (term "1"))
                                             (rule "ifthenelse_split" (formula "55") (term "0,0,1"))
                                             (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> TRUE"
                                                (rule "elementOfSubsetImpliesElementOfSuperset" (formula "1") (ifseqformula "37"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "55")))
                                                (rule "notLeft" (formula "1"))
                                                (rule "pullOutSelect" (formula "47") (term "0") (inst "selectSK=java_lang_Object_created__6"))
                                                (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "25"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "56")))
                                                (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "2,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "2,0"))
                                                (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "0,0,0,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "0,0,0,0"))
                                                (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "10"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "applyEqReverse" (formula "48") (term "0") (ifseqformula "1"))
                                                (rule "close" (formula "48") (ifseqformula "10"))
                                             )
                                             (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> FALSE"
                                                (rule "lenOfSeqConcat" (formula "56") (term "0,1"))
                                                 (builtin "One Step Simplification" (formula "56"))
                                                (rule "add_literals" (formula "56") (term "0,1"))
                                                (rule "qeq_literals" (formula "56") (term "1"))
                                                 (builtin "One Step Simplification" (formula "56"))
                                                (rule "ifthenelse_split" (formula "27") (term "0"))
                                                (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_add<<anonHeapFunction>> TRUE"
                                                   (rule "applyEqReverse" (formula "29") (term "0") (ifseqformula "28"))
                                                   (rule "hideAuxiliaryEq" (formula "28"))
                                                   (rule "elementOfSubsetImpliesElementOfSuperset" (formula "27") (ifseqformula "20"))
                                                   (rule "elementOfUnion" (formula "27"))
                                                    (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "19")))
                                                   (rule "true_left" (formula "27"))
                                                   (rule "ifthenelse_split" (formula "25") (term "0"))
                                                   (branch "(self_0, List::$seq) in self_0.footprint@anon_heap_add<<anonHeapFunction>> TRUE"
                                                      (rule "elementOfSubsetImpliesElementOfSuperset" (formula "25") (ifseqformula "20"))
                                                      (rule "elementOfUnion" (formula "25"))
                                                       (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "16")))
                                                      (rule "true_left" (formula "25"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "36") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "36"))
                                                      (rule "andLeft" (formula "36"))
                                                      (rule "inEqSimp_ltToLeq" (formula "37") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "37") (term "0,0,0"))
                                                      (rule "applyEq" (formula "36") (term "0,0") (ifseqformula "38"))
                                                       (builtin "One Step Simplification" (formula "36"))
                                                      (rule "true_left" (formula "36"))
                                                      (rule "applyEq" (formula "36") (term "0,0,1,0") (ifseqformula "37"))
                                                       (builtin "One Step Simplification" (formula "36"))
                                                      (rule "true_left" (formula "36"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "17") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "17"))
                                                      (rule "andLeft" (formula "17"))
                                                      (rule "getOfSeqSingleton" (formula "18") (term "1,1,0"))
                                                      (rule "castDel" (formula "18") (term "2,1,1,0"))
                                                      (rule "castDel" (formula "18") (term "1,1,1,0"))
                                                      (rule "eqSymm" (formula "18") (term "1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
                                                      (rule "applyEq" (formula "18") (term "0,1,1,0") (ifseqformula "19"))
                                                      (rule "getOfSeqSingleton" (formula "18") (term "1,1,0"))
                                                      (rule "castDel" (formula "18") (term "1,1,1,0"))
                                                      (rule "castDel" (formula "18") (term "2,1,1,0"))
                                                       (builtin "One Step Simplification" (formula "18"))
                                                      (rule "true_left" (formula "18"))
                                                      (rule "applyEq" (formula "17") (term "0,0") (ifseqformula "18"))
                                                       (builtin "One Step Simplification" (formula "17"))
                                                      (rule "true_left" (formula "17"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "42") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "42"))
                                                      (rule "equal_literals" (formula "42") (term "0"))
                                                       (builtin "One Step Simplification" (formula "42"))
                                                      (rule "closeFalse" (formula "42"))
                                                   )
                                                   (branch "(self_0, List::$seq) in self_0.footprint@anon_heap_add<<anonHeapFunction>> FALSE"
                                                      (rule "eqSymm" (formula "25"))
                                                      (rule "applyEqRigid" (formula "26") (term "1") (ifseqformula "25"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "35") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "35"))
                                                      (rule "andLeft" (formula "35"))
                                                      (rule "inEqSimp_ltToLeq" (formula "36") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "36") (term "0,0,0"))
                                                      (rule "applyEq" (formula "35") (term "0,0") (ifseqformula "37"))
                                                       (builtin "One Step Simplification" (formula "35"))
                                                      (rule "true_left" (formula "35"))
                                                      (rule "applyEq" (formula "35") (term "0,0,1,0") (ifseqformula "36"))
                                                       (builtin "One Step Simplification" (formula "35"))
                                                      (rule "true_left" (formula "35"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "17") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "17"))
                                                      (rule "andLeft" (formula "17"))
                                                      (rule "getOfSeqSingleton" (formula "18") (term "1,1,0"))
                                                      (rule "castDel" (formula "18") (term "2,1,1,0"))
                                                      (rule "castDel" (formula "18") (term "1,1,1,0"))
                                                      (rule "eqSymm" (formula "18") (term "1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
                                                      (rule "applyEq" (formula "17") (term "0,0") (ifseqformula "19"))
                                                       (builtin "One Step Simplification" (formula "17"))
                                                      (rule "true_left" (formula "17"))
                                                      (rule "applyEq" (formula "17") (term "0,1,1,0") (ifseqformula "18"))
                                                      (rule "getOfSeqSingleton" (formula "17") (term "1,1,0"))
                                                      (rule "castDel" (formula "17") (term "1,1,1,0"))
                                                      (rule "castDel" (formula "17") (term "2,1,1,0"))
                                                       (builtin "One Step Simplification" (formula "17"))
                                                      (rule "true_left" (formula "17"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "41") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "41"))
                                                      (rule "equal_literals" (formula "41") (term "0"))
                                                       (builtin "One Step Simplification" (formula "41"))
                                                      (rule "closeFalse" (formula "41"))
                                                   )
                                                )
                                                (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_add<<anonHeapFunction>> FALSE"
                                                   (rule "applyEqReverse" (formula "28") (term "0") (ifseqformula "27"))
                                                    (builtin "One Step Simplification" (formula "28"))
                                                   (rule "true_left" (formula "28"))
                                                   (rule "hideAuxiliaryEq" (formula "27"))
                                                   (rule "ifthenelse_split" (formula "25") (term "0"))
                                                   (branch "(self_0, List::$seq) in self_0.footprint@anon_heap_add<<anonHeapFunction>> TRUE"
                                                      (rule "elementOfSubsetImpliesElementOfSuperset" (formula "25") (ifseqformula "20"))
                                                      (rule "elementOfUnion" (formula "25"))
                                                       (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "16")))
                                                      (rule "true_left" (formula "25"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "34") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "34"))
                                                      (rule "andLeft" (formula "34"))
                                                      (rule "inEqSimp_ltToLeq" (formula "35") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "35") (term "0,0,0"))
                                                      (rule "applyEq" (formula "35") (term "0,0,1,0,0,1,0,0") (ifseqformula "36"))
                                                       (builtin "One Step Simplification" (formula "35"))
                                                      (rule "mul_literals" (formula "35") (term "1,0,0,1,0,0"))
                                                      (rule "add_zero_right" (formula "35") (term "0,0,1,0,0"))
                                                      (rule "applyEq" (formula "34") (term "0,0") (ifseqformula "36"))
                                                       (builtin "One Step Simplification" (formula "34"))
                                                      (rule "true_left" (formula "34"))
                                                      (rule "applyEq" (formula "34") (term "0,0,1,0") (ifseqformula "35"))
                                                       (builtin "One Step Simplification" (formula "34"))
                                                      (rule "true_left" (formula "34"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "17") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "17"))
                                                      (rule "andLeft" (formula "17"))
                                                      (rule "getOfSeqSingleton" (formula "18") (term "1,1,0"))
                                                      (rule "castDel" (formula "18") (term "1,1,1,0"))
                                                      (rule "castDel" (formula "18") (term "2,1,1,0"))
                                                      (rule "eqSymm" (formula "18") (term "1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
                                                      (rule "applyEq" (formula "18") (term "0,1,1,0") (ifseqformula "19"))
                                                      (rule "getOfSeqSingleton" (formula "18") (term "1,1,0"))
                                                      (rule "castDel" (formula "18") (term "1,1,1,0"))
                                                      (rule "castDel" (formula "18") (term "2,1,1,0"))
                                                       (builtin "One Step Simplification" (formula "18"))
                                                      (rule "true_left" (formula "18"))
                                                      (rule "applyEq" (formula "17") (term "0,0") (ifseqformula "18"))
                                                       (builtin "One Step Simplification" (formula "17"))
                                                      (rule "true_left" (formula "17"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "40") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "40"))
                                                      (rule "equal_literals" (formula "40") (term "0"))
                                                       (builtin "One Step Simplification" (formula "40"))
                                                      (rule "closeFalse" (formula "40"))
                                                   )
                                                   (branch "(self_0, List::$seq) in self_0.footprint@anon_heap_add<<anonHeapFunction>> FALSE"
                                                      (rule "eqSymm" (formula "25"))
                                                      (rule "applyEq" (formula "26") (term "1") (ifseqformula "25"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "33") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "33"))
                                                      (rule "andLeft" (formula "33"))
                                                      (rule "inEqSimp_ltToLeq" (formula "34") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "34") (term "0,0,0"))
                                                      (rule "applyEq" (formula "34") (term "0,0,1,0,0,1,0,0") (ifseqformula "35"))
                                                       (builtin "One Step Simplification" (formula "34"))
                                                      (rule "mul_literals" (formula "34") (term "1,0,0,1,0,0"))
                                                      (rule "add_zero_right" (formula "34") (term "0,0,1,0,0"))
                                                      (rule "applyEq" (formula "33") (term "0,0") (ifseqformula "35"))
                                                       (builtin "One Step Simplification" (formula "33"))
                                                      (rule "true_left" (formula "33"))
                                                      (rule "applyEq" (formula "33") (term "0,0,1,0") (ifseqformula "34"))
                                                       (builtin "One Step Simplification" (formula "33"))
                                                      (rule "true_left" (formula "33"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "17") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "17"))
                                                      (rule "andLeft" (formula "17"))
                                                      (rule "getOfSeqSingleton" (formula "18") (term "1,1,0"))
                                                      (rule "castDel" (formula "18") (term "2,1,1,0"))
                                                      (rule "castDel" (formula "18") (term "1,1,1,0"))
                                                      (rule "eqSymm" (formula "18") (term "1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
                                                      (rule "applyEq" (formula "17") (term "0,0") (ifseqformula "19"))
                                                       (builtin "One Step Simplification" (formula "17"))
                                                      (rule "true_left" (formula "17"))
                                                      (rule "applyEq" (formula "17") (term "0,1,1,0") (ifseqformula "18"))
                                                      (rule "getOfSeqSingleton" (formula "17") (term "1,1,0"))
                                                      (rule "castDel" (formula "17") (term "2,1,1,0"))
                                                      (rule "castDel" (formula "17") (term "1,1,1,0"))
                                                       (builtin "One Step Simplification" (formula "17"))
                                                      (rule "true_left" (formula "17"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "39") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "39"))
                                                      (rule "equal_literals" (formula "39") (term "0"))
                                                       (builtin "One Step Simplification" (formula "39"))
                                                      (rule "closeFalse" (formula "39"))
                                                   )
                                                )
                                             )
                                          )
                                          (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_ArrayList<<anonHeapFunction>> FALSE"
                                             (rule "applyEqReverse" (formula "27") (term "2,0,0") (ifseqformula "19"))
                                             (rule "applyEqReverse" (formula "25") (term "2,0,0") (ifseqformula "19"))
                                             (rule "applyEqReverse" (formula "23") (term "1,0") (ifseqformula "19"))
                                             (rule "applyEqReverse" (formula "28") (term "0,1") (ifseqformula "19"))
                                             (rule "applyEqReverse" (formula "27") (term "2,0") (ifseqformula "19"))
                                             (rule "applyEqReverse" (formula "20") (term "0") (ifseqformula "19"))
                                              (builtin "One Step Simplification" (formula "20"))
                                             (rule "true_left" (formula "20"))
                                             (rule "hideAuxiliaryEq" (formula "19"))
                                             (rule "replace_known_right" (formula "25") (term "0,0") (ifseqformula "44"))
                                              (builtin "One Step Simplification" (formula "25"))
                                             (rule "applyEqReverse" (formula "26") (term "0") (ifseqformula "25"))
                                              (builtin "One Step Simplification" (formula "26"))
                                             (rule "true_left" (formula "26"))
                                             (rule "hideAuxiliaryEq" (formula "25"))
                                             (rule "replace_known_left" (formula "23") (term "0,0") (ifseqformula "16"))
                                              (builtin "One Step Simplification" (formula "23"))
                                             (rule "ifthenelse_split" (formula "52") (term "0,0,1"))
                                             (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> TRUE"
                                                (rule "elementOfSubsetImpliesElementOfSuperset" (formula "1") (ifseqformula "33"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "52")))
                                                (rule "notLeft" (formula "1"))
                                                (rule "pullOutSelect" (formula "43") (term "0") (inst "selectSK=java_lang_Object_created__6"))
                                                (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")))
                                                (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "2,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "2,0"))
                                                (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "0,0,0,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "0,0,0,0"))
                                                (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "10"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "applyEqReverse" (formula "44") (term "0") (ifseqformula "1"))
                                                (rule "close" (formula "44") (ifseqformula "10"))
                                             )
                                             (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> FALSE"
                                                (rule "lenOfSeqConcat" (formula "53") (term "0,1"))
                                                 (builtin "One Step Simplification" (formula "53"))
                                                (rule "add_literals" (formula "53") (term "0,1"))
                                                (rule "qeq_literals" (formula "53") (term "1"))
                                                 (builtin "One Step Simplification" (formula "53"))
                                                (rule "equalityToSeqGetAndSeqLenLeft" (formula "31") (inst "iv=iv"))
                                                 (builtin "One Step Simplification" (formula "31"))
                                                (rule "andLeft" (formula "31"))
                                                (rule "inEqSimp_ltToLeq" (formula "32") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "32") (term "0,0,0"))
                                                (rule "applyEq" (formula "32") (term "0,0,1,0,0,1,0,0") (ifseqformula "33"))
                                                 (builtin "One Step Simplification" (formula "32"))
                                                (rule "mul_literals" (formula "32") (term "1,0,0,1,0,0"))
                                                (rule "add_literals" (formula "32") (term "0,0,1,0,0"))
                                                (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "33"))
                                                 (builtin "One Step Simplification" (formula "31"))
                                                (rule "true_left" (formula "31"))
                                                (rule "applyEq" (formula "31") (term "0,0,1,0") (ifseqformula "32"))
                                                 (builtin "One Step Simplification" (formula "31"))
                                                (rule "true_left" (formula "31"))
                                                (rule "equalityToSeqGetAndSeqLenLeft" (formula "17") (inst "iv=iv"))
                                                 (builtin "One Step Simplification" (formula "17"))
                                                (rule "andLeft" (formula "17"))
                                                (rule "getOfSeqSingleton" (formula "18") (term "1,1,0"))
                                                (rule "castDel" (formula "18") (term "1,1,1,0"))
                                                (rule "castDel" (formula "18") (term "2,1,1,0"))
                                                (rule "eqSymm" (formula "18") (term "1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
                                                (rule "applyEq" (formula "18") (term "0,1,1,0") (ifseqformula "19"))
                                                (rule "getOfSeqSingleton" (formula "18") (term "1,1,0"))
                                                (rule "castDel" (formula "18") (term "2,1,1,0"))
                                                (rule "castDel" (formula "18") (term "1,1,1,0"))
                                                 (builtin "One Step Simplification" (formula "18"))
                                                (rule "true_left" (formula "18"))
                                                (rule "applyEq" (formula "17") (term "0,0") (ifseqformula "18"))
                                                 (builtin "One Step Simplification" (formula "17"))
                                                (rule "true_left" (formula "17"))
                                                (rule "equalityToSeqGetAndSeqLenLeft" (formula "37") (inst "iv=iv"))
                                                 (builtin "One Step Simplification" (formula "37"))
                                                (rule "equal_literals" (formula "37") (term "0"))
                                                 (builtin "One Step Simplification" (formula "37"))
                                                (rule "closeFalse" (formula "37"))
                                             )
                                          )
                                       )
                                    )
                                    (branch "(self_1, List::$footprint) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> FALSE"
                                       (rule "applyEqReverse" (formula "44") (term "0") (ifseqformula "43"))
                                        (builtin "One Step Simplification" (formula "44"))
                                       (rule "true_left" (formula "44"))
                                       (rule "hideAuxiliaryEq" (formula "43"))
                                       (rule "ifthenelse_split" (formula "41") (term "0"))
                                       (branch "(self_1, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> TRUE"
                                          (rule "elementOfSubsetImpliesElementOfSuperset" (formula "41") (ifseqformula "36"))
                                           (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "51")))
                                          (rule "replaceKnownSelect_taclet0000000_18" (formula "41") (term "0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet0000000_21" (formula "41") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "41"))
                                          (rule "true_left" (formula "41"))
                                          (rule "ifthenelse_split" (formula "19") (term "0"))
                                          (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_ArrayList<<anonHeapFunction>> TRUE"
                                             (rule "applyEqReverse" (formula "29") (term "0,1") (ifseqformula "20"))
                                             (rule "applyEqReverse" (formula "26") (term "2,0,0") (ifseqformula "20"))
                                             (rule "applyEqReverse" (formula "28") (term "2,0,0") (ifseqformula "20"))
                                             (rule "applyEqReverse" (formula "21") (term "0") (ifseqformula "20"))
                                             (rule "applyEqReverse" (formula "28") (term "2,0") (ifseqformula "20"))
                                             (rule "applyEqReverse" (formula "24") (term "1,0") (ifseqformula "20"))
                                             (rule "hideAuxiliaryEq" (formula "20"))
                                             (rule "elementOfSubsetImpliesElementOfSuperset" (formula "19") (ifseqformula "11"))
                                              (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "53")) (ifInst ""  (formula "52")))
                                             (rule "true_left" (formula "19"))
                                             (rule "commuteUnion" (formula "28") (term "1"))
                                             (rule "ifthenelse_split" (formula "54") (term "0,0,1"))
                                             (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> TRUE"
                                                (rule "elementOfSubsetImpliesElementOfSuperset" (formula "1") (ifseqformula "37"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "54")))
                                                (rule "notLeft" (formula "1"))
                                                (rule "pullOutSelect" (formula "46") (term "0") (inst "selectSK=java_lang_Object_created__6"))
                                                (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "25"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "55")))
                                                (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "2,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "2,0"))
                                                (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "0,0,0,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "0,0,0,0"))
                                                (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "10"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "applyEqReverse" (formula "47") (term "0") (ifseqformula "1"))
                                                (rule "close" (formula "47") (ifseqformula "10"))
                                             )
                                             (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> FALSE"
                                                (rule "lenOfSeqConcat" (formula "55") (term "0,1"))
                                                 (builtin "One Step Simplification" (formula "55"))
                                                (rule "add_literals" (formula "55") (term "0,1"))
                                                (rule "qeq_literals" (formula "55") (term "1"))
                                                 (builtin "One Step Simplification" (formula "55"))
                                                (rule "ifthenelse_split" (formula "25") (term "0"))
                                                (branch "(self_0, List::$seq) in self_0.footprint@anon_heap_add<<anonHeapFunction>> TRUE"
                                                   (rule "elementOfSubsetImpliesElementOfSuperset" (formula "25") (ifseqformula "20"))
                                                   (rule "elementOfUnion" (formula "25"))
                                                    (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "16")))
                                                   (rule "true_left" (formula "25"))
                                                   (rule "ifthenelse_split" (formula "28") (term "0"))
                                                   (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_add<<anonHeapFunction>> TRUE"
                                                      (rule "applyEqReverse" (formula "30") (term "0") (ifseqformula "29"))
                                                      (rule "hideAuxiliaryEq" (formula "29"))
                                                      (rule "elementOfSubsetImpliesElementOfSuperset" (formula "28") (ifseqformula "20"))
                                                      (rule "elementOfUnion" (formula "28"))
                                                       (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "19")))
                                                      (rule "true_left" (formula "28"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "36") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "36"))
                                                      (rule "andLeft" (formula "36"))
                                                      (rule "inEqSimp_ltToLeq" (formula "37") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "37") (term "0,0,0"))
                                                      (rule "applyEq" (formula "36") (term "0,0") (ifseqformula "38"))
                                                       (builtin "One Step Simplification" (formula "36"))
                                                      (rule "true_left" (formula "36"))
                                                      (rule "applyEq" (formula "36") (term "0,0,1,0") (ifseqformula "37"))
                                                       (builtin "One Step Simplification" (formula "36"))
                                                      (rule "true_left" (formula "36"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "44") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "44"))
                                                      (rule "andLeft" (formula "44"))
                                                      (rule "getOfSeqSingleton" (formula "45") (term "1,1,0"))
                                                      (rule "castDel" (formula "45") (term "1,1,1,0"))
                                                      (rule "castDel" (formula "45") (term "2,1,1,0"))
                                                      (rule "eqSymm" (formula "45") (term "1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "45") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "45") (term "0,0,0"))
                                                      (rule "applyEq" (formula "45") (term "0,1,1,0") (ifseqformula "46"))
                                                      (rule "getOfSeqSingleton" (formula "45") (term "1,1,0"))
                                                      (rule "castDel" (formula "45") (term "2,1,1,0"))
                                                      (rule "castDel" (formula "45") (term "1,1,1,0"))
                                                       (builtin "One Step Simplification" (formula "45"))
                                                      (rule "true_left" (formula "45"))
                                                      (rule "applyEq" (formula "44") (term "0,0") (ifseqformula "45"))
                                                       (builtin "One Step Simplification" (formula "44"))
                                                      (rule "true_left" (formula "44"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "17") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "17"))
                                                      (rule "andLeft" (formula "17"))
                                                      (rule "getOfSeqSingleton" (formula "18") (term "1,1,0"))
                                                      (rule "castDel" (formula "18") (term "1,1,1,0"))
                                                      (rule "castDel" (formula "18") (term "2,1,1,0"))
                                                      (rule "eqSymm" (formula "18") (term "1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
                                                      (rule "applyEq" (formula "18") (term "0,0,1,0,0,1,0,0") (ifseqformula "19"))
                                                       (builtin "One Step Simplification" (formula "18"))
                                                      (rule "mul_literals" (formula "18") (term "1,0,0,1,0,0"))
                                                      (rule "add_literals" (formula "18") (term "0,0,1,0,0"))
                                                      (rule "add_zero_left" (formula "18") (term "0,1,0,0"))
                                                      (rule "applyEq" (formula "17") (term "0,0") (ifseqformula "19"))
                                                       (builtin "One Step Simplification" (formula "17"))
                                                      (rule "true_left" (formula "17"))
                                                      (rule "applyEq" (formula "17") (term "0,1,1,0") (ifseqformula "18"))
                                                      (rule "getOfSeqSingleton" (formula "17") (term "1,1,0"))
                                                      (rule "castDel" (formula "17") (term "2,1,1,0"))
                                                      (rule "castDel" (formula "17") (term "1,1,1,0"))
                                                       (builtin "One Step Simplification" (formula "17"))
                                                      (rule "true_left" (formula "17"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "43") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "43"))
                                                      (rule "andLeft" (formula "43"))
                                                      (rule "getOfSeqSingleton" (formula "44") (term "1,1,0"))
                                                      (rule "castDel" (formula "44") (term "1,1,1,0"))
                                                      (rule "castDel" (formula "44") (term "2,1,1,0"))
                                                      (rule "eqSymm" (formula "44") (term "1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "44") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "44") (term "0,0,0"))
                                                      (rule "applyEq" (formula "44") (term "0,1,1,0") (ifseqformula "45"))
                                                      (rule "getOfSeqSingleton" (formula "44") (term "1,1,0"))
                                                      (rule "castDel" (formula "44") (term "2,1,1,0"))
                                                      (rule "castDel" (formula "44") (term "1,1,1,0"))
                                                       (builtin "One Step Simplification" (formula "44"))
                                                      (rule "true_left" (formula "44"))
                                                      (rule "applyEq" (formula "43") (term "0,0") (ifseqformula "44"))
                                                       (builtin "One Step Simplification" (formula "43"))
                                                      (rule "true_left" (formula "43"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "26") (inst "iv=iv"))
                                                      (rule "andLeft" (formula "26"))
                                                      (rule "lenOfSeqConcat" (formula "26") (term "1"))
                                                       (builtin "One Step Simplification" (formula "26"))
                                                      (rule "add_literals" (formula "26") (term "1"))
                                                      (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0"))
                                                      (rule "applyEq" (formula "27") (term "0,0,1,0,0,1,0,0") (ifseqformula "28"))
                                                      (rule "lenOfSeqConcat" (formula "27") (term "0,1,0,0,1,0,0"))
                                                       (builtin "One Step Simplification" (formula "27"))
                                                      (rule "add_literals" (formula "27") (term "0,1,0,0,1,0,0"))
                                                      (rule "mul_literals" (formula "27") (term "1,0,0,1,0,0"))
                                                      (rule "add_literals" (formula "27") (term "0,0,1,0,0"))
                                                      (rule "applyEq" (formula "26") (term "0,0") (ifseqformula "28"))
                                                      (rule "lenOfSeqConcat" (formula "26") (term "0"))
                                                       (builtin "One Step Simplification" (formula "26"))
                                                      (rule "add_literals" (formula "26") (term "0"))
                                                       (builtin "One Step Simplification" (formula "26"))
                                                      (rule "true_left" (formula "26"))
                                                      (rule "applyEq" (formula "26") (term "0,0,1,0") (ifseqformula "27"))
                                                       (builtin "One Step Simplification" (formula "26"))
                                                      (rule "true_left" (formula "26"))
                                                      (rule "onlyCreatedObjectsAreInLocSets" (formula "16") (ifseqformula "5"))
                                                      (rule "replace_known_left" (formula "16") (term "1") (ifseqformula "8"))
                                                       (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "54")))
                                                      (rule "true_left" (formula "16"))
                                                      (rule "onlyCreatedObjectsAreInLocSets" (formula "42") (ifseqformula "31"))
                                                      (rule "replace_known_left" (formula "42") (term "1") (ifseqformula "34"))
                                                       (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "52")))
                                                      (rule "true_left" (formula "42"))
                                                      (rule "onlyCreatedObjectsAreInLocSets" (formula "25") (ifseqformula "13"))
                                                      (rule "replace_known_right" (formula "25") (term "0") (ifseqformula "54"))
                                                       (builtin "One Step Simplification" (formula "25"))
                                                      (rule "onlyCreatedObjectsAreInLocSets" (formula "19") (ifseqformula "5"))
                                                      (rule "replace_known_left" (formula "19") (term "1") (ifseqformula "8"))
                                                       (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "55")))
                                                      (rule "true_left" (formula "19"))
                                                      (rule "onlyCreatedObjectsAreInLocSets" (formula "29") (ifseqformula "13"))
                                                      (rule "replace_known_left" (formula "29") (term "1") (ifseqformula "25"))
                                                       (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "55")))
                                                      (rule "true_left" (formula "29"))
                                                       (builtin "Use Dependency Contract" (formula "57") (ifInst ""  (formula "31")) (ifInst ""  (formula "41")) (ifInst ""  (formula "33")) (contract "ArrayList[java.lang.Object::<inv>()].JML accessible clause.0"))
                                                      (rule "replaceKnownSelect_taclet0000_9" (formula "47") (term "1,1,0"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet001001021000000000_28" (formula "47") (term "1,1,0"))
                                                      (rule "wellFormedAnonEQ" (formula "47") (term "0,1,0,0,0") (ifseqformula "23"))
                                                      (rule "wellFormedAnonEQ" (formula "47") (term "1,1,0,0,0") (ifseqformula "41"))
                                                      (rule "wellFormedAnonEQ" (formula "47") (term "0,1,1,0,0,0") (ifseqformula "33"))
                                                      (rule "wellFormedAnonEQ" (formula "47") (term "0,0,1,0,0,0") (ifseqformula "14"))
                                                      (rule "wellFormedAnonEQ" (formula "47") (term "0,0,0,1,0,0,0") (ifseqformula "6"))
                                                      (rule "wellFormedAnonEQ" (formula "47") (term "0,0,1,1,0,0,0") (ifseqformula "23"))
                                                      (rule "wellFormedAnonEQ" (formula "47") (term "0,0,0,1,1,0,0,0") (ifseqformula "14"))
                                                      (rule "wellFormedAnonEQ" (formula "47") (term "0,0,0,0,1,1,0,0,0") (ifseqformula "6"))
                                                      (rule "replace_known_left" (formula "47") (term "1,0,0") (ifseqformula "31"))
                                                       (builtin "One Step Simplification" (formula "47") (ifInst ""  (formula "55")) (ifInst ""  (formula "1")) (ifInst ""  (formula "5")) (ifInst ""  (formula "13")) (ifInst ""  (formula "22")) (ifInst ""  (formula "1")) (ifInst ""  (formula "5")) (ifInst ""  (formula "13")) (ifInst ""  (formula "22")) (ifInst ""  (formula "32")) (ifInst ""  (formula "40")) (ifInst ""  (formula "58")) (ifInst ""  (formula "31")))
                                                      (rule "notLeft" (formula "47"))
                                                      (rule "disjointDefinition" (formula "47") (term "1"))
                                                      (rule "pullOutSelect" (formula "47") (term "0,0") (inst "selectSK=java_lang_Object_created__6"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
                                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "56")))
                                                      (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "2,0"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "2,0"))
                                                      (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "0,0,0,0"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "0,0,0,0"))
                                                      (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "9"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "applyEqReverse" (formula "48") (term "0,0") (ifseqformula "1"))
                                                      (rule "hideAuxiliaryEq" (formula "1"))
                                                      (rule "replace_known_left" (formula "47") (term "0") (ifseqformula "8"))
                                                       (builtin "One Step Simplification" (formula "47"))
                                                      (rule "equalityToElementOfRight" (formula "47") (inst "fv=fv") (inst "ov=ov"))
                                                       (builtin "One Step Simplification" (formula "47"))
                                                      (rule "allRight" (formula "47") (inst "sk=ov_0"))
                                                      (rule "allRight" (formula "47") (inst "sk=fv_0"))
                                                      (rule "notRight" (formula "47"))
                                                      (rule "elementOfIntersect" (formula "1"))
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "elementOfSubsetImpliesElementOfSuperset" (formula "2") (ifseqformula "32"))
                                                      (rule "elementOfSubsetImpliesElementOfSuperset" (formula "1") (ifseqformula "41"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "notLeft" (formula "2"))
                                                      (rule "notLeft" (formula "1"))
                                                      (rule "elementOfUnion" (formula "2"))
                                                       (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "50")))
                                                      (rule "pullOutSelect" (formula "51") (term "0") (inst "selectSK=java_lang_Object_created__7"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "27"))
                                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "51")))
                                                      (rule "ifthenelse_negated" (formula "1") (term "0"))
                                                      (rule "apply_eq_boolean_rigid" (formula "1") (term "1") (ifseqformula "52"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "notLeft" (formula "1"))
                                                      (rule "ifEqualsTRUE" (formula "50"))
                                                       (builtin "One Step Simplification" (formula "50"))
                                                      (rule "orRight" (formula "50"))
                                                      (rule "replace_known_right" (formula "51") (term "0,0") (ifseqformula "50"))
                                                       (builtin "One Step Simplification" (formula "51"))
                                                      (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "50"))
                                                       (builtin "One Step Simplification" (formula "2"))
                                                      (rule "true_left" (formula "2"))
                                                      (rule "pullOutSelect" (formula "49") (term "0") (inst "selectSK=java_lang_Object_created__8"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "17"))
                                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "52")))
                                                      (rule "ifthenelse_negated" (formula "1") (term "0"))
                                                      (rule "apply_eq_boolean" (formula "1") (term "1") (ifseqformula "50"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "notLeft" (formula "1"))
                                                      (rule "ifEqualsTRUE" (formula "49"))
                                                       (builtin "One Step Simplification" (formula "49"))
                                                      (rule "orRight" (formula "49"))
                                                      (rule "replace_known_right" (formula "50") (term "0,0") (ifseqformula "49"))
                                                       (builtin "One Step Simplification" (formula "50"))
                                                      (rule "pullOutSelect" (formula "49") (term "0") (inst "selectSK=java_lang_Object_created__9"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "9"))
                                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "54")))
                                                      (rule "ifthenelse_negated" (formula "1") (term "0"))
                                                      (rule "apply_eq_boolean_rigid" (formula "1") (term "1") (ifseqformula "50"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "notLeft" (formula "1"))
                                                      (rule "ifEqualsTRUE" (formula "49"))
                                                       (builtin "One Step Simplification" (formula "49"))
                                                      (rule "orRight" (formula "49"))
                                                      (rule "replace_known_right" (formula "50") (term "0,0") (ifseqformula "49"))
                                                       (builtin "One Step Simplification" (formula "50"))
                                                      (rule "hideAuxiliaryEqConcrete2" (formula "56"))
                                                      (rule "hideAuxiliaryEqConcrete2" (formula "53"))
                                                      (rule "hideAuxiliaryEqConcrete2" (formula "51"))
                                                      (rule "onlyCreatedObjectsAreInLocSets" (formula "2") (ifseqformula "24"))
                                                      (rule "replace_known_right" (formula "2") (term "0") (ifseqformula "54"))
                                                       (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "53")))
                                                      (rule "closeFalse" (formula "2"))
                                                   )
                                                   (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_add<<anonHeapFunction>> FALSE"
                                                      (rule "applyEqReverse" (formula "29") (term "0") (ifseqformula "28"))
                                                       (builtin "One Step Simplification" (formula "29"))
                                                      (rule "true_left" (formula "29"))
                                                      (rule "hideAuxiliaryEq" (formula "28"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "42") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "42"))
                                                      (rule "andLeft" (formula "42"))
                                                      (rule "getOfSeqSingleton" (formula "43") (term "1,1,0"))
                                                      (rule "castDel" (formula "43") (term "1,1,1,0"))
                                                      (rule "castDel" (formula "43") (term "2,1,1,0"))
                                                      (rule "eqSymm" (formula "43") (term "1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "43") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "43") (term "0,0,0"))
                                                      (rule "applyEqRigid" (formula "43") (term "0,0,1,0,0,1,0,0") (ifseqformula "44"))
                                                       (builtin "One Step Simplification" (formula "43"))
                                                      (rule "mul_literals" (formula "43") (term "1,0,0,1,0,0"))
                                                      (rule "add_literals" (formula "43") (term "0,0,1,0,0"))
                                                      (rule "add_zero_left" (formula "43") (term "0,1,0,0"))
                                                      (rule "applyEqRigid" (formula "42") (term "0,0") (ifseqformula "44"))
                                                       (builtin "One Step Simplification" (formula "42"))
                                                      (rule "true_left" (formula "42"))
                                                      (rule "applyEq" (formula "42") (term "0,1,1,0") (ifseqformula "43"))
                                                      (rule "getOfSeqSingleton" (formula "42") (term "1,1,0"))
                                                      (rule "castDel" (formula "42") (term "1,1,1,0"))
                                                      (rule "castDel" (formula "42") (term "2,1,1,0"))
                                                       (builtin "One Step Simplification" (formula "42"))
                                                      (rule "true_left" (formula "42"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "34") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "34"))
                                                      (rule "andLeft" (formula "34"))
                                                      (rule "inEqSimp_ltToLeq" (formula "35") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "35") (term "0,0,0"))
                                                      (rule "applyEq" (formula "35") (term "0,0,1,0") (ifseqformula "36"))
                                                       (builtin "One Step Simplification" (formula "35"))
                                                      (rule "true_left" (formula "35"))
                                                      (rule "applyEq" (formula "34") (term "0,0") (ifseqformula "35"))
                                                       (builtin "One Step Simplification" (formula "34"))
                                                      (rule "true_left" (formula "34"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "17") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "17"))
                                                      (rule "andLeft" (formula "17"))
                                                      (rule "getOfSeqSingleton" (formula "18") (term "1,1,0"))
                                                      (rule "castDel" (formula "18") (term "1,1,1,0"))
                                                      (rule "castDel" (formula "18") (term "2,1,1,0"))
                                                      (rule "eqSymm" (formula "18") (term "1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
                                                      (rule "applyEq" (formula "18") (term "0,0,1,0,0,1,0,0") (ifseqformula "19"))
                                                       (builtin "One Step Simplification" (formula "18"))
                                                      (rule "mul_literals" (formula "18") (term "1,0,0,1,0,0"))
                                                      (rule "add_literals" (formula "18") (term "0,0,1,0,0"))
                                                      (rule "add_zero_left" (formula "18") (term "0,1,0,0"))
                                                      (rule "applyEq" (formula "17") (term "0,0") (ifseqformula "19"))
                                                       (builtin "One Step Simplification" (formula "17"))
                                                      (rule "true_left" (formula "17"))
                                                      (rule "applyEq" (formula "17") (term "0,1,1,0") (ifseqformula "18"))
                                                      (rule "getOfSeqSingleton" (formula "17") (term "1,1,0"))
                                                      (rule "castDel" (formula "17") (term "2,1,1,0"))
                                                      (rule "castDel" (formula "17") (term "1,1,1,0"))
                                                       (builtin "One Step Simplification" (formula "17"))
                                                      (rule "true_left" (formula "17"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "41") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "41"))
                                                      (rule "andLeft" (formula "41"))
                                                      (rule "getOfSeqSingleton" (formula "42") (term "1,1,0"))
                                                      (rule "castDel" (formula "42") (term "2,1,1,0"))
                                                      (rule "castDel" (formula "42") (term "1,1,1,0"))
                                                      (rule "eqSymm" (formula "42") (term "1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "42") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "42") (term "0,0,0"))
                                                      (rule "applyEq" (formula "42") (term "0,1,1,0") (ifseqformula "43"))
                                                      (rule "getOfSeqSingleton" (formula "42") (term "1,1,0"))
                                                      (rule "castDel" (formula "42") (term "2,1,1,0"))
                                                      (rule "castDel" (formula "42") (term "1,1,1,0"))
                                                       (builtin "One Step Simplification" (formula "42"))
                                                      (rule "true_left" (formula "42"))
                                                      (rule "applyEq" (formula "41") (term "0,0") (ifseqformula "42"))
                                                       (builtin "One Step Simplification" (formula "41"))
                                                      (rule "true_left" (formula "41"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "26") (inst "iv=iv"))
                                                      (rule "andLeft" (formula "26"))
                                                      (rule "lenOfSeqConcat" (formula "26") (term "1"))
                                                       (builtin "One Step Simplification" (formula "26"))
                                                      (rule "add_literals" (formula "26") (term "1"))
                                                      (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0"))
                                                      (rule "applyEq" (formula "26") (term "0,0") (ifseqformula "28"))
                                                      (rule "lenOfSeqConcat" (formula "26") (term "0"))
                                                       (builtin "One Step Simplification" (formula "26"))
                                                      (rule "add_literals" (formula "26") (term "0"))
                                                       (builtin "One Step Simplification" (formula "26"))
                                                      (rule "true_left" (formula "26"))
                                                      (rule "applyEq" (formula "26") (term "0,0,1,0") (ifseqformula "27"))
                                                       (builtin "One Step Simplification" (formula "26"))
                                                      (rule "true_left" (formula "26"))
                                                      (rule "onlyCreatedObjectsAreInLocSets" (formula "16") (ifseqformula "5"))
                                                      (rule "replace_known_left" (formula "16") (term "1") (ifseqformula "8"))
                                                       (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "53")))
                                                      (rule "true_left" (formula "16"))
                                                      (rule "onlyCreatedObjectsAreInLocSets" (formula "40") (ifseqformula "29"))
                                                      (rule "replace_known_left" (formula "40") (term "1") (ifseqformula "32"))
                                                       (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "51")))
                                                      (rule "true_left" (formula "40"))
                                                      (rule "onlyCreatedObjectsAreInLocSets" (formula "25") (ifseqformula "13"))
                                                      (rule "replace_known_right" (formula "25") (term "0") (ifseqformula "53"))
                                                       (builtin "One Step Simplification" (formula "25"))
                                                      (rule "onlyCreatedObjectsAreInLocSets" (formula "19") (ifseqformula "5"))
                                                      (rule "replace_known_left" (formula "19") (term "1") (ifseqformula "8"))
                                                       (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "54")))
                                                      (rule "true_left" (formula "19"))
                                                       (builtin "Use Dependency Contract" (formula "56") (ifInst ""  (formula "29")) (ifInst ""  (formula "39")) (ifInst ""  (formula "31")) (contract "ArrayList[java.lang.Object::<inv>()].JML accessible clause.0"))
                                                      (rule "replaceKnownSelect_taclet0000_9" (formula "45") (term "1,1,0"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet101001021000000000_28" (formula "45") (term "1,1,0"))
                                                      (rule "wellFormedAnonEQ" (formula "45") (term "1,1,0,0,0") (ifseqformula "39"))
                                                      (rule "wellFormedAnonEQ" (formula "45") (term "0,1,0,0,0") (ifseqformula "23"))
                                                      (rule "wellFormedAnonEQ" (formula "45") (term "0,0,1,0,0,0") (ifseqformula "14"))
                                                      (rule "wellFormedAnonEQ" (formula "45") (term "0,1,1,0,0,0") (ifseqformula "31"))
                                                      (rule "wellFormedAnonEQ" (formula "45") (term "0,0,0,1,0,0,0") (ifseqformula "6"))
                                                      (rule "wellFormedAnonEQ" (formula "45") (term "0,0,1,1,0,0,0") (ifseqformula "23"))
                                                      (rule "wellFormedAnonEQ" (formula "45") (term "0,0,0,1,1,0,0,0") (ifseqformula "14"))
                                                      (rule "wellFormedAnonEQ" (formula "45") (term "0,0,0,0,1,1,0,0,0") (ifseqformula "6"))
                                                      (rule "replace_known_right" (formula "45") (term "0,0,0,0,0,0") (ifseqformula "54"))
                                                       (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "1")) (ifInst ""  (formula "5")) (ifInst ""  (formula "13")) (ifInst ""  (formula "22")) (ifInst ""  (formula "1")) (ifInst ""  (formula "5")) (ifInst ""  (formula "13")) (ifInst ""  (formula "22")) (ifInst ""  (formula "30")) (ifInst ""  (formula "38")) (ifInst ""  (formula "29")) (ifInst ""  (formula "57")) (ifInst ""  (formula "29")))
                                                      (rule "notLeft" (formula "45"))
                                                      (rule "disjointDefinition" (formula "45") (term "1"))
                                                      (rule "pullOutSelect" (formula "45") (term "0,0") (inst "selectSK=java_lang_Object_created__6"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
                                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "55")))
                                                      (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "2,0"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "2,0"))
                                                      (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "0,0,0,0"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "0,0,0,0"))
                                                      (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "9"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "applyEqReverse" (formula "46") (term "0,0") (ifseqformula "1"))
                                                      (rule "hideAuxiliaryEq" (formula "1"))
                                                      (rule "replace_known_left" (formula "45") (term "0") (ifseqformula "8"))
                                                       (builtin "One Step Simplification" (formula "45"))
                                                      (rule "equalityToElementOfRight" (formula "45") (inst "fv=fv") (inst "ov=ov"))
                                                       (builtin "One Step Simplification" (formula "45"))
                                                      (rule "allRight" (formula "45") (inst "sk=ov_0"))
                                                      (rule "allRight" (formula "45") (inst "sk=fv_0"))
                                                      (rule "notRight" (formula "45"))
                                                      (rule "elementOfIntersect" (formula "1"))
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "elementOfSubsetImpliesElementOfSuperset" (formula "2") (ifseqformula "22"))
                                                      (rule "elementOfSubsetImpliesElementOfSuperset" (formula "1") (ifseqformula "39"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "notLeft" (formula "2"))
                                                      (rule "notLeft" (formula "1"))
                                                      (rule "elementOfUnion" (formula "2"))
                                                       (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "48")))
                                                      (rule "pullOutSelect" (formula "49") (term "0") (inst "selectSK=java_lang_Object_created__7"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "27"))
                                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "49")))
                                                      (rule "ifthenelse_negated" (formula "1") (term "0"))
                                                      (rule "apply_eq_boolean_rigid" (formula "1") (term "1") (ifseqformula "50"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "notLeft" (formula "1"))
                                                      (rule "ifEqualsTRUE" (formula "48"))
                                                       (builtin "One Step Simplification" (formula "48"))
                                                      (rule "orRight" (formula "48"))
                                                      (rule "replace_known_right" (formula "49") (term "0,0") (ifseqformula "48"))
                                                       (builtin "One Step Simplification" (formula "49"))
                                                      (rule "pullOutSelect" (formula "2") (term "0,0,0") (inst "selectSK=java_lang_Object_created__8"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "10"))
                                                       (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "51")))
                                                      (rule "ifthenelse_negated" (formula "2") (term "0"))
                                                      (rule "pullOutSelect" (formula "49") (term "0") (inst "selectSK=java_lang_Object_created__9"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "52")))
                                                      (rule "replaceKnownSelect_taclet101001021000000000_32" (formula "1") (term "2,0"))
                                                      (rule "replaceKnownSelect_taclet101001021000000000_32" (formula "1") (term "0,0,0,0"))
                                                      (rule "ifthenelse_negated" (formula "1") (term "0"))
                                                      (rule "apply_eq_boolean_rigid" (formula "1") (term "1") (ifseqformula "50"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "notLeft" (formula "1"))
                                                      (rule "ifEqualsTRUE" (formula "49"))
                                                       (builtin "One Step Simplification" (formula "49"))
                                                      (rule "orRight" (formula "49"))
                                                      (rule "replace_known_right" (formula "50") (term "0,0") (ifseqformula "49"))
                                                       (builtin "One Step Simplification" (formula "50"))
                                                      (rule "replace_known_right" (formula "3") (term "0,0") (ifseqformula "49"))
                                                       (builtin "One Step Simplification" (formula "3"))
                                                      (rule "true_left" (formula "3"))
                                                      (rule "apply_eq_boolean_rigid" (formula "2") (term "1") (ifseqformula "48"))
                                                       (builtin "One Step Simplification" (formula "2"))
                                                      (rule "notLeft" (formula "2"))
                                                      (rule "ifEqualsTRUE" (formula "47"))
                                                       (builtin "One Step Simplification" (formula "47"))
                                                      (rule "orRight" (formula "47"))
                                                      (rule "replace_known_right" (formula "48") (term "0,0") (ifseqformula "47"))
                                                       (builtin "One Step Simplification" (formula "48"))
                                                      (rule "hideAuxiliaryEqConcrete2" (formula "54"))
                                                      (rule "hideAuxiliaryEqConcrete2" (formula "51"))
                                                      (rule "hideAuxiliaryEqConcrete2" (formula "49"))
                                                      (rule "onlyCreatedObjectsAreInLocSets" (formula "2") (ifseqformula "15"))
                                                      (rule "replace_known_right" (formula "2") (term "0") (ifseqformula "52"))
                                                       (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "50")))
                                                      (rule "closeFalse" (formula "2"))
                                                   )
                                                )
                                                (branch "(self_0, List::$seq) in self_0.footprint@anon_heap_add<<anonHeapFunction>> FALSE"
                                                   (rule "eqSymm" (formula "25"))
                                                   (rule "applyEq" (formula "26") (term "1") (ifseqformula "25"))
                                                   (rule "ifthenelse_split" (formula "27") (term "0"))
                                                   (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_add<<anonHeapFunction>> TRUE"
                                                      (rule "applyEqReverse" (formula "29") (term "0") (ifseqformula "28"))
                                                      (rule "hideAuxiliaryEq" (formula "28"))
                                                      (rule "elementOfSubsetImpliesElementOfSuperset" (formula "27") (ifseqformula "20"))
                                                      (rule "elementOfUnion" (formula "27"))
                                                       (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "19")))
                                                      (rule "true_left" (formula "27"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "43") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "43"))
                                                      (rule "andLeft" (formula "43"))
                                                      (rule "getOfSeqSingleton" (formula "44") (term "1,1,0"))
                                                      (rule "castDel" (formula "44") (term "1,1,1,0"))
                                                      (rule "castDel" (formula "44") (term "2,1,1,0"))
                                                      (rule "eqSymm" (formula "44") (term "1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "44") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "44") (term "0,0,0"))
                                                      (rule "applyEq" (formula "43") (term "0,0") (ifseqformula "45"))
                                                       (builtin "One Step Simplification" (formula "43"))
                                                      (rule "true_left" (formula "43"))
                                                      (rule "applyEqRigid" (formula "43") (term "0,1,1,0") (ifseqformula "44"))
                                                      (rule "getOfSeqSingleton" (formula "43") (term "1,1,0"))
                                                      (rule "castDel" (formula "43") (term "1,1,1,0"))
                                                      (rule "castDel" (formula "43") (term "2,1,1,0"))
                                                       (builtin "One Step Simplification" (formula "43"))
                                                      (rule "true_left" (formula "43"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "35") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "35"))
                                                      (rule "andLeft" (formula "35"))
                                                      (rule "inEqSimp_ltToLeq" (formula "36") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "36") (term "0,0,0"))
                                                      (rule "applyEq" (formula "36") (term "0,0,1,0,0,1,0,0") (ifseqformula "37"))
                                                       (builtin "One Step Simplification" (formula "36"))
                                                      (rule "mul_literals" (formula "36") (term "1,0,0,1,0,0"))
                                                      (rule "add_zero_right" (formula "36") (term "0,0,1,0,0"))
                                                      (rule "applyEq" (formula "35") (term "0,0") (ifseqformula "37"))
                                                       (builtin "One Step Simplification" (formula "35"))
                                                      (rule "true_left" (formula "35"))
                                                      (rule "applyEq" (formula "35") (term "0,0,1,0") (ifseqformula "36"))
                                                       (builtin "One Step Simplification" (formula "35"))
                                                      (rule "true_left" (formula "35"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "17") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "17"))
                                                      (rule "andLeft" (formula "17"))
                                                      (rule "getOfSeqSingleton" (formula "18") (term "1,1,0"))
                                                      (rule "castDel" (formula "18") (term "1,1,1,0"))
                                                      (rule "castDel" (formula "18") (term "2,1,1,0"))
                                                      (rule "eqSymm" (formula "18") (term "1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
                                                      (rule "applyEq" (formula "17") (term "0,0") (ifseqformula "19"))
                                                       (builtin "One Step Simplification" (formula "17"))
                                                      (rule "true_left" (formula "17"))
                                                      (rule "applyEq" (formula "17") (term "0,1,1,0") (ifseqformula "18"))
                                                      (rule "getOfSeqSingleton" (formula "17") (term "1,1,0"))
                                                      (rule "castDel" (formula "17") (term "2,1,1,0"))
                                                      (rule "castDel" (formula "17") (term "1,1,1,0"))
                                                       (builtin "One Step Simplification" (formula "17"))
                                                      (rule "true_left" (formula "17"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "42") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "42"))
                                                      (rule "andLeft" (formula "42"))
                                                      (rule "getOfSeqSingleton" (formula "43") (term "1,1,0"))
                                                      (rule "castDel" (formula "43") (term "1,1,1,0"))
                                                      (rule "castDel" (formula "43") (term "2,1,1,0"))
                                                      (rule "eqSymm" (formula "43") (term "1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "43") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "43") (term "0,0,0"))
                                                      (rule "applyEq" (formula "42") (term "0,0") (ifseqformula "44"))
                                                       (builtin "One Step Simplification" (formula "42"))
                                                      (rule "true_left" (formula "42"))
                                                      (rule "applyEq" (formula "42") (term "0,1,1,0") (ifseqformula "43"))
                                                      (rule "getOfSeqSingleton" (formula "42") (term "1,1,0"))
                                                      (rule "castDel" (formula "42") (term "1,1,1,0"))
                                                      (rule "castDel" (formula "42") (term "2,1,1,0"))
                                                       (builtin "One Step Simplification" (formula "42"))
                                                      (rule "true_left" (formula "42"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "25") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "25"))
                                                      (rule "andLeft" (formula "25"))
                                                      (rule "getOfSeqSingleton" (formula "26") (term "1,1,0"))
                                                      (rule "castDel" (formula "26") (term "2,1,1,0"))
                                                      (rule "castDel" (formula "26") (term "1,1,1,0"))
                                                      (rule "eqSymm" (formula "26") (term "1,0"))
                                                      (rule "lenOfSeqConcat" (formula "26") (term "1,1,0,0"))
                                                       (builtin "One Step Simplification" (formula "26"))
                                                      (rule "add_literals" (formula "26") (term "1,1,0,0"))
                                                      (rule "lenOfSeqConcat" (formula "25") (term "0"))
                                                       (builtin "One Step Simplification" (formula "25"))
                                                      (rule "add_literals" (formula "25") (term "0"))
                                                      (rule "equal_literals" (formula "25"))
                                                      (rule "closeFalse" (formula "25"))
                                                   )
                                                   (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_add<<anonHeapFunction>> FALSE"
                                                      (rule "applyEqReverse" (formula "28") (term "0") (ifseqformula "27"))
                                                       (builtin "One Step Simplification" (formula "28"))
                                                      (rule "true_left" (formula "28"))
                                                      (rule "hideAuxiliaryEq" (formula "27"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "41") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "41"))
                                                      (rule "andLeft" (formula "41"))
                                                      (rule "getOfSeqSingleton" (formula "42") (term "1,1,0"))
                                                      (rule "castDel" (formula "42") (term "2,1,1,0"))
                                                      (rule "castDel" (formula "42") (term "1,1,1,0"))
                                                      (rule "eqSymm" (formula "42") (term "1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "42") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "42") (term "0,0,0"))
                                                      (rule "applyEqRigid" (formula "42") (term "0,1,1,0") (ifseqformula "43"))
                                                      (rule "getOfSeqSingleton" (formula "42") (term "1,1,0"))
                                                      (rule "castDel" (formula "42") (term "1,1,1,0"))
                                                      (rule "castDel" (formula "42") (term "2,1,1,0"))
                                                       (builtin "One Step Simplification" (formula "42"))
                                                      (rule "true_left" (formula "42"))
                                                      (rule "applyEq" (formula "41") (term "0,0") (ifseqformula "42"))
                                                       (builtin "One Step Simplification" (formula "41"))
                                                      (rule "true_left" (formula "41"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "33") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "33"))
                                                      (rule "andLeft" (formula "33"))
                                                      (rule "inEqSimp_ltToLeq" (formula "34") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "34") (term "0,0,0"))
                                                      (rule "applyEq" (formula "33") (term "0,0") (ifseqformula "35"))
                                                       (builtin "One Step Simplification" (formula "33"))
                                                      (rule "true_left" (formula "33"))
                                                      (rule "applyEq" (formula "33") (term "0,0,1,0") (ifseqformula "34"))
                                                       (builtin "One Step Simplification" (formula "33"))
                                                      (rule "true_left" (formula "33"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "17") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "17"))
                                                      (rule "andLeft" (formula "17"))
                                                      (rule "getOfSeqSingleton" (formula "18") (term "1,1,0"))
                                                      (rule "castDel" (formula "18") (term "2,1,1,0"))
                                                      (rule "castDel" (formula "18") (term "1,1,1,0"))
                                                      (rule "eqSymm" (formula "18") (term "1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
                                                      (rule "applyEq" (formula "18") (term "0,0,1,0,0,1,0,0") (ifseqformula "19"))
                                                       (builtin "One Step Simplification" (formula "18"))
                                                      (rule "mul_literals" (formula "18") (term "1,0,0,1,0,0"))
                                                      (rule "add_literals" (formula "18") (term "0,0,1,0,0"))
                                                      (rule "add_zero_left" (formula "18") (term "0,1,0,0"))
                                                      (rule "applyEq" (formula "17") (term "0,0") (ifseqformula "19"))
                                                       (builtin "One Step Simplification" (formula "17"))
                                                      (rule "true_left" (formula "17"))
                                                      (rule "applyEq" (formula "17") (term "0,1,1,0") (ifseqformula "18"))
                                                      (rule "getOfSeqSingleton" (formula "17") (term "1,1,0"))
                                                      (rule "castDel" (formula "17") (term "2,1,1,0"))
                                                      (rule "castDel" (formula "17") (term "1,1,1,0"))
                                                       (builtin "One Step Simplification" (formula "17"))
                                                      (rule "true_left" (formula "17"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "40") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "40"))
                                                      (rule "andLeft" (formula "40"))
                                                      (rule "getOfSeqSingleton" (formula "41") (term "1,1,0"))
                                                      (rule "castDel" (formula "41") (term "2,1,1,0"))
                                                      (rule "castDel" (formula "41") (term "1,1,1,0"))
                                                      (rule "eqSymm" (formula "41") (term "1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "41") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "41") (term "0,0,0"))
                                                      (rule "applyEq" (formula "41") (term "0,1,1,0") (ifseqformula "42"))
                                                      (rule "getOfSeqSingleton" (formula "41") (term "1,1,0"))
                                                      (rule "castDel" (formula "41") (term "2,1,1,0"))
                                                      (rule "castDel" (formula "41") (term "1,1,1,0"))
                                                       (builtin "One Step Simplification" (formula "41"))
                                                      (rule "true_left" (formula "41"))
                                                      (rule "applyEq" (formula "40") (term "0,0") (ifseqformula "41"))
                                                       (builtin "One Step Simplification" (formula "40"))
                                                      (rule "true_left" (formula "40"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "25") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "25"))
                                                      (rule "andLeft" (formula "25"))
                                                      (rule "lenOfSeqConcat" (formula "25") (term "0"))
                                                       (builtin "One Step Simplification" (formula "25"))
                                                      (rule "add_literals" (formula "25") (term "0"))
                                                      (rule "equal_literals" (formula "25"))
                                                      (rule "closeFalse" (formula "25"))
                                                   )
                                                )
                                             )
                                          )
                                          (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_ArrayList<<anonHeapFunction>> FALSE"
                                             (rule "applyEqReverse" (formula "23") (term "1,0") (ifseqformula "19"))
                                             (rule "applyEqReverse" (formula "27") (term "2,0") (ifseqformula "19"))
                                             (rule "applyEqReverse" (formula "25") (term "2,0,0") (ifseqformula "19"))
                                             (rule "applyEqReverse" (formula "28") (term "0,1") (ifseqformula "19"))
                                             (rule "applyEqReverse" (formula "20") (term "0") (ifseqformula "19"))
                                              (builtin "One Step Simplification" (formula "20"))
                                             (rule "true_left" (formula "20"))
                                             (rule "applyEqReverse" (formula "26") (term "2,0,0") (ifseqformula "19"))
                                             (rule "hideAuxiliaryEq" (formula "19"))
                                             (rule "replace_known_right" (formula "25") (term "0,0") (ifseqformula "43"))
                                              (builtin "One Step Simplification" (formula "25"))
                                             (rule "applyEqReverse" (formula "26") (term "0") (ifseqformula "25"))
                                              (builtin "One Step Simplification" (formula "26"))
                                             (rule "true_left" (formula "26"))
                                             (rule "hideAuxiliaryEq" (formula "25"))
                                             (rule "replace_known_left" (formula "23") (term "0,0") (ifseqformula "16"))
                                              (builtin "One Step Simplification" (formula "23"))
                                             (rule "ifthenelse_split" (formula "51") (term "0,0,1"))
                                             (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> TRUE"
                                                (rule "elementOfSubsetImpliesElementOfSuperset" (formula "1") (ifseqformula "33"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "51")))
                                                (rule "notLeft" (formula "1"))
                                                (rule "pullOutSelect" (formula "42") (term "0") (inst "selectSK=java_lang_Object_created__6"))
                                                (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "52")))
                                                (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "2,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "2,0"))
                                                (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "0,0,0,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "0,0,0,0"))
                                                (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "10"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "applyEqReverse" (formula "43") (term "0") (ifseqformula "1"))
                                                (rule "close" (formula "43") (ifseqformula "10"))
                                             )
                                             (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> FALSE"
                                                (rule "lenOfSeqConcat" (formula "52") (term "0,1"))
                                                 (builtin "One Step Simplification" (formula "52"))
                                                (rule "add_literals" (formula "52") (term "0,1"))
                                                (rule "qeq_literals" (formula "52") (term "1"))
                                                 (builtin "One Step Simplification" (formula "52"))
                                                (rule "equalityToSeqGetAndSeqLenLeft" (formula "39") (inst "iv=iv"))
                                                 (builtin "One Step Simplification" (formula "39"))
                                                (rule "andLeft" (formula "39"))
                                                (rule "getOfSeqSingleton" (formula "40") (term "1,1,0"))
                                                (rule "castDel" (formula "40") (term "2,1,1,0"))
                                                (rule "castDel" (formula "40") (term "1,1,1,0"))
                                                (rule "eqSymm" (formula "40") (term "1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "40") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "40") (term "0,0,0"))
                                                (rule "applyEqRigid" (formula "40") (term "0,0,1,0,0,1,0,0") (ifseqformula "41"))
                                                 (builtin "One Step Simplification" (formula "40"))
                                                (rule "mul_literals" (formula "40") (term "1,0,0,1,0,0"))
                                                (rule "add_literals" (formula "40") (term "0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "40") (term "0,1,0,0"))
                                                (rule "applyEq" (formula "39") (term "0,0") (ifseqformula "41"))
                                                 (builtin "One Step Simplification" (formula "39"))
                                                (rule "true_left" (formula "39"))
                                                (rule "applyEqRigid" (formula "39") (term "0,1,1,0") (ifseqformula "40"))
                                                (rule "getOfSeqSingleton" (formula "39") (term "1,1,0"))
                                                (rule "castDel" (formula "39") (term "1,1,1,0"))
                                                (rule "castDel" (formula "39") (term "2,1,1,0"))
                                                 (builtin "One Step Simplification" (formula "39"))
                                                (rule "true_left" (formula "39"))
                                                (rule "equalityToSeqGetAndSeqLenLeft" (formula "31") (inst "iv=iv"))
                                                 (builtin "One Step Simplification" (formula "31"))
                                                (rule "andLeft" (formula "31"))
                                                (rule "inEqSimp_ltToLeq" (formula "32") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "32") (term "0,0,0"))
                                                (rule "applyEq" (formula "32") (term "0,0,1,0") (ifseqformula "33"))
                                                 (builtin "One Step Simplification" (formula "32"))
                                                (rule "true_left" (formula "32"))
                                                (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "32"))
                                                 (builtin "One Step Simplification" (formula "31"))
                                                (rule "true_left" (formula "31"))
                                                (rule "equalityToSeqGetAndSeqLenLeft" (formula "17") (inst "iv=iv"))
                                                 (builtin "One Step Simplification" (formula "17"))
                                                (rule "andLeft" (formula "17"))
                                                (rule "getOfSeqSingleton" (formula "18") (term "1,1,0"))
                                                (rule "castDel" (formula "18") (term "2,1,1,0"))
                                                (rule "castDel" (formula "18") (term "1,1,1,0"))
                                                (rule "eqSymm" (formula "18") (term "1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
                                                (rule "applyEq" (formula "18") (term "0,1,1,0") (ifseqformula "19"))
                                                (rule "getOfSeqSingleton" (formula "18") (term "1,1,0"))
                                                (rule "castDel" (formula "18") (term "1,1,1,0"))
                                                (rule "castDel" (formula "18") (term "2,1,1,0"))
                                                 (builtin "One Step Simplification" (formula "18"))
                                                (rule "true_left" (formula "18"))
                                                (rule "applyEq" (formula "17") (term "0,0") (ifseqformula "18"))
                                                 (builtin "One Step Simplification" (formula "17"))
                                                (rule "true_left" (formula "17"))
                                                (rule "equalityToSeqGetAndSeqLenLeft" (formula "38") (inst "iv=iv"))
                                                 (builtin "One Step Simplification" (formula "38"))
                                                (rule "andLeft" (formula "38"))
                                                (rule "getOfSeqSingleton" (formula "39") (term "1,1,0"))
                                                (rule "castDel" (formula "39") (term "2,1,1,0"))
                                                (rule "castDel" (formula "39") (term "1,1,1,0"))
                                                (rule "eqSymm" (formula "39") (term "1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "39") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "39") (term "0,0,0"))
                                                (rule "applyEq" (formula "39") (term "0,0,1,0,0,1,0,0") (ifseqformula "40"))
                                                 (builtin "One Step Simplification" (formula "39"))
                                                (rule "mul_literals" (formula "39") (term "1,0,0,1,0,0"))
                                                (rule "add_literals" (formula "39") (term "0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "39") (term "0,1,0,0"))
                                                (rule "applyEq" (formula "38") (term "0,0") (ifseqformula "40"))
                                                 (builtin "One Step Simplification" (formula "38"))
                                                (rule "true_left" (formula "38"))
                                                (rule "applyEq" (formula "38") (term "0,1,1,0") (ifseqformula "39"))
                                                (rule "getOfSeqSingleton" (formula "38") (term "1,1,0"))
                                                (rule "castDel" (formula "38") (term "1,1,1,0"))
                                                (rule "castDel" (formula "38") (term "2,1,1,0"))
                                                 (builtin "One Step Simplification" (formula "38"))
                                                (rule "true_left" (formula "38"))
                                                (rule "equalityToSeqGetAndSeqLenLeft" (formula "23") (inst "iv=iv"))
                                                (rule "andLeft" (formula "23"))
                                                (rule "lenOfSeqConcat" (formula "23") (term "1"))
                                                 (builtin "One Step Simplification" (formula "23"))
                                                (rule "add_literals" (formula "23") (term "1"))
                                                (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0"))
                                                (rule "applyEq" (formula "24") (term "0,0,1,0,0,1,0,0") (ifseqformula "25"))
                                                (rule "lenOfSeqConcat" (formula "24") (term "0,1,0,0,1,0,0"))
                                                 (builtin "One Step Simplification" (formula "24"))
                                                (rule "add_literals" (formula "24") (term "0,1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "24") (term "1,0,0,1,0,0"))
                                                (rule "add_literals" (formula "24") (term "0,0,1,0,0"))
                                                (rule "applyEq" (formula "23") (term "0,0") (ifseqformula "25"))
                                                (rule "lenOfSeqConcat" (formula "23") (term "0"))
                                                 (builtin "One Step Simplification" (formula "23"))
                                                (rule "add_literals" (formula "23") (term "0"))
                                                 (builtin "One Step Simplification" (formula "23"))
                                                (rule "true_left" (formula "23"))
                                                (rule "applyEq" (formula "23") (term "0,0,1,0") (ifseqformula "24"))
                                                 (builtin "One Step Simplification" (formula "23"))
                                                (rule "true_left" (formula "23"))
                                                (rule "onlyCreatedObjectsAreInLocSets" (formula "16") (ifseqformula "5"))
                                                (rule "replace_known_right" (formula "16") (term "0") (ifseqformula "50"))
                                                 (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "8")))
                                                (rule "true_left" (formula "16"))
                                                (rule "onlyCreatedObjectsAreInLocSets" (formula "37") (ifseqformula "26"))
                                                (rule "replace_known_right" (formula "37") (term "0") (ifseqformula "48"))
                                                 (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "29")))
                                                (rule "true_left" (formula "37"))
                                                 (builtin "Use Dependency Contract" (formula "52") (ifInst ""  (formula "25")) (ifInst ""  (formula "35")) (ifInst ""  (formula "27")) (contract "ArrayList[java.lang.Object::<inv>()].JML accessible clause.0"))
                                                (rule "replaceKnownSelect_taclet0000_9" (formula "41") (term "1,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet101021000000000_28" (formula "41") (term "1,1,0"))
                                                (rule "wellFormedAnonEQ" (formula "41") (term "0,1,0,0,0") (ifseqformula "21"))
                                                (rule "wellFormedAnonEQ" (formula "41") (term "1,1,0,0,0") (ifseqformula "35"))
                                                (rule "wellFormedAnonEQ" (formula "41") (term "0,1,1,0,0,0") (ifseqformula "27"))
                                                (rule "wellFormedAnonEQ" (formula "41") (term "0,0,1,0,0,0") (ifseqformula "14"))
                                                (rule "wellFormedAnonEQ" (formula "41") (term "0,0,0,1,0,0,0") (ifseqformula "6"))
                                                (rule "wellFormedAnonEQ" (formula "41") (term "0,0,1,1,0,0,0") (ifseqformula "21"))
                                                (rule "wellFormedAnonEQ" (formula "41") (term "0,0,0,1,1,0,0,0") (ifseqformula "14"))
                                                (rule "wellFormedAnonEQ" (formula "41") (term "0,0,0,0,1,1,0,0,0") (ifseqformula "6"))
                                                (rule "replace_known_left" (formula "41") (term "1,1") (ifseqformula "25"))
                                                 (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "50")) (ifInst ""  (formula "1")) (ifInst ""  (formula "5")) (ifInst ""  (formula "13")) (ifInst ""  (formula "20")) (ifInst ""  (formula "1")) (ifInst ""  (formula "5")) (ifInst ""  (formula "13")) (ifInst ""  (formula "20")) (ifInst ""  (formula "26")) (ifInst ""  (formula "34")) (ifInst ""  (formula "25")) (ifInst ""  (formula "53")))
                                                (rule "notLeft" (formula "41"))
                                                (rule "disjointDefinition" (formula "41") (term "1"))
                                                (rule "pullOutSelect" (formula "41") (term "0,0") (inst "selectSK=java_lang_Object_created__6"))
                                                (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "22"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "51")))
                                                (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "2,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "2,0"))
                                                (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "0,0,0,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "0,0,0,0"))
                                                (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "9"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "applyEqReverse" (formula "42") (term "0,0") (ifseqformula "1"))
                                                (rule "hideAuxiliaryEq" (formula "1"))
                                                (rule "replace_known_left" (formula "41") (term "0") (ifseqformula "8"))
                                                 (builtin "One Step Simplification" (formula "41"))
                                                (rule "commuteIntersection" (formula "41") (term "0"))
                                                (rule "equalityToElementOfRight" (formula "41") (inst "fv=fv") (inst "ov=ov"))
                                                 (builtin "One Step Simplification" (formula "41"))
                                                (rule "allRight" (formula "41") (inst "sk=ov_0"))
                                                (rule "allRight" (formula "41") (inst "sk=fv_0"))
                                                (rule "notRight" (formula "41"))
                                                (rule "elementOfIntersect" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "elementOfSubsetImpliesElementOfSuperset" (formula "2") (ifseqformula "34"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "andLeft" (formula "2"))
                                                (rule "notLeft" (formula "3"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "elementOfSubsetImpliesElementOfSuperset" (formula "1") (ifseqformula "13"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "44")))
                                                (rule "notLeft" (formula "1"))
                                                (rule "pullOutSelect" (formula "45") (term "0") (inst "selectSK=java_lang_Object_created__7"))
                                                (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "45")))
                                                (rule "ifthenelse_negated" (formula "1") (term "0"))
                                                (rule "apply_eq_boolean_rigid" (formula "1") (term "1") (ifseqformula "46"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "notLeft" (formula "1"))
                                                (rule "ifEqualsTRUE" (formula "43"))
                                                 (builtin "One Step Simplification" (formula "43"))
                                                (rule "orRight" (formula "43"))
                                                (rule "replace_known_right" (formula "44") (term "0,0") (ifseqformula "43"))
                                                 (builtin "One Step Simplification" (formula "44"))
                                                (rule "pullOutSelect" (formula "43") (term "0") (inst "selectSK=java_lang_Object_created__8"))
                                                (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "17"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "47")))
                                                (rule "ifthenelse_negated" (formula "1") (term "0"))
                                                (rule "apply_eq_boolean" (formula "1") (term "1") (ifseqformula "44"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "notLeft" (formula "1"))
                                                (rule "ifEqualsTRUE" (formula "43"))
                                                 (builtin "One Step Simplification" (formula "43"))
                                                (rule "orRight" (formula "43"))
                                                (rule "replace_known_right" (formula "44") (term "0,0") (ifseqformula "43"))
                                                 (builtin "One Step Simplification" (formula "44"))
                                                (rule "pullOutSelect" (formula "43") (term "0") (inst "selectSK=java_lang_Object_created__9"))
                                                (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "9"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "49")) (ifInst ""  (formula "48")))
                                                (rule "applyEqReverse" (formula "44") (term "0") (ifseqformula "1"))
                                                (rule "hideAuxiliaryEq" (formula "1"))
                                                (rule "hideAuxiliaryEqConcrete2" (formula "49"))
                                                (rule "hideAuxiliaryEqConcrete2" (formula "45"))
                                                (rule "onlyCreatedObjectsAreInLocSets" (formula "1") (ifseqformula "7"))
                                                (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "48"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "44")))
                                                (rule "closeFalse" (formula "1"))
                                             )
                                          )
                                       )
                                       (branch "(self_1, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> FALSE"
                                          (rule "eqSymm" (formula "41"))
                                          (rule "applyEq" (formula "42") (term "1") (ifseqformula "41"))
                                          (rule "ifthenelse_split" (formula "19") (term "0"))
                                          (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_ArrayList<<anonHeapFunction>> TRUE"
                                             (rule "applyEqReverse" (formula "21") (term "0") (ifseqformula "20"))
                                             (rule "applyEqReverse" (formula "26") (term "2,0,0") (ifseqformula "20"))
                                             (rule "applyEqReverse" (formula "28") (term "2,0") (ifseqformula "20"))
                                             (rule "applyEqReverse" (formula "28") (term "2,0,0") (ifseqformula "20"))
                                             (rule "applyEqReverse" (formula "29") (term "0,1") (ifseqformula "20"))
                                             (rule "applyEqReverse" (formula "24") (term "1,0") (ifseqformula "20"))
                                             (rule "hideAuxiliaryEq" (formula "20"))
                                             (rule "elementOfSubsetImpliesElementOfSuperset" (formula "19") (ifseqformula "11"))
                                              (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "53")) (ifInst ""  (formula "52")))
                                             (rule "true_left" (formula "19"))
                                             (rule "commuteUnion" (formula "28") (term "1"))
                                             (rule "ifthenelse_split" (formula "54") (term "0,0,1"))
                                             (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> TRUE"
                                                (rule "elementOfSubsetImpliesElementOfSuperset" (formula "1") (ifseqformula "37"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "54")))
                                                (rule "notLeft" (formula "1"))
                                                (rule "pullOutSelect" (formula "45") (term "0") (inst "selectSK=java_lang_Object_created__6"))
                                                (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "25"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "55")))
                                                (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "2,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "2,0"))
                                                (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "0,0,0,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "0,0,0,0"))
                                                (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "10"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "applyEqReverse" (formula "46") (term "0") (ifseqformula "1"))
                                                (rule "close" (formula "46") (ifseqformula "10"))
                                             )
                                             (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> FALSE"
                                                (rule "lenOfSeqConcat" (formula "55") (term "0,1"))
                                                 (builtin "One Step Simplification" (formula "55"))
                                                (rule "add_literals" (formula "55") (term "0,1"))
                                                (rule "qeq_literals" (formula "55") (term "1"))
                                                 (builtin "One Step Simplification" (formula "55"))
                                                (rule "ifthenelse_split" (formula "25") (term "0"))
                                                (branch "(self_0, List::$seq) in self_0.footprint@anon_heap_add<<anonHeapFunction>> TRUE"
                                                   (rule "elementOfSubsetImpliesElementOfSuperset" (formula "25") (ifseqformula "20"))
                                                   (rule "elementOfUnion" (formula "25"))
                                                    (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "16")))
                                                   (rule "true_left" (formula "25"))
                                                   (rule "ifthenelse_split" (formula "28") (term "0"))
                                                   (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_add<<anonHeapFunction>> TRUE"
                                                      (rule "applyEqReverse" (formula "30") (term "0") (ifseqformula "29"))
                                                      (rule "hideAuxiliaryEq" (formula "29"))
                                                      (rule "elementOfSubsetImpliesElementOfSuperset" (formula "28") (ifseqformula "20"))
                                                      (rule "elementOfUnion" (formula "28"))
                                                       (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "19")))
                                                      (rule "true_left" (formula "28"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "36") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "36"))
                                                      (rule "andLeft" (formula "36"))
                                                      (rule "inEqSimp_ltToLeq" (formula "37") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "37") (term "0,0,0"))
                                                      (rule "applyEq" (formula "36") (term "0,0") (ifseqformula "38"))
                                                       (builtin "One Step Simplification" (formula "36"))
                                                      (rule "true_left" (formula "36"))
                                                      (rule "applyEq" (formula "36") (term "0,0,1,0") (ifseqformula "37"))
                                                       (builtin "One Step Simplification" (formula "36"))
                                                      (rule "true_left" (formula "36"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "17") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "17"))
                                                      (rule "andLeft" (formula "17"))
                                                      (rule "getOfSeqSingleton" (formula "18") (term "1,1,0"))
                                                      (rule "castDel" (formula "18") (term "1,1,1,0"))
                                                      (rule "castDel" (formula "18") (term "2,1,1,0"))
                                                      (rule "eqSymm" (formula "18") (term "1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
                                                      (rule "applyEq" (formula "18") (term "0,0,1,0,0,1,0,0") (ifseqformula "19"))
                                                       (builtin "One Step Simplification" (formula "18"))
                                                      (rule "mul_literals" (formula "18") (term "1,0,0,1,0,0"))
                                                      (rule "add_literals" (formula "18") (term "0,0,1,0,0"))
                                                      (rule "add_zero_left" (formula "18") (term "0,1,0,0"))
                                                      (rule "applyEq" (formula "17") (term "0,0") (ifseqformula "19"))
                                                       (builtin "One Step Simplification" (formula "17"))
                                                      (rule "true_left" (formula "17"))
                                                      (rule "applyEq" (formula "17") (term "0,1,1,0") (ifseqformula "18"))
                                                      (rule "getOfSeqSingleton" (formula "17") (term "1,1,0"))
                                                      (rule "castDel" (formula "17") (term "2,1,1,0"))
                                                      (rule "castDel" (formula "17") (term "1,1,1,0"))
                                                       (builtin "One Step Simplification" (formula "17"))
                                                      (rule "true_left" (formula "17"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "42") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "42"))
                                                      (rule "equal_literals" (formula "42") (term "0"))
                                                       (builtin "One Step Simplification" (formula "42"))
                                                      (rule "closeFalse" (formula "42"))
                                                   )
                                                   (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_add<<anonHeapFunction>> FALSE"
                                                      (rule "applyEqReverse" (formula "29") (term "0") (ifseqformula "28"))
                                                       (builtin "One Step Simplification" (formula "29"))
                                                      (rule "true_left" (formula "29"))
                                                      (rule "hideAuxiliaryEq" (formula "28"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "34") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "34"))
                                                      (rule "andLeft" (formula "34"))
                                                      (rule "inEqSimp_ltToLeq" (formula "35") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "35") (term "0,0,0"))
                                                      (rule "applyEq" (formula "34") (term "0,0") (ifseqformula "36"))
                                                       (builtin "One Step Simplification" (formula "34"))
                                                      (rule "true_left" (formula "34"))
                                                      (rule "applyEq" (formula "34") (term "0,0,1,0") (ifseqformula "35"))
                                                       (builtin "One Step Simplification" (formula "34"))
                                                      (rule "true_left" (formula "34"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "17") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "17"))
                                                      (rule "andLeft" (formula "17"))
                                                      (rule "getOfSeqSingleton" (formula "18") (term "1,1,0"))
                                                      (rule "castDel" (formula "18") (term "2,1,1,0"))
                                                      (rule "castDel" (formula "18") (term "1,1,1,0"))
                                                      (rule "eqSymm" (formula "18") (term "1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
                                                      (rule "applyEq" (formula "18") (term "0,0,1,0,0,1,0,0") (ifseqformula "19"))
                                                       (builtin "One Step Simplification" (formula "18"))
                                                      (rule "mul_literals" (formula "18") (term "1,0,0,1,0,0"))
                                                      (rule "add_literals" (formula "18") (term "0,0,1,0,0"))
                                                      (rule "add_zero_left" (formula "18") (term "0,1,0,0"))
                                                      (rule "applyEq" (formula "17") (term "0,0") (ifseqformula "19"))
                                                       (builtin "One Step Simplification" (formula "17"))
                                                      (rule "true_left" (formula "17"))
                                                      (rule "applyEq" (formula "17") (term "0,1,1,0") (ifseqformula "18"))
                                                      (rule "getOfSeqSingleton" (formula "17") (term "1,1,0"))
                                                      (rule "castDel" (formula "17") (term "2,1,1,0"))
                                                      (rule "castDel" (formula "17") (term "1,1,1,0"))
                                                       (builtin "One Step Simplification" (formula "17"))
                                                      (rule "true_left" (formula "17"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "40") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "40"))
                                                      (rule "equal_literals" (formula "40") (term "0"))
                                                       (builtin "One Step Simplification" (formula "40"))
                                                      (rule "closeFalse" (formula "40"))
                                                   )
                                                )
                                                (branch "(self_0, List::$seq) in self_0.footprint@anon_heap_add<<anonHeapFunction>> FALSE"
                                                   (rule "eqSymm" (formula "25"))
                                                   (rule "applyEq" (formula "26") (term "1") (ifseqformula "25"))
                                                   (rule "ifthenelse_split" (formula "27") (term "0"))
                                                   (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_add<<anonHeapFunction>> TRUE"
                                                      (rule "applyEqReverse" (formula "29") (term "0") (ifseqformula "28"))
                                                      (rule "hideAuxiliaryEq" (formula "28"))
                                                      (rule "elementOfSubsetImpliesElementOfSuperset" (formula "27") (ifseqformula "20"))
                                                      (rule "elementOfUnion" (formula "27"))
                                                       (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "19")))
                                                      (rule "true_left" (formula "27"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "35") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "35"))
                                                      (rule "andLeft" (formula "35"))
                                                      (rule "inEqSimp_ltToLeq" (formula "36") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "36") (term "0,0,0"))
                                                      (rule "applyEq" (formula "36") (term "0,0,1,0") (ifseqformula "37"))
                                                       (builtin "One Step Simplification" (formula "36"))
                                                      (rule "true_left" (formula "36"))
                                                      (rule "applyEq" (formula "35") (term "0,0") (ifseqformula "36"))
                                                       (builtin "One Step Simplification" (formula "35"))
                                                      (rule "true_left" (formula "35"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "17") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "17"))
                                                      (rule "andLeft" (formula "17"))
                                                      (rule "getOfSeqSingleton" (formula "18") (term "1,1,0"))
                                                      (rule "castDel" (formula "18") (term "2,1,1,0"))
                                                      (rule "castDel" (formula "18") (term "1,1,1,0"))
                                                      (rule "eqSymm" (formula "18") (term "1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
                                                      (rule "applyEq" (formula "17") (term "0,0") (ifseqformula "19"))
                                                       (builtin "One Step Simplification" (formula "17"))
                                                      (rule "true_left" (formula "17"))
                                                      (rule "applyEq" (formula "17") (term "0,0,1,0,0,1,0,0") (ifseqformula "18"))
                                                       (builtin "One Step Simplification" (formula "17"))
                                                      (rule "mul_literals" (formula "17") (term "1,0,0,1,0,0"))
                                                      (rule "add_literals" (formula "17") (term "0,0,1,0,0"))
                                                      (rule "add_zero_left" (formula "17") (term "0,1,0,0"))
                                                      (rule "applyEq" (formula "17") (term "0,1,1,0") (ifseqformula "18"))
                                                      (rule "getOfSeqSingleton" (formula "17") (term "1,1,0"))
                                                      (rule "castDel" (formula "17") (term "1,1,1,0"))
                                                      (rule "castDel" (formula "17") (term "2,1,1,0"))
                                                       (builtin "One Step Simplification" (formula "17"))
                                                      (rule "true_left" (formula "17"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "41") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "41"))
                                                      (rule "equal_literals" (formula "41") (term "0"))
                                                       (builtin "One Step Simplification" (formula "41"))
                                                      (rule "closeFalse" (formula "41"))
                                                   )
                                                   (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_add<<anonHeapFunction>> FALSE"
                                                      (rule "applyEqReverse" (formula "28") (term "0") (ifseqformula "27"))
                                                       (builtin "One Step Simplification" (formula "28"))
                                                      (rule "true_left" (formula "28"))
                                                      (rule "hideAuxiliaryEq" (formula "27"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "33") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "33"))
                                                      (rule "andLeft" (formula "33"))
                                                      (rule "inEqSimp_ltToLeq" (formula "34") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "34") (term "0,0,0"))
                                                      (rule "applyEq" (formula "34") (term "0,0,1,0,0,1,0,0") (ifseqformula "35"))
                                                       (builtin "One Step Simplification" (formula "34"))
                                                      (rule "mul_literals" (formula "34") (term "1,0,0,1,0,0"))
                                                      (rule "add_literals" (formula "34") (term "0,0,1,0,0"))
                                                      (rule "applyEq" (formula "33") (term "0,0") (ifseqformula "35"))
                                                       (builtin "One Step Simplification" (formula "33"))
                                                      (rule "true_left" (formula "33"))
                                                      (rule "applyEq" (formula "33") (term "0,0,1,0") (ifseqformula "34"))
                                                       (builtin "One Step Simplification" (formula "33"))
                                                      (rule "true_left" (formula "33"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "17") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "17"))
                                                      (rule "andLeft" (formula "17"))
                                                      (rule "getOfSeqSingleton" (formula "18") (term "1,1,0"))
                                                      (rule "castDel" (formula "18") (term "2,1,1,0"))
                                                      (rule "castDel" (formula "18") (term "1,1,1,0"))
                                                      (rule "eqSymm" (formula "18") (term "1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
                                                      (rule "applyEq" (formula "17") (term "0,0") (ifseqformula "19"))
                                                       (builtin "One Step Simplification" (formula "17"))
                                                      (rule "true_left" (formula "17"))
                                                      (rule "applyEq" (formula "17") (term "0,1,1,0") (ifseqformula "18"))
                                                      (rule "getOfSeqSingleton" (formula "17") (term "1,1,0"))
                                                      (rule "castDel" (formula "17") (term "1,1,1,0"))
                                                      (rule "castDel" (formula "17") (term "2,1,1,0"))
                                                       (builtin "One Step Simplification" (formula "17"))
                                                      (rule "true_left" (formula "17"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "39") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "39"))
                                                      (rule "equal_literals" (formula "39") (term "0"))
                                                       (builtin "One Step Simplification" (formula "39"))
                                                      (rule "closeFalse" (formula "39"))
                                                   )
                                                )
                                             )
                                          )
                                          (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_ArrayList<<anonHeapFunction>> FALSE"
                                             (rule "applyEqReverse" (formula "25") (term "2,0,0") (ifseqformula "19"))
                                             (rule "applyEqReverse" (formula "27") (term "2,0,0") (ifseqformula "19"))
                                             (rule "applyEqReverse" (formula "20") (term "0") (ifseqformula "19"))
                                              (builtin "One Step Simplification" (formula "20"))
                                             (rule "true_left" (formula "20"))
                                             (rule "applyEqReverse" (formula "22") (term "1,0") (ifseqformula "19"))
                                             (rule "applyEqReverse" (formula "26") (term "2,0") (ifseqformula "19"))
                                             (rule "applyEqReverse" (formula "27") (term "0,1") (ifseqformula "19"))
                                             (rule "hideAuxiliaryEq" (formula "19"))
                                             (rule "replace_known_right" (formula "25") (term "0,0") (ifseqformula "42"))
                                              (builtin "One Step Simplification" (formula "25"))
                                             (rule "applyEqReverse" (formula "26") (term "0") (ifseqformula "25"))
                                              (builtin "One Step Simplification" (formula "26"))
                                             (rule "true_left" (formula "26"))
                                             (rule "hideAuxiliaryEq" (formula "25"))
                                             (rule "replace_known_left" (formula "23") (term "0,0") (ifseqformula "16"))
                                              (builtin "One Step Simplification" (formula "23"))
                                             (rule "ifthenelse_split" (formula "51") (term "0,0,1"))
                                             (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> TRUE"
                                                (rule "elementOfSubsetImpliesElementOfSuperset" (formula "1") (ifseqformula "33"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "51")))
                                                (rule "notLeft" (formula "1"))
                                                (rule "pullOutSelect" (formula "41") (term "0") (inst "selectSK=java_lang_Object_created__6"))
                                                (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "52")))
                                                (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "2,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "2,0"))
                                                (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "0,0,0,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "0,0,0,0"))
                                                (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "10"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "applyEqReverse" (formula "42") (term "0") (ifseqformula "1"))
                                                (rule "close" (formula "42") (ifseqformula "10"))
                                             )
                                             (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> FALSE"
                                                (rule "lenOfSeqConcat" (formula "52") (term "0,1"))
                                                 (builtin "One Step Simplification" (formula "52"))
                                                (rule "add_literals" (formula "52") (term "0,1"))
                                                (rule "qeq_literals" (formula "52") (term "1"))
                                                 (builtin "One Step Simplification" (formula "52"))
                                                (rule "equalityToSeqGetAndSeqLenLeft" (formula "31") (inst "iv=iv"))
                                                 (builtin "One Step Simplification" (formula "31"))
                                                (rule "andLeft" (formula "31"))
                                                (rule "inEqSimp_ltToLeq" (formula "32") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "32") (term "0,0,0"))
                                                (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "33"))
                                                 (builtin "One Step Simplification" (formula "31"))
                                                (rule "true_left" (formula "31"))
                                                (rule "applyEq" (formula "31") (term "0,0,1,0,0,1,0,0") (ifseqformula "32"))
                                                 (builtin "One Step Simplification" (formula "31"))
                                                (rule "times_zero_2" (formula "31") (term "1,0,0,1,0,0"))
                                                (rule "add_zero_right" (formula "31") (term "0,0,1,0,0"))
                                                (rule "applyEq" (formula "31") (term "0,0,1,0") (ifseqformula "32"))
                                                 (builtin "One Step Simplification" (formula "31"))
                                                (rule "true_left" (formula "31"))
                                                (rule "equalityToSeqGetAndSeqLenLeft" (formula "17") (inst "iv=iv"))
                                                 (builtin "One Step Simplification" (formula "17"))
                                                (rule "andLeft" (formula "17"))
                                                (rule "getOfSeqSingleton" (formula "18") (term "1,1,0"))
                                                (rule "castDel" (formula "18") (term "2,1,1,0"))
                                                (rule "castDel" (formula "18") (term "1,1,1,0"))
                                                (rule "eqSymm" (formula "18") (term "1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
                                                (rule "applyEq" (formula "18") (term "0,0,1,0,0,1,0,0") (ifseqformula "19"))
                                                 (builtin "One Step Simplification" (formula "18"))
                                                (rule "mul_literals" (formula "18") (term "1,0,0,1,0,0"))
                                                (rule "add_literals" (formula "18") (term "0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "18") (term "0,1,0,0"))
                                                (rule "applyEq" (formula "17") (term "0,0") (ifseqformula "19"))
                                                 (builtin "One Step Simplification" (formula "17"))
                                                (rule "true_left" (formula "17"))
                                                (rule "applyEq" (formula "17") (term "0,1,1,0") (ifseqformula "18"))
                                                (rule "getOfSeqSingleton" (formula "17") (term "1,1,0"))
                                                (rule "castDel" (formula "17") (term "1,1,1,0"))
                                                (rule "castDel" (formula "17") (term "2,1,1,0"))
                                                 (builtin "One Step Simplification" (formula "17"))
                                                (rule "true_left" (formula "17"))
                                                (rule "equalityToSeqGetAndSeqLenLeft" (formula "37") (inst "iv=iv"))
                                                 (builtin "One Step Simplification" (formula "37"))
                                                (rule "equal_literals" (formula "37") (term "0"))
                                                 (builtin "One Step Simplification" (formula "37"))
                                                (rule "closeFalse" (formula "37"))
                                             )
                                          )
                                       )
                                    )
                                 )
                                 (branch "(self_0, List::$seq) in self_0.footprint@anon_heap_ArrayList<<anonHeapFunction>> FALSE"
                                    (rule "eqSymm" (formula "16"))
                                    (rule "applyEq" (formula "54") (term "0,2,0,0,1") (ifseqformula "16"))
                                     (builtin "One Step Simplification" (formula "54"))
                                    (rule "applyEqRigid" (formula "17") (term "1") (ifseqformula "16"))
                                    (rule "applyEq" (formula "24") (term "0,1") (ifseqformula "16"))
                                     (builtin "One Step Simplification" (formula "24"))
                                    (rule "applyEqRigid" (formula "25") (term "0,1") (ifseqformula "16"))
                                     (builtin "One Step Simplification" (formula "25"))
                                    (rule "applyEq" (formula "24") (term "2,0") (ifseqformula "16"))
                                    (rule "elementOfSubsetOfUnion2" (formula "24") (term "0,0") (ifseqformula "19") (ifseqformula "45"))
                                    (rule "elementOfIntersect" (formula "24") (term "1"))
                                     (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "53")))
                                    (rule "replaceKnownSelect_taclet0_4" (formula "24") (term "0,0,1,1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet0_5" (formula "24") (term "0,0,1,1"))
                                    (rule "replace_known_left" (formula "24") (term "0,1,1") (ifseqformula "8"))
                                     (builtin "One Step Simplification" (formula "24"))
                                    (rule "notLeft" (formula "24"))
                                    (rule "replace_known_right" (formula "24") (term "0,0") (ifseqformula "45"))
                                     (builtin "One Step Simplification" (formula "24"))
                                    (rule "eqSymm" (formula "24"))
                                    (rule "applyEqRigid" (formula "55") (term "2,0,0,1") (ifseqformula "24"))
                                    (rule "applyEq" (formula "25") (term "1") (ifseqformula "24"))
                                    (rule "elementOfSubsetOfUnion2" (formula "45") (ifseqformula "19") (ifseqformula "46"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "46"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "notLeft" (formula "1"))
                                    (rule "elementOfIntersect" (formula "45"))
                                     (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "46")))
                                    (rule "false_right" (formula "45"))
                                    (rule "ifthenelse_split" (formula "42") (term "0"))
                                    (branch "(self_1, List::$footprint) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> TRUE"
                                       (rule "applyEqReverse" (formula "44") (term "0") (ifseqformula "43"))
                                       (rule "hideAuxiliaryEq" (formula "43"))
                                       (rule "elementOfSubsetImpliesElementOfSuperset" (formula "42") (ifseqformula "35"))
                                        (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "52")))
                                       (rule "replaceKnownSelect_taclet0000000_18" (formula "42") (term "0,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet0000000_21" (formula "42") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "42"))
                                       (rule "true_left" (formula "42"))
                                       (rule "ifthenelse_split" (formula "40") (term "0"))
                                       (branch "(self_1, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> TRUE"
                                          (rule "elementOfSubsetImpliesElementOfSuperset" (formula "40") (ifseqformula "35"))
                                           (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "53")))
                                          (rule "replaceKnownSelect_taclet0000000_18" (formula "40") (term "0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet0000000_21" (formula "40") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "40"))
                                          (rule "true_left" (formula "40"))
                                          (rule "ifthenelse_split" (formula "18") (term "0"))
                                          (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_ArrayList<<anonHeapFunction>> TRUE"
                                             (rule "applyEqReverse" (formula "27") (term "2,0,0") (ifseqformula "19"))
                                             (rule "applyEqReverse" (formula "28") (term "0,1") (ifseqformula "19"))
                                             (rule "applyEqReverse" (formula "27") (term "2,0") (ifseqformula "19"))
                                             (rule "applyEqReverse" (formula "20") (term "0") (ifseqformula "19"))
                                             (rule "applyEqReverse" (formula "47") (term "2") (ifseqformula "19"))
                                             (rule "applyEqReverse" (formula "23") (term "1,0") (ifseqformula "19"))
                                             (rule "hideAuxiliaryEq" (formula "19"))
                                             (rule "elementOfSubsetOfUnion2" (formula "46") (ifseqformula "19") (ifseqformula "47"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "47"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "notLeft" (formula "1"))
                                             (rule "elementOfSubsetImpliesElementOfSuperset" (formula "18") (ifseqformula "11"))
                                              (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "56")) (ifInst ""  (formula "55")))
                                             (rule "true_left" (formula "18"))
                                             (rule "elementOfIntersect" (formula "46"))
                                              (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "47")))
                                             (rule "false_right" (formula "46"))
                                             (rule "commuteUnion" (formula "27") (term "1"))
                                             (rule "ifthenelse_split" (formula "56") (term "0,0,1"))
                                             (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> TRUE"
                                                (rule "elementOfSubsetImpliesElementOfSuperset" (formula "1") (ifseqformula "36"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "56")))
                                                (rule "notLeft" (formula "1"))
                                                (rule "pullOutSelect" (formula "47") (term "0") (inst "selectSK=java_lang_Object_created__6"))
                                                (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "57")))
                                                (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "2,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "2,0"))
                                                (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "0,0,0,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "0,0,0,0"))
                                                (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "10"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "applyEqReverse" (formula "48") (term "0") (ifseqformula "1"))
                                                (rule "close" (formula "48") (ifseqformula "10"))
                                             )
                                             (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> FALSE"
                                                 (builtin "One Step Simplification" (formula "57"))
                                                (rule "qeq_literals" (formula "57") (term "1"))
                                                 (builtin "One Step Simplification" (formula "57"))
                                                (rule "false_right" (formula "57"))
                                                (rule "ifthenelse_split" (formula "26") (term "0"))
                                                (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_add<<anonHeapFunction>> TRUE"
                                                   (rule "applyEqReverse" (formula "28") (term "0") (ifseqformula "27"))
                                                   (rule "hideAuxiliaryEq" (formula "27"))
                                                   (rule "elementOfSubsetImpliesElementOfSuperset" (formula "26") (ifseqformula "19"))
                                                   (rule "elementOfUnion" (formula "26"))
                                                    (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "18")))
                                                   (rule "true_left" (formula "26"))
                                                   (rule "equalityToSeqGetAndSeqLenLeft" (formula "42") (inst "iv=iv"))
                                                    (builtin "One Step Simplification" (formula "42"))
                                                   (rule "andLeft" (formula "42"))
                                                   (rule "getOfSeqSingleton" (formula "43") (term "1,1,0"))
                                                   (rule "castDel" (formula "43") (term "1,1,1,0"))
                                                   (rule "castDel" (formula "43") (term "2,1,1,0"))
                                                   (rule "eqSymm" (formula "43") (term "1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "43") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "43") (term "0,0,0"))
                                                   (rule "applyEq" (formula "43") (term "0,0,1,0,0,1,0,0") (ifseqformula "44"))
                                                    (builtin "One Step Simplification" (formula "43"))
                                                   (rule "mul_literals" (formula "43") (term "1,0,0,1,0,0"))
                                                   (rule "add_literals" (formula "43") (term "0,0,1,0,0"))
                                                   (rule "add_zero_left" (formula "43") (term "0,1,0,0"))
                                                   (rule "applyEqRigid" (formula "42") (term "0,0") (ifseqformula "44"))
                                                    (builtin "One Step Simplification" (formula "42"))
                                                   (rule "true_left" (formula "42"))
                                                   (rule "applyEq" (formula "42") (term "0,1,1,0") (ifseqformula "43"))
                                                   (rule "getOfSeqSingleton" (formula "42") (term "1,1,0"))
                                                   (rule "castDel" (formula "42") (term "2,1,1,0"))
                                                   (rule "castDel" (formula "42") (term "1,1,1,0"))
                                                    (builtin "One Step Simplification" (formula "42"))
                                                   (rule "true_left" (formula "42"))
                                                   (rule "equalityToSeqGetAndSeqLenLeft" (formula "34") (inst "iv=iv"))
                                                    (builtin "One Step Simplification" (formula "34"))
                                                   (rule "andLeft" (formula "34"))
                                                   (rule "inEqSimp_ltToLeq" (formula "35") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "35") (term "0,0,0"))
                                                   (rule "applyEq" (formula "35") (term "0,0,1,0,0,1,0,0") (ifseqformula "36"))
                                                    (builtin "One Step Simplification" (formula "35"))
                                                   (rule "mul_literals" (formula "35") (term "1,0,0,1,0,0"))
                                                   (rule "add_literals" (formula "35") (term "0,0,1,0,0"))
                                                   (rule "applyEq" (formula "34") (term "0,0") (ifseqformula "36"))
                                                    (builtin "One Step Simplification" (formula "34"))
                                                   (rule "true_left" (formula "34"))
                                                   (rule "applyEq" (formula "34") (term "0,0,1,0") (ifseqformula "35"))
                                                    (builtin "One Step Simplification" (formula "34"))
                                                   (rule "true_left" (formula "34"))
                                                   (rule "equalityToSeqGetAndSeqLenLeft" (formula "16") (inst "iv=iv"))
                                                    (builtin "One Step Simplification" (formula "16"))
                                                   (rule "equal_literals" (formula "16") (term "0"))
                                                    (builtin "One Step Simplification" (formula "16"))
                                                   (rule "closeFalse" (formula "16"))
                                                )
                                                (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_add<<anonHeapFunction>> FALSE"
                                                   (rule "applyEqReverse" (formula "27") (term "0") (ifseqformula "26"))
                                                    (builtin "One Step Simplification" (formula "27"))
                                                   (rule "true_left" (formula "27"))
                                                   (rule "hideAuxiliaryEq" (formula "26"))
                                                   (rule "equalityToSeqGetAndSeqLenLeft" (formula "40") (inst "iv=iv"))
                                                    (builtin "One Step Simplification" (formula "40"))
                                                   (rule "andLeft" (formula "40"))
                                                   (rule "getOfSeqSingleton" (formula "41") (term "1,1,0"))
                                                   (rule "castDel" (formula "41") (term "2,1,1,0"))
                                                   (rule "castDel" (formula "41") (term "1,1,1,0"))
                                                   (rule "eqSymm" (formula "41") (term "1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "41") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "41") (term "0,0,0"))
                                                   (rule "applyEqRigid" (formula "41") (term "0,0,1,0,0,1,0,0") (ifseqformula "42"))
                                                    (builtin "One Step Simplification" (formula "41"))
                                                   (rule "mul_literals" (formula "41") (term "1,0,0,1,0,0"))
                                                   (rule "add_literals" (formula "41") (term "0,0,1,0,0"))
                                                   (rule "add_zero_left" (formula "41") (term "0,1,0,0"))
                                                   (rule "applyEqRigid" (formula "40") (term "0,0") (ifseqformula "42"))
                                                    (builtin "One Step Simplification" (formula "40"))
                                                   (rule "true_left" (formula "40"))
                                                   (rule "applyEqRigid" (formula "40") (term "0,1,1,0") (ifseqformula "41"))
                                                   (rule "getOfSeqSingleton" (formula "40") (term "1,1,0"))
                                                   (rule "castDel" (formula "40") (term "1,1,1,0"))
                                                   (rule "castDel" (formula "40") (term "2,1,1,0"))
                                                    (builtin "One Step Simplification" (formula "40"))
                                                   (rule "true_left" (formula "40"))
                                                   (rule "equalityToSeqGetAndSeqLenLeft" (formula "32") (inst "iv=iv"))
                                                    (builtin "One Step Simplification" (formula "32"))
                                                   (rule "andLeft" (formula "32"))
                                                   (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0,0"))
                                                   (rule "applyEq" (formula "33") (term "0,0,1,0,0,1,0,0") (ifseqformula "34"))
                                                    (builtin "One Step Simplification" (formula "33"))
                                                   (rule "mul_literals" (formula "33") (term "1,0,0,1,0,0"))
                                                   (rule "add_zero_right" (formula "33") (term "0,0,1,0,0"))
                                                   (rule "applyEq" (formula "32") (term "0,0") (ifseqformula "34"))
                                                    (builtin "One Step Simplification" (formula "32"))
                                                   (rule "true_left" (formula "32"))
                                                   (rule "applyEq" (formula "32") (term "0,0,1,0") (ifseqformula "33"))
                                                    (builtin "One Step Simplification" (formula "32"))
                                                   (rule "true_left" (formula "32"))
                                                   (rule "equalityToSeqGetAndSeqLenLeft" (formula "16") (inst "iv=iv"))
                                                    (builtin "One Step Simplification" (formula "16"))
                                                   (rule "equal_literals" (formula "16") (term "0"))
                                                    (builtin "One Step Simplification" (formula "16"))
                                                   (rule "closeFalse" (formula "16"))
                                                )
                                             )
                                          )
                                          (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_ArrayList<<anonHeapFunction>> FALSE"
                                             (rule "applyEqReverse" (formula "22") (term "1,0") (ifseqformula "18"))
                                             (rule "applyEqReverse" (formula "47") (term "2") (ifseqformula "18"))
                                             (rule "applyEqReverse" (formula "26") (term "2,0") (ifseqformula "18"))
                                             (rule "applyEqReverse" (formula "26") (term "2,0,0") (ifseqformula "18"))
                                             (rule "applyEqReverse" (formula "19") (term "0") (ifseqformula "18"))
                                              (builtin "One Step Simplification" (formula "19"))
                                             (rule "true_left" (formula "19"))
                                             (rule "applyEqReverse" (formula "26") (term "0,1") (ifseqformula "18"))
                                             (rule "hideAuxiliaryEq" (formula "18"))
                                             (rule "replace_known_right" (formula "24") (term "0,0") (ifseqformula "44"))
                                              (builtin "One Step Simplification" (formula "24"))
                                             (rule "applyEqReverse" (formula "25") (term "0") (ifseqformula "24"))
                                              (builtin "One Step Simplification" (formula "25"))
                                             (rule "true_left" (formula "25"))
                                             (rule "hideAuxiliaryEq" (formula "24"))
                                             (rule "ifthenelse_split" (formula "52") (term "0,0,1"))
                                             (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> TRUE"
                                                (rule "elementOfSubsetImpliesElementOfSuperset" (formula "1") (ifseqformula "32"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "52")))
                                                (rule "notLeft" (formula "1"))
                                                (rule "pullOutSelect" (formula "43") (term "0") (inst "selectSK=java_lang_Object_created__6"))
                                                (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "22"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")))
                                                (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "2,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "2,0"))
                                                (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "0,0,0,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "0,0,0,0"))
                                                (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "10"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "applyEqReverse" (formula "44") (term "0") (ifseqformula "1"))
                                                (rule "close" (formula "44") (ifseqformula "10"))
                                             )
                                             (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> FALSE"
                                                 (builtin "One Step Simplification" (formula "53"))
                                                (rule "qeq_literals" (formula "53") (term "1"))
                                                 (builtin "One Step Simplification" (formula "53"))
                                                (rule "false_right" (formula "53"))
                                                (rule "equalityToSeqGetAndSeqLenLeft" (formula "38") (inst "iv=iv"))
                                                 (builtin "One Step Simplification" (formula "38"))
                                                (rule "andLeft" (formula "38"))
                                                (rule "getOfSeqSingleton" (formula "39") (term "1,1,0"))
                                                (rule "castDel" (formula "39") (term "1,1,1,0"))
                                                (rule "castDel" (formula "39") (term "2,1,1,0"))
                                                (rule "eqSymm" (formula "39") (term "1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "39") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "39") (term "0,0,0"))
                                                (rule "applyEqRigid" (formula "39") (term "0,0,1,0,0,1,0,0") (ifseqformula "40"))
                                                 (builtin "One Step Simplification" (formula "39"))
                                                (rule "mul_literals" (formula "39") (term "1,0,0,1,0,0"))
                                                (rule "add_literals" (formula "39") (term "0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "39") (term "0,1,0,0"))
                                                (rule "applyEq" (formula "38") (term "0,0") (ifseqformula "40"))
                                                 (builtin "One Step Simplification" (formula "38"))
                                                (rule "true_left" (formula "38"))
                                                (rule "applyEq" (formula "38") (term "0,1,1,0") (ifseqformula "39"))
                                                (rule "getOfSeqSingleton" (formula "38") (term "1,1,0"))
                                                (rule "castDel" (formula "38") (term "1,1,1,0"))
                                                (rule "castDel" (formula "38") (term "2,1,1,0"))
                                                 (builtin "One Step Simplification" (formula "38"))
                                                (rule "true_left" (formula "38"))
                                                (rule "equalityToSeqGetAndSeqLenLeft" (formula "30") (inst "iv=iv"))
                                                 (builtin "One Step Simplification" (formula "30"))
                                                (rule "andLeft" (formula "30"))
                                                (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "31") (term "0,0,0"))
                                                (rule "applyEq" (formula "31") (term "0,0,1,0") (ifseqformula "32"))
                                                 (builtin "One Step Simplification" (formula "31"))
                                                (rule "true_left" (formula "31"))
                                                (rule "applyEq" (formula "30") (term "0,0") (ifseqformula "31"))
                                                 (builtin "One Step Simplification" (formula "30"))
                                                (rule "true_left" (formula "30"))
                                                (rule "equalityToSeqGetAndSeqLenLeft" (formula "16") (inst "iv=iv"))
                                                 (builtin "One Step Simplification" (formula "16"))
                                                (rule "equal_literals" (formula "16") (term "0"))
                                                 (builtin "One Step Simplification" (formula "16"))
                                                (rule "closeFalse" (formula "16"))
                                             )
                                          )
                                       )
                                       (branch "(self_1, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> FALSE"
                                          (rule "eqSymm" (formula "40"))
                                          (rule "applyEq" (formula "41") (term "1") (ifseqformula "40"))
                                          (rule "ifthenelse_split" (formula "18") (term "0"))
                                          (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_ArrayList<<anonHeapFunction>> TRUE"
                                             (rule "applyEqReverse" (formula "28") (term "0,1") (ifseqformula "19"))
                                             (rule "applyEqReverse" (formula "27") (term "2,0,0") (ifseqformula "19"))
                                             (rule "applyEqReverse" (formula "20") (term "0") (ifseqformula "19"))
                                             (rule "applyEqReverse" (formula "47") (term "2") (ifseqformula "19"))
                                             (rule "applyEqReverse" (formula "23") (term "1,0") (ifseqformula "19"))
                                             (rule "applyEqReverse" (formula "27") (term "2,0") (ifseqformula "19"))
                                             (rule "hideAuxiliaryEq" (formula "19"))
                                             (rule "elementOfSubsetImpliesElementOfSuperset" (formula "18") (ifseqformula "11"))
                                              (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "55")) (ifInst ""  (formula "54")))
                                             (rule "true_left" (formula "18"))
                                             (rule "elementOfSubsetOfUnion2" (formula "46") (ifseqformula "19") (ifseqformula "47"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "47"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "notLeft" (formula "1"))
                                             (rule "elementOfIntersect" (formula "45"))
                                              (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "47")))
                                             (rule "false_right" (formula "45"))
                                             (rule "commuteUnion" (formula "27") (term "1"))
                                             (rule "ifthenelse_split" (formula "56") (term "0,0,1"))
                                             (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> TRUE"
                                                (rule "elementOfSubsetImpliesElementOfSuperset" (formula "1") (ifseqformula "36"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "56")))
                                                (rule "notLeft" (formula "1"))
                                                (rule "pullOutSelect" (formula "46") (term "0") (inst "selectSK=java_lang_Object_created__6"))
                                                (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "57")))
                                                (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "2,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "2,0"))
                                                (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "0,0,0,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "0,0,0,0"))
                                                (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "10"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "applyEqReverse" (formula "47") (term "0") (ifseqformula "1"))
                                                (rule "close" (formula "47") (ifseqformula "10"))
                                             )
                                             (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> FALSE"
                                                 (builtin "One Step Simplification" (formula "57"))
                                                (rule "qeq_literals" (formula "57") (term "1"))
                                                 (builtin "One Step Simplification" (formula "57"))
                                                (rule "false_right" (formula "57"))
                                                (rule "ifthenelse_split" (formula "26") (term "0"))
                                                (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_add<<anonHeapFunction>> TRUE"
                                                   (rule "applyEqReverse" (formula "28") (term "0") (ifseqformula "27"))
                                                   (rule "hideAuxiliaryEq" (formula "27"))
                                                   (rule "elementOfSubsetImpliesElementOfSuperset" (formula "26") (ifseqformula "19"))
                                                   (rule "elementOfUnion" (formula "26"))
                                                    (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "18")))
                                                   (rule "true_left" (formula "26"))
                                                   (rule "equalityToSeqGetAndSeqLenLeft" (formula "34") (inst "iv=iv"))
                                                    (builtin "One Step Simplification" (formula "34"))
                                                   (rule "andLeft" (formula "34"))
                                                   (rule "inEqSimp_ltToLeq" (formula "35") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "35") (term "0,0,0"))
                                                   (rule "applyEq" (formula "35") (term "0,0,1,0") (ifseqformula "36"))
                                                    (builtin "One Step Simplification" (formula "35"))
                                                   (rule "true_left" (formula "35"))
                                                   (rule "applyEq" (formula "34") (term "0,0") (ifseqformula "35"))
                                                    (builtin "One Step Simplification" (formula "34"))
                                                   (rule "true_left" (formula "34"))
                                                   (rule "equalityToSeqGetAndSeqLenLeft" (formula "16") (inst "iv=iv"))
                                                    (builtin "One Step Simplification" (formula "16"))
                                                   (rule "equal_literals" (formula "16") (term "0"))
                                                    (builtin "One Step Simplification" (formula "16"))
                                                   (rule "closeFalse" (formula "16"))
                                                )
                                                (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_add<<anonHeapFunction>> FALSE"
                                                   (rule "applyEqReverse" (formula "27") (term "0") (ifseqformula "26"))
                                                    (builtin "One Step Simplification" (formula "27"))
                                                   (rule "true_left" (formula "27"))
                                                   (rule "hideAuxiliaryEq" (formula "26"))
                                                   (rule "equalityToSeqGetAndSeqLenLeft" (formula "32") (inst "iv=iv"))
                                                    (builtin "One Step Simplification" (formula "32"))
                                                   (rule "andLeft" (formula "32"))
                                                   (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0,0"))
                                                   (rule "applyEq" (formula "32") (term "0,0") (ifseqformula "34"))
                                                    (builtin "One Step Simplification" (formula "32"))
                                                   (rule "true_left" (formula "32"))
                                                   (rule "applyEq" (formula "32") (term "0,0,1,0") (ifseqformula "33"))
                                                    (builtin "One Step Simplification" (formula "32"))
                                                   (rule "true_left" (formula "32"))
                                                   (rule "equalityToSeqGetAndSeqLenLeft" (formula "16") (inst "iv=iv"))
                                                    (builtin "One Step Simplification" (formula "16"))
                                                   (rule "equal_literals" (formula "16") (term "0"))
                                                    (builtin "One Step Simplification" (formula "16"))
                                                   (rule "closeFalse" (formula "16"))
                                                )
                                             )
                                          )
                                          (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_ArrayList<<anonHeapFunction>> FALSE"
                                             (rule "applyEqReverse" (formula "26") (term "2,0,0") (ifseqformula "18"))
                                             (rule "applyEqReverse" (formula "27") (term "0,1") (ifseqformula "18"))
                                             (rule "applyEqReverse" (formula "19") (term "0") (ifseqformula "18"))
                                              (builtin "One Step Simplification" (formula "19"))
                                             (rule "true_left" (formula "19"))
                                             (rule "applyEqReverse" (formula "46") (term "2") (ifseqformula "18"))
                                             (rule "applyEqReverse" (formula "21") (term "1,0") (ifseqformula "18"))
                                             (rule "applyEqReverse" (formula "25") (term "2,0") (ifseqformula "18"))
                                             (rule "hideAuxiliaryEq" (formula "18"))
                                             (rule "replace_known_right" (formula "24") (term "0,0") (ifseqformula "43"))
                                              (builtin "One Step Simplification" (formula "24"))
                                             (rule "applyEqReverse" (formula "25") (term "0") (ifseqformula "24"))
                                              (builtin "One Step Simplification" (formula "25"))
                                             (rule "true_left" (formula "25"))
                                             (rule "hideAuxiliaryEq" (formula "24"))
                                             (rule "ifthenelse_split" (formula "52") (term "0,0,1"))
                                             (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> TRUE"
                                                (rule "elementOfSubsetImpliesElementOfSuperset" (formula "1") (ifseqformula "32"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "52")))
                                                (rule "notLeft" (formula "1"))
                                                (rule "pullOutSelect" (formula "42") (term "0") (inst "selectSK=java_lang_Object_created__6"))
                                                (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "22"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")))
                                                (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "2,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "2,0"))
                                                (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "0,0,0,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "0,0,0,0"))
                                                (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "10"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "applyEqReverse" (formula "43") (term "0") (ifseqformula "1"))
                                                (rule "close" (formula "43") (ifseqformula "10"))
                                             )
                                             (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> FALSE"
                                                 (builtin "One Step Simplification" (formula "53"))
                                                (rule "qeq_literals" (formula "53") (term "1"))
                                                 (builtin "One Step Simplification" (formula "53"))
                                                (rule "false_right" (formula "53"))
                                                (rule "equalityToSeqGetAndSeqLenLeft" (formula "30") (inst "iv=iv"))
                                                 (builtin "One Step Simplification" (formula "30"))
                                                (rule "andLeft" (formula "30"))
                                                (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "31") (term "0,0,0"))
                                                (rule "applyEq" (formula "30") (term "0,0") (ifseqformula "32"))
                                                 (builtin "One Step Simplification" (formula "30"))
                                                (rule "true_left" (formula "30"))
                                                (rule "applyEq" (formula "30") (term "0,0,1,0") (ifseqformula "31"))
                                                 (builtin "One Step Simplification" (formula "30"))
                                                (rule "true_left" (formula "30"))
                                                (rule "equalityToSeqGetAndSeqLenLeft" (formula "16") (inst "iv=iv"))
                                                 (builtin "One Step Simplification" (formula "16"))
                                                (rule "equal_literals" (formula "16") (term "0"))
                                                 (builtin "One Step Simplification" (formula "16"))
                                                (rule "closeFalse" (formula "16"))
                                             )
                                          )
                                       )
                                    )
                                    (branch "(self_1, List::$footprint) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> FALSE"
                                       (rule "applyEqReverse" (formula "43") (term "0") (ifseqformula "42"))
                                        (builtin "One Step Simplification" (formula "43"))
                                       (rule "true_left" (formula "43"))
                                       (rule "hideAuxiliaryEq" (formula "42"))
                                       (rule "ifthenelse_split" (formula "40") (term "0"))
                                       (branch "(self_1, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> TRUE"
                                          (rule "elementOfSubsetImpliesElementOfSuperset" (formula "40") (ifseqformula "35"))
                                           (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "52")))
                                          (rule "replaceKnownSelect_taclet0000000_18" (formula "40") (term "0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet0000000_21" (formula "40") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "40"))
                                          (rule "true_left" (formula "40"))
                                          (rule "ifthenelse_split" (formula "18") (term "0"))
                                          (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_ArrayList<<anonHeapFunction>> TRUE"
                                             (rule "applyEqReverse" (formula "23") (term "1,0") (ifseqformula "19"))
                                             (rule "applyEqReverse" (formula "27") (term "2,0,0") (ifseqformula "19"))
                                             (rule "applyEqReverse" (formula "28") (term "0,1") (ifseqformula "19"))
                                             (rule "applyEqReverse" (formula "20") (term "0") (ifseqformula "19"))
                                             (rule "applyEqReverse" (formula "46") (term "2") (ifseqformula "19"))
                                             (rule "applyEqReverse" (formula "27") (term "2,0") (ifseqformula "19"))
                                             (rule "hideAuxiliaryEq" (formula "19"))
                                             (rule "elementOfSubsetImpliesElementOfSuperset" (formula "18") (ifseqformula "11"))
                                              (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "54")) (ifInst ""  (formula "53")))
                                             (rule "true_left" (formula "18"))
                                             (rule "elementOfSubsetOfUnion2" (formula "45") (ifseqformula "19") (ifseqformula "46"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "46"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "notLeft" (formula "1"))
                                             (rule "elementOfIntersect" (formula "44"))
                                              (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "46")))
                                             (rule "false_right" (formula "44"))
                                             (rule "commuteUnion" (formula "27") (term "1"))
                                             (rule "ifthenelse_split" (formula "55") (term "0,0,1"))
                                             (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> TRUE"
                                                (rule "elementOfSubsetImpliesElementOfSuperset" (formula "1") (ifseqformula "36"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "55")))
                                                (rule "notLeft" (formula "1"))
                                                (rule "pullOutSelect" (formula "45") (term "0") (inst "selectSK=java_lang_Object_created__6"))
                                                (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "56")))
                                                (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "2,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "2,0"))
                                                (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "0,0,0,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "0,0,0,0"))
                                                (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "10"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "applyEqReverse" (formula "46") (term "0") (ifseqformula "1"))
                                                (rule "close" (formula "46") (ifseqformula "10"))
                                             )
                                             (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> FALSE"
                                                 (builtin "One Step Simplification" (formula "56"))
                                                (rule "qeq_literals" (formula "56") (term "1"))
                                                 (builtin "One Step Simplification" (formula "56"))
                                                (rule "false_right" (formula "56"))
                                                (rule "ifthenelse_split" (formula "26") (term "0"))
                                                (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_add<<anonHeapFunction>> TRUE"
                                                   (rule "applyEqReverse" (formula "28") (term "0") (ifseqformula "27"))
                                                   (rule "hideAuxiliaryEq" (formula "27"))
                                                   (rule "elementOfSubsetImpliesElementOfSuperset" (formula "26") (ifseqformula "19"))
                                                   (rule "elementOfUnion" (formula "26"))
                                                    (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "18")))
                                                   (rule "true_left" (formula "26"))
                                                   (rule "equalityToSeqGetAndSeqLenLeft" (formula "42") (inst "iv=iv"))
                                                    (builtin "One Step Simplification" (formula "42"))
                                                   (rule "andLeft" (formula "42"))
                                                   (rule "getOfSeqSingleton" (formula "43") (term "1,1,0"))
                                                   (rule "castDel" (formula "43") (term "2,1,1,0"))
                                                   (rule "castDel" (formula "43") (term "1,1,1,0"))
                                                   (rule "eqSymm" (formula "43") (term "1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "43") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "43") (term "0,0,0"))
                                                   (rule "applyEqRigid" (formula "43") (term "0,1,1,0") (ifseqformula "44"))
                                                   (rule "getOfSeqSingleton" (formula "43") (term "1,1,0"))
                                                   (rule "castDel" (formula "43") (term "1,1,1,0"))
                                                   (rule "castDel" (formula "43") (term "2,1,1,0"))
                                                    (builtin "One Step Simplification" (formula "43"))
                                                   (rule "true_left" (formula "43"))
                                                   (rule "applyEq" (formula "42") (term "0,0") (ifseqformula "43"))
                                                    (builtin "One Step Simplification" (formula "42"))
                                                   (rule "true_left" (formula "42"))
                                                   (rule "equalityToSeqGetAndSeqLenLeft" (formula "34") (inst "iv=iv"))
                                                    (builtin "One Step Simplification" (formula "34"))
                                                   (rule "andLeft" (formula "34"))
                                                   (rule "inEqSimp_ltToLeq" (formula "35") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "35") (term "0,0,0"))
                                                   (rule "applyEq" (formula "35") (term "0,0,1,0,0,1,0,0") (ifseqformula "36"))
                                                    (builtin "One Step Simplification" (formula "35"))
                                                   (rule "mul_literals" (formula "35") (term "1,0,0,1,0,0"))
                                                   (rule "add_zero_right" (formula "35") (term "0,0,1,0,0"))
                                                   (rule "applyEq" (formula "34") (term "0,0") (ifseqformula "36"))
                                                    (builtin "One Step Simplification" (formula "34"))
                                                   (rule "true_left" (formula "34"))
                                                   (rule "applyEq" (formula "34") (term "0,0,1,0") (ifseqformula "35"))
                                                    (builtin "One Step Simplification" (formula "34"))
                                                   (rule "true_left" (formula "34"))
                                                   (rule "equalityToSeqGetAndSeqLenLeft" (formula "16") (inst "iv=iv"))
                                                    (builtin "One Step Simplification" (formula "16"))
                                                   (rule "equal_literals" (formula "16") (term "0"))
                                                    (builtin "One Step Simplification" (formula "16"))
                                                   (rule "closeFalse" (formula "16"))
                                                )
                                                (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_add<<anonHeapFunction>> FALSE"
                                                   (rule "applyEqReverse" (formula "27") (term "0") (ifseqformula "26"))
                                                    (builtin "One Step Simplification" (formula "27"))
                                                   (rule "true_left" (formula "27"))
                                                   (rule "hideAuxiliaryEq" (formula "26"))
                                                   (rule "equalityToSeqGetAndSeqLenLeft" (formula "40") (inst "iv=iv"))
                                                    (builtin "One Step Simplification" (formula "40"))
                                                   (rule "andLeft" (formula "40"))
                                                   (rule "getOfSeqSingleton" (formula "41") (term "1,1,0"))
                                                   (rule "castDel" (formula "41") (term "1,1,1,0"))
                                                   (rule "castDel" (formula "41") (term "2,1,1,0"))
                                                   (rule "eqSymm" (formula "41") (term "1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "41") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "41") (term "0,0,0"))
                                                   (rule "applyEqRigid" (formula "41") (term "0,0,1,0,0,1,0,0") (ifseqformula "42"))
                                                    (builtin "One Step Simplification" (formula "41"))
                                                   (rule "mul_literals" (formula "41") (term "1,0,0,1,0,0"))
                                                   (rule "add_literals" (formula "41") (term "0,0,1,0,0"))
                                                   (rule "add_zero_left" (formula "41") (term "0,1,0,0"))
                                                   (rule "applyEq" (formula "40") (term "0,0") (ifseqformula "42"))
                                                    (builtin "One Step Simplification" (formula "40"))
                                                   (rule "true_left" (formula "40"))
                                                   (rule "applyEq" (formula "40") (term "0,1,1,0") (ifseqformula "41"))
                                                   (rule "getOfSeqSingleton" (formula "40") (term "1,1,0"))
                                                   (rule "castDel" (formula "40") (term "1,1,1,0"))
                                                   (rule "castDel" (formula "40") (term "2,1,1,0"))
                                                    (builtin "One Step Simplification" (formula "40"))
                                                   (rule "true_left" (formula "40"))
                                                   (rule "equalityToSeqGetAndSeqLenLeft" (formula "32") (inst "iv=iv"))
                                                    (builtin "One Step Simplification" (formula "32"))
                                                   (rule "andLeft" (formula "32"))
                                                   (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0,0"))
                                                   (rule "applyEq" (formula "33") (term "0,0,1,0") (ifseqformula "34"))
                                                    (builtin "One Step Simplification" (formula "33"))
                                                   (rule "true_left" (formula "33"))
                                                   (rule "applyEq" (formula "32") (term "0,0") (ifseqformula "33"))
                                                    (builtin "One Step Simplification" (formula "32"))
                                                   (rule "true_left" (formula "32"))
                                                   (rule "equalityToSeqGetAndSeqLenLeft" (formula "16") (inst "iv=iv"))
                                                    (builtin "One Step Simplification" (formula "16"))
                                                   (rule "equal_literals" (formula "16") (term "0"))
                                                    (builtin "One Step Simplification" (formula "16"))
                                                   (rule "closeFalse" (formula "16"))
                                                )
                                             )
                                          )
                                          (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_ArrayList<<anonHeapFunction>> FALSE"
                                             (rule "applyEqReverse" (formula "22") (term "1,0") (ifseqformula "18"))
                                             (rule "applyEqReverse" (formula "26") (term "2,0,0") (ifseqformula "18"))
                                             (rule "applyEqReverse" (formula "26") (term "2,0") (ifseqformula "18"))
                                             (rule "applyEqReverse" (formula "27") (term "0,1") (ifseqformula "18"))
                                             (rule "applyEqReverse" (formula "19") (term "0") (ifseqformula "18"))
                                              (builtin "One Step Simplification" (formula "19"))
                                             (rule "true_left" (formula "19"))
                                             (rule "applyEqReverse" (formula "45") (term "2") (ifseqformula "18"))
                                             (rule "hideAuxiliaryEq" (formula "18"))
                                             (rule "replace_known_right" (formula "24") (term "0,0") (ifseqformula "42"))
                                              (builtin "One Step Simplification" (formula "24"))
                                             (rule "applyEqReverse" (formula "25") (term "0") (ifseqformula "24"))
                                              (builtin "One Step Simplification" (formula "25"))
                                             (rule "true_left" (formula "25"))
                                             (rule "hideAuxiliaryEq" (formula "24"))
                                             (rule "ifthenelse_split" (formula "51") (term "0,0,1"))
                                             (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> TRUE"
                                                (rule "elementOfSubsetImpliesElementOfSuperset" (formula "1") (ifseqformula "32"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "51")))
                                                (rule "notLeft" (formula "1"))
                                                (rule "pullOutSelect" (formula "41") (term "0") (inst "selectSK=java_lang_Object_created__6"))
                                                (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "22"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "52")))
                                                (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "2,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "2,0"))
                                                (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "0,0,0,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "0,0,0,0"))
                                                (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "10"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "applyEqReverse" (formula "42") (term "0") (ifseqformula "1"))
                                                (rule "close" (formula "42") (ifseqformula "10"))
                                             )
                                             (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> FALSE"
                                                 (builtin "One Step Simplification" (formula "52"))
                                                (rule "qeq_literals" (formula "52") (term "1"))
                                                 (builtin "One Step Simplification" (formula "52"))
                                                (rule "false_right" (formula "52"))
                                                (rule "equalityToSeqGetAndSeqLenLeft" (formula "38") (inst "iv=iv"))
                                                 (builtin "One Step Simplification" (formula "38"))
                                                (rule "andLeft" (formula "38"))
                                                (rule "getOfSeqSingleton" (formula "39") (term "1,1,0"))
                                                (rule "castDel" (formula "39") (term "2,1,1,0"))
                                                (rule "castDel" (formula "39") (term "1,1,1,0"))
                                                (rule "eqSymm" (formula "39") (term "1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "39") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "39") (term "0,0,0"))
                                                (rule "applyEq" (formula "39") (term "0,1,1,0") (ifseqformula "40"))
                                                (rule "getOfSeqSingleton" (formula "39") (term "1,1,0"))
                                                (rule "castDel" (formula "39") (term "2,1,1,0"))
                                                (rule "castDel" (formula "39") (term "1,1,1,0"))
                                                 (builtin "One Step Simplification" (formula "39"))
                                                (rule "true_left" (formula "39"))
                                                (rule "applyEq" (formula "38") (term "0,0") (ifseqformula "39"))
                                                 (builtin "One Step Simplification" (formula "38"))
                                                (rule "true_left" (formula "38"))
                                                (rule "equalityToSeqGetAndSeqLenLeft" (formula "30") (inst "iv=iv"))
                                                 (builtin "One Step Simplification" (formula "30"))
                                                (rule "andLeft" (formula "30"))
                                                (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "31") (term "0,0,0"))
                                                (rule "applyEq" (formula "31") (term "0,0,1,0,0,1,0,0") (ifseqformula "32"))
                                                 (builtin "One Step Simplification" (formula "31"))
                                                (rule "mul_literals" (formula "31") (term "1,0,0,1,0,0"))
                                                (rule "add_zero_right" (formula "31") (term "0,0,1,0,0"))
                                                (rule "applyEq" (formula "30") (term "0,0") (ifseqformula "32"))
                                                 (builtin "One Step Simplification" (formula "30"))
                                                (rule "true_left" (formula "30"))
                                                (rule "applyEq" (formula "30") (term "0,0,1,0") (ifseqformula "31"))
                                                 (builtin "One Step Simplification" (formula "30"))
                                                (rule "true_left" (formula "30"))
                                                (rule "equalityToSeqGetAndSeqLenLeft" (formula "16") (inst "iv=iv"))
                                                 (builtin "One Step Simplification" (formula "16"))
                                                (rule "equal_literals" (formula "16") (term "0"))
                                                 (builtin "One Step Simplification" (formula "16"))
                                                (rule "closeFalse" (formula "16"))
                                             )
                                          )
                                       )
                                       (branch "(self_1, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> FALSE"
                                          (rule "eqSymm" (formula "40"))
                                          (rule "applyEq" (formula "41") (term "1") (ifseqformula "40"))
                                          (rule "ifthenelse_split" (formula "18") (term "0"))
                                          (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_ArrayList<<anonHeapFunction>> TRUE"
                                             (rule "applyEqReverse" (formula "20") (term "0") (ifseqformula "19"))
                                             (rule "applyEqReverse" (formula "27") (term "2,0,0") (ifseqformula "19"))
                                             (rule "applyEqReverse" (formula "46") (term "2") (ifseqformula "19"))
                                             (rule "applyEqReverse" (formula "23") (term "1,0") (ifseqformula "19"))
                                             (rule "applyEqReverse" (formula "27") (term "2,0") (ifseqformula "19"))
                                             (rule "applyEqReverse" (formula "28") (term "0,1") (ifseqformula "19"))
                                             (rule "hideAuxiliaryEq" (formula "19"))
                                             (rule "elementOfSubsetOfUnion2" (formula "45") (ifseqformula "19") (ifseqformula "46"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "46"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "notLeft" (formula "1"))
                                             (rule "elementOfSubsetImpliesElementOfSuperset" (formula "18") (ifseqformula "11"))
                                              (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "55")) (ifInst ""  (formula "54")))
                                             (rule "true_left" (formula "18"))
                                             (rule "elementOfIntersect" (formula "43"))
                                              (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "46")))
                                             (rule "false_right" (formula "43"))
                                             (rule "commuteUnion" (formula "27") (term "1"))
                                             (rule "ifthenelse_split" (formula "55") (term "0,0,1"))
                                             (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> TRUE"
                                                (rule "elementOfSubsetImpliesElementOfSuperset" (formula "1") (ifseqformula "36"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "55")))
                                                (rule "notLeft" (formula "1"))
                                                (rule "pullOutSelect" (formula "44") (term "0") (inst "selectSK=java_lang_Object_created__6"))
                                                (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "56")))
                                                (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "2,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "2,0"))
                                                (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "0,0,0,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "0,0,0,0"))
                                                (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "10"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "applyEqReverse" (formula "45") (term "0") (ifseqformula "1"))
                                                (rule "close" (formula "45") (ifseqformula "10"))
                                             )
                                             (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> FALSE"
                                                 (builtin "One Step Simplification" (formula "56"))
                                                (rule "qeq_literals" (formula "56") (term "1"))
                                                 (builtin "One Step Simplification" (formula "56"))
                                                (rule "false_right" (formula "56"))
                                                (rule "ifthenelse_split" (formula "26") (term "0"))
                                                (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_add<<anonHeapFunction>> TRUE"
                                                   (rule "applyEqReverse" (formula "28") (term "0") (ifseqformula "27"))
                                                   (rule "hideAuxiliaryEq" (formula "27"))
                                                   (rule "elementOfSubsetImpliesElementOfSuperset" (formula "26") (ifseqformula "19"))
                                                   (rule "elementOfUnion" (formula "26"))
                                                    (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "18")))
                                                   (rule "true_left" (formula "26"))
                                                   (rule "equalityToSeqGetAndSeqLenLeft" (formula "34") (inst "iv=iv"))
                                                    (builtin "One Step Simplification" (formula "34"))
                                                   (rule "andLeft" (formula "34"))
                                                   (rule "inEqSimp_ltToLeq" (formula "35") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "35") (term "0,0,0"))
                                                   (rule "applyEq" (formula "34") (term "0,0") (ifseqformula "36"))
                                                    (builtin "One Step Simplification" (formula "34"))
                                                   (rule "true_left" (formula "34"))
                                                   (rule "applyEq" (formula "34") (term "0,0,1,0") (ifseqformula "35"))
                                                    (builtin "One Step Simplification" (formula "34"))
                                                   (rule "true_left" (formula "34"))
                                                   (rule "equalityToSeqGetAndSeqLenLeft" (formula "16") (inst "iv=iv"))
                                                    (builtin "One Step Simplification" (formula "16"))
                                                   (rule "equal_literals" (formula "16") (term "0"))
                                                    (builtin "One Step Simplification" (formula "16"))
                                                   (rule "closeFalse" (formula "16"))
                                                )
                                                (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_add<<anonHeapFunction>> FALSE"
                                                   (rule "applyEqReverse" (formula "27") (term "0") (ifseqformula "26"))
                                                    (builtin "One Step Simplification" (formula "27"))
                                                   (rule "true_left" (formula "27"))
                                                   (rule "hideAuxiliaryEq" (formula "26"))
                                                   (rule "equalityToSeqGetAndSeqLenLeft" (formula "32") (inst "iv=iv"))
                                                    (builtin "One Step Simplification" (formula "32"))
                                                   (rule "andLeft" (formula "32"))
                                                   (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0,0"))
                                                   (rule "applyEq" (formula "33") (term "0,0,1,0") (ifseqformula "34"))
                                                    (builtin "One Step Simplification" (formula "33"))
                                                   (rule "true_left" (formula "33"))
                                                   (rule "applyEq" (formula "32") (term "0,0") (ifseqformula "33"))
                                                    (builtin "One Step Simplification" (formula "32"))
                                                   (rule "true_left" (formula "32"))
                                                   (rule "equalityToSeqGetAndSeqLenLeft" (formula "16") (inst "iv=iv"))
                                                    (builtin "One Step Simplification" (formula "16"))
                                                   (rule "equal_literals" (formula "16") (term "0"))
                                                    (builtin "One Step Simplification" (formula "16"))
                                                   (rule "closeFalse" (formula "16"))
                                                )
                                             )
                                          )
                                          (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_ArrayList<<anonHeapFunction>> FALSE"
                                             (rule "applyEqReverse" (formula "27") (term "0,1") (ifseqformula "18"))
                                             (rule "applyEqReverse" (formula "22") (term "1,0") (ifseqformula "18"))
                                             (rule "applyEqReverse" (formula "26") (term "2,0,0") (ifseqformula "18"))
                                             (rule "applyEqReverse" (formula "19") (term "0") (ifseqformula "18"))
                                              (builtin "One Step Simplification" (formula "19"))
                                             (rule "true_left" (formula "19"))
                                             (rule "applyEqReverse" (formula "45") (term "2") (ifseqformula "18"))
                                             (rule "applyEqReverse" (formula "25") (term "2,0") (ifseqformula "18"))
                                             (rule "hideAuxiliaryEq" (formula "18"))
                                             (rule "replace_known_right" (formula "24") (term "0,0") (ifseqformula "41"))
                                              (builtin "One Step Simplification" (formula "24"))
                                             (rule "applyEqReverse" (formula "25") (term "0") (ifseqformula "24"))
                                              (builtin "One Step Simplification" (formula "25"))
                                             (rule "true_left" (formula "25"))
                                             (rule "hideAuxiliaryEq" (formula "24"))
                                             (rule "ifthenelse_split" (formula "51") (term "0,0,1"))
                                             (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> TRUE"
                                                (rule "elementOfSubsetImpliesElementOfSuperset" (formula "1") (ifseqformula "32"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "51")))
                                                (rule "notLeft" (formula "1"))
                                                (rule "pullOutSelect" (formula "40") (term "0") (inst "selectSK=java_lang_Object_created__6"))
                                                (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "22"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "52")))
                                                (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "2,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "2,0"))
                                                (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "0,0,0,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "0,0,0,0"))
                                                (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "10"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "applyEqReverse" (formula "41") (term "0") (ifseqformula "1"))
                                                (rule "close" (formula "41") (ifseqformula "10"))
                                             )
                                             (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> FALSE"
                                                 (builtin "One Step Simplification" (formula "52"))
                                                (rule "qeq_literals" (formula "52") (term "1"))
                                                 (builtin "One Step Simplification" (formula "52"))
                                                (rule "false_right" (formula "52"))
                                                (rule "equalityToSeqGetAndSeqLenLeft" (formula "30") (inst "iv=iv"))
                                                 (builtin "One Step Simplification" (formula "30"))
                                                (rule "andLeft" (formula "30"))
                                                (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "31") (term "0,0,0"))
                                                (rule "applyEq" (formula "30") (term "0,0") (ifseqformula "32"))
                                                 (builtin "One Step Simplification" (formula "30"))
                                                (rule "true_left" (formula "30"))
                                                (rule "applyEq" (formula "30") (term "0,0,1,0") (ifseqformula "31"))
                                                 (builtin "One Step Simplification" (formula "30"))
                                                (rule "true_left" (formula "30"))
                                                (rule "equalityToSeqGetAndSeqLenLeft" (formula "16") (inst "iv=iv"))
                                                 (builtin "One Step Simplification" (formula "16"))
                                                (rule "equal_literals" (formula "16") (term "0"))
                                                 (builtin "One Step Simplification" (formula "16"))
                                                (rule "closeFalse" (formula "16"))
                                             )
                                          )
                                       )
                                    )
                                 )
                              )
                              (branch "Null reference (l = null)"
                                  (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "52")))
                                 (rule "closeTrue" (formula "54"))
                              )
                           )
                           (branch "Assertion (l.get(0) == 23) No Effects"
                               (builtin "One Step Simplification" (formula "55"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "variableDeclarationAssign" (formula "55") (term "1"))
                              (rule "variableDeclaration" (formula "55") (term "1") (newnames "b"))
                              (rule "applyEqRigid" (formula "55") (term "0,0,0,1,0,0,0,0,1") (ifseqformula "1"))
                              (rule "applyEqRigid" (formula "55") (term "0,0,1,0,0,0,1") (ifseqformula "1"))
                              (rule "compound_equality_comparison_1" (formula "55") (term "1") (inst "#v0=i"))
                              (rule "variableDeclarationAssign" (formula "55") (term "1"))
                              (rule "variableDeclaration" (formula "55") (term "1") (newnames "i"))
                              (rule "equalityToSeqGetAndSeqLenLeft" (formula "19") (inst "iv=iv"))
                               (builtin "One Step Simplification" (formula "19"))
                              (rule "andLeft" (formula "19"))
                              (rule "getOfSeqSingleton" (formula "20") (term "1,1,0"))
                              (rule "castDel" (formula "20") (term "2,1,1,0"))
                              (rule "castDel" (formula "20") (term "1,1,1,0"))
                              (rule "eqSymm" (formula "20") (term "1,0"))
                              (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0,0"))
                              (rule "applyEqRigid" (formula "20") (term "0,1,1,0") (ifseqformula "21"))
                              (rule "getOfSeqSingleton" (formula "20") (term "1,1,0"))
                              (rule "castDel" (formula "20") (term "1,1,1,0"))
                              (rule "castDel" (formula "20") (term "2,1,1,0"))
                               (builtin "One Step Simplification" (formula "20"))
                              (rule "true_left" (formula "20"))
                              (rule "applyEqRigid" (formula "19") (term "0,0") (ifseqformula "20"))
                               (builtin "One Step Simplification" (formula "19"))
                              (rule "true_left" (formula "19"))
                              (rule "equalityToSeqGetAndSeqLenLeft" (formula "18") (inst "iv=iv"))
                               (builtin "One Step Simplification" (formula "18"))
                              (rule "andLeft" (formula "18"))
                              (rule "getOfSeqSingleton" (formula "19") (term "1,1,0"))
                              (rule "castDel" (formula "19") (term "2,1,1,0"))
                              (rule "castDel" (formula "19") (term "1,1,1,0"))
                              (rule "eqSymm" (formula "19") (term "1,0"))
                              (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
                              (rule "applyEq" (formula "18") (term "0,0") (ifseqformula "20"))
                               (builtin "One Step Simplification" (formula "18"))
                              (rule "true_left" (formula "18"))
                              (rule "applyEq" (formula "18") (term "0,1,1,0,0") (ifseqformula "19"))
                               (builtin "One Step Simplification" (formula "18"))
                              (rule "applyEq" (formula "18") (term "0,1,1,0") (ifseqformula "19"))
                              (rule "getOfSeqSingleton" (formula "18") (term "1,1,0"))
                              (rule "castDel" (formula "18") (term "2,1,1,0"))
                              (rule "castDel" (formula "18") (term "1,1,1,0"))
                               (builtin "One Step Simplification" (formula "18"))
                              (rule "true_left" (formula "18"))
                              (rule "equalityToSeqGetAndSeqLenLeft" (formula "27") (inst "iv=iv"))
                              (rule "andLeft" (formula "27"))
                              (rule "lenOfSeqConcat" (formula "27") (term "1"))
                               (builtin "One Step Simplification" (formula "27"))
                              (rule "add_literals" (formula "27") (term "1"))
                              (rule "inEqSimp_commuteLeq" (formula "28") (term "0,0,0"))
                              (rule "applyEq" (formula "28") (term "1,1,0,0") (ifseqformula "27"))
                              (rule "applyEqRigid" (formula "27") (term "0,0") (ifseqformula "29"))
                              (rule "lenOfSeqConcat" (formula "27") (term "0"))
                               (builtin "One Step Simplification" (formula "27"))
                              (rule "add_literals" (formula "27") (term "0"))
                               (builtin "One Step Simplification" (formula "27"))
                              (rule "true_left" (formula "27"))
                              (rule "applyEq" (formula "27") (term "0,0,1,0") (ifseqformula "28"))
                               (builtin "One Step Simplification" (formula "27"))
                              (rule "true_left" (formula "27"))
                              (rule "equalityToSeqGetAndSeqLenLeft" (formula "26") (inst "iv=iv"))
                              (rule "andLeft" (formula "26"))
                              (rule "lenOfSeqConcat" (formula "26") (term "1"))
                               (builtin "One Step Simplification" (formula "26"))
                              (rule "add_literals" (formula "26") (term "1"))
                              (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0"))
                              (rule "applyEq" (formula "27") (term "0,1,1,0,0") (ifseqformula "28"))
                              (rule "lenOfSeqConcat" (formula "27") (term "1,1,0,0"))
                               (builtin "One Step Simplification" (formula "27"))
                              (rule "add_literals" (formula "27") (term "1,1,0,0"))
                              (rule "applyEq" (formula "26") (term "0,0") (ifseqformula "28"))
                              (rule "lenOfSeqConcat" (formula "26") (term "0"))
                               (builtin "One Step Simplification" (formula "26"))
                              (rule "add_literals" (formula "26") (term "0"))
                               (builtin "One Step Simplification" (formula "26"))
                              (rule "true_left" (formula "26"))
                              (rule "applyEq" (formula "26") (term "0,0,1,0") (ifseqformula "27"))
                               (builtin "One Step Simplification" (formula "26"))
                              (rule "true_left" (formula "26"))
                               (builtin "Use Operation Contract" (formula "55") (newnames "heapBefore_get,result_get,exc_5,heapAfter_get,anon_heap_get") (contract "List[List::get(int)].JML normal_behavior operation contract.0") (modality "box"))
                              (branch "Post (get)"
                                  (builtin "One Step Simplification" (formula "57"))
                                  (builtin "One Step Simplification" (formula "48"))
                                 (rule "andLeft" (formula "48"))
                                 (rule "andLeft" (formula "49"))
                                 (rule "andLeft" (formula "50"))
                                 (rule "andLeft" (formula "50"))
                                 (rule "eqSymm" (formula "50"))
                                 (rule "assignment" (formula "60") (term "1"))
                                  (builtin "One Step Simplification" (formula "60"))
                                 (rule "castedGetAny" (formula "50") (term "0"))
                                 (rule "pullOutSelect" (formula "50") (term "0,0") (inst "selectSK=List_seq_5"))
                                 (rule "simplifySelectOfAnonEQ" (formula "50") (ifseqformula "48"))
                                  (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "59")))
                                 (rule "ifthenelse_negated" (formula "50") (term "0"))
                                 (rule "pullOutSelect" (formula "50") (term "0,0,0") (inst "selectSK=java_lang_Object_created__6"))
                                 (rule "simplifySelectOfAnonEQ" (formula "50") (ifseqformula "40"))
                                  (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "60")))
                                 (rule "ifthenelse_negated" (formula "50") (term "0"))
                                 (rule "pullOutSelect" (formula "51") (term "1,0") (inst "selectSK=List_seq_6"))
                                 (rule "simplifySelectOfAnonEQ" (formula "51") (ifseqformula "40"))
                                  (builtin "One Step Simplification" (formula "51") (ifInst ""  (formula "61")))
                                 (rule "pullOutSelect" (formula "50") (term "1,0") (inst "selectSK=java_lang_Object_created__7"))
                                 (rule "applyEq" (formula "52") (term "0,0,1,0,0") (ifseqformula "50"))
                                 (rule "applyEq" (formula "51") (term "0,0,0") (ifseqformula "50"))
                                 (rule "simplifySelectOfAnonEQ" (formula "50") (ifseqformula "32"))
                                  (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "62")))
                                 (rule "ifthenelse_negated" (formula "50") (term "0"))
                                 (rule "pullOutSelect" (formula "52") (term "2,0") (inst "selectSK=List_seq_7"))
                                 (rule "simplifySelectOfAnonEQ" (formula "52") (ifseqformula "32"))
                                  (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "63")))
                                 (rule "replaceKnownSelect_taclet0000_8" (formula "52") (term "2,0"))
                                 (rule "ifthenelse_negated" (formula "52") (term "0"))
                                 (rule "applyEq" (formula "52") (term "1,0") (ifseqformula "27"))
                                 (rule "pullOutSelect" (formula "50") (term "0,0,0") (inst "selectSK=java_lang_Object_created__8"))
                                 (rule "applyEq" (formula "53") (term "0,0,0") (ifseqformula "50"))
                                 (rule "applyEq" (formula "51") (term "1,0") (ifseqformula "50"))
                                 (rule "simplifySelectOfAnonEQ" (formula "50") (ifseqformula "24"))
                                  (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "64")))
                                 (rule "replaceKnownSelect_taclet0000_10" (formula "50") (term "2,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "50") (term "2,0"))
                                 (rule "replaceKnownSelect_taclet0000_10" (formula "50") (term "0,0,0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "50") (term "0,0,0,0"))
                                 (rule "replace_known_left" (formula "50") (term "0,0,0") (ifseqformula "10"))
                                  (builtin "One Step Simplification" (formula "50"))
                                 (rule "applyEqReverse" (formula "53") (term "0,0,0") (ifseqformula "50"))
                                 (rule "applyEqReverse" (formula "51") (term "0,0,0") (ifseqformula "50"))
                                 (rule "applyEqReverse" (formula "51") (term "1,0") (ifseqformula "50"))
                                 (rule "hideAuxiliaryEq" (formula "50"))
                                 (rule "replace_known_left" (formula "52") (term "0,0") (ifseqformula "10"))
                                  (builtin "One Step Simplification" (formula "52"))
                                 (rule "applyEqReverse" (formula "53") (term "2,0") (ifseqformula "52"))
                                 (rule "hideAuxiliaryEq" (formula "52"))
                                 (rule "replace_known_left" (formula "50") (term "0,0") (ifseqformula "10"))
                                  (builtin "One Step Simplification" (formula "50"))
                                 (rule "applyEqReverse" (formula "51") (term "0,0,0") (ifseqformula "50"))
                                 (rule "applyEqReverse" (formula "51") (term "1,0") (ifseqformula "50"))
                                 (rule "applyEqReverse" (formula "52") (term "0,0,1,0,0") (ifseqformula "50"))
                                 (rule "hideAuxiliaryEq" (formula "50"))
                                 (rule "replace_known_left" (formula "51") (term "0,1,0,0") (ifseqformula "10"))
                                  (builtin "One Step Simplification" (formula "51"))
                                 (rule "replace_known_left" (formula "50") (term "0,0") (ifseqformula "10"))
                                  (builtin "One Step Simplification" (formula "50"))
                                 (rule "applyEqReverse" (formula "52") (term "0,0,0") (ifseqformula "50"))
                                 (rule "hideAuxiliaryEq" (formula "50"))
                                 (rule "replace_known_left" (formula "51") (term "0,0") (ifseqformula "10"))
                                  (builtin "One Step Simplification" (formula "51"))
                                 (rule "applyEqReverse" (formula "52") (term "0,0") (ifseqformula "51"))
                                 (rule "hideAuxiliaryEq" (formula "51"))
                                 (rule "equality_comparison_simple" (formula "61") (term "1"))
                                  (builtin "One Step Simplification" (formula "61"))
                                 (rule "methodCallEmpty" (formula "61") (term "1"))
                                 (rule "emptyModality" (formula "61") (term "1"))
                                  (builtin "One Step Simplification" (formula "61"))
                                 (rule "allRight" (formula "61") (inst "sk=f_0"))
                                 (rule "allRight" (formula "61") (inst "sk=o_0"))
                                 (rule "orRight" (formula "61"))
                                 (rule "eqSymm" (formula "62"))
                                 (rule "pullOutSelect" (formula "61") (term "0,0,1") (inst "selectSK=java_lang_Object_created__9"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "41"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "pullOutSelect" (formula "63") (term "1") (inst "selectSK=f_0_0"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "42"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "pullOutSelect" (formula "64") (term "0") (inst "selectSK=f_0_1"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "51"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "replaceKnownSelect_taclet02000000000_38" (formula "1") (term "2,0"))
                                 (rule "replaceKnownSelect_taclet02000000000_37" (formula "1") (term "0,0,1,0,0"))
                                 (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "64"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "applyEqReverse" (formula "65") (term "0") (ifseqformula "1"))
                                  (builtin "One Step Simplification" (formula "65"))
                                 (rule "closeTrue" (formula "65"))
                              )
                              (branch "Exceptional Post (get)"
                                  (builtin "One Step Simplification" (formula "48"))
                                  (builtin "One Step Simplification" (formula "57"))
                                 (rule "andLeft" (formula "48"))
                                 (rule "andLeft" (formula "49"))
                                 (rule "andLeft" (formula "50"))
                                 (rule "andLeft" (formula "49"))
                                 (rule "andLeft" (formula "51"))
                                 (rule "notLeft" (formula "49"))
                                 (rule "close" (formula "53") (ifseqformula "52"))
                              )
                              (branch "Pre (get)"
                                  (builtin "One Step Simplification" (formula "55"))
                                 (rule "wellFormedAnonEQ" (formula "55") (term "0,1") (ifseqformula "40"))
                                 (rule "wellFormedAnonEQ" (formula "55") (term "0,0,1") (ifseqformula "32"))
                                 (rule "wellFormedAnonEQ" (formula "55") (term "0,0,0,1") (ifseqformula "24"))
                                 (rule "wellFormedAnonEQ" (formula "55") (term "0,0,0,0,1") (ifseqformula "16"))
                                 (rule "wellFormedAnonEQ" (formula "55") (term "0,0,0,0,0,1") (ifseqformula "8"))
                                 (rule "selectOfAnonEQ" (formula "55") (term "0,1,1") (ifseqformula "40"))
                                  (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "2")) (ifInst ""  (formula "7")) (ifInst ""  (formula "15")) (ifInst ""  (formula "23")) (ifInst ""  (formula "31")) (ifInst ""  (formula "39")) (ifInst ""  (formula "53")))
                                 (rule "ifthenelse_negated" (formula "55") (term "0,1"))
                                 (rule "selectCreatedOfAnonEQ" (formula "55") (term "0,0,0,1") (ifseqformula "32"))
                                  (builtin "One Step Simplification" (formula "55"))
                                 (rule "selectCreatedOfAnonEQ" (formula "55") (term "0,0,0,0,1") (ifseqformula "24"))
                                  (builtin "One Step Simplification" (formula "55"))
                                 (rule "selectOfAnonEQ" (formula "55") (term "0,1,1,0,0") (ifseqformula "40"))
                                  (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "53")))
                                 (rule "selectCreatedOfAnonEQ" (formula "55") (term "1,0,1") (ifseqformula "32"))
                                 (rule "selectCreatedOfAnonEQ" (formula "55") (term "0,0,0,0,0,1") (ifseqformula "16"))
                                  (builtin "One Step Simplification" (formula "55"))
                                 (rule "selectOfAnonEQ" (formula "55") (term "0,0,0,0,0,0,1") (ifseqformula "8"))
                                  (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "53")) (ifInst ""  (formula "52")) (ifInst ""  (formula "10")))
                                 (rule "selectOfAnonEQ" (formula "55") (term "0,0,1") (ifseqformula "24"))
                                  (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "53")))
                                 (rule "ifthenelse_negated" (formula "55") (term "0,0,1"))
                                 (rule "selectOfAnonEQ" (formula "55") (term "2,0,1,1,0,0") (ifseqformula "32"))
                                  (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "53")))
                                 (rule "ifthenelse_negated" (formula "55") (term "2,0,1,1,0,0"))
                                 (rule "selectOfAnonEQ" (formula "55") (term "0,0,0,0,1") (ifseqformula "16"))
                                  (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "53")))
                                 (rule "ifthenelse_negated" (formula "55") (term "0,0,0,0,1"))
                                 (rule "selectOfAnonEQ" (formula "55") (term "1,0,0,1") (ifseqformula "16"))
                                  (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "53")))
                                 (rule "ifthenelse_negated" (formula "55") (term "1,0,0,1"))
                                 (rule "selectOfAnonEQ" (formula "55") (term "0,0,2,0,1,1,0,0") (ifseqformula "24"))
                                  (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "53")))
                                 (rule "ifthenelse_negated" (formula "55") (term "0,0,2,0,1,1,0,0"))
                                 (rule "selectCreatedOfAnonEQ" (formula "55") (term "1,0,0,0,0,1") (ifseqformula "8"))
                                 (rule "selectOfAnonEQ" (formula "55") (term "0,0,0,0,2,0,1,1,0,0") (ifseqformula "16"))
                                  (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "52")) (ifInst ""  (formula "53")))
                                 (rule "ifthenelse_negated" (formula "55") (term "0,0,0,0,2,0,1,1,0,0"))
                                 (rule "selectCreatedOfAnonEQ" (formula "55") (term "0,0,0,0,0,0,1") (ifseqformula "8"))
                                  (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "52")) (ifInst ""  (formula "10")) (ifInst ""  (formula "10")))
                                 (rule "selectCreatedOfAnonEQ" (formula "55") (term "1,0,0,1") (ifseqformula "8"))
                                 (rule "selectCreatedOfAnonEQ" (formula "55") (term "0,0,0,0,0,0,2,0,1,1,0,0") (ifseqformula "8"))
                                  (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "52")) (ifInst ""  (formula "52")) (ifInst ""  (formula "10")))
                                 (rule "selectCreatedOfAnonEQ" (formula "55") (term "1,0,0,2,0,1,1,0,0") (ifseqformula "16"))
                                 (rule "selectCreatedOfAnonEQ" (formula "55") (term "0,0,0,0,1") (ifseqformula "8"))
                                  (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "52")) (ifInst ""  (formula "10")) (ifInst ""  (formula "10")))
                                 (rule "selectCreatedOfAnonEQ" (formula "55") (term "0,0,1,0,0,2,0,1,1,0") (ifseqformula "8"))
                                  (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "52")) (ifInst ""  (formula "10")))
                                 (rule "selectOfAnonEQ" (formula "55") (term "0,0,0,2,0,1,1,0") (ifseqformula "8"))
                                  (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "53")) (ifInst ""  (formula "52")) (ifInst ""  (formula "10")))
                                 (rule "selectOfAnonEQ" (formula "55") (term "0,0,1,0,0,1,1,0") (ifseqformula "32"))
                                  (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "53")))
                                 (rule "ifthenelse_negated" (formula "55") (term "0,0,1,0,0,1,1,0"))
                                 (rule "selectOfAnonEQ" (formula "55") (term "2,0,1,1,0") (ifseqformula "24"))
                                  (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "53")))
                                 (rule "selectOfAnonEQ" (formula "55") (term "0,0,1,0,2,0,1,1,0") (ifseqformula "16"))
                                  (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "53")))
                                 (rule "ifthenelse_negated" (formula "55") (term "0,0,1,0,2,0,1,1,0"))
                                 (rule "selectCreatedOfAnonEQ" (formula "55") (term "1,0,0,1,0,0,1,1,0") (ifseqformula "24"))
                                 (rule "selectCreatedOfAnonEQ" (formula "55") (term "0,0,0,0,1,0,0,1,1,0") (ifseqformula "24"))
                                  (builtin "One Step Simplification" (formula "55"))
                                 (rule "selectCreatedOfAnonEQ" (formula "55") (term "0,0,1,0,0,1,0,0,1,1,0") (ifseqformula "16"))
                                  (builtin "One Step Simplification" (formula "55"))
                                 (rule "selectCreatedOfAnonEQ" (formula "55") (term "0,0,0,1,0,0,1,0,0,1,1,0") (ifseqformula "8"))
                                  (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "52")) (ifInst ""  (formula "10")))
                                 (rule "selectOfAnonEQ" (formula "55") (term "2,2,0,1,1,0") (ifseqformula "16"))
                                  (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "53")))
                                 (rule "selectCreatedOfAnonEQ" (formula "55") (term "1,0,0,1,0,2,0,1,1,0") (ifseqformula "8"))
                                 (rule "selectOfAnonEQ" (formula "55") (term "2,2,2,0,1,1,0") (ifseqformula "8"))
                                  (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "52")) (ifInst ""  (formula "53")) (ifInst ""  (formula "52")))
                                 (rule "selectCreatedOfAnonEQ" (formula "55") (term "0,0,0,0,1,0,0,1,1,0") (ifseqformula "16"))
                                  (builtin "One Step Simplification" (formula "55"))
                                 (rule "selectOfAnonEQ" (formula "55") (term "0,0,0,0,1,0,2,0,1,1,0") (ifseqformula "8"))
                                  (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "53")) (ifInst ""  (formula "52")) (ifInst ""  (formula "10")) (ifInst ""  (formula "10")))
                                 (rule "selectOfAnonEQ" (formula "55") (term "0,0,0,0,0,1,0,0,1,1,0") (ifseqformula "8"))
                                  (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "53")) (ifInst ""  (formula "52")) (ifInst ""  (formula "10")))
                                 (rule "selectCreatedOfAnonEQ" (formula "55") (term "0,0,1,0,2,2,0,1,1,0") (ifseqformula "8"))
                                  (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "52")) (ifInst ""  (formula "10")))
                                 (rule "leq_literals" (formula "55") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "55"))
                                 (rule "inEqSimp_ltToLeq" (formula "55") (term "0"))
                                 (rule "add_zero_right" (formula "55") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "55") (term "1,0,0"))
                                 (rule "applyEq" (formula "55") (term "2,2,2,0,0,1,0,0") (ifseqformula "12"))
                                 (rule "applyEq" (formula "55") (term "2,2,0,0,1,0,0") (ifseqformula "18"))
                                 (rule "applyEq" (formula "55") (term "2,0,0,1,0,0") (ifseqformula "26"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "55") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "55") (term "0,0"))
                                 (rule "polySimp_elimOne" (formula "55") (term "0,0"))
                                 (rule "Class_invariant_axiom_for_Test" (formula "6") (ifseqformula "4"))
                                 (rule "true_left" (formula "6"))
                                 (rule "commute_and" (formula "54"))
                                 (rule "ifthenelse_split" (formula "17") (term "0"))
                                 (branch "(self_0, List::$seq) in self_0.footprint@anon_heap_ArrayList<<anonHeapFunction>> TRUE"
                                    (rule "elementOfSubsetImpliesElementOfSuperset" (formula "17") (ifseqformula "12"))
                                     (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "54")) (ifInst ""  (formula "53")))
                                    (rule "true_left" (formula "17"))
                                    (rule "ifthenelse_split" (formula "42") (term "0"))
                                    (branch "(self_1, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> TRUE"
                                       (rule "elementOfSubsetImpliesElementOfSuperset" (formula "42") (ifseqformula "37"))
                                        (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "53")))
                                       (rule "replaceKnownSelect_taclet0000000_18" (formula "42") (term "0,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet0000000_21" (formula "42") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "42"))
                                       (rule "true_left" (formula "42"))
                                       (rule "ifthenelse_split" (formula "45") (term "0"))
                                       (branch "(self_1, List::$footprint) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> TRUE"
                                          (rule "applyEqReverse" (formula "47") (term "0") (ifseqformula "46"))
                                          (rule "hideAuxiliaryEq" (formula "46"))
                                          (rule "elementOfSubsetImpliesElementOfSuperset" (formula "45") (ifseqformula "37"))
                                           (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "53")))
                                          (rule "replaceKnownSelect_taclet0000000_18" (formula "45") (term "0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet0000000_21" (formula "45") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "45"))
                                          (rule "true_left" (formula "45"))
                                          (rule "ifthenelse_split" (formula "20") (term "0"))
                                          (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_ArrayList<<anonHeapFunction>> TRUE"
                                             (rule "applyEqReverse" (formula "30") (term "0,1") (ifseqformula "21"))
                                             (rule "applyEqReverse" (formula "29") (term "2,0") (ifseqformula "21"))
                                             (rule "applyEqReverse" (formula "29") (term "2,0,0") (ifseqformula "21"))
                                             (rule "applyEqReverse" (formula "27") (term "2,0,0") (ifseqformula "21"))
                                             (rule "applyEqReverse" (formula "25") (term "1,0") (ifseqformula "21"))
                                             (rule "applyEqReverse" (formula "22") (term "0") (ifseqformula "21"))
                                             (rule "hideAuxiliaryEq" (formula "21"))
                                             (rule "elementOfSubsetImpliesElementOfSuperset" (formula "20") (ifseqformula "12"))
                                              (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "55")) (ifInst ""  (formula "54")))
                                             (rule "true_left" (formula "20"))
                                             (rule "commuteUnion" (formula "29") (term "1"))
                                             (rule "ifthenelse_split" (formula "56") (term "0,0,1"))
                                             (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> TRUE"
                                                (rule "elementOfSubsetImpliesElementOfSuperset" (formula "1") (ifseqformula "38"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "56")))
                                                (rule "notLeft" (formula "1"))
                                                (rule "pullOutSelect" (formula "49") (term "0") (inst "selectSK=java_lang_Object_created__6"))
                                                (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "26"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "57")))
                                                (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "2,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "2,0"))
                                                (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "0,0,0,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "0,0,0,0"))
                                                (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "11"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "applyEqReverse" (formula "50") (term "0") (ifseqformula "1"))
                                                (rule "close" (formula "50") (ifseqformula "11"))
                                             )
                                             (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> FALSE"
                                                (rule "lenOfSeqConcat" (formula "57") (term "0,1"))
                                                 (builtin "One Step Simplification" (formula "57"))
                                                (rule "add_literals" (formula "57") (term "0,1"))
                                                (rule "qeq_literals" (formula "57") (term "1"))
                                                 (builtin "One Step Simplification" (formula "57"))
                                                (rule "ifthenelse_split" (formula "28") (term "0"))
                                                (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_add<<anonHeapFunction>> TRUE"
                                                   (rule "applyEqReverse" (formula "30") (term "0") (ifseqformula "29"))
                                                   (rule "hideAuxiliaryEq" (formula "29"))
                                                   (rule "elementOfSubsetImpliesElementOfSuperset" (formula "28") (ifseqformula "21"))
                                                   (rule "elementOfUnion" (formula "28"))
                                                    (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "20")))
                                                   (rule "true_left" (formula "28"))
                                                   (rule "ifthenelse_split" (formula "26") (term "0"))
                                                   (branch "(self_0, List::$seq) in self_0.footprint@anon_heap_add<<anonHeapFunction>> TRUE"
                                                      (rule "elementOfSubsetImpliesElementOfSuperset" (formula "26") (ifseqformula "21"))
                                                      (rule "elementOfUnion" (formula "26"))
                                                       (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "17")))
                                                      (rule "true_left" (formula "26"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "45") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "45"))
                                                      (rule "andLeft" (formula "45"))
                                                      (rule "getOfSeqSingleton" (formula "46") (term "1,1,0"))
                                                      (rule "castDel" (formula "46") (term "1,1,1,0"))
                                                      (rule "castDel" (formula "46") (term "2,1,1,0"))
                                                      (rule "eqSymm" (formula "46") (term "1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "46") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "46") (term "0,0,0"))
                                                      (rule "applyEqRigid" (formula "45") (term "0,0") (ifseqformula "47"))
                                                       (builtin "One Step Simplification" (formula "45"))
                                                      (rule "true_left" (formula "45"))
                                                      (rule "applyEq" (formula "45") (term "0,1,1,0") (ifseqformula "46"))
                                                      (rule "getOfSeqSingleton" (formula "45") (term "1,1,0"))
                                                      (rule "castDel" (formula "45") (term "1,1,1,0"))
                                                      (rule "castDel" (formula "45") (term "2,1,1,0"))
                                                       (builtin "One Step Simplification" (formula "45"))
                                                      (rule "true_left" (formula "45"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "37") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "37"))
                                                      (rule "andLeft" (formula "37"))
                                                      (rule "inEqSimp_ltToLeq" (formula "38") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "38") (term "0,0,0"))
                                                      (rule "applyEq" (formula "38") (term "0,0,1,0") (ifseqformula "39"))
                                                       (builtin "One Step Simplification" (formula "38"))
                                                      (rule "true_left" (formula "38"))
                                                      (rule "applyEq" (formula "37") (term "0,0") (ifseqformula "38"))
                                                       (builtin "One Step Simplification" (formula "37"))
                                                      (rule "true_left" (formula "37"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "18") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "18"))
                                                      (rule "andLeft" (formula "18"))
                                                      (rule "getOfSeqSingleton" (formula "19") (term "1,1,0"))
                                                      (rule "castDel" (formula "19") (term "1,1,1,0"))
                                                      (rule "castDel" (formula "19") (term "2,1,1,0"))
                                                      (rule "eqSymm" (formula "19") (term "1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
                                                      (rule "applyEq" (formula "19") (term "0,0,1,0,0,1,0,0") (ifseqformula "20"))
                                                       (builtin "One Step Simplification" (formula "19"))
                                                      (rule "mul_literals" (formula "19") (term "1,0,0,1,0,0"))
                                                      (rule "add_literals" (formula "19") (term "0,0,1,0,0"))
                                                      (rule "add_zero_left" (formula "19") (term "0,1,0,0"))
                                                      (rule "applyEq" (formula "18") (term "0,0") (ifseqformula "20"))
                                                       (builtin "One Step Simplification" (formula "18"))
                                                      (rule "true_left" (formula "18"))
                                                      (rule "applyEq" (formula "18") (term "0,1,1,0") (ifseqformula "19"))
                                                      (rule "getOfSeqSingleton" (formula "18") (term "1,1,0"))
                                                      (rule "castDel" (formula "18") (term "1,1,1,0"))
                                                      (rule "castDel" (formula "18") (term "2,1,1,0"))
                                                       (builtin "One Step Simplification" (formula "18"))
                                                      (rule "true_left" (formula "18"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "44") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "44"))
                                                      (rule "andLeft" (formula "44"))
                                                      (rule "getOfSeqSingleton" (formula "45") (term "1,1,0"))
                                                      (rule "castDel" (formula "45") (term "1,1,1,0"))
                                                      (rule "castDel" (formula "45") (term "2,1,1,0"))
                                                      (rule "eqSymm" (formula "45") (term "1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "45") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "45") (term "0,0,0"))
                                                      (rule "applyEq" (formula "45") (term "0,1,1,0") (ifseqformula "46"))
                                                      (rule "getOfSeqSingleton" (formula "45") (term "1,1,0"))
                                                      (rule "castDel" (formula "45") (term "2,1,1,0"))
                                                      (rule "castDel" (formula "45") (term "1,1,1,0"))
                                                       (builtin "One Step Simplification" (formula "45"))
                                                      (rule "true_left" (formula "45"))
                                                      (rule "applyEq" (formula "44") (term "0,0") (ifseqformula "45"))
                                                       (builtin "One Step Simplification" (formula "44"))
                                                      (rule "true_left" (formula "44"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "27") (inst "iv=iv"))
                                                      (rule "andLeft" (formula "27"))
                                                      (rule "lenOfSeqConcat" (formula "27") (term "1"))
                                                       (builtin "One Step Simplification" (formula "27"))
                                                      (rule "add_literals" (formula "27") (term "1"))
                                                      (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "28") (term "0,0,0"))
                                                      (rule "applyEq" (formula "27") (term "0,0") (ifseqformula "29"))
                                                      (rule "lenOfSeqConcat" (formula "27") (term "0"))
                                                       (builtin "One Step Simplification" (formula "27"))
                                                      (rule "add_literals" (formula "27") (term "0"))
                                                       (builtin "One Step Simplification" (formula "27"))
                                                      (rule "true_left" (formula "27"))
                                                      (rule "applyEq" (formula "27") (term "0,0,1,0,0,1,0,0") (ifseqformula "28"))
                                                      (rule "lenOfSeqConcat" (formula "27") (term "0,1,0,0,1,0,0"))
                                                       (builtin "One Step Simplification" (formula "27"))
                                                      (rule "add_literals" (formula "27") (term "0,1,0,0,1,0,0"))
                                                      (rule "mul_literals" (formula "27") (term "1,0,0,1,0,0"))
                                                      (rule "add_literals" (formula "27") (term "0,0,1,0,0"))
                                                      (rule "applyEq" (formula "27") (term "0,0,1,0") (ifseqformula "28"))
                                                       (builtin "One Step Simplification" (formula "27"))
                                                      (rule "true_left" (formula "27"))
                                                      (rule "onlyCreatedObjectsAreInLocSets" (formula "17") (ifseqformula "6"))
                                                      (rule "replace_known_right" (formula "17") (term "0") (ifseqformula "56"))
                                                       (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "9")))
                                                      (rule "true_left" (formula "17"))
                                                      (rule "onlyCreatedObjectsAreInLocSets" (formula "43") (ifseqformula "32"))
                                                      (rule "replace_known_right" (formula "43") (term "0") (ifseqformula "54"))
                                                       (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "35")))
                                                      (rule "true_left" (formula "43"))
                                                      (rule "onlyCreatedObjectsAreInLocSets" (formula "26") (ifseqformula "14"))
                                                      (rule "replace_known_right" (formula "26") (term "0") (ifseqformula "56"))
                                                       (builtin "One Step Simplification" (formula "26"))
                                                      (rule "onlyCreatedObjectsAreInLocSets" (formula "47") (ifseqformula "33"))
                                                      (rule "replace_known_right" (formula "47") (term "0") (ifseqformula "55"))
                                                       (builtin "One Step Simplification" (formula "47") (ifInst ""  (formula "36")))
                                                      (rule "true_left" (formula "47"))
                                                      (rule "onlyCreatedObjectsAreInLocSets" (formula "30") (ifseqformula "14"))
                                                      (rule "replace_known_right" (formula "30") (term "0") (ifseqformula "57"))
                                                       (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "26")))
                                                      (rule "true_left" (formula "30"))
                                                      (rule "onlyCreatedObjectsAreInLocSets" (formula "20") (ifseqformula "6"))
                                                      (rule "replace_known_right" (formula "20") (term "0") (ifseqformula "57"))
                                                       (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "9")))
                                                      (rule "true_left" (formula "20"))
                                                       (builtin "Use Dependency Contract" (formula "59") (ifInst ""  (formula "32")) (ifInst ""  (formula "42")) (ifInst ""  (formula "34")) (contract "ArrayList[java.lang.Object::<inv>()].JML accessible clause.0"))
                                                      (rule "replaceKnownSelect_taclet0000_9" (formula "50") (term "1,1,0"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet01000022000000000_28" (formula "50") (term "1,1,0"))
                                                      (rule "wellFormedAnonEQ" (formula "50") (term "0,1,0,0,0") (ifseqformula "24"))
                                                      (rule "wellFormedAnonEQ" (formula "50") (term "1,1,0,0,0") (ifseqformula "42"))
                                                      (rule "wellFormedAnonEQ" (formula "50") (term "0,0,1,0,0,0") (ifseqformula "15"))
                                                      (rule "wellFormedAnonEQ" (formula "50") (term "0,1,1,0,0,0") (ifseqformula "34"))
                                                      (rule "wellFormedAnonEQ" (formula "50") (term "0,0,1,1,0,0,0") (ifseqformula "24"))
                                                      (rule "wellFormedAnonEQ" (formula "50") (term "0,0,0,1,0,0,0") (ifseqformula "7"))
                                                      (rule "wellFormedAnonEQ" (formula "50") (term "0,0,0,1,1,0,0,0") (ifseqformula "15"))
                                                      (rule "wellFormedAnonEQ" (formula "50") (term "0,0,0,0,1,1,0,0,0") (ifseqformula "7"))
                                                      (rule "replace_known_left" (formula "50") (term "1,0,0") (ifseqformula "32"))
                                                       (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "57")) (ifInst ""  (formula "2")) (ifInst ""  (formula "6")) (ifInst ""  (formula "14")) (ifInst ""  (formula "23")) (ifInst ""  (formula "2")) (ifInst ""  (formula "6")) (ifInst ""  (formula "14")) (ifInst ""  (formula "23")) (ifInst ""  (formula "33")) (ifInst ""  (formula "41")) (ifInst ""  (formula "60")) (ifInst ""  (formula "32")))
                                                      (rule "notLeft" (formula "50"))
                                                      (rule "disjointDefinition" (formula "50") (term "1"))
                                                      (rule "pullOutSelect" (formula "50") (term "0,0") (inst "selectSK=java_lang_Object_created__6"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "25"))
                                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "58")))
                                                      (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "2,0"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "2,0"))
                                                      (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "0,0,0,0"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "0,0,0,0"))
                                                      (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "10"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "applyEqReverse" (formula "51") (term "0,0") (ifseqformula "1"))
                                                      (rule "hideAuxiliaryEq" (formula "1"))
                                                      (rule "replace_known_left" (formula "50") (term "0") (ifseqformula "9"))
                                                       (builtin "One Step Simplification" (formula "50"))
                                                      (rule "equalityToElementOfRight" (formula "50") (inst "fv=fv") (inst "ov=ov"))
                                                       (builtin "One Step Simplification" (formula "50"))
                                                      (rule "allRight" (formula "50") (inst "sk=ov_0"))
                                                      (rule "allRight" (formula "50") (inst "sk=fv_0"))
                                                      (rule "notRight" (formula "50"))
                                                      (rule "elementOfIntersect" (formula "1"))
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "elementOfSubsetImpliesElementOfSuperset" (formula "1") (ifseqformula "41"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "notLeft" (formula "1"))
                                                      (rule "notLeft" (formula "1"))
                                                      (rule "elementOfSubsetImpliesElementOfSuperset" (formula "2") (ifseqformula "33"))
                                                      (rule "elementOfUnion" (formula "2"))
                                                       (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "54")))
                                                      (rule "pullOutSelect" (formula "53") (term "0") (inst "selectSK=java_lang_Object_created__7"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "28"))
                                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "55")))
                                                      (rule "ifthenelse_negated" (formula "1") (term "0"))
                                                      (rule "apply_eq_boolean_rigid" (formula "1") (term "1") (ifseqformula "54"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "notLeft" (formula "1"))
                                                      (rule "ifEqualsTRUE" (formula "53"))
                                                       (builtin "One Step Simplification" (formula "53"))
                                                      (rule "orRight" (formula "53"))
                                                      (rule "replace_known_right" (formula "54") (term "0,0") (ifseqformula "53"))
                                                       (builtin "One Step Simplification" (formula "54"))
                                                      (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "53"))
                                                       (builtin "One Step Simplification" (formula "2"))
                                                      (rule "true_left" (formula "2"))
                                                      (rule "pullOutSelect" (formula "52") (term "0") (inst "selectSK=java_lang_Object_created__8"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "18"))
                                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "56")))
                                                      (rule "ifthenelse_negated" (formula "1") (term "0"))
                                                      (rule "apply_eq_boolean" (formula "1") (term "1") (ifseqformula "53"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "notLeft" (formula "1"))
                                                      (rule "ifEqualsTRUE" (formula "52"))
                                                       (builtin "One Step Simplification" (formula "52"))
                                                      (rule "orRight" (formula "52"))
                                                      (rule "replace_known_right" (formula "53") (term "0,0") (ifseqformula "52"))
                                                       (builtin "One Step Simplification" (formula "53"))
                                                      (rule "pullOutSelect" (formula "52") (term "0") (inst "selectSK=java_lang_Object_created__9"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "10"))
                                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "58")))
                                                      (rule "ifthenelse_negated" (formula "1") (term "0"))
                                                      (rule "apply_eq_boolean_rigid" (formula "1") (term "1") (ifseqformula "53"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "notLeft" (formula "1"))
                                                      (rule "ifEqualsTRUE" (formula "52"))
                                                       (builtin "One Step Simplification" (formula "52"))
                                                      (rule "orRight" (formula "52"))
                                                      (rule "replace_known_right" (formula "53") (term "0,0") (ifseqformula "52"))
                                                       (builtin "One Step Simplification" (formula "53"))
                                                      (rule "hideAuxiliaryEqConcrete2" (formula "58"))
                                                      (rule "hideAuxiliaryEqConcrete2" (formula "56"))
                                                      (rule "hideAuxiliaryEqConcrete2" (formula "54"))
                                                      (rule "onlyCreatedObjectsAreInLocSets" (formula "1") (ifseqformula "35"))
                                                      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "57"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "onlyCreatedObjectsAreInLocSets" (formula "3") (ifseqformula "26"))
                                                      (rule "replace_known_right" (formula "3") (term "0") (ifseqformula "58"))
                                                       (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "57")))
                                                      (rule "closeFalse" (formula "3"))
                                                   )
                                                   (branch "(self_0, List::$seq) in self_0.footprint@anon_heap_add<<anonHeapFunction>> FALSE"
                                                      (rule "eqSymm" (formula "26"))
                                                      (rule "applyEqRigid" (formula "27") (term "1") (ifseqformula "26"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "44") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "44"))
                                                      (rule "andLeft" (formula "44"))
                                                      (rule "getOfSeqSingleton" (formula "45") (term "1,1,0"))
                                                      (rule "castDel" (formula "45") (term "1,1,1,0"))
                                                      (rule "castDel" (formula "45") (term "2,1,1,0"))
                                                      (rule "eqSymm" (formula "45") (term "1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "45") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "45") (term "0,0,0"))
                                                      (rule "applyEqRigid" (formula "44") (term "0,0") (ifseqformula "46"))
                                                       (builtin "One Step Simplification" (formula "44"))
                                                      (rule "true_left" (formula "44"))
                                                      (rule "applyEqRigid" (formula "44") (term "0,1,1,0") (ifseqformula "45"))
                                                      (rule "getOfSeqSingleton" (formula "44") (term "1,1,0"))
                                                      (rule "castDel" (formula "44") (term "1,1,1,0"))
                                                      (rule "castDel" (formula "44") (term "2,1,1,0"))
                                                       (builtin "One Step Simplification" (formula "44"))
                                                      (rule "true_left" (formula "44"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "36") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "36"))
                                                      (rule "andLeft" (formula "36"))
                                                      (rule "inEqSimp_ltToLeq" (formula "37") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "37") (term "0,0,0"))
                                                      (rule "applyEq" (formula "36") (term "0,0") (ifseqformula "38"))
                                                       (builtin "One Step Simplification" (formula "36"))
                                                      (rule "true_left" (formula "36"))
                                                      (rule "applyEq" (formula "36") (term "0,0,1,0") (ifseqformula "37"))
                                                       (builtin "One Step Simplification" (formula "36"))
                                                      (rule "true_left" (formula "36"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "18") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "18"))
                                                      (rule "andLeft" (formula "18"))
                                                      (rule "getOfSeqSingleton" (formula "19") (term "1,1,0"))
                                                      (rule "castDel" (formula "19") (term "1,1,1,0"))
                                                      (rule "castDel" (formula "19") (term "2,1,1,0"))
                                                      (rule "eqSymm" (formula "19") (term "1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
                                                      (rule "applyEq" (formula "19") (term "0,1,1,0") (ifseqformula "20"))
                                                      (rule "getOfSeqSingleton" (formula "19") (term "1,1,0"))
                                                      (rule "castDel" (formula "19") (term "1,1,1,0"))
                                                      (rule "castDel" (formula "19") (term "2,1,1,0"))
                                                       (builtin "One Step Simplification" (formula "19"))
                                                      (rule "true_left" (formula "19"))
                                                      (rule "applyEq" (formula "18") (term "0,0") (ifseqformula "19"))
                                                       (builtin "One Step Simplification" (formula "18"))
                                                      (rule "true_left" (formula "18"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "43") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "43"))
                                                      (rule "andLeft" (formula "43"))
                                                      (rule "getOfSeqSingleton" (formula "44") (term "1,1,0"))
                                                      (rule "castDel" (formula "44") (term "1,1,1,0"))
                                                      (rule "castDel" (formula "44") (term "2,1,1,0"))
                                                      (rule "eqSymm" (formula "44") (term "1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "44") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "44") (term "0,0,0"))
                                                      (rule "applyEq" (formula "43") (term "0,0") (ifseqformula "45"))
                                                       (builtin "One Step Simplification" (formula "43"))
                                                      (rule "true_left" (formula "43"))
                                                      (rule "applyEq" (formula "43") (term "0,1,1,0") (ifseqformula "44"))
                                                      (rule "getOfSeqSingleton" (formula "43") (term "1,1,0"))
                                                      (rule "castDel" (formula "43") (term "1,1,1,0"))
                                                      (rule "castDel" (formula "43") (term "2,1,1,0"))
                                                       (builtin "One Step Simplification" (formula "43"))
                                                      (rule "true_left" (formula "43"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "26") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "26"))
                                                      (rule "andLeft" (formula "26"))
                                                      (rule "lenOfSeqConcat" (formula "27") (term "1,1,0,0"))
                                                       (builtin "One Step Simplification" (formula "27"))
                                                      (rule "add_literals" (formula "27") (term "1,1,0,0"))
                                                      (rule "lenOfSeqConcat" (formula "26") (term "0"))
                                                       (builtin "One Step Simplification" (formula "26"))
                                                      (rule "add_literals" (formula "26") (term "0"))
                                                      (rule "equal_literals" (formula "26"))
                                                      (rule "closeFalse" (formula "26"))
                                                   )
                                                )
                                                (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_add<<anonHeapFunction>> FALSE"
                                                   (rule "applyEqReverse" (formula "29") (term "0") (ifseqformula "28"))
                                                    (builtin "One Step Simplification" (formula "29"))
                                                   (rule "true_left" (formula "29"))
                                                   (rule "hideAuxiliaryEq" (formula "28"))
                                                   (rule "ifthenelse_split" (formula "26") (term "0"))
                                                   (branch "(self_0, List::$seq) in self_0.footprint@anon_heap_add<<anonHeapFunction>> TRUE"
                                                      (rule "elementOfSubsetImpliesElementOfSuperset" (formula "26") (ifseqformula "21"))
                                                      (rule "elementOfUnion" (formula "26"))
                                                       (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "17")))
                                                      (rule "true_left" (formula "26"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "35") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "35"))
                                                      (rule "andLeft" (formula "35"))
                                                      (rule "inEqSimp_ltToLeq" (formula "36") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "36") (term "0,0,0"))
                                                      (rule "applyEq" (formula "35") (term "0,0") (ifseqformula "37"))
                                                       (builtin "One Step Simplification" (formula "35"))
                                                      (rule "true_left" (formula "35"))
                                                      (rule "applyEq" (formula "35") (term "0,0,1,0,0,1,0,0") (ifseqformula "36"))
                                                       (builtin "One Step Simplification" (formula "35"))
                                                      (rule "mul_literals" (formula "35") (term "1,0,0,1,0,0"))
                                                      (rule "add_literals" (formula "35") (term "0,0,1,0,0"))
                                                      (rule "applyEq" (formula "35") (term "0,0,1,0") (ifseqformula "36"))
                                                       (builtin "One Step Simplification" (formula "35"))
                                                      (rule "true_left" (formula "35"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "43") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "43"))
                                                      (rule "andLeft" (formula "43"))
                                                      (rule "getOfSeqSingleton" (formula "44") (term "1,1,0"))
                                                      (rule "castDel" (formula "44") (term "1,1,1,0"))
                                                      (rule "castDel" (formula "44") (term "2,1,1,0"))
                                                      (rule "eqSymm" (formula "44") (term "1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "44") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "44") (term "0,0,0"))
                                                      (rule "applyEq" (formula "44") (term "0,0,1,0,0,1,0,0") (ifseqformula "45"))
                                                       (builtin "One Step Simplification" (formula "44"))
                                                      (rule "mul_literals" (formula "44") (term "1,0,0,1,0,0"))
                                                      (rule "add_literals" (formula "44") (term "0,0,1,0,0"))
                                                      (rule "add_zero_left" (formula "44") (term "0,1,0,0"))
                                                      (rule "applyEq" (formula "43") (term "0,0") (ifseqformula "45"))
                                                       (builtin "One Step Simplification" (formula "43"))
                                                      (rule "true_left" (formula "43"))
                                                      (rule "applyEqRigid" (formula "43") (term "0,1,1,0") (ifseqformula "44"))
                                                      (rule "getOfSeqSingleton" (formula "43") (term "1,1,0"))
                                                      (rule "castDel" (formula "43") (term "1,1,1,0"))
                                                      (rule "castDel" (formula "43") (term "2,1,1,0"))
                                                       (builtin "One Step Simplification" (formula "43"))
                                                      (rule "true_left" (formula "43"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "18") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "18"))
                                                      (rule "andLeft" (formula "18"))
                                                      (rule "getOfSeqSingleton" (formula "19") (term "1,1,0"))
                                                      (rule "castDel" (formula "19") (term "1,1,1,0"))
                                                      (rule "castDel" (formula "19") (term "2,1,1,0"))
                                                      (rule "eqSymm" (formula "19") (term "1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
                                                      (rule "applyEq" (formula "19") (term "0,1,1,0") (ifseqformula "20"))
                                                      (rule "getOfSeqSingleton" (formula "19") (term "1,1,0"))
                                                      (rule "castDel" (formula "19") (term "2,1,1,0"))
                                                      (rule "castDel" (formula "19") (term "1,1,1,0"))
                                                       (builtin "One Step Simplification" (formula "19"))
                                                      (rule "true_left" (formula "19"))
                                                      (rule "applyEq" (formula "18") (term "0,0") (ifseqformula "19"))
                                                       (builtin "One Step Simplification" (formula "18"))
                                                      (rule "true_left" (formula "18"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "42") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "42"))
                                                      (rule "andLeft" (formula "42"))
                                                      (rule "getOfSeqSingleton" (formula "43") (term "1,1,0"))
                                                      (rule "castDel" (formula "43") (term "1,1,1,0"))
                                                      (rule "castDel" (formula "43") (term "2,1,1,0"))
                                                      (rule "eqSymm" (formula "43") (term "1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "43") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "43") (term "0,0,0"))
                                                      (rule "applyEq" (formula "43") (term "0,0,1,0,0,1,0,0") (ifseqformula "44"))
                                                       (builtin "One Step Simplification" (formula "43"))
                                                      (rule "mul_literals" (formula "43") (term "1,0,0,1,0,0"))
                                                      (rule "add_literals" (formula "43") (term "0,0,1,0,0"))
                                                      (rule "add_zero_left" (formula "43") (term "0,1,0,0"))
                                                      (rule "applyEq" (formula "42") (term "0,0") (ifseqformula "44"))
                                                       (builtin "One Step Simplification" (formula "42"))
                                                      (rule "true_left" (formula "42"))
                                                      (rule "applyEq" (formula "42") (term "0,1,1,0") (ifseqformula "43"))
                                                      (rule "getOfSeqSingleton" (formula "42") (term "1,1,0"))
                                                      (rule "castDel" (formula "42") (term "1,1,1,0"))
                                                      (rule "castDel" (formula "42") (term "2,1,1,0"))
                                                       (builtin "One Step Simplification" (formula "42"))
                                                      (rule "true_left" (formula "42"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "27") (inst "iv=iv"))
                                                      (rule "andLeft" (formula "27"))
                                                      (rule "lenOfSeqConcat" (formula "27") (term "1"))
                                                       (builtin "One Step Simplification" (formula "27"))
                                                      (rule "add_literals" (formula "27") (term "1"))
                                                      (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "28") (term "0,0,0"))
                                                      (rule "applyEq" (formula "27") (term "0,0") (ifseqformula "29"))
                                                      (rule "lenOfSeqConcat" (formula "27") (term "0"))
                                                       (builtin "One Step Simplification" (formula "27"))
                                                      (rule "add_literals" (formula "27") (term "0"))
                                                       (builtin "One Step Simplification" (formula "27"))
                                                      (rule "true_left" (formula "27"))
                                                      (rule "applyEq" (formula "27") (term "0,0,1,0") (ifseqformula "28"))
                                                       (builtin "One Step Simplification" (formula "27"))
                                                      (rule "true_left" (formula "27"))
                                                      (rule "onlyCreatedObjectsAreInLocSets" (formula "17") (ifseqformula "6"))
                                                      (rule "replace_known_left" (formula "17") (term "1") (ifseqformula "9"))
                                                       (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "55")))
                                                      (rule "true_left" (formula "17"))
                                                      (rule "onlyCreatedObjectsAreInLocSets" (formula "41") (ifseqformula "30"))
                                                      (rule "replace_known_left" (formula "41") (term "1") (ifseqformula "33"))
                                                       (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "53")))
                                                      (rule "true_left" (formula "41"))
                                                      (rule "onlyCreatedObjectsAreInLocSets" (formula "26") (ifseqformula "14"))
                                                      (rule "replace_known_right" (formula "26") (term "0") (ifseqformula "55"))
                                                       (builtin "One Step Simplification" (formula "26"))
                                                      (rule "onlyCreatedObjectsAreInLocSets" (formula "20") (ifseqformula "6"))
                                                      (rule "replace_known_left" (formula "20") (term "1") (ifseqformula "9"))
                                                       (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "56")))
                                                      (rule "true_left" (formula "20"))
                                                      (rule "onlyCreatedObjectsAreInLocSets" (formula "45") (ifseqformula "31"))
                                                      (rule "replace_known_left" (formula "45") (term "1") (ifseqformula "34"))
                                                       (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "54")))
                                                      (rule "true_left" (formula "45"))
                                                       (builtin "Use Dependency Contract" (formula "58") (ifInst ""  (formula "30")) (ifInst ""  (formula "40")) (ifInst ""  (formula "32")) (contract "ArrayList[java.lang.Object::<inv>()].JML accessible clause.0"))
                                                      (rule "replaceKnownSelect_taclet0000_9" (formula "48") (term "1,1,0"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet11000022000000000_28" (formula "48") (term "1,1,0"))
                                                      (rule "wellFormedAnonEQ" (formula "48") (term "0,1,0,0,0") (ifseqformula "24"))
                                                      (rule "wellFormedAnonEQ" (formula "48") (term "1,1,0,0,0") (ifseqformula "40"))
                                                      (rule "wellFormedAnonEQ" (formula "48") (term "0,1,1,0,0,0") (ifseqformula "32"))
                                                      (rule "wellFormedAnonEQ" (formula "48") (term "0,0,1,0,0,0") (ifseqformula "15"))
                                                      (rule "wellFormedAnonEQ" (formula "48") (term "0,0,0,1,0,0,0") (ifseqformula "7"))
                                                      (rule "wellFormedAnonEQ" (formula "48") (term "0,0,1,1,0,0,0") (ifseqformula "24"))
                                                      (rule "wellFormedAnonEQ" (formula "48") (term "0,0,0,1,1,0,0,0") (ifseqformula "15"))
                                                      (rule "wellFormedAnonEQ" (formula "48") (term "0,0,0,0,1,1,0,0,0") (ifseqformula "7"))
                                                      (rule "replace_known_left" (formula "48") (term "1,0,1,0,0,0") (ifseqformula "23"))
                                                       (builtin "One Step Simplification" (formula "48") (ifInst ""  (formula "56")) (ifInst ""  (formula "2")) (ifInst ""  (formula "6")) (ifInst ""  (formula "14")) (ifInst ""  (formula "2")) (ifInst ""  (formula "6")) (ifInst ""  (formula "14")) (ifInst ""  (formula "23")) (ifInst ""  (formula "31")) (ifInst ""  (formula "39")) (ifInst ""  (formula "30")) (ifInst ""  (formula "59")) (ifInst ""  (formula "30")))
                                                      (rule "notLeft" (formula "48"))
                                                      (rule "disjointDefinition" (formula "48") (term "1"))
                                                      (rule "pullOutSelect" (formula "48") (term "0,0") (inst "selectSK=java_lang_Object_created__6"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "25"))
                                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "57")))
                                                      (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "2,0"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "2,0"))
                                                      (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "0,0,0,0"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "0,0,0,0"))
                                                      (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "10"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "applyEqReverse" (formula "49") (term "0,0") (ifseqformula "1"))
                                                      (rule "hideAuxiliaryEq" (formula "1"))
                                                      (rule "replace_known_left" (formula "48") (term "0") (ifseqformula "9"))
                                                       (builtin "One Step Simplification" (formula "48"))
                                                      (rule "equalityToElementOfRight" (formula "48") (inst "fv=fv") (inst "ov=ov"))
                                                       (builtin "One Step Simplification" (formula "48"))
                                                      (rule "allRight" (formula "48") (inst "sk=ov_0"))
                                                      (rule "allRight" (formula "48") (inst "sk=fv_0"))
                                                      (rule "notRight" (formula "48"))
                                                      (rule "elementOfIntersect" (formula "1"))
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "elementOfSubsetImpliesElementOfSuperset" (formula "1") (ifseqformula "39"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "notLeft" (formula "2"))
                                                      (rule "notLeft" (formula "1"))
                                                      (rule "elementOfSubsetImpliesElementOfSuperset" (formula "2") (ifseqformula "23"))
                                                      (rule "elementOfUnion" (formula "2"))
                                                       (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "51")))
                                                      (rule "pullOutSelect" (formula "52") (term "0") (inst "selectSK=java_lang_Object_created__7"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "28"))
                                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "52")))
                                                      (rule "ifthenelse_negated" (formula "1") (term "0"))
                                                      (rule "apply_eq_boolean_rigid" (formula "1") (term "1") (ifseqformula "53"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "notLeft" (formula "1"))
                                                      (rule "ifEqualsTRUE" (formula "51"))
                                                       (builtin "One Step Simplification" (formula "51"))
                                                      (rule "orRight" (formula "51"))
                                                      (rule "replace_known_right" (formula "52") (term "0,0") (ifseqformula "51"))
                                                       (builtin "One Step Simplification" (formula "52"))
                                                      (rule "pullOutSelect" (formula "2") (term "0,0,0") (inst "selectSK=java_lang_Object_created__8"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "11"))
                                                       (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "54")))
                                                      (rule "ifthenelse_negated" (formula "2") (term "0"))
                                                      (rule "pullOutSelect" (formula "52") (term "0") (inst "selectSK=java_lang_Object_created__9"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "20"))
                                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "55")))
                                                      (rule "replaceKnownSelect_taclet011000022000000000_32" (formula "1") (term "2,0"))
                                                      (rule "replaceKnownSelect_taclet011000022000000000_32" (formula "1") (term "0,0,0,0"))
                                                      (rule "ifthenelse_negated" (formula "1") (term "0"))
                                                      (rule "apply_eq_boolean_rigid" (formula "1") (term "1") (ifseqformula "53"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "notLeft" (formula "1"))
                                                      (rule "ifEqualsTRUE" (formula "52"))
                                                       (builtin "One Step Simplification" (formula "52"))
                                                      (rule "orRight" (formula "52"))
                                                      (rule "replace_known_right" (formula "53") (term "0,0") (ifseqformula "52"))
                                                       (builtin "One Step Simplification" (formula "53"))
                                                      (rule "replace_known_right" (formula "3") (term "0,0") (ifseqformula "52"))
                                                       (builtin "One Step Simplification" (formula "3"))
                                                      (rule "true_left" (formula "3"))
                                                      (rule "apply_eq_boolean" (formula "2") (term "1") (ifseqformula "51"))
                                                       (builtin "One Step Simplification" (formula "2"))
                                                      (rule "notLeft" (formula "2"))
                                                      (rule "ifEqualsTRUE" (formula "50"))
                                                       (builtin "One Step Simplification" (formula "50"))
                                                      (rule "orRight" (formula "50"))
                                                      (rule "replace_known_right" (formula "51") (term "0,0") (ifseqformula "50"))
                                                       (builtin "One Step Simplification" (formula "51"))
                                                      (rule "hideAuxiliaryEqConcrete2" (formula "57"))
                                                      (rule "hideAuxiliaryEqConcrete2" (formula "54"))
                                                      (rule "hideAuxiliaryEqConcrete2" (formula "52"))
                                                      (rule "onlyCreatedObjectsAreInLocSets" (formula "2") (ifseqformula "16"))
                                                      (rule "replace_known_right" (formula "2") (term "1") (ifseqformula "53"))
                                                       (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "55")))
                                                      (rule "closeFalse" (formula "2"))
                                                   )
                                                   (branch "(self_0, List::$seq) in self_0.footprint@anon_heap_add<<anonHeapFunction>> FALSE"
                                                      (rule "eqSymm" (formula "26"))
                                                      (rule "applyEq" (formula "27") (term "1") (ifseqformula "26"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "34") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "34"))
                                                      (rule "andLeft" (formula "34"))
                                                      (rule "inEqSimp_ltToLeq" (formula "35") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "35") (term "0,0,0"))
                                                      (rule "applyEq" (formula "35") (term "0,0,1,0") (ifseqformula "36"))
                                                       (builtin "One Step Simplification" (formula "35"))
                                                      (rule "true_left" (formula "35"))
                                                      (rule "applyEq" (formula "34") (term "0,0") (ifseqformula "35"))
                                                       (builtin "One Step Simplification" (formula "34"))
                                                      (rule "true_left" (formula "34"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "42") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "42"))
                                                      (rule "andLeft" (formula "42"))
                                                      (rule "getOfSeqSingleton" (formula "43") (term "1,1,0"))
                                                      (rule "castDel" (formula "43") (term "1,1,1,0"))
                                                      (rule "castDel" (formula "43") (term "2,1,1,0"))
                                                      (rule "eqSymm" (formula "43") (term "1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "43") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "43") (term "0,0,0"))
                                                      (rule "applyEqRigid" (formula "43") (term "0,0,1,0,0,1,0,0") (ifseqformula "44"))
                                                       (builtin "One Step Simplification" (formula "43"))
                                                      (rule "mul_literals" (formula "43") (term "1,0,0,1,0,0"))
                                                      (rule "add_literals" (formula "43") (term "0,0,1,0,0"))
                                                      (rule "add_zero_left" (formula "43") (term "0,1,0,0"))
                                                      (rule "applyEq" (formula "42") (term "0,0") (ifseqformula "44"))
                                                       (builtin "One Step Simplification" (formula "42"))
                                                      (rule "true_left" (formula "42"))
                                                      (rule "applyEqRigid" (formula "42") (term "0,1,1,0") (ifseqformula "43"))
                                                      (rule "getOfSeqSingleton" (formula "42") (term "1,1,0"))
                                                      (rule "castDel" (formula "42") (term "1,1,1,0"))
                                                      (rule "castDel" (formula "42") (term "2,1,1,0"))
                                                       (builtin "One Step Simplification" (formula "42"))
                                                      (rule "true_left" (formula "42"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "18") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "18"))
                                                      (rule "andLeft" (formula "18"))
                                                      (rule "getOfSeqSingleton" (formula "19") (term "1,1,0"))
                                                      (rule "castDel" (formula "19") (term "1,1,1,0"))
                                                      (rule "castDel" (formula "19") (term "2,1,1,0"))
                                                      (rule "eqSymm" (formula "19") (term "1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
                                                      (rule "applyEq" (formula "19") (term "0,0,1,0,0,1,0,0") (ifseqformula "20"))
                                                       (builtin "One Step Simplification" (formula "19"))
                                                      (rule "mul_literals" (formula "19") (term "1,0,0,1,0,0"))
                                                      (rule "add_literals" (formula "19") (term "0,0,1,0,0"))
                                                      (rule "add_zero_left" (formula "19") (term "0,1,0,0"))
                                                      (rule "applyEq" (formula "18") (term "0,0") (ifseqformula "20"))
                                                       (builtin "One Step Simplification" (formula "18"))
                                                      (rule "true_left" (formula "18"))
                                                      (rule "applyEq" (formula "18") (term "0,1,1,0") (ifseqformula "19"))
                                                      (rule "getOfSeqSingleton" (formula "18") (term "1,1,0"))
                                                      (rule "castDel" (formula "18") (term "2,1,1,0"))
                                                      (rule "castDel" (formula "18") (term "1,1,1,0"))
                                                       (builtin "One Step Simplification" (formula "18"))
                                                      (rule "true_left" (formula "18"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "41") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "41"))
                                                      (rule "andLeft" (formula "41"))
                                                      (rule "getOfSeqSingleton" (formula "42") (term "1,1,0"))
                                                      (rule "castDel" (formula "42") (term "1,1,1,0"))
                                                      (rule "castDel" (formula "42") (term "2,1,1,0"))
                                                      (rule "eqSymm" (formula "42") (term "1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "42") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "42") (term "0,0,0"))
                                                      (rule "applyEq" (formula "42") (term "0,1,1,0") (ifseqformula "43"))
                                                      (rule "getOfSeqSingleton" (formula "42") (term "1,1,0"))
                                                      (rule "castDel" (formula "42") (term "2,1,1,0"))
                                                      (rule "castDel" (formula "42") (term "1,1,1,0"))
                                                       (builtin "One Step Simplification" (formula "42"))
                                                      (rule "true_left" (formula "42"))
                                                      (rule "applyEq" (formula "41") (term "0,0") (ifseqformula "42"))
                                                       (builtin "One Step Simplification" (formula "41"))
                                                      (rule "true_left" (formula "41"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "26") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "26"))
                                                      (rule "andLeft" (formula "26"))
                                                      (rule "getOfSeqSingleton" (formula "27") (term "1,1,0"))
                                                      (rule "castDel" (formula "27") (term "2,1,1,0"))
                                                      (rule "castDel" (formula "27") (term "1,1,1,0"))
                                                      (rule "eqSymm" (formula "27") (term "1,0"))
                                                      (rule "lenOfSeqConcat" (formula "27") (term "1,1,0,0"))
                                                       (builtin "One Step Simplification" (formula "27"))
                                                      (rule "add_literals" (formula "27") (term "1,1,0,0"))
                                                      (rule "lenOfSeqConcat" (formula "26") (term "0"))
                                                       (builtin "One Step Simplification" (formula "26"))
                                                      (rule "add_literals" (formula "26") (term "0"))
                                                      (rule "equal_literals" (formula "26"))
                                                      (rule "closeFalse" (formula "26"))
                                                   )
                                                )
                                             )
                                          )
                                          (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_ArrayList<<anonHeapFunction>> FALSE"
                                             (rule "applyEqReverse" (formula "29") (term "0,1") (ifseqformula "20"))
                                             (rule "applyEqReverse" (formula "28") (term "2,0,0") (ifseqformula "20"))
                                             (rule "applyEqReverse" (formula "24") (term "1,0") (ifseqformula "20"))
                                             (rule "applyEqReverse" (formula "26") (term "2,0,0") (ifseqformula "20"))
                                             (rule "applyEqReverse" (formula "21") (term "0") (ifseqformula "20"))
                                              (builtin "One Step Simplification" (formula "21"))
                                             (rule "true_left" (formula "21"))
                                             (rule "applyEqReverse" (formula "27") (term "2,0") (ifseqformula "20"))
                                             (rule "hideAuxiliaryEq" (formula "20"))
                                             (rule "replace_known_right" (formula "26") (term "0,0") (ifseqformula "46"))
                                              (builtin "One Step Simplification" (formula "26"))
                                             (rule "applyEqReverse" (formula "27") (term "0") (ifseqformula "26"))
                                              (builtin "One Step Simplification" (formula "27"))
                                             (rule "true_left" (formula "27"))
                                             (rule "hideAuxiliaryEq" (formula "26"))
                                             (rule "replace_known_left" (formula "24") (term "0,0") (ifseqformula "17"))
                                              (builtin "One Step Simplification" (formula "24"))
                                             (rule "ifthenelse_split" (formula "53") (term "0,0,1"))
                                             (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> TRUE"
                                                (rule "elementOfSubsetImpliesElementOfSuperset" (formula "1") (ifseqformula "34"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")))
                                                (rule "notLeft" (formula "1"))
                                                (rule "pullOutSelect" (formula "45") (term "0") (inst "selectSK=java_lang_Object_created__6"))
                                                (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "54")))
                                                (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "2,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "2,0"))
                                                (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "0,0,0,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "0,0,0,0"))
                                                (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "11"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "applyEqReverse" (formula "46") (term "0") (ifseqformula "1"))
                                                (rule "close" (formula "46") (ifseqformula "11"))
                                             )
                                             (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> FALSE"
                                                (rule "lenOfSeqConcat" (formula "54") (term "0,1"))
                                                 (builtin "One Step Simplification" (formula "54"))
                                                (rule "add_literals" (formula "54") (term "0,1"))
                                                (rule "qeq_literals" (formula "54") (term "1"))
                                                 (builtin "One Step Simplification" (formula "54"))
                                                (rule "equalityToSeqGetAndSeqLenLeft" (formula "32") (inst "iv=iv"))
                                                 (builtin "One Step Simplification" (formula "32"))
                                                (rule "andLeft" (formula "32"))
                                                (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0,0"))
                                                (rule "applyEq" (formula "33") (term "0,0,1,0,0,1,0,0") (ifseqformula "34"))
                                                 (builtin "One Step Simplification" (formula "33"))
                                                (rule "mul_literals" (formula "33") (term "1,0,0,1,0,0"))
                                                (rule "add_literals" (formula "33") (term "0,0,1,0,0"))
                                                (rule "applyEq" (formula "32") (term "0,0") (ifseqformula "34"))
                                                 (builtin "One Step Simplification" (formula "32"))
                                                (rule "true_left" (formula "32"))
                                                (rule "applyEq" (formula "32") (term "0,0,1,0") (ifseqformula "33"))
                                                 (builtin "One Step Simplification" (formula "32"))
                                                (rule "true_left" (formula "32"))
                                                (rule "equalityToSeqGetAndSeqLenLeft" (formula "40") (inst "iv=iv"))
                                                 (builtin "One Step Simplification" (formula "40"))
                                                (rule "andLeft" (formula "40"))
                                                (rule "getOfSeqSingleton" (formula "41") (term "1,1,0"))
                                                (rule "castDel" (formula "41") (term "2,1,1,0"))
                                                (rule "castDel" (formula "41") (term "1,1,1,0"))
                                                (rule "eqSymm" (formula "41") (term "1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "41") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "41") (term "0,0,0"))
                                                (rule "applyEqRigid" (formula "41") (term "0,0,1,0,0,1,0,0") (ifseqformula "42"))
                                                 (builtin "One Step Simplification" (formula "41"))
                                                (rule "mul_literals" (formula "41") (term "1,0,0,1,0,0"))
                                                (rule "add_literals" (formula "41") (term "0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "41") (term "0,1,0,0"))
                                                (rule "applyEqRigid" (formula "40") (term "0,0") (ifseqformula "42"))
                                                 (builtin "One Step Simplification" (formula "40"))
                                                (rule "true_left" (formula "40"))
                                                (rule "applyEq" (formula "40") (term "0,1,1,0") (ifseqformula "41"))
                                                (rule "getOfSeqSingleton" (formula "40") (term "1,1,0"))
                                                (rule "castDel" (formula "40") (term "1,1,1,0"))
                                                (rule "castDel" (formula "40") (term "2,1,1,0"))
                                                 (builtin "One Step Simplification" (formula "40"))
                                                (rule "true_left" (formula "40"))
                                                (rule "equalityToSeqGetAndSeqLenLeft" (formula "18") (inst "iv=iv"))
                                                 (builtin "One Step Simplification" (formula "18"))
                                                (rule "andLeft" (formula "18"))
                                                (rule "getOfSeqSingleton" (formula "19") (term "1,1,0"))
                                                (rule "castDel" (formula "19") (term "2,1,1,0"))
                                                (rule "castDel" (formula "19") (term "1,1,1,0"))
                                                (rule "eqSymm" (formula "19") (term "1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
                                                (rule "applyEq" (formula "19") (term "0,0,1,0,0,1,0,0") (ifseqformula "20"))
                                                 (builtin "One Step Simplification" (formula "19"))
                                                (rule "mul_literals" (formula "19") (term "1,0,0,1,0,0"))
                                                (rule "add_literals" (formula "19") (term "0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "19") (term "0,1,0,0"))
                                                (rule "applyEq" (formula "18") (term "0,0") (ifseqformula "20"))
                                                 (builtin "One Step Simplification" (formula "18"))
                                                (rule "true_left" (formula "18"))
                                                (rule "applyEq" (formula "18") (term "0,1,1,0") (ifseqformula "19"))
                                                (rule "getOfSeqSingleton" (formula "18") (term "1,1,0"))
                                                (rule "castDel" (formula "18") (term "1,1,1,0"))
                                                (rule "castDel" (formula "18") (term "2,1,1,0"))
                                                 (builtin "One Step Simplification" (formula "18"))
                                                (rule "true_left" (formula "18"))
                                                (rule "equalityToSeqGetAndSeqLenLeft" (formula "39") (inst "iv=iv"))
                                                 (builtin "One Step Simplification" (formula "39"))
                                                (rule "andLeft" (formula "39"))
                                                (rule "getOfSeqSingleton" (formula "40") (term "1,1,0"))
                                                (rule "castDel" (formula "40") (term "2,1,1,0"))
                                                (rule "castDel" (formula "40") (term "1,1,1,0"))
                                                (rule "eqSymm" (formula "40") (term "1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "40") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "40") (term "0,0,0"))
                                                (rule "applyEq" (formula "40") (term "0,1,1,0") (ifseqformula "41"))
                                                (rule "getOfSeqSingleton" (formula "40") (term "1,1,0"))
                                                (rule "castDel" (formula "40") (term "2,1,1,0"))
                                                (rule "castDel" (formula "40") (term "1,1,1,0"))
                                                 (builtin "One Step Simplification" (formula "40"))
                                                (rule "true_left" (formula "40"))
                                                (rule "applyEq" (formula "39") (term "0,0") (ifseqformula "40"))
                                                 (builtin "One Step Simplification" (formula "39"))
                                                (rule "true_left" (formula "39"))
                                                (rule "equalityToSeqGetAndSeqLenLeft" (formula "24") (inst "iv=iv"))
                                                (rule "andLeft" (formula "24"))
                                                (rule "lenOfSeqConcat" (formula "24") (term "1"))
                                                 (builtin "One Step Simplification" (formula "24"))
                                                (rule "add_literals" (formula "24") (term "1"))
                                                (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0"))
                                                (rule "applyEq" (formula "25") (term "0,0,1,0") (ifseqformula "26"))
                                                 (builtin "One Step Simplification" (formula "25"))
                                                (rule "true_left" (formula "25"))
                                                (rule "applyEq" (formula "24") (term "0,0") (ifseqformula "25"))
                                                (rule "lenOfSeqConcat" (formula "24") (term "0"))
                                                 (builtin "One Step Simplification" (formula "24"))
                                                (rule "add_literals" (formula "24") (term "0"))
                                                 (builtin "One Step Simplification" (formula "24"))
                                                (rule "true_left" (formula "24"))
                                                (rule "onlyCreatedObjectsAreInLocSets" (formula "17") (ifseqformula "6"))
                                                (rule "replace_known_left" (formula "17") (term "1") (ifseqformula "9"))
                                                 (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "52")))
                                                (rule "true_left" (formula "17"))
                                                (rule "onlyCreatedObjectsAreInLocSets" (formula "38") (ifseqformula "27"))
                                                (rule "replace_known_left" (formula "38") (term "1") (ifseqformula "30"))
                                                 (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "50")))
                                                (rule "true_left" (formula "38"))
                                                (rule "onlyCreatedObjectsAreInLocSets" (formula "41") (ifseqformula "27"))
                                                (rule "replace_known_right" (formula "41") (term "0") (ifseqformula "50"))
                                                 (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "30")))
                                                (rule "true_left" (formula "41"))
                                                 (builtin "Use Dependency Contract" (formula "54") (ifInst ""  (formula "26")) (ifInst ""  (formula "36")) (ifInst ""  (formula "28")) (contract "ArrayList[java.lang.Object::<inv>()].JML accessible clause.0"))
                                                (rule "replaceKnownSelect_taclet0000_9" (formula "44") (term "1,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet100022000000000_28" (formula "44") (term "1,1,0"))
                                                (rule "wellFormedAnonEQ" (formula "44") (term "1,1,0,0,0") (ifseqformula "36"))
                                                (rule "wellFormedAnonEQ" (formula "44") (term "0,1,0,0,0") (ifseqformula "22"))
                                                (rule "wellFormedAnonEQ" (formula "44") (term "0,0,1,0,0,0") (ifseqformula "15"))
                                                (rule "wellFormedAnonEQ" (formula "44") (term "0,1,1,0,0,0") (ifseqformula "28"))
                                                (rule "wellFormedAnonEQ" (formula "44") (term "0,0,1,1,0,0,0") (ifseqformula "22"))
                                                (rule "wellFormedAnonEQ" (formula "44") (term "0,0,0,1,0,0,0") (ifseqformula "7"))
                                                (rule "wellFormedAnonEQ" (formula "44") (term "0,0,0,1,1,0,0,0") (ifseqformula "15"))
                                                (rule "wellFormedAnonEQ" (formula "44") (term "0,0,0,0,1,1,0,0,0") (ifseqformula "7"))
                                                (rule "replace_known_left" (formula "44") (term "1,1") (ifseqformula "26"))
                                                 (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "52")) (ifInst ""  (formula "2")) (ifInst ""  (formula "6")) (ifInst ""  (formula "14")) (ifInst ""  (formula "21")) (ifInst ""  (formula "2")) (ifInst ""  (formula "6")) (ifInst ""  (formula "14")) (ifInst ""  (formula "21")) (ifInst ""  (formula "27")) (ifInst ""  (formula "35")) (ifInst ""  (formula "26")) (ifInst ""  (formula "55")))
                                                (rule "notLeft" (formula "44"))
                                                (rule "disjointDefinition" (formula "44") (term "1"))
                                                (rule "pullOutSelect" (formula "44") (term "0,0") (inst "selectSK=java_lang_Object_created__6"))
                                                (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")))
                                                (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "2,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "2,0"))
                                                (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "0,0,0,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "0,0,0,0"))
                                                (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "10"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "applyEqReverse" (formula "45") (term "0,0") (ifseqformula "1"))
                                                (rule "hideAuxiliaryEq" (formula "1"))
                                                (rule "replace_known_left" (formula "44") (term "0") (ifseqformula "9"))
                                                 (builtin "One Step Simplification" (formula "44"))
                                                (rule "commuteIntersection" (formula "44") (term "0"))
                                                (rule "equalityToElementOfRight" (formula "44") (inst "fv=fv") (inst "ov=ov"))
                                                 (builtin "One Step Simplification" (formula "44"))
                                                (rule "allRight" (formula "44") (inst "sk=ov_0"))
                                                (rule "allRight" (formula "44") (inst "sk=fv_0"))
                                                (rule "notRight" (formula "44"))
                                                (rule "elementOfIntersect" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "elementOfSubsetImpliesElementOfSuperset" (formula "1") (ifseqformula "14"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "notLeft" (formula "1"))
                                                (rule "elementOfSubsetImpliesElementOfSuperset" (formula "2") (ifseqformula "35"))
                                                 (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "47")))
                                                (rule "notLeft" (formula "2"))
                                                (rule "pullOutSelect" (formula "46") (term "0") (inst "selectSK=java_lang_Object_created__7"))
                                                (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "25"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "48")))
                                                (rule "ifthenelse_negated" (formula "1") (term "0"))
                                                (rule "apply_eq_boolean" (formula "1") (term "1") (ifseqformula "47"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "notLeft" (formula "1"))
                                                (rule "ifEqualsTRUE" (formula "46"))
                                                 (builtin "One Step Simplification" (formula "46"))
                                                (rule "orRight" (formula "46"))
                                                (rule "replace_known_right" (formula "47") (term "0,0") (ifseqformula "46"))
                                                 (builtin "One Step Simplification" (formula "47"))
                                                (rule "pullOutSelect" (formula "46") (term "0") (inst "selectSK=java_lang_Object_created__8"))
                                                (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "18"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "50")))
                                                (rule "ifthenelse_negated" (formula "1") (term "0"))
                                                (rule "apply_eq_boolean" (formula "1") (term "1") (ifseqformula "47"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "notLeft" (formula "1"))
                                                (rule "ifEqualsTRUE" (formula "46"))
                                                 (builtin "One Step Simplification" (formula "46"))
                                                (rule "orRight" (formula "46"))
                                                (rule "replace_known_right" (formula "47") (term "0,0") (ifseqformula "46"))
                                                 (builtin "One Step Simplification" (formula "47"))
                                                (rule "pullOutSelect" (formula "46") (term "0") (inst "selectSK=java_lang_Object_created__9"))
                                                (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "10"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "52")) (ifInst ""  (formula "53")))
                                                (rule "applyEqReverse" (formula "47") (term "0") (ifseqformula "1"))
                                                (rule "hideAuxiliaryEq" (formula "1"))
                                                (rule "hideAuxiliaryEqConcrete2" (formula "50"))
                                                (rule "hideAuxiliaryEqConcrete2" (formula "48"))
                                                (rule "onlyCreatedObjectsAreInLocSets" (formula "2") (ifseqformula "29"))
                                                (rule "replace_known_right" (formula "2") (term "0") (ifseqformula "50"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "onlyCreatedObjectsAreInLocSets" (formula "1") (ifseqformula "9"))
                                                (rule "replace_known_right" (formula "1") (term "1") (ifseqformula "48"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "51")))
                                                (rule "closeFalse" (formula "1"))
                                             )
                                          )
                                       )
                                       (branch "(self_1, List::$footprint) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> FALSE"
                                          (rule "applyEqReverse" (formula "46") (term "0") (ifseqformula "45"))
                                           (builtin "One Step Simplification" (formula "46"))
                                          (rule "true_left" (formula "46"))
                                          (rule "hideAuxiliaryEq" (formula "45"))
                                          (rule "ifthenelse_split" (formula "20") (term "0"))
                                          (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_ArrayList<<anonHeapFunction>> TRUE"
                                             (rule "applyEqReverse" (formula "29") (term "2,0,0") (ifseqformula "21"))
                                             (rule "applyEqReverse" (formula "30") (term "0,1") (ifseqformula "21"))
                                             (rule "applyEqReverse" (formula "29") (term "2,0") (ifseqformula "21"))
                                             (rule "applyEqReverse" (formula "27") (term "2,0,0") (ifseqformula "21"))
                                             (rule "applyEqReverse" (formula "25") (term "1,0") (ifseqformula "21"))
                                             (rule "applyEqReverse" (formula "22") (term "0") (ifseqformula "21"))
                                             (rule "hideAuxiliaryEq" (formula "21"))
                                             (rule "elementOfSubsetImpliesElementOfSuperset" (formula "20") (ifseqformula "12"))
                                              (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "54")) (ifInst ""  (formula "53")))
                                             (rule "true_left" (formula "20"))
                                             (rule "commuteUnion" (formula "29") (term "1"))
                                             (rule "ifthenelse_split" (formula "55") (term "0,0,1"))
                                             (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> TRUE"
                                                (rule "elementOfSubsetImpliesElementOfSuperset" (formula "1") (ifseqformula "38"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "55")))
                                                (rule "notLeft" (formula "1"))
                                                (rule "pullOutSelect" (formula "47") (term "0") (inst "selectSK=java_lang_Object_created__6"))
                                                (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "26"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "56")))
                                                (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "2,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "2,0"))
                                                (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "0,0,0,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "0,0,0,0"))
                                                (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "11"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "applyEqReverse" (formula "48") (term "0") (ifseqformula "1"))
                                                (rule "close" (formula "48") (ifseqformula "11"))
                                             )
                                             (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> FALSE"
                                                (rule "lenOfSeqConcat" (formula "56") (term "0,1"))
                                                 (builtin "One Step Simplification" (formula "56"))
                                                (rule "add_literals" (formula "56") (term "0,1"))
                                                (rule "qeq_literals" (formula "56") (term "1"))
                                                 (builtin "One Step Simplification" (formula "56"))
                                                (rule "ifthenelse_split" (formula "28") (term "0"))
                                                (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_add<<anonHeapFunction>> TRUE"
                                                   (rule "applyEqReverse" (formula "30") (term "0") (ifseqformula "29"))
                                                   (rule "hideAuxiliaryEq" (formula "29"))
                                                   (rule "elementOfSubsetImpliesElementOfSuperset" (formula "28") (ifseqformula "21"))
                                                   (rule "elementOfUnion" (formula "28"))
                                                    (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "20")))
                                                   (rule "true_left" (formula "28"))
                                                   (rule "ifthenelse_split" (formula "26") (term "0"))
                                                   (branch "(self_0, List::$seq) in self_0.footprint@anon_heap_add<<anonHeapFunction>> TRUE"
                                                      (rule "elementOfSubsetImpliesElementOfSuperset" (formula "26") (ifseqformula "21"))
                                                      (rule "elementOfUnion" (formula "26"))
                                                       (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "17")))
                                                      (rule "true_left" (formula "26"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "37") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "37"))
                                                      (rule "andLeft" (formula "37"))
                                                      (rule "inEqSimp_ltToLeq" (formula "38") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "38") (term "0,0,0"))
                                                      (rule "applyEq" (formula "37") (term "0,0") (ifseqformula "39"))
                                                       (builtin "One Step Simplification" (formula "37"))
                                                      (rule "true_left" (formula "37"))
                                                      (rule "applyEq" (formula "37") (term "0,0,1,0,0,1,0,0") (ifseqformula "38"))
                                                       (builtin "One Step Simplification" (formula "37"))
                                                      (rule "mul_literals" (formula "37") (term "1,0,0,1,0,0"))
                                                      (rule "add_literals" (formula "37") (term "0,0,1,0,0"))
                                                      (rule "applyEq" (formula "37") (term "0,0,1,0") (ifseqformula "38"))
                                                       (builtin "One Step Simplification" (formula "37"))
                                                      (rule "true_left" (formula "37"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "45") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "45"))
                                                      (rule "andLeft" (formula "45"))
                                                      (rule "getOfSeqSingleton" (formula "46") (term "1,1,0"))
                                                      (rule "castDel" (formula "46") (term "1,1,1,0"))
                                                      (rule "castDel" (formula "46") (term "2,1,1,0"))
                                                      (rule "eqSymm" (formula "46") (term "1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "46") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "46") (term "0,0,0"))
                                                      (rule "applyEq" (formula "46") (term "0,0,1,0,0,1,0,0") (ifseqformula "47"))
                                                       (builtin "One Step Simplification" (formula "46"))
                                                      (rule "mul_literals" (formula "46") (term "1,0,0,1,0,0"))
                                                      (rule "add_literals" (formula "46") (term "0,0,1,0,0"))
                                                      (rule "add_zero_left" (formula "46") (term "0,1,0,0"))
                                                      (rule "applyEq" (formula "45") (term "0,0") (ifseqformula "47"))
                                                       (builtin "One Step Simplification" (formula "45"))
                                                      (rule "true_left" (formula "45"))
                                                      (rule "applyEqRigid" (formula "45") (term "0,1,1,0") (ifseqformula "46"))
                                                      (rule "getOfSeqSingleton" (formula "45") (term "1,1,0"))
                                                      (rule "castDel" (formula "45") (term "1,1,1,0"))
                                                      (rule "castDel" (formula "45") (term "2,1,1,0"))
                                                       (builtin "One Step Simplification" (formula "45"))
                                                      (rule "true_left" (formula "45"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "18") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "18"))
                                                      (rule "andLeft" (formula "18"))
                                                      (rule "getOfSeqSingleton" (formula "19") (term "1,1,0"))
                                                      (rule "castDel" (formula "19") (term "1,1,1,0"))
                                                      (rule "castDel" (formula "19") (term "2,1,1,0"))
                                                      (rule "eqSymm" (formula "19") (term "1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
                                                      (rule "applyEq" (formula "19") (term "0,1,1,0") (ifseqformula "20"))
                                                      (rule "getOfSeqSingleton" (formula "19") (term "1,1,0"))
                                                      (rule "castDel" (formula "19") (term "2,1,1,0"))
                                                      (rule "castDel" (formula "19") (term "1,1,1,0"))
                                                       (builtin "One Step Simplification" (formula "19"))
                                                      (rule "true_left" (formula "19"))
                                                      (rule "applyEq" (formula "18") (term "0,0") (ifseqformula "19"))
                                                       (builtin "One Step Simplification" (formula "18"))
                                                      (rule "true_left" (formula "18"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "44") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "44"))
                                                      (rule "andLeft" (formula "44"))
                                                      (rule "getOfSeqSingleton" (formula "45") (term "1,1,0"))
                                                      (rule "castDel" (formula "45") (term "1,1,1,0"))
                                                      (rule "castDel" (formula "45") (term "2,1,1,0"))
                                                      (rule "eqSymm" (formula "45") (term "1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "45") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "45") (term "0,0,0"))
                                                      (rule "applyEq" (formula "45") (term "0,0,1,0,0,1,0,0") (ifseqformula "46"))
                                                       (builtin "One Step Simplification" (formula "45"))
                                                      (rule "mul_literals" (formula "45") (term "1,0,0,1,0,0"))
                                                      (rule "add_literals" (formula "45") (term "0,0,1,0,0"))
                                                      (rule "add_zero_left" (formula "45") (term "0,1,0,0"))
                                                      (rule "applyEq" (formula "44") (term "0,0") (ifseqformula "46"))
                                                       (builtin "One Step Simplification" (formula "44"))
                                                      (rule "true_left" (formula "44"))
                                                      (rule "applyEq" (formula "44") (term "0,1,1,0") (ifseqformula "45"))
                                                      (rule "getOfSeqSingleton" (formula "44") (term "1,1,0"))
                                                      (rule "castDel" (formula "44") (term "1,1,1,0"))
                                                      (rule "castDel" (formula "44") (term "2,1,1,0"))
                                                       (builtin "One Step Simplification" (formula "44"))
                                                      (rule "true_left" (formula "44"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "27") (inst "iv=iv"))
                                                      (rule "andLeft" (formula "27"))
                                                      (rule "lenOfSeqConcat" (formula "27") (term "1"))
                                                       (builtin "One Step Simplification" (formula "27"))
                                                      (rule "add_literals" (formula "27") (term "1"))
                                                      (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "28") (term "0,0,0"))
                                                      (rule "applyEq" (formula "27") (term "0,0") (ifseqformula "29"))
                                                      (rule "lenOfSeqConcat" (formula "27") (term "0"))
                                                       (builtin "One Step Simplification" (formula "27"))
                                                      (rule "add_literals" (formula "27") (term "0"))
                                                       (builtin "One Step Simplification" (formula "27"))
                                                      (rule "true_left" (formula "27"))
                                                      (rule "applyEq" (formula "27") (term "0,0,1,0") (ifseqformula "28"))
                                                       (builtin "One Step Simplification" (formula "27"))
                                                      (rule "true_left" (formula "27"))
                                                      (rule "onlyCreatedObjectsAreInLocSets" (formula "17") (ifseqformula "6"))
                                                      (rule "replace_known_left" (formula "17") (term "1") (ifseqformula "9"))
                                                       (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "55")))
                                                      (rule "true_left" (formula "17"))
                                                      (rule "onlyCreatedObjectsAreInLocSets" (formula "43") (ifseqformula "32"))
                                                      (rule "replace_known_left" (formula "43") (term "1") (ifseqformula "35"))
                                                       (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "53")))
                                                      (rule "true_left" (formula "43"))
                                                      (rule "onlyCreatedObjectsAreInLocSets" (formula "26") (ifseqformula "14"))
                                                      (rule "replace_known_right" (formula "26") (term "0") (ifseqformula "55"))
                                                       (builtin "One Step Simplification" (formula "26"))
                                                      (rule "onlyCreatedObjectsAreInLocSets" (formula "30") (ifseqformula "14"))
                                                      (rule "replace_known_left" (formula "30") (term "1") (ifseqformula "26"))
                                                       (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "56")))
                                                      (rule "true_left" (formula "30"))
                                                      (rule "onlyCreatedObjectsAreInLocSets" (formula "20") (ifseqformula "6"))
                                                      (rule "replace_known_left" (formula "20") (term "1") (ifseqformula "9"))
                                                       (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "56")))
                                                      (rule "true_left" (formula "20"))
                                                       (builtin "Use Dependency Contract" (formula "58") (ifInst ""  (formula "32")) (ifInst ""  (formula "42")) (ifInst ""  (formula "34")) (contract "ArrayList[java.lang.Object::<inv>()].JML accessible clause.0"))
                                                      (rule "replaceKnownSelect_taclet0000_9" (formula "48") (term "1,1,0"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet01010022000000000_28" (formula "48") (term "1,1,0"))
                                                      (rule "wellFormedAnonEQ" (formula "48") (term "0,1,0,0,0") (ifseqformula "24"))
                                                      (rule "wellFormedAnonEQ" (formula "48") (term "1,1,0,0,0") (ifseqformula "42"))
                                                      (rule "wellFormedAnonEQ" (formula "48") (term "0,1,1,0,0,0") (ifseqformula "34"))
                                                      (rule "wellFormedAnonEQ" (formula "48") (term "0,0,1,0,0,0") (ifseqformula "15"))
                                                      (rule "wellFormedAnonEQ" (formula "48") (term "0,0,0,1,0,0,0") (ifseqformula "7"))
                                                      (rule "wellFormedAnonEQ" (formula "48") (term "0,0,1,1,0,0,0") (ifseqformula "24"))
                                                      (rule "wellFormedAnonEQ" (formula "48") (term "0,0,0,1,1,0,0,0") (ifseqformula "15"))
                                                      (rule "wellFormedAnonEQ" (formula "48") (term "0,0,0,0,1,1,0,0,0") (ifseqformula "7"))
                                                      (rule "replace_known_left" (formula "48") (term "1,0,1,0,0,0") (ifseqformula "23"))
                                                       (builtin "One Step Simplification" (formula "48") (ifInst ""  (formula "56")) (ifInst ""  (formula "2")) (ifInst ""  (formula "6")) (ifInst ""  (formula "14")) (ifInst ""  (formula "2")) (ifInst ""  (formula "6")) (ifInst ""  (formula "14")) (ifInst ""  (formula "23")) (ifInst ""  (formula "33")) (ifInst ""  (formula "41")) (ifInst ""  (formula "32")) (ifInst ""  (formula "59")) (ifInst ""  (formula "32")))
                                                      (rule "notLeft" (formula "48"))
                                                      (rule "disjointDefinition" (formula "48") (term "1"))
                                                      (rule "pullOutSelect" (formula "48") (term "0,0") (inst "selectSK=java_lang_Object_created__6"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "25"))
                                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "57")))
                                                      (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "2,0"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "2,0"))
                                                      (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "0,0,0,0"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "0,0,0,0"))
                                                      (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "10"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "applyEqReverse" (formula "49") (term "0,0") (ifseqformula "1"))
                                                      (rule "hideAuxiliaryEq" (formula "1"))
                                                      (rule "replace_known_left" (formula "48") (term "0") (ifseqformula "9"))
                                                       (builtin "One Step Simplification" (formula "48"))
                                                      (rule "equalityToElementOfRight" (formula "48") (inst "fv=fv") (inst "ov=ov"))
                                                       (builtin "One Step Simplification" (formula "48"))
                                                      (rule "allRight" (formula "48") (inst "sk=ov_0"))
                                                      (rule "allRight" (formula "48") (inst "sk=fv_0"))
                                                      (rule "notRight" (formula "48"))
                                                      (rule "elementOfIntersect" (formula "1"))
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "elementOfSubsetImpliesElementOfSuperset" (formula "1") (ifseqformula "41"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "notLeft" (formula "2"))
                                                      (rule "notLeft" (formula "1"))
                                                      (rule "elementOfSubsetImpliesElementOfSuperset" (formula "2") (ifseqformula "33"))
                                                      (rule "elementOfUnion" (formula "2"))
                                                       (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "51")))
                                                      (rule "pullOutSelect" (formula "52") (term "0") (inst "selectSK=java_lang_Object_created__7"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "28"))
                                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "52")))
                                                      (rule "ifthenelse_negated" (formula "1") (term "0"))
                                                      (rule "apply_eq_boolean_rigid" (formula "1") (term "1") (ifseqformula "53"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "notLeft" (formula "1"))
                                                      (rule "ifEqualsTRUE" (formula "51"))
                                                       (builtin "One Step Simplification" (formula "51"))
                                                      (rule "orRight" (formula "51"))
                                                      (rule "replace_known_right" (formula "52") (term "0,0") (ifseqformula "51"))
                                                       (builtin "One Step Simplification" (formula "52"))
                                                      (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "51"))
                                                       (builtin "One Step Simplification" (formula "2"))
                                                      (rule "true_left" (formula "2"))
                                                      (rule "pullOutSelect" (formula "50") (term "0") (inst "selectSK=java_lang_Object_created__8"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "18"))
                                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")))
                                                      (rule "ifthenelse_negated" (formula "1") (term "0"))
                                                      (rule "apply_eq_boolean_rigid" (formula "1") (term "1") (ifseqformula "51"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "notLeft" (formula "1"))
                                                      (rule "ifEqualsTRUE" (formula "50"))
                                                       (builtin "One Step Simplification" (formula "50"))
                                                      (rule "orRight" (formula "50"))
                                                      (rule "replace_known_right" (formula "51") (term "0,0") (ifseqformula "50"))
                                                       (builtin "One Step Simplification" (formula "51"))
                                                      (rule "pullOutSelect" (formula "50") (term "0") (inst "selectSK=java_lang_Object_created__9"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "10"))
                                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "55")))
                                                      (rule "ifthenelse_negated" (formula "1") (term "0"))
                                                      (rule "apply_eq_boolean" (formula "1") (term "1") (ifseqformula "51"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "notLeft" (formula "1"))
                                                      (rule "ifEqualsTRUE" (formula "50"))
                                                       (builtin "One Step Simplification" (formula "50"))
                                                      (rule "orRight" (formula "50"))
                                                      (rule "replace_known_right" (formula "51") (term "0,0") (ifseqformula "50"))
                                                       (builtin "One Step Simplification" (formula "51"))
                                                      (rule "hideAuxiliaryEqConcrete2" (formula "57"))
                                                      (rule "hideAuxiliaryEqConcrete2" (formula "54"))
                                                      (rule "hideAuxiliaryEqConcrete2" (formula "52"))
                                                      (rule "onlyCreatedObjectsAreInLocSets" (formula "2") (ifseqformula "25"))
                                                      (rule "replace_known_right" (formula "2") (term "1") (ifseqformula "54"))
                                                       (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "55")))
                                                      (rule "closeFalse" (formula "2"))
                                                   )
                                                   (branch "(self_0, List::$seq) in self_0.footprint@anon_heap_add<<anonHeapFunction>> FALSE"
                                                      (rule "eqSymm" (formula "26"))
                                                      (rule "applyEqRigid" (formula "27") (term "1") (ifseqformula "26"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "36") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "36"))
                                                      (rule "andLeft" (formula "36"))
                                                      (rule "inEqSimp_ltToLeq" (formula "37") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "37") (term "0,0,0"))
                                                      (rule "applyEq" (formula "37") (term "0,0,1,0") (ifseqformula "38"))
                                                       (builtin "One Step Simplification" (formula "37"))
                                                      (rule "true_left" (formula "37"))
                                                      (rule "applyEq" (formula "36") (term "0,0") (ifseqformula "37"))
                                                       (builtin "One Step Simplification" (formula "36"))
                                                      (rule "true_left" (formula "36"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "44") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "44"))
                                                      (rule "andLeft" (formula "44"))
                                                      (rule "getOfSeqSingleton" (formula "45") (term "1,1,0"))
                                                      (rule "castDel" (formula "45") (term "1,1,1,0"))
                                                      (rule "castDel" (formula "45") (term "2,1,1,0"))
                                                      (rule "eqSymm" (formula "45") (term "1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "45") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "45") (term "0,0,0"))
                                                      (rule "applyEqRigid" (formula "45") (term "0,0,1,0,0,1,0,0") (ifseqformula "46"))
                                                       (builtin "One Step Simplification" (formula "45"))
                                                      (rule "mul_literals" (formula "45") (term "1,0,0,1,0,0"))
                                                      (rule "add_literals" (formula "45") (term "0,0,1,0,0"))
                                                      (rule "add_zero_left" (formula "45") (term "0,1,0,0"))
                                                      (rule "applyEq" (formula "44") (term "0,0") (ifseqformula "46"))
                                                       (builtin "One Step Simplification" (formula "44"))
                                                      (rule "true_left" (formula "44"))
                                                      (rule "applyEqRigid" (formula "44") (term "0,1,1,0") (ifseqformula "45"))
                                                      (rule "getOfSeqSingleton" (formula "44") (term "1,1,0"))
                                                      (rule "castDel" (formula "44") (term "1,1,1,0"))
                                                      (rule "castDel" (formula "44") (term "2,1,1,0"))
                                                       (builtin "One Step Simplification" (formula "44"))
                                                      (rule "true_left" (formula "44"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "18") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "18"))
                                                      (rule "andLeft" (formula "18"))
                                                      (rule "getOfSeqSingleton" (formula "19") (term "1,1,0"))
                                                      (rule "castDel" (formula "19") (term "1,1,1,0"))
                                                      (rule "castDel" (formula "19") (term "2,1,1,0"))
                                                      (rule "eqSymm" (formula "19") (term "1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
                                                      (rule "applyEq" (formula "18") (term "0,0") (ifseqformula "20"))
                                                       (builtin "One Step Simplification" (formula "18"))
                                                      (rule "true_left" (formula "18"))
                                                      (rule "applyEq" (formula "18") (term "0,0,1,0,0,1,0,0") (ifseqformula "19"))
                                                       (builtin "One Step Simplification" (formula "18"))
                                                      (rule "mul_literals" (formula "18") (term "1,0,0,1,0,0"))
                                                      (rule "add_literals" (formula "18") (term "0,0,1,0,0"))
                                                      (rule "add_zero_left" (formula "18") (term "0,1,0,0"))
                                                      (rule "applyEq" (formula "18") (term "0,1,1,0") (ifseqformula "19"))
                                                      (rule "getOfSeqSingleton" (formula "18") (term "1,1,0"))
                                                      (rule "castDel" (formula "18") (term "2,1,1,0"))
                                                      (rule "castDel" (formula "18") (term "1,1,1,0"))
                                                       (builtin "One Step Simplification" (formula "18"))
                                                      (rule "true_left" (formula "18"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "43") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "43"))
                                                      (rule "andLeft" (formula "43"))
                                                      (rule "getOfSeqSingleton" (formula "44") (term "1,1,0"))
                                                      (rule "castDel" (formula "44") (term "1,1,1,0"))
                                                      (rule "castDel" (formula "44") (term "2,1,1,0"))
                                                      (rule "eqSymm" (formula "44") (term "1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "44") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "44") (term "0,0,0"))
                                                      (rule "applyEq" (formula "44") (term "0,0,1,0,0,1,0,0") (ifseqformula "45"))
                                                       (builtin "One Step Simplification" (formula "44"))
                                                      (rule "mul_literals" (formula "44") (term "1,0,0,1,0,0"))
                                                      (rule "add_literals" (formula "44") (term "0,0,1,0,0"))
                                                      (rule "add_zero_left" (formula "44") (term "0,1,0,0"))
                                                      (rule "applyEq" (formula "43") (term "0,0") (ifseqformula "45"))
                                                       (builtin "One Step Simplification" (formula "43"))
                                                      (rule "true_left" (formula "43"))
                                                      (rule "applyEq" (formula "43") (term "0,1,1,0") (ifseqformula "44"))
                                                      (rule "getOfSeqSingleton" (formula "43") (term "1,1,0"))
                                                      (rule "castDel" (formula "43") (term "1,1,1,0"))
                                                      (rule "castDel" (formula "43") (term "2,1,1,0"))
                                                       (builtin "One Step Simplification" (formula "43"))
                                                      (rule "true_left" (formula "43"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "26") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "26"))
                                                      (rule "andLeft" (formula "26"))
                                                      (rule "getOfSeqSingleton" (formula "27") (term "1,1,0"))
                                                      (rule "castDel" (formula "27") (term "2,1,1,0"))
                                                      (rule "castDel" (formula "27") (term "1,1,1,0"))
                                                      (rule "eqSymm" (formula "27") (term "1,0"))
                                                      (rule "lenOfSeqConcat" (formula "27") (term "1,1,0,0"))
                                                       (builtin "One Step Simplification" (formula "27"))
                                                      (rule "add_literals" (formula "27") (term "1,1,0,0"))
                                                      (rule "lenOfSeqConcat" (formula "26") (term "0"))
                                                       (builtin "One Step Simplification" (formula "26"))
                                                      (rule "add_literals" (formula "26") (term "0"))
                                                      (rule "equal_literals" (formula "26"))
                                                      (rule "closeFalse" (formula "26"))
                                                   )
                                                )
                                                (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_add<<anonHeapFunction>> FALSE"
                                                   (rule "applyEqReverse" (formula "29") (term "0") (ifseqformula "28"))
                                                    (builtin "One Step Simplification" (formula "29"))
                                                   (rule "true_left" (formula "29"))
                                                   (rule "hideAuxiliaryEq" (formula "28"))
                                                   (rule "ifthenelse_split" (formula "26") (term "0"))
                                                   (branch "(self_0, List::$seq) in self_0.footprint@anon_heap_add<<anonHeapFunction>> TRUE"
                                                      (rule "elementOfSubsetImpliesElementOfSuperset" (formula "26") (ifseqformula "21"))
                                                      (rule "elementOfUnion" (formula "26"))
                                                       (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "17")))
                                                      (rule "true_left" (formula "26"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "35") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "35"))
                                                      (rule "andLeft" (formula "35"))
                                                      (rule "inEqSimp_ltToLeq" (formula "36") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "36") (term "0,0,0"))
                                                      (rule "applyEq" (formula "36") (term "0,0,1,0,0,1,0,0") (ifseqformula "37"))
                                                       (builtin "One Step Simplification" (formula "36"))
                                                      (rule "mul_literals" (formula "36") (term "1,0,0,1,0,0"))
                                                      (rule "add_literals" (formula "36") (term "0,0,1,0,0"))
                                                      (rule "applyEq" (formula "35") (term "0,0") (ifseqformula "37"))
                                                       (builtin "One Step Simplification" (formula "35"))
                                                      (rule "true_left" (formula "35"))
                                                      (rule "applyEq" (formula "35") (term "0,0,1,0") (ifseqformula "36"))
                                                       (builtin "One Step Simplification" (formula "35"))
                                                      (rule "true_left" (formula "35"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "43") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "43"))
                                                      (rule "andLeft" (formula "43"))
                                                      (rule "getOfSeqSingleton" (formula "44") (term "1,1,0"))
                                                      (rule "castDel" (formula "44") (term "2,1,1,0"))
                                                      (rule "castDel" (formula "44") (term "1,1,1,0"))
                                                      (rule "eqSymm" (formula "44") (term "1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "44") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "44") (term "0,0,0"))
                                                      (rule "applyEqRigid" (formula "44") (term "0,0,1,0,0,1,0,0") (ifseqformula "45"))
                                                       (builtin "One Step Simplification" (formula "44"))
                                                      (rule "mul_literals" (formula "44") (term "1,0,0,1,0,0"))
                                                      (rule "add_literals" (formula "44") (term "0,0,1,0,0"))
                                                      (rule "add_zero_left" (formula "44") (term "0,1,0,0"))
                                                      (rule "applyEq" (formula "43") (term "0,0") (ifseqformula "45"))
                                                       (builtin "One Step Simplification" (formula "43"))
                                                      (rule "true_left" (formula "43"))
                                                      (rule "applyEq" (formula "43") (term "0,1,1,0") (ifseqformula "44"))
                                                      (rule "getOfSeqSingleton" (formula "43") (term "1,1,0"))
                                                      (rule "castDel" (formula "43") (term "1,1,1,0"))
                                                      (rule "castDel" (formula "43") (term "2,1,1,0"))
                                                       (builtin "One Step Simplification" (formula "43"))
                                                      (rule "true_left" (formula "43"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "18") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "18"))
                                                      (rule "andLeft" (formula "18"))
                                                      (rule "getOfSeqSingleton" (formula "19") (term "1,1,0"))
                                                      (rule "castDel" (formula "19") (term "2,1,1,0"))
                                                      (rule "castDel" (formula "19") (term "1,1,1,0"))
                                                      (rule "eqSymm" (formula "19") (term "1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
                                                      (rule "applyEq" (formula "19") (term "0,0,1,0,0,1,0,0") (ifseqformula "20"))
                                                       (builtin "One Step Simplification" (formula "19"))
                                                      (rule "mul_literals" (formula "19") (term "1,0,0,1,0,0"))
                                                      (rule "add_literals" (formula "19") (term "0,0,1,0,0"))
                                                      (rule "add_zero_left" (formula "19") (term "0,1,0,0"))
                                                      (rule "applyEq" (formula "18") (term "0,0") (ifseqformula "20"))
                                                       (builtin "One Step Simplification" (formula "18"))
                                                      (rule "true_left" (formula "18"))
                                                      (rule "applyEq" (formula "18") (term "0,1,1,0") (ifseqformula "19"))
                                                      (rule "getOfSeqSingleton" (formula "18") (term "1,1,0"))
                                                      (rule "castDel" (formula "18") (term "1,1,1,0"))
                                                      (rule "castDel" (formula "18") (term "2,1,1,0"))
                                                       (builtin "One Step Simplification" (formula "18"))
                                                      (rule "true_left" (formula "18"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "42") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "42"))
                                                      (rule "andLeft" (formula "42"))
                                                      (rule "getOfSeqSingleton" (formula "43") (term "1,1,0"))
                                                      (rule "castDel" (formula "43") (term "2,1,1,0"))
                                                      (rule "castDel" (formula "43") (term "1,1,1,0"))
                                                      (rule "eqSymm" (formula "43") (term "1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "43") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "43") (term "0,0,0"))
                                                      (rule "applyEq" (formula "43") (term "0,0,1,0,0,1,0,0") (ifseqformula "44"))
                                                       (builtin "One Step Simplification" (formula "43"))
                                                      (rule "mul_literals" (formula "43") (term "1,0,0,1,0,0"))
                                                      (rule "add_literals" (formula "43") (term "0,0,1,0,0"))
                                                      (rule "add_zero_left" (formula "43") (term "0,1,0,0"))
                                                      (rule "applyEq" (formula "42") (term "0,0") (ifseqformula "44"))
                                                       (builtin "One Step Simplification" (formula "42"))
                                                      (rule "true_left" (formula "42"))
                                                      (rule "applyEq" (formula "42") (term "0,1,1,0") (ifseqformula "43"))
                                                      (rule "getOfSeqSingleton" (formula "42") (term "1,1,0"))
                                                      (rule "castDel" (formula "42") (term "1,1,1,0"))
                                                      (rule "castDel" (formula "42") (term "2,1,1,0"))
                                                       (builtin "One Step Simplification" (formula "42"))
                                                      (rule "true_left" (formula "42"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "27") (inst "iv=iv"))
                                                      (rule "andLeft" (formula "27"))
                                                      (rule "lenOfSeqConcat" (formula "27") (term "1"))
                                                       (builtin "One Step Simplification" (formula "27"))
                                                      (rule "add_literals" (formula "27") (term "1"))
                                                      (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "28") (term "0,0,0"))
                                                      (rule "applyEq" (formula "27") (term "0,0") (ifseqformula "29"))
                                                      (rule "lenOfSeqConcat" (formula "27") (term "0"))
                                                       (builtin "One Step Simplification" (formula "27"))
                                                      (rule "add_literals" (formula "27") (term "0"))
                                                       (builtin "One Step Simplification" (formula "27"))
                                                      (rule "true_left" (formula "27"))
                                                      (rule "applyEq" (formula "27") (term "0,0,1,0,0,1,0,0") (ifseqformula "28"))
                                                      (rule "lenOfSeqConcat" (formula "27") (term "0,1,0,0,1,0,0"))
                                                       (builtin "One Step Simplification" (formula "27"))
                                                      (rule "add_literals" (formula "27") (term "0,1,0,0,1,0,0"))
                                                      (rule "mul_literals" (formula "27") (term "1,0,0,1,0,0"))
                                                      (rule "add_literals" (formula "27") (term "0,0,1,0,0"))
                                                      (rule "applyEq" (formula "27") (term "0,0,1,0") (ifseqformula "28"))
                                                       (builtin "One Step Simplification" (formula "27"))
                                                      (rule "true_left" (formula "27"))
                                                      (rule "onlyCreatedObjectsAreInLocSets" (formula "17") (ifseqformula "6"))
                                                      (rule "replace_known_right" (formula "17") (term "0") (ifseqformula "54"))
                                                       (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "9")))
                                                      (rule "true_left" (formula "17"))
                                                      (rule "onlyCreatedObjectsAreInLocSets" (formula "41") (ifseqformula "30"))
                                                      (rule "replace_known_right" (formula "41") (term "0") (ifseqformula "52"))
                                                       (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "33")))
                                                      (rule "true_left" (formula "41"))
                                                      (rule "onlyCreatedObjectsAreInLocSets" (formula "26") (ifseqformula "14"))
                                                      (rule "replace_known_right" (formula "26") (term "0") (ifseqformula "54"))
                                                       (builtin "One Step Simplification" (formula "26"))
                                                      (rule "onlyCreatedObjectsAreInLocSets" (formula "20") (ifseqformula "6"))
                                                      (rule "replace_known_left" (formula "20") (term "1") (ifseqformula "9"))
                                                       (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "55")))
                                                      (rule "true_left" (formula "20"))
                                                       (builtin "Use Dependency Contract" (formula "57") (ifInst ""  (formula "30")) (ifInst ""  (formula "40")) (ifInst ""  (formula "32")) (contract "ArrayList[java.lang.Object::<inv>()].JML accessible clause.0"))
                                                      (rule "replaceKnownSelect_taclet0000_9" (formula "46") (term "1,1,0"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet11010022000000000_28" (formula "46") (term "1,1,0"))
                                                      (rule "wellFormedAnonEQ" (formula "46") (term "1,1,0,0,0") (ifseqformula "40"))
                                                      (rule "wellFormedAnonEQ" (formula "46") (term "0,1,0,0,0") (ifseqformula "24"))
                                                      (rule "wellFormedAnonEQ" (formula "46") (term "0,0,1,0,0,0") (ifseqformula "15"))
                                                      (rule "wellFormedAnonEQ" (formula "46") (term "0,1,1,0,0,0") (ifseqformula "32"))
                                                      (rule "wellFormedAnonEQ" (formula "46") (term "0,0,0,1,0,0,0") (ifseqformula "7"))
                                                      (rule "wellFormedAnonEQ" (formula "46") (term "0,0,1,1,0,0,0") (ifseqformula "24"))
                                                      (rule "wellFormedAnonEQ" (formula "46") (term "0,0,0,1,1,0,0,0") (ifseqformula "15"))
                                                      (rule "wellFormedAnonEQ" (formula "46") (term "0,0,0,0,1,1,0,0,0") (ifseqformula "7"))
                                                      (rule "replace_known_left" (formula "46") (term "1,0,0") (ifseqformula "30"))
                                                       (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "55")) (ifInst ""  (formula "2")) (ifInst ""  (formula "6")) (ifInst ""  (formula "14")) (ifInst ""  (formula "23")) (ifInst ""  (formula "2")) (ifInst ""  (formula "6")) (ifInst ""  (formula "14")) (ifInst ""  (formula "23")) (ifInst ""  (formula "31")) (ifInst ""  (formula "39")) (ifInst ""  (formula "58")) (ifInst ""  (formula "30")))
                                                      (rule "notLeft" (formula "46"))
                                                      (rule "disjointDefinition" (formula "46") (term "1"))
                                                      (rule "pullOutSelect" (formula "46") (term "0,0") (inst "selectSK=java_lang_Object_created__6"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "25"))
                                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "56")))
                                                      (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "2,0"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "2,0"))
                                                      (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "0,0,0,0"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "0,0,0,0"))
                                                      (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "10"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "applyEqReverse" (formula "47") (term "0,0") (ifseqformula "1"))
                                                      (rule "hideAuxiliaryEq" (formula "1"))
                                                      (rule "replace_known_left" (formula "46") (term "0") (ifseqformula "9"))
                                                       (builtin "One Step Simplification" (formula "46"))
                                                      (rule "equalityToElementOfRight" (formula "46") (inst "fv=fv") (inst "ov=ov"))
                                                       (builtin "One Step Simplification" (formula "46"))
                                                      (rule "allRight" (formula "46") (inst "sk=ov_0"))
                                                      (rule "allRight" (formula "46") (inst "sk=fv_0"))
                                                      (rule "notRight" (formula "46"))
                                                      (rule "elementOfIntersect" (formula "1"))
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "elementOfSubsetImpliesElementOfSuperset" (formula "1") (ifseqformula "39"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "notLeft" (formula "1"))
                                                      (rule "notLeft" (formula "1"))
                                                      (rule "elementOfSubsetImpliesElementOfSuperset" (formula "2") (ifseqformula "23"))
                                                      (rule "elementOfUnion" (formula "2"))
                                                       (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "50")))
                                                      (rule "pullOutSelect" (formula "49") (term "0") (inst "selectSK=java_lang_Object_created__7"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "28"))
                                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "51")))
                                                      (rule "ifthenelse_negated" (formula "1") (term "0"))
                                                      (rule "apply_eq_boolean_rigid" (formula "1") (term "1") (ifseqformula "50"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "notLeft" (formula "1"))
                                                      (rule "ifEqualsTRUE" (formula "49"))
                                                       (builtin "One Step Simplification" (formula "49"))
                                                      (rule "orRight" (formula "49"))
                                                      (rule "replace_known_right" (formula "50") (term "0,0") (ifseqformula "49"))
                                                       (builtin "One Step Simplification" (formula "50"))
                                                      (rule "pullOutSelect" (formula "2") (term "0,0,0") (inst "selectSK=java_lang_Object_created__8"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "11"))
                                                       (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "53")))
                                                      (rule "ifthenelse_negated" (formula "2") (term "0"))
                                                      (rule "pullOutSelect" (formula "50") (term "0") (inst "selectSK=java_lang_Object_created__9"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "20"))
                                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "54")))
                                                      (rule "replaceKnownSelect_taclet011010022000000000_32" (formula "1") (term "2,0"))
                                                      (rule "replaceKnownSelect_taclet011010022000000000_32" (formula "1") (term "0,0,0,0"))
                                                      (rule "ifthenelse_negated" (formula "1") (term "0"))
                                                      (rule "apply_eq_boolean_rigid" (formula "1") (term "1") (ifseqformula "51"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "notLeft" (formula "1"))
                                                      (rule "ifEqualsTRUE" (formula "50"))
                                                       (builtin "One Step Simplification" (formula "50"))
                                                      (rule "orRight" (formula "50"))
                                                      (rule "replace_known_right" (formula "51") (term "0,0") (ifseqformula "50"))
                                                       (builtin "One Step Simplification" (formula "51"))
                                                      (rule "replace_known_right" (formula "3") (term "0,0") (ifseqformula "50"))
                                                       (builtin "One Step Simplification" (formula "3"))
                                                      (rule "true_left" (formula "3"))
                                                      (rule "apply_eq_boolean_rigid" (formula "2") (term "1") (ifseqformula "49"))
                                                       (builtin "One Step Simplification" (formula "2"))
                                                      (rule "notLeft" (formula "2"))
                                                      (rule "ifEqualsTRUE" (formula "48"))
                                                       (builtin "One Step Simplification" (formula "48"))
                                                      (rule "orRight" (formula "48"))
                                                      (rule "replace_known_right" (formula "49") (term "0,0") (ifseqformula "48"))
                                                       (builtin "One Step Simplification" (formula "49"))
                                                      (rule "hideAuxiliaryEqConcrete2" (formula "54"))
                                                      (rule "hideAuxiliaryEqConcrete2" (formula "52"))
                                                      (rule "hideAuxiliaryEqConcrete2" (formula "50"))
                                                      (rule "onlyCreatedObjectsAreInLocSets" (formula "2") (ifseqformula "16"))
                                                      (rule "replace_known_right" (formula "2") (term "0") (ifseqformula "53"))
                                                       (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "51")))
                                                      (rule "closeFalse" (formula "2"))
                                                   )
                                                   (branch "(self_0, List::$seq) in self_0.footprint@anon_heap_add<<anonHeapFunction>> FALSE"
                                                      (rule "eqSymm" (formula "26"))
                                                      (rule "applyEq" (formula "27") (term "1") (ifseqformula "26"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "34") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "34"))
                                                      (rule "andLeft" (formula "34"))
                                                      (rule "inEqSimp_ltToLeq" (formula "35") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "35") (term "0,0,0"))
                                                      (rule "applyEq" (formula "34") (term "0,0") (ifseqformula "36"))
                                                       (builtin "One Step Simplification" (formula "34"))
                                                      (rule "true_left" (formula "34"))
                                                      (rule "applyEq" (formula "34") (term "0,0,1,0,0,1,0,0") (ifseqformula "35"))
                                                       (builtin "One Step Simplification" (formula "34"))
                                                      (rule "mul_literals" (formula "34") (term "1,0,0,1,0,0"))
                                                      (rule "add_literals" (formula "34") (term "0,0,1,0,0"))
                                                      (rule "applyEq" (formula "34") (term "0,0,1,0") (ifseqformula "35"))
                                                       (builtin "One Step Simplification" (formula "34"))
                                                      (rule "true_left" (formula "34"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "42") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "42"))
                                                      (rule "andLeft" (formula "42"))
                                                      (rule "getOfSeqSingleton" (formula "43") (term "1,1,0"))
                                                      (rule "castDel" (formula "43") (term "2,1,1,0"))
                                                      (rule "castDel" (formula "43") (term "1,1,1,0"))
                                                      (rule "eqSymm" (formula "43") (term "1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "43") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "43") (term "0,0,0"))
                                                      (rule "applyEq" (formula "43") (term "0,1,1,0") (ifseqformula "44"))
                                                      (rule "getOfSeqSingleton" (formula "43") (term "1,1,0"))
                                                      (rule "castDel" (formula "43") (term "1,1,1,0"))
                                                      (rule "castDel" (formula "43") (term "2,1,1,0"))
                                                       (builtin "One Step Simplification" (formula "43"))
                                                      (rule "true_left" (formula "43"))
                                                      (rule "applyEqRigid" (formula "42") (term "0,0") (ifseqformula "43"))
                                                       (builtin "One Step Simplification" (formula "42"))
                                                      (rule "true_left" (formula "42"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "18") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "18"))
                                                      (rule "andLeft" (formula "18"))
                                                      (rule "getOfSeqSingleton" (formula "19") (term "1,1,0"))
                                                      (rule "castDel" (formula "19") (term "2,1,1,0"))
                                                      (rule "castDel" (formula "19") (term "1,1,1,0"))
                                                      (rule "eqSymm" (formula "19") (term "1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
                                                      (rule "applyEq" (formula "19") (term "0,0,1,0,0,1,0,0") (ifseqformula "20"))
                                                       (builtin "One Step Simplification" (formula "19"))
                                                      (rule "mul_literals" (formula "19") (term "1,0,0,1,0,0"))
                                                      (rule "add_literals" (formula "19") (term "0,0,1,0,0"))
                                                      (rule "add_zero_left" (formula "19") (term "0,1,0,0"))
                                                      (rule "applyEq" (formula "18") (term "0,0") (ifseqformula "20"))
                                                       (builtin "One Step Simplification" (formula "18"))
                                                      (rule "true_left" (formula "18"))
                                                      (rule "applyEq" (formula "18") (term "0,1,1,0") (ifseqformula "19"))
                                                      (rule "getOfSeqSingleton" (formula "18") (term "1,1,0"))
                                                      (rule "castDel" (formula "18") (term "2,1,1,0"))
                                                      (rule "castDel" (formula "18") (term "1,1,1,0"))
                                                       (builtin "One Step Simplification" (formula "18"))
                                                      (rule "true_left" (formula "18"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "41") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "41"))
                                                      (rule "andLeft" (formula "41"))
                                                      (rule "getOfSeqSingleton" (formula "42") (term "1,1,0"))
                                                      (rule "castDel" (formula "42") (term "1,1,1,0"))
                                                      (rule "castDel" (formula "42") (term "2,1,1,0"))
                                                      (rule "eqSymm" (formula "42") (term "1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "42") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "42") (term "0,0,0"))
                                                      (rule "applyEq" (formula "41") (term "0,0") (ifseqformula "43"))
                                                       (builtin "One Step Simplification" (formula "41"))
                                                      (rule "true_left" (formula "41"))
                                                      (rule "applyEq" (formula "41") (term "0,0,1,0,0,1,0,0") (ifseqformula "42"))
                                                       (builtin "One Step Simplification" (formula "41"))
                                                      (rule "mul_literals" (formula "41") (term "1,0,0,1,0,0"))
                                                      (rule "add_literals" (formula "41") (term "0,0,1,0,0"))
                                                      (rule "add_zero_left" (formula "41") (term "0,1,0,0"))
                                                      (rule "applyEq" (formula "41") (term "0,1,1,0") (ifseqformula "42"))
                                                      (rule "getOfSeqSingleton" (formula "41") (term "1,1,0"))
                                                      (rule "castDel" (formula "41") (term "1,1,1,0"))
                                                      (rule "castDel" (formula "41") (term "2,1,1,0"))
                                                       (builtin "One Step Simplification" (formula "41"))
                                                      (rule "true_left" (formula "41"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "26") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "26"))
                                                      (rule "andLeft" (formula "26"))
                                                      (rule "getOfSeqSingleton" (formula "27") (term "1,1,0"))
                                                      (rule "castDel" (formula "27") (term "2,1,1,0"))
                                                      (rule "castDel" (formula "27") (term "1,1,1,0"))
                                                      (rule "eqSymm" (formula "27") (term "1,0"))
                                                      (rule "lenOfSeqConcat" (formula "26") (term "0"))
                                                       (builtin "One Step Simplification" (formula "26"))
                                                      (rule "add_literals" (formula "26") (term "0"))
                                                      (rule "equal_literals" (formula "26"))
                                                      (rule "closeFalse" (formula "26"))
                                                   )
                                                )
                                             )
                                          )
                                          (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_ArrayList<<anonHeapFunction>> FALSE"
                                             (rule "applyEqReverse" (formula "21") (term "0") (ifseqformula "20"))
                                              (builtin "One Step Simplification" (formula "21"))
                                             (rule "true_left" (formula "21"))
                                             (rule "applyEqReverse" (formula "27") (term "2,0") (ifseqformula "20"))
                                             (rule "applyEqReverse" (formula "23") (term "1,0") (ifseqformula "20"))
                                             (rule "applyEqReverse" (formula "25") (term "2,0,0") (ifseqformula "20"))
                                             (rule "applyEqReverse" (formula "27") (term "2,0,0") (ifseqformula "20"))
                                             (rule "applyEqReverse" (formula "28") (term "0,1") (ifseqformula "20"))
                                             (rule "hideAuxiliaryEq" (formula "20"))
                                             (rule "replace_known_left" (formula "24") (term "0,0") (ifseqformula "17"))
                                              (builtin "One Step Simplification" (formula "24"))
                                             (rule "replace_known_right" (formula "26") (term "0,0") (ifseqformula "44"))
                                              (builtin "One Step Simplification" (formula "26"))
                                             (rule "applyEqReverse" (formula "27") (term "0") (ifseqformula "26"))
                                              (builtin "One Step Simplification" (formula "27"))
                                             (rule "true_left" (formula "27"))
                                             (rule "hideAuxiliaryEq" (formula "26"))
                                             (rule "ifthenelse_split" (formula "52") (term "0,0,1"))
                                             (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> TRUE"
                                                (rule "elementOfSubsetImpliesElementOfSuperset" (formula "1") (ifseqformula "34"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "52")))
                                                (rule "notLeft" (formula "1"))
                                                (rule "pullOutSelect" (formula "43") (term "0") (inst "selectSK=java_lang_Object_created__6"))
                                                (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")))
                                                (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "2,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "2,0"))
                                                (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "0,0,0,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "0,0,0,0"))
                                                (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "11"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "applyEqReverse" (formula "44") (term "0") (ifseqformula "1"))
                                                (rule "close" (formula "44") (ifseqformula "11"))
                                             )
                                             (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> FALSE"
                                                (rule "lenOfSeqConcat" (formula "53") (term "0,1"))
                                                 (builtin "One Step Simplification" (formula "53"))
                                                (rule "add_literals" (formula "53") (term "0,1"))
                                                (rule "qeq_literals" (formula "53") (term "1"))
                                                 (builtin "One Step Simplification" (formula "53"))
                                                (rule "equalityToSeqGetAndSeqLenLeft" (formula "40") (inst "iv=iv"))
                                                 (builtin "One Step Simplification" (formula "40"))
                                                (rule "andLeft" (formula "40"))
                                                (rule "getOfSeqSingleton" (formula "41") (term "1,1,0"))
                                                (rule "castDel" (formula "41") (term "1,1,1,0"))
                                                (rule "castDel" (formula "41") (term "2,1,1,0"))
                                                (rule "eqSymm" (formula "41") (term "1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "41") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "41") (term "0,0,0"))
                                                (rule "applyEqRigid" (formula "41") (term "0,0,1,0,0,1,0,0") (ifseqformula "42"))
                                                 (builtin "One Step Simplification" (formula "41"))
                                                (rule "mul_literals" (formula "41") (term "1,0,0,1,0,0"))
                                                (rule "add_literals" (formula "41") (term "0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "41") (term "0,1,0,0"))
                                                (rule "applyEqRigid" (formula "40") (term "0,0") (ifseqformula "42"))
                                                 (builtin "One Step Simplification" (formula "40"))
                                                (rule "true_left" (formula "40"))
                                                (rule "applyEq" (formula "40") (term "0,1,1,0") (ifseqformula "41"))
                                                (rule "getOfSeqSingleton" (formula "40") (term "1,1,0"))
                                                (rule "castDel" (formula "40") (term "2,1,1,0"))
                                                (rule "castDel" (formula "40") (term "1,1,1,0"))
                                                 (builtin "One Step Simplification" (formula "40"))
                                                (rule "true_left" (formula "40"))
                                                (rule "equalityToSeqGetAndSeqLenLeft" (formula "32") (inst "iv=iv"))
                                                 (builtin "One Step Simplification" (formula "32"))
                                                (rule "andLeft" (formula "32"))
                                                (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0,0"))
                                                (rule "applyEq" (formula "33") (term "0,0,1,0") (ifseqformula "34"))
                                                 (builtin "One Step Simplification" (formula "33"))
                                                (rule "true_left" (formula "33"))
                                                (rule "applyEq" (formula "32") (term "0,0") (ifseqformula "33"))
                                                 (builtin "One Step Simplification" (formula "32"))
                                                (rule "true_left" (formula "32"))
                                                (rule "equalityToSeqGetAndSeqLenLeft" (formula "18") (inst "iv=iv"))
                                                 (builtin "One Step Simplification" (formula "18"))
                                                (rule "andLeft" (formula "18"))
                                                (rule "getOfSeqSingleton" (formula "19") (term "1,1,0"))
                                                (rule "castDel" (formula "19") (term "1,1,1,0"))
                                                (rule "castDel" (formula "19") (term "2,1,1,0"))
                                                (rule "eqSymm" (formula "19") (term "1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
                                                (rule "applyEq" (formula "19") (term "0,0,1,0,0,1,0,0") (ifseqformula "20"))
                                                 (builtin "One Step Simplification" (formula "19"))
                                                (rule "mul_literals" (formula "19") (term "1,0,0,1,0,0"))
                                                (rule "add_literals" (formula "19") (term "0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "19") (term "0,1,0,0"))
                                                (rule "applyEq" (formula "18") (term "0,0") (ifseqformula "20"))
                                                 (builtin "One Step Simplification" (formula "18"))
                                                (rule "true_left" (formula "18"))
                                                (rule "applyEq" (formula "18") (term "0,1,1,0") (ifseqformula "19"))
                                                (rule "getOfSeqSingleton" (formula "18") (term "1,1,0"))
                                                (rule "castDel" (formula "18") (term "1,1,1,0"))
                                                (rule "castDel" (formula "18") (term "2,1,1,0"))
                                                 (builtin "One Step Simplification" (formula "18"))
                                                (rule "true_left" (formula "18"))
                                                (rule "equalityToSeqGetAndSeqLenLeft" (formula "39") (inst "iv=iv"))
                                                 (builtin "One Step Simplification" (formula "39"))
                                                (rule "andLeft" (formula "39"))
                                                (rule "getOfSeqSingleton" (formula "40") (term "1,1,0"))
                                                (rule "castDel" (formula "40") (term "1,1,1,0"))
                                                (rule "castDel" (formula "40") (term "2,1,1,0"))
                                                (rule "eqSymm" (formula "40") (term "1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "40") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "40") (term "0,0,0"))
                                                (rule "applyEq" (formula "40") (term "0,0,1,0,0,1,0,0") (ifseqformula "41"))
                                                 (builtin "One Step Simplification" (formula "40"))
                                                (rule "mul_literals" (formula "40") (term "1,0,0,1,0,0"))
                                                (rule "add_literals" (formula "40") (term "0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "40") (term "0,1,0,0"))
                                                (rule "applyEq" (formula "39") (term "0,0") (ifseqformula "41"))
                                                 (builtin "One Step Simplification" (formula "39"))
                                                (rule "true_left" (formula "39"))
                                                (rule "applyEq" (formula "39") (term "0,1,1,0") (ifseqformula "40"))
                                                (rule "getOfSeqSingleton" (formula "39") (term "1,1,0"))
                                                (rule "castDel" (formula "39") (term "2,1,1,0"))
                                                (rule "castDel" (formula "39") (term "1,1,1,0"))
                                                 (builtin "One Step Simplification" (formula "39"))
                                                (rule "true_left" (formula "39"))
                                                (rule "equalityToSeqGetAndSeqLenLeft" (formula "24") (inst "iv=iv"))
                                                (rule "andLeft" (formula "24"))
                                                (rule "lenOfSeqConcat" (formula "24") (term "1"))
                                                 (builtin "One Step Simplification" (formula "24"))
                                                (rule "add_literals" (formula "24") (term "1"))
                                                (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0"))
                                                (rule "applyEq" (formula "24") (term "0,0") (ifseqformula "26"))
                                                (rule "lenOfSeqConcat" (formula "24") (term "0"))
                                                 (builtin "One Step Simplification" (formula "24"))
                                                (rule "add_literals" (formula "24") (term "0"))
                                                 (builtin "One Step Simplification" (formula "24"))
                                                (rule "true_left" (formula "24"))
                                                (rule "applyEq" (formula "24") (term "0,0,1,0,0,1,0,0") (ifseqformula "25"))
                                                (rule "lenOfSeqConcat" (formula "24") (term "0,1,0,0,1,0,0"))
                                                 (builtin "One Step Simplification" (formula "24"))
                                                (rule "add_literals" (formula "24") (term "0,1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "24") (term "1,0,0,1,0,0"))
                                                (rule "add_literals" (formula "24") (term "0,0,1,0,0"))
                                                (rule "applyEq" (formula "24") (term "0,0,1,0") (ifseqformula "25"))
                                                 (builtin "One Step Simplification" (formula "24"))
                                                (rule "true_left" (formula "24"))
                                                (rule "onlyCreatedObjectsAreInLocSets" (formula "17") (ifseqformula "6"))
                                                (rule "replace_known_left" (formula "17") (term "1") (ifseqformula "9"))
                                                 (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "51")))
                                                (rule "true_left" (formula "17"))
                                                (rule "onlyCreatedObjectsAreInLocSets" (formula "38") (ifseqformula "27"))
                                                (rule "replace_known_left" (formula "38") (term "1") (ifseqformula "30"))
                                                 (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "49")))
                                                (rule "true_left" (formula "38"))
                                                 (builtin "Use Dependency Contract" (formula "53") (ifInst ""  (formula "26")) (ifInst ""  (formula "36")) (ifInst ""  (formula "28")) (contract "ArrayList[java.lang.Object::<inv>()].JML accessible clause.0"))
                                                (rule "replaceKnownSelect_taclet0000_9" (formula "42") (term "1,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet110022000000000_28" (formula "42") (term "1,1,0"))
                                                (rule "wellFormedAnonEQ" (formula "42") (term "1,1,0,0,0") (ifseqformula "36"))
                                                (rule "wellFormedAnonEQ" (formula "42") (term "0,1,0,0,0") (ifseqformula "22"))
                                                (rule "wellFormedAnonEQ" (formula "42") (term "0,0,1,0,0,0") (ifseqformula "15"))
                                                (rule "wellFormedAnonEQ" (formula "42") (term "0,1,1,0,0,0") (ifseqformula "28"))
                                                (rule "wellFormedAnonEQ" (formula "42") (term "0,0,1,1,0,0,0") (ifseqformula "22"))
                                                (rule "wellFormedAnonEQ" (formula "42") (term "0,0,0,1,0,0,0") (ifseqformula "7"))
                                                (rule "wellFormedAnonEQ" (formula "42") (term "0,0,0,1,1,0,0,0") (ifseqformula "15"))
                                                (rule "wellFormedAnonEQ" (formula "42") (term "0,0,0,0,1,1,0,0,0") (ifseqformula "7"))
                                                (rule "replace_known_right" (formula "42") (term "0,0,0,0,0,0") (ifseqformula "51"))
                                                 (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "2")) (ifInst ""  (formula "6")) (ifInst ""  (formula "14")) (ifInst ""  (formula "21")) (ifInst ""  (formula "2")) (ifInst ""  (formula "6")) (ifInst ""  (formula "14")) (ifInst ""  (formula "21")) (ifInst ""  (formula "27")) (ifInst ""  (formula "35")) (ifInst ""  (formula "26")) (ifInst ""  (formula "54")) (ifInst ""  (formula "26")))
                                                (rule "notLeft" (formula "42"))
                                                (rule "disjointDefinition" (formula "42") (term "1"))
                                                (rule "pullOutSelect" (formula "42") (term "0,0") (inst "selectSK=java_lang_Object_created__6"))
                                                (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "52")))
                                                (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "2,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "2,0"))
                                                (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "0,0,0,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "0,0,0,0"))
                                                (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "10"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "applyEqReverse" (formula "43") (term "0,0") (ifseqformula "1"))
                                                (rule "hideAuxiliaryEq" (formula "1"))
                                                (rule "replace_known_left" (formula "42") (term "0") (ifseqformula "9"))
                                                 (builtin "One Step Simplification" (formula "42"))
                                                (rule "commuteIntersection" (formula "42") (term "0"))
                                                (rule "equalityToElementOfRight" (formula "42") (inst "fv=fv") (inst "ov=ov"))
                                                 (builtin "One Step Simplification" (formula "42"))
                                                (rule "allRight" (formula "42") (inst "sk=ov_0"))
                                                (rule "allRight" (formula "42") (inst "sk=fv_0"))
                                                (rule "notRight" (formula "42"))
                                                (rule "elementOfIntersect" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "elementOfSubsetImpliesElementOfSuperset" (formula "2") (ifseqformula "35"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "andLeft" (formula "2"))
                                                (rule "notLeft" (formula "3"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "elementOfSubsetImpliesElementOfSuperset" (formula "1") (ifseqformula "14"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "45")))
                                                (rule "notLeft" (formula "1"))
                                                (rule "pullOutSelect" (formula "46") (term "0") (inst "selectSK=java_lang_Object_created__7"))
                                                (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "25"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "46")))
                                                (rule "ifthenelse_negated" (formula "1") (term "0"))
                                                (rule "apply_eq_boolean_rigid" (formula "1") (term "1") (ifseqformula "47"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "notLeft" (formula "1"))
                                                (rule "ifEqualsTRUE" (formula "44"))
                                                 (builtin "One Step Simplification" (formula "44"))
                                                (rule "orRight" (formula "44"))
                                                (rule "replace_known_right" (formula "45") (term "0,0") (ifseqformula "44"))
                                                 (builtin "One Step Simplification" (formula "45"))
                                                (rule "pullOutSelect" (formula "44") (term "0") (inst "selectSK=java_lang_Object_created__8"))
                                                (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "18"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "48")))
                                                (rule "ifthenelse_negated" (formula "1") (term "0"))
                                                (rule "apply_eq_boolean" (formula "1") (term "1") (ifseqformula "45"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "notLeft" (formula "1"))
                                                (rule "ifEqualsTRUE" (formula "44"))
                                                 (builtin "One Step Simplification" (formula "44"))
                                                (rule "orRight" (formula "44"))
                                                (rule "replace_known_right" (formula "45") (term "0,0") (ifseqformula "44"))
                                                 (builtin "One Step Simplification" (formula "45"))
                                                (rule "pullOutSelect" (formula "44") (term "0") (inst "selectSK=java_lang_Object_created__9"))
                                                (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "10"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "50")) (ifInst ""  (formula "49")))
                                                (rule "applyEqReverse" (formula "45") (term "0") (ifseqformula "1"))
                                                (rule "hideAuxiliaryEq" (formula "1"))
                                                (rule "hideAuxiliaryEqConcrete2" (formula "50"))
                                                (rule "hideAuxiliaryEqConcrete2" (formula "46"))
                                                (rule "onlyCreatedObjectsAreInLocSets" (formula "2") (ifseqformula "29"))
                                                (rule "replace_known_right" (formula "2") (term "0") (ifseqformula "49"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "onlyCreatedObjectsAreInLocSets" (formula "1") (ifseqformula "9"))
                                                (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "50"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "46")))
                                                (rule "closeFalse" (formula "1"))
                                             )
                                          )
                                       )
                                    )
                                    (branch "(self_1, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> FALSE"
                                       (rule "eqSymm" (formula "42"))
                                       (rule "applyEq" (formula "43") (term "1") (ifseqformula "42"))
                                       (rule "ifthenelse_split" (formula "44") (term "0"))
                                       (branch "(self_1, List::$footprint) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> TRUE"
                                          (rule "applyEqReverse" (formula "46") (term "0") (ifseqformula "45"))
                                          (rule "hideAuxiliaryEq" (formula "45"))
                                          (rule "elementOfSubsetImpliesElementOfSuperset" (formula "44") (ifseqformula "37"))
                                           (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "53")))
                                          (rule "replaceKnownSelect_taclet0000000_18" (formula "44") (term "0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet0000000_21" (formula "44") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "44"))
                                          (rule "true_left" (formula "44"))
                                          (rule "ifthenelse_split" (formula "20") (term "0"))
                                          (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_ArrayList<<anonHeapFunction>> TRUE"
                                             (rule "applyEqReverse" (formula "25") (term "1,0") (ifseqformula "21"))
                                             (rule "applyEqReverse" (formula "29") (term "2,0") (ifseqformula "21"))
                                             (rule "applyEqReverse" (formula "29") (term "2,0,0") (ifseqformula "21"))
                                             (rule "applyEqReverse" (formula "27") (term "2,0,0") (ifseqformula "21"))
                                             (rule "applyEqReverse" (formula "22") (term "0") (ifseqformula "21"))
                                             (rule "applyEqReverse" (formula "30") (term "0,1") (ifseqformula "21"))
                                             (rule "hideAuxiliaryEq" (formula "21"))
                                             (rule "elementOfSubsetImpliesElementOfSuperset" (formula "20") (ifseqformula "12"))
                                              (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "55")) (ifInst ""  (formula "54")))
                                             (rule "true_left" (formula "20"))
                                             (rule "commuteUnion" (formula "29") (term "1"))
                                             (rule "ifthenelse_split" (formula "56") (term "0,0,1"))
                                             (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> TRUE"
                                                (rule "elementOfSubsetImpliesElementOfSuperset" (formula "1") (ifseqformula "38"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "56")))
                                                (rule "notLeft" (formula "1"))
                                                (rule "pullOutSelect" (formula "48") (term "0") (inst "selectSK=java_lang_Object_created__6"))
                                                (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "26"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "57")))
                                                (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "2,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "2,0"))
                                                (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "0,0,0,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "0,0,0,0"))
                                                (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "11"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "applyEqReverse" (formula "49") (term "0") (ifseqformula "1"))
                                                (rule "close" (formula "49") (ifseqformula "11"))
                                             )
                                             (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> FALSE"
                                                (rule "lenOfSeqConcat" (formula "57") (term "0,1"))
                                                 (builtin "One Step Simplification" (formula "57"))
                                                (rule "add_literals" (formula "57") (term "0,1"))
                                                (rule "qeq_literals" (formula "57") (term "1"))
                                                 (builtin "One Step Simplification" (formula "57"))
                                                (rule "ifthenelse_split" (formula "28") (term "0"))
                                                (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_add<<anonHeapFunction>> TRUE"
                                                   (rule "applyEqReverse" (formula "30") (term "0") (ifseqformula "29"))
                                                   (rule "hideAuxiliaryEq" (formula "29"))
                                                   (rule "elementOfSubsetImpliesElementOfSuperset" (formula "28") (ifseqformula "21"))
                                                   (rule "elementOfUnion" (formula "28"))
                                                    (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "20")))
                                                   (rule "true_left" (formula "28"))
                                                   (rule "ifthenelse_split" (formula "26") (term "0"))
                                                   (branch "(self_0, List::$seq) in self_0.footprint@anon_heap_add<<anonHeapFunction>> TRUE"
                                                      (rule "elementOfSubsetImpliesElementOfSuperset" (formula "26") (ifseqformula "21"))
                                                      (rule "elementOfUnion" (formula "26"))
                                                       (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "17")))
                                                      (rule "true_left" (formula "26"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "37") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "37"))
                                                      (rule "andLeft" (formula "37"))
                                                      (rule "inEqSimp_ltToLeq" (formula "38") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "38") (term "0,0,0"))
                                                      (rule "applyEq" (formula "38") (term "0,0,1,0,0,1,0,0") (ifseqformula "39"))
                                                       (builtin "One Step Simplification" (formula "38"))
                                                      (rule "mul_literals" (formula "38") (term "1,0,0,1,0,0"))
                                                      (rule "add_literals" (formula "38") (term "0,0,1,0,0"))
                                                      (rule "applyEq" (formula "37") (term "0,0") (ifseqformula "39"))
                                                       (builtin "One Step Simplification" (formula "37"))
                                                      (rule "true_left" (formula "37"))
                                                      (rule "applyEq" (formula "37") (term "0,0,1,0") (ifseqformula "38"))
                                                       (builtin "One Step Simplification" (formula "37"))
                                                      (rule "true_left" (formula "37"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "18") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "18"))
                                                      (rule "andLeft" (formula "18"))
                                                      (rule "getOfSeqSingleton" (formula "19") (term "1,1,0"))
                                                      (rule "castDel" (formula "19") (term "1,1,1,0"))
                                                      (rule "castDel" (formula "19") (term "2,1,1,0"))
                                                      (rule "eqSymm" (formula "19") (term "1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
                                                      (rule "applyEq" (formula "19") (term "0,0,1,0,0,1,0,0") (ifseqformula "20"))
                                                       (builtin "One Step Simplification" (formula "19"))
                                                      (rule "mul_literals" (formula "19") (term "1,0,0,1,0,0"))
                                                      (rule "add_literals" (formula "19") (term "0,0,1,0,0"))
                                                      (rule "add_zero_left" (formula "19") (term "0,1,0,0"))
                                                      (rule "applyEq" (formula "18") (term "0,0") (ifseqformula "20"))
                                                       (builtin "One Step Simplification" (formula "18"))
                                                      (rule "true_left" (formula "18"))
                                                      (rule "applyEq" (formula "18") (term "0,1,1,0") (ifseqformula "19"))
                                                      (rule "getOfSeqSingleton" (formula "18") (term "1,1,0"))
                                                      (rule "castDel" (formula "18") (term "2,1,1,0"))
                                                      (rule "castDel" (formula "18") (term "1,1,1,0"))
                                                       (builtin "One Step Simplification" (formula "18"))
                                                      (rule "true_left" (formula "18"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "43") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "43"))
                                                      (rule "equal_literals" (formula "43") (term "0"))
                                                       (builtin "One Step Simplification" (formula "43"))
                                                      (rule "closeFalse" (formula "43"))
                                                   )
                                                   (branch "(self_0, List::$seq) in self_0.footprint@anon_heap_add<<anonHeapFunction>> FALSE"
                                                      (rule "eqSymm" (formula "26"))
                                                      (rule "applyEqRigid" (formula "27") (term "1") (ifseqformula "26"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "36") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "36"))
                                                      (rule "andLeft" (formula "36"))
                                                      (rule "inEqSimp_ltToLeq" (formula "37") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "37") (term "0,0,0"))
                                                      (rule "applyEq" (formula "37") (term "0,0,1,0") (ifseqformula "38"))
                                                       (builtin "One Step Simplification" (formula "37"))
                                                      (rule "true_left" (formula "37"))
                                                      (rule "applyEq" (formula "36") (term "0,0") (ifseqformula "37"))
                                                       (builtin "One Step Simplification" (formula "36"))
                                                      (rule "true_left" (formula "36"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "18") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "18"))
                                                      (rule "andLeft" (formula "18"))
                                                      (rule "getOfSeqSingleton" (formula "19") (term "1,1,0"))
                                                      (rule "castDel" (formula "19") (term "2,1,1,0"))
                                                      (rule "castDel" (formula "19") (term "1,1,1,0"))
                                                      (rule "eqSymm" (formula "19") (term "1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
                                                      (rule "applyEq" (formula "18") (term "0,0") (ifseqformula "20"))
                                                       (builtin "One Step Simplification" (formula "18"))
                                                      (rule "true_left" (formula "18"))
                                                      (rule "applyEq" (formula "18") (term "0,1,1,0") (ifseqformula "19"))
                                                      (rule "getOfSeqSingleton" (formula "18") (term "1,1,0"))
                                                      (rule "castDel" (formula "18") (term "2,1,1,0"))
                                                      (rule "castDel" (formula "18") (term "1,1,1,0"))
                                                       (builtin "One Step Simplification" (formula "18"))
                                                      (rule "true_left" (formula "18"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "42") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "42"))
                                                      (rule "equal_literals" (formula "42") (term "0"))
                                                       (builtin "One Step Simplification" (formula "42"))
                                                      (rule "closeFalse" (formula "42"))
                                                   )
                                                )
                                                (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_add<<anonHeapFunction>> FALSE"
                                                   (rule "applyEqReverse" (formula "29") (term "0") (ifseqformula "28"))
                                                    (builtin "One Step Simplification" (formula "29"))
                                                   (rule "true_left" (formula "29"))
                                                   (rule "hideAuxiliaryEq" (formula "28"))
                                                   (rule "ifthenelse_split" (formula "26") (term "0"))
                                                   (branch "(self_0, List::$seq) in self_0.footprint@anon_heap_add<<anonHeapFunction>> TRUE"
                                                      (rule "elementOfSubsetImpliesElementOfSuperset" (formula "26") (ifseqformula "21"))
                                                      (rule "elementOfUnion" (formula "26"))
                                                       (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "17")))
                                                      (rule "true_left" (formula "26"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "35") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "35"))
                                                      (rule "andLeft" (formula "35"))
                                                      (rule "inEqSimp_ltToLeq" (formula "36") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "36") (term "0,0,0"))
                                                      (rule "applyEq" (formula "36") (term "0,0,1,0") (ifseqformula "37"))
                                                       (builtin "One Step Simplification" (formula "36"))
                                                      (rule "true_left" (formula "36"))
                                                      (rule "applyEq" (formula "35") (term "0,0") (ifseqformula "36"))
                                                       (builtin "One Step Simplification" (formula "35"))
                                                      (rule "true_left" (formula "35"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "18") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "18"))
                                                      (rule "andLeft" (formula "18"))
                                                      (rule "getOfSeqSingleton" (formula "19") (term "1,1,0"))
                                                      (rule "castDel" (formula "19") (term "1,1,1,0"))
                                                      (rule "castDel" (formula "19") (term "2,1,1,0"))
                                                      (rule "eqSymm" (formula "19") (term "1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
                                                      (rule "applyEq" (formula "19") (term "0,1,1,0") (ifseqformula "20"))
                                                      (rule "getOfSeqSingleton" (formula "19") (term "1,1,0"))
                                                      (rule "castDel" (formula "19") (term "2,1,1,0"))
                                                      (rule "castDel" (formula "19") (term "1,1,1,0"))
                                                       (builtin "One Step Simplification" (formula "19"))
                                                      (rule "true_left" (formula "19"))
                                                      (rule "applyEq" (formula "18") (term "0,0") (ifseqformula "19"))
                                                       (builtin "One Step Simplification" (formula "18"))
                                                      (rule "true_left" (formula "18"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "41") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "41"))
                                                      (rule "equal_literals" (formula "41") (term "0"))
                                                       (builtin "One Step Simplification" (formula "41"))
                                                      (rule "closeFalse" (formula "41"))
                                                   )
                                                   (branch "(self_0, List::$seq) in self_0.footprint@anon_heap_add<<anonHeapFunction>> FALSE"
                                                      (rule "eqSymm" (formula "26"))
                                                      (rule "applyEqRigid" (formula "27") (term "1") (ifseqformula "26"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "34") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "34"))
                                                      (rule "andLeft" (formula "34"))
                                                      (rule "inEqSimp_ltToLeq" (formula "35") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "35") (term "0,0,0"))
                                                      (rule "applyEq" (formula "34") (term "0,0") (ifseqformula "36"))
                                                       (builtin "One Step Simplification" (formula "34"))
                                                      (rule "true_left" (formula "34"))
                                                      (rule "applyEq" (formula "34") (term "0,0,1,0") (ifseqformula "35"))
                                                       (builtin "One Step Simplification" (formula "34"))
                                                      (rule "true_left" (formula "34"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "18") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "18"))
                                                      (rule "andLeft" (formula "18"))
                                                      (rule "getOfSeqSingleton" (formula "19") (term "1,1,0"))
                                                      (rule "castDel" (formula "19") (term "1,1,1,0"))
                                                      (rule "castDel" (formula "19") (term "2,1,1,0"))
                                                      (rule "eqSymm" (formula "19") (term "1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
                                                      (rule "applyEq" (formula "19") (term "0,1,1,0") (ifseqformula "20"))
                                                      (rule "getOfSeqSingleton" (formula "19") (term "1,1,0"))
                                                      (rule "castDel" (formula "19") (term "1,1,1,0"))
                                                      (rule "castDel" (formula "19") (term "2,1,1,0"))
                                                       (builtin "One Step Simplification" (formula "19"))
                                                      (rule "true_left" (formula "19"))
                                                      (rule "applyEq" (formula "18") (term "0,0") (ifseqformula "19"))
                                                       (builtin "One Step Simplification" (formula "18"))
                                                      (rule "true_left" (formula "18"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "40") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "40"))
                                                      (rule "equal_literals" (formula "40") (term "0"))
                                                       (builtin "One Step Simplification" (formula "40"))
                                                      (rule "closeFalse" (formula "40"))
                                                   )
                                                )
                                             )
                                          )
                                          (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_ArrayList<<anonHeapFunction>> FALSE"
                                             (rule "applyEqReverse" (formula "28") (term "2,0,0") (ifseqformula "20"))
                                             (rule "applyEqReverse" (formula "26") (term "2,0,0") (ifseqformula "20"))
                                             (rule "applyEqReverse" (formula "24") (term "1,0") (ifseqformula "20"))
                                             (rule "applyEqReverse" (formula "21") (term "0") (ifseqformula "20"))
                                              (builtin "One Step Simplification" (formula "21"))
                                             (rule "true_left" (formula "21"))
                                             (rule "applyEqReverse" (formula "28") (term "0,1") (ifseqformula "20"))
                                             (rule "applyEqReverse" (formula "27") (term "2,0") (ifseqformula "20"))
                                             (rule "hideAuxiliaryEq" (formula "20"))
                                             (rule "replace_known_left" (formula "24") (term "0,0") (ifseqformula "17"))
                                              (builtin "One Step Simplification" (formula "24"))
                                             (rule "replace_known_right" (formula "26") (term "0,0") (ifseqformula "45"))
                                              (builtin "One Step Simplification" (formula "26"))
                                             (rule "applyEqReverse" (formula "27") (term "0") (ifseqformula "26"))
                                              (builtin "One Step Simplification" (formula "27"))
                                             (rule "true_left" (formula "27"))
                                             (rule "hideAuxiliaryEq" (formula "26"))
                                             (rule "ifthenelse_split" (formula "53") (term "0,0,1"))
                                             (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> TRUE"
                                                (rule "elementOfSubsetImpliesElementOfSuperset" (formula "1") (ifseqformula "34"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")))
                                                (rule "notLeft" (formula "1"))
                                                (rule "pullOutSelect" (formula "44") (term "0") (inst "selectSK=java_lang_Object_created__6"))
                                                (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "54")))
                                                (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "2,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "2,0"))
                                                (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "0,0,0,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "0,0,0,0"))
                                                (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "11"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "applyEqReverse" (formula "45") (term "0") (ifseqformula "1"))
                                                (rule "close" (formula "45") (ifseqformula "11"))
                                             )
                                             (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> FALSE"
                                                (rule "lenOfSeqConcat" (formula "54") (term "0,1"))
                                                 (builtin "One Step Simplification" (formula "54"))
                                                (rule "add_literals" (formula "54") (term "0,1"))
                                                (rule "qeq_literals" (formula "54") (term "1"))
                                                 (builtin "One Step Simplification" (formula "54"))
                                                (rule "equalityToSeqGetAndSeqLenLeft" (formula "32") (inst "iv=iv"))
                                                 (builtin "One Step Simplification" (formula "32"))
                                                (rule "andLeft" (formula "32"))
                                                (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0,0"))
                                                (rule "applyEq" (formula "32") (term "0,0") (ifseqformula "34"))
                                                 (builtin "One Step Simplification" (formula "32"))
                                                (rule "true_left" (formula "32"))
                                                (rule "applyEq" (formula "32") (term "0,0,1,0") (ifseqformula "33"))
                                                 (builtin "One Step Simplification" (formula "32"))
                                                (rule "true_left" (formula "32"))
                                                (rule "equalityToSeqGetAndSeqLenLeft" (formula "18") (inst "iv=iv"))
                                                 (builtin "One Step Simplification" (formula "18"))
                                                (rule "andLeft" (formula "18"))
                                                (rule "getOfSeqSingleton" (formula "19") (term "1,1,0"))
                                                (rule "castDel" (formula "19") (term "2,1,1,0"))
                                                (rule "castDel" (formula "19") (term "1,1,1,0"))
                                                (rule "eqSymm" (formula "19") (term "1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
                                                (rule "applyEq" (formula "19") (term "0,1,1,0") (ifseqformula "20"))
                                                (rule "getOfSeqSingleton" (formula "19") (term "1,1,0"))
                                                (rule "castDel" (formula "19") (term "2,1,1,0"))
                                                (rule "castDel" (formula "19") (term "1,1,1,0"))
                                                 (builtin "One Step Simplification" (formula "19"))
                                                (rule "true_left" (formula "19"))
                                                (rule "applyEq" (formula "18") (term "0,0") (ifseqformula "19"))
                                                 (builtin "One Step Simplification" (formula "18"))
                                                (rule "true_left" (formula "18"))
                                                (rule "equalityToSeqGetAndSeqLenLeft" (formula "38") (inst "iv=iv"))
                                                 (builtin "One Step Simplification" (formula "38"))
                                                (rule "equal_literals" (formula "38") (term "0"))
                                                 (builtin "One Step Simplification" (formula "38"))
                                                (rule "closeFalse" (formula "38"))
                                             )
                                          )
                                       )
                                       (branch "(self_1, List::$footprint) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> FALSE"
                                          (rule "applyEqReverse" (formula "45") (term "0") (ifseqformula "44"))
                                           (builtin "One Step Simplification" (formula "45"))
                                          (rule "true_left" (formula "45"))
                                          (rule "hideAuxiliaryEq" (formula "44"))
                                          (rule "ifthenelse_split" (formula "20") (term "0"))
                                          (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_ArrayList<<anonHeapFunction>> TRUE"
                                             (rule "applyEqReverse" (formula "25") (term "1,0") (ifseqformula "21"))
                                             (rule "applyEqReverse" (formula "22") (term "0") (ifseqformula "21"))
                                             (rule "applyEqReverse" (formula "29") (term "2,0") (ifseqformula "21"))
                                             (rule "applyEqReverse" (formula "30") (term "0,1") (ifseqformula "21"))
                                             (rule "applyEqReverse" (formula "29") (term "2,0,0") (ifseqformula "21"))
                                             (rule "applyEqReverse" (formula "27") (term "2,0,0") (ifseqformula "21"))
                                             (rule "hideAuxiliaryEq" (formula "21"))
                                             (rule "elementOfSubsetImpliesElementOfSuperset" (formula "20") (ifseqformula "12"))
                                              (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "54")) (ifInst ""  (formula "53")))
                                             (rule "true_left" (formula "20"))
                                             (rule "commuteUnion" (formula "29") (term "1"))
                                             (rule "ifthenelse_split" (formula "55") (term "0,0,1"))
                                             (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> TRUE"
                                                (rule "elementOfSubsetImpliesElementOfSuperset" (formula "1") (ifseqformula "38"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "55")))
                                                (rule "notLeft" (formula "1"))
                                                (rule "pullOutSelect" (formula "46") (term "0") (inst "selectSK=java_lang_Object_created__6"))
                                                (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "26"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "56")))
                                                (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "2,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "2,0"))
                                                (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "0,0,0,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "0,0,0,0"))
                                                (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "11"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "applyEqReverse" (formula "47") (term "0") (ifseqformula "1"))
                                                (rule "close" (formula "47") (ifseqformula "11"))
                                             )
                                             (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> FALSE"
                                                (rule "lenOfSeqConcat" (formula "56") (term "0,1"))
                                                 (builtin "One Step Simplification" (formula "56"))
                                                (rule "add_literals" (formula "56") (term "0,1"))
                                                (rule "qeq_literals" (formula "56") (term "1"))
                                                 (builtin "One Step Simplification" (formula "56"))
                                                (rule "ifthenelse_split" (formula "28") (term "0"))
                                                (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_add<<anonHeapFunction>> TRUE"
                                                   (rule "applyEqReverse" (formula "30") (term "0") (ifseqformula "29"))
                                                   (rule "hideAuxiliaryEq" (formula "29"))
                                                   (rule "elementOfSubsetImpliesElementOfSuperset" (formula "28") (ifseqformula "21"))
                                                   (rule "elementOfUnion" (formula "28"))
                                                    (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "20")))
                                                   (rule "true_left" (formula "28"))
                                                   (rule "ifthenelse_split" (formula "26") (term "0"))
                                                   (branch "(self_0, List::$seq) in self_0.footprint@anon_heap_add<<anonHeapFunction>> TRUE"
                                                      (rule "elementOfSubsetImpliesElementOfSuperset" (formula "26") (ifseqformula "21"))
                                                      (rule "elementOfUnion" (formula "26"))
                                                       (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "17")))
                                                      (rule "true_left" (formula "26"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "37") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "37"))
                                                      (rule "andLeft" (formula "37"))
                                                      (rule "inEqSimp_ltToLeq" (formula "38") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "38") (term "0,0,0"))
                                                      (rule "applyEq" (formula "38") (term "0,0,1,0") (ifseqformula "39"))
                                                       (builtin "One Step Simplification" (formula "38"))
                                                      (rule "true_left" (formula "38"))
                                                      (rule "applyEq" (formula "37") (term "0,0") (ifseqformula "38"))
                                                       (builtin "One Step Simplification" (formula "37"))
                                                      (rule "true_left" (formula "37"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "18") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "18"))
                                                      (rule "andLeft" (formula "18"))
                                                      (rule "getOfSeqSingleton" (formula "19") (term "1,1,0"))
                                                      (rule "castDel" (formula "19") (term "1,1,1,0"))
                                                      (rule "castDel" (formula "19") (term "2,1,1,0"))
                                                      (rule "eqSymm" (formula "19") (term "1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
                                                      (rule "applyEq" (formula "18") (term "0,0") (ifseqformula "20"))
                                                       (builtin "One Step Simplification" (formula "18"))
                                                      (rule "true_left" (formula "18"))
                                                      (rule "applyEq" (formula "18") (term "0,0,1,0,0,1,0,0") (ifseqformula "19"))
                                                       (builtin "One Step Simplification" (formula "18"))
                                                      (rule "mul_literals" (formula "18") (term "1,0,0,1,0,0"))
                                                      (rule "add_literals" (formula "18") (term "0,0,1,0,0"))
                                                      (rule "add_zero_left" (formula "18") (term "0,1,0,0"))
                                                      (rule "applyEq" (formula "18") (term "0,1,1,0") (ifseqformula "19"))
                                                      (rule "getOfSeqSingleton" (formula "18") (term "1,1,0"))
                                                      (rule "castDel" (formula "18") (term "2,1,1,0"))
                                                      (rule "castDel" (formula "18") (term "1,1,1,0"))
                                                       (builtin "One Step Simplification" (formula "18"))
                                                      (rule "true_left" (formula "18"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "43") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "43"))
                                                      (rule "equal_literals" (formula "43") (term "0"))
                                                       (builtin "One Step Simplification" (formula "43"))
                                                      (rule "closeFalse" (formula "43"))
                                                   )
                                                   (branch "(self_0, List::$seq) in self_0.footprint@anon_heap_add<<anonHeapFunction>> FALSE"
                                                      (rule "eqSymm" (formula "26"))
                                                      (rule "applyEq" (formula "27") (term "1") (ifseqformula "26"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "36") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "36"))
                                                      (rule "andLeft" (formula "36"))
                                                      (rule "inEqSimp_ltToLeq" (formula "37") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "37") (term "0,0,0"))
                                                      (rule "applyEq" (formula "36") (term "0,0") (ifseqformula "38"))
                                                       (builtin "One Step Simplification" (formula "36"))
                                                      (rule "true_left" (formula "36"))
                                                      (rule "applyEq" (formula "36") (term "0,0,1,0") (ifseqformula "37"))
                                                       (builtin "One Step Simplification" (formula "36"))
                                                      (rule "true_left" (formula "36"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "18") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "18"))
                                                      (rule "andLeft" (formula "18"))
                                                      (rule "getOfSeqSingleton" (formula "19") (term "1,1,0"))
                                                      (rule "castDel" (formula "19") (term "1,1,1,0"))
                                                      (rule "castDel" (formula "19") (term "2,1,1,0"))
                                                      (rule "eqSymm" (formula "19") (term "1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
                                                      (rule "applyEq" (formula "19") (term "0,1,1,0") (ifseqformula "20"))
                                                      (rule "getOfSeqSingleton" (formula "19") (term "1,1,0"))
                                                      (rule "castDel" (formula "19") (term "1,1,1,0"))
                                                      (rule "castDel" (formula "19") (term "2,1,1,0"))
                                                       (builtin "One Step Simplification" (formula "19"))
                                                      (rule "true_left" (formula "19"))
                                                      (rule "applyEq" (formula "18") (term "0,0") (ifseqformula "19"))
                                                       (builtin "One Step Simplification" (formula "18"))
                                                      (rule "true_left" (formula "18"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "42") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "42"))
                                                      (rule "equal_literals" (formula "42") (term "0"))
                                                       (builtin "One Step Simplification" (formula "42"))
                                                      (rule "closeFalse" (formula "42"))
                                                   )
                                                )
                                                (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_add<<anonHeapFunction>> FALSE"
                                                   (rule "applyEqReverse" (formula "29") (term "0") (ifseqformula "28"))
                                                    (builtin "One Step Simplification" (formula "29"))
                                                   (rule "true_left" (formula "29"))
                                                   (rule "hideAuxiliaryEq" (formula "28"))
                                                   (rule "ifthenelse_split" (formula "26") (term "0"))
                                                   (branch "(self_0, List::$seq) in self_0.footprint@anon_heap_add<<anonHeapFunction>> TRUE"
                                                      (rule "elementOfSubsetImpliesElementOfSuperset" (formula "26") (ifseqformula "21"))
                                                      (rule "elementOfUnion" (formula "26"))
                                                       (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "17")))
                                                      (rule "true_left" (formula "26"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "35") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "35"))
                                                      (rule "andLeft" (formula "35"))
                                                      (rule "inEqSimp_ltToLeq" (formula "36") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "36") (term "0,0,0"))
                                                      (rule "applyEq" (formula "35") (term "0,0") (ifseqformula "37"))
                                                       (builtin "One Step Simplification" (formula "35"))
                                                      (rule "true_left" (formula "35"))
                                                      (rule "applyEq" (formula "35") (term "0,0,1,0") (ifseqformula "36"))
                                                       (builtin "One Step Simplification" (formula "35"))
                                                      (rule "true_left" (formula "35"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "18") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "18"))
                                                      (rule "andLeft" (formula "18"))
                                                      (rule "getOfSeqSingleton" (formula "19") (term "1,1,0"))
                                                      (rule "castDel" (formula "19") (term "1,1,1,0"))
                                                      (rule "castDel" (formula "19") (term "2,1,1,0"))
                                                      (rule "eqSymm" (formula "19") (term "1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
                                                      (rule "applyEq" (formula "18") (term "0,0") (ifseqformula "20"))
                                                       (builtin "One Step Simplification" (formula "18"))
                                                      (rule "true_left" (formula "18"))
                                                      (rule "applyEq" (formula "18") (term "0,1,1,0") (ifseqformula "19"))
                                                      (rule "getOfSeqSingleton" (formula "18") (term "1,1,0"))
                                                      (rule "castDel" (formula "18") (term "2,1,1,0"))
                                                      (rule "castDel" (formula "18") (term "1,1,1,0"))
                                                       (builtin "One Step Simplification" (formula "18"))
                                                      (rule "true_left" (formula "18"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "41") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "41"))
                                                      (rule "equal_literals" (formula "41") (term "0"))
                                                       (builtin "One Step Simplification" (formula "41"))
                                                      (rule "closeFalse" (formula "41"))
                                                   )
                                                   (branch "(self_0, List::$seq) in self_0.footprint@anon_heap_add<<anonHeapFunction>> FALSE"
                                                      (rule "eqSymm" (formula "26"))
                                                      (rule "applyEq" (formula "27") (term "1") (ifseqformula "26"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "34") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "34"))
                                                      (rule "andLeft" (formula "34"))
                                                      (rule "inEqSimp_ltToLeq" (formula "35") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "35") (term "0,0,0"))
                                                      (rule "applyEq" (formula "34") (term "0,0") (ifseqformula "36"))
                                                       (builtin "One Step Simplification" (formula "34"))
                                                      (rule "true_left" (formula "34"))
                                                      (rule "applyEq" (formula "34") (term "0,0,1,0") (ifseqformula "35"))
                                                       (builtin "One Step Simplification" (formula "34"))
                                                      (rule "true_left" (formula "34"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "18") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "18"))
                                                      (rule "andLeft" (formula "18"))
                                                      (rule "getOfSeqSingleton" (formula "19") (term "1,1,0"))
                                                      (rule "castDel" (formula "19") (term "2,1,1,0"))
                                                      (rule "castDel" (formula "19") (term "1,1,1,0"))
                                                      (rule "eqSymm" (formula "19") (term "1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
                                                      (rule "applyEq" (formula "19") (term "0,0,1,0,0,1,0,0") (ifseqformula "20"))
                                                       (builtin "One Step Simplification" (formula "19"))
                                                      (rule "mul_literals" (formula "19") (term "1,0,0,1,0,0"))
                                                      (rule "add_literals" (formula "19") (term "0,0,1,0,0"))
                                                      (rule "add_zero_left" (formula "19") (term "0,1,0,0"))
                                                      (rule "applyEq" (formula "18") (term "0,0") (ifseqformula "20"))
                                                       (builtin "One Step Simplification" (formula "18"))
                                                      (rule "true_left" (formula "18"))
                                                      (rule "applyEq" (formula "18") (term "0,1,1,0") (ifseqformula "19"))
                                                      (rule "getOfSeqSingleton" (formula "18") (term "1,1,0"))
                                                      (rule "castDel" (formula "18") (term "2,1,1,0"))
                                                      (rule "castDel" (formula "18") (term "1,1,1,0"))
                                                       (builtin "One Step Simplification" (formula "18"))
                                                      (rule "true_left" (formula "18"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "40") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "40"))
                                                      (rule "equal_literals" (formula "40") (term "0"))
                                                       (builtin "One Step Simplification" (formula "40"))
                                                      (rule "closeFalse" (formula "40"))
                                                   )
                                                )
                                             )
                                          )
                                          (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_ArrayList<<anonHeapFunction>> FALSE"
                                             (rule "applyEqReverse" (formula "26") (term "2,0,0") (ifseqformula "20"))
                                             (rule "applyEqReverse" (formula "21") (term "0") (ifseqformula "20"))
                                              (builtin "One Step Simplification" (formula "21"))
                                             (rule "true_left" (formula "21"))
                                             (rule "applyEqReverse" (formula "23") (term "1,0") (ifseqformula "20"))
                                             (rule "applyEqReverse" (formula "27") (term "2,0") (ifseqformula "20"))
                                             (rule "applyEqReverse" (formula "27") (term "2,0,0") (ifseqformula "20"))
                                             (rule "applyEqReverse" (formula "28") (term "0,1") (ifseqformula "20"))
                                             (rule "hideAuxiliaryEq" (formula "20"))
                                             (rule "replace_known_left" (formula "24") (term "0,0") (ifseqformula "17"))
                                              (builtin "One Step Simplification" (formula "24"))
                                             (rule "replace_known_right" (formula "26") (term "0,0") (ifseqformula "43"))
                                              (builtin "One Step Simplification" (formula "26"))
                                             (rule "applyEqReverse" (formula "27") (term "0") (ifseqformula "26"))
                                              (builtin "One Step Simplification" (formula "27"))
                                             (rule "true_left" (formula "27"))
                                             (rule "hideAuxiliaryEq" (formula "26"))
                                             (rule "ifthenelse_split" (formula "52") (term "0,0,1"))
                                             (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> TRUE"
                                                (rule "elementOfSubsetImpliesElementOfSuperset" (formula "1") (ifseqformula "34"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "52")))
                                                (rule "notLeft" (formula "1"))
                                                (rule "pullOutSelect" (formula "42") (term "0") (inst "selectSK=java_lang_Object_created__6"))
                                                (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")))
                                                (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "2,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "2,0"))
                                                (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "0,0,0,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "0,0,0,0"))
                                                (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "11"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "applyEqReverse" (formula "43") (term "0") (ifseqformula "1"))
                                                (rule "close" (formula "43") (ifseqformula "11"))
                                             )
                                             (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> FALSE"
                                                (rule "lenOfSeqConcat" (formula "53") (term "0,1"))
                                                 (builtin "One Step Simplification" (formula "53"))
                                                (rule "add_literals" (formula "53") (term "0,1"))
                                                (rule "qeq_literals" (formula "53") (term "1"))
                                                 (builtin "One Step Simplification" (formula "53"))
                                                (rule "equalityToSeqGetAndSeqLenLeft" (formula "32") (inst "iv=iv"))
                                                 (builtin "One Step Simplification" (formula "32"))
                                                (rule "andLeft" (formula "32"))
                                                (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0,0"))
                                                (rule "applyEq" (formula "33") (term "0,0,1,0,0,1,0,0") (ifseqformula "34"))
                                                 (builtin "One Step Simplification" (formula "33"))
                                                (rule "mul_literals" (formula "33") (term "1,0,0,1,0,0"))
                                                (rule "add_literals" (formula "33") (term "0,0,1,0,0"))
                                                (rule "applyEq" (formula "32") (term "0,0") (ifseqformula "34"))
                                                 (builtin "One Step Simplification" (formula "32"))
                                                (rule "true_left" (formula "32"))
                                                (rule "applyEq" (formula "32") (term "0,0,1,0") (ifseqformula "33"))
                                                 (builtin "One Step Simplification" (formula "32"))
                                                (rule "true_left" (formula "32"))
                                                (rule "equalityToSeqGetAndSeqLenLeft" (formula "18") (inst "iv=iv"))
                                                 (builtin "One Step Simplification" (formula "18"))
                                                (rule "andLeft" (formula "18"))
                                                (rule "getOfSeqSingleton" (formula "19") (term "1,1,0"))
                                                (rule "castDel" (formula "19") (term "2,1,1,0"))
                                                (rule "castDel" (formula "19") (term "1,1,1,0"))
                                                (rule "eqSymm" (formula "19") (term "1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
                                                (rule "applyEq" (formula "19") (term "0,1,1,0") (ifseqformula "20"))
                                                (rule "getOfSeqSingleton" (formula "19") (term "1,1,0"))
                                                (rule "castDel" (formula "19") (term "2,1,1,0"))
                                                (rule "castDel" (formula "19") (term "1,1,1,0"))
                                                 (builtin "One Step Simplification" (formula "19"))
                                                (rule "true_left" (formula "19"))
                                                (rule "applyEq" (formula "18") (term "0,0") (ifseqformula "19"))
                                                 (builtin "One Step Simplification" (formula "18"))
                                                (rule "true_left" (formula "18"))
                                                (rule "equalityToSeqGetAndSeqLenLeft" (formula "38") (inst "iv=iv"))
                                                 (builtin "One Step Simplification" (formula "38"))
                                                (rule "equal_literals" (formula "38") (term "0"))
                                                 (builtin "One Step Simplification" (formula "38"))
                                                (rule "closeFalse" (formula "38"))
                                             )
                                          )
                                       )
                                    )
                                 )
                                 (branch "(self_0, List::$seq) in self_0.footprint@anon_heap_ArrayList<<anonHeapFunction>> FALSE"
                                    (rule "eqSymm" (formula "17"))
                                    (rule "applyEqRigid" (formula "18") (term "1") (ifseqformula "17"))
                                    (rule "applyEq" (formula "26") (term "0,1") (ifseqformula "17"))
                                     (builtin "One Step Simplification" (formula "26"))
                                    (rule "applyEqRigid" (formula "55") (term "0,2,0,0,1") (ifseqformula "17"))
                                     (builtin "One Step Simplification" (formula "55"))
                                    (rule "applyEqRigid" (formula "25") (term "0,1") (ifseqformula "17"))
                                     (builtin "One Step Simplification" (formula "25"))
                                    (rule "applyEq" (formula "25") (term "2,0") (ifseqformula "17"))
                                    (rule "elementOfSubsetOfUnion2" (formula "25") (term "0,0") (ifseqformula "20") (ifseqformula "46"))
                                    (rule "elementOfIntersect" (formula "25") (term "1"))
                                     (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "54")))
                                    (rule "replaceKnownSelect_taclet0_4" (formula "25") (term "0,0,1,1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet0_5" (formula "25") (term "0,0,1,1"))
                                    (rule "replace_known_left" (formula "25") (term "0,1,1") (ifseqformula "9"))
                                     (builtin "One Step Simplification" (formula "25"))
                                    (rule "notLeft" (formula "25"))
                                    (rule "replace_known_right" (formula "25") (term "0,0") (ifseqformula "46"))
                                     (builtin "One Step Simplification" (formula "25"))
                                    (rule "eqSymm" (formula "25"))
                                    (rule "applyEq" (formula "56") (term "2,0,0,1") (ifseqformula "25"))
                                    (rule "applyEq" (formula "26") (term "1") (ifseqformula "25"))
                                    (rule "elementOfSubsetOfUnion2" (formula "46") (ifseqformula "20") (ifseqformula "47"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "47"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "notLeft" (formula "1"))
                                    (rule "elementOfIntersect" (formula "46"))
                                     (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "47")))
                                    (rule "false_right" (formula "46"))
                                    (rule "ifthenelse_split" (formula "43") (term "0"))
                                    (branch "(self_1, List::$footprint) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> TRUE"
                                       (rule "applyEqReverse" (formula "45") (term "0") (ifseqformula "44"))
                                       (rule "hideAuxiliaryEq" (formula "44"))
                                       (rule "elementOfSubsetImpliesElementOfSuperset" (formula "43") (ifseqformula "36"))
                                        (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "53")))
                                       (rule "replaceKnownSelect_taclet0000000_18" (formula "43") (term "0,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet0000000_21" (formula "43") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "43"))
                                       (rule "true_left" (formula "43"))
                                       (rule "ifthenelse_split" (formula "41") (term "0"))
                                       (branch "(self_1, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> TRUE"
                                          (rule "elementOfSubsetImpliesElementOfSuperset" (formula "41") (ifseqformula "36"))
                                           (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "54")))
                                          (rule "replaceKnownSelect_taclet0000000_18" (formula "41") (term "0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet0000000_21" (formula "41") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "41"))
                                          (rule "true_left" (formula "41"))
                                          (rule "ifthenelse_split" (formula "19") (term "0"))
                                          (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_ArrayList<<anonHeapFunction>> TRUE"
                                             (rule "applyEqReverse" (formula "28") (term "2,0") (ifseqformula "20"))
                                             (rule "applyEqReverse" (formula "24") (term "1,0") (ifseqformula "20"))
                                             (rule "applyEqReverse" (formula "29") (term "0,1") (ifseqformula "20"))
                                             (rule "applyEqReverse" (formula "28") (term "2,0,0") (ifseqformula "20"))
                                             (rule "applyEqReverse" (formula "48") (term "2") (ifseqformula "20"))
                                             (rule "applyEqReverse" (formula "21") (term "0") (ifseqformula "20"))
                                             (rule "hideAuxiliaryEq" (formula "20"))
                                             (rule "elementOfSubsetOfUnion2" (formula "47") (ifseqformula "20") (ifseqformula "48"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "48"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "notLeft" (formula "1"))
                                             (rule "elementOfSubsetImpliesElementOfSuperset" (formula "19") (ifseqformula "12"))
                                              (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "57")) (ifInst ""  (formula "56")))
                                             (rule "true_left" (formula "19"))
                                             (rule "elementOfIntersect" (formula "47"))
                                              (builtin "One Step Simplification" (formula "47") (ifInst ""  (formula "48")))
                                             (rule "false_right" (formula "47"))
                                             (rule "commuteUnion" (formula "28") (term "1"))
                                             (rule "ifthenelse_split" (formula "57") (term "0,0,1"))
                                             (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> TRUE"
                                                (rule "elementOfSubsetImpliesElementOfSuperset" (formula "1") (ifseqformula "37"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "57")))
                                                (rule "notLeft" (formula "1"))
                                                (rule "pullOutSelect" (formula "48") (term "0") (inst "selectSK=java_lang_Object_created__6"))
                                                (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "25"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "58")))
                                                (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "2,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "2,0"))
                                                (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "0,0,0,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "0,0,0,0"))
                                                (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "11"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "applyEqReverse" (formula "49") (term "0") (ifseqformula "1"))
                                                (rule "close" (formula "49") (ifseqformula "11"))
                                             )
                                             (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> FALSE"
                                                 (builtin "One Step Simplification" (formula "58"))
                                                (rule "qeq_literals" (formula "58") (term "1"))
                                                 (builtin "One Step Simplification" (formula "58"))
                                                (rule "false_right" (formula "58"))
                                                (rule "ifthenelse_split" (formula "27") (term "0"))
                                                (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_add<<anonHeapFunction>> TRUE"
                                                   (rule "applyEqReverse" (formula "29") (term "0") (ifseqformula "28"))
                                                   (rule "hideAuxiliaryEq" (formula "28"))
                                                   (rule "elementOfSubsetImpliesElementOfSuperset" (formula "27") (ifseqformula "20"))
                                                   (rule "elementOfUnion" (formula "27"))
                                                    (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "19")))
                                                   (rule "true_left" (formula "27"))
                                                   (rule "equalityToSeqGetAndSeqLenLeft" (formula "35") (inst "iv=iv"))
                                                    (builtin "One Step Simplification" (formula "35"))
                                                   (rule "andLeft" (formula "35"))
                                                   (rule "inEqSimp_ltToLeq" (formula "36") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "36") (term "0,0,0"))
                                                   (rule "applyEq" (formula "36") (term "0,0,1,0,0,1,0,0") (ifseqformula "37"))
                                                    (builtin "One Step Simplification" (formula "36"))
                                                   (rule "mul_literals" (formula "36") (term "1,0,0,1,0,0"))
                                                   (rule "add_literals" (formula "36") (term "0,0,1,0,0"))
                                                   (rule "applyEq" (formula "35") (term "0,0") (ifseqformula "37"))
                                                    (builtin "One Step Simplification" (formula "35"))
                                                   (rule "true_left" (formula "35"))
                                                   (rule "applyEq" (formula "35") (term "0,0,1,0") (ifseqformula "36"))
                                                    (builtin "One Step Simplification" (formula "35"))
                                                   (rule "true_left" (formula "35"))
                                                   (rule "equalityToSeqGetAndSeqLenLeft" (formula "43") (inst "iv=iv"))
                                                    (builtin "One Step Simplification" (formula "43"))
                                                   (rule "andLeft" (formula "43"))
                                                   (rule "getOfSeqSingleton" (formula "44") (term "1,1,0"))
                                                   (rule "castDel" (formula "44") (term "2,1,1,0"))
                                                   (rule "castDel" (formula "44") (term "1,1,1,0"))
                                                   (rule "eqSymm" (formula "44") (term "1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "44") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "44") (term "0,0,0"))
                                                   (rule "applyEq" (formula "43") (term "0,0") (ifseqformula "45"))
                                                    (builtin "One Step Simplification" (formula "43"))
                                                   (rule "true_left" (formula "43"))
                                                   (rule "applyEq" (formula "43") (term "0,0,1,0,0,1,0,0") (ifseqformula "44"))
                                                    (builtin "One Step Simplification" (formula "43"))
                                                   (rule "mul_literals" (formula "43") (term "1,0,0,1,0,0"))
                                                   (rule "add_literals" (formula "43") (term "0,0,1,0,0"))
                                                   (rule "add_zero_left" (formula "43") (term "0,1,0,0"))
                                                   (rule "applyEqRigid" (formula "43") (term "0,1,1,0") (ifseqformula "44"))
                                                   (rule "getOfSeqSingleton" (formula "43") (term "1,1,0"))
                                                   (rule "castDel" (formula "43") (term "1,1,1,0"))
                                                   (rule "castDel" (formula "43") (term "2,1,1,0"))
                                                    (builtin "One Step Simplification" (formula "43"))
                                                   (rule "true_left" (formula "43"))
                                                   (rule "equalityToSeqGetAndSeqLenLeft" (formula "17") (inst "iv=iv"))
                                                    (builtin "One Step Simplification" (formula "17"))
                                                   (rule "equal_literals" (formula "17") (term "0"))
                                                    (builtin "One Step Simplification" (formula "17"))
                                                   (rule "closeFalse" (formula "17"))
                                                )
                                                (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_add<<anonHeapFunction>> FALSE"
                                                   (rule "applyEqReverse" (formula "28") (term "0") (ifseqformula "27"))
                                                    (builtin "One Step Simplification" (formula "28"))
                                                   (rule "true_left" (formula "28"))
                                                   (rule "hideAuxiliaryEq" (formula "27"))
                                                   (rule "equalityToSeqGetAndSeqLenLeft" (formula "33") (inst "iv=iv"))
                                                    (builtin "One Step Simplification" (formula "33"))
                                                   (rule "andLeft" (formula "33"))
                                                   (rule "inEqSimp_ltToLeq" (formula "34") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "34") (term "0,0,0"))
                                                   (rule "applyEq" (formula "34") (term "0,0,1,0,0,1,0,0") (ifseqformula "35"))
                                                    (builtin "One Step Simplification" (formula "34"))
                                                   (rule "mul_literals" (formula "34") (term "1,0,0,1,0,0"))
                                                   (rule "add_zero_right" (formula "34") (term "0,0,1,0,0"))
                                                   (rule "applyEq" (formula "33") (term "0,0") (ifseqformula "35"))
                                                    (builtin "One Step Simplification" (formula "33"))
                                                   (rule "true_left" (formula "33"))
                                                   (rule "applyEq" (formula "33") (term "0,0,1,0") (ifseqformula "34"))
                                                    (builtin "One Step Simplification" (formula "33"))
                                                   (rule "true_left" (formula "33"))
                                                   (rule "equalityToSeqGetAndSeqLenLeft" (formula "41") (inst "iv=iv"))
                                                    (builtin "One Step Simplification" (formula "41"))
                                                   (rule "andLeft" (formula "41"))
                                                   (rule "getOfSeqSingleton" (formula "42") (term "1,1,0"))
                                                   (rule "castDel" (formula "42") (term "2,1,1,0"))
                                                   (rule "castDel" (formula "42") (term "1,1,1,0"))
                                                   (rule "eqSymm" (formula "42") (term "1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "42") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "42") (term "0,0,0"))
                                                   (rule "applyEqRigid" (formula "42") (term "0,1,1,0") (ifseqformula "43"))
                                                   (rule "getOfSeqSingleton" (formula "42") (term "1,1,0"))
                                                   (rule "castDel" (formula "42") (term "2,1,1,0"))
                                                   (rule "castDel" (formula "42") (term "1,1,1,0"))
                                                    (builtin "One Step Simplification" (formula "42"))
                                                   (rule "true_left" (formula "42"))
                                                   (rule "applyEq" (formula "41") (term "0,0") (ifseqformula "42"))
                                                    (builtin "One Step Simplification" (formula "41"))
                                                   (rule "true_left" (formula "41"))
                                                   (rule "equalityToSeqGetAndSeqLenLeft" (formula "17") (inst "iv=iv"))
                                                    (builtin "One Step Simplification" (formula "17"))
                                                   (rule "equal_literals" (formula "17") (term "0"))
                                                    (builtin "One Step Simplification" (formula "17"))
                                                   (rule "closeFalse" (formula "17"))
                                                )
                                             )
                                          )
                                          (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_ArrayList<<anonHeapFunction>> FALSE"
                                             (rule "applyEqReverse" (formula "23") (term "1,0") (ifseqformula "19"))
                                             (rule "applyEqReverse" (formula "27") (term "2,0") (ifseqformula "19"))
                                             (rule "applyEqReverse" (formula "28") (term "0,1") (ifseqformula "19"))
                                             (rule "applyEqReverse" (formula "27") (term "2,0,0") (ifseqformula "19"))
                                             (rule "applyEqReverse" (formula "48") (term "2") (ifseqformula "19"))
                                             (rule "applyEqReverse" (formula "20") (term "0") (ifseqformula "19"))
                                              (builtin "One Step Simplification" (formula "20"))
                                             (rule "true_left" (formula "20"))
                                             (rule "hideAuxiliaryEq" (formula "19"))
                                             (rule "replace_known_right" (formula "25") (term "0,0") (ifseqformula "45"))
                                              (builtin "One Step Simplification" (formula "25"))
                                             (rule "applyEqReverse" (formula "26") (term "0") (ifseqformula "25"))
                                              (builtin "One Step Simplification" (formula "26"))
                                             (rule "true_left" (formula "26"))
                                             (rule "hideAuxiliaryEq" (formula "25"))
                                             (rule "ifthenelse_split" (formula "53") (term "0,0,1"))
                                             (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> TRUE"
                                                (rule "elementOfSubsetImpliesElementOfSuperset" (formula "1") (ifseqformula "33"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")))
                                                (rule "notLeft" (formula "1"))
                                                (rule "pullOutSelect" (formula "44") (term "0") (inst "selectSK=java_lang_Object_created__6"))
                                                (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "54")))
                                                (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "2,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "2,0"))
                                                (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "0,0,0,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "0,0,0,0"))
                                                (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "11"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "applyEqReverse" (formula "45") (term "0") (ifseqformula "1"))
                                                (rule "close" (formula "45") (ifseqformula "11"))
                                             )
                                             (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> FALSE"
                                                 (builtin "One Step Simplification" (formula "54"))
                                                (rule "qeq_literals" (formula "54") (term "1"))
                                                 (builtin "One Step Simplification" (formula "54"))
                                                (rule "false_right" (formula "54"))
                                                (rule "equalityToSeqGetAndSeqLenLeft" (formula "31") (inst "iv=iv"))
                                                 (builtin "One Step Simplification" (formula "31"))
                                                (rule "andLeft" (formula "31"))
                                                (rule "inEqSimp_ltToLeq" (formula "32") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "32") (term "0,0,0"))
                                                (rule "applyEq" (formula "32") (term "0,0,1,0,0,1,0,0") (ifseqformula "33"))
                                                 (builtin "One Step Simplification" (formula "32"))
                                                (rule "mul_literals" (formula "32") (term "1,0,0,1,0,0"))
                                                (rule "add_literals" (formula "32") (term "0,0,1,0,0"))
                                                (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "33"))
                                                 (builtin "One Step Simplification" (formula "31"))
                                                (rule "true_left" (formula "31"))
                                                (rule "applyEq" (formula "31") (term "0,0,1,0") (ifseqformula "32"))
                                                 (builtin "One Step Simplification" (formula "31"))
                                                (rule "true_left" (formula "31"))
                                                (rule "equalityToSeqGetAndSeqLenLeft" (formula "39") (inst "iv=iv"))
                                                 (builtin "One Step Simplification" (formula "39"))
                                                (rule "andLeft" (formula "39"))
                                                (rule "getOfSeqSingleton" (formula "40") (term "1,1,0"))
                                                (rule "castDel" (formula "40") (term "2,1,1,0"))
                                                (rule "castDel" (formula "40") (term "1,1,1,0"))
                                                (rule "eqSymm" (formula "40") (term "1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "40") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "40") (term "0,0,0"))
                                                (rule "applyEqRigid" (formula "40") (term "0,1,1,0") (ifseqformula "41"))
                                                (rule "getOfSeqSingleton" (formula "40") (term "1,1,0"))
                                                (rule "castDel" (formula "40") (term "1,1,1,0"))
                                                (rule "castDel" (formula "40") (term "2,1,1,0"))
                                                 (builtin "One Step Simplification" (formula "40"))
                                                (rule "true_left" (formula "40"))
                                                (rule "applyEq" (formula "39") (term "0,0") (ifseqformula "40"))
                                                 (builtin "One Step Simplification" (formula "39"))
                                                (rule "true_left" (formula "39"))
                                                (rule "equalityToSeqGetAndSeqLenLeft" (formula "17") (inst "iv=iv"))
                                                 (builtin "One Step Simplification" (formula "17"))
                                                (rule "equal_literals" (formula "17") (term "0"))
                                                 (builtin "One Step Simplification" (formula "17"))
                                                (rule "closeFalse" (formula "17"))
                                             )
                                          )
                                       )
                                       (branch "(self_1, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> FALSE"
                                          (rule "eqSymm" (formula "41"))
                                          (rule "applyEq" (formula "42") (term "1") (ifseqformula "41"))
                                          (rule "ifthenelse_split" (formula "19") (term "0"))
                                          (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_ArrayList<<anonHeapFunction>> TRUE"
                                             (rule "applyEqReverse" (formula "21") (term "0") (ifseqformula "20"))
                                             (rule "applyEqReverse" (formula "28") (term "2,0") (ifseqformula "20"))
                                             (rule "applyEqReverse" (formula "28") (term "2,0,0") (ifseqformula "20"))
                                             (rule "applyEqReverse" (formula "29") (term "0,1") (ifseqformula "20"))
                                             (rule "applyEqReverse" (formula "48") (term "2") (ifseqformula "20"))
                                             (rule "applyEqReverse" (formula "24") (term "1,0") (ifseqformula "20"))
                                             (rule "hideAuxiliaryEq" (formula "20"))
                                             (rule "elementOfSubsetImpliesElementOfSuperset" (formula "19") (ifseqformula "12"))
                                              (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "56")) (ifInst ""  (formula "55")))
                                             (rule "true_left" (formula "19"))
                                             (rule "elementOfSubsetOfUnion2" (formula "47") (ifseqformula "20") (ifseqformula "48"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "48"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "notLeft" (formula "1"))
                                             (rule "elementOfIntersect" (formula "46"))
                                              (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "48")))
                                             (rule "false_right" (formula "46"))
                                             (rule "commuteUnion" (formula "28") (term "1"))
                                             (rule "ifthenelse_split" (formula "57") (term "0,0,1"))
                                             (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> TRUE"
                                                (rule "elementOfSubsetImpliesElementOfSuperset" (formula "1") (ifseqformula "37"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "57")))
                                                (rule "notLeft" (formula "1"))
                                                (rule "pullOutSelect" (formula "47") (term "0") (inst "selectSK=java_lang_Object_created__6"))
                                                (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "25"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "58")))
                                                (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "2,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "2,0"))
                                                (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "0,0,0,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "0,0,0,0"))
                                                (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "11"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "applyEqReverse" (formula "48") (term "0") (ifseqformula "1"))
                                                (rule "close" (formula "48") (ifseqformula "11"))
                                             )
                                             (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> FALSE"
                                                 (builtin "One Step Simplification" (formula "58"))
                                                (rule "qeq_literals" (formula "58") (term "1"))
                                                 (builtin "One Step Simplification" (formula "58"))
                                                (rule "false_right" (formula "58"))
                                                (rule "ifthenelse_split" (formula "27") (term "0"))
                                                (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_add<<anonHeapFunction>> TRUE"
                                                   (rule "applyEqReverse" (formula "29") (term "0") (ifseqformula "28"))
                                                   (rule "hideAuxiliaryEq" (formula "28"))
                                                   (rule "elementOfSubsetImpliesElementOfSuperset" (formula "27") (ifseqformula "20"))
                                                   (rule "elementOfUnion" (formula "27"))
                                                    (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "19")))
                                                   (rule "true_left" (formula "27"))
                                                   (rule "equalityToSeqGetAndSeqLenLeft" (formula "35") (inst "iv=iv"))
                                                    (builtin "One Step Simplification" (formula "35"))
                                                   (rule "andLeft" (formula "35"))
                                                   (rule "inEqSimp_ltToLeq" (formula "36") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "36") (term "0,0,0"))
                                                   (rule "applyEq" (formula "36") (term "0,0,1,0") (ifseqformula "37"))
                                                    (builtin "One Step Simplification" (formula "36"))
                                                   (rule "true_left" (formula "36"))
                                                   (rule "applyEq" (formula "35") (term "0,0") (ifseqformula "36"))
                                                    (builtin "One Step Simplification" (formula "35"))
                                                   (rule "true_left" (formula "35"))
                                                   (rule "equalityToSeqGetAndSeqLenLeft" (formula "17") (inst "iv=iv"))
                                                    (builtin "One Step Simplification" (formula "17"))
                                                   (rule "equal_literals" (formula "17") (term "0"))
                                                    (builtin "One Step Simplification" (formula "17"))
                                                   (rule "closeFalse" (formula "17"))
                                                )
                                                (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_add<<anonHeapFunction>> FALSE"
                                                   (rule "applyEqReverse" (formula "28") (term "0") (ifseqformula "27"))
                                                    (builtin "One Step Simplification" (formula "28"))
                                                   (rule "true_left" (formula "28"))
                                                   (rule "hideAuxiliaryEq" (formula "27"))
                                                   (rule "equalityToSeqGetAndSeqLenLeft" (formula "33") (inst "iv=iv"))
                                                    (builtin "One Step Simplification" (formula "33"))
                                                   (rule "andLeft" (formula "33"))
                                                   (rule "inEqSimp_ltToLeq" (formula "34") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "34") (term "0,0,0"))
                                                   (rule "applyEq" (formula "33") (term "0,0") (ifseqformula "35"))
                                                    (builtin "One Step Simplification" (formula "33"))
                                                   (rule "true_left" (formula "33"))
                                                   (rule "applyEq" (formula "33") (term "0,0,1,0") (ifseqformula "34"))
                                                    (builtin "One Step Simplification" (formula "33"))
                                                   (rule "true_left" (formula "33"))
                                                   (rule "equalityToSeqGetAndSeqLenLeft" (formula "17") (inst "iv=iv"))
                                                    (builtin "One Step Simplification" (formula "17"))
                                                   (rule "equal_literals" (formula "17") (term "0"))
                                                    (builtin "One Step Simplification" (formula "17"))
                                                   (rule "closeFalse" (formula "17"))
                                                )
                                             )
                                          )
                                          (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_ArrayList<<anonHeapFunction>> FALSE"
                                             (rule "applyEqReverse" (formula "20") (term "0") (ifseqformula "19"))
                                              (builtin "One Step Simplification" (formula "20"))
                                             (rule "true_left" (formula "20"))
                                             (rule "applyEqReverse" (formula "47") (term "2") (ifseqformula "19"))
                                             (rule "applyEqReverse" (formula "26") (term "2,0,0") (ifseqformula "19"))
                                             (rule "applyEqReverse" (formula "27") (term "0,1") (ifseqformula "19"))
                                             (rule "applyEqReverse" (formula "22") (term "1,0") (ifseqformula "19"))
                                             (rule "applyEqReverse" (formula "26") (term "2,0") (ifseqformula "19"))
                                             (rule "hideAuxiliaryEq" (formula "19"))
                                             (rule "replace_known_right" (formula "25") (term "0,0") (ifseqformula "44"))
                                              (builtin "One Step Simplification" (formula "25"))
                                             (rule "applyEqReverse" (formula "26") (term "0") (ifseqformula "25"))
                                              (builtin "One Step Simplification" (formula "26"))
                                             (rule "true_left" (formula "26"))
                                             (rule "hideAuxiliaryEq" (formula "25"))
                                             (rule "ifthenelse_split" (formula "53") (term "0,0,1"))
                                             (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> TRUE"
                                                (rule "elementOfSubsetImpliesElementOfSuperset" (formula "1") (ifseqformula "33"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")))
                                                (rule "notLeft" (formula "1"))
                                                (rule "pullOutSelect" (formula "43") (term "0") (inst "selectSK=java_lang_Object_created__6"))
                                                (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "54")))
                                                (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "2,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "2,0"))
                                                (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "0,0,0,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "0,0,0,0"))
                                                (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "11"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "applyEqReverse" (formula "44") (term "0") (ifseqformula "1"))
                                                (rule "close" (formula "44") (ifseqformula "11"))
                                             )
                                             (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> FALSE"
                                                 (builtin "One Step Simplification" (formula "54"))
                                                (rule "qeq_literals" (formula "54") (term "1"))
                                                 (builtin "One Step Simplification" (formula "54"))
                                                (rule "false_right" (formula "54"))
                                                (rule "equalityToSeqGetAndSeqLenLeft" (formula "31") (inst "iv=iv"))
                                                 (builtin "One Step Simplification" (formula "31"))
                                                (rule "andLeft" (formula "31"))
                                                (rule "inEqSimp_ltToLeq" (formula "32") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "32") (term "0,0,0"))
                                                (rule "applyEq" (formula "32") (term "0,0,1,0") (ifseqformula "33"))
                                                 (builtin "One Step Simplification" (formula "32"))
                                                (rule "true_left" (formula "32"))
                                                (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "32"))
                                                 (builtin "One Step Simplification" (formula "31"))
                                                (rule "true_left" (formula "31"))
                                                (rule "equalityToSeqGetAndSeqLenLeft" (formula "17") (inst "iv=iv"))
                                                 (builtin "One Step Simplification" (formula "17"))
                                                (rule "equal_literals" (formula "17") (term "0"))
                                                 (builtin "One Step Simplification" (formula "17"))
                                                (rule "closeFalse" (formula "17"))
                                             )
                                          )
                                       )
                                    )
                                    (branch "(self_1, List::$footprint) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> FALSE"
                                       (rule "applyEqReverse" (formula "44") (term "0") (ifseqformula "43"))
                                        (builtin "One Step Simplification" (formula "44"))
                                       (rule "true_left" (formula "44"))
                                       (rule "hideAuxiliaryEq" (formula "43"))
                                       (rule "ifthenelse_split" (formula "41") (term "0"))
                                       (branch "(self_1, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> TRUE"
                                          (rule "elementOfSubsetImpliesElementOfSuperset" (formula "41") (ifseqformula "36"))
                                           (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "53")))
                                          (rule "replaceKnownSelect_taclet0000000_18" (formula "41") (term "0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet0000000_21" (formula "41") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "41"))
                                          (rule "true_left" (formula "41"))
                                          (rule "ifthenelse_split" (formula "19") (term "0"))
                                          (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_ArrayList<<anonHeapFunction>> TRUE"
                                             (rule "applyEqReverse" (formula "47") (term "2") (ifseqformula "20"))
                                             (rule "applyEqReverse" (formula "28") (term "2,0") (ifseqformula "20"))
                                             (rule "applyEqReverse" (formula "29") (term "0,1") (ifseqformula "20"))
                                             (rule "applyEqReverse" (formula "21") (term "0") (ifseqformula "20"))
                                             (rule "applyEqReverse" (formula "28") (term "2,0,0") (ifseqformula "20"))
                                             (rule "applyEqReverse" (formula "24") (term "1,0") (ifseqformula "20"))
                                             (rule "hideAuxiliaryEq" (formula "20"))
                                             (rule "elementOfSubsetOfUnion2" (formula "46") (ifseqformula "20") (ifseqformula "47"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "47"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "notLeft" (formula "1"))
                                             (rule "elementOfSubsetImpliesElementOfSuperset" (formula "19") (ifseqformula "12"))
                                              (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "56")) (ifInst ""  (formula "55")))
                                             (rule "true_left" (formula "19"))
                                             (rule "elementOfIntersect" (formula "45"))
                                              (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "47")))
                                             (rule "false_right" (formula "45"))
                                             (rule "commuteUnion" (formula "28") (term "1"))
                                             (rule "ifthenelse_split" (formula "56") (term "0,0,1"))
                                             (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> TRUE"
                                                (rule "elementOfSubsetImpliesElementOfSuperset" (formula "1") (ifseqformula "37"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "56")))
                                                (rule "notLeft" (formula "1"))
                                                (rule "pullOutSelect" (formula "46") (term "0") (inst "selectSK=java_lang_Object_created__6"))
                                                (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "25"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "57")))
                                                (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "2,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "2,0"))
                                                (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "0,0,0,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "0,0,0,0"))
                                                (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "11"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "applyEqReverse" (formula "47") (term "0") (ifseqformula "1"))
                                                (rule "close" (formula "47") (ifseqformula "11"))
                                             )
                                             (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> FALSE"
                                                 (builtin "One Step Simplification" (formula "57"))
                                                (rule "qeq_literals" (formula "57") (term "1"))
                                                 (builtin "One Step Simplification" (formula "57"))
                                                (rule "false_right" (formula "57"))
                                                (rule "ifthenelse_split" (formula "27") (term "0"))
                                                (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_add<<anonHeapFunction>> TRUE"
                                                   (rule "applyEqReverse" (formula "29") (term "0") (ifseqformula "28"))
                                                   (rule "hideAuxiliaryEq" (formula "28"))
                                                   (rule "elementOfSubsetImpliesElementOfSuperset" (formula "27") (ifseqformula "20"))
                                                   (rule "elementOfUnion" (formula "27"))
                                                    (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "19")))
                                                   (rule "true_left" (formula "27"))
                                                   (rule "equalityToSeqGetAndSeqLenLeft" (formula "43") (inst "iv=iv"))
                                                    (builtin "One Step Simplification" (formula "43"))
                                                   (rule "andLeft" (formula "43"))
                                                   (rule "getOfSeqSingleton" (formula "44") (term "1,1,0"))
                                                   (rule "castDel" (formula "44") (term "2,1,1,0"))
                                                   (rule "castDel" (formula "44") (term "1,1,1,0"))
                                                   (rule "eqSymm" (formula "44") (term "1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "44") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "44") (term "0,0,0"))
                                                   (rule "applyEq" (formula "43") (term "0,0") (ifseqformula "45"))
                                                    (builtin "One Step Simplification" (formula "43"))
                                                   (rule "true_left" (formula "43"))
                                                   (rule "applyEq" (formula "43") (term "0,0,1,0,0,1,0,0") (ifseqformula "44"))
                                                    (builtin "One Step Simplification" (formula "43"))
                                                   (rule "mul_literals" (formula "43") (term "1,0,0,1,0,0"))
                                                   (rule "add_literals" (formula "43") (term "0,0,1,0,0"))
                                                   (rule "add_zero_left" (formula "43") (term "0,1,0,0"))
                                                   (rule "applyEqRigid" (formula "43") (term "0,1,1,0") (ifseqformula "44"))
                                                   (rule "getOfSeqSingleton" (formula "43") (term "1,1,0"))
                                                   (rule "castDel" (formula "43") (term "1,1,1,0"))
                                                   (rule "castDel" (formula "43") (term "2,1,1,0"))
                                                    (builtin "One Step Simplification" (formula "43"))
                                                   (rule "true_left" (formula "43"))
                                                   (rule "equalityToSeqGetAndSeqLenLeft" (formula "35") (inst "iv=iv"))
                                                    (builtin "One Step Simplification" (formula "35"))
                                                   (rule "andLeft" (formula "35"))
                                                   (rule "inEqSimp_ltToLeq" (formula "36") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "36") (term "0,0,0"))
                                                   (rule "applyEq" (formula "36") (term "0,0,1,0,0,1,0,0") (ifseqformula "37"))
                                                    (builtin "One Step Simplification" (formula "36"))
                                                   (rule "mul_literals" (formula "36") (term "1,0,0,1,0,0"))
                                                   (rule "add_zero_right" (formula "36") (term "0,0,1,0,0"))
                                                   (rule "applyEq" (formula "35") (term "0,0") (ifseqformula "37"))
                                                    (builtin "One Step Simplification" (formula "35"))
                                                   (rule "true_left" (formula "35"))
                                                   (rule "applyEq" (formula "35") (term "0,0,1,0") (ifseqformula "36"))
                                                    (builtin "One Step Simplification" (formula "35"))
                                                   (rule "true_left" (formula "35"))
                                                   (rule "equalityToSeqGetAndSeqLenLeft" (formula "17") (inst "iv=iv"))
                                                    (builtin "One Step Simplification" (formula "17"))
                                                   (rule "equal_literals" (formula "17") (term "0"))
                                                    (builtin "One Step Simplification" (formula "17"))
                                                   (rule "closeFalse" (formula "17"))
                                                )
                                                (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_add<<anonHeapFunction>> FALSE"
                                                   (rule "applyEqReverse" (formula "28") (term "0") (ifseqformula "27"))
                                                    (builtin "One Step Simplification" (formula "28"))
                                                   (rule "true_left" (formula "28"))
                                                   (rule "hideAuxiliaryEq" (formula "27"))
                                                   (rule "equalityToSeqGetAndSeqLenLeft" (formula "41") (inst "iv=iv"))
                                                    (builtin "One Step Simplification" (formula "41"))
                                                   (rule "andLeft" (formula "41"))
                                                   (rule "getOfSeqSingleton" (formula "42") (term "1,1,0"))
                                                   (rule "castDel" (formula "42") (term "1,1,1,0"))
                                                   (rule "castDel" (formula "42") (term "2,1,1,0"))
                                                   (rule "eqSymm" (formula "42") (term "1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "42") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "42") (term "0,0,0"))
                                                   (rule "applyEqRigid" (formula "42") (term "0,0,1,0,0,1,0,0") (ifseqformula "43"))
                                                    (builtin "One Step Simplification" (formula "42"))
                                                   (rule "mul_literals" (formula "42") (term "1,0,0,1,0,0"))
                                                   (rule "add_literals" (formula "42") (term "0,0,1,0,0"))
                                                   (rule "add_zero_left" (formula "42") (term "0,1,0,0"))
                                                   (rule "applyEqRigid" (formula "41") (term "0,0") (ifseqformula "43"))
                                                    (builtin "One Step Simplification" (formula "41"))
                                                   (rule "true_left" (formula "41"))
                                                   (rule "applyEqRigid" (formula "41") (term "0,1,1,0") (ifseqformula "42"))
                                                   (rule "getOfSeqSingleton" (formula "41") (term "1,1,0"))
                                                   (rule "castDel" (formula "41") (term "2,1,1,0"))
                                                   (rule "castDel" (formula "41") (term "1,1,1,0"))
                                                    (builtin "One Step Simplification" (formula "41"))
                                                   (rule "true_left" (formula "41"))
                                                   (rule "equalityToSeqGetAndSeqLenLeft" (formula "33") (inst "iv=iv"))
                                                    (builtin "One Step Simplification" (formula "33"))
                                                   (rule "andLeft" (formula "33"))
                                                   (rule "inEqSimp_ltToLeq" (formula "34") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "34") (term "0,0,0"))
                                                   (rule "applyEq" (formula "34") (term "0,0,1,0,0,1,0,0") (ifseqformula "35"))
                                                    (builtin "One Step Simplification" (formula "34"))
                                                   (rule "mul_literals" (formula "34") (term "1,0,0,1,0,0"))
                                                   (rule "add_zero_right" (formula "34") (term "0,0,1,0,0"))
                                                   (rule "applyEq" (formula "33") (term "0,0") (ifseqformula "35"))
                                                    (builtin "One Step Simplification" (formula "33"))
                                                   (rule "true_left" (formula "33"))
                                                   (rule "applyEq" (formula "33") (term "0,0,1,0") (ifseqformula "34"))
                                                    (builtin "One Step Simplification" (formula "33"))
                                                   (rule "true_left" (formula "33"))
                                                   (rule "equalityToSeqGetAndSeqLenLeft" (formula "17") (inst "iv=iv"))
                                                    (builtin "One Step Simplification" (formula "17"))
                                                   (rule "equal_literals" (formula "17") (term "0"))
                                                    (builtin "One Step Simplification" (formula "17"))
                                                   (rule "closeFalse" (formula "17"))
                                                )
                                             )
                                          )
                                          (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_ArrayList<<anonHeapFunction>> FALSE"
                                             (rule "applyEqReverse" (formula "27") (term "2,0,0") (ifseqformula "19"))
                                             (rule "applyEqReverse" (formula "23") (term "1,0") (ifseqformula "19"))
                                             (rule "applyEqReverse" (formula "27") (term "2,0") (ifseqformula "19"))
                                             (rule "applyEqReverse" (formula "20") (term "0") (ifseqformula "19"))
                                              (builtin "One Step Simplification" (formula "20"))
                                             (rule "true_left" (formula "20"))
                                             (rule "applyEqReverse" (formula "27") (term "0,1") (ifseqformula "19"))
                                             (rule "applyEqReverse" (formula "46") (term "2") (ifseqformula "19"))
                                             (rule "hideAuxiliaryEq" (formula "19"))
                                             (rule "replace_known_right" (formula "25") (term "0,0") (ifseqformula "43"))
                                              (builtin "One Step Simplification" (formula "25"))
                                             (rule "applyEqReverse" (formula "26") (term "0") (ifseqformula "25"))
                                              (builtin "One Step Simplification" (formula "26"))
                                             (rule "true_left" (formula "26"))
                                             (rule "hideAuxiliaryEq" (formula "25"))
                                             (rule "ifthenelse_split" (formula "52") (term "0,0,1"))
                                             (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> TRUE"
                                                (rule "elementOfSubsetImpliesElementOfSuperset" (formula "1") (ifseqformula "33"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "52")))
                                                (rule "notLeft" (formula "1"))
                                                (rule "pullOutSelect" (formula "42") (term "0") (inst "selectSK=java_lang_Object_created__6"))
                                                (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")))
                                                (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "2,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "2,0"))
                                                (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "0,0,0,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "0,0,0,0"))
                                                (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "11"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "applyEqReverse" (formula "43") (term "0") (ifseqformula "1"))
                                                (rule "close" (formula "43") (ifseqformula "11"))
                                             )
                                             (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> FALSE"
                                                 (builtin "One Step Simplification" (formula "53"))
                                                (rule "qeq_literals" (formula "53") (term "1"))
                                                 (builtin "One Step Simplification" (formula "53"))
                                                (rule "false_right" (formula "53"))
                                                (rule "equalityToSeqGetAndSeqLenLeft" (formula "31") (inst "iv=iv"))
                                                 (builtin "One Step Simplification" (formula "31"))
                                                (rule "andLeft" (formula "31"))
                                                (rule "inEqSimp_ltToLeq" (formula "32") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "32") (term "0,0,0"))
                                                (rule "applyEq" (formula "32") (term "0,0,1,0") (ifseqformula "33"))
                                                 (builtin "One Step Simplification" (formula "32"))
                                                (rule "true_left" (formula "32"))
                                                (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "32"))
                                                 (builtin "One Step Simplification" (formula "31"))
                                                (rule "true_left" (formula "31"))
                                                (rule "equalityToSeqGetAndSeqLenLeft" (formula "39") (inst "iv=iv"))
                                                 (builtin "One Step Simplification" (formula "39"))
                                                (rule "andLeft" (formula "39"))
                                                (rule "getOfSeqSingleton" (formula "40") (term "1,1,0"))
                                                (rule "castDel" (formula "40") (term "1,1,1,0"))
                                                (rule "castDel" (formula "40") (term "2,1,1,0"))
                                                (rule "eqSymm" (formula "40") (term "1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "40") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "40") (term "0,0,0"))
                                                (rule "applyEqRigid" (formula "40") (term "0,0,1,0,0,1,0,0") (ifseqformula "41"))
                                                 (builtin "One Step Simplification" (formula "40"))
                                                (rule "mul_literals" (formula "40") (term "1,0,0,1,0,0"))
                                                (rule "add_literals" (formula "40") (term "0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "40") (term "0,1,0,0"))
                                                (rule "applyEqRigid" (formula "39") (term "0,0") (ifseqformula "41"))
                                                 (builtin "One Step Simplification" (formula "39"))
                                                (rule "true_left" (formula "39"))
                                                (rule "applyEq" (formula "39") (term "0,1,1,0") (ifseqformula "40"))
                                                (rule "getOfSeqSingleton" (formula "39") (term "1,1,0"))
                                                (rule "castDel" (formula "39") (term "1,1,1,0"))
                                                (rule "castDel" (formula "39") (term "2,1,1,0"))
                                                 (builtin "One Step Simplification" (formula "39"))
                                                (rule "true_left" (formula "39"))
                                                (rule "equalityToSeqGetAndSeqLenLeft" (formula "17") (inst "iv=iv"))
                                                 (builtin "One Step Simplification" (formula "17"))
                                                (rule "equal_literals" (formula "17") (term "0"))
                                                 (builtin "One Step Simplification" (formula "17"))
                                                (rule "closeFalse" (formula "17"))
                                             )
                                          )
                                       )
                                       (branch "(self_1, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> FALSE"
                                          (rule "eqSymm" (formula "41"))
                                          (rule "applyEqRigid" (formula "42") (term "1") (ifseqformula "41"))
                                          (rule "ifthenelse_split" (formula "19") (term "0"))
                                          (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_ArrayList<<anonHeapFunction>> TRUE"
                                             (rule "applyEqReverse" (formula "47") (term "2") (ifseqformula "20"))
                                             (rule "applyEqReverse" (formula "29") (term "0,1") (ifseqformula "20"))
                                             (rule "applyEqReverse" (formula "28") (term "2,0") (ifseqformula "20"))
                                             (rule "applyEqReverse" (formula "21") (term "0") (ifseqformula "20"))
                                             (rule "applyEqReverse" (formula "24") (term "1,0") (ifseqformula "20"))
                                             (rule "applyEqReverse" (formula "28") (term "2,0,0") (ifseqformula "20"))
                                             (rule "hideAuxiliaryEq" (formula "20"))
                                             (rule "elementOfSubsetImpliesElementOfSuperset" (formula "19") (ifseqformula "12"))
                                              (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "55")) (ifInst ""  (formula "54")))
                                             (rule "true_left" (formula "19"))
                                             (rule "elementOfSubsetOfUnion2" (formula "46") (ifseqformula "20") (ifseqformula "47"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "47"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "notLeft" (formula "1"))
                                             (rule "elementOfIntersect" (formula "44"))
                                              (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "47")))
                                             (rule "false_right" (formula "44"))
                                             (rule "commuteUnion" (formula "28") (term "1"))
                                             (rule "ifthenelse_split" (formula "56") (term "0,0,1"))
                                             (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> TRUE"
                                                (rule "elementOfSubsetImpliesElementOfSuperset" (formula "1") (ifseqformula "37"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "56")))
                                                (rule "notLeft" (formula "1"))
                                                (rule "pullOutSelect" (formula "45") (term "0") (inst "selectSK=java_lang_Object_created__6"))
                                                (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "25"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "57")))
                                                (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "2,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "2,0"))
                                                (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "0,0,0,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "0,0,0,0"))
                                                (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "11"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "applyEqReverse" (formula "46") (term "0") (ifseqformula "1"))
                                                (rule "close" (formula "46") (ifseqformula "11"))
                                             )
                                             (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> FALSE"
                                                 (builtin "One Step Simplification" (formula "57"))
                                                (rule "qeq_literals" (formula "57") (term "1"))
                                                 (builtin "One Step Simplification" (formula "57"))
                                                (rule "false_right" (formula "57"))
                                                (rule "ifthenelse_split" (formula "27") (term "0"))
                                                (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_add<<anonHeapFunction>> TRUE"
                                                   (rule "applyEqReverse" (formula "29") (term "0") (ifseqformula "28"))
                                                   (rule "hideAuxiliaryEq" (formula "28"))
                                                   (rule "elementOfSubsetImpliesElementOfSuperset" (formula "27") (ifseqformula "20"))
                                                   (rule "elementOfUnion" (formula "27"))
                                                    (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "19")))
                                                   (rule "true_left" (formula "27"))
                                                   (rule "equalityToSeqGetAndSeqLenLeft" (formula "35") (inst "iv=iv"))
                                                    (builtin "One Step Simplification" (formula "35"))
                                                   (rule "andLeft" (formula "35"))
                                                   (rule "inEqSimp_ltToLeq" (formula "36") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "36") (term "0,0,0"))
                                                   (rule "applyEq" (formula "35") (term "0,0") (ifseqformula "37"))
                                                    (builtin "One Step Simplification" (formula "35"))
                                                   (rule "true_left" (formula "35"))
                                                   (rule "applyEq" (formula "35") (term "0,0,1,0") (ifseqformula "36"))
                                                    (builtin "One Step Simplification" (formula "35"))
                                                   (rule "true_left" (formula "35"))
                                                   (rule "equalityToSeqGetAndSeqLenLeft" (formula "17") (inst "iv=iv"))
                                                    (builtin "One Step Simplification" (formula "17"))
                                                   (rule "equal_literals" (formula "17") (term "0"))
                                                    (builtin "One Step Simplification" (formula "17"))
                                                   (rule "closeFalse" (formula "17"))
                                                )
                                                (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_add<<anonHeapFunction>> FALSE"
                                                   (rule "applyEqReverse" (formula "28") (term "0") (ifseqformula "27"))
                                                    (builtin "One Step Simplification" (formula "28"))
                                                   (rule "true_left" (formula "28"))
                                                   (rule "hideAuxiliaryEq" (formula "27"))
                                                   (rule "equalityToSeqGetAndSeqLenLeft" (formula "33") (inst "iv=iv"))
                                                    (builtin "One Step Simplification" (formula "33"))
                                                   (rule "andLeft" (formula "33"))
                                                   (rule "inEqSimp_ltToLeq" (formula "34") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "34") (term "0,0,0"))
                                                   (rule "applyEq" (formula "34") (term "0,0,1,0,0,1,0,0") (ifseqformula "35"))
                                                    (builtin "One Step Simplification" (formula "34"))
                                                   (rule "mul_literals" (formula "34") (term "1,0,0,1,0,0"))
                                                   (rule "add_literals" (formula "34") (term "0,0,1,0,0"))
                                                   (rule "applyEq" (formula "33") (term "0,0") (ifseqformula "35"))
                                                    (builtin "One Step Simplification" (formula "33"))
                                                   (rule "true_left" (formula "33"))
                                                   (rule "applyEq" (formula "33") (term "0,0,1,0") (ifseqformula "34"))
                                                    (builtin "One Step Simplification" (formula "33"))
                                                   (rule "true_left" (formula "33"))
                                                   (rule "equalityToSeqGetAndSeqLenLeft" (formula "17") (inst "iv=iv"))
                                                    (builtin "One Step Simplification" (formula "17"))
                                                   (rule "equal_literals" (formula "17") (term "0"))
                                                    (builtin "One Step Simplification" (formula "17"))
                                                   (rule "closeFalse" (formula "17"))
                                                )
                                             )
                                          )
                                          (branch "(self_0, List::$footprint) in self_0.footprint@anon_heap_ArrayList<<anonHeapFunction>> FALSE"
                                             (rule "applyEqReverse" (formula "28") (term "0,1") (ifseqformula "19"))
                                             (rule "applyEqReverse" (formula "27") (term "2,0") (ifseqformula "19"))
                                             (rule "applyEqReverse" (formula "20") (term "0") (ifseqformula "19"))
                                              (builtin "One Step Simplification" (formula "20"))
                                             (rule "true_left" (formula "20"))
                                             (rule "applyEqReverse" (formula "22") (term "1,0") (ifseqformula "19"))
                                             (rule "applyEqReverse" (formula "26") (term "2,0,0") (ifseqformula "19"))
                                             (rule "applyEqReverse" (formula "46") (term "2") (ifseqformula "19"))
                                             (rule "hideAuxiliaryEq" (formula "19"))
                                             (rule "replace_known_right" (formula "25") (term "0,0") (ifseqformula "42"))
                                              (builtin "One Step Simplification" (formula "25"))
                                             (rule "applyEqReverse" (formula "26") (term "0") (ifseqformula "25"))
                                              (builtin "One Step Simplification" (formula "26"))
                                             (rule "true_left" (formula "26"))
                                             (rule "hideAuxiliaryEq" (formula "25"))
                                             (rule "ifthenelse_split" (formula "52") (term "0,0,1"))
                                             (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> TRUE"
                                                (rule "elementOfSubsetImpliesElementOfSuperset" (formula "1") (ifseqformula "33"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "52")))
                                                (rule "notLeft" (formula "1"))
                                                (rule "pullOutSelect" (formula "41") (term "0") (inst "selectSK=java_lang_Object_created__6"))
                                                (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")))
                                                (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "2,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "2,0"))
                                                (rule "replaceKnownSelect_taclet0000_10" (formula "1") (term "0,0,0,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "1") (term "0,0,0,0"))
                                                (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "11"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "applyEqReverse" (formula "42") (term "0") (ifseqformula "1"))
                                                (rule "close" (formula "42") (ifseqformula "11"))
                                             )
                                             (branch "(self_0, List::$seq) in self_1.footprint@anon_heap_ArrayList_0<<anonHeapFunction>> FALSE"
                                                 (builtin "One Step Simplification" (formula "53"))
                                                (rule "qeq_literals" (formula "53") (term "1"))
                                                 (builtin "One Step Simplification" (formula "53"))
                                                (rule "false_right" (formula "53"))
                                                (rule "equalityToSeqGetAndSeqLenLeft" (formula "31") (inst "iv=iv"))
                                                 (builtin "One Step Simplification" (formula "31"))
                                                (rule "andLeft" (formula "31"))
                                                (rule "inEqSimp_ltToLeq" (formula "32") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "32") (term "0,0,0"))
                                                (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "33"))
                                                 (builtin "One Step Simplification" (formula "31"))
                                                (rule "true_left" (formula "31"))
                                                (rule "applyEq" (formula "31") (term "0,0,1,0") (ifseqformula "32"))
                                                 (builtin "One Step Simplification" (formula "31"))
                                                (rule "true_left" (formula "31"))
                                                (rule "equalityToSeqGetAndSeqLenLeft" (formula "17") (inst "iv=iv"))
                                                 (builtin "One Step Simplification" (formula "17"))
                                                (rule "equal_literals" (formula "17") (term "0"))
                                                 (builtin "One Step Simplification" (formula "17"))
                                                (rule "closeFalse" (formula "17"))
                                             )
                                          )
                                       )
                                    )
                                 )
                              )
                              (branch "Null reference (l = null)"
                                  (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "53")))
                                 (rule "closeTrue" (formula "55"))
                              )
                           )
                        )
                        (branch "Assertion (l2.get(0) == 100) Terminates And OK"
                            (builtin "One Step Simplification" (formula "54"))
                           (rule "equalityToSeqGetAndSeqLenLeft" (formula "11") (inst "iv=iv"))
                            (builtin "One Step Simplification" (formula "11"))
                           (rule "andLeft" (formula "11"))
                           (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
                           (rule "applyEq" (formula "12") (term "1,1,0,0") (ifseqformula "11"))
                           (rule "applyEq" (formula "11") (term "0,0") (ifseqformula "13"))
                            (builtin "One Step Simplification" (formula "11"))
                           (rule "true_left" (formula "11"))
                           (rule "applyEq" (formula "11") (term "0,0,1,0") (ifseqformula "12"))
                            (builtin "One Step Simplification" (formula "11"))
                           (rule "true_left" (formula "11"))
                           (rule "compound_equality_comparison_1" (formula "54") (term "1") (inst "#v0=i"))
                           (rule "variableDeclarationAssign" (formula "54") (term "1"))
                           (rule "variableDeclaration" (formula "54") (term "1") (newnames "i"))
                           (rule "equalityToSeqGetAndSeqLenLeft" (formula "18") (inst "iv=iv"))
                            (builtin "One Step Simplification" (formula "18"))
                           (rule "andLeft" (formula "18"))
                           (rule "getOfSeqSingleton" (formula "19") (term "1,1,0"))
                           (rule "castDel" (formula "19") (term "1,1,1,0"))
                           (rule "castDel" (formula "19") (term "2,1,1,0"))
                           (rule "eqSymm" (formula "19") (term "1,0"))
                           (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
                           (rule "applyEq" (formula "19") (term "0,1,1,0") (ifseqformula "20"))
                           (rule "getOfSeqSingleton" (formula "19") (term "1,1,0"))
                           (rule "castDel" (formula "19") (term "1,1,1,0"))
                           (rule "castDel" (formula "19") (term "2,1,1,0"))
                            (builtin "One Step Simplification" (formula "19"))
                           (rule "true_left" (formula "19"))
                           (rule "applyEqRigid" (formula "18") (term "0,0") (ifseqformula "19"))
                            (builtin "One Step Simplification" (formula "18"))
                           (rule "true_left" (formula "18"))
                           (rule "equalityToSeqGetAndSeqLenLeft" (formula "17") (inst "iv=iv"))
                            (builtin "One Step Simplification" (formula "17"))
                           (rule "andLeft" (formula "17"))
                           (rule "getOfSeqSingleton" (formula "18") (term "1,1,0"))
                           (rule "castDel" (formula "18") (term "1,1,1,0"))
                           (rule "castDel" (formula "18") (term "2,1,1,0"))
                           (rule "eqSymm" (formula "18") (term "1,0"))
                           (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
                           (rule "applyEq" (formula "18") (term "1,1,0,0") (ifseqformula "17"))
                           (rule "applyEq" (formula "18") (term "0,1,1,0") (ifseqformula "19"))
                           (rule "getOfSeqSingleton" (formula "18") (term "1,1,0"))
                           (rule "castDel" (formula "18") (term "1,1,1,0"))
                           (rule "castDel" (formula "18") (term "2,1,1,0"))
                            (builtin "One Step Simplification" (formula "18"))
                           (rule "true_left" (formula "18"))
                           (rule "applyEq" (formula "17") (term "0,0") (ifseqformula "18"))
                            (builtin "One Step Simplification" (formula "17"))
                           (rule "true_left" (formula "17"))
                           (rule "equalityToSeqGetAndSeqLenLeft" (formula "26") (inst "iv=iv"))
                           (rule "andLeft" (formula "26"))
                           (rule "lenOfSeqConcat" (formula "26") (term "1"))
                            (builtin "One Step Simplification" (formula "26"))
                           (rule "add_literals" (formula "26") (term "1"))
                           (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0"))
                           (rule "applyEqRigid" (formula "27") (term "0,0,1,0") (ifseqformula "28"))
                            (builtin "One Step Simplification" (formula "27"))
                           (rule "true_left" (formula "27"))
                           (rule "applyEqRigid" (formula "26") (term "0,0") (ifseqformula "27"))
                           (rule "lenOfSeqConcat" (formula "26") (term "0"))
                            (builtin "One Step Simplification" (formula "26"))
                           (rule "add_literals" (formula "26") (term "0"))
                            (builtin "One Step Simplification" (formula "26"))
                           (rule "true_left" (formula "26"))
                           (rule "equalityToSeqGetAndSeqLenLeft" (formula "25") (inst "iv=iv"))
                           (rule "andLeft" (formula "25"))
                           (rule "lenOfSeqConcat" (formula "25") (term "1"))
                            (builtin "One Step Simplification" (formula "25"))
                           (rule "add_literals" (formula "25") (term "1"))
                           (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0"))
                           (rule "applyEq" (formula "26") (term "1,1,0,0") (ifseqformula "25"))
                           (rule "applyEq" (formula "26") (term "0,0,1,0") (ifseqformula "27"))
                            (builtin "One Step Simplification" (formula "26"))
                           (rule "true_left" (formula "26"))
                           (rule "applyEq" (formula "25") (term "0,0") (ifseqformula "26"))
                           (rule "lenOfSeqConcat" (formula "25") (term "0"))
                            (builtin "One Step Simplification" (formula "25"))
                           (rule "add_literals" (formula "25") (term "0"))
                            (builtin "One Step Simplification" (formula "25"))
                           (rule "true_left" (formula "25"))
                            (builtin "Use Operation Contract" (formula "54") (newnames "heapBefore_get,result_get,exc_5,heapAfter_get,anon_heap_get") (contract "List[List::get(int)].JML normal_behavior operation contract.0") (modality "diamond"))
                           (branch "Post (get)"
                               (builtin "One Step Simplification" (formula "56"))
                               (builtin "One Step Simplification" (formula "47"))
                              (rule "andLeft" (formula "47"))
                              (rule "andLeft" (formula "48"))
                              (rule "andLeft" (formula "49"))
                              (rule "andLeft" (formula "49"))
                              (rule "eqSymm" (formula "49"))
                              (rule "assignment" (formula "59") (term "1"))
                               (builtin "One Step Simplification" (formula "59"))
                              (rule "castedGetAny" (formula "49") (term "0"))
                              (rule "pullOutSelect" (formula "49") (term "0,0") (inst "selectSK=List_seq_5"))
                              (rule "simplifySelectOfAnonEQ" (formula "49") (ifseqformula "47"))
                               (builtin "One Step Simplification" (formula "49") (ifInst ""  (formula "56")))
                              (rule "replaceKnownSelect_taclet00000000_25" (formula "49") (term "2,0"))
                              (rule "ifthenelse_negated" (formula "49") (term "0"))
                              (rule "applyEqRigid" (formula "49") (term "1,0") (ifseqformula "42"))
                              (rule "pullOutSelect" (formula "49") (term "0,0,0") (inst "selectSK=java_lang_Object_created__6"))
                              (rule "simplifySelectOfAnonEQ" (formula "49") (ifseqformula "39"))
                               (builtin "One Step Simplification" (formula "49") (ifInst ""  (formula "57")))
                              (rule "replaceKnownSelect_taclet0000000_16" (formula "49") (term "2,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0000000_17" (formula "49") (term "2,0"))
                              (rule "replaceKnownSelect_taclet0000000_16" (formula "49") (term "0,0,0,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0000000_17" (formula "49") (term "0,0,0,0"))
                              (rule "replace_known_left" (formula "49") (term "0,0,0") (ifseqformula "33"))
                               (builtin "One Step Simplification" (formula "49"))
                              (rule "applyEqReverse" (formula "50") (term "0,0,0") (ifseqformula "49"))
                              (rule "hideAuxiliaryEq" (formula "49"))
                              (rule "replace_known_left" (formula "49") (term "0,0") (ifseqformula "33"))
                               (builtin "One Step Simplification" (formula "49"))
                              (rule "applyEqReverse" (formula "50") (term "0,0") (ifseqformula "49"))
                               (builtin "One Step Simplification" (formula "50"))
                              (rule "castDel" (formula "50") (term "0"))
                              (rule "hideAuxiliaryEq" (formula "49"))
                              (rule "eqSymm" (formula "49"))
                              (rule "applyEq" (formula "59") (term "0,1,0") (ifseqformula "49"))
                              (rule "equality_comparison_simple" (formula "59") (term "1"))
                               (builtin "One Step Simplification" (formula "59"))
                              (rule "methodCallEmpty" (formula "59") (term "1"))
                               (builtin "One Step Simplification" (formula "59"))
                              (rule "emptyModality" (formula "59") (term "1"))
                               (builtin "One Step Simplification" (formula "59"))
                              (rule "closeTrue" (formula "59"))
                           )
                           (branch "Exceptional Post (get)"
                               (builtin "One Step Simplification" (formula "47"))
                               (builtin "One Step Simplification" (formula "56"))
                              (rule "andLeft" (formula "47"))
                              (rule "andLeft" (formula "48"))
                              (rule "andLeft" (formula "48"))
                              (rule "andLeft" (formula "50"))
                              (rule "notLeft" (formula "48"))
                              (rule "close" (formula "51") (ifseqformula "50"))
                           )
                           (branch "Pre (get)"
                               (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "45")))
                              (rule "wellFormedAnonEQ" (formula "54") (term "0,1") (ifseqformula "39"))
                              (rule "wellFormedAnonEQ" (formula "54") (term "0,0,1") (ifseqformula "31"))
                              (rule "wellFormedAnonEQ" (formula "54") (term "0,0,0,1") (ifseqformula "23"))
                              (rule "wellFormedAnonEQ" (formula "54") (term "0,0,0,0,1") (ifseqformula "15"))
                              (rule "wellFormedAnonEQ" (formula "54") (term "0,0,0,0,0,1") (ifseqformula "7"))
                              (rule "selectOfAnonEQ" (formula "54") (term "0,1,1,0") (ifseqformula "39"))
                               (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "1")) (ifInst ""  (formula "6")) (ifInst ""  (formula "14")) (ifInst ""  (formula "22")) (ifInst ""  (formula "30")) (ifInst ""  (formula "38")) (ifInst ""  (formula "50")))
                              (rule "selectOfAnonEQ" (formula "54") (term "0,0,1,0,0,1,1,0") (ifseqformula "31"))
                               (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "50")))
                              (rule "ifthenelse_negated" (formula "54") (term "0,0,1,0,0,1,1,0"))
                              (rule "selectOfAnonEQ" (formula "54") (term "0,0,0,0,1,0,0,1,1,0") (ifseqformula "23"))
                               (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "50")))
                              (rule "ifthenelse_negated" (formula "54") (term "0,0,0,0,1,0,0,1,1,0"))
                              (rule "selectOfAnonEQ" (formula "54") (term "1,0,0,0,0,1,0,0,1,1,0") (ifseqformula "15"))
                               (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "50")))
                              (rule "ifthenelse_negated" (formula "54") (term "1,0,0,0,0,1,0,0,1,1,0"))
                              (rule "selectOfAnonEQ" (formula "54") (term "0,0,0,0,0,0,1,0,0,1,1,0") (ifseqformula "15"))
                               (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "50")))
                              (rule "ifthenelse_negated" (formula "54") (term "0,0,0,0,0,0,1,0,0,1,1,0"))
                              (rule "selectCreatedOfAnonEQ" (formula "54") (term "0,0,0,0,0,0,0,0,1,0,0,1,1,0") (ifseqformula "7"))
                               (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "46")) (ifInst ""  (formula "47")) (ifInst ""  (formula "48")) (ifInst ""  (formula "49")) (ifInst ""  (formula "33")))
                              (rule "selectOfAnonEQ" (formula "54") (term "0,1") (ifseqformula "39"))
                               (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "50")))
                              (rule "ifthenelse_negated" (formula "54") (term "0,1"))
                              (rule "selectOfAnonEQ" (formula "54") (term "2,0,1,1,0") (ifseqformula "31"))
                               (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "50")))
                              (rule "ifthenelse_negated" (formula "54") (term "2,0,1,1,0"))
                              (rule "selectCreatedOfAnonEQ" (formula "54") (term "0,0,0,1") (ifseqformula "31"))
                               (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "33")))
                              (rule "selectOfAnonEQ" (formula "54") (term "1,2,0,1,1,0") (ifseqformula "23"))
                               (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "50")))
                              (rule "selectCreatedOfAnonEQ" (formula "54") (term "0,1") (ifseqformula "31"))
                               (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "33")))
                              (rule "selectOfAnonEQ" (formula "54") (term "0,0,1,0,1,2,0,1,1") (ifseqformula "15"))
                               (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "50")))
                              (rule "ifthenelse_negated" (formula "54") (term "0,0,1,0,1,2,0,1,1"))
                              (rule "selectCreatedOfAnonEQ" (formula "54") (term "1,0,0,1,0,1,2,0,1,1") (ifseqformula "7"))
                              (rule "selectOfAnonEQ" (formula "54") (term "0,0,2,0,1,1") (ifseqformula "23"))
                               (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "46")) (ifInst ""  (formula "50")))
                              (rule "ifthenelse_negated" (formula "54") (term "0,0,2,0,1,1"))
                              (rule "selectCreatedOfAnonEQ" (formula "54") (term "1,0,0,2,0,1,1") (ifseqformula "15"))
                              (rule "selectCreatedOfAnonEQ" (formula "54") (term "0,0,0,0,2,0,1,1") (ifseqformula "15"))
                               (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "48")))
                              (rule "selectCreatedOfAnonEQ" (formula "54") (term "0,0,0,0,1,0,1,2,0,1,1") (ifseqformula "7"))
                               (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "46")) (ifInst ""  (formula "47")) (ifInst ""  (formula "48")))
                              (rule "selectOfAnonEQ" (formula "54") (term "0,0,0,0,2,0,1,1") (ifseqformula "7"))
                               (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "50")) (ifInst ""  (formula "46")) (ifInst ""  (formula "47")) (ifInst ""  (formula "49")))
                               (builtin "SMTRule" (ifInst ""  (formula "54")) (ifInst ""  (formula "41")) (solverType "Z3"))
                           )
                           (branch "Null reference (l2 = null)"
                               (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "50")))
                              (rule "closeTrue" (formula "54"))
                           )
                        )
                        (branch "Assertion (l2.get(0) == 100) No Effects"
                            (builtin "One Step Simplification" (formula "1"))
                            (builtin "One Step Simplification" (formula "55"))
                           (rule "variableDeclarationAssign" (formula "55") (term "1"))
                           (rule "variableDeclaration" (formula "55") (term "1") (newnames "b"))
                           (rule "applyEqRigid" (formula "55") (term "0,0,0,1,0,0,0,0,1") (ifseqformula "1"))
                           (rule "applyEqRigid" (formula "55") (term "0,0,1,0,0,0,1") (ifseqformula "1"))
                           (rule "equalityToSeqGetAndSeqLenLeft" (formula "12") (inst "iv=iv"))
                            (builtin "One Step Simplification" (formula "12"))
                           (rule "andLeft" (formula "12"))
                           (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
                           (rule "applyEq" (formula "13") (term "0,1,1,0,0") (ifseqformula "14"))
                            (builtin "One Step Simplification" (formula "13"))
                           (rule "applyEq" (formula "12") (term "0,0") (ifseqformula "14"))
                            (builtin "One Step Simplification" (formula "12"))
                           (rule "true_left" (formula "12"))
                           (rule "applyEq" (formula "12") (term "0,0,1,0") (ifseqformula "13"))
                            (builtin "One Step Simplification" (formula "12"))
                           (rule "true_left" (formula "12"))
                           (rule "compound_equality_comparison_1" (formula "55") (term "1") (inst "#v0=i"))
                           (rule "variableDeclarationAssign" (formula "55") (term "1"))
                           (rule "variableDeclaration" (formula "55") (term "1") (newnames "i"))
                           (rule "equalityToSeqGetAndSeqLenLeft" (formula "19") (inst "iv=iv"))
                            (builtin "One Step Simplification" (formula "19"))
                           (rule "andLeft" (formula "19"))
                           (rule "getOfSeqSingleton" (formula "20") (term "1,1,0"))
                           (rule "castDel" (formula "20") (term "1,1,1,0"))
                           (rule "castDel" (formula "20") (term "2,1,1,0"))
                           (rule "eqSymm" (formula "20") (term "1,0"))
                           (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0,0"))
                           (rule "applyEqRigid" (formula "20") (term "0,1,1,0") (ifseqformula "21"))
                           (rule "getOfSeqSingleton" (formula "20") (term "1,1,0"))
                           (rule "castDel" (formula "20") (term "1,1,1,0"))
                           (rule "castDel" (formula "20") (term "2,1,1,0"))
                            (builtin "One Step Simplification" (formula "20"))
                           (rule "true_left" (formula "20"))
                           (rule "applyEqRigid" (formula "19") (term "0,0") (ifseqformula "20"))
                            (builtin "One Step Simplification" (formula "19"))
                           (rule "true_left" (formula "19"))
                           (rule "equalityToSeqGetAndSeqLenLeft" (formula "18") (inst "iv=iv"))
                            (builtin "One Step Simplification" (formula "18"))
                           (rule "andLeft" (formula "18"))
                           (rule "getOfSeqSingleton" (formula "19") (term "1,1,0"))
                           (rule "castDel" (formula "19") (term "2,1,1,0"))
                           (rule "castDel" (formula "19") (term "1,1,1,0"))
                           (rule "eqSymm" (formula "19") (term "1,0"))
                           (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
                           (rule "applyEq" (formula "19") (term "1,1,0,0") (ifseqformula "18"))
                           (rule "applyEq" (formula "19") (term "0,1,1,0") (ifseqformula "20"))
                           (rule "getOfSeqSingleton" (formula "19") (term "1,1,0"))
                           (rule "castDel" (formula "19") (term "2,1,1,0"))
                           (rule "castDel" (formula "19") (term "1,1,1,0"))
                            (builtin "One Step Simplification" (formula "19"))
                           (rule "true_left" (formula "19"))
                           (rule "applyEq" (formula "18") (term "0,0") (ifseqformula "19"))
                            (builtin "One Step Simplification" (formula "18"))
                           (rule "true_left" (formula "18"))
                           (rule "equalityToSeqGetAndSeqLenLeft" (formula "27") (inst "iv=iv"))
                           (rule "andLeft" (formula "27"))
                           (rule "lenOfSeqConcat" (formula "27") (term "1"))
                            (builtin "One Step Simplification" (formula "27"))
                           (rule "add_literals" (formula "27") (term "1"))
                           (rule "inEqSimp_commuteLeq" (formula "28") (term "0,0,0"))
                           (rule "applyEq" (formula "28") (term "0,0,1,0") (ifseqformula "29"))
                            (builtin "One Step Simplification" (formula "28"))
                           (rule "true_left" (formula "28"))
                           (rule "applyEq" (formula "27") (term "0,0") (ifseqformula "28"))
                           (rule "lenOfSeqConcat" (formula "27") (term "0"))
                            (builtin "One Step Simplification" (formula "27"))
                           (rule "add_literals" (formula "27") (term "0"))
                            (builtin "One Step Simplification" (formula "27"))
                           (rule "true_left" (formula "27"))
                           (rule "equalityToSeqGetAndSeqLenLeft" (formula "26") (inst "iv=iv"))
                           (rule "andLeft" (formula "26"))
                           (rule "lenOfSeqConcat" (formula "26") (term "1"))
                            (builtin "One Step Simplification" (formula "26"))
                           (rule "add_literals" (formula "26") (term "1"))
                           (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0"))
                           (rule "applyEq" (formula "27") (term "1,1,0,0") (ifseqformula "26"))
                           (rule "applyEq" (formula "26") (term "0,0") (ifseqformula "28"))
                           (rule "lenOfSeqConcat" (formula "26") (term "0"))
                            (builtin "One Step Simplification" (formula "26"))
                           (rule "add_literals" (formula "26") (term "0"))
                            (builtin "One Step Simplification" (formula "26"))
                           (rule "true_left" (formula "26"))
                           (rule "applyEq" (formula "26") (term "0,0,1,0") (ifseqformula "27"))
                            (builtin "One Step Simplification" (formula "26"))
                           (rule "true_left" (formula "26"))
                            (builtin "Use Operation Contract" (formula "55") (newnames "heapBefore_get,result_get,exc_5,heapAfter_get,anon_heap_get") (contract "List[List::get(int)].JML normal_behavior operation contract.0") (modality "box"))
                           (branch "Post (get)"
                               (builtin "One Step Simplification" (formula "57"))
                               (builtin "One Step Simplification" (formula "48"))
                              (rule "andLeft" (formula "48"))
                              (rule "andLeft" (formula "49"))
                              (rule "andLeft" (formula "50"))
                              (rule "andLeft" (formula "50"))
                              (rule "eqSymm" (formula "50"))
                              (rule "assignment" (formula "60") (term "1"))
                               (builtin "One Step Simplification" (formula "60"))
                              (rule "castedGetAny" (formula "50") (term "0"))
                              (rule "pullOutSelect" (formula "50") (term "0,0") (inst "selectSK=List_seq_5"))
                              (rule "simplifySelectOfAnonEQ" (formula "50") (ifseqformula "48"))
                               (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "57")))
                              (rule "replaceKnownSelect_taclet00000000_25" (formula "50") (term "2,0"))
                              (rule "ifthenelse_negated" (formula "50") (term "0"))
                              (rule "applyEq" (formula "50") (term "1,0") (ifseqformula "43"))
                              (rule "pullOutSelect" (formula "50") (term "0,0,0") (inst "selectSK=java_lang_Object_created__6"))
                              (rule "simplifySelectOfAnonEQ" (formula "50") (ifseqformula "40"))
                               (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "58")))
                              (rule "replaceKnownSelect_taclet0000000_16" (formula "50") (term "2,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0000000_17" (formula "50") (term "2,0"))
                              (rule "replaceKnownSelect_taclet0000000_16" (formula "50") (term "0,0,0,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0000000_17" (formula "50") (term "0,0,0,0"))
                              (rule "replace_known_left" (formula "50") (term "0,0,0") (ifseqformula "34"))
                               (builtin "One Step Simplification" (formula "50"))
                              (rule "applyEqReverse" (formula "51") (term "0,0,0") (ifseqformula "50"))
                              (rule "hideAuxiliaryEq" (formula "50"))
                              (rule "replace_known_left" (formula "50") (term "0,0") (ifseqformula "34"))
                               (builtin "One Step Simplification" (formula "50"))
                              (rule "applyEqReverse" (formula "51") (term "0,0") (ifseqformula "50"))
                               (builtin "One Step Simplification" (formula "51"))
                              (rule "castDel" (formula "51") (term "0"))
                              (rule "hideAuxiliaryEq" (formula "50"))
                              (rule "eqSymm" (formula "50"))
                              (rule "applyEq" (formula "60") (term "0,1,0") (ifseqformula "50"))
                              (rule "equality_comparison_simple" (formula "60") (term "1"))
                               (builtin "One Step Simplification" (formula "60"))
                              (rule "methodCallEmpty" (formula "60") (term "1"))
                              (rule "emptyModality" (formula "60") (term "1"))
                               (builtin "One Step Simplification" (formula "60"))
                              (rule "allRight" (formula "60") (inst "sk=f_0"))
                              (rule "allRight" (formula "60") (inst "sk=o_0"))
                              (rule "orRight" (formula "60"))
                              (rule "eqSymm" (formula "61"))
                              (rule "pullOutSelect" (formula "60") (term "0,0,1") (inst "selectSK=java_lang_Object_created__7"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "41"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "pullOutSelect" (formula "62") (term "1") (inst "selectSK=f_0_0"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "42"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "pullOutSelect" (formula "63") (term "0") (inst "selectSK=f_0_1"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "51"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "replaceKnownSelect_taclet0200000000_31" (formula "1") (term "2,0"))
                              (rule "replaceKnownSelect_taclet0200000000_30" (formula "1") (term "0,0,1,0,0"))
                              (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "63"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "applyEqReverse" (formula "64") (term "0") (ifseqformula "1"))
                               (builtin "One Step Simplification" (formula "64"))
                              (rule "closeTrue" (formula "64"))
                           )
                           (branch "Exceptional Post (get)"
                               (builtin "One Step Simplification" (formula "48"))
                               (builtin "One Step Simplification" (formula "57"))
                              (rule "andLeft" (formula "48"))
                              (rule "andLeft" (formula "49"))
                              (rule "andLeft" (formula "50"))
                              (rule "andLeft" (formula "49"))
                              (rule "andLeft" (formula "51"))
                              (rule "notLeft" (formula "49"))
                              (rule "close" (formula "53") (ifseqformula "52"))
                           )
                           (branch "Pre (get)"
                               (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "46")))
                              (rule "wellFormedAnonEQ" (formula "55") (term "0,1") (ifseqformula "40"))
                              (rule "wellFormedAnonEQ" (formula "55") (term "0,0,1") (ifseqformula "32"))
                              (rule "wellFormedAnonEQ" (formula "55") (term "0,0,0,1") (ifseqformula "24"))
                              (rule "wellFormedAnonEQ" (formula "55") (term "0,0,0,0,1") (ifseqformula "16"))
                              (rule "wellFormedAnonEQ" (formula "55") (term "0,0,0,0,0,1") (ifseqformula "8"))
                              (rule "selectOfAnonEQ" (formula "55") (term "0,1,1") (ifseqformula "40"))
                               (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "2")) (ifInst ""  (formula "7")) (ifInst ""  (formula "15")) (ifInst ""  (formula "23")) (ifInst ""  (formula "31")) (ifInst ""  (formula "39")) (ifInst ""  (formula "51")))
                              (rule "ifthenelse_negated" (formula "55") (term "0,1"))
                              (rule "selectCreatedOfAnonEQ" (formula "55") (term "0,0,0,1") (ifseqformula "32"))
                               (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "34")))
                              (rule "selectOfAnonEQ" (formula "55") (term "0,1,1,0") (ifseqformula "40"))
                               (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "51")))
                              (rule "selectOfAnonEQ" (formula "55") (term "0,1") (ifseqformula "32"))
                               (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "51")))
                              (rule "ifthenelse_negated" (formula "55") (term "0,1"))
                              (rule "selectOfAnonEQ" (formula "55") (term "2,0,1,1,0") (ifseqformula "32"))
                               (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "51")))
                              (rule "ifthenelse_negated" (formula "55") (term "2,0,1,1,0"))
                              (rule "selectCreatedOfAnonEQ" (formula "55") (term "1,0,1") (ifseqformula "24"))
                              (rule "selectCreatedOfAnonEQ" (formula "55") (term "0,0,0,1") (ifseqformula "24"))
                               (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "50")))
                              (rule "selectCreatedOfAnonEQ" (formula "55") (term "0,0,2,0,1,1,0") (ifseqformula "24"))
                               (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "50")))
                              (rule "selectCreatedOfAnonEQ" (formula "55") (term "0,0,1,0,0,1,1,0") (ifseqformula "32"))
                               (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "34")))
                              (rule "selectOfAnonEQ" (formula "55") (term "1,2,0,1,1,0") (ifseqformula "24"))
                               (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "51")))
                              (rule "selectCreatedOfAnonEQ" (formula "55") (term "0,0,0,1") (ifseqformula "16"))
                               (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "49")))
                              (rule "selectCreatedOfAnonEQ" (formula "55") (term "0,0,1,0,1,2,0,1,1,0") (ifseqformula "16"))
                               (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "49")))
                              (rule "selectCreatedOfAnonEQ" (formula "55") (term "0,0,1,0,1") (ifseqformula "16"))
                               (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "49")))
                              (rule "selectCreatedOfAnonEQ" (formula "55") (term "0,0,2,0,1,1,0") (ifseqformula "16"))
                               (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "49")))
                              (rule "selectOfAnonEQ" (formula "55") (term "0,0,1,0,1") (ifseqformula "8"))
                               (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "51")) (ifInst ""  (formula "47")) (ifInst ""  (formula "48")))
                              (rule "selectCreatedOfAnonEQ" (formula "55") (term "0,0,1,0,1,2,0,1,1,0") (ifseqformula "8"))
                               (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "47")) (ifInst ""  (formula "48")))
                              (rule "selectOfAnonEQ" (formula "55") (term "0,0,2,0,1,1,0") (ifseqformula "8"))
                               (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "51")) (ifInst ""  (formula "47")) (ifInst ""  (formula "48")))
                              (rule "selectOfAnonEQ" (formula "55") (term "0,0,0,1") (ifseqformula "8"))
                               (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "51")) (ifInst ""  (formula "47")) (ifInst ""  (formula "48")) (ifInst ""  (formula "34")))
                               (builtin "SMTRule" (ifInst ""  (formula "55")) (ifInst ""  (formula "42")) (solverType "Z3"))
                           )
                           (branch "Null reference (l2 = null)"
                               (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "51")))
                              (rule "closeTrue" (formula "55"))
                           )
                        )
                     )
                     (branch "Exceptional Post (add)"
                         (builtin "One Step Simplification" (formula "48"))
                         (builtin "One Step Simplification" (formula "39"))
                        (rule "replaceKnownSelect_taclet0000000_14" (formula "39") (term "1,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet0000000_15" (formula "39") (term "1,0,0"))
                        (rule "replaceKnownSelect_taclet0000000_12" (formula "39") (term "0,1,0,0,1,1"))
                        (rule "replaceKnownAuxiliaryConstant_taclet0000000_13" (formula "39") (term "0,1,0,0,1,1"))
                        (rule "replaceKnownSelect_taclet0000000_14" (formula "39") (term "0,1,0,1,0,1,1"))
                        (rule "replaceKnownAuxiliaryConstant_taclet0000000_15" (formula "39") (term "0,1,0,1,0,1,1"))
                        (rule "andLeft" (formula "39"))
                        (rule "andLeft" (formula "40"))
                        (rule "andLeft" (formula "41"))
                        (rule "andLeft" (formula "40"))
                        (rule "andLeft" (formula "42"))
                        (rule "notLeft" (formula "40"))
                        (rule "close" (formula "44") (ifseqformula "43"))
                     )
                     (branch "Pre (add)"
                         (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "37")))
                        (rule "wellFormedAnonEQ" (formula "46") (term "0") (ifseqformula "31"))
                        (rule "wellFormedAnonEQ" (formula "46") (term "0,0") (ifseqformula "23"))
                        (rule "wellFormedAnonEQ" (formula "46") (term "0,0,0") (ifseqformula "15"))
                        (rule "wellFormedAnonEQ" (formula "46") (term "0,0,0,0") (ifseqformula "7"))
                        (rule "selectOfAnonEQ" (formula "46") (term "0,1") (ifseqformula "31"))
                         (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "1")) (ifInst ""  (formula "6")) (ifInst ""  (formula "14")) (ifInst ""  (formula "22")) (ifInst ""  (formula "30")) (ifInst ""  (formula "42")))
                        (rule "ifthenelse_negated" (formula "46") (term "0"))
                        (rule "selectCreatedOfAnonEQ" (formula "46") (term "1,0") (ifseqformula "23"))
                        (rule "selectCreatedOfAnonEQ" (formula "46") (term "0,0,0") (ifseqformula "23"))
                         (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "41")))
                        (rule "selectCreatedOfAnonEQ" (formula "46") (term "0,0,0") (ifseqformula "15"))
                         (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "40")))
                        (rule "selectCreatedOfAnonEQ" (formula "46") (term "0,0,0") (ifseqformula "7"))
                         (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "38")) (ifInst ""  (formula "39")) (ifInst ""  (formula "33")))
                        (rule "closeTrue" (formula "46"))
                     )
                     (branch "Null reference (l2 = null)"
                         (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "42")))
                        (rule "closeTrue" (formula "46"))
                     )
                  )
                  (branch "Exceptional Post (ArrayList)"
                      (builtin "One Step Simplification" (formula "35"))
                      (builtin "One Step Simplification" (formula "31"))
                     (rule "andLeft" (formula "31"))
                     (rule "andLeft" (formula "32"))
                     (rule "andLeft" (formula "32"))
                     (rule "andLeft" (formula "34"))
                     (rule "andLeft" (formula "32"))
                     (rule "andLeft" (formula "34"))
                     (rule "andLeft" (formula "36"))
                     (rule "notLeft" (formula "32"))
                     (rule "close" (formula "38") (ifseqformula "37"))
                  )
                  (branch "Pre (ArrayList)"
                      (builtin "One Step Simplification" (formula "33"))
                     (rule "wellFormedAnonEQ" (formula "33") (ifseqformula "23"))
                     (rule "wellFormedAnonEQ" (formula "33") (term "0") (ifseqformula "15"))
                     (rule "wellFormedAnonEQ" (formula "33") (term "0,0") (ifseqformula "7"))
                      (builtin "SMTRule" (ifInst ""  (formula "33")) (ifInst ""  (formula "22")) (ifInst ""  (formula "14")) (ifInst ""  (formula "6")) (ifInst ""  (formula "1")) (solverType "Z3"))
                  )
               )
               (branch "Assertion (l.get(1) == 42) Terminates And OK"
                   (builtin "One Step Simplification" (formula "33"))
                  (rule "compound_equality_comparison_1" (formula "33") (term "1") (inst "#v0=i"))
                  (rule "variableDeclarationAssign" (formula "33") (term "1"))
                  (rule "variableDeclaration" (formula "33") (term "1") (newnames "i"))
                   (builtin "Use Operation Contract" (formula "33") (newnames "heapBefore_get,result_get,exc_3,heapAfter_get,anon_heap_get") (contract "List[List::get(int)].JML normal_behavior operation contract.0") (modality "diamond"))
                  (branch "Post (get)"
                      (builtin "One Step Simplification" (formula "35"))
                      (builtin "One Step Simplification" (formula "31"))
                     (rule "andLeft" (formula "31"))
                     (rule "andLeft" (formula "32"))
                     (rule "andLeft" (formula "33"))
                     (rule "andLeft" (formula "33"))
                     (rule "eqSymm" (formula "33"))
                     (rule "assignment" (formula "38") (term "1"))
                      (builtin "One Step Simplification" (formula "38"))
                     (rule "castedGetAny" (formula "33") (term "0"))
                     (rule "pullOutSelect" (formula "33") (term "0,0") (inst "selectSK=List_seq_3"))
                     (rule "simplifySelectOfAnonEQ" (formula "33") (ifseqformula "31"))
                      (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "37")))
                     (rule "replaceKnownSelect_taclet0000_8" (formula "33") (term "2,0"))
                     (rule "ifthenelse_negated" (formula "33") (term "0"))
                     (rule "applyEq" (formula "33") (term "1,0") (ifseqformula "26"))
                     (rule "pullOutSelect" (formula "33") (term "0,0,0") (inst "selectSK=java_lang_Object_created__2"))
                     (rule "simplifySelectOfAnonEQ" (formula "33") (ifseqformula "23"))
                      (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "38")))
                     (rule "replaceKnownSelect_taclet0000_10" (formula "33") (term "2,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "33") (term "2,0"))
                     (rule "replaceKnownSelect_taclet0000_10" (formula "33") (term "0,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "33") (term "0,0,0,0"))
                     (rule "replace_known_left" (formula "33") (term "0,0,0") (ifseqformula "9"))
                      (builtin "One Step Simplification" (formula "33"))
                     (rule "applyEqReverse" (formula "34") (term "0,0,0") (ifseqformula "33"))
                     (rule "hideAuxiliaryEq" (formula "33"))
                     (rule "replace_known_left" (formula "33") (term "0,0") (ifseqformula "9"))
                      (builtin "One Step Simplification" (formula "33"))
                     (rule "applyEqReverse" (formula "34") (term "0,0") (ifseqformula "33"))
                     (rule "hideAuxiliaryEq" (formula "33"))
                     (rule "getOfSeqConcat" (formula "33") (term "0"))
                      (builtin "One Step Simplification" (formula "33"))
                     (rule "less_literals" (formula "33") (term "0,0"))
                      (builtin "One Step Simplification" (formula "33"))
                     (rule "sub_literals" (formula "33") (term "1,0"))
                      (builtin "One Step Simplification" (formula "33"))
                     (rule "castDel" (formula "33") (term "0"))
                     (rule "eqSymm" (formula "33"))
                     (rule "applyEq" (formula "38") (term "0,1,0") (ifseqformula "33"))
                     (rule "equality_comparison_simple" (formula "38") (term "1"))
                      (builtin "One Step Simplification" (formula "38"))
                     (rule "methodCallEmpty" (formula "38") (term "1"))
                      (builtin "One Step Simplification" (formula "38"))
                     (rule "emptyModality" (formula "38") (term "1"))
                      (builtin "One Step Simplification" (formula "38"))
                     (rule "closeTrue" (formula "38"))
                  )
                  (branch "Exceptional Post (get)"
                      (builtin "One Step Simplification" (formula "31"))
                      (builtin "One Step Simplification" (formula "35"))
                     (rule "andLeft" (formula "31"))
                     (rule "andLeft" (formula "32"))
                     (rule "andLeft" (formula "33"))
                     (rule "andLeft" (formula "32"))
                     (rule "andLeft" (formula "34"))
                     (rule "notLeft" (formula "32"))
                     (rule "close" (formula "36") (ifseqformula "35"))
                  )
                  (branch "Pre (get)"
                      (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "29")))
                     (rule "wellFormedAnonEQ" (formula "33") (term "0,1") (ifseqformula "23"))
                     (rule "wellFormedAnonEQ" (formula "33") (term "0,0,1") (ifseqformula "15"))
                     (rule "wellFormedAnonEQ" (formula "33") (term "0,0,0,1") (ifseqformula "7"))
                     (rule "selectOfAnonEQ" (formula "33") (term "0,1,1") (ifseqformula "23"))
                      (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "1")) (ifInst ""  (formula "6")) (ifInst ""  (formula "14")) (ifInst ""  (formula "22")) (ifInst ""  (formula "31")))
                     (rule "ifthenelse_negated" (formula "33") (term "0,1"))
                     (rule "selectCreatedOfAnonEQ" (formula "33") (term "0,0,0,1") (ifseqformula "15"))
                      (builtin "One Step Simplification" (formula "33"))
                     (rule "selectCreatedOfAnonEQ" (formula "33") (term "1,0,1") (ifseqformula "15"))
                     (rule "selectCreatedOfAnonEQ" (formula "33") (term "0,0,0,0,1") (ifseqformula "7"))
                      (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "30")) (ifInst ""  (formula "9")))
                     (rule "selectCreatedOfAnonEQ" (formula "33") (term "0,0,1") (ifseqformula "7"))
                      (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "30")) (ifInst ""  (formula "9")))
                     (rule "selectOfAnonEQ" (formula "33") (term "0,1,1") (ifseqformula "23"))
                      (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "31")))
                     (rule "selectOfAnonEQ" (formula "33") (term "2,0,1,1") (ifseqformula "15"))
                      (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "31")))
                     (rule "selectCreatedOfAnonEQ" (formula "33") (term "0,0,1,0,2,0,1,1") (ifseqformula "7"))
                      (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "30")) (ifInst ""  (formula "9")))
                     (rule "selectOfAnonEQ" (formula "33") (term "2,2,0,1,1") (ifseqformula "7"))
                      (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "31")) (ifInst ""  (formula "30")))
                     (rule "selectCreatedOfAnonEQ" (formula "33") (term "0,0,1,0,0,1,1") (ifseqformula "15"))
                      (builtin "One Step Simplification" (formula "33"))
                     (rule "selectCreatedOfAnonEQ" (formula "33") (term "0,0,0,1,0,0,1,1") (ifseqformula "7"))
                      (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "30")) (ifInst ""  (formula "9")))
                      (builtin "SMTRule" (ifInst ""  (formula "33")) (ifInst ""  (formula "25")) (ifInst ""  (formula "18")) (solverType "Z3"))
                  )
                  (branch "Null reference (l = null)"
                      (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "31")))
                     (rule "closeTrue" (formula "33"))
                  )
               )
               (branch "Assertion (l.get(1) == 42) No Effects"
                   (builtin "One Step Simplification" (formula "34"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "variableDeclarationAssign" (formula "34") (term "1"))
                  (rule "variableDeclaration" (formula "34") (term "1") (newnames "b"))
                  (rule "applyEqRigid" (formula "34") (term "0,0,0,1,0,0,0,0,1") (ifseqformula "1"))
                  (rule "applyEqRigid" (formula "34") (term "0,0,1,0,0,0,1") (ifseqformula "1"))
                  (rule "compound_equality_comparison_1" (formula "34") (term "1") (inst "#v0=i"))
                  (rule "variableDeclarationAssign" (formula "34") (term "1"))
                  (rule "variableDeclaration" (formula "34") (term "1") (newnames "i"))
                   (builtin "Use Operation Contract" (formula "34") (newnames "heapBefore_get,result_get,exc_3,heapAfter_get,anon_heap_get") (contract "List[List::get(int)].JML normal_behavior operation contract.0") (modality "box"))
                  (branch "Post (get)"
                      (builtin "One Step Simplification" (formula "36"))
                      (builtin "One Step Simplification" (formula "32"))
                     (rule "andLeft" (formula "32"))
                     (rule "andLeft" (formula "33"))
                     (rule "andLeft" (formula "34"))
                     (rule "andLeft" (formula "34"))
                     (rule "eqSymm" (formula "34"))
                     (rule "assignment" (formula "39") (term "1"))
                      (builtin "One Step Simplification" (formula "39"))
                     (rule "castedGetAny" (formula "34") (term "0"))
                     (rule "pullOutSelect" (formula "34") (term "0,0") (inst "selectSK=List_seq_3"))
                     (rule "simplifySelectOfAnonEQ" (formula "34") (ifseqformula "32"))
                      (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "38")))
                     (rule "replaceKnownSelect_taclet0000_8" (formula "34") (term "2,0"))
                     (rule "ifthenelse_negated" (formula "34") (term "0"))
                     (rule "applyEqRigid" (formula "34") (term "1,0") (ifseqformula "27"))
                     (rule "pullOutSelect" (formula "34") (term "0,0,0") (inst "selectSK=java_lang_Object_created__2"))
                     (rule "simplifySelectOfAnonEQ" (formula "34") (ifseqformula "24"))
                      (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "39")))
                     (rule "replaceKnownSelect_taclet0000_10" (formula "34") (term "2,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "34") (term "2,0"))
                     (rule "replaceKnownSelect_taclet0000_10" (formula "34") (term "0,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "34") (term "0,0,0,0"))
                     (rule "replace_known_left" (formula "34") (term "0,0,0") (ifseqformula "10"))
                      (builtin "One Step Simplification" (formula "34"))
                     (rule "applyEqReverse" (formula "35") (term "0,0,0") (ifseqformula "34"))
                     (rule "hideAuxiliaryEq" (formula "34"))
                     (rule "replace_known_left" (formula "34") (term "0,0") (ifseqformula "10"))
                      (builtin "One Step Simplification" (formula "34"))
                     (rule "applyEqReverse" (formula "35") (term "0,0") (ifseqformula "34"))
                     (rule "hideAuxiliaryEq" (formula "34"))
                     (rule "getOfSeqConcat" (formula "34") (term "0"))
                      (builtin "One Step Simplification" (formula "34"))
                     (rule "sub_literals" (formula "34") (term "1,2,0"))
                      (builtin "One Step Simplification" (formula "34"))
                     (rule "castDel" (formula "34") (term "2,0"))
                     (rule "less_literals" (formula "34") (term "0,0"))
                      (builtin "One Step Simplification" (formula "34"))
                     (rule "eqSymm" (formula "34"))
                     (rule "applyEq" (formula "39") (term "0,1,0") (ifseqformula "34"))
                     (rule "equality_comparison_simple" (formula "39") (term "1"))
                      (builtin "One Step Simplification" (formula "39"))
                     (rule "methodCallEmpty" (formula "39") (term "1"))
                     (rule "emptyModality" (formula "39") (term "1"))
                      (builtin "One Step Simplification" (formula "39"))
                     (rule "allRight" (formula "39") (inst "sk=f_0"))
                     (rule "allRight" (formula "39") (inst "sk=o_0"))
                     (rule "orRight" (formula "39"))
                     (rule "eqSymm" (formula "40"))
                     (rule "pullOutSelect" (formula "39") (term "0,0,1") (inst "selectSK=java_lang_Object_created__3"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "25"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "pullOutSelect" (formula "41") (term "1") (inst "selectSK=f_0_0"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "26"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "pullOutSelect" (formula "42") (term "0") (inst "selectSK=f_0_1"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "35"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "replaceKnownSelect_taclet0200000_17" (formula "1") (term "2,0"))
                     (rule "replaceKnownSelect_taclet0200000_16" (formula "1") (term "0,0,1,0,0"))
                     (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "42"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "applyEqReverse" (formula "43") (term "0") (ifseqformula "1"))
                      (builtin "One Step Simplification" (formula "43"))
                     (rule "closeTrue" (formula "43"))
                  )
                  (branch "Exceptional Post (get)"
                      (builtin "One Step Simplification" (formula "36"))
                      (builtin "One Step Simplification" (formula "32"))
                     (rule "andLeft" (formula "32"))
                     (rule "andLeft" (formula "33"))
                     (rule "andLeft" (formula "34"))
                     (rule "andLeft" (formula "33"))
                     (rule "andLeft" (formula "35"))
                     (rule "notLeft" (formula "33"))
                     (rule "close" (formula "37") (ifseqformula "36"))
                  )
                  (branch "Pre (get)"
                      (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "30")))
                     (rule "wellFormedAnonEQ" (formula "34") (term "0,1") (ifseqformula "24"))
                     (rule "wellFormedAnonEQ" (formula "34") (term "0,0,1") (ifseqformula "16"))
                     (rule "wellFormedAnonEQ" (formula "34") (term "0,0,0,1") (ifseqformula "8"))
                     (rule "selectOfAnonEQ" (formula "34") (term "0,1,1,0") (ifseqformula "24"))
                      (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "2")) (ifInst ""  (formula "7")) (ifInst ""  (formula "15")) (ifInst ""  (formula "23")) (ifInst ""  (formula "32")))
                     (rule "selectOfAnonEQ" (formula "34") (term "0,0,1,0,0,1,1,0") (ifseqformula "16"))
                      (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "32")))
                     (rule "ifthenelse_negated" (formula "34") (term "0,0,1,0,0,1,1,0"))
                     (rule "selectCreatedOfAnonEQ" (formula "34") (term "1,0,0,1,0,0,1,1,0") (ifseqformula "8"))
                     (rule "selectCreatedOfAnonEQ" (formula "34") (term "0,0,0,0,1,0,0,1,1,0") (ifseqformula "8"))
                      (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "31")) (ifInst ""  (formula "31")) (ifInst ""  (formula "10")) (ifInst ""  (formula "10")))
                     (rule "selectOfAnonEQ" (formula "34") (term "2,0,1,1,0") (ifseqformula "16"))
                      (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "32")))
                     (rule "selectOfAnonEQ" (formula "34") (term "0,0,1,0,2,0,1,1,0") (ifseqformula "8"))
                      (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "32")) (ifInst ""  (formula "31")) (ifInst ""  (formula "10")))
                     (rule "selectOfAnonEQ" (formula "34") (term "0,1") (ifseqformula "24"))
                      (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "32")))
                     (rule "ifthenelse_negated" (formula "34") (term "0,1"))
                     (rule "selectOfAnonEQ" (formula "34") (term "2,2,0,1,1,0") (ifseqformula "8"))
                      (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "32")) (ifInst ""  (formula "31")))
                     (rule "selectCreatedOfAnonEQ" (formula "34") (term "0,0,0,1") (ifseqformula "16"))
                      (builtin "One Step Simplification" (formula "34"))
                     (rule "selectCreatedOfAnonEQ" (formula "34") (term "0,0,0,0,1") (ifseqformula "8"))
                      (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "31")) (ifInst ""  (formula "10")))
                     (rule "selectCreatedOfAnonEQ" (formula "34") (term "0,1") (ifseqformula "16"))
                      (builtin "One Step Simplification" (formula "34"))
                     (rule "selectCreatedOfAnonEQ" (formula "34") (term "0,0,1") (ifseqformula "8"))
                      (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "31")) (ifInst ""  (formula "10")))
                      (builtin "SMTRule" (ifInst ""  (formula "34")) (ifInst ""  (formula "26")) (ifInst ""  (formula "19")) (solverType "Z3"))
                  )
                  (branch "Null reference (l = null)"
                      (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "32")))
                     (rule "closeTrue" (formula "34"))
                  )
               )
            )
            (branch "Assertion (l.get(0) == 23) Terminates And OK"
                (builtin "One Step Simplification" (formula "33"))
               (rule "compound_equality_comparison_1" (formula "33") (term "1") (inst "#v0=i"))
               (rule "variableDeclarationAssign" (formula "33") (term "1"))
               (rule "variableDeclaration" (formula "33") (term "1") (newnames "i"))
                (builtin "Use Operation Contract" (formula "33") (newnames "heapBefore_get,result_get,exc_3,heapAfter_get,anon_heap_get") (contract "List[List::get(int)].JML normal_behavior operation contract.0") (modality "diamond"))
               (branch "Post (get)"
                   (builtin "One Step Simplification" (formula "35"))
                   (builtin "One Step Simplification" (formula "31"))
                  (rule "andLeft" (formula "31"))
                  (rule "andLeft" (formula "32"))
                  (rule "andLeft" (formula "33"))
                  (rule "andLeft" (formula "33"))
                  (rule "eqSymm" (formula "33"))
                  (rule "assignment" (formula "38") (term "1"))
                   (builtin "One Step Simplification" (formula "38"))
                  (rule "castedGetAny" (formula "33") (term "0"))
                  (rule "pullOutSelect" (formula "33") (term "0,0") (inst "selectSK=List_seq_3"))
                  (rule "simplifySelectOfAnonEQ" (formula "33") (ifseqformula "31"))
                   (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "37")))
                  (rule "replaceKnownSelect_taclet0000_8" (formula "33") (term "2,0"))
                  (rule "ifthenelse_negated" (formula "33") (term "0"))
                  (rule "applyEq" (formula "33") (term "1,0") (ifseqformula "26"))
                  (rule "pullOutSelect" (formula "33") (term "0,0,0") (inst "selectSK=java_lang_Object_created__2"))
                  (rule "simplifySelectOfAnonEQ" (formula "33") (ifseqformula "23"))
                   (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "38")))
                  (rule "replaceKnownSelect_taclet0000_10" (formula "33") (term "2,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "33") (term "2,0"))
                  (rule "replaceKnownSelect_taclet0000_10" (formula "33") (term "0,0,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "33") (term "0,0,0,0"))
                  (rule "replace_known_left" (formula "33") (term "0,0,0") (ifseqformula "9"))
                   (builtin "One Step Simplification" (formula "33"))
                  (rule "applyEqReverse" (formula "34") (term "0,0,0") (ifseqformula "33"))
                  (rule "hideAuxiliaryEq" (formula "33"))
                  (rule "replace_known_left" (formula "33") (term "0,0") (ifseqformula "9"))
                   (builtin "One Step Simplification" (formula "33"))
                  (rule "applyEqReverse" (formula "34") (term "0,0") (ifseqformula "33"))
                  (rule "hideAuxiliaryEq" (formula "33"))
                  (rule "getOfSeqConcat" (formula "33") (term "0"))
                   (builtin "One Step Simplification" (formula "33"))
                  (rule "castDel" (formula "33") (term "1,0"))
                  (rule "less_literals" (formula "33") (term "0,0"))
                   (builtin "One Step Simplification" (formula "33"))
                  (rule "eqSymm" (formula "33"))
                  (rule "applyEq" (formula "38") (term "0,1,0") (ifseqformula "33"))
                  (rule "equality_comparison_simple" (formula "38") (term "1"))
                   (builtin "One Step Simplification" (formula "38"))
                  (rule "methodCallEmpty" (formula "38") (term "1"))
                   (builtin "One Step Simplification" (formula "38"))
                  (rule "emptyModality" (formula "38") (term "1"))
                   (builtin "One Step Simplification" (formula "38"))
                  (rule "closeTrue" (formula "38"))
               )
               (branch "Exceptional Post (get)"
                   (builtin "One Step Simplification" (formula "31"))
                   (builtin "One Step Simplification" (formula "35"))
                  (rule "andLeft" (formula "31"))
                  (rule "andLeft" (formula "32"))
                  (rule "andLeft" (formula "33"))
                  (rule "andLeft" (formula "32"))
                  (rule "andLeft" (formula "34"))
                  (rule "notLeft" (formula "32"))
                  (rule "close" (formula "36") (ifseqformula "35"))
               )
               (branch "Pre (get)"
                   (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "29")))
                  (rule "wellFormedAnonEQ" (formula "33") (term "0,1") (ifseqformula "23"))
                  (rule "wellFormedAnonEQ" (formula "33") (term "0,0,1") (ifseqformula "15"))
                  (rule "wellFormedAnonEQ" (formula "33") (term "0,0,0,1") (ifseqformula "7"))
                  (rule "selectOfAnonEQ" (formula "33") (term "0,1,1") (ifseqformula "23"))
                   (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "1")) (ifInst ""  (formula "6")) (ifInst ""  (formula "14")) (ifInst ""  (formula "22")) (ifInst ""  (formula "31")))
                  (rule "ifthenelse_negated" (formula "33") (term "0,1"))
                  (rule "selectCreatedOfAnonEQ" (formula "33") (term "0,0,0,1") (ifseqformula "15"))
                   (builtin "One Step Simplification" (formula "33"))
                  (rule "selectOfAnonEQ" (formula "33") (term "0,1,1,0") (ifseqformula "23"))
                   (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "31")))
                  (rule "selectOfAnonEQ" (formula "33") (term "0,0,0,0,1") (ifseqformula "7"))
                   (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "31")) (ifInst ""  (formula "30")) (ifInst ""  (formula "9")))
                  (rule "selectOfAnonEQ" (formula "33") (term "0,0,1,0,0,1,1,0") (ifseqformula "15"))
                   (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "31")))
                  (rule "ifthenelse_negated" (formula "33") (term "0,0,1,0,0,1,1,0"))
                  (rule "selectCreatedOfAnonEQ" (formula "33") (term "0,1") (ifseqformula "15"))
                   (builtin "One Step Simplification" (formula "33"))
                  (rule "selectOfAnonEQ" (formula "33") (term "1,0,0,1,0,0,1,1,0") (ifseqformula "7"))
                   (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "31")) (ifInst ""  (formula "30")))
                  (rule "selectOfAnonEQ" (formula "33") (term "0,0,0,0,1,0,0,1,1,0") (ifseqformula "7"))
                   (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "31")) (ifInst ""  (formula "30")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")))
                  (rule "selectCreatedOfAnonEQ" (formula "33") (term "0,0,1") (ifseqformula "7"))
                   (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "30")) (ifInst ""  (formula "9")))
                  (rule "selectOfAnonEQ" (formula "33") (term "2,0,1,1") (ifseqformula "15"))
                   (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "31")))
                  (rule "selectOfAnonEQ" (formula "33") (term "2,2,0,1,1") (ifseqformula "7"))
                   (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "31")) (ifInst ""  (formula "30")))
                  (rule "selectCreatedOfAnonEQ" (formula "33") (term "0,0,1,0,2,0,1,1") (ifseqformula "7"))
                   (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "30")) (ifInst ""  (formula "9")))
                   (builtin "SMTRule" (ifInst ""  (formula "33")) (ifInst ""  (formula "25")) (ifInst ""  (formula "18")) (solverType "Z3"))
               )
               (branch "Null reference (l = null)"
                   (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "31")))
                  (rule "closeTrue" (formula "33"))
               )
            )
            (branch "Assertion (l.get(0) == 23) No Effects"
                (builtin "One Step Simplification" (formula "34"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "variableDeclarationAssign" (formula "34") (term "1"))
               (rule "variableDeclaration" (formula "34") (term "1") (newnames "b"))
               (rule "applyEqRigid" (formula "34") (term "0,0,0,1,0,0,0,0,1") (ifseqformula "1"))
               (rule "applyEqRigid" (formula "34") (term "0,0,1,0,0,0,1") (ifseqformula "1"))
               (rule "compound_equality_comparison_1" (formula "34") (term "1") (inst "#v0=i"))
               (rule "variableDeclarationAssign" (formula "34") (term "1"))
               (rule "variableDeclaration" (formula "34") (term "1") (newnames "i"))
                (builtin "Use Operation Contract" (formula "34") (newnames "heapBefore_get,result_get,exc_3,heapAfter_get,anon_heap_get") (contract "List[List::get(int)].JML normal_behavior operation contract.0") (modality "box"))
               (branch "Post (get)"
                   (builtin "One Step Simplification" (formula "36"))
                   (builtin "One Step Simplification" (formula "32"))
                  (rule "andLeft" (formula "32"))
                  (rule "andLeft" (formula "33"))
                  (rule "andLeft" (formula "34"))
                  (rule "andLeft" (formula "34"))
                  (rule "eqSymm" (formula "34"))
                  (rule "assignment" (formula "39") (term "1"))
                   (builtin "One Step Simplification" (formula "39"))
                  (rule "castedGetAny" (formula "34") (term "0"))
                  (rule "pullOutSelect" (formula "34") (term "0,0") (inst "selectSK=List_seq_3"))
                  (rule "simplifySelectOfAnonEQ" (formula "34") (ifseqformula "32"))
                   (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "38")))
                  (rule "replaceKnownSelect_taclet0000_8" (formula "34") (term "2,0"))
                  (rule "ifthenelse_negated" (formula "34") (term "0"))
                  (rule "applyEqRigid" (formula "34") (term "1,0") (ifseqformula "27"))
                  (rule "pullOutSelect" (formula "34") (term "0,0,0") (inst "selectSK=java_lang_Object_created__2"))
                  (rule "simplifySelectOfAnonEQ" (formula "34") (ifseqformula "24"))
                   (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "39")))
                  (rule "replaceKnownSelect_taclet0000_10" (formula "34") (term "2,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "34") (term "2,0"))
                  (rule "replaceKnownSelect_taclet0000_10" (formula "34") (term "0,0,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet0000_11" (formula "34") (term "0,0,0,0"))
                  (rule "replace_known_left" (formula "34") (term "0,0,0") (ifseqformula "10"))
                   (builtin "One Step Simplification" (formula "34"))
                  (rule "applyEqReverse" (formula "35") (term "0,0,0") (ifseqformula "34"))
                  (rule "hideAuxiliaryEq" (formula "34"))
                  (rule "replace_known_left" (formula "34") (term "0,0") (ifseqformula "10"))
                   (builtin "One Step Simplification" (formula "34"))
                  (rule "applyEqReverse" (formula "35") (term "0,0") (ifseqformula "34"))
                  (rule "hideAuxiliaryEq" (formula "34"))
                  (rule "getOfSeqConcat" (formula "34") (term "0"))
                   (builtin "One Step Simplification" (formula "34"))
                  (rule "castDel" (formula "34") (term "1,0"))
                  (rule "sub_literals" (formula "34") (term "1,2,0"))
                  (rule "less_literals" (formula "34") (term "0,0"))
                   (builtin "One Step Simplification" (formula "34"))
                  (rule "eqSymm" (formula "34"))
                  (rule "applyEq" (formula "39") (term "0,1,0") (ifseqformula "34"))
                  (rule "equality_comparison_simple" (formula "39") (term "1"))
                   (builtin "One Step Simplification" (formula "39"))
                  (rule "methodCallEmpty" (formula "39") (term "1"))
                  (rule "emptyModality" (formula "39") (term "1"))
                   (builtin "One Step Simplification" (formula "39"))
                  (rule "allRight" (formula "39") (inst "sk=f_0"))
                  (rule "allRight" (formula "39") (inst "sk=o_0"))
                  (rule "orRight" (formula "39"))
                  (rule "eqSymm" (formula "40"))
                  (rule "pullOutSelect" (formula "39") (term "0,0,1") (inst "selectSK=java_lang_Object_created__3"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "25"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "pullOutSelect" (formula "41") (term "0") (inst "selectSK=f_0_0"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "34"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "replaceKnownSelect_taclet020000_16" (formula "1") (term "0,0,1,0,0"))
                  (rule "eqSymm" (formula "42"))
                  (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "41"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "42")))
                  (rule "closeFalse" (formula "1"))
               )
               (branch "Exceptional Post (get)"
                   (builtin "One Step Simplification" (formula "36"))
                   (builtin "One Step Simplification" (formula "32"))
                  (rule "andLeft" (formula "32"))
                  (rule "andLeft" (formula "33"))
                  (rule "andLeft" (formula "34"))
                  (rule "andLeft" (formula "33"))
                  (rule "andLeft" (formula "35"))
                  (rule "notLeft" (formula "33"))
                  (rule "close" (formula "37") (ifseqformula "36"))
               )
               (branch "Pre (get)"
                   (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "30")))
                  (rule "wellFormedAnonEQ" (formula "34") (term "0,1") (ifseqformula "24"))
                  (rule "wellFormedAnonEQ" (formula "34") (term "0,0,1") (ifseqformula "16"))
                  (rule "wellFormedAnonEQ" (formula "34") (term "0,0,0,1") (ifseqformula "8"))
                  (rule "selectOfAnonEQ" (formula "34") (term "0,1,1,0") (ifseqformula "24"))
                   (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "2")) (ifInst ""  (formula "7")) (ifInst ""  (formula "15")) (ifInst ""  (formula "23")) (ifInst ""  (formula "32")))
                  (rule "selectOfAnonEQ" (formula "34") (term "2,0,1,1,0") (ifseqformula "16"))
                   (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "32")))
                  (rule "selectCreatedOfAnonEQ" (formula "34") (term "0,0,1,0,0,1,1,0") (ifseqformula "16"))
                   (builtin "One Step Simplification" (formula "34"))
                  (rule "selectOfAnonEQ" (formula "34") (term "2,2,0,1,1,0") (ifseqformula "8"))
                   (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "32")) (ifInst ""  (formula "31")))
                  (rule "selectOfAnonEQ" (formula "34") (term "0,0,0,1,0,0,1,1,0") (ifseqformula "8"))
                   (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "32")) (ifInst ""  (formula "31")) (ifInst ""  (formula "10")))
                  (rule "selectOfAnonEQ" (formula "34") (term "0,0,1,0,2,0,1,1,0") (ifseqformula "8"))
                   (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "32")) (ifInst ""  (formula "31")) (ifInst ""  (formula "10")))
                  (rule "selectOfAnonEQ" (formula "34") (term "0,1") (ifseqformula "24"))
                   (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "32")))
                  (rule "ifthenelse_negated" (formula "34") (term "0,1"))
                  (rule "selectCreatedOfAnonEQ" (formula "34") (term "0,0,0,1") (ifseqformula "16"))
                   (builtin "One Step Simplification" (formula "34"))
                  (rule "selectOfAnonEQ" (formula "34") (term "1,0,1") (ifseqformula "16"))
                   (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "32")))
                  (rule "ifthenelse_negated" (formula "34") (term "1,0,1"))
                  (rule "selectOfAnonEQ" (formula "34") (term "0,0,0,0,1") (ifseqformula "8"))
                   (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "32")) (ifInst ""  (formula "31")) (ifInst ""  (formula "10")))
                  (rule "selectCreatedOfAnonEQ" (formula "34") (term "0,0,0,1") (ifseqformula "8"))
                   (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "31")) (ifInst ""  (formula "10")))
                  (rule "selectCreatedOfAnonEQ" (formula "34") (term "0,1") (ifseqformula "8"))
                   (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "31")) (ifInst ""  (formula "10")))
                   (builtin "SMTRule" (ifInst ""  (formula "34")) (ifInst ""  (formula "26")) (ifInst ""  (formula "19")) (solverType "Z3"))
               )
               (branch "Null reference (l = null)"
                   (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "32")))
                  (rule "closeTrue" (formula "34"))
               )
            )
         )
         (branch "Exceptional Post (add)"
             (builtin "One Step Simplification" (formula "27"))
             (builtin "One Step Simplification" (formula "23"))
            (rule "replaceKnownSelect_taclet00_6" (formula "23") (term "1,0,0"))
            (rule "replaceKnownSelect_taclet00_7" (formula "23") (term "0,1,0,0,1,1"))
            (rule "replaceKnownSelect_taclet00_6" (formula "23") (term "0,1,0,1,0,1,1"))
            (rule "andLeft" (formula "23"))
            (rule "andLeft" (formula "24"))
            (rule "andLeft" (formula "25"))
            (rule "andLeft" (formula "24"))
            (rule "andLeft" (formula "26"))
            (rule "notLeft" (formula "24"))
            (rule "close" (formula "28") (ifseqformula "27"))
         )
         (branch "Pre (add)"
             (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "21")))
            (rule "wellFormedAnonEQ" (formula "25") (term "0") (ifseqformula "15"))
            (rule "wellFormedAnonEQ" (formula "25") (term "0,0") (ifseqformula "7"))
            (rule "selectCreatedOfAnonEQ" (formula "25") (term "0,1") (ifseqformula "15"))
             (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "1")) (ifInst ""  (formula "6")) (ifInst ""  (formula "14")))
            (rule "orRight" (formula "25"))
            (rule "selectCreatedOfAnonEQ" (formula "25") (term "0") (ifseqformula "7"))
             (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "22")) (ifInst ""  (formula "9")))
            (rule "closeTrue" (formula "25"))
         )
         (branch "Null reference (l = null)"
             (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "23")))
            (rule "closeTrue" (formula "25"))
         )
      )
      (branch "Assertion (l.get(0) == 23) Terminates And OK"
          (builtin "One Step Simplification" (formula "25"))
         (rule "compound_equality_comparison_1" (formula "25") (term "1") (inst "#v0=i"))
         (rule "variableDeclarationAssign" (formula "25") (term "1"))
         (rule "variableDeclaration" (formula "25") (term "1") (newnames "i"))
          (builtin "Use Operation Contract" (formula "25") (newnames "heapBefore_get,result_get,exc_2,heapAfter_get,anon_heap_get") (contract "List[List::get(int)].JML normal_behavior operation contract.0") (modality "diamond"))
         (branch "Post (get)"
             (builtin "One Step Simplification" (formula "27"))
             (builtin "One Step Simplification" (formula "23"))
            (rule "andLeft" (formula "23"))
            (rule "andLeft" (formula "24"))
            (rule "andLeft" (formula "25"))
            (rule "andLeft" (formula "25"))
            (rule "eqSymm" (formula "25"))
            (rule "assignment" (formula "30") (term "1"))
             (builtin "One Step Simplification" (formula "30"))
            (rule "castedGetAny" (formula "25") (term "0"))
            (rule "pullOutSelect" (formula "25") (term "0,0") (inst "selectSK=List_seq_2"))
            (rule "simplifySelectOfAnonEQ" (formula "25") (ifseqformula "23"))
             (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "29")))
            (rule "replaceKnownSelect_taclet00_7" (formula "25") (term "2,0"))
            (rule "ifthenelse_negated" (formula "25") (term "0"))
            (rule "applyEqRigid" (formula "25") (term "1,0") (ifseqformula "18"))
            (rule "pullOutSelect" (formula "25") (term "0,0,0") (inst "selectSK=java_lang_Object_created__1"))
            (rule "simplifySelectOfAnonEQ" (formula "25") (ifseqformula "15"))
             (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "30")))
            (rule "replaceKnownSelect_taclet0_4" (formula "25") (term "2,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0_5" (formula "25") (term "2,0"))
            (rule "replaceKnownSelect_taclet0_4" (formula "25") (term "0,0,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0_5" (formula "25") (term "0,0,0,0"))
            (rule "replace_known_left" (formula "25") (term "0,0,0") (ifseqformula "9"))
             (builtin "One Step Simplification" (formula "25"))
            (rule "applyEqReverse" (formula "26") (term "0,0,0") (ifseqformula "25"))
            (rule "hideAuxiliaryEq" (formula "25"))
            (rule "replace_known_left" (formula "25") (term "0,0") (ifseqformula "9"))
             (builtin "One Step Simplification" (formula "25"))
            (rule "applyEqReverse" (formula "26") (term "0,0") (ifseqformula "25"))
             (builtin "One Step Simplification" (formula "26"))
            (rule "castDel" (formula "26") (term "0"))
            (rule "hideAuxiliaryEq" (formula "25"))
            (rule "eqSymm" (formula "25"))
            (rule "applyEq" (formula "30") (term "0,1,0") (ifseqformula "25"))
            (rule "equality_comparison_simple" (formula "30") (term "1"))
             (builtin "One Step Simplification" (formula "30"))
            (rule "methodCallEmpty" (formula "30") (term "1"))
             (builtin "One Step Simplification" (formula "30"))
            (rule "emptyModality" (formula "30") (term "1"))
             (builtin "One Step Simplification" (formula "30"))
            (rule "closeTrue" (formula "30"))
         )
         (branch "Exceptional Post (get)"
             (builtin "One Step Simplification" (formula "27"))
             (builtin "One Step Simplification" (formula "23"))
            (rule "andLeft" (formula "23"))
            (rule "andLeft" (formula "24"))
            (rule "andLeft" (formula "25"))
            (rule "andLeft" (formula "24"))
            (rule "andLeft" (formula "26"))
            (rule "notLeft" (formula "24"))
            (rule "close" (formula "28") (ifseqformula "27"))
         )
         (branch "Pre (get)"
             (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "21")))
            (rule "wellFormedAnonEQ" (formula "25") (term "0,1") (ifseqformula "15"))
            (rule "wellFormedAnonEQ" (formula "25") (term "0,0,1") (ifseqformula "7"))
            (rule "selectOfAnonEQ" (formula "25") (term "0,1,1,0") (ifseqformula "15"))
             (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "1")) (ifInst ""  (formula "6")) (ifInst ""  (formula "14")) (ifInst ""  (formula "23")))
            (rule "selectOfAnonEQ" (formula "25") (term "2,0,1,1,0") (ifseqformula "7"))
             (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "23")) (ifInst ""  (formula "22")))
            (rule "selectOfAnonEQ" (formula "25") (term "0,1") (ifseqformula "15"))
             (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "23")))
            (rule "ifthenelse_negated" (formula "25") (term "0,1"))
            (rule "selectOfAnonEQ" (formula "25") (term "1,0,1") (ifseqformula "7"))
             (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "23")) (ifInst ""  (formula "22")))
            (rule "selectCreatedOfAnonEQ" (formula "25") (term "0,0,0,1") (ifseqformula "7"))
             (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "22")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")))
            (rule "selectOfAnonEQ" (formula "25") (term "0,0,1,0,0,1,1") (ifseqformula "7"))
             (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "23")) (ifInst ""  (formula "22")) (ifInst ""  (formula "9")))
             (builtin "SMTRule" (ifInst ""  (formula "25")) (ifInst ""  (formula "17")) (solverType "Z3"))
         )
         (branch "Null reference (l = null)"
             (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "23")))
            (rule "closeTrue" (formula "25"))
         )
      )
      (branch "Assertion (l.get(0) == 23) No Effects"
          (builtin "One Step Simplification" (formula "26"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "variableDeclarationAssign" (formula "26") (term "1"))
         (rule "variableDeclaration" (formula "26") (term "1") (newnames "b"))
         (rule "applyEqRigid" (formula "26") (term "0,0,0,1,0,0,0,0,1") (ifseqformula "1"))
         (rule "applyEqRigid" (formula "26") (term "0,0,1,0,0,0,1") (ifseqformula "1"))
         (rule "compound_equality_comparison_1" (formula "26") (term "1") (inst "#v0=i"))
         (rule "variableDeclarationAssign" (formula "26") (term "1"))
         (rule "variableDeclaration" (formula "26") (term "1") (newnames "i"))
          (builtin "Use Operation Contract" (formula "26") (newnames "heapBefore_get,result_get,exc_2,heapAfter_get,anon_heap_get") (contract "List[List::get(int)].JML normal_behavior operation contract.0") (modality "box"))
         (branch "Post (get)"
             (builtin "One Step Simplification" (formula "24"))
             (builtin "One Step Simplification" (formula "28"))
            (rule "andLeft" (formula "24"))
            (rule "andLeft" (formula "25"))
            (rule "andLeft" (formula "26"))
            (rule "andLeft" (formula "26"))
            (rule "eqSymm" (formula "26"))
            (rule "assignment" (formula "31") (term "1"))
             (builtin "One Step Simplification" (formula "31"))
            (rule "castedGetAny" (formula "26") (term "0"))
            (rule "pullOutSelect" (formula "26") (term "0,0") (inst "selectSK=List_seq_2"))
            (rule "simplifySelectOfAnonEQ" (formula "26") (ifseqformula "24"))
             (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "30")))
            (rule "replaceKnownSelect_taclet00_7" (formula "26") (term "2,0"))
            (rule "ifthenelse_negated" (formula "26") (term "0"))
            (rule "applyEq" (formula "26") (term "1,0") (ifseqformula "19"))
            (rule "pullOutSelect" (formula "26") (term "0,0,0") (inst "selectSK=java_lang_Object_created__1"))
            (rule "simplifySelectOfAnonEQ" (formula "26") (ifseqformula "16"))
             (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "31")))
            (rule "replaceKnownSelect_taclet0_4" (formula "26") (term "2,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0_5" (formula "26") (term "2,0"))
            (rule "replaceKnownSelect_taclet0_4" (formula "26") (term "0,0,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0_5" (formula "26") (term "0,0,0,0"))
            (rule "replace_known_left" (formula "26") (term "0,0,0") (ifseqformula "10"))
             (builtin "One Step Simplification" (formula "26"))
            (rule "applyEqReverse" (formula "27") (term "0,0,0") (ifseqformula "26"))
            (rule "hideAuxiliaryEq" (formula "26"))
            (rule "replace_known_left" (formula "26") (term "0,0") (ifseqformula "10"))
             (builtin "One Step Simplification" (formula "26"))
            (rule "applyEqReverse" (formula "27") (term "0,0") (ifseqformula "26"))
             (builtin "One Step Simplification" (formula "27"))
            (rule "castDel" (formula "27") (term "0"))
            (rule "hideAuxiliaryEq" (formula "26"))
            (rule "eqSymm" (formula "26"))
            (rule "applyEq" (formula "31") (term "0,1,0") (ifseqformula "26"))
            (rule "equality_comparison_simple" (formula "31") (term "1"))
             (builtin "One Step Simplification" (formula "31"))
            (rule "methodCallEmpty" (formula "31") (term "1"))
            (rule "emptyModality" (formula "31") (term "1"))
             (builtin "One Step Simplification" (formula "31"))
            (rule "allRight" (formula "31") (inst "sk=f_0"))
            (rule "allRight" (formula "31") (inst "sk=o_0"))
            (rule "orRight" (formula "31"))
            (rule "eqSymm" (formula "32"))
            (rule "pullOutSelect" (formula "31") (term "0,0,1") (inst "selectSK=java_lang_Object_created__2"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "17"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "pullOutSelect" (formula "33") (term "0") (inst "selectSK=f_0_0"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "26"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "replaceKnownSelect_taclet0200_12" (formula "1") (term "0,0,1,0,0"))
            (rule "eqSymm" (formula "34"))
            (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "33"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "34")))
            (rule "closeFalse" (formula "1"))
         )
         (branch "Exceptional Post (get)"
             (builtin "One Step Simplification" (formula "28"))
             (builtin "One Step Simplification" (formula "24"))
            (rule "andLeft" (formula "24"))
            (rule "andLeft" (formula "25"))
            (rule "andLeft" (formula "26"))
            (rule "andLeft" (formula "25"))
            (rule "andLeft" (formula "27"))
            (rule "notLeft" (formula "25"))
            (rule "close" (formula "29") (ifseqformula "28"))
         )
         (branch "Pre (get)"
             (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "22")))
            (rule "wellFormedAnonEQ" (formula "26") (term "0,1") (ifseqformula "16"))
            (rule "wellFormedAnonEQ" (formula "26") (term "0,0,1") (ifseqformula "8"))
            (rule "selectCreatedOfAnonEQ" (formula "26") (term "0,1,1") (ifseqformula "16"))
             (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "2")) (ifInst ""  (formula "7")) (ifInst ""  (formula "15")))
            (rule "selectCreatedOfAnonEQ" (formula "26") (term "0,0,1") (ifseqformula "8"))
             (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "23")) (ifInst ""  (formula "10")))
            (rule "selectOfAnonEQ" (formula "26") (term "0,1,1") (ifseqformula "16"))
             (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "24")))
            (rule "selectOfAnonEQ" (formula "26") (term "2,0,1,1") (ifseqformula "8"))
             (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "24")) (ifInst ""  (formula "23")))
            (rule "selectCreatedOfAnonEQ" (formula "26") (term "0,0,1,0,0,1,1") (ifseqformula "8"))
             (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "23")) (ifInst ""  (formula "10")))
             (builtin "SMTRule" (ifInst ""  (formula "26")) (ifInst ""  (formula "18")) (solverType "Z3"))
         )
         (branch "Null reference (l = null)"
             (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "24")))
            (rule "closeTrue" (formula "26"))
         )
      )
   )
   (branch "Exceptional Post (add)"
       (builtin "One Step Simplification" (formula "19"))
       (builtin "One Step Simplification" (formula "15"))
      (rule "replaceKnownSelect_taclet0_2" (formula "15") (term "1,0,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet0_3" (formula "15") (term "1,0,0"))
      (rule "replaceKnownSelect_taclet0_0" (formula "15") (term "0,1,0,0,1,1"))
      (rule "replaceKnownAuxiliaryConstant_taclet0_1" (formula "15") (term "0,1,0,0,1,1"))
      (rule "replaceKnownSelect_taclet0_2" (formula "15") (term "0,1,0,1,0,1,1"))
      (rule "replaceKnownAuxiliaryConstant_taclet0_3" (formula "15") (term "0,1,0,1,0,1,1"))
      (rule "andLeft" (formula "15"))
      (rule "andLeft" (formula "16"))
      (rule "andLeft" (formula "16"))
      (rule "andLeft" (formula "18"))
      (rule "notLeft" (formula "16"))
      (rule "close" (formula "19") (ifseqformula "18"))
   )
   (branch "Pre (add)"
       (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "13")))
      (rule "wellFormedAnonEQ" (formula "17") (term "0") (ifseqformula "7"))
      (rule "selectOfAnonEQ" (formula "17") (term "0,1") (ifseqformula "7"))
       (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "1")) (ifInst ""  (formula "6")) (ifInst ""  (formula "15")) (ifInst ""  (formula "14")) (ifInst ""  (formula "9")))
      (rule "closeTrue" (formula "17"))
   )
   (branch "Null reference (l = null)"
       (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "15")))
      (rule "closeTrue" (formula "17"))
   )
)
(branch "Exceptional Post (ArrayList)"
    (builtin "One Step Simplification" (formula "9"))
    (builtin "One Step Simplification" (formula "7"))
   (rule "andLeft" (formula "7"))
   (rule "andLeft" (formula "8"))
   (rule "andLeft" (formula "8"))
   (rule "andLeft" (formula "10"))
   (rule "andLeft" (formula "8"))
   (rule "andLeft" (formula "10"))
   (rule "andLeft" (formula "12"))
   (rule "notLeft" (formula "8"))
   (rule "close" (formula "14") (ifseqformula "13"))
)
(branch "Pre (ArrayList)"
    (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "1")))
   (rule "closeTrue" (formula "7"))
)
)
}
