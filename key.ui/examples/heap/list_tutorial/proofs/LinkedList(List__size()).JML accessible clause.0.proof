\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Wed Jan 10 16:33:57 CET 2024
[Labels]UseOriginLabels=true
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_OFF
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=JavaCard-JavaCard\\:off, Strings-Strings\\:on, assertions-assertions\\:safe, bigint-bigint\\:on, floatRules-floatRules\\:strictfpOnly, initialisation-initialisation\\:disableStaticInitialisation, intRules-intRules\\:arithmeticSemanticsIgnoringOF, integerSimplificationRules-integerSimplificationRules\\:full, javaLoopTreatment-javaLoopTreatment\\:efficient, mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off, methodExpansion-methodExpansion\\:modularOnly, modelFields-modelFields\\:treatAsAxiom, moreSeqRules-moreSeqRules\\:off, permissions-permissions\\:off, programRules-programRules\\:Java, reach-reach\\:on, runtimeExceptions-runtimeExceptions\\:ban, sequences-sequences\\:on, wdChecks-wdChecks\\:off, wdOperator-wdOperator\\:L
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[Strategy]MaximumNumberOfAutomaticApplications=300
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_DELAYED
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[Strategy]Timeout=-1
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[SMTSettings]useUninterpretedMultiplication=true
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[SMTSettings]maxGenericSorts=2
[StrategyProperty]OSS_OPTIONS_KEY=OSS_ON
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\javaSource "../src";

\proofObligation "#Proof Obligation Settings
#Wed Jan 10 16:33:57 CET 2024
contract=LinkedList[List\\:\\:size()].JML accessible clause.0
name=LinkedList[List\\:\\:size()].JML accessible clause.0
class=de.uka.ilkd.key.proof.init.DependencyContractPO
";

\proof {
(keyLog "0" (keyUser "mattias" ) (keyVersion "4911758ba07017f4af60dc0314ac665c14a542d0"))

(autoModeTime "12131")

(branch "dummy ID"
 (builtin "Evaluate Query" (formula "1") (term "0,1") (newnames "callee,queryResult,res_size") (userinteraction))
(rule "notLeft" (formula "1") (userinteraction))
(rule "variableDeclaration" (formula "1") (term "1") (newnames "queryResult") (userinteraction))
 (builtin "Use Operation Contract" (formula "1") (newnames "heapBefore_size,result_size,exc,heapAfter_size,anon_heap_size") (contract "LinkedList[List::size()].JML normal_behavior operation contract.0") (modality "diamond") (userinteraction))
(branch "Post (size)"
   (rule "impRight" (formula "4") (userinteraction))
    (builtin "One Step Simplification" (formula "5") (userinteraction))
    (builtin "Evaluate Query" (formula "5") (term "1") (newnames "callee,queryResult_0,res_size_0") (userinteraction))
   (rule "notLeft" (formula "1") (userinteraction))
    (builtin "One Step Simplification" (formula "3"))
    (builtin "One Step Simplification" (formula "5"))
   (rule "replaceKnownQuery0_1" (formula "6") (term "1"))
   (rule "replaceKnownQuery_0" (formula "6") (term "0"))
   (rule "andLeft" (formula "1"))
   (rule "andLeft" (formula "4"))
   (rule "andLeft" (formula "1"))
   (rule "andLeft" (formula "6"))
   (rule "andLeft" (formula "1"))
   (rule "andLeft" (formula "8"))
   (rule "andLeft" (formula "1"))
   (rule "andLeft" (formula "9"))
   (rule "andLeft" (formula "1"))
   (rule "andLeft" (formula "1"))
   (rule "notLeft" (formula "3"))
   (rule "eqSymm" (formula "13") (term "0,0,1"))
   (rule "eqSymm" (formula "14") (term "0,0,1"))
   (rule "eqSymm" (formula "15"))
   (rule "eqSymm" (formula "10"))
   (rule "variableDeclaration" (formula "13") (term "1") (newnames "queryResult_0"))
   (rule "assignment" (formula "14") (term "1"))
    (builtin "One Step Simplification" (formula "14"))
   (rule "pullOutSelect" (formula "10") (term "0,0") (inst "selectSK=List_seq_0"))
   (rule "simplifySelectOfAnonEQ" (formula "10") (ifseqformula "8"))
    (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "13")) (ifInst ""  (formula "3")))
   (rule "applyEqReverse" (formula "11") (term "0,0") (ifseqformula "10"))
   (rule "hideAuxiliaryEq" (formula "10"))
   (rule "methodCallEmpty" (formula "14") (term "1"))
    (builtin "One Step Simplification" (formula "14"))
   (rule "emptyModality" (formula "14") (term "1"))
    (builtin "One Step Simplification" (formula "14"))
   (rule "notRight" (formula "14"))
   (rule "eqSymm" (formula "1"))
   (rule "applyEq" (formula "11") (term "1") (ifseqformula "1"))
    (builtin "Use Operation Contract" (formula "14") (newnames "heapBefore_size_0,result_size_0,exc_0,heapAfter_size_0,anon_heap_size_0") (contract "LinkedList[List::size()].JML normal_behavior operation contract.0") (modality "diamond"))
   (branch "Post (size)"
       (builtin "One Step Simplification" (formula "16"))
       (builtin "One Step Simplification" (formula "14"))
      (rule "andLeft" (formula "14"))
      (rule "andLeft" (formula "15"))
      (rule "andLeft" (formula "16"))
      (rule "andLeft" (formula "16"))
      (rule "eqSymm" (formula "16"))
      (rule "assignment" (formula "19") (term "1"))
       (builtin "One Step Simplification" (formula "19"))
      (rule "pullOutSelect" (formula "16") (term "0,0") (inst "selectSK=List_seq_1"))
      (rule "simplifySelectOfAnonEQ" (formula "16") (ifseqformula "14"))
       (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "19")))
      (rule "ifthenelse_negated" (formula "16") (term "0"))
      (rule "pullOutSelect" (formula "16") (term "1,0") (inst "selectSK=List_seq_2"))
      (rule "simplifySelectOfAnon" (formula "16"))
       (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "20")) (ifInst ""  (formula "4")))
      (rule "elementOfSetMinus" (formula "16") (term "0,0"))
       (builtin "One Step Simplification" (formula "16"))
      (rule "ifthenelse_negated" (formula "16") (term "0"))
      (rule "selectCreatedOfAnonAsFormula" (formula "17") (term "0,0"))
      (rule "replace_known_left" (formula "17") (term "0,0,0") (ifseqformula "4"))
       (builtin "One Step Simplification" (formula "17"))
      (rule "applyEqReverse" (formula "18") (term "0,0") (ifseqformula "17"))
      (rule "hideAuxiliaryEq" (formula "17"))
      (rule "methodCallEmpty" (formula "20") (term "1"))
       (builtin "One Step Simplification" (formula "20"))
      (rule "emptyModality" (formula "20") (term "1"))
       (builtin "One Step Simplification" (formula "20"))
      (rule "notRight" (formula "20"))
      (rule "eqSymm" (formula "1"))
      (rule "applyEq" (formula "18") (term "1") (ifseqformula "1"))
      (rule "Class_invariant_axiom_for_LinkedList" (formula "13") (inst "i=i") (inst "j=j") (inst "i_0=i_0") (ifseqformula "20"))
       (builtin "One Step Simplification" (formula "13"))
      (rule "replaceKnownSelect_taclet0_2" (formula "13") (term "0,1,0,1"))
      (rule "replaceKnownAuxiliaryConstant_taclet0_3" (formula "13") (term "0,1,0,1"))
      (rule "replaceKnownSelect_taclet0_2" (formula "13") (term "0,0,1,1,0,0,1,0,1,0,0,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet0_3" (formula "13") (term "0,0,1,1,0,0,1,0,1,0,0,0"))
      (rule "andLeft" (formula "13"))
      (rule "andLeft" (formula "14"))
      (rule "andLeft" (formula "13"))
      (rule "andLeft" (formula "13"))
      (rule "andLeft" (formula "13"))
      (rule "andLeft" (formula "13"))
      (rule "andLeft" (formula "13"))
      (rule "eqSymm" (formula "20"))
      (rule "eqSymm" (formula "19"))
      (rule "eqSymm" (formula "18"))
      (rule "eqSymm" (formula "17"))
      (rule "eqSymm" (formula "16") (term "1,1,0,1,0,1,0"))
      (rule "eqSymm" (formula "16") (term "1,1,0"))
      (rule "eqSymm" (formula "16") (term "0,1,0,1,0,1,0"))
      (rule "eqSymm" (formula "15"))
      (rule "polySimp_elimSub" (formula "18") (term "1,0,2,0"))
      (rule "mul_literals" (formula "18") (term "1,1,0,2,0"))
      (rule "polySimp_elimSub" (formula "16") (term "1,0,0,1,1,0"))
      (rule "mul_literals" (formula "16") (term "1,1,0,0,1,1,0"))
      (rule "polySimp_addComm0" (formula "16") (term "1,0,2,0,1,1,0"))
      (rule "polySimp_addComm0" (formula "18") (term "1,0,2,0"))
      (rule "polySimp_addComm0" (formula "16") (term "1,0,0,1,1,0"))
      (rule "castedGetAny" (formula "16") (term "1,0,1,0,0,1,0"))
      (rule "eqSymm" (formula "16") (term "1,0,0,1,0"))
      (rule "castedGetAny" (formula "16") (term "0,0,0,0,0,1,0"))
      (rule "subsetSingletonLeft" (formula "14"))
      (rule "subsetSingletonLeft" (formula "13"))
      (rule "castedGetAny" (formula "17") (term "2,0"))
      (rule "castedGetAny" (formula "16") (term "1,1,1,1,0"))
      (rule "castedGetAny" (formula "16") (term "0,0,1,0,1,0,1,0"))
      (rule "castedGetAny" (formula "16") (term "1,0,1,0,1,0,1,0"))
      (rule "castedGetAny" (formula "15") (term "0,1,0,1,0"))
      (rule "castedGetAny" (formula "16") (term "2,0,1,1,0"))
      (rule "castedGetAny" (formula "18") (term "2,0"))
      (rule "castedGetAny" (formula "16") (term "0,1,0,0,1,0"))
      (rule "eqSymm" (formula "16") (term "1,0,0,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0,1,0,1,0"))
      (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0,1,0,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0,1,0"))
      (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0,1,0,1,0"))
      (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0,1,0"))
      (rule "applyEq" (formula "12") (term "0") (ifseqformula "19"))
      (rule "apply_eq_monomials" (formula "16") (term "1,0,0,1,0,0") (ifseqformula "12"))
      (rule "polySimp_rightDist" (formula "16") (term "0,1,0,0,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "16") (term "1,0,1,0,0,1,0,0"))
      (rule "polySimp_pullOutFactor0b" (formula "16") (term "1,0,0,1,0,0"))
      (rule "add_literals" (formula "16") (term "1,1,1,0,0,1,0,0"))
      (rule "times_zero_1" (formula "16") (term "1,1,0,0,1,0,0"))
      (rule "add_zero_right" (formula "16") (term "1,0,0,1,0,0"))
      (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
      (rule "apply_eq_monomials" (formula "16") (term "1,0,0,1,0,0,1,0,1,0") (ifseqformula "12"))
      (rule "polySimp_rightDist" (formula "16") (term "0,1,0,0,1,0,0,1,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "16") (term "1,0,1,0,0,1,0,0,1,0,1,0"))
      (rule "polySimp_elimOne" (formula "16") (term "1,0,1,0,0,1,0,0,1,0,1,0"))
      (rule "polySimp_pullOutFactor1b" (formula "16") (term "1,0,0,1,0,0,1,0,1,0"))
      (rule "add_literals" (formula "16") (term "1,1,1,0,0,1,0,0,1,0,1,0"))
      (rule "times_zero_1" (formula "16") (term "1,1,0,0,1,0,0,1,0,1,0"))
      (rule "add_zero_right" (formula "16") (term "1,0,0,1,0,0,1,0,1,0"))
      (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0,1,0,1,0"))
      (rule "apply_eq_monomials" (formula "15") (term "1,0,0,1,0,0,1,0") (ifseqformula "12"))
      (rule "polySimp_rightDist" (formula "15") (term "0,1,0,0,1,0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "15") (term "1,0,1,0,0,1,0,0,1,0"))
      (rule "polySimp_elimOne" (formula "15") (term "1,0,1,0,0,1,0,0,1,0"))
      (rule "polySimp_pullOutFactor1b" (formula "15") (term "1,0,0,1,0,0,1,0"))
      (rule "add_literals" (formula "15") (term "1,1,1,0,0,1,0,0,1,0"))
      (rule "times_zero_1" (formula "15") (term "1,1,0,0,1,0,0,1,0"))
      (rule "add_zero_right" (formula "15") (term "1,0,0,1,0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0,1,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
      (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
      (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0,1,0,1,0"))
      (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0,1,0,1,0"))
      (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0,1,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0,1,0,1,0"))
      (rule "mul_literals" (formula "16") (term "0,1,1,0,0,1,0,1,0"))
      (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0,1,0,1,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0,1,0"))
      (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0,1,0"))
      (rule "mul_literals" (formula "15") (term "0,1,1,0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0,1,0"))
      (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0,1,0"))
      (rule "elementOfUnionEQ" (formula "14") (ifseqformula "15"))
       (builtin "One Step Simplification" (formula "14"))
      (rule "true_left" (formula "14"))
      (rule "elementOfUnionEQ" (formula "13") (ifseqformula "14"))
       (builtin "One Step Simplification" (formula "13"))
      (rule "true_left" (formula "13"))
      (rule "pullOutSelect" (formula "18") (term "1") (inst "selectSK=LinkedList_size_0"))
      (rule "applyEq" (formula "16") (term "1,1,2,0") (ifseqformula "18"))
      (rule "applyEq" (formula "16") (term "0,0,0") (ifseqformula "18"))
      (rule "applyEq" (formula "12") (term "0") (ifseqformula "18"))
      (rule "applyEq" (formula "15") (term "0,0,0") (ifseqformula "18"))
      (rule "applyEq" (formula "14") (term "1,1,0,0,1,1,0") (ifseqformula "18"))
      (rule "applyEq" (formula "17") (term "1") (ifseqformula "18"))
      (rule "simplifySelectOfAnonEQ" (formula "18") (ifseqformula "10"))
       (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "26")) (ifInst ""  (formula "5")))
      (rule "applyEqReverse" (formula "18") (term "1") (ifseqformula "17"))
      (rule "applyEqReverse" (formula "16") (term "0,0,0") (ifseqformula "17"))
      (rule "applyEqReverse" (formula "15") (term "0,0,0") (ifseqformula "17"))
      (rule "applyEqReverse" (formula "14") (term "1,1,0,0,1,1,0") (ifseqformula "17"))
      (rule "applyEqReverse" (formula "12") (term "0") (ifseqformula "17"))
      (rule "applyEqReverse" (formula "16") (term "1,1,2,0") (ifseqformula "17"))
      (rule "applyEqReverse" (formula "19") (term "1") (ifseqformula "17"))
      (rule "hideAuxiliaryEq" (formula "17"))
      (rule "eqSymm" (formula "17"))
      (rule "applyEq" (formula "16") (term "0,0,0") (ifseqformula "12"))
      (rule "applyEq" (formula "15") (term "0,0,0") (ifseqformula "12"))
      (rule "applyEq" (formula "12") (term "0") (ifseqformula "17"))
      (rule "applyEq" (formula "16") (term "1,1,2,0") (ifseqformula "17"))
      (rule "applyEq" (formula "16") (term "1,1,2,0") (ifseqformula "12"))
      (rule "applyEq" (formula "14") (term "1,1,0,0,1,1,0") (ifseqformula "17"))
      (rule "applyEq" (formula "18") (term "1") (ifseqformula "17"))
      (rule "applyEq" (formula "17") (term "1") (ifseqformula "12"))
      (rule "applyEq" (formula "14") (term "1,1,0,0,1,1,0") (ifseqformula "12"))
      (rule "applyEq" (formula "18") (term "1") (ifseqformula "12"))
      (rule "pullOutSelect" (formula "18") (term "0,0") (inst "selectSK=LinkedList_nodeseq_0"))
      (rule "applyEq" (formula "14") (term "0,1,0,1,0,0,1,0") (ifseqformula "18"))
      (rule "applyEq" (formula "14") (term "0,0,0,0,0,0,1,0") (ifseqformula "18"))
      (rule "applyEq" (formula "14") (term "0,1,0,1,0,1,0,1,0") (ifseqformula "18"))
      (rule "applyEq" (formula "14") (term "0,0,0,1,0,1,0,1,0") (ifseqformula "18"))
      (rule "applyEq" (formula "16") (term "0,2,0") (ifseqformula "18"))
      (rule "applyEq" (formula "14") (term "0,2,0,1,1,0") (ifseqformula "18"))
      (rule "applyEq" (formula "15") (term "0,2,0") (ifseqformula "18"))
      (rule "applyEq" (formula "13") (term "0,0,1,0,1,0") (ifseqformula "18"))
      (rule "applyEq" (formula "14") (term "0,1,1,1,1,0") (ifseqformula "18"))
      (rule "simplifySelectOfAnonEQ" (formula "18") (ifseqformula "10"))
       (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "26")) (ifInst ""  (formula "5")))
      (rule "applyEqReverse" (formula "14") (term "0,1,0,1,0,0,1,0") (ifseqformula "18"))
      (rule "applyEqReverse" (formula "19") (term "0,0") (ifseqformula "18"))
      (rule "applyEqReverse" (formula "14") (term "0,0,0,0,0,0,1,0") (ifseqformula "18"))
      (rule "applyEqReverse" (formula "14") (term "0,1,0,1,0,1,0,1,0") (ifseqformula "18"))
      (rule "applyEqReverse" (formula "14") (term "0,0,0,1,0,1,0,1,0") (ifseqformula "18"))
      (rule "applyEqReverse" (formula "16") (term "0,2,0") (ifseqformula "18"))
      (rule "applyEqReverse" (formula "14") (term "0,2,0,1,1,0") (ifseqformula "18"))
      (rule "applyEqReverse" (formula "15") (term "0,2,0") (ifseqformula "18"))
      (rule "applyEqReverse" (formula "13") (term "0,0,1,0,1,0") (ifseqformula "18"))
      (rule "applyEqReverse" (formula "14") (term "0,1,1,1,1,0") (ifseqformula "18"))
      (rule "hideAuxiliaryEq" (formula "18"))
      (rule "pullOutSelect" (formula "16") (term "1") (inst "selectSK=LinkedList_last_0"))
      (rule "simplifySelectOfAnonEQ" (formula "16") (ifseqformula "10"))
       (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "26")) (ifInst ""  (formula "5")))
      (rule "applyEqReverse" (formula "17") (term "1") (ifseqformula "16"))
      (rule "hideAuxiliaryEq" (formula "16"))
      (rule "pullOutSelect" (formula "15") (term "1") (inst "selectSK=LinkedList_first_0"))
      (rule "simplifySelectOfAnonEQ" (formula "15") (ifseqformula "10"))
       (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "26")) (ifInst ""  (formula "5")))
      (rule "applyEqReverse" (formula "16") (term "1") (ifseqformula "15"))
      (rule "hideAuxiliaryEq" (formula "15"))
      (rule "pullOutSelect" (formula "13") (term "1") (inst "selectSK=List_footprint_0"))
      (rule "simplifySelectOfAnonEQ" (formula "13") (ifseqformula "10"))
       (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "26")) (ifInst ""  (formula "5")))
      (rule "applyEqReverse" (formula "14") (term "1") (ifseqformula "13"))
      (rule "hideAuxiliaryEq" (formula "13"))
      (rule "elementOfUnionEQ" (formula "22") (term "0,0") (ifseqformula "13"))
       (builtin "One Step Simplification" (formula "22"))
      (rule "applyEqReverse" (formula "23") (term "0,0") (ifseqformula "22"))
      (rule "hideAuxiliaryEq" (formula "22"))
      (rule "applyEq" (formula "17") (term "0") (ifseqformula "22"))
      (rule "close" (formula "25") (ifseqformula "17"))
   )
   (branch "Exceptional Post (size)"
       (builtin "One Step Simplification" (formula "16"))
       (builtin "One Step Simplification" (formula "14"))
      (rule "andLeft" (formula "14"))
      (rule "andLeft" (formula "15"))
      (rule "andLeft" (formula "15"))
      (rule "andLeft" (formula "17"))
      (rule "notLeft" (formula "15"))
      (rule "close" (formula "18") (ifseqformula "17"))
   )
   (branch "Pre (size)"
       (builtin "One Step Simplification" (formula "14") (userinteraction))
      (rule "andRight" (formula "14") (userinteraction))
      (branch "Case 1"
          (builtin "Use Dependency Contract" (formula "14") (ifInst ""  (formula "7")) (contract "LinkedList[java.lang.Object::<inv>()].JML accessible clause.0") (userinteraction))
         (rule "wellFormedAnon" (formula "13") (term "1,1,0,0,0"))
         (rule "replace_known_left" (formula "13") (term "0,1,0,0,0") (ifseqformula "2"))
          (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "14")) (ifInst ""  (formula "4")) (ifInst ""  (formula "2")) (ifInst ""  (formula "3")) (ifInst ""  (formula "7")) (ifInst ""  (formula "15")) (ifInst ""  (formula "7")))
         (rule "notLeft" (formula "13"))
         (rule "disjointDefinition" (formula "13"))
          (builtin "One Step Simplification" (formula "13"))
         (rule "closeTrue" (formula "13"))
      )
      (branch "Case 2"
         (rule "wellFormedAnon" (formula "14") (term "0"))
         (rule "replace_known_left" (formula "14") (term "1,0") (ifseqformula "3"))
          (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "2")))
         (rule "selectCreatedOfAnonAsFormula" (formula "14"))
         (rule "orRight" (formula "14"))
         (rule "close" (formula "14") (ifseqformula "4"))
      )
   )
   (branch "Null reference (callee = null)"
       (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "13")))
      (rule "closeTrue" (formula "14"))
   )
)
(branch "Exceptional Post (size)"
    (builtin "One Step Simplification" (formula "2"))
    (builtin "One Step Simplification" (formula "4"))
    (builtin "One Step Simplification" (formula "3"))
   (rule "replaceKnownQuery_0" (formula "4") (term "0,1"))
   (rule "andLeft" (formula "2"))
   (rule "impRight" (formula "5"))
   (rule "andLeft" (formula "4"))
   (rule "andLeft" (formula "1"))
   (rule "andLeft" (formula "6"))
   (rule "andLeft" (formula "5"))
   (rule "andLeft" (formula "1"))
   (rule "andLeft" (formula "8"))
   (rule "notLeft" (formula "6"))
   (rule "close" (formula "10") (ifseqformula "9"))
)
(branch "Pre (size)"
    (builtin "One Step Simplification" (formula "2"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "replaceKnownQuery_0" (formula "2") (term "0,1"))
   (rule "impRight" (formula "2"))
   (rule "andLeft" (formula "1"))
   (rule "andLeft" (formula "1"))
   (rule "andLeft" (formula "1"))
   (rule "andLeft" (formula "1"))
   (rule "andLeft" (formula "1"))
   (rule "andLeft" (formula "1"))
   (rule "notLeft" (formula "3"))
   (rule "eqSymm" (formula "9"))
   (rule "replace_known_left" (formula "8") (term "0,1") (ifseqformula "1"))
    (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "6")) (ifInst ""  (formula "3")))
   (rule "closeTrue" (formula "8"))
)
(branch "Null reference (callee = null)"
    (builtin "One Step Simplification" (formula "2"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "replaceKnownQuery_0" (formula "2") (term "0,1"))
   (rule "notRight" (formula "1"))
   (rule "impRight" (formula "2"))
   (rule "andLeft" (formula "1"))
   (rule "andLeft" (formula "1"))
   (rule "andLeft" (formula "1"))
   (rule "andLeft" (formula "1"))
   (rule "andLeft" (formula "1"))
   (rule "andLeft" (formula "1"))
   (rule "notLeft" (formula "3"))
   (rule "close" (formula "8") (ifseqformula "7"))
)
)
}
