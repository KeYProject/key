/*
Normal assignment in loop. Loop invariant generated by us (not by predicate abstraction).
There is no aliasing so it supposed to be closed
Current State: Closed.
*/


\predicates{
  
}

\programVariables {
  int[] array1;
  int[] array2;
  int i;
  int v;
}

\problem {
 /*  loop invariant by us: i>=0 & i<=array1.length & (\forall int x; (x>=0 & x < i -> array1[x] = array2[x]))
     loop invariant by Predicate Abstraction: ?
     modifies: allFields(array1)
     variant: array1.length - i
  */
  
  array1!=null & array2!=null & wellFormed(heap) & noW(allFields(array1)) & noRaW(allFields(array1)) & 
  array1.length=array2.length 
  -> {i:=0} \<{ 
                  while(i<array1.length){
   					array1[i] = array2[i];
					v = array2[i];   					
   					i++;
   				} 
   			}\>(i=array1.length & (\forall int x; (x>=0 & x < array1.length -> array1[x] = array2[x])) & noRaW(allFields(array1))) 
}