/*
Assignment to an array from itself in a loop. Loop invariant generated by us (not by predicate abstraction).
It should be closed.
Current State: Closed.
*/

\predicates{
  
}

\programVariables {
  int[] array;
  Heap oldHeap;
  int i;
}

\problem {
 /* loop invariant:
     i>=0 & i<=array.length & (\forall int x; (x>=0 & x < i -> array[x] = old(array[x+1])))
     modifies: allFields(array)
     variant: array.length - i
  */
  array!=null & wellFormed(heap) & noW(allFields(array)) & noRaW(allFields(array)) 
   -> {i:=0 || oldHeap:=heap} \<{ 
                  while(i<array.length-1){
   					array[i]=array[i+1];
   					i++;
   				} 
   			}\>(i=array.length-1 & (\forall int x; (x>=0 & x < array.length -> array[x] = int::select(oldHeap, array, arr(x+1)))) & noRaW(allFields(array))) 
}
 