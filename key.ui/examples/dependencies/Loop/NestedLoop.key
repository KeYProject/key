\predicates{
  
}

\programVariables {
  int[][] array;
  int i;
  int j;
}



\problem {
 /* loop invariant:
     i>=0 & i<=array.length & (\forall int x; (x>=0 & x < i -> array[x] = 1))
     modifies: allFields(array)
     variant: array.length - i
  */
  array!=null & wellFormed(heap) & noW(allFields(array)) & noRaW(allFields(array)) 
   -> {i:=0 & j:=0} \<{ 
                  while(i<array[0].length){
                  	while(j<array[1].length){
   					array[i][j]=1;
   					i++;
   					j++;
   				} 
   				}
   			}\>(i=array[0].length & j=array[1].length
   			 (\forall int x; (x>=0 & x < array[0].length -> (\forall int y;(y>=0 & y<array[1].length -> array[x][y] = 1))) & noRaW(allFields(array))) 
}