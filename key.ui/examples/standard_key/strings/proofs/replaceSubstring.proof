\settings {
"#Proof-Settings-Config-File
#Wed Jul 22 10:53:37 CEST 2009
[General]SoundNotification=false
[View]FontIndex=2
[StrategyProperty]GOALCHOOSER_OPTIONS_KEY=GOALCHOOSER_DEFAULT
[General]UseOCL=false
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_EXPAND
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_HIGH
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_NONE
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_LOW
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_LOW
[SimultaneousUpdateSimplifier]DeleteEffectLessLocations=true
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_NONE
[DecisionProcedure]Timeout=60
[View]ShowWholeTaclet=false
[General]ProofAssistant=false
[View]MaxTooltipLines=40
[General]DnDDirectionSensitive=true
[SimultaneousUpdateSimplifier]EagerSimplification=true
[General]StupidMode=true
[Strategy]Timeout=-1
[Strategy]MaximumNumberOfAutomaticApplications=500
[Libraries]Default=acc.key-false, stringRules.key-false, /Users/geilmann/.key/libraries/deprecatedRules.key-false, /Users/geilmann/.key/libraries/acc.key-false, /Users/geilmann/.key/libraries/stringRules.key-false, deprecatedRules.key-false
[StrategyProperty]QUERY_OPTIONS_KEY=QUERY_NONE
[Choice]DefaultChoices=transactions-transactions\:transactionsOn , throughout-throughout\:toutOn , assertions-assertions\:on , programRules-programRules\:Java , intRules-intRules\:arithmeticSemanticsIgnoringOF , initialisation-initialisation\:disableStaticInitialisation , transactionAbort-transactionAbort\:abortOn , nullPointerPolicy-nullPointerPolicy\:nullCheck , stringRules-stringRules\:withoutStringPool , javacard-javacard\:jcOff
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[DecisionProcedure]ActiveRule=_noname_
[General]UseJML=false
[View]HideClosedSubtrees=false
[Choice]Choices=transactions-transactions\:transactionsOn-transactions\:transactionsOff , throughout-throughout\:toutOn-throughout\:toutOff , assertions-assertions\:on-assertions\:off-assertions\:safe , programRules-programRules\:Java-programRules\:ODL , intRules-intRules\:javaSemantics-intRules\:arithmeticSemanticsIgnoringOF-intRules\:arithmeticSemanticsCheckingOF , initialisation-initialisation\:enableStaticInitialisation-initialisation\:disableStaticInitialisation , transactionAbort-transactionAbort\:abortOn-transactionAbort\:abortOff , nullPointerPolicy-nullPointerPolicy\:noNullCheck-nullPointerPolicy\:nullCheck , stringRules-stringRules\:withStringPool-stringRules\:withoutStringPool-stringRules\:platformIndependent , javacard-javacard\:jcOff-javacard\:jcOn
[View]HideIntermediateProofsteps=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
"
}


\functions {
\nonRigid CharList l_6;
\nonRigid int i_8;
\nonRigid jchar c2_9;
\nonRigid jchar c1_10;
\nonRigid int j_7;
}

\problem {
  replace(c1_10, c2_9, substring(i_8, j_7, l_6))
= \if (i_8 >= 0 & j_7 >= i_8 & j_7 <= length(l_6))
      \then (substring(i_8,
                       j_7,
                       replace(c1_10, c2_9, l_6)))
      \else (replace(c1_10,
                     c2_9,
                     substring(i_8, j_7, l_6)))

}

\proof {
(keyLog "0" (keyUser "geilmann" ) (keyVersion "342f4d7a64be81e3f32b04772bbe5fb52625e73b"))

(autoModeTime "5502")

(branch "dummy ID"
(rule "ifthenelse_split" (formula "1") (term "1") (userinteraction))
(branch " i_8 >= 0 & j_7 >= i_8 & j_7 <= length(l_6) TRUE"
   (rule "charlist_induction" (inst "phi=\\forall int i; 
  \\forall int j; 
    (   i >= 0 & j >= i & j <= length(l)
     ->   replace(c1_10, c2_9, substring(i, j, l))
        = substring(i, j, replace(c1_10, c2_9, l)))") (inst "lv=l") (inst "cv=c") (userinteraction))
   (branch " Base Case"
      (rule "hide_right" (formula "3") (userinteraction))
      (rule "hide_left" (formula "1") (userinteraction))
      (rule "allRight" (formula "1") (inst "sk=i_3") (userinteraction))
      (rule "allRight" (formula "1") (inst "sk=j_3") (userinteraction))
      (rule "impRight" (formula "1") (userinteraction))
      (rule "andLeft" (formula "1"))
      (rule "andLeft" (formula "1"))
      (rule "inEqSimp_commuteLeq" (formula "3"))
      (rule "lengthEmpty" (formula "3") (term "0"))
      (rule "inEqSimp_commuteGeq" (formula "3"))
      (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "3"))
      (rule "add_zero_right" (formula "2") (term "0"))
      (rule "polySimp_mulComm0" (formula "2") (term "0"))
      (rule "inEqSimp_invertInEq1" (formula "2"))
      (rule "polySimp_mulLiterals" (formula "2") (term "0"))
      (rule "times_zero_2" (formula "2") (term "1"))
      (rule "polySimp_elimOne" (formula "2") (term "0"))
      (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "2"))
      (rule "applyEqRigid" (formula "3") (term "0") (ifseqformula "1"))
      (rule "leq_literals" (formula "3"))
      (rule "true_left" (formula "3"))
      (rule "applyEqRigid" (formula "2") (term "0") (ifseqformula "1"))
      (rule "qeq_literals" (formula "2"))
      (rule "true_left" (formula "2"))
      (rule "applyEqRigid" (formula "2") (term "1") (ifseqformula "1"))
      (rule "inEqSimp_antiSymm" (formula "2") (ifseqformula "3"))
      (rule "applyEq" (formula "4") (term "0") (ifseqformula "2"))
      (rule "leq_literals" (formula "4"))
      (rule "true_left" (formula "4"))
      (rule "applyEqRigid" (formula "3") (term "0") (ifseqformula "2"))
      (rule "qeq_literals" (formula "3"))
      (rule "true_left" (formula "3"))
      (rule "applyEqRigid" (formula "3") (term "0,2,0") (ifseqformula "1") (userinteraction))
      (rule "eqSymm" (formula "3"))
      (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
      (rule "applyEq" (formula "3") (term "0,0") (ifseqformula "1"))
      (rule "eqSymm" (formula "3"))
      (rule "applyEqRigid" (formula "3") (term "1,2,0") (ifseqformula "2"))
      (rule "eqSymm" (formula "3"))
      (rule "replaceEmpty" (formula "3") (term "2,0"))
      (rule "eqSymm" (formula "3"))
      (rule "substring00" (formula "3") (term "2,0"))
      (rule "eqSymm" (formula "3"))
      (rule "replaceEmpty" (formula "3") (term "1"))
      (rule "substring00" (formula "3") (term "0"))
      (rule "eqClose" (formula "3"))
      (rule "closeTrue" (formula "3"))
   )
   (branch " Step Case"
      (rule "hide_right" (formula "3") (userinteraction))
      (rule "hide_left" (formula "1") (userinteraction))
      (rule "allRight" (formula "1") (inst "sk=l_1") (userinteraction))
      (rule "allRight" (formula "1") (inst "sk=c_1") (userinteraction))
      (rule "impRight" (formula "1") (userinteraction))
      (rule "andLeft" (formula "1") (userinteraction))
      (rule "allRight" (formula "3") (inst "sk=i_2") (userinteraction))
      (rule "allRight" (formula "3") (inst "sk=j_2") (userinteraction))
      (rule "impRight" (formula "3") (userinteraction))
      (rule "lengthCons" (formula "1") (term "1,1") (userinteraction))
      (rule "andLeft" (formula "1") (userinteraction))
      (rule "andLeft" (formula "1") (userinteraction))
      (rule "inChar" (formula "4") (userinteraction))
      (rule "true_left" (formula "4") (userinteraction))
      (rule "replaceCons" (formula "5") (term "2,1") (userinteraction))
      (rule "substringI" (formula "5") (term "2,0") (userinteraction))
      (rule "concatConsDep" (formula "5") (term "1,2,1") (userinteraction))
      (rule "concatConsDep" (formula "5") (term "2,2,1") (userinteraction))
      (rule "ifthenelse_split" (formula "5") (term "2,0") (userinteraction))
      (branch " i_2 >  0 TRUE"
         (rule "ifthenelse_split" (formula "6") (term "2,1") (userinteraction))
         (branch " c1_10 = c_1 TRUE"
            (rule "substringI" (formula "7") (term "1") (userinteraction))
            (rule "replace_known_left" (formula "7") (term "0,1") (ifseqformula "2") (userinteraction))
            (rule "ifthenelse_true" (formula "7") (term "1") (userinteraction))
            (rule "concatEmpty1" (formula "7") (term "2,1") (userinteraction))
            (rule "instAll" (formula "7") (term "0,2,0") (ifseqformula "6") (userinteraction))
            (rule "instAll" (formula "8") (term "1,2,0") (ifseqformula "1") (userinteraction))
            (rule "impLeft" (formula "1") (userinteraction))
            (branch " Case 1"
               (rule "eqSymm" (formula "2"))
               (rule "eqSymm" (formula "7") (term "1,0,0"))
               (rule "eqSymm" (formula "9"))
               (rule "eqSymm" (formula "1") (term "1,0"))
               (rule "polySimp_elimSub" (formula "8") (term "0,1"))
               (rule "mul_literals" (formula "8") (term "1,0,1"))
               (rule "polySimp_elimSub" (formula "1") (term "1,1,0,0,0"))
               (rule "mul_literals" (formula "1") (term "1,1,1,0,0,0"))
               (rule "polySimp_elimSub" (formula "8") (term "0,0,0"))
               (rule "mul_literals" (formula "8") (term "1,0,0,0"))
               (rule "polySimp_elimSub" (formula "1") (term "0,0,0,0,0"))
               (rule "mul_literals" (formula "1") (term "1,0,0,0,0,0"))
               (rule "polySimp_elimSub" (formula "8") (term "1,1,0"))
               (rule "mul_literals" (formula "8") (term "1,1,1,0"))
               (rule "polySimp_elimSub" (formula "8") (term "0,1,0"))
               (rule "mul_literals" (formula "8") (term "1,0,1,0"))
               (rule "polySimp_elimSub" (formula "9") (term "1,0"))
               (rule "mul_literals" (formula "9") (term "1,1,0"))
               (rule "eqSymm" (formula "9"))
               (rule "polySimp_elimSub" (formula "1") (term "0,0,1,0"))
               (rule "mul_literals" (formula "1") (term "1,0,0,1,0"))
               (rule "eqSymm" (formula "1") (term "1,0"))
               (rule "polySimp_elimSub" (formula "9") (term "1,2,0"))
               (rule "mul_literals" (formula "9") (term "1,1,2,0"))
               (rule "eqSymm" (formula "9"))
               (rule "polySimp_elimSub" (formula "1") (term "0,2,0,1,0"))
               (rule "mul_literals" (formula "1") (term "1,0,2,0,1,0"))
               (rule "eqSymm" (formula "1") (term "1,0"))
               (rule "polySimp_elimSub" (formula "9") (term "0,0"))
               (rule "mul_literals" (formula "9") (term "1,0,0"))
               (rule "eqSymm" (formula "9"))
               (rule "polySimp_elimSub" (formula "9") (term "0,2,0"))
               (rule "mul_literals" (formula "9") (term "1,0,2,0"))
               (rule "eqSymm" (formula "9"))
               (rule "inEqSimp_gtToGeq" (formula "3"))
               (rule "times_zero_1" (formula "3") (term "1,0,0"))
               (rule "add_zero_right" (formula "3") (term "0,0"))
               (rule "polySimp_addComm0" (formula "6") (term "1"))
               (rule "polySimp_addComm0" (formula "8") (term "0,1"))
               (rule "polySimp_addComm0" (formula "1") (term "1,1,0,0,0"))
               (rule "polySimp_addComm0" (formula "8") (term "0,0,0"))
               (rule "replace_known_left" (formula "8") (term "0,0") (ifseqformula "3"))
               (rule "concrete_and_1" (formula "8") (term "0"))
               (rule "polySimp_addComm0" (formula "1") (term "0,0,0,0,0"))
               (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "3"))
               (rule "concrete_and_1" (formula "1") (term "0,0,0"))
               (rule "polySimp_addComm0" (formula "1") (term "0,0,1,0"))
               (rule "eqSymm" (formula "1") (term "1,0"))
               (rule "polySimp_addComm0" (formula "9") (term "1,0"))
               (rule "eqSymm" (formula "9"))
               (rule "polySimp_addComm0" (formula "8") (term "1,0"))
               (rule "polySimp_addComm0" (formula "8") (term "0,0"))
               (rule "polySimp_addComm0" (formula "1") (term "0,2,0,1,0"))
               (rule "eqSymm" (formula "1") (term "1,0"))
               (rule "polySimp_addComm0" (formula "9") (term "0,2,0"))
               (rule "eqSymm" (formula "9"))
               (rule "polySimp_addComm0" (formula "9") (term "0,0"))
               (rule "eqSymm" (formula "9"))
               (rule "polySimp_addComm0" (formula "9") (term "1,2,0"))
               (rule "eqSymm" (formula "9"))
               (rule "inEqSimp_commuteLeq" (formula "8") (term "1"))
               (rule "inEqSimp_homoInEq0" (formula "6"))
               (rule "polySimp_addComm1" (formula "6") (term "0"))
               (rule "inEqSimp_homoInEq1" (formula "8") (term "0"))
               (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "8") (term "1,0,0"))
               (rule "mul_literals" (formula "8") (term "0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
               (rule "polySimp_addComm1" (formula "8") (term "0,0,0"))
               (rule "add_literals" (formula "8") (term "0,0,0,0"))
               (rule "add_zero_left" (formula "8") (term "0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "3"))
               (rule "mul_literals" (formula "3") (term "1"))
               (rule "inEqSimp_sepPosMonomial1" (formula "6"))
               (rule "polySimp_mulComm0" (formula "6") (term "1"))
               (rule "polySimp_rightDist" (formula "6") (term "1"))
               (rule "mul_literals" (formula "6") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
               (rule "polySimp_elimOne" (formula "6") (term "1,1"))
               (rule "replace_known_left" (formula "8") (term "1") (ifseqformula "6"))
               (rule "concrete_and_3" (formula "8"))
               (rule "inEqSimp_leqRight" (formula "8"))
               (rule "times_zero_1" (formula "1") (term "1,0,0"))
               (rule "add_zero_right" (formula "1") (term "0,0"))
               (rule "polySimp_addAssoc" (formula "1") (term "0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "1"))
               (rule "polySimp_mulLiterals" (formula "1") (term "0"))
               (rule "polySimp_elimOne" (formula "1") (term "0"))
               (rule "inEqSimp_contradInEq0" (formula "6") (ifseqformula "1"))
               (rule "andLeft" (formula "6"))
               (rule "inEqSimp_homoInEq1" (formula "6"))
               (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
               (rule "polySimp_rightDist" (formula "6") (term "1,0"))
               (rule "mul_literals" (formula "6") (term "0,1,0"))
               (rule "polySimp_addAssoc" (formula "6") (term "0"))
               (rule "polySimp_addComm0" (formula "6") (term "0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "6") (term "0"))
               (rule "add_literals" (formula "6") (term "1,1,0"))
               (rule "times_zero_1" (formula "6") (term "1,0"))
               (rule "add_zero_right" (formula "6") (term "0"))
               (rule "leq_literals" (formula "6"))
               (rule "closeFalse" (formula "6"))
            )
            (branch " Case 2"
               (rule "close" (formula "9") (ifseqformula "1") (userinteraction))
            )
         )
         (branch " c1_10 = c_1 FALSE"
            (rule "substringI" (formula "7") (term "1") (userinteraction))
            (rule "replace_known_left" (formula "7") (term "0,1") (ifseqformula "1") (userinteraction))
            (rule "ifthenelse_true" (formula "7") (term "1") (userinteraction))
            (rule "concatEmpty1" (formula "7") (term "2,1") (userinteraction))
            (rule "instAll" (formula "7") (term "0,2,0") (ifseqformula "5") (userinteraction))
            (rule "instAll" (formula "8") (term "1,2,0") (ifseqformula "1") (userinteraction))
            (rule "impLeft" (formula "1") (userinteraction))
            (branch " Case 1"
               (rule "eqSymm" (formula "9"))
               (rule "eqSymm" (formula "6") (term "1,0,0"))
               (rule "eqSymm" (formula "1") (term "1,0"))
               (rule "eqSymm" (formula "8"))
               (rule "polySimp_elimSub" (formula "7") (term "0,1"))
               (rule "mul_literals" (formula "7") (term "1,0,1"))
               (rule "polySimp_elimSub" (formula "1") (term "0,0,0,0,0"))
               (rule "mul_literals" (formula "1") (term "1,0,0,0,0,0"))
               (rule "polySimp_elimSub" (formula "7") (term "1,1,0"))
               (rule "mul_literals" (formula "7") (term "1,1,1,0"))
               (rule "polySimp_elimSub" (formula "7") (term "0,1,0"))
               (rule "mul_literals" (formula "7") (term "1,0,1,0"))
               (rule "polySimp_elimSub" (formula "1") (term "1,1,0,0,0"))
               (rule "mul_literals" (formula "1") (term "1,1,1,0,0,0"))
               (rule "polySimp_elimSub" (formula "7") (term "0,0,0"))
               (rule "mul_literals" (formula "7") (term "1,0,0,0"))
               (rule "polySimp_elimSub" (formula "9") (term "1,2,1"))
               (rule "mul_literals" (formula "9") (term "1,1,2,1"))
               (rule "polySimp_elimSub" (formula "9") (term "0,0"))
               (rule "mul_literals" (formula "9") (term "1,0,0"))
               (rule "eqSymm" (formula "9"))
               (rule "polySimp_elimSub" (formula "1") (term "0,0,1,0"))
               (rule "mul_literals" (formula "1") (term "1,0,0,1,0"))
               (rule "eqSymm" (formula "1") (term "1,0"))
               (rule "polySimp_elimSub" (formula "9") (term "0,2,0"))
               (rule "mul_literals" (formula "9") (term "1,0,2,0"))
               (rule "eqSymm" (formula "9"))
               (rule "polySimp_elimSub" (formula "1") (term "0,2,0,1,0"))
               (rule "mul_literals" (formula "1") (term "1,0,2,0,1,0"))
               (rule "eqSymm" (formula "1") (term "1,0"))
               (rule "polySimp_elimSub" (formula "9") (term "1,0"))
               (rule "mul_literals" (formula "9") (term "1,1,0"))
               (rule "inEqSimp_gtToGeq" (formula "2"))
               (rule "times_zero_1" (formula "2") (term "1,0,0"))
               (rule "add_zero_right" (formula "2") (term "0,0"))
               (rule "polySimp_addComm0" (formula "5") (term "1"))
               (rule "polySimp_addComm0" (formula "7") (term "0,1"))
               (rule "polySimp_addComm0" (formula "1") (term "0,0,0,0,0"))
               (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "2"))
               (rule "concrete_and_1" (formula "1") (term "0,0,0"))
               (rule "polySimp_addComm0" (formula "7") (term "1,1,0"))
               (rule "polySimp_addComm0" (formula "7") (term "0,1,0"))
               (rule "polySimp_addComm0" (formula "7") (term "0,0,0"))
               (rule "replace_known_left" (formula "7") (term "0,0") (ifseqformula "2"))
               (rule "concrete_and_1" (formula "7") (term "0"))
               (rule "polySimp_addComm0" (formula "9") (term "1,2,1"))
               (rule "polySimp_addComm0" (formula "9") (term "0,0"))
               (rule "eqSymm" (formula "9"))
               (rule "polySimp_addComm0" (formula "1") (term "0,0,1,0"))
               (rule "eqSymm" (formula "1") (term "1,0"))
               (rule "polySimp_addComm0" (formula "1") (term "1,0,0,0"))
               (rule "polySimp_addComm0" (formula "9") (term "1,1"))
               (rule "polySimp_addComm0" (formula "9") (term "0,2,0"))
               (rule "eqSymm" (formula "9"))
               (rule "polySimp_addComm0" (formula "1") (term "0,2,0,1,0"))
               (rule "eqSymm" (formula "1") (term "1,0"))
               (rule "inEqSimp_commuteLeq" (formula "7") (term "1"))
               (rule "inEqSimp_homoInEq0" (formula "5"))
               (rule "polySimp_addComm1" (formula "5") (term "0"))
               (rule "inEqSimp_homoInEq1" (formula "7") (term "0"))
               (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "7") (term "1,0,0"))
               (rule "mul_literals" (formula "7") (term "0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
               (rule "polySimp_addComm1" (formula "7") (term "0,0,0"))
               (rule "add_literals" (formula "7") (term "0,0,0,0"))
               (rule "add_zero_left" (formula "7") (term "0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "2"))
               (rule "mul_literals" (formula "2") (term "1"))
               (rule "inEqSimp_sepPosMonomial1" (formula "5"))
               (rule "polySimp_mulComm0" (formula "5") (term "1"))
               (rule "polySimp_rightDist" (formula "5") (term "1"))
               (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
               (rule "mul_literals" (formula "5") (term "0,1"))
               (rule "polySimp_elimOne" (formula "5") (term "1,1"))
               (rule "replace_known_left" (formula "7") (term "1") (ifseqformula "5"))
               (rule "concrete_and_3" (formula "7"))
               (rule "inEqSimp_leqRight" (formula "7"))
               (rule "times_zero_1" (formula "1") (term "1,0,0"))
               (rule "add_zero_right" (formula "1") (term "0,0"))
               (rule "polySimp_addAssoc" (formula "1") (term "0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "1"))
               (rule "polySimp_mulLiterals" (formula "1") (term "0"))
               (rule "polySimp_elimOne" (formula "1") (term "0"))
               (rule "inEqSimp_contradInEq0" (formula "5") (ifseqformula "1"))
               (rule "andLeft" (formula "5"))
               (rule "inEqSimp_homoInEq1" (formula "5"))
               (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
               (rule "polySimp_rightDist" (formula "5") (term "1,0"))
               (rule "mul_literals" (formula "5") (term "0,1,0"))
               (rule "polySimp_addAssoc" (formula "5") (term "0"))
               (rule "polySimp_addComm0" (formula "5") (term "0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "5") (term "0"))
               (rule "add_literals" (formula "5") (term "1,1,0"))
               (rule "times_zero_1" (formula "5") (term "1,0"))
               (rule "add_literals" (formula "5") (term "0"))
               (rule "leq_literals" (formula "5"))
               (rule "closeFalse" (formula "5"))
            )
            (branch " Case 2"
               (rule "close" (formula "9") (ifseqformula "1") (userinteraction))
            )
         )
      )
      (branch " i_2 >  0 FALSE"
         (rule "cut" (inst "cutFormula=i_2 = 0") (userinteraction))
         (branch " CUT: i_2 = 0 TRUE"
            (rule "applyEqRigid" (formula "7") (term "0,2,0") (ifseqformula "1") (userinteraction))
            (rule "concatEmpty1" (formula "7") (term "1,1,2,1") (userinteraction))
            (rule "concatEmpty1" (formula "7") (term "1,2,2,1") (userinteraction))
            (rule "applyEqRigid" (formula "7") (term "0,1") (ifseqformula "1") (userinteraction))
            (rule "substring0" (formula "7") (term "2,0") (userinteraction))
            (rule "ifthenelse_split" (formula "7") (term "2,1") (userinteraction))
            (branch " c1_10 = c_1 TRUE"
               (rule "substring0" (formula "8") (term "1") (userinteraction))
               (rule "ifthenelse_split" (formula "8") (term "1") (userinteraction))
               (branch " j_2 >  0 TRUE"
                  (rule "replace_known_left" (formula "9") (term "0,2,0") (ifseqformula "1") (userinteraction))
                  (rule "ifthenelse_true" (formula "9") (term "2,0") (userinteraction))
                  (rule "concatConsDep" (formula "9") (term "1") (userinteraction))
                  (rule "concatEmpty1" (formula "9") (term "1,1") (userinteraction))
                  (rule "concatConsDep" (formula "9") (term "2,0") (userinteraction))
                  (rule "concatEmpty1" (formula "9") (term "1,2,0") (userinteraction))
                  (rule "replaceCons" (formula "9") (term "0") (userinteraction))
                  (rule "replace_known_left" (formula "9") (term "0,0") (ifseqformula "2") (userinteraction))
                  (rule "ifthenelse_true" (formula "9") (term "0") (userinteraction))
                  (rule "concatConsDep" (formula "9") (term "0") (userinteraction))
                  (rule "concatEmpty1" (formula "9") (term "1,0") (userinteraction))
                  (rule "instAll" (formula "9") (term "0,2,1,0") (ifseqformula "7") (userinteraction))
                  (rule "instAll" (formula "10") (term "1,2,1,0") (ifseqformula "1") (userinteraction))
                  (rule "impLeft" (formula "1") (userinteraction))
                  (branch " Case 1"
                     (rule "qeq_literals" (formula "1") (term "0,0,0,0"))
                     (rule "concrete_and_1" (formula "1") (term "0,0,0"))
                     (rule "qeq_literals" (formula "9") (term "0,0"))
                     (rule "concrete_and_1" (formula "9") (term "0"))
                     (rule "eqSymm" (formula "3"))
                     (rule "eqSymm" (formula "11"))
                     (rule "eqSymm" (formula "1") (term "1,0"))
                     (rule "eqSymm" (formula "8") (term "1,0,0"))
                     (rule "polySimp_elimSub" (formula "9") (term "0,1"))
                     (rule "mul_literals" (formula "9") (term "1,0,1"))
                     (rule "polySimp_elimSub" (formula "9") (term "0,0"))
                     (rule "mul_literals" (formula "9") (term "1,0,0"))
                     (rule "polySimp_elimSub" (formula "11") (term "1,1,0"))
                     (rule "mul_literals" (formula "11") (term "1,1,1,0"))
                     (rule "eqSymm" (formula "11"))
                     (rule "polySimp_elimSub" (formula "11") (term "1,2,1,0"))
                     (rule "mul_literals" (formula "11") (term "1,1,2,1,0"))
                     (rule "eqSymm" (formula "11"))
                     (rule "inEqSimp_gtRight" (formula "10"))
                     (rule "times_zero_1" (formula "1") (term "0,0"))
                     (rule "add_zero_left" (formula "1") (term "0"))
                     (rule "inEqSimp_gtToGeq" (formula "3"))
                     (rule "times_zero_1" (formula "3") (term "1,0,0"))
                     (rule "add_zero_right" (formula "3") (term "0,0"))
                     (rule "polySimp_addComm0" (formula "8") (term "1"))
                     (rule "polySimp_addComm0" (formula "10") (term "0,1"))
                     (rule "polySimp_addComm0" (formula "10") (term "0,0"))
                     (rule "replace_known_left" (formula "10") (term "0") (ifseqformula "3"))
                     (rule "concrete_and_1" (formula "10"))
                     (rule "inEqSimp_leqRight" (formula "10"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                     (rule "polySimp_addComm0" (formula "11") (term "1,1,0"))
                     (rule "eqSymm" (formula "11"))
                     (rule "polySimp_addComm1" (formula "1") (term "0"))
                     (rule "polySimp_addComm0" (formula "11") (term "1,2,1,0"))
                     (rule "eqSymm" (formula "11"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                     (rule "add_literals" (formula "1") (term "0,0,0"))
                     (rule "inEqSimp_homoInEq0" (formula "9"))
                     (rule "polySimp_addComm1" (formula "9") (term "0"))
                     (rule "applyEq" (formula "8") (term "1") (ifseqformula "6"))
                     (rule "applyEqRigid" (formula "7") (term "0") (ifseqformula "6"))
                     (rule "qeq_literals" (formula "7"))
                     (rule "true_left" (formula "7"))
                     (rule "applyEqRigid" (formula "2") (term "0") (ifseqformula "6"))
                     (rule "leq_literals" (formula "2"))
                     (rule "true_left" (formula "2"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                     (rule "mul_literals" (formula "3") (term "1"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                     (rule "polySimp_elimOne" (formula "1") (term "0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                     (rule "polySimp_mulComm0" (formula "7") (term "1"))
                     (rule "polySimp_rightDist" (formula "7") (term "1"))
                     (rule "mul_literals" (formula "7") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "7") (term "1,1"))
                     (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "3"))
                     (rule "leq_literals" (formula "6") (term "0"))
                     (rule "concrete_or_1" (formula "6"))
                     (rule "true_left" (formula "6"))
                     (rule "inEqSimp_contradInEq0" (formula "6") (ifseqformula "1"))
                     (rule "andLeft" (formula "6"))
                     (rule "inEqSimp_homoInEq1" (formula "6"))
                     (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                     (rule "mul_literals" (formula "6") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "6") (term "0"))
                     (rule "polySimp_addComm1" (formula "6") (term "0,0"))
                     (rule "add_literals" (formula "6") (term "0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "6") (term "0"))
                     (rule "add_literals" (formula "6") (term "1,1,0"))
                     (rule "times_zero_1" (formula "6") (term "1,0"))
                     (rule "add_zero_right" (formula "6") (term "0"))
                     (rule "leq_literals" (formula "6"))
                     (rule "closeFalse" (formula "6"))
                  )
                  (branch " Case 2"
                     (rule "applyEq" (formula "11") (term "1,0") (ifseqformula "1") (userinteraction))
                     (rule "eqClose" (formula "11") (userinteraction))
                     (rule "closeTrue" (formula "11") (userinteraction))
                  )
               )
               (branch " j_2 >  0 FALSE"
                  (rule "cut" (inst "cutFormula=j_2 = 0") (userinteraction))
                  (branch " CUT: j_2 = 0 TRUE"
                     (rule "replace_known_right" (formula "10") (term "0,2,0") (ifseqformula "9") (userinteraction))
                     (rule "ifthenelse_false" (formula "10") (term "2,0") (userinteraction))
                     (rule "applyEqRigid" (formula "10") (term "1,2,0") (ifseqformula "1") (userinteraction))
                     (rule "applyEqRigid" (formula "10") (term "1,1") (ifseqformula "1") (userinteraction))
                     (rule "substring00" (formula "10") (term "1") (userinteraction))
                     (rule "substring00" (formula "10") (term "2,0") (userinteraction))
                     (rule "replaceEmpty" (formula "10") (term "0") (userinteraction))
                     (rule "eqClose" (formula "10") (userinteraction))
                     (rule "closeTrue" (formula "10") (userinteraction))
                  )
                  (branch " CUT: j_2 = 0 FALSE"
                     (rule "eqSymm" (formula "6") (term "1,0,0"))
                     (rule "eqSymm" (formula "1"))
                     (rule "replace_known_right" (formula "10") (term "0,2,0") (ifseqformula "9"))
                     (rule "ifthenelse_false" (formula "10") (term "2,0"))
                     (rule "eqSymm" (formula "10"))
                     (rule "inEqSimp_gtRight" (formula "9"))
                     (rule "times_zero_1" (formula "1") (term "0,0"))
                     (rule "add_zero_left" (formula "1") (term "0"))
                     (rule "inEqSimp_gtRight" (formula "9"))
                     (rule "times_zero_1" (formula "1") (term "0,0"))
                     (rule "add_zero_left" (formula "1") (term "0"))
                     (rule "polySimp_addComm0" (formula "7") (term "1"))
                     (rule "inEqSimp_homoInEq0" (formula "7"))
                     (rule "polySimp_addComm1" (formula "7") (term "0"))
                     (rule "applyEq" (formula "1") (term "0") (ifseqformula "4"))
                     (rule "leq_literals" (formula "1"))
                     (rule "true_left" (formula "1"))
                     (rule "applyEq" (formula "5") (term "1") (ifseqformula "3"))
                     (rule "applyEqRigid" (formula "4") (term "0") (ifseqformula "3"))
                     (rule "qeq_literals" (formula "4"))
                     (rule "true_left" (formula "4"))
                     (rule "applyEq" (formula "8") (term "0,2,2,1") (ifseqformula "2"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                     (rule "polySimp_mulComm0" (formula "5") (term "1"))
                     (rule "polySimp_rightDist" (formula "5") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                     (rule "mul_literals" (formula "5") (term "0,1"))
                     (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                     (rule "inEqSimp_strengthen1" (formula "4") (ifseqformula "7"))
                     (rule "add_zero_right" (formula "4") (term "1"))
                     (rule "inEqSimp_contradEq7" (formula "7") (ifseqformula "4"))
                     (rule "times_zero_1" (formula "7") (term "1,0,0"))
                     (rule "add_zero_right" (formula "7") (term "0,0"))
                     (rule "leq_literals" (formula "7") (term "0"))
                     (rule "concrete_and_2" (formula "7"))
                     (rule "false_right" (formula "7"))
                     (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "1"))
                     (rule "qeq_literals" (formula "4") (term "0"))
                     (rule "concrete_and_2" (formula "4"))
                     (rule "closeFalse" (formula "4"))
                  )
               )
            )
            (branch " c1_10 = c_1 FALSE"
               (rule "substring0" (formula "8") (term "1") (userinteraction))
               (rule "ifthenelse_split" (formula "8") (term "2,0") (userinteraction))
               (branch " j_2 >  0 TRUE"
                  (rule "replace_known_left" (formula "9") (term "0,1") (ifseqformula "1") (userinteraction))
                  (rule "ifthenelse_true" (formula "9") (term "1") (userinteraction))
                  (rule "concatConsDep" (formula "9") (term "1") (userinteraction))
                  (rule "concatEmpty1" (formula "9") (term "1,1") (userinteraction))
                  (rule "concatConsDep" (formula "9") (term "2,0") (userinteraction))
                  (rule "concatEmpty1" (formula "9") (term "1,2,0") (userinteraction))
                  (rule "replaceCons" (formula "9") (term "0") (userinteraction))
                  (rule "replace_known_right" (formula "9") (term "0,0") (ifseqformula "8") (userinteraction))
                  (rule "ifthenelse_false" (formula "9") (term "0") (userinteraction))
                  (rule "concatConsDep" (formula "9") (term "0") (userinteraction))
                  (rule "concatEmpty1" (formula "9") (term "1,0") (userinteraction))
                  (rule "instAll" (formula "9") (term "0,2,1,0") (ifseqformula "6") (userinteraction))
                  (rule "instAll" (formula "10") (term "1,2,1,0") (ifseqformula "1") (userinteraction))
                  (rule "impLeft" (formula "1") (userinteraction))
                  (branch " Case 1"
                     (rule "qeq_literals" (formula "1") (term "0,0,0,0"))
                     (rule "concrete_and_1" (formula "1") (term "0,0,0"))
                     (rule "qeq_literals" (formula "8") (term "0,0"))
                     (rule "concrete_and_1" (formula "8") (term "0"))
                     (rule "eqSymm" (formula "7") (term "1,0,0"))
                     (rule "eqSymm" (formula "11"))
                     (rule "eqSymm" (formula "10"))
                     (rule "eqSymm" (formula "1") (term "1,0"))
                     (rule "polySimp_elimSub" (formula "8") (term "0,1"))
                     (rule "mul_literals" (formula "8") (term "1,0,1"))
                     (rule "polySimp_elimSub" (formula "8") (term "0,0"))
                     (rule "mul_literals" (formula "8") (term "1,0,0"))
                     (rule "polySimp_elimSub" (formula "11") (term "1,2,1,1"))
                     (rule "mul_literals" (formula "11") (term "1,1,2,1,1"))
                     (rule "polySimp_elimSub" (formula "11") (term "1,1,0"))
                     (rule "mul_literals" (formula "11") (term "1,1,1,0"))
                     (rule "inEqSimp_gtRight" (formula "9"))
                     (rule "times_zero_1" (formula "1") (term "0,0"))
                     (rule "add_zero_left" (formula "1") (term "0"))
                     (rule "inEqSimp_gtToGeq" (formula "3"))
                     (rule "times_zero_1" (formula "3") (term "1,0,0"))
                     (rule "add_zero_right" (formula "3") (term "0,0"))
                     (rule "polySimp_addComm0" (formula "7") (term "1"))
                     (rule "polySimp_addComm0" (formula "9") (term "0,1"))
                     (rule "polySimp_addComm0" (formula "9") (term "0,0"))
                     (rule "replace_known_left" (formula "9") (term "0") (ifseqformula "3"))
                     (rule "concrete_and_1" (formula "9"))
                     (rule "inEqSimp_leqRight" (formula "9"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                     (rule "polySimp_addComm0" (formula "11") (term "1,2,1,1"))
                     (rule "polySimp_addComm0" (formula "11") (term "1,1,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                     (rule "add_literals" (formula "1") (term "0,0,0"))
                     (rule "inEqSimp_homoInEq0" (formula "8"))
                     (rule "polySimp_addComm1" (formula "8") (term "0"))
                     (rule "applyEqRigid" (formula "7") (term "1") (ifseqformula "5"))
                     (rule "applyEq" (formula "6") (term "0") (ifseqformula "5"))
                     (rule "qeq_literals" (formula "6"))
                     (rule "true_left" (formula "6"))
                     (rule "applyEq" (formula "2") (term "0") (ifseqformula "5"))
                     (rule "leq_literals" (formula "2"))
                     (rule "true_left" (formula "2"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                     (rule "mul_literals" (formula "3") (term "1"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                     (rule "polySimp_elimOne" (formula "1") (term "0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                     (rule "polySimp_mulComm0" (formula "6") (term "1"))
                     (rule "polySimp_rightDist" (formula "6") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                     (rule "mul_literals" (formula "6") (term "0,1"))
                     (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                     (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "3"))
                     (rule "leq_literals" (formula "5") (term "0"))
                     (rule "concrete_or_1" (formula "5"))
                     (rule "true_left" (formula "5"))
                     (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "5"))
                     (rule "andLeft" (formula "1"))
                     (rule "inEqSimp_homoInEq1" (formula "1"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                     (rule "mul_literals" (formula "1") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                     (rule "add_literals" (formula "1") (term "0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                     (rule "add_literals" (formula "1") (term "1,1,0"))
                     (rule "times_zero_1" (formula "1") (term "1,0"))
                     (rule "add_literals" (formula "1") (term "0"))
                     (rule "leq_literals" (formula "1"))
                     (rule "closeFalse" (formula "1"))
                  )
                  (branch " Case 2"
                     (rule "applyEq" (formula "11") (term "1,0") (ifseqformula "1") (userinteraction))
                     (rule "eqClose" (formula "11") (userinteraction))
                     (rule "closeTrue" (formula "11") (userinteraction))
                  )
               )
               (branch " j_2 >  0 FALSE"
                  (rule "replace_known_right" (formula "9") (term "0,1") (ifseqformula "8") (userinteraction))
                  (rule "ifthenelse_false" (formula "9") (term "1") (userinteraction))
                  (rule "cut" (inst "cutFormula=j_2 = 0") (userinteraction))
                  (branch " CUT: j_2 = 0 TRUE"
                     (rule "applyEqRigid" (formula "10") (term "1,2,0") (ifseqformula "1") (userinteraction))
                     (rule "applyEqRigid" (formula "10") (term "1,1") (ifseqformula "1") (userinteraction))
                     (rule "substring00" (formula "10") (term "1") (userinteraction))
                     (rule "substring00" (formula "10") (term "2,0") (userinteraction))
                     (rule "replaceEmpty" (formula "10") (term "0") (userinteraction))
                     (rule "eqClose" (formula "10") (userinteraction))
                     (rule "closeTrue" (formula "10") (userinteraction))
                  )
                  (branch " CUT: j_2 = 0 FALSE"
                     (rule "eqSymm" (formula "10"))
                     (rule "eqSymm" (formula "5") (term "1,0,0"))
                     (rule "eqSymm" (formula "8"))
                     (rule "inEqSimp_gtRight" (formula "9"))
                     (rule "times_zero_1" (formula "1") (term "0,0"))
                     (rule "add_zero_left" (formula "1") (term "0"))
                     (rule "inEqSimp_gtRight" (formula "8"))
                     (rule "times_zero_1" (formula "1") (term "0,0"))
                     (rule "add_zero_left" (formula "1") (term "0"))
                     (rule "polySimp_addComm0" (formula "6") (term "1"))
                     (rule "inEqSimp_homoInEq0" (formula "6"))
                     (rule "polySimp_addComm1" (formula "6") (term "0"))
                     (rule "applyEqRigid" (formula "1") (term "0") (ifseqformula "3"))
                     (rule "leq_literals" (formula "1"))
                     (rule "true_left" (formula "1"))
                     (rule "applyEqRigid" (formula "4") (term "1") (ifseqformula "2"))
                     (rule "applyEq" (formula "3") (term "0") (ifseqformula "2"))
                     (rule "qeq_literals" (formula "3"))
                     (rule "true_left" (formula "3"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                     (rule "polySimp_mulComm0" (formula "4") (term "1"))
                     (rule "polySimp_rightDist" (formula "4") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                     (rule "mul_literals" (formula "4") (term "0,1"))
                     (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                     (rule "inEqSimp_strengthen1" (formula "3") (ifseqformula "6"))
                     (rule "add_zero_right" (formula "3") (term "1"))
                     (rule "inEqSimp_contradEq7" (formula "6") (ifseqformula "3"))
                     (rule "times_zero_1" (formula "6") (term "1,0,0"))
                     (rule "add_zero_right" (formula "6") (term "0,0"))
                     (rule "leq_literals" (formula "6") (term "0"))
                     (rule "concrete_and_2" (formula "6"))
                     (rule "false_right" (formula "6"))
                     (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "1"))
                     (rule "qeq_literals" (formula "3") (term "0"))
                     (rule "concrete_and_2" (formula "3"))
                     (rule "closeFalse" (formula "3"))
                  )
               )
            )
         )
         (branch " CUT: i_2 = 0 FALSE"
            (rule "eqSymm" (formula "7") (term "0,2,1"))
            (rule "eqSymm" (formula "4") (term "1,0,0"))
            (rule "eqSymm" (formula "7"))
            (rule "inEqSimp_gtRight" (formula "6"))
            (rule "times_zero_1" (formula "1") (term "0,0"))
            (rule "add_zero_left" (formula "1") (term "0"))
            (rule "polySimp_addComm0" (formula "4") (term "1"))
            (rule "inEqSimp_homoInEq0" (formula "4"))
            (rule "polySimp_addComm1" (formula "4") (term "0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "4"))
            (rule "polySimp_mulComm0" (formula "4") (term "1"))
            (rule "polySimp_rightDist" (formula "4") (term "1"))
            (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
            (rule "mul_literals" (formula "4") (term "0,1"))
            (rule "polySimp_elimOne" (formula "4") (term "1,1"))
            (rule "inEqSimp_strengthen0" (formula "1") (ifseqformula "6"))
            (rule "add_zero_right" (formula "1") (term "1"))
            (rule "inEqSimp_contradEq3" (formula "6") (ifseqformula "1"))
            (rule "times_zero_1" (formula "6") (term "1,0,0"))
            (rule "add_zero_right" (formula "6") (term "0,0"))
            (rule "qeq_literals" (formula "6") (term "0"))
            (rule "concrete_and_2" (formula "6"))
            (rule "false_right" (formula "6"))
            (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "2"))
            (rule "qeq_literals" (formula "1") (term "0"))
            (rule "concrete_and_2" (formula "1"))
            (rule "closeFalse" (formula "1"))
         )
      )
   )
   (branch " Use Case"
      (rule "instAll" (formula "3") (term "2,2,0") (ifseqformula "1") (userinteraction))
      (rule "instAll" (formula "4") (term "0,2,0") (ifseqformula "1") (userinteraction))
      (rule "instAll" (formula "5") (term "1,2,0") (ifseqformula "1") (userinteraction))
      (rule "impLeft" (formula "1") (userinteraction))
      (branch " Case 1"
         (rule "close" (formula "5") (ifseqformula "4") (userinteraction))
      )
      (branch " Case 2"
         (rule "close" (formula "6") (ifseqformula "1") (userinteraction))
      )
   )
)
(branch " i_8 >= 0 & j_7 >= i_8 & j_7 <= length(l_6) FALSE"
   (rule "eqClose" (formula "2") (userinteraction))
   (rule "closeTrue" (formula "2") (userinteraction))
)
)

}
