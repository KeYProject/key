\settings {
"#Proof-Settings-Config-File
#Tue Jul 21 13:31:29 CEST 2009
[General]SoundNotification=false
[View]FontIndex=2
[StrategyProperty]GOALCHOOSER_OPTIONS_KEY=GOALCHOOSER_DEFAULT
[General]UseOCL=false
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_EXPAND
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_HIGH
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_NONE
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_LOW
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_LOW
[SimultaneousUpdateSimplifier]DeleteEffectLessLocations=true
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_NONE
[DecisionProcedure]Timeout=60
[View]ShowWholeTaclet=false
[General]ProofAssistant=false
[View]MaxTooltipLines=40
[General]DnDDirectionSensitive=true
[SimultaneousUpdateSimplifier]EagerSimplification=true
[General]StupidMode=true
[Strategy]Timeout=-1
[Strategy]MaximumNumberOfAutomaticApplications=500
[Libraries]Default=acc.key-false, stringRules.key-false, /Users/geilmann/.key/libraries/deprecatedRules.key-false, /Users/geilmann/.key/libraries/acc.key-false, /Users/geilmann/.key/libraries/stringRules.key-false, deprecatedRules.key-false
[StrategyProperty]QUERY_OPTIONS_KEY=QUERY_NONE
[Choice]DefaultChoices=transactions-transactions\:transactionsOn , throughout-throughout\:toutOn , assertions-assertions\:on , programRules-programRules\:Java , intRules-intRules\:arithmeticSemanticsIgnoringOF , initialisation-initialisation\:disableStaticInitialisation , transactionAbort-transactionAbort\:abortOn , nullPointerPolicy-nullPointerPolicy\:nullCheck , stringRules-stringRules\:withoutStringPool , javacard-javacard\:jcOff
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[DecisionProcedure]ActiveRule=_noname_
[General]UseJML=false
[View]HideClosedSubtrees=false
[Choice]Choices=transactions-transactions\:transactionsOn-transactions\:transactionsOff , throughout-throughout\:toutOn-throughout\:toutOff , assertions-assertions\:on-assertions\:off-assertions\:safe , programRules-programRules\:Java-programRules\:ODL , intRules-intRules\:javaSemantics-intRules\:arithmeticSemanticsIgnoringOF-intRules\:arithmeticSemanticsCheckingOF , initialisation-initialisation\:enableStaticInitialisation-initialisation\:disableStaticInitialisation , transactionAbort-transactionAbort\:abortOn-transactionAbort\:abortOff , nullPointerPolicy-nullPointerPolicy\:noNullCheck-nullPointerPolicy\:nullCheck , stringRules-stringRules\:withStringPool-stringRules\:withoutStringPool-stringRules\:platformIndependent , javacard-javacard\:jcOff-javacard\:jcOn
[View]HideIntermediateProofsteps=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
"
}


\functions {
\nonRigid int i_384;
\nonRigid int i_413;
\nonRigid int i_441;
\nonRigid CharList l2_438;
\nonRigid int m_410;
\nonRigid int k_411;
\nonRigid CharList l2_382;
\nonRigid int j_440;
\nonRigid int j_412;
\nonRigid CharList l1_383;
\nonRigid CharList l_409;
\nonRigid CharList l1_439;
}

\problem {
  substring(i_441, j_440, concat(l1_439, l2_438))
= \if (  i_441 >= 0
       & j_440 >= i_441
       & j_440 <= length(l1_439) + length(l2_438))
      \then (\if (j_440 <= length(l1_439))
                 \then (substring(i_441, j_440, l1_439))
                 \else (\if (i_441 >= length(l1_439))
                            \then (substring(  i_441
                                             - length(l1_439),
                                               j_440
                                             - length(l1_439),
                                             l2_438))
                            \else (concat(substring(i_441,
                                                    length(l1_439),
                                                    l1_439),
                                          substring(0,
                                                      j_440
                                                    - length(l1_439),
                                                    l2_438)))))
      \else (substring(i_441,
                       j_440,
                       concat(l1_439, l2_438)))

}

\proof {
(keyLog "0" (keyUser "geilmann" ) (keyVersion "342f4d7a64be81e3f32b04772bbe5fb52625e73b"))

(autoModeTime "19672")

(branch "dummy ID"
(rule "ifthenelse_split" (formula "1") (term "1") (userinteraction))
(branch "   i_441 >= 0
& j_440 >= i_441
& j_440 <= length(l1_439) + length(l2_438) TRUE"
   (rule "ifthenelse_split" (formula "2") (term "1") (userinteraction))
   (branch " j_440 <= length(l1_439) TRUE"
      (rule "andLeft" (formula "2") (userinteraction))
      (rule "andLeft" (formula "2") (userinteraction))
      (rule "charlist_induction" (inst "phi=\\forall CharList l2; 
  \\forall int i; 
    \\forall int j; 
      (   j <= length(l1) & i >= 0 & j >= i
       ->   substring(i, j, concat(l1, l2))
          = substring(i, j, l1))") (inst "lv=l1") (inst "cv=c") (userinteraction))
      (branch " Base Case"
         (rule "allRight" (formula "5") (inst "sk=l2_0") (userinteraction))
         (rule "allRight" (formula "5") (inst "sk=i_0") (userinteraction))
         (rule "allRight" (formula "5") (inst "sk=j_0") (userinteraction))
         (rule "impRight" (formula "5") (userinteraction))
         (rule "andLeft" (formula "1") (userinteraction))
         (rule "andLeft" (formula "1") (userinteraction))
         (rule "lengthEmpty" (formula "1") (term "1") (userinteraction))
         (rule "hide_left" (formula "4") (userinteraction))
         (rule "hide_left" (formula "4") (userinteraction))
         (rule "hide_left" (formula "4") (userinteraction))
         (rule "hide_left" (formula "4") (userinteraction))
         (rule "hide_right" (formula "5") (userinteraction))
         (rule "cut" (inst "cutFormula=j_0 = 0 & i_0 = 0") (userinteraction))
         (branch " CUT: j_0 = 0 & i_0 = 0 TRUE"
            (rule "andLeft" (formula "1") (userinteraction))
            (rule "applyEqRigid" (formula "6") (term "0,0") (ifseqformula "2") (userinteraction))
            (rule "applyEqRigid" (formula "6") (term "1,0") (ifseqformula "1") (userinteraction))
            (rule "applyEqRigid" (formula "6") (term "0,1") (ifseqformula "2") (userinteraction))
            (rule "applyEqRigid" (formula "6") (term "1,1") (ifseqformula "1") (userinteraction))
            (rule "substring00" (formula "6") (term "0") (userinteraction))
            (rule "substring00" (formula "6") (term "1") (userinteraction))
            (rule "eqClose" (formula "6") (userinteraction))
            (rule "closeTrue" (formula "6") (userinteraction))
         )
         (branch " CUT: j_0 = 0 & i_0 = 0 FALSE"
            (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "1"))
            (rule "add_zero_right" (formula "3") (term "0"))
            (rule "polySimp_mulComm0" (formula "3") (term "0"))
            (rule "inEqSimp_invertInEq1" (formula "3"))
            (rule "polySimp_mulLiterals" (formula "3") (term "0"))
            (rule "times_zero_2" (formula "3") (term "1"))
            (rule "polySimp_elimOne" (formula "3") (term "0"))
            (rule "inEqSimp_antiSymm" (formula "2") (ifseqformula "3"))
            (rule "replace_known_left" (formula "6") (term "1") (ifseqformula "2"))
            (rule "concrete_and_3" (formula "6"))
            (rule "applyEq" (formula "4") (term "0") (ifseqformula "2"))
            (rule "leq_literals" (formula "4"))
            (rule "true_left" (formula "4"))
            (rule "applyEqRigid" (formula "3") (term "0") (ifseqformula "2"))
            (rule "qeq_literals" (formula "3"))
            (rule "true_left" (formula "3"))
            (rule "applyEqRigid" (formula "5") (term "0,0") (ifseqformula "2"))
            (rule "eqSymm" (formula "5"))
            (rule "applyEqRigid" (formula "3") (term "1") (ifseqformula "2"))
            (rule "applyEq" (formula "5") (term "0,0") (ifseqformula "2"))
            (rule "eqSymm" (formula "5"))
            (rule "inEqSimp_strengthen1" (formula "3") (ifseqformula "4"))
            (rule "add_zero_right" (formula "3") (term "1"))
            (rule "inEqSimp_contradEq7" (formula "4") (ifseqformula "3"))
            (rule "times_zero_1" (formula "4") (term "1,0,0"))
            (rule "add_literals" (formula "4") (term "0,0"))
            (rule "leq_literals" (formula "4") (term "0"))
            (rule "concrete_and_2" (formula "4"))
            (rule "false_right" (formula "4"))
            (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "1"))
            (rule "qeq_literals" (formula "3") (term "0"))
            (rule "concrete_and_2" (formula "3"))
            (rule "closeFalse" (formula "3"))
         )
      )
      (branch " Step Case"
         (rule "hide_left" (formula "4") (userinteraction))
         (rule "hide_left" (formula "3") (userinteraction))
         (rule "hide_left" (formula "2") (userinteraction))
         (rule "hide_left" (formula "1") (userinteraction))
         (rule "hide_right" (formula "2") (userinteraction))
         (rule "allRight" (formula "1") (inst "sk=l1_0") (userinteraction))
         (rule "allRight" (formula "1") (inst "sk=c_0") (userinteraction))
         (rule "impRight" (formula "1") (userinteraction))
         (rule "andLeft" (formula "1") (userinteraction))
         (rule "hide_left" (formula "1") (userinteraction))
         (rule "allRight" (formula "2") (inst "sk=l2_1") (userinteraction))
         (rule "allRight" (formula "2") (inst "sk=i_1") (userinteraction))
         (rule "allRight" (formula "2") (inst "sk=j_1") (userinteraction))
         (rule "impRight" (formula "2") (userinteraction))
         (rule "andLeft" (formula "1") (userinteraction))
         (rule "andLeft" (formula "1") (userinteraction))
         (rule "lengthCons" (formula "1") (term "1") (userinteraction))
         (rule "concatConsDep" (formula "5") (term "2,0") (userinteraction))
         (rule "substringI" (formula "5") (term "0") (userinteraction))
         (rule "substringI" (formula "5") (term "1") (userinteraction))
         (rule "ifthenelse_split" (formula "5") (term "0") (userinteraction))
         (branch " i_1 >  0 TRUE"
            (rule "replace_known_left" (formula "6") (term "0,1") (ifseqformula "1"))
            (rule "ifthenelse_true" (formula "6") (term "1") (userinteraction))
            (rule "instAll" (formula "6") (term "1,2,0") (ifseqformula "5") (userinteraction))
            (rule "hide_left" (formula "6") (userinteraction))
            (rule "instAll" (formula "6") (term "0,0") (ifseqformula "1") (userinteraction))
            (rule "instAll" (formula "7") (term "1,0") (ifseqformula "1") (userinteraction))
            (rule "hide_left" (formula "3") (userinteraction))
            (rule "hide_left" (formula "2") (userinteraction))
            (rule "impLeft" (formula "1") (userinteraction))
            (branch " Case 1"
               (rule "polySimp_elimSub" (formula "6") (term "1,1"))
               (rule "mul_literals" (formula "6") (term "1,1,1"))
               (rule "polySimp_elimSub" (formula "6") (term "0,1"))
               (rule "mul_literals" (formula "6") (term "1,0,1"))
               (rule "polySimp_elimSub" (formula "6") (term "0,0"))
               (rule "mul_literals" (formula "6") (term "1,0,0"))
               (rule "polySimp_elimSub" (formula "5") (term "0,1,0"))
               (rule "mul_literals" (formula "5") (term "1,0,1,0"))
               (rule "polySimp_elimSub" (formula "5") (term "0,0,0"))
               (rule "mul_literals" (formula "5") (term "1,0,0,0"))
               (rule "polySimp_elimSub" (formula "5") (term "1,1"))
               (rule "mul_literals" (formula "5") (term "1,1,1"))
               (rule "polySimp_elimSub" (formula "6") (term "1,0"))
               (rule "mul_literals" (formula "6") (term "1,1,0"))
               (rule "polySimp_elimSub" (formula "5") (term "0,1"))
               (rule "mul_literals" (formula "5") (term "1,0,1"))
               (rule "inEqSimp_gtToGeq" (formula "1"))
               (rule "times_zero_1" (formula "1") (term "1,0,0"))
               (rule "add_zero_right" (formula "1") (term "0,0"))
               (rule "polySimp_addComm0" (formula "2") (term "1"))
               (rule "polySimp_addComm0" (formula "6") (term "1,1"))
               (rule "polySimp_addComm0" (formula "6") (term "0,1"))
               (rule "polySimp_addComm0" (formula "6") (term "0,0"))
               (rule "polySimp_addComm0" (formula "5") (term "0,1,0"))
               (rule "replace_known_left" (formula "5") (term "1,0") (ifseqformula "1"))
               (rule "concrete_and_3" (formula "5") (term "0"))
               (rule "polySimp_addComm0" (formula "5") (term "1,1"))
               (rule "polySimp_addComm0" (formula "6") (term "1,0"))
               (rule "polySimp_addComm0" (formula "5") (term "0,1"))
               (rule "polySimp_addComm0" (formula "5") (term "0,0"))
               (rule "inEqSimp_commuteLeq" (formula "5") (term "0"))
               (rule "inEqSimp_homoInEq0" (formula "2"))
               (rule "polySimp_addComm1" (formula "2") (term "0"))
               (rule "inEqSimp_homoInEq1" (formula "5") (term "1"))
               (rule "polySimp_mulComm0" (formula "5") (term "1,0,1"))
               (rule "polySimp_rightDist" (formula "5") (term "1,0,1"))
               (rule "mul_literals" (formula "5") (term "0,1,0,1"))
               (rule "polySimp_addAssoc" (formula "5") (term "0,1"))
               (rule "polySimp_addComm1" (formula "5") (term "0,0,1"))
               (rule "add_literals" (formula "5") (term "0,0,0,1"))
               (rule "add_zero_left" (formula "5") (term "0,0,1"))
               (rule "inEqSimp_sepPosMonomial1" (formula "1"))
               (rule "mul_literals" (formula "1") (term "1"))
               (rule "inEqSimp_sepPosMonomial1" (formula "2"))
               (rule "polySimp_mulComm0" (formula "2") (term "1"))
               (rule "polySimp_rightDist" (formula "2") (term "1"))
               (rule "mul_literals" (formula "2") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
               (rule "polySimp_elimOne" (formula "2") (term "1,1"))
               (rule "replace_known_left" (formula "5") (term "0") (ifseqformula "2"))
               (rule "concrete_and_1" (formula "5"))
               (rule "inEqSimp_leqRight" (formula "5"))
               (rule "times_zero_1" (formula "1") (term "1,0,0"))
               (rule "add_zero_right" (formula "1") (term "0,0"))
               (rule "polySimp_addAssoc" (formula "1") (term "0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "1"))
               (rule "polySimp_mulLiterals" (formula "1") (term "0"))
               (rule "polySimp_elimOne" (formula "1") (term "0"))
               (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "2"))
               (rule "leq_literals" (formula "4") (term "0"))
               (rule "concrete_or_1" (formula "4"))
               (rule "true_left" (formula "4"))
               (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "1"))
               (rule "andLeft" (formula "4"))
               (rule "inEqSimp_homoInEq1" (formula "4"))
               (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
               (rule "polySimp_rightDist" (formula "4") (term "1,0"))
               (rule "mul_literals" (formula "4") (term "0,1,0"))
               (rule "polySimp_addAssoc" (formula "4") (term "0"))
               (rule "polySimp_addComm0" (formula "4") (term "0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
               (rule "add_literals" (formula "4") (term "1,1,0"))
               (rule "times_zero_1" (formula "4") (term "1,0"))
               (rule "add_zero_right" (formula "4") (term "0"))
               (rule "leq_literals" (formula "4"))
               (rule "closeFalse" (formula "4"))
            )
            (branch " Case 2"
               (rule "close" (formula "6") (ifseqformula "1") (userinteraction))
            )
         )
         (branch " i_1 >  0 FALSE"
            (rule "replace_known_right" (formula "6") (term "0,1") (ifseqformula "5"))
            (rule "ifthenelse_false" (formula "6") (term "1") (userinteraction))
            (rule "cut" (inst "cutFormula=i_1 = 0") (userinteraction))
            (branch " CUT: i_1 = 0 TRUE"
               (rule "applyEqRigid" (formula "7") (term "0,0") (ifseqformula "1") (userinteraction))
               (rule "applyEqRigid" (formula "7") (term "0,1") (ifseqformula "1") (userinteraction))
               (rule "substring0" (formula "7") (term "0") (userinteraction))
               (rule "ifthenelse_split" (formula "7") (term "0") (userinteraction))
               (branch " j_1 >  0 TRUE"
                  (rule "substring0" (formula "8") (term "1") (userinteraction))
                  (rule "replace_known_left" (formula "8") (term "0,1") (ifseqformula "1"))
                  (rule "ifthenelse_true" (formula "8") (term "1") (userinteraction))
                  (rule "concatConsDep" (formula "8") (term "0") (userinteraction))
                  (rule "concatConsDep" (formula "8") (term "1") (userinteraction))
                  (rule "concatEmpty1" (formula "8") (term "1,1") (userinteraction))
                  (rule "concatEmpty1" (formula "8") (term "1,0") (userinteraction))
                  (rule "instAll" (formula "8") (term "1,2,1,0") (ifseqformula "6") (userinteraction))
                  (rule "hide_left" (formula "7") (userinteraction))
                  (rule "instAll" (formula "8") (term "0,1,0") (ifseqformula "1") (userinteraction))
                  (rule "instAll" (formula "9") (term "1,1,0") (ifseqformula "1") (userinteraction))
                  (rule "impLeft" (formula "1") (userinteraction))
                  (branch " Case 1"
                     (rule "qeq_literals" (formula "1") (term "1,0,0,0"))
                     (rule "concrete_and_3" (formula "1") (term "0,0,0"))
                     (rule "qeq_literals" (formula "8") (term "1,0"))
                     (rule "concrete_and_3" (formula "8") (term "0"))
                     (rule "polySimp_elimSub" (formula "8") (term "0,1"))
                     (rule "mul_literals" (formula "8") (term "1,0,1"))
                     (rule "polySimp_elimSub" (formula "10") (term "1,1,0"))
                     (rule "mul_literals" (formula "10") (term "1,1,1,0"))
                     (rule "eqSymm" (formula "10"))
                     (rule "polySimp_elimSub" (formula "8") (term "0,0"))
                     (rule "mul_literals" (formula "8") (term "1,0,0"))
                     (rule "polySimp_elimSub" (formula "10") (term "1,1,0"))
                     (rule "mul_literals" (formula "10") (term "1,1,1,0"))
                     (rule "eqSymm" (formula "10"))
                     (rule "inEqSimp_gtRight" (formula "9"))
                     (rule "times_zero_1" (formula "1") (term "0,0"))
                     (rule "add_zero_left" (formula "1") (term "0"))
                     (rule "inEqSimp_gtToGeq" (formula "4"))
                     (rule "times_zero_1" (formula "4") (term "1,0,0"))
                     (rule "add_zero_right" (formula "4") (term "0,0"))
                     (rule "polySimp_addComm0" (formula "6") (term "1"))
                     (rule "polySimp_addComm0" (formula "9") (term "0,1"))
                     (rule "replace_known_left" (formula "9") (term "1") (ifseqformula "4"))
                     (rule "concrete_and_3" (formula "9"))
                     (rule "inEqSimp_leqRight" (formula "9"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                     (rule "polySimp_addComm0" (formula "10") (term "1,1,0"))
                     (rule "eqSymm" (formula "10"))
                     (rule "polySimp_addComm0" (formula "1") (term "1,0"))
                     (rule "polySimp_addComm0" (formula "10") (term "1,1,0"))
                     (rule "eqSymm" (formula "10"))
                     (rule "polySimp_addComm1" (formula "1") (term "0"))
                     (rule "inEqSimp_homoInEq0" (formula "7"))
                     (rule "polySimp_addComm1" (formula "7") (term "0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                     (rule "add_literals" (formula "1") (term "0,0,0"))
                     (rule "applyEqRigid" (formula "2") (term "0") (ifseqformula "6"))
                     (rule "leq_literals" (formula "2"))
                     (rule "true_left" (formula "2"))
                     (rule "applyEqRigid" (formula "7") (term "0") (ifseqformula "5"))
                     (rule "qeq_literals" (formula "7"))
                     (rule "true_left" (formula "7"))
                     (rule "applyEq" (formula "7") (term "1") (ifseqformula "5"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                     (rule "mul_literals" (formula "4") (term "1"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                     (rule "polySimp_mulComm0" (formula "6") (term "1"))
                     (rule "polySimp_rightDist" (formula "6") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                     (rule "mul_literals" (formula "6") (term "0,1"))
                     (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                     (rule "polySimp_elimOne" (formula "1") (term "0"))
                     (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "4"))
                     (rule "leq_literals" (formula "7") (term "0"))
                     (rule "concrete_or_1" (formula "7"))
                     (rule "true_left" (formula "7"))
                     (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "6"))
                     (rule "andLeft" (formula "1"))
                     (rule "inEqSimp_homoInEq1" (formula "1"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                     (rule "mul_literals" (formula "1") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                     (rule "add_literals" (formula "1") (term "0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                     (rule "add_literals" (formula "1") (term "1,1,0"))
                     (rule "times_zero_1" (formula "1") (term "1,0"))
                     (rule "add_zero_right" (formula "1") (term "0"))
                     (rule "leq_literals" (formula "1"))
                     (rule "closeFalse" (formula "1"))
                  )
                  (branch " Case 2"
                     (rule "applyEqRigid" (formula "10") (term "1,0") (ifseqformula "1") (userinteraction))
                     (rule "eqClose" (formula "10") (userinteraction))
                     (rule "closeTrue" (formula "10") (userinteraction))
                  )
               )
               (branch " j_1 >  0 FALSE"
                  (rule "cut" (inst "cutFormula=j_1 = 0") (userinteraction))
                  (branch " CUT: j_1 = 0 TRUE"
                     (rule "applyEqRigid" (formula "9") (term "1,0") (ifseqformula "1") (userinteraction))
                     (rule "applyEqRigid" (formula "9") (term "1,1") (ifseqformula "1") (userinteraction))
                     (rule "substring00" (formula "9") (term "1") (userinteraction))
                     (rule "substring00" (formula "9") (term "0") (userinteraction))
                     (rule "eqClose" (formula "9") (userinteraction))
                     (rule "closeTrue" (formula "9") (userinteraction))
                  )
                  (branch " CUT: j_1 = 0 FALSE"
                     (rule "inEqSimp_gtRight" (formula "8"))
                     (rule "times_zero_1" (formula "1") (term "0,0"))
                     (rule "add_zero_left" (formula "1") (term "0"))
                     (rule "inEqSimp_gtRight" (formula "8"))
                     (rule "times_zero_1" (formula "1") (term "0,0"))
                     (rule "add_zero_left" (formula "1") (term "0"))
                     (rule "polySimp_addComm0" (formula "4") (term "1"))
                     (rule "inEqSimp_homoInEq0" (formula "4"))
                     (rule "polySimp_addComm1" (formula "4") (term "0"))
                     (rule "applyEq" (formula "5") (term "0") (ifseqformula "3"))
                     (rule "qeq_literals" (formula "5"))
                     (rule "true_left" (formula "5"))
                     (rule "applyEq" (formula "5") (term "1") (ifseqformula "3"))
                     (rule "applyEq" (formula "1") (term "0") (ifseqformula "3"))
                     (rule "leq_literals" (formula "1"))
                     (rule "true_left" (formula "1"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                     (rule "polySimp_mulComm0" (formula "3") (term "1"))
                     (rule "polySimp_rightDist" (formula "3") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                     (rule "mul_literals" (formula "3") (term "0,1"))
                     (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                     (rule "inEqSimp_strengthen1" (formula "4") (ifseqformula "6"))
                     (rule "add_zero_right" (formula "4") (term "1"))
                     (rule "inEqSimp_contradEq7" (formula "6") (ifseqformula "4"))
                     (rule "times_zero_1" (formula "6") (term "1,0,0"))
                     (rule "add_literals" (formula "6") (term "0,0"))
                     (rule "leq_literals" (formula "6") (term "0"))
                     (rule "concrete_and_2" (formula "6"))
                     (rule "false_right" (formula "6"))
                     (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "1"))
                     (rule "qeq_literals" (formula "4") (term "0"))
                     (rule "concrete_and_2" (formula "4"))
                     (rule "closeFalse" (formula "4"))
                  )
               )
            )
            (branch " CUT: i_1 = 0 FALSE"
               (rule "inEqSimp_gtRight" (formula "6"))
               (rule "times_zero_1" (formula "1") (term "0,0"))
               (rule "add_zero_left" (formula "1") (term "0"))
               (rule "polySimp_addComm0" (formula "2") (term "1"))
               (rule "inEqSimp_homoInEq0" (formula "2"))
               (rule "polySimp_addComm1" (formula "2") (term "0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "2"))
               (rule "polySimp_mulComm0" (formula "2") (term "1"))
               (rule "polySimp_rightDist" (formula "2") (term "1"))
               (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
               (rule "mul_literals" (formula "2") (term "0,1"))
               (rule "polySimp_elimOne" (formula "2") (term "1,1"))
               (rule "inEqSimp_strengthen0" (formula "1") (ifseqformula "6"))
               (rule "add_zero_right" (formula "1") (term "1"))
               (rule "inEqSimp_contradEq3" (formula "6") (ifseqformula "1"))
               (rule "times_zero_1" (formula "6") (term "1,0,0"))
               (rule "add_zero_right" (formula "6") (term "0,0"))
               (rule "qeq_literals" (formula "6") (term "0"))
               (rule "concrete_and_2" (formula "6"))
               (rule "false_right" (formula "6"))
               (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "3"))
               (rule "qeq_literals" (formula "1") (term "0"))
               (rule "concrete_and_2" (formula "1"))
               (rule "closeFalse" (formula "1"))
            )
         )
      )
      (branch " Use Case"
         (rule "instAll" (formula "6") (term "0,2,0") (ifseqformula "1") (userinteraction))
         (rule "instAll" (formula "7") (term "1,2,0") (ifseqformula "1") (userinteraction))
         (rule "instAll" (formula "8") (term "0,0") (ifseqformula "1") (userinteraction))
         (rule "instAll" (formula "9") (term "1,0") (ifseqformula "1") (userinteraction))
         (rule "impLeft" (formula "1") (userinteraction))
         (branch " Case 1"
            (rule "replace_known_left" (formula "1") (term "1,0,0,0") (ifseqformula "6"))
            (rule "concrete_and_3" (formula "1") (term "0,0,0"))
            (rule "replace_known_left" (formula "9") (term "1") (ifseqformula "7"))
            (rule "concrete_and_3" (formula "9"))
            (rule "replace_known_left" (formula "9") (term "0") (ifseqformula "5"))
            (rule "concrete_and_1" (formula "9"))
            (rule "close" (formula "9") (ifseqformula "6"))
         )
         (branch " Case 2"
            (rule "close" (formula "10") (ifseqformula "1"))
         )
      )
   )
   (branch " j_440 <= length(l1_439) FALSE"
      (rule "ifthenelse_split" (formula "3") (term "1") (userinteraction))
      (branch " i_441 >= length(l1_439) TRUE"
         (rule "charlist_induction" (inst "phi=\\forall CharList l2; 
  \\forall int i; 
    \\forall int j; 
      (     i >= length(l1)
          & i >= 0
          & j >= i
          & j <= length(l1) + length(l2)
       ->   substring(i, j, concat(l1, l2))
          = substring(i - length(l1),
                      j - length(l1),
                      l2))") (inst "lv=l1") (inst "cv=c") (userinteraction))
         (branch " Base Case"
            (rule "hide_right" (formula "5") (userinteraction))
            (rule "hide_left" (formula "1") (userinteraction))
            (rule "hide_left" (formula "1") (userinteraction))
            (rule "hide_right" (formula "2") (userinteraction))
            (rule "allRight" (formula "1") (inst "sk=l2_2") (userinteraction))
            (rule "allRight" (formula "1") (inst "sk=i_2") (userinteraction))
            (rule "allRight" (formula "1") (inst "sk=j_2") (userinteraction))
            (rule "impRight" (formula "1") (userinteraction))
            (rule "lengthEmpty" (formula "1") (term "1,0,0,0") (userinteraction))
            (rule "lengthEmpty" (formula "1") (term "0,1,1") (userinteraction))
            (rule "eq_and" (formula "1") (term "0,0"))
            (rule "add_zero_left" (formula "1") (term "1,1"))
            (rule "andLeft" (formula "1"))
            (rule "andLeft" (formula "1"))
            (rule "inEqSimp_commuteLeq" (formula "3"))
            (rule "concatEmpty1" (formula "4") (term "2,0") (userinteraction))
            (rule "lengthEmpty" (formula "4") (term "1,0,1") (userinteraction))
            (rule "lengthEmpty" (formula "4") (term "1,1,1") (userinteraction))
            (rule "sub_zero_2" (formula "4") (term "1,1") (userinteraction))
            (rule "sub_zero_2" (formula "4") (term "0,1") (userinteraction))
            (rule "eqClose" (formula "4") (userinteraction))
            (rule "closeTrue" (formula "4") (userinteraction))
         )
         (branch " Step Case"
            (rule "hide_left" (formula "2") (userinteraction))
            (rule "hide_left" (formula "1") (userinteraction))
            (rule "hide_right" (formula "3") (userinteraction))
            (rule "hide_right" (formula "2") (userinteraction))
            (rule "allRight" (formula "1") (inst "sk=l1_1") (userinteraction))
            (rule "allRight" (formula "1") (inst "sk=c_1") (userinteraction))
            (rule "impRight" (formula "1") (userinteraction))
            (rule "andLeft" (formula "1") (userinteraction))
            (rule "inChar" (formula "1") (userinteraction))
            (rule "true_left" (formula "1") (userinteraction))
            (rule "allRight" (formula "2") (inst "sk=l2_3") (userinteraction))
            (rule "allRight" (formula "2") (inst "sk=i_3") (userinteraction))
            (rule "allRight" (formula "2") (inst "sk=j_3") (userinteraction))
            (rule "impRight" (formula "2") (userinteraction))
            (rule "andLeft" (formula "1"))
            (rule "andLeft" (formula "1"))
            (rule "andLeft" (formula "1"))
            (rule "lengthCons" (formula "1") (term "1") (userinteraction))
            (rule "lengthCons" (formula "4") (term "0,1") (userinteraction))
            (rule "concatConsDep" (formula "6") (term "2,0") (userinteraction))
            (rule "lengthCons" (formula "6") (term "1,0,1") (userinteraction))
            (rule "lengthCons" (formula "6") (term "1,1,1") (userinteraction))
            (rule "substringI" (formula "6") (term "0") (userinteraction))
            (rule "ifthenelse_split" (formula "6") (term "0") (userinteraction))
            (branch " i_3 >  0 TRUE"
               (rule "instAll" (formula "7") (term "1,2,0") (ifseqformula "6") (userinteraction))
               (rule "hide_left" (formula "7") (userinteraction))
               (rule "instAll" (formula "7") (term "0,0") (ifseqformula "1") (userinteraction))
               (rule "hide_left" (formula "2") (userinteraction))
               (rule "instAll" (formula "7") (term "1,0") (ifseqformula "1") (userinteraction))
               (rule "hide_left" (formula "2") (userinteraction))
               (rule "impLeft" (formula "1") (userinteraction))
               (branch " Case 1"
                  (rule "eqSymm" (formula "7"))
                  (rule "polySimp_elimSub" (formula "6") (term "0,1,0"))
                  (rule "mul_literals" (formula "6") (term "1,0,1,0"))
                  (rule "polySimp_elimSub" (formula "6") (term "0,0,0,0"))
                  (rule "mul_literals" (formula "6") (term "1,0,0,0,0"))
                  (rule "polySimp_elimSub" (formula "6") (term "0,1,0,0"))
                  (rule "mul_literals" (formula "6") (term "1,0,1,0,0"))
                  (rule "polySimp_elimSub" (formula "6") (term "1,1,0"))
                  (rule "mul_literals" (formula "6") (term "1,1,1,0"))
                  (rule "polySimp_elimSub" (formula "6") (term "0,1"))
                  (rule "mul_literals" (formula "6") (term "1,0,1"))
                  (rule "polySimp_elimSub" (formula "7") (term "1,0"))
                  (rule "polySimp_elimSub" (formula "7") (term "0,0"))
                  (rule "polySimp_elimSub" (formula "7") (term "1,1"))
                  (rule "mul_literals" (formula "7") (term "1,1,1"))
                  (rule "polySimp_elimSub" (formula "7") (term "0,1"))
                  (rule "mul_literals" (formula "7") (term "1,0,1"))
                  (rule "polySimp_mulComm0" (formula "7") (term "1,1,0"))
                  (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                  (rule "inEqSimp_gtToGeq" (formula "1"))
                  (rule "times_zero_1" (formula "1") (term "1,0,0"))
                  (rule "add_zero_right" (formula "1") (term "0,0"))
                  (rule "polySimp_addComm0" (formula "5") (term "0,1"))
                  (rule "polySimp_addComm0" (formula "2") (term "1"))
                  (rule "polySimp_addComm0" (formula "6") (term "0,1,0"))
                  (rule "polySimp_addComm0" (formula "6") (term "0,0,0,0"))
                  (rule "polySimp_addComm0" (formula "6") (term "0,1,0,0"))
                  (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "1"))
                  (rule "concrete_and_3" (formula "6") (term "0,0"))
                  (rule "polySimp_addComm0" (formula "6") (term "1,1,0"))
                  (rule "polySimp_addComm0" (formula "6") (term "0,1"))
                  (rule "polySimp_addComm0" (formula "7") (term "1,1"))
                  (rule "polySimp_addComm0" (formula "7") (term "0,1"))
                  (rule "polySimp_addComm0" (formula "7") (term "1,1,1,0"))
                  (rule "polySimp_addComm0" (formula "7") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "7") (term "1,1,0"))
                  (rule "mul_literals" (formula "7") (term "0,1,1,0"))
                  (rule "polySimp_rightDist" (formula "7") (term "1,0,0"))
                  (rule "mul_literals" (formula "7") (term "0,1,0,0"))
                  (rule "inEqSimp_commuteGeq" (formula "6") (term "0,0"))
                  (rule "inEqSimp_homoInEq0" (formula "5"))
                  (rule "polySimp_addComm1" (formula "5") (term "0"))
                  (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                  (rule "inEqSimp_homoInEq1" (formula "2"))
                  (rule "polySimp_addComm1" (formula "2") (term "0"))
                  (rule "polySimp_addAssoc" (formula "7") (term "1,0"))
                  (rule "polySimp_addComm0" (formula "7") (term "0,1,0"))
                  (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                  (rule "polySimp_addComm0" (formula "7") (term "0,0,0"))
                  (rule "inEqSimp_homoInEq1" (formula "6") (term "1,0"))
                  (rule "polySimp_mulComm0" (formula "6") (term "1,0,1,0"))
                  (rule "polySimp_rightDist" (formula "6") (term "1,0,1,0"))
                  (rule "mul_literals" (formula "6") (term "0,1,0,1,0"))
                  (rule "inEqSimp_homoInEq0" (formula "6") (term "1"))
                  (rule "polySimp_mulComm0" (formula "6") (term "1,0,1"))
                  (rule "polySimp_rightDist" (formula "6") (term "1,0,1"))
                  (rule "mul_literals" (formula "6") (term "0,1,0,1"))
                  (rule "polySimp_addComm1" (formula "6") (term "0,1"))
                  (rule "polySimp_addComm0" (formula "6") (term "0,0,1"))
                  (rule "replace_known_left" (formula "6") (term "1") (ifseqformula "5"))
                  (rule "concrete_and_3" (formula "6"))
                  (rule "polySimp_addAssoc" (formula "6") (term "0,1"))
                  (rule "polySimp_addComm1" (formula "6") (term "0,0,1"))
                  (rule "add_literals" (formula "6") (term "0,0,0,1"))
                  (rule "add_zero_left" (formula "6") (term "0,0,1"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                  (rule "mul_literals" (formula "1") (term "1"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                  (rule "polySimp_mulComm0" (formula "5") (term "1"))
                  (rule "polySimp_rightDist" (formula "5") (term "1"))
                  (rule "polySimp_rightDist" (formula "5") (term "0,1"))
                  (rule "mul_literals" (formula "5") (term "0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1"))
                  (rule "polySimp_elimOne" (formula "5") (term "1,0,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                  (rule "polySimp_mulComm0" (formula "2") (term "1"))
                  (rule "polySimp_rightDist" (formula "2") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                  (rule "mul_literals" (formula "2") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                  (rule "replace_known_left" (formula "6") (term "0") (ifseqformula "2"))
                  (rule "concrete_and_1" (formula "6"))
                  (rule "inEqSimp_leqRight" (formula "6"))
                  (rule "times_zero_1" (formula "1") (term "1,0,0"))
                  (rule "add_zero_right" (formula "1") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                  (rule "polySimp_elimOne" (formula "1") (term "0"))
                  (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "2"))
                  (rule "leq_literals" (formula "4") (term "0"))
                  (rule "concrete_or_1" (formula "4"))
                  (rule "true_left" (formula "4"))
                  (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "1"))
                  (rule "andLeft" (formula "4"))
                  (rule "inEqSimp_homoInEq1" (formula "4"))
                  (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                  (rule "mul_literals" (formula "4") (term "0,1,0"))
                  (rule "polySimp_addAssoc" (formula "4") (term "0"))
                  (rule "polySimp_addComm0" (formula "4") (term "0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                  (rule "add_literals" (formula "4") (term "1,1,0"))
                  (rule "times_zero_1" (formula "4") (term "1,0"))
                  (rule "add_zero_right" (formula "4") (term "0"))
                  (rule "leq_literals" (formula "4"))
                  (rule "closeFalse" (formula "4"))
               )
               (branch " Case 2"
                  (rule "eqSymm" (formula "7"))
                  (rule "polySimp_elimSub" (formula "7") (term "0,0"))
                  (rule "polySimp_elimSub" (formula "7") (term "1,1"))
                  (rule "mul_literals" (formula "7") (term "1,1,1"))
                  (rule "polySimp_elimSub" (formula "7") (term "1,0"))
                  (rule "polySimp_elimSub" (formula "7") (term "0,1"))
                  (rule "mul_literals" (formula "7") (term "1,0,1"))
                  (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "7") (term "1,1,0"))
                  (rule "polySimp_addComm0" (formula "7") (term "1,1"))
                  (rule "polySimp_addComm0" (formula "7") (term "0,1"))
                  (rule "polySimp_addComm0" (formula "7") (term "1,1,0,0"))
                  (rule "polySimp_addComm0" (formula "7") (term "1,1,1,0"))
                  (rule "polySimp_rightDist" (formula "7") (term "1,0,0"))
                  (rule "mul_literals" (formula "7") (term "0,1,0,0"))
                  (rule "polySimp_rightDist" (formula "7") (term "1,1,0"))
                  (rule "mul_literals" (formula "7") (term "0,1,1,0"))
                  (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                  (rule "polySimp_addComm0" (formula "7") (term "0,0,0"))
                  (rule "polySimp_addAssoc" (formula "7") (term "1,0"))
                  (rule "polySimp_addComm0" (formula "7") (term "0,1,0"))
                  (rule "eqSymm" (formula "1"))
                  (rule "polySimp_elimSub" (formula "1") (term "0,1,0"))
                  (rule "mul_literals" (formula "1") (term "1,0,1,0"))
                  (rule "polySimp_elimSub" (formula "1") (term "0,0,0"))
                  (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                  (rule "polySimp_elimSub" (formula "1") (term "1,1"))
                  (rule "mul_literals" (formula "1") (term "1,1,1"))
                  (rule "polySimp_elimSub" (formula "1") (term "0,1"))
                  (rule "mul_literals" (formula "1") (term "1,0,1"))
                  (rule "polySimp_elimSub" (formula "1") (term "1,0"))
                  (rule "polySimp_elimSub" (formula "1") (term "0,0"))
                  (rule "inEqSimp_gtToGeq" (formula "2"))
                  (rule "times_zero_1" (formula "2") (term "1,0,0"))
                  (rule "add_zero_right" (formula "2") (term "0,0"))
                  (rule "polySimp_addComm0" (formula "6") (term "0,1"))
                  (rule "polySimp_addComm0" (formula "3") (term "1"))
                  (rule "polySimp_addComm0" (formula "1") (term "1,1"))
                  (rule "polySimp_addComm0" (formula "1") (term "0,1"))
                  (rule "polySimp_addComm0" (formula "1") (term "0,1,0"))
                  (rule "polySimp_addComm0" (formula "1") (term "0,0,0"))
                  (rule "close" (formula "7") (ifseqformula "1"))
               )
            )
            (branch " i_3 >  0 FALSE"
               (rule "lengthGEq0" (inst "l=l1_1") (userinteraction))
               (rule "eqSymm" (formula "6") (term "1,0,0,0"))
               (rule "eqSymm" (formula "8"))
               (rule "polySimp_elimSub" (formula "6") (term "0,0,1,0,0,0"))
               (rule "polySimp_elimSub" (formula "6") (term "1,0,1,0,0,0"))
               (rule "polySimp_elimSub" (formula "8") (term "1,0"))
               (rule "polySimp_elimSub" (formula "8") (term "0,0"))
               (rule "polySimp_mulComm0" (formula "8") (term "1,1,0"))
               (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
               (rule "inEqSimp_gtRight" (formula "7"))
               (rule "times_zero_1" (formula "1") (term "0,0"))
               (rule "add_zero_left" (formula "1") (term "0"))
               (rule "polySimp_addComm0" (formula "6") (term "0,1"))
               (rule "polySimp_addComm0" (formula "3") (term "1"))
               (rule "polySimp_addComm0" (formula "7") (term "0,0,1,0,0,0"))
               (rule "polySimp_addComm0" (formula "7") (term "1,0,1,0,0,0"))
               (rule "polySimp_addComm0" (formula "8") (term "1,1,1,0"))
               (rule "polySimp_addComm0" (formula "8") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "8") (term "1,1,0"))
               (rule "mul_literals" (formula "8") (term "0,1,1,0"))
               (rule "polySimp_rightDist" (formula "8") (term "1,0,0"))
               (rule "mul_literals" (formula "8") (term "0,1,0,0"))
               (rule "inEqSimp_homoInEq0" (formula "7") (term "1,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "7") (term "0,1,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "8") (term "1,0"))
               (rule "polySimp_addComm0" (formula "8") (term "0,1,0"))
               (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
               (rule "polySimp_addComm0" (formula "8") (term "0,0,0"))
               (rule "inEqSimp_homoInEq0" (formula "6"))
               (rule "polySimp_addComm1" (formula "6") (term "0"))
               (rule "polySimp_addComm1" (formula "6") (term "0,0"))
               (rule "inEqSimp_homoInEq1" (formula "3"))
               (rule "polySimp_addComm1" (formula "3") (term "0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "7") (term "1,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "7") (term "1,1,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "7") (term "1,1,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "7") (term "1,1,1,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "7") (term "1,1,1,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "7") (term "0,1,1,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "6"))
               (rule "polySimp_mulComm0" (formula "6") (term "1"))
               (rule "polySimp_rightDist" (formula "6") (term "1"))
               (rule "polySimp_rightDist" (formula "6") (term "0,1"))
               (rule "mul_literals" (formula "6") (term "0,0,1"))
               (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1"))
               (rule "polySimp_elimOne" (formula "6") (term "1,0,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "3"))
               (rule "polySimp_mulComm0" (formula "3") (term "1"))
               (rule "polySimp_rightDist" (formula "3") (term "1"))
               (rule "mul_literals" (formula "3") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
               (rule "polySimp_elimOne" (formula "3") (term "1,1"))
               (rule "inEqSimp_antiSymm" (formula "4") (ifseqformula "1"))
               (rule "applyEq" (formula "3") (term "1,1") (ifseqformula "4"))
               (rule "add_zero_right" (formula "3") (term "1"))
               (rule "applyEq" (formula "1") (term "0") (ifseqformula "4"))
               (rule "leq_literals" (formula "1"))
               (rule "true_left" (formula "1"))
               (rule "applyEq" (formula "4") (term "0") (ifseqformula "3"))
               (rule "qeq_literals" (formula "4"))
               (rule "true_left" (formula "4"))
               (rule "applyEq" (formula "4") (term "1") (ifseqformula "3"))
               (rule "applyEqRigid" (formula "7") (term "1,0,0,0") (ifseqformula "3"))
               (rule "add_zero_right" (formula "7") (term "0,0,0"))
               (rule "applyEqRigid" (formula "7") (term "0,1") (ifseqformula "3"))
               (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "1"))
               (rule "qeq_literals" (formula "2") (term "0"))
               (rule "concrete_and_2" (formula "2"))
               (rule "closeFalse" (formula "2"))
            )
         )
         (branch " Use Case"
            (rule "instAll" (formula "4") (term "0,1") (ifseqformula "1") (userinteraction))
            (rule "instAll" (formula "6") (term "1,2,0") (ifseqformula "1") (userinteraction))
            (rule "instAll" (formula "7") (term "0,0") (ifseqformula "1") (userinteraction))
            (rule "instAll" (formula "8") (term "1,0") (ifseqformula "1") (userinteraction))
            (rule "impLeft" (formula "1") (userinteraction))
            (branch " Case 1"
               (rule "andLeft" (formula "6"))
               (rule "andLeft" (formula "6"))
               (rule "eqSymm" (formula "4") (term "1,0,0,0,0"))
               (rule "eqSymm" (formula "11"))
               (rule "eqSymm" (formula "3") (term "1,0,0,0"))
               (rule "eqSymm" (formula "2") (term "1,0,0"))
               (rule "eqSymm" (formula "1") (term "1,0"))
               (rule "replace_known_left" (formula "1") (term "1,0,0,0,0") (ifseqformula "6"))
               (rule "concrete_and_3" (formula "1") (term "0,0,0,0"))
               (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "5"))
               (rule "concrete_and_1" (formula "1") (term "0,0,0"))
               (rule "replace_known_left" (formula "9") (term "1") (ifseqformula "8"))
               (rule "concrete_and_3" (formula "9"))
               (rule "replace_known_left" (formula "9") (term "1") (ifseqformula "7"))
               (rule "concrete_and_3" (formula "9"))
               (rule "replace_known_left" (formula "9") (term "1") (ifseqformula "6"))
               (rule "concrete_and_3" (formula "9"))
               (rule "close" (formula "9") (ifseqformula "5"))
            )
            (branch " Case 2"
               (rule "close" (formula "9") (ifseqformula "1") (userinteraction))
            )
         )
      )
      (branch " i_441 >= length(l1_439) FALSE"
         (rule "charlist_induction" (inst "phi=\\forall CharList l2; 
  \\forall int i; 
    \\forall int j; 
      (     i >= 0
          & j >= i
          & j <= length(l1) + length(l2)
          & j >  length(l1)
          & i <  length(l1)
       ->   substring(i, j, concat(l1, l2))
          = concat(substring(i, length(l1), l1),
                   substring(0, j - length(l1), l2)))") (inst "lv=l1") (inst "cv=c") (userinteraction))
         (branch " Base Case"
            (rule "hide_right" (formula "5") (userinteraction))
            (rule "hide_right" (formula "4") (userinteraction))
            (rule "hide_right" (formula "3") (userinteraction))
            (rule "hide_left" (formula "1") (userinteraction))
            (rule "allRight" (formula "1") (inst "sk=l2_7") (userinteraction))
            (rule "allRight" (formula "1") (inst "sk=i_7") (userinteraction))
            (rule "allRight" (formula "1") (inst "sk=j_7") (userinteraction))
            (rule "impRight" (formula "1") (userinteraction))
            (rule "andLeft" (formula "1"))
            (rule "andLeft" (formula "1"))
            (rule "andLeft" (formula "1"))
            (rule "andLeft" (formula "1"))
            (rule "eqSymm" (formula "6"))
            (rule "polySimp_elimSub" (formula "6") (term "1,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "5"))
            (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
            (rule "inEqSimp_gtToGeq" (formula "4"))
            (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "5") (term "0"))
            (rule "polySimp_addComm1" (formula "4") (term "0"))
            (rule "inEqSimp_homoInEq0" (formula "3"))
            (rule "polySimp_addComm1" (formula "3") (term "0"))
            (rule "polySimp_addComm0" (formula "3") (term "0,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "5"))
            (rule "polySimp_mulLiterals" (formula "5") (term "0"))
            (rule "polySimp_elimOne" (formula "5") (term "0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "4"))
            (rule "polySimp_mulLiterals" (formula "4") (term "0"))
            (rule "polySimp_elimOne" (formula "4") (term "0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "3"))
            (rule "polySimp_mulComm0" (formula "3") (term "1"))
            (rule "polySimp_rightDist" (formula "3") (term "1"))
            (rule "polySimp_mulAssoc" (formula "3") (term "0,1"))
            (rule "polySimp_mulComm0" (formula "3") (term "0,0,1"))
            (rule "polySimp_mulLiterals" (formula "3") (term "0,1"))
            (rule "polySimp_elimOne" (formula "3") (term "0,1"))
            (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "4"))
            (rule "polySimp_rightDist" (formula "5") (term "0,0"))
            (rule "mul_literals" (formula "5") (term "0,0,0"))
            (rule "polySimp_addAssoc" (formula "5") (term "0"))
            (rule "polySimp_addComm1" (formula "5") (term "0,0"))
            (rule "add_literals" (formula "5") (term "0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "5"))
            (rule "polySimp_mulComm0" (formula "5") (term "1"))
            (rule "polySimp_rightDist" (formula "5") (term "1"))
            (rule "mul_literals" (formula "5") (term "0,1"))
            (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
            (rule "polySimp_elimOne" (formula "5") (term "1,1"))
            (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "5"))
            (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
            (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0"))
            (rule "add_literals" (formula "2") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "2") (term "1,0,0"))
            (rule "add_zero_right" (formula "2") (term "0,0"))
            (rule "qeq_literals" (formula "2") (term "0"))
            (rule "concrete_or_1" (formula "2"))
            (rule "true_left" (formula "2"))
            (rule "concatEmpty1" (formula "6") (term "2,1"))
            (rule "lengthEmpty" (formula "6") (term "1,0,0"))
            (rule "eqSymm" (formula "6"))
            (rule "lengthEmpty" (formula "5") (term "0"))
            (rule "inEqSimp_homoInEq1" (formula "5"))
            (rule "times_zero_2" (formula "5") (term "1,0"))
            (rule "add_zero_right" (formula "5") (term "0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "5"))
            (rule "mul_literals" (formula "5") (term "1"))
            (rule "inEqSimp_contradInEq1" (formula "5") (ifseqformula "1"))
            (rule "qeq_literals" (formula "5") (term "0"))
            (rule "concrete_and_2" (formula "5"))
            (rule "closeFalse" (formula "5"))
         )
         (branch " Step Case"
            (rule "hide_right" (formula "3") (userinteraction))
            (rule "hide_right" (formula "3") (userinteraction))
            (rule "hide_right" (formula "3") (userinteraction))
            (rule "hide_left" (formula "1") (userinteraction))
            (rule "allRight" (formula "1") (inst "sk=l1_3") (userinteraction))
            (rule "allRight" (formula "1") (inst "sk=c_3") (userinteraction))
            (rule "impRight" (formula "1") (userinteraction))
            (rule "andLeft" (formula "1") (userinteraction))
            (rule "inChar" (formula "1") (userinteraction))
            (rule "true_left" (formula "1") (userinteraction))
            (rule "allRight" (formula "2") (inst "sk=l2_6") (userinteraction))
            (rule "allRight" (formula "2") (inst "sk=i_6") (userinteraction))
            (rule "allRight" (formula "2") (inst "sk=j_6") (userinteraction))
            (rule "impRight" (formula "2") (userinteraction))
            (rule "lengthCons" (formula "1") (term "0,1,1,0,0") (userinteraction))
            (rule "lengthCons" (formula "1") (term "1,1,0") (userinteraction))
            (rule "lengthCons" (formula "1") (term "1,1") (userinteraction))
            (rule "concatConsDep" (formula "3") (term "2,0") (userinteraction))
            (rule "substringI" (formula "3") (term "0") (userinteraction))
            (rule "lengthCons" (formula "3") (term "1,0,1") (userinteraction))
            (rule "substringI" (formula "3") (term "0,1") (userinteraction))
            (rule "ifthenelse_split" (formula "3") (term "0") (userinteraction))
            (branch " i_6 >  0 TRUE"
               (rule "replace_known_left" (formula "4") (term "0,0,1") (ifseqformula "1"))
               (rule "ifthenelse_true" (formula "4") (term "0,1") (userinteraction))
               (rule "instAll" (formula "4") (term "1,2,0") (ifseqformula "3") (userinteraction))
               (rule "instAll" (formula "5") (term "0,0") (ifseqformula "1") (userinteraction))
               (rule "instAll" (formula "6") (term "1,0") (ifseqformula "1") (userinteraction))
               (rule "impLeft" (formula "1") (userinteraction))
               (branch " Case 1"
                  (rule "andLeft" (formula "4"))
                  (rule "andLeft" (formula "4"))
                  (rule "andLeft" (formula "4"))
                  (rule "andLeft" (formula "4"))
                  (rule "eqSymm" (formula "11"))
                  (rule "polySimp_elimSub" (formula "1") (term "1,1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "1") (term "1,1,1,0,0,0,0,0"))
                  (rule "polySimp_elimSub" (formula "10") (term "0,1"))
                  (rule "mul_literals" (formula "10") (term "1,0,1"))
                  (rule "polySimp_elimSub" (formula "10") (term "1,1,0,0,0"))
                  (rule "mul_literals" (formula "10") (term "1,1,1,0,0,0"))
                  (rule "polySimp_elimSub" (formula "10") (term "0,1,0,0,0"))
                  (rule "mul_literals" (formula "10") (term "1,0,1,0,0,0"))
                  (rule "polySimp_elimSub" (formula "10") (term "0,0,0,0,0"))
                  (rule "mul_literals" (formula "10") (term "1,0,0,0,0,0"))
                  (rule "polySimp_elimSub" (formula "10") (term "0,1,0,0"))
                  (rule "mul_literals" (formula "10") (term "1,0,1,0,0"))
                  (rule "polySimp_elimSub" (formula "9") (term "1,1,1,1,0,0,0"))
                  (rule "polySimp_elimSub" (formula "1") (term "0,0,0,0,0,0,0"))
                  (rule "mul_literals" (formula "1") (term "1,0,0,0,0,0,0,0"))
                  (rule "polySimp_elimSub" (formula "10") (term "0,1,0"))
                  (rule "mul_literals" (formula "10") (term "1,0,1,0"))
                  (rule "polySimp_elimSub" (formula "2") (term "1,1,1,1,0,0"))
                  (rule "polySimp_elimSub" (formula "1") (term "0,0,1,0"))
                  (rule "mul_literals" (formula "1") (term "1,0,0,1,0"))
                  (rule "polySimp_elimSub" (formula "1") (term "1,1,1,1,0"))
                  (rule "polySimp_elimSub" (formula "1") (term "0,0,1,1,0"))
                  (rule "mul_literals" (formula "1") (term "1,0,0,1,1,0"))
                  (rule "polySimp_elimSub" (formula "1") (term "0,1,0,0"))
                  (rule "mul_literals" (formula "1") (term "1,0,1,0,0"))
                  (rule "polySimp_elimSub" (formula "11") (term "1,1,0"))
                  (rule "polySimp_elimSub" (formula "11") (term "0,0,0"))
                  (rule "mul_literals" (formula "11") (term "1,0,0,0"))
                  (rule "eqSymm" (formula "11"))
                  (rule "polySimp_elimSub" (formula "11") (term "1,0"))
                  (rule "mul_literals" (formula "11") (term "1,1,0"))
                  (rule "polySimp_elimSub" (formula "11") (term "0,0"))
                  (rule "mul_literals" (formula "11") (term "1,0,0"))
                  (rule "eqSymm" (formula "11"))
                  (rule "polySimp_elimSub" (formula "11") (term "1,0,0"))
                  (rule "mul_literals" (formula "11") (term "1,1,0,0"))
                  (rule "polySimp_addLiterals" (formula "11") (term "1,0,0"))
                  (rule "add_zero_right" (formula "11") (term "1,0,0"))
                  (rule "inEqSimp_gtToGeq" (formula "3"))
                  (rule "times_zero_1" (formula "3") (term "1,0,0"))
                  (rule "add_zero_right" (formula "3") (term "0,0"))
                  (rule "inEqSimp_gtToGeq" (formula "9") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "2") (term "1,0,0,0"))
                  (rule "inEqSimp_gtToGeq" (formula "1") (term "1,0,0,0"))
                  (rule "inEqSimp_gtToGeq" (formula "2") (term "1,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "8"))
                  (rule "inEqSimp_gtToGeq" (formula "7"))
                  (rule "inEqSimp_ltToLeq" (formula "10") (term "1"))
                  (rule "inEqSimp_gtToGeq" (formula "10") (term "1,0"))
                  (rule "polySimp_addComm0" (formula "6") (term "0,1"))
                  (rule "polySimp_addComm0" (formula "1") (term "1,1,0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "1") (term "1,0,0"))
                  (rule "polySimp_addComm0" (formula "10") (term "1,1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1,0,0,0,0"))
                  (rule "polySimp_addComm0" (formula "10") (term "0,1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1"))
                  (rule "polySimp_addComm0" (formula "10") (term "0,0,0,0,0"))
                  (rule "replace_known_left" (formula "10") (term "0,0,0,0") (ifseqformula "3"))
                  (rule "concrete_and_1" (formula "10") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0"))
                  (rule "polySimp_addComm0" (formula "10") (term "0,1,0,0"))
                  (rule "polySimp_addComm0" (formula "9") (term "1,1,1,1,0,0,0"))
                  (rule "polySimp_addComm0" (formula "1") (term "0,0,0,0,0,0,0"))
                  (rule "replace_known_left" (formula "1") (term "0,0,0,0,0,0") (ifseqformula "3"))
                  (rule "concrete_and_1" (formula "1") (term "0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0"))
                  (rule "polySimp_addComm0" (formula "2") (term "1,1,1,1,0,0"))
                  (rule "polySimp_addComm0" (formula "1") (term "0,0,1,0"))
                  (rule "polySimp_addComm0" (formula "1") (term "1,1,1,1,0"))
                  (rule "polySimp_addComm0" (formula "1") (term "0,0,1,1,0"))
                  (rule "polySimp_addComm0" (formula "11") (term "0,1"))
                  (rule "polySimp_addComm0" (formula "11") (term "0,0,0"))
                  (rule "polySimp_addComm0" (formula "11") (term "1,1"))
                  (rule "polySimp_addComm0" (formula "8") (term "1,1,0,0"))
                  (rule "polySimp_addComm0" (formula "7") (term "1,1,0,0"))
                  (rule "polySimp_addComm0" (formula "10") (term "1,0,1"))
                  (rule "polySimp_addComm0" (formula "10") (term "1,0,1,0"))
                  (rule "inEqSimp_homoInEq0" (formula "9") (term "1,0,0,0,0,0,0"))
                  (rule "polySimp_addComm0" (formula "1") (term "1,0,1,0,0"))
                  (rule "polySimp_addComm1" (formula "10") (term "0,1"))
                  (rule "polySimp_addComm1" (formula "10") (term "0,1,0"))
                  (rule "polySimp_addComm1" (formula "9") (term "0,1,0,0,0,0,0,0"))
                  (rule "polySimp_addComm1" (formula "1") (term "0,1,0,0"))
                  (rule "polySimp_rightDist" (formula "8") (term "1,0,0"))
                  (rule "mul_literals" (formula "8") (term "0,1,0,0"))
                  (rule "polySimp_rightDist" (formula "7") (term "1,0,0"))
                  (rule "mul_literals" (formula "7") (term "0,1,0,0"))
                  (rule "inEqSimp_homoInEq0" (formula "6"))
                  (rule "polySimp_addComm1" (formula "6") (term "0"))
                  (rule "polySimp_addComm1" (formula "6") (term "0,0"))
                  (rule "inEqSimp_homoInEq1" (formula "10") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,0"))
                  (rule "mul_literals" (formula "10") (term "0,1,0,0,0,0"))
                  (rule "inEqSimp_homoInEq0" (formula "10") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "10") (term "1,0,1,0,0"))
                  (rule "polySimp_rightDist" (formula "10") (term "1,0,1,0,0"))
                  (rule "mul_literals" (formula "10") (term "0,1,0,1,0,0"))
                  (rule "polySimp_addComm1" (formula "10") (term "0,1,0,0"))
                  (rule "polySimp_addComm0" (formula "10") (term "0,0,1,0,0"))
                  (rule "replace_known_left" (formula "10") (term "1,0,0") (ifseqformula "6"))
                  (rule "concrete_and_3" (formula "10") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "10") (term "0,0,1"))
                  (rule "add_literals" (formula "10") (term "0,0,0,1"))
                  (rule "add_zero_left" (formula "10") (term "0,0,1"))
                  (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0"))
                  (rule "add_literals" (formula "10") (term "0,0,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                  (rule "add_literals" (formula "8") (term "0,0,0"))
                  (rule "add_zero_left" (formula "8") (term "0,0"))
                  (rule "polySimp_addComm0" (formula "8") (term "0"))
                  (rule "replace_known_left" (formula "1") (term "1,0,0") (ifseqformula "8"))
                  (rule "concrete_and_3" (formula "1") (term "0,0"))
                  (rule "replace_known_left" (formula "10") (term "1") (ifseqformula "8"))
                  (rule "concrete_and_3" (formula "10"))
                  (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                  (rule "add_literals" (formula "7") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "7") (term "0"))
                  (rule "replace_known_left" (formula "10") (term "1") (ifseqformula "7"))
                  (rule "concrete_and_3" (formula "10"))
                  (rule "inEqSimp_leqRight" (formula "10"))
                  (rule "times_zero_1" (formula "1") (term "1,0,0"))
                  (rule "add_zero_right" (formula "1") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "1,0"))
                  (rule "polySimp_addComm1" (formula "1") (term "0,1,0"))
                  (rule "add_literals" (formula "1") (term "0,0,1,0"))
                  (rule "add_zero_left" (formula "1") (term "0,1,0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                  (rule "mul_literals" (formula "4") (term "1"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "10") (term "0,1,1,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0,0,0"))
                  (rule "mul_literals" (formula "10") (term "0,1,1,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "3") (term "1,1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "3") (term "1,1,0,0,0"))
                  (rule "mul_literals" (formula "3") (term "0,1,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "3") (term "1,1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "3") (term "1,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "3") (term "1,1,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "3") (term "1,1,0,0,0,0"))
                  (rule "mul_literals" (formula "3") (term "0,1,1,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,1,1,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "3") (term "1,1,1,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "10") (term "0,1,1,0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                  (rule "polySimp_mulComm0" (formula "7") (term "1"))
                  (rule "polySimp_rightDist" (formula "7") (term "1"))
                  (rule "polySimp_rightDist" (formula "7") (term "0,1"))
                  (rule "mul_literals" (formula "7") (term "0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "7") (term "1,0,1"))
                  (rule "polySimp_elimOne" (formula "7") (term "1,0,1"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "9"))
                  (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                  (rule "polySimp_elimOne" (formula "9") (term "0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "2") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "2") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "2") (term "0,1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "2") (term "1,1,1,0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "8"))
                  (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                  (rule "polySimp_elimOne" (formula "8") (term "0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                  (rule "polySimp_elimOne" (formula "1") (term "0"))
                  (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "4"))
                  (rule "leq_literals" (formula "5") (term "0"))
                  (rule "concrete_or_1" (formula "5"))
                  (rule "true_left" (formula "5"))
                  (rule "inEqSimp_contradInEq0" (formula "5") (ifseqformula "1"))
                  (rule "andLeft" (formula "5"))
                  (rule "inEqSimp_homoInEq1" (formula "5"))
                  (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                  (rule "mul_literals" (formula "5") (term "0,1,0"))
                  (rule "polySimp_addAssoc" (formula "5") (term "0"))
                  (rule "polySimp_addComm0" (formula "5") (term "0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "5") (term "0"))
                  (rule "add_literals" (formula "5") (term "1,1,0"))
                  (rule "times_zero_1" (formula "5") (term "1,0"))
                  (rule "add_zero_right" (formula "5") (term "0"))
                  (rule "leq_literals" (formula "5"))
                  (rule "closeFalse" (formula "5"))
               )
               (branch " Case 2"
                  (rule "andLeft" (formula "5"))
                  (rule "andLeft" (formula "5"))
                  (rule "andLeft" (formula "5"))
                  (rule "andLeft" (formula "5"))
                  (rule "eqSymm" (formula "11"))
                  (rule "eqSymm" (formula "1"))
                  (rule "polySimp_elimSub" (formula "10") (term "1,1,1,1,0,0,0"))
                  (rule "polySimp_elimSub" (formula "3") (term "1,1,1,1,0,0"))
                  (rule "polySimp_elimSub" (formula "2") (term "0,0,0,0,0,0,0"))
                  (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0,0,0"))
                  (rule "polySimp_elimSub" (formula "2") (term "1,1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "2") (term "1,1,1,0,0,0,0,0"))
                  (rule "polySimp_elimSub" (formula "2") (term "0,0,1,1,0"))
                  (rule "mul_literals" (formula "2") (term "1,0,0,1,1,0"))
                  (rule "polySimp_elimSub" (formula "2") (term "0,1,0,0"))
                  (rule "mul_literals" (formula "2") (term "1,0,1,0,0"))
                  (rule "polySimp_elimSub" (formula "2") (term "1,1,1,1,0"))
                  (rule "polySimp_elimSub" (formula "2") (term "0,0,1,0"))
                  (rule "mul_literals" (formula "2") (term "1,0,0,1,0"))
                  (rule "polySimp_elimSub" (formula "11") (term "1,1,0"))
                  (rule "polySimp_elimSub" (formula "11") (term "1,1"))
                  (rule "mul_literals" (formula "11") (term "1,1,1"))
                  (rule "polySimp_elimSub" (formula "11") (term "0,0,0"))
                  (rule "mul_literals" (formula "11") (term "1,0,0,0"))
                  (rule "eqSymm" (formula "11"))
                  (rule "polySimp_elimSub" (formula "1") (term "0,1,1,0"))
                  (rule "mul_literals" (formula "1") (term "1,0,1,1,0"))
                  (rule "polySimp_elimSub" (formula "1") (term "0,0,0"))
                  (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                  (rule "eqSymm" (formula "1"))
                  (rule "polySimp_elimSub" (formula "11") (term "0,0"))
                  (rule "mul_literals" (formula "11") (term "1,0,0"))
                  (rule "eqSymm" (formula "11"))
                  (rule "polySimp_elimSub" (formula "1") (term "1,0"))
                  (rule "mul_literals" (formula "1") (term "1,1,0"))
                  (rule "polySimp_elimSub" (formula "1") (term "0,0"))
                  (rule "mul_literals" (formula "1") (term "1,0,0"))
                  (rule "eqSymm" (formula "1"))
                  (rule "polySimp_elimSub" (formula "11") (term "1,0,0"))
                  (rule "mul_literals" (formula "11") (term "1,1,0,0"))
                  (rule "polySimp_addLiterals" (formula "11") (term "1,0,0"))
                  (rule "add_zero_right" (formula "11") (term "1,0,0"))
                  (rule "polySimp_elimSub" (formula "1") (term "1,1,0"))
                  (rule "inEqSimp_gtToGeq" (formula "10") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "3") (term "1,0,0,0"))
                  (rule "inEqSimp_gtToGeq" (formula "3") (term "1,0,0,0,0"))
                  (rule "inEqSimp_gtToGeq" (formula "4"))
                  (rule "times_zero_1" (formula "4") (term "1,0,0"))
                  (rule "add_zero_right" (formula "4") (term "0,0"))
                  (rule "inEqSimp_gtToGeq" (formula "2") (term "1,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "9"))
                  (rule "inEqSimp_gtToGeq" (formula "8"))
                  (rule "inEqSimp_ltToLeq" (formula "2") (term "1,0,0"))
                  (rule "polySimp_addComm0" (formula "7") (term "0,1"))
                  (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1,0,0,0"))
                  (rule "polySimp_addComm0" (formula "10") (term "1,1,1,1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1,0,0,0,0"))
                  (rule "polySimp_addComm0" (formula "3") (term "1,1,1,1,0,0"))
                  (rule "polySimp_addComm0" (formula "2") (term "0,0,0,0,0,0,0"))
                  (rule "replace_known_left" (formula "2") (term "0,0,0,0,0,0") (ifseqformula "4"))
                  (rule "concrete_and_1" (formula "2") (term "0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1,0,0"))
                  (rule "polySimp_addComm0" (formula "2") (term "0,0,1,1,0"))
                  (rule "polySimp_addComm0" (formula "2") (term "1,1,1,1,0"))
                  (rule "polySimp_addComm0" (formula "2") (term "0,0,1,0"))
                  (rule "polySimp_addComm0" (formula "11") (term "1,1"))
                  (rule "polySimp_addComm0" (formula "11") (term "0,0,0"))
                  (rule "eqSymm" (formula "11"))
                  (rule "polySimp_addComm0" (formula "1") (term "0,0,0"))
                  (rule "eqSymm" (formula "1"))
                  (rule "polySimp_addComm0" (formula "9") (term "1,1,0,0"))
                  (rule "polySimp_addComm0" (formula "8") (term "1,1,0,0"))
                  (rule "polySimp_addComm0" (formula "2") (term "1,0,1,0,0"))
                  (rule "inEqSimp_homoInEq0" (formula "10") (term "1,0,0,0,0,0,0"))
                  (rule "polySimp_addComm0" (formula "2") (term "1,0,0,0,0,0"))
                  (rule "polySimp_addComm0" (formula "11") (term "0,0"))
                  (rule "eqSymm" (formula "11"))
                  (rule "polySimp_addComm0" (formula "1") (term "1,0"))
                  (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                  (rule "eqSymm" (formula "1"))
                  (rule "polySimp_addComm1" (formula "2") (term "0,1,0,0"))
                  (rule "polySimp_addComm1" (formula "10") (term "0,1,0,0,0,0,0,0"))
                  (rule "polySimp_addComm0" (formula "1") (term "0,1,1,0"))
                  (rule "polySimp_rightDist" (formula "9") (term "1,0,0"))
                  (rule "mul_literals" (formula "9") (term "0,1,0,0"))
                  (rule "polySimp_rightDist" (formula "8") (term "1,0,0"))
                  (rule "mul_literals" (formula "8") (term "0,1,0,0"))
                  (rule "inEqSimp_homoInEq0" (formula "7"))
                  (rule "polySimp_addComm1" (formula "7") (term "0"))
                  (rule "polySimp_addComm1" (formula "7") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "2") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "2") (term "0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
                  (rule "add_literals" (formula "9") (term "0,0,0"))
                  (rule "add_zero_left" (formula "9") (term "0,0"))
                  (rule "polySimp_addComm0" (formula "9") (term "0"))
                  (rule "replace_known_left" (formula "2") (term "1,0,0") (ifseqformula "9"))
                  (rule "concrete_and_3" (formula "2") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                  (rule "add_literals" (formula "8") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "8") (term "0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                  (rule "mul_literals" (formula "4") (term "1"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "10") (term "0,1,1,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0,0,0"))
                  (rule "mul_literals" (formula "10") (term "0,1,1,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "3") (term "1,1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "3") (term "1,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,1,1,0,0,0"))
                  (rule "mul_literals" (formula "3") (term "0,1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "3") (term "1,1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "3") (term "1,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "3") (term "1,1,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "3") (term "1,1,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,1,1,0,0,0,0"))
                  (rule "mul_literals" (formula "3") (term "0,1,1,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "3") (term "1,1,1,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "10") (term "0,1,1,0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                  (rule "polySimp_mulComm0" (formula "7") (term "1"))
                  (rule "polySimp_rightDist" (formula "7") (term "1"))
                  (rule "polySimp_rightDist" (formula "7") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "7") (term "1,0,1"))
                  (rule "mul_literals" (formula "7") (term "0,0,1"))
                  (rule "polySimp_elimOne" (formula "7") (term "1,0,1"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "9"))
                  (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                  (rule "polySimp_elimOne" (formula "9") (term "0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "2") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "2") (term "1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,1,1,0,0"))
                  (rule "mul_literals" (formula "2") (term "0,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "2") (term "1,1,1,0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "8"))
                  (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                  (rule "polySimp_elimOne" (formula "8") (term "0"))
                  (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "4"))
                  (rule "leq_literals" (formula "5") (term "0"))
                  (rule "concrete_or_1" (formula "5"))
                  (rule "true_left" (formula "5"))
                  (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "7"))
                  (rule "polySimp_mulComm0" (formula "8") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "8") (term "0"))
                  (rule "polySimp_addComm0" (formula "8") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                  (rule "polySimp_mulComm0" (formula "8") (term "1"))
                  (rule "polySimp_rightDist" (formula "8") (term "1"))
                  (rule "mul_literals" (formula "8") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "8") (term "1,1"))
                  (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "8"))
                  (rule "inEqSimp_homoInEq0" (formula "5") (term "0"))
                  (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0"))
                  (rule "add_literals" (formula "5") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "5") (term "1,0,0"))
                  (rule "add_zero_right" (formula "5") (term "0,0"))
                  (rule "qeq_literals" (formula "5") (term "0"))
                  (rule "concrete_or_1" (formula "5"))
                  (rule "true_left" (formula "5"))
                  (rule "nnf_imp2or" (formula "3") (term "0,0"))
                  (rule "nnf_imp2or" (formula "2") (term "0"))
                  (rule "nnf_imp2or" (formula "9") (term "0,0,0"))
                  (rule "nnf_notAnd" (formula "2") (term "0,0"))
                  (rule "inEqSimp_notGeq" (formula "2") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "2") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "2") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "2") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "2") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "2") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "2") (term "1,1,0,0"))
                  (rule "nnf_notAnd" (formula "3") (term "0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "3") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "3") (term "1,0,0,1,0,0,0"))
                  (rule "mul_literals" (formula "3") (term "0,1,0,0,1,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "3") (term "0,0,1,0,0,0"))
                  (rule "add_literals" (formula "3") (term "0,0,0,1,0,0,0"))
                  (rule "add_zero_left" (formula "3") (term "0,0,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "3") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "3") (term "1,1,0,0,0"))
                  (rule "nnf_notAnd" (formula "2") (term "0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "2") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "2") (term "1,0,0,1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "2") (term "0,1,0,0,1,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "2") (term "1,1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "2") (term "1,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "2") (term "1,1,1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "2") (term "0,1,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,1,0,0,0"))
                  (rule "mul_literals" (formula "2") (term "0,0,1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "2") (term "1,0,1,1,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "2") (term "0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0,0,0,0"))
                  (rule "mul_literals" (formula "2") (term "0,1,0,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "2") (term "0,0,0,0,0,0"))
                  (rule "add_literals" (formula "2") (term "0,0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "2") (term "0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0,0"))
                  (rule "mul_literals" (formula "2") (term "0,1,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "2") (term "1,1,0,0,0,0"))
                  (rule "nnf_notAnd" (formula "9") (term "0,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "9") (term "1,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0,0,0,0"))
                  (rule "mul_literals" (formula "9") (term "0,1,0,0,1,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0,0,0,0"))
                  (rule "add_literals" (formula "9") (term "0,0,0,1,0,0,0,0"))
                  (rule "add_zero_left" (formula "9") (term "0,0,1,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0,0,0"))
                  (rule "nnf_notAnd" (formula "3") (term "0,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "3") (term "1,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "3") (term "1,0,0,1,0,0,0,0"))
                  (rule "mul_literals" (formula "3") (term "0,1,0,0,1,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "3") (term "0,0,1,0,0,0,0"))
                  (rule "add_literals" (formula "3") (term "0,0,0,1,0,0,0,0"))
                  (rule "add_zero_left" (formula "3") (term "0,0,1,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "1,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "3") (term "1,1,0,0,0,0"))
                  (rule "nnf_notAnd" (formula "9") (term "0,0,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "9") (term "1,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "9") (term "0,1,0,0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0,0,0,0,0"))
                  (rule "add_literals" (formula "9") (term "0,0,0,1,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "9") (term "0,0,1,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0,0,0,0"))
                  (rule "nnf_notAnd" (formula "3") (term "0,0,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "3") (term "1,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "3") (term "1,0,0,1,0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "3") (term "0,1,0,0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "3") (term "0,0,1,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "3") (term "1,0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "3") (term "1,1,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "3") (term "1,1,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,1,1,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "3") (term "1,1,1,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "3") (term "0,1,1,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "3") (term "0,0,1,1,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "3") (term "1,0,1,1,0,0,0,0,0"))
                  (rule "nnf_notAnd" (formula "9") (term "0,0,0,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "9") (term "1,0,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0,0,0,0,0,0"))
                  (rule "polySimp_mulAssoc" (formula "9") (term "0,1,0,0,1,0,0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "9") (term "0,0,1,0,0,1,0,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "9") (term "0,1,0,0,1,0,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "9") (term "0,1,0,0,1,0,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "9") (term "0,1,1,0,0,0,0,0,0"))
                  (rule "mul_literals" (formula "9") (term "0,0,1,1,0,0,0,0,0,0"))
                  (rule "nnf_notAnd" (formula "3") (term "0,0,0,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "3") (term "0,0,0,0,0,0,0"))
                  (rule "times_zero_1" (formula "3") (term "1,0,0,0,0,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "3") (term "0,0,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "0,0,0,0,0,0,0"))
                  (rule "mul_literals" (formula "3") (term "1,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "3") (term "1,0,0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1,0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "1,0,0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "3") (term "1,1,0,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "3") (term "1,1,0,0,0,0,0,0"))
                  (rule "mul_literals" (formula "3") (term "0,1,1,0,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,1,1,0,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "3") (term "1,1,1,0,0,0,0,0,0"))
                  (rule "nnf_notAnd" (formula "9") (term "0,0,0,0,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "9") (term "0,0,0,0,0,0,0,0"))
                  (rule "times_zero_1" (formula "9") (term "1,0,0,0,0,0,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "9") (term "0,0,0,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0,0,0,0,0,0"))
                  (rule "mul_literals" (formula "9") (term "1,0,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "9") (term "1,0,0,0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0,0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0,0,0,0,0,0"))
                  (rule "mul_literals" (formula "9") (term "0,1,1,0,0,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0,0,0,0,0,0"))
                  (rule "commute_or_2" (formula "2") (term "0,0"))
                  (rule "lengthCons" (formula "10") (term "0,1,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "10") (term "1,1,1,0"))
                  (rule "polySimp_addComm0" (formula "10") (term "1,1,1,1,0"))
                  (rule "polySimp_rightDist" (formula "10") (term "1,1,1,0"))
                  (rule "mul_literals" (formula "10") (term "0,1,1,1,0"))
                  (rule "polySimp_addAssoc" (formula "10") (term "1,1,0"))
                  (rule "polySimp_addComm0" (formula "10") (term "0,1,1,0"))
                  (rule "close" (formula "10") (ifseqformula "1"))
               )
            )
            (branch " i_6 >  0 FALSE"
               (rule "cut" (inst "cutFormula=i_6 = 0") (userinteraction))
               (branch " CUT: i_6 = 0 TRUE"
                  (rule "replace_known_right" (formula "5") (term "0,0,1") (ifseqformula "4"))
                  (rule "ifthenelse_false" (formula "5") (term "0,1") (userinteraction))
                  (rule "applyEqRigid" (formula "5") (term "0,0") (ifseqformula "1") (userinteraction))
                  (rule "applyEqRigid" (formula "5") (term "0,0,1") (ifseqformula "1") (userinteraction))
                  (rule "substring0" (formula "5") (term "0") (userinteraction))
                  (rule "ifthenelse_split" (formula "5") (term "0") (userinteraction))
                  (branch " j_6 >  0 TRUE"
                     (rule "concatConsDep" (formula "6") (term "0") (userinteraction))
                     (rule "concatEmpty1" (formula "6") (term "1,0") (userinteraction))
                     (rule "instAll" (formula "6") (term "1,2,1,0") (ifseqformula "4") (userinteraction))
                     (rule "hide_left" (formula "5") (userinteraction))
                     (rule "instAll" (formula "6") (term "0,1,0") (ifseqformula "1") (userinteraction))
                     (rule "instAll" (formula "7") (term "1,1,0") (ifseqformula "1") (userinteraction))
                     (rule "hide_left" (formula "2") (userinteraction))
                     (rule "hide_left" (formula "2") (userinteraction))
                     (rule "impLeft" (formula "1") (userinteraction))
                     (branch " Case 1"
                        (rule "qeq_literals" (formula "4") (term "0,0,0,0") (userinteraction))
                        (rule "concrete_and_1" (formula "4") (term "0,0,0") (userinteraction))
                        (rule "andRight" (formula "4") (userinteraction))
                        (branch " Case 1"
                           (rule "andRight" (formula "4") (userinteraction))
                           (branch " Case 1"
                              (rule "andRight" (formula "4") (userinteraction))
                              (branch " Case 1"
                                 (rule "andLeft" (formula "3"))
                                 (rule "andLeft" (formula "3"))
                                 (rule "andLeft" (formula "3"))
                                 (rule "andLeft" (formula "3"))
                                 (rule "eqSymm" (formula "10"))
                                 (rule "polySimp_elimSub" (formula "8") (term "0"))
                                 (rule "mul_literals" (formula "8") (term "1,0"))
                                 (rule "polySimp_elimSub" (formula "10") (term "1,1,1"))
                                 (rule "mul_literals" (formula "10") (term "1,1,1,1"))
                                 (rule "polySimp_elimSub" (formula "10") (term "1,1,0"))
                                 (rule "inEqSimp_gtRight" (formula "9"))
                                 (rule "times_zero_1" (formula "1") (term "0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0"))
                                 (rule "inEqSimp_geqRight" (formula "9"))
                                 (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "1") (term "0,0"))
                                 (rule "inEqSimp_gtToGeq" (formula "3"))
                                 (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "3") (term "0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "9"))
                                 (rule "inEqSimp_gtToGeq" (formula "8"))
                                 (rule "polySimp_addComm0" (formula "7") (term "0,1"))
                                 (rule "polySimp_addComm0" (formula "10") (term "1,0,0"))
                                 (rule "polySimp_addComm0" (formula "10") (term "1,1,1"))
                                 (rule "polySimp_addComm0" (formula "1") (term "1,0"))
                                 (rule "polySimp_addComm0" (formula "9") (term "1,1,0,0"))
                                 (rule "polySimp_addComm0" (formula "8") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "9") (term "1,0,0"))
                                 (rule "mul_literals" (formula "9") (term "0,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "8") (term "1,0,0"))
                                 (rule "mul_literals" (formula "8") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
                                 (rule "add_literals" (formula "9") (term "0,0,0"))
                                 (rule "add_zero_left" (formula "9") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "9") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                                 (rule "add_literals" (formula "8") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "8") (term "0"))
                                 (rule "inEqSimp_homoInEq0" (formula "7"))
                                 (rule "polySimp_addComm1" (formula "7") (term "0"))
                                 (rule "polySimp_addComm1" (formula "7") (term "0,0"))
                                 (rule "applyEq" (formula "5") (term "0") (ifseqformula "4"))
                                 (rule "qeq_literals" (formula "5"))
                                 (rule "true_left" (formula "5"))
                                 (rule "applyEq" (formula "5") (term "1") (ifseqformula "4"))
                                 (rule "applyEqRigid" (formula "2") (term "0") (ifseqformula "4"))
                                 (rule "leq_literals" (formula "2"))
                                 (rule "true_left" (formula "2"))
                                 (rule "applyEqRigid" (formula "7") (term "0,0") (ifseqformula "3"))
                                 (rule "add_zero_left" (formula "7") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                 (rule "mul_literals" (formula "2") (term "1"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "6"))
                                 (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                 (rule "polySimp_elimOne" (formula "6") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                 (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                 (rule "polySimp_rightDist" (formula "5") (term "1"))
                                 (rule "polySimp_rightDist" (formula "5") (term "0,1"))
                                 (rule "mul_literals" (formula "5") (term "0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1"))
                                 (rule "polySimp_elimOne" (formula "5") (term "1,0,1"))
                                 (rule "inEqSimp_invertInEq0" (formula "7"))
                                 (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                 (rule "times_zero_2" (formula "7") (term "1"))
                                 (rule "polySimp_elimOne" (formula "7") (term "0"))
                                 (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "2"))
                                 (rule "qeq_literals" (formula "1") (term "0"))
                                 (rule "concrete_and_2" (formula "1"))
                                 (rule "closeFalse" (formula "1"))
                              )
                              (branch " Case 2"
                                 (rule "andLeft" (formula "3"))
                                 (rule "andLeft" (formula "3"))
                                 (rule "andLeft" (formula "3"))
                                 (rule "andLeft" (formula "3"))
                                 (rule "eqSymm" (formula "10"))
                                 (rule "polySimp_elimSub" (formula "8") (term "0"))
                                 (rule "mul_literals" (formula "8") (term "1,0"))
                                 (rule "polySimp_elimSub" (formula "10") (term "1,1,1"))
                                 (rule "mul_literals" (formula "10") (term "1,1,1,1"))
                                 (rule "polySimp_elimSub" (formula "10") (term "1,1,0"))
                                 (rule "inEqSimp_gtRight" (formula "9"))
                                 (rule "times_zero_1" (formula "1") (term "0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0"))
                                 (rule "inEqSimp_leqRight" (formula "9"))
                                 (rule "inEqSimp_gtToGeq" (formula "3"))
                                 (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "3") (term "0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "9"))
                                 (rule "inEqSimp_gtToGeq" (formula "8"))
                                 (rule "polySimp_addComm0" (formula "7") (term "0,1"))
                                 (rule "polySimp_addComm0" (formula "10") (term "1,0,0"))
                                 (rule "polySimp_addComm0" (formula "10") (term "1,1,1"))
                                 (rule "polySimp_addComm0" (formula "1") (term "1,0"))
                                 (rule "polySimp_addComm0" (formula "9") (term "1,1,0,0"))
                                 (rule "polySimp_addComm0" (formula "8") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "9") (term "1,0,0"))
                                 (rule "mul_literals" (formula "9") (term "0,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "8") (term "1,0,0"))
                                 (rule "mul_literals" (formula "8") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
                                 (rule "add_literals" (formula "9") (term "0,0,0"))
                                 (rule "add_zero_left" (formula "9") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "9") (term "0"))
                                 (rule "inEqSimp_homoInEq0" (formula "7"))
                                 (rule "polySimp_addComm1" (formula "7") (term "0"))
                                 (rule "polySimp_addComm1" (formula "7") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                                 (rule "add_literals" (formula "8") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "8") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                 (rule "applyEq" (formula "6") (term "1") (ifseqformula "4"))
                                 (rule "applyEq" (formula "2") (term "0") (ifseqformula "4"))
                                 (rule "leq_literals" (formula "2"))
                                 (rule "true_left" (formula "2"))
                                 (rule "applyEq" (formula "4") (term "0") (ifseqformula "3"))
                                 (rule "qeq_literals" (formula "4"))
                                 (rule "true_left" (formula "4"))
                                 (rule "applyEq" (formula "7") (term "0,0") (ifseqformula "3"))
                                 (rule "add_zero_left" (formula "7") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                 (rule "mul_literals" (formula "2") (term "1"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                 (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                 (rule "polySimp_rightDist" (formula "5") (term "1"))
                                 (rule "polySimp_rightDist" (formula "5") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1"))
                                 (rule "mul_literals" (formula "5") (term "0,0,1"))
                                 (rule "polySimp_elimOne" (formula "5") (term "1,0,1"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "6"))
                                 (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                 (rule "polySimp_elimOne" (formula "6") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "0"))
                                 (rule "inEqSimp_invertInEq0" (formula "7"))
                                 (rule "times_zero_2" (formula "7") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                 (rule "polySimp_elimOne" (formula "7") (term "0"))
                                 (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "2"))
                                 (rule "leq_literals" (formula "4") (term "0"))
                                 (rule "concrete_or_1" (formula "4"))
                                 (rule "true_left" (formula "4"))
                                 (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "1"))
                                 (rule "andLeft" (formula "4"))
                                 (rule "inEqSimp_homoInEq1" (formula "4"))
                                 (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0"))
                                 (rule "polySimp_elimOne" (formula "4") (term "1,1,0"))
                                 (rule "polySimp_rightDist" (formula "4") (term "0,1,0"))
                                 (rule "mul_literals" (formula "4") (term "0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                 (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                                 (rule "polySimp_pullOutFactor2b" (formula "4") (term "0"))
                                 (rule "add_literals" (formula "4") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "4") (term "1,0"))
                                 (rule "add_zero_right" (formula "4") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                 (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                                 (rule "add_literals" (formula "4") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                                 (rule "add_literals" (formula "4") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "4") (term "1,0"))
                                 (rule "add_zero_right" (formula "4") (term "0"))
                                 (rule "leq_literals" (formula "4"))
                                 (rule "closeFalse" (formula "4"))
                              )
                           )
                           (branch " Case 2"
                              (rule "andLeft" (formula "3"))
                              (rule "andLeft" (formula "3"))
                              (rule "andLeft" (formula "3"))
                              (rule "andLeft" (formula "3"))
                              (rule "eqSymm" (formula "10"))
                              (rule "polySimp_elimSub" (formula "8") (term "0"))
                              (rule "mul_literals" (formula "8") (term "1,0"))
                              (rule "polySimp_elimSub" (formula "10") (term "1,1,1"))
                              (rule "mul_literals" (formula "10") (term "1,1,1,1"))
                              (rule "polySimp_elimSub" (formula "10") (term "1,1,0"))
                              (rule "inEqSimp_gtRight" (formula "9"))
                              (rule "times_zero_1" (formula "1") (term "0,0"))
                              (rule "add_zero_left" (formula "1") (term "0"))
                              (rule "inEqSimp_gtRight" (formula "9"))
                              (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                              (rule "inEqSimp_gtToGeq" (formula "3"))
                              (rule "times_zero_1" (formula "3") (term "1,0,0"))
                              (rule "add_zero_right" (formula "3") (term "0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "9"))
                              (rule "inEqSimp_gtToGeq" (formula "8"))
                              (rule "polySimp_addComm0" (formula "7") (term "0,1"))
                              (rule "polySimp_addComm0" (formula "10") (term "1,0,0"))
                              (rule "polySimp_addComm0" (formula "10") (term "1,1,1"))
                              (rule "polySimp_addComm0" (formula "1") (term "1,0"))
                              (rule "polySimp_addComm0" (formula "9") (term "1,1,0,0"))
                              (rule "polySimp_addComm0" (formula "8") (term "1,1,0,0"))
                              (rule "polySimp_addComm0" (formula "1") (term "0"))
                              (rule "polySimp_rightDist" (formula "9") (term "1,0,0"))
                              (rule "mul_literals" (formula "9") (term "0,1,0,0"))
                              (rule "polySimp_rightDist" (formula "8") (term "1,0,0"))
                              (rule "mul_literals" (formula "8") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
                              (rule "add_literals" (formula "9") (term "0,0,0"))
                              (rule "add_zero_left" (formula "9") (term "0,0"))
                              (rule "polySimp_addComm0" (formula "9") (term "0"))
                              (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                              (rule "add_literals" (formula "8") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "8") (term "0"))
                              (rule "inEqSimp_homoInEq0" (formula "7"))
                              (rule "polySimp_addComm1" (formula "7") (term "0"))
                              (rule "polySimp_addComm1" (formula "7") (term "0,0"))
                              (rule "applyEqRigid" (formula "5") (term "0") (ifseqformula "4"))
                              (rule "qeq_literals" (formula "5"))
                              (rule "true_left" (formula "5"))
                              (rule "applyEqRigid" (formula "5") (term "1") (ifseqformula "4"))
                              (rule "applyEq" (formula "2") (term "0") (ifseqformula "4"))
                              (rule "leq_literals" (formula "2"))
                              (rule "true_left" (formula "2"))
                              (rule "applyEqRigid" (formula "7") (term "0,0") (ifseqformula "3"))
                              (rule "add_zero_left" (formula "7") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                              (rule "mul_literals" (formula "2") (term "1"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                              (rule "polySimp_elimOne" (formula "1") (term "0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "6"))
                              (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                              (rule "polySimp_elimOne" (formula "6") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                              (rule "polySimp_mulComm0" (formula "5") (term "1"))
                              (rule "polySimp_rightDist" (formula "5") (term "1"))
                              (rule "polySimp_rightDist" (formula "5") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1"))
                              (rule "mul_literals" (formula "5") (term "0,0,1"))
                              (rule "polySimp_elimOne" (formula "5") (term "1,0,1"))
                              (rule "inEqSimp_invertInEq0" (formula "7"))
                              (rule "times_zero_2" (formula "7") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                              (rule "polySimp_elimOne" (formula "7") (term "0"))
                              (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "2"))
                              (rule "leq_literals" (formula "4") (term "0"))
                              (rule "concrete_or_1" (formula "4"))
                              (rule "true_left" (formula "4"))
                              (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "5"))
                              (rule "andLeft" (formula "1"))
                              (rule "inEqSimp_homoInEq1" (formula "1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                              (rule "mul_literals" (formula "1") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                              (rule "add_literals" (formula "1") (term "0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                              (rule "add_literals" (formula "1") (term "1,1,0"))
                              (rule "times_zero_1" (formula "1") (term "1,0"))
                              (rule "add_zero_right" (formula "1") (term "0"))
                              (rule "leq_literals" (formula "1"))
                              (rule "closeFalse" (formula "1"))
                           )
                        )
                        (branch " Case 2"
                           (rule "cut" (inst "cutFormula=l1_3 = empty") (userinteraction))
                           (branch " CUT: l1_3 = empty TRUE"
                              (rule "applyEqRigid" (formula "7") (term "0,2,1,0") (ifseqformula "1") (userinteraction))
                              (rule "concatEmpty1" (formula "7") (term "2,1,0") (userinteraction))
                              (rule "applyEqRigid" (formula "7") (term "1,2,0,1") (ifseqformula "1") (userinteraction))
                              (rule "applyEqRigid" (formula "7") (term "0,0,1,0,1") (ifseqformula "1") (userinteraction))
                              (rule "lengthEmpty" (formula "7") (term "0,1,0,1") (userinteraction))
                              (rule "add_zero_left" (formula "7") (term "1,0,1") (userinteraction))
                              (rule "applyEqRigid" (formula "7") (term "1,0,1,1,1,1") (ifseqformula "1") (userinteraction))
                              (rule "lengthCons" (formula "7") (term "1,1,1,1") (userinteraction))
                              (rule "lengthEmpty" (formula "7") (term "0,1,1,1,1") (userinteraction))
                              (rule "add_zero_left" (formula "7") (term "1,1,1,1") (userinteraction))
                              (rule "substring0" (formula "7") (term "0,1") (userinteraction))
                              (rule "greater_literals" (formula "7") (term "0,0,1") (userinteraction))
                              (rule "ifthenelse_true" (formula "7") (term "0,1") (userinteraction))
                              (rule "concatConsDep" (formula "7") (term "0,1") (userinteraction))
                              (rule "concatConsDep" (formula "7") (term "1") (userinteraction))
                              (rule "concatEmpty1" (formula "7") (term "0,1,1") (userinteraction))
                              (rule "sub_literals" (formula "7") (term "1,0,1,1") (userinteraction))
                              (rule "substring00" (formula "7") (term "0,1,1") (userinteraction))
                              (rule "concatEmpty1" (formula "7") (term "1,1") (userinteraction))
                              (rule "eqClose" (formula "7") (userinteraction))
                              (rule "closeTrue" (formula "7") (userinteraction))
                           )
                           (branch " CUT: l1_3 = empty FALSE"
                              (rule "charlist_induction" (inst "phi=length(lv) = 0 -> lv = empty") (inst "lv=lv") (inst "cv=c") (userinteraction))
                              (branch " Base Case"
                                 (rule "impRight" (formula "4") (userinteraction))
                                 (rule "eqClose" (formula "5") (userinteraction))
                                 (rule "closeTrue" (formula "5") (userinteraction))
                              )
                              (branch " Step Case"
                                 (rule "allRight" (formula "4") (inst "sk=lv_0") (userinteraction))
                                 (rule "allRight" (formula "4") (inst "sk=c_4") (userinteraction))
                                 (rule "impRight" (formula "4") (userinteraction))
                                 (rule "andLeft" (formula "1") (userinteraction))
                                 (rule "inChar" (formula "1") (userinteraction))
                                 (rule "true_left" (formula "1") (userinteraction))
                                 (rule "impRight" (formula "5") (userinteraction))
                                 (rule "lengthCons" (formula "1") (term "0") (userinteraction))
                                 (rule "equalFalse2" (formula "6") (userinteraction))
                                 (rule "lengthGEq0" (inst "l=lv_0") (userinteraction))
                                 (rule "false_right" (formula "7"))
                                 (rule "andLeft" (formula "6"))
                                 (rule "andLeft" (formula "6"))
                                 (rule "andLeft" (formula "6"))
                                 (rule "andLeft" (formula "6"))
                                 (rule "eqSymm" (formula "14"))
                                 (rule "polySimp_elimSub" (formula "14") (term "1,1,1"))
                                 (rule "mul_literals" (formula "14") (term "1,1,1,1"))
                                 (rule "polySimp_elimSub" (formula "14") (term "1,1,0"))
                                 (rule "inEqSimp_ltRight" (formula "12"))
                                 (rule "add_zero_right" (formula "1") (term "0"))
                                 (rule "inEqSimp_gtRight" (formula "13"))
                                 (rule "times_zero_1" (formula "1") (term "0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "0"))
                                 (rule "inEqSimp_gtToGeq" (formula "6"))
                                 (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "6") (term "0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "12"))
                                 (rule "inEqSimp_gtToGeq" (formula "11"))
                                 (rule "polySimp_addComm0" (formula "4") (term "0"))
                                 (rule "polySimp_addComm0" (formula "10") (term "0,1"))
                                 (rule "polySimp_addComm0" (formula "14") (term "1,0,0"))
                                 (rule "polySimp_addComm0" (formula "14") (term "1,1,1"))
                                 (rule "polySimp_addComm0" (formula "12") (term "1,1,0,0"))
                                 (rule "polySimp_addComm0" (formula "11") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "12") (term "1,0,0"))
                                 (rule "mul_literals" (formula "12") (term "0,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "11") (term "1,0,0"))
                                 (rule "mul_literals" (formula "11") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "12") (term "0,0"))
                                 (rule "add_literals" (formula "12") (term "0,0,0"))
                                 (rule "add_zero_left" (formula "12") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "12") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "11") (term "0,0"))
                                 (rule "add_literals" (formula "11") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "11") (term "0"))
                                 (rule "inEqSimp_homoInEq0" (formula "10"))
                                 (rule "polySimp_addComm1" (formula "10") (term "0"))
                                 (rule "polySimp_addComm1" (formula "10") (term "0,0"))
                                 (rule "applyEqRigid" (formula "8") (term "0") (ifseqformula "7"))
                                 (rule "qeq_literals" (formula "8"))
                                 (rule "true_left" (formula "8"))
                                 (rule "applyEqRigid" (formula "1") (term "0") (ifseqformula "7"))
                                 (rule "leq_literals" (formula "1"))
                                 (rule "true_left" (formula "1"))
                                 (rule "applyEq" (formula "7") (term "1") (ifseqformula "6"))
                                 (rule "applyEqRigid" (formula "10") (term "0,0") (ifseqformula "6"))
                                 (rule "add_zero_left" (formula "10") (term "0"))
                                 (rule "polySimp_sepPosMonomial" (formula "3"))
                                 (rule "mul_literals" (formula "3") (term "1"))
                                 (rule "applyEq" (formula "2") (term "0") (ifseqformula "3"))
                                 (rule "qeq_literals" (formula "2"))
                                 (rule "closeFalse" (formula "2"))
                              )
                              (branch " Use Case"
                                 (rule "instAll" (formula "5") (term "0") (ifseqformula "1") (userinteraction))
                                 (rule "impLeft" (formula "1") (userinteraction))
                                 (branch " Case 1"
                                    (rule "andLeft" (formula "4"))
                                    (rule "andLeft" (formula "4"))
                                    (rule "andLeft" (formula "4"))
                                    (rule "andLeft" (formula "4"))
                                    (rule "eqSymm" (formula "13"))
                                    (rule "polySimp_elimSub" (formula "13") (term "1,1,1"))
                                    (rule "mul_literals" (formula "13") (term "1,1,1,1"))
                                    (rule "polySimp_elimSub" (formula "13") (term "1,1,0"))
                                    (rule "inEqSimp_gtRight" (formula "12"))
                                    (rule "times_zero_1" (formula "1") (term "0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0"))
                                    (rule "inEqSimp_ltRight" (formula "12"))
                                    (rule "add_zero_right" (formula "1") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "0"))
                                    (rule "inEqSimp_gtToGeq" (formula "4"))
                                    (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "4") (term "0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "10"))
                                    (rule "inEqSimp_gtToGeq" (formula "9"))
                                    (rule "polySimp_addComm0" (formula "8") (term "0,1"))
                                    (rule "polySimp_addComm0" (formula "13") (term "1,0,0"))
                                    (rule "polySimp_addComm0" (formula "13") (term "1,1,1"))
                                    (rule "polySimp_addComm0" (formula "10") (term "1,1,0,0"))
                                    (rule "polySimp_addComm0" (formula "9") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "10") (term "1,0,0"))
                                    (rule "mul_literals" (formula "10") (term "0,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "9") (term "1,0,0"))
                                    (rule "mul_literals" (formula "9") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "10") (term "0,0"))
                                    (rule "add_literals" (formula "10") (term "0,0,0"))
                                    (rule "add_zero_left" (formula "10") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "10") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
                                    (rule "add_literals" (formula "9") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "9") (term "0"))
                                    (rule "inEqSimp_homoInEq0" (formula "8"))
                                    (rule "polySimp_addComm1" (formula "8") (term "0"))
                                    (rule "polySimp_addComm1" (formula "8") (term "0,0"))
                                    (rule "applyEq" (formula "6") (term "0") (ifseqformula "5"))
                                    (rule "qeq_literals" (formula "6"))
                                    (rule "true_left" (formula "6"))
                                    (rule "applyEqRigid" (formula "6") (term "1") (ifseqformula "5"))
                                    (rule "applyEqRigid" (formula "2") (term "0") (ifseqformula "5"))
                                    (rule "leq_literals" (formula "2"))
                                    (rule "true_left" (formula "2"))
                                    (rule "applyEq" (formula "8") (term "0,0") (ifseqformula "4"))
                                    (rule "add_zero_left" (formula "8") (term "0"))
                                    (rule "inEqSimp_invertInEq1" (formula "1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                    (rule "times_zero_2" (formula "1") (term "1"))
                                    (rule "polySimp_elimOne" (formula "1") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                    (rule "mul_literals" (formula "3") (term "1"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "7"))
                                    (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                    (rule "polySimp_elimOne" (formula "7") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                    (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                    (rule "polySimp_rightDist" (formula "6") (term "1"))
                                    (rule "polySimp_rightDist" (formula "6") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1"))
                                    (rule "mul_literals" (formula "6") (term "0,0,1"))
                                    (rule "polySimp_elimOne" (formula "6") (term "1,0,1"))
                                    (rule "inEqSimp_invertInEq0" (formula "8"))
                                    (rule "times_zero_2" (formula "8") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                    (rule "polySimp_elimOne" (formula "8") (term "0"))
                                    (rule "inEqSimp_strengthen1" (formula "8") (ifseqformula "9"))
                                    (rule "add_zero_right" (formula "8") (term "1"))
                                    (rule "inEqSimp_contradEq7" (formula "9") (ifseqformula "8"))
                                    (rule "times_zero_1" (formula "9") (term "1,0,0"))
                                    (rule "add_literals" (formula "9") (term "0,0"))
                                    (rule "leq_literals" (formula "9") (term "0"))
                                    (rule "concrete_and_2" (formula "9"))
                                    (rule "false_right" (formula "9"))
                                    (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "3"))
                                    (rule "leq_literals" (formula "5") (term "0"))
                                    (rule "concrete_or_1" (formula "5"))
                                    (rule "true_left" (formula "5"))
                                    (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "7"))
                                    (rule "qeq_literals" (formula "1") (term "0"))
                                    (rule "concrete_and_2" (formula "1"))
                                    (rule "closeFalse" (formula "1"))
                                 )
                                 (branch " Case 2"
                                    (rule "close" (formula "6") (ifseqformula "1") (userinteraction))
                                 )
                              )
                           )
                        )
                     )
                     (branch " Case 2"
                        (rule "andLeft" (formula "4"))
                        (rule "andLeft" (formula "4"))
                        (rule "andLeft" (formula "4"))
                        (rule "andLeft" (formula "4"))
                        (rule "eqSymm" (formula "10"))
                        (rule "eqSymm" (formula "1"))
                        (rule "polySimp_elimSub" (formula "10") (term "1,1,1"))
                        (rule "mul_literals" (formula "10") (term "1,1,1,1"))
                        (rule "polySimp_elimSub" (formula "10") (term "1,1,0"))
                        (rule "polySimp_elimSub" (formula "1") (term "1,1,0"))
                        (rule "polySimp_elimSub" (formula "1") (term "1,1"))
                        (rule "mul_literals" (formula "1") (term "1,1,1"))
                        (rule "polySimp_elimSub" (formula "1") (term "0,1,1,0"))
                        (rule "mul_literals" (formula "1") (term "1,0,1,1,0"))
                        (rule "inEqSimp_gtRight" (formula "9"))
                        (rule "times_zero_1" (formula "1") (term "0,0"))
                        (rule "add_zero_left" (formula "1") (term "0"))
                        (rule "inEqSimp_gtToGeq" (formula "3"))
                        (rule "times_zero_1" (formula "3") (term "1,0,0"))
                        (rule "add_zero_right" (formula "3") (term "0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "9"))
                        (rule "inEqSimp_gtToGeq" (formula "8"))
                        (rule "polySimp_addComm0" (formula "7") (term "0,1"))
                        (rule "polySimp_addComm0" (formula "10") (term "1,0,0"))
                        (rule "polySimp_addComm0" (formula "10") (term "1,1,1"))
                        (rule "polySimp_addComm0" (formula "2") (term "1,1"))
                        (rule "polySimp_addComm0" (formula "2") (term "0,1,1,0"))
                        (rule "polySimp_addComm0" (formula "9") (term "1,1,0,0"))
                        (rule "polySimp_addComm0" (formula "8") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "9") (term "1,0,0"))
                        (rule "mul_literals" (formula "9") (term "0,1,0,0"))
                        (rule "polySimp_rightDist" (formula "8") (term "1,0,0"))
                        (rule "mul_literals" (formula "8") (term "0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
                        (rule "add_literals" (formula "9") (term "0,0,0"))
                        (rule "add_zero_left" (formula "9") (term "0,0"))
                        (rule "polySimp_addComm0" (formula "9") (term "0"))
                        (rule "inEqSimp_homoInEq0" (formula "7"))
                        (rule "polySimp_addComm1" (formula "7") (term "0"))
                        (rule "polySimp_addComm1" (formula "7") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                        (rule "add_literals" (formula "8") (term "0,0,0"))
                        (rule "polySimp_addComm1" (formula "8") (term "0"))
                        (rule "applyEq" (formula "1") (term "0") (ifseqformula "4"))
                        (rule "leq_literals" (formula "1"))
                        (rule "true_left" (formula "1"))
                        (rule "applyEqRigid" (formula "4") (term "0") (ifseqformula "3"))
                        (rule "qeq_literals" (formula "4"))
                        (rule "true_left" (formula "4"))
                        (rule "applyEq" (formula "4") (term "1") (ifseqformula "3"))
                        (rule "applyEq" (formula "7") (term "0,0") (ifseqformula "3"))
                        (rule "add_zero_left" (formula "7") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                        (rule "mul_literals" (formula "2") (term "1"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                        (rule "polySimp_mulComm0" (formula "5") (term "1"))
                        (rule "polySimp_rightDist" (formula "5") (term "1"))
                        (rule "polySimp_rightDist" (formula "5") (term "0,1"))
                        (rule "mul_literals" (formula "5") (term "0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1"))
                        (rule "polySimp_elimOne" (formula "5") (term "1,0,1"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "6"))
                        (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                        (rule "polySimp_elimOne" (formula "6") (term "0"))
                        (rule "inEqSimp_invertInEq0" (formula "7"))
                        (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                        (rule "times_zero_2" (formula "7") (term "1"))
                        (rule "polySimp_elimOne" (formula "7") (term "0"))
                        (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "2"))
                        (rule "leq_literals" (formula "4") (term "0"))
                        (rule "concrete_or_1" (formula "4"))
                        (rule "true_left" (formula "4"))
                        (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "5"))
                        (rule "times_zero_1" (formula "6") (term "0,0"))
                        (rule "add_zero_left" (formula "6") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                        (rule "mul_literals" (formula "6") (term "1"))
                        (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "6"))
                        (rule "leq_literals" (formula "2") (term "0"))
                        (rule "concrete_or_1" (formula "2"))
                        (rule "true_left" (formula "2"))
                        (rule "lengthCons" (formula "7") (term "0,1,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "7") (term "1,1,1,0"))
                        (rule "polySimp_addComm0" (formula "7") (term "1,1,1,1,0"))
                        (rule "polySimp_rightDist" (formula "7") (term "1,1,1,0"))
                        (rule "mul_literals" (formula "7") (term "0,1,1,1,0"))
                        (rule "polySimp_addAssoc" (formula "7") (term "1,1,0"))
                        (rule "polySimp_addComm0" (formula "7") (term "0,1,1,0"))
                        (rule "lengthGEq0" (newnames "L_4"))
                        (rule "substringI" (formula "8") (term "0,0"))
                        (rule "greater_literals" (formula "8") (term "0,0,0"))
                        (rule "ifthenelse_false" (formula "8") (term "0,0"))
                        (rule "substring0" (formula "8") (term "0,0"))
                        (rule "inEqSimp_gtToGeq" (formula "8") (term "0,0,0"))
                        (rule "times_zero_1" (formula "8") (term "1,0,0,0,0,0"))
                        (rule "add_zero_right" (formula "8") (term "0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "8") (term "0,0,0,0"))
                        (rule "add_literals" (formula "8") (term "0,0,0,0,0"))
                        (rule "add_zero_left" (formula "8") (term "0,0,0,0"))
                        (rule "replace_known_left" (formula "8") (term "0,0,0") (ifseqformula "7"))
                        (rule "ifthenelse_true" (formula "8") (term "0,0"))
                        (rule "polySimp_elimSub" (formula "8") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "8") (term "1,1,1,0,0"))
                        (rule "polySimp_addComm1" (formula "8") (term "1,1,0,0"))
                        (rule "add_literals" (formula "8") (term "0,1,1,0,0"))
                        (rule "add_zero_left" (formula "8") (term "1,1,0,0"))
                        (rule "concatConsDep" (formula "8") (term "0,0"))
                        (rule "concatEmpty1" (formula "8") (term "1,0,0"))
                        (rule "concatConsDep" (formula "8") (term "0"))
                        (rule "applyEqRigid" (formula "8") (term "1,0") (ifseqformula "2"))
                        (rule "eqClose" (formula "8"))
                        (rule "closeTrue" (formula "8"))
                     )
                  )
                  (branch " j_6 >  0 FALSE"
                     (rule "andLeft" (formula "2") (userinteraction))
                     (rule "andLeft" (formula "2"))
                     (rule "andLeft" (formula "2"))
                     (rule "andLeft" (formula "2"))
                     (rule "eqSymm" (formula "10"))
                     (rule "polySimp_elimSub" (formula "7") (term "1,1,1,1,0,0,0"))
                     (rule "polySimp_elimSub" (formula "10") (term "1,1,0"))
                     (rule "inEqSimp_gtRight" (formula "8"))
                     (rule "times_zero_1" (formula "1") (term "0,0"))
                     (rule "add_zero_left" (formula "1") (term "0"))
                     (rule "inEqSimp_gtRight" (formula "9"))
                     (rule "times_zero_1" (formula "1") (term "0,0"))
                     (rule "add_zero_left" (formula "1") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0,0,0"))
                     (rule "inEqSimp_gtToGeq" (formula "9") (term "1,0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "8"))
                     (rule "inEqSimp_gtToGeq" (formula "7"))
                     (rule "polySimp_addComm0" (formula "6") (term "0,1"))
                     (rule "polySimp_addComm0" (formula "10") (term "1,0,0"))
                     (rule "polySimp_addComm0" (formula "9") (term "1,1,1,1,0,0,0"))
                     (rule "polySimp_addComm0" (formula "8") (term "1,1,0,0"))
                     (rule "polySimp_addComm0" (formula "7") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "8") (term "1,0,0"))
                     (rule "mul_literals" (formula "8") (term "0,1,0,0"))
                     (rule "polySimp_rightDist" (formula "7") (term "1,0,0"))
                     (rule "mul_literals" (formula "7") (term "0,1,0,0"))
                     (rule "inEqSimp_homoInEq0" (formula "9") (term "1,0,0,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "9") (term "0,1,0,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                     (rule "add_literals" (formula "8") (term "0,0,0"))
                     (rule "add_zero_left" (formula "8") (term "0,0"))
                     (rule "polySimp_addComm0" (formula "8") (term "0"))
                     (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                     (rule "add_literals" (formula "7") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "7") (term "0"))
                     (rule "inEqSimp_homoInEq0" (formula "6"))
                     (rule "polySimp_addComm1" (formula "6") (term "0"))
                     (rule "polySimp_addComm1" (formula "6") (term "0,0"))
                     (rule "applyEqRigid" (formula "2") (term "0") (ifseqformula "3"))
                     (rule "leq_literals" (formula "2"))
                     (rule "true_left" (formula "2"))
                     (rule "applyEqRigid" (formula "4") (term "1") (ifseqformula "2"))
                     (rule "applyEqRigid" (formula "3") (term "0") (ifseqformula "2"))
                     (rule "qeq_literals" (formula "3"))
                     (rule "true_left" (formula "3"))
                     (rule "applyEq" (formula "6") (term "0,0") (ifseqformula "2"))
                     (rule "add_zero_left" (formula "6") (term "0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "7") (term "1,1,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "7") (term "1,1,0,0,0,0"))
                     (rule "mul_literals" (formula "7") (term "0,1,1,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "7") (term "1,1,1,0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "7") (term "1,1,1,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "7") (term "1,0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "7") (term "1,1,0,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "7") (term "1,1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "7") (term "0,1,1,0,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "7") (term "1,1,1,0,0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "7") (term "1,1,1,0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "7") (term "1,0,0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "7") (term "1,1,0,0,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "7") (term "1,1,0,0,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "7") (term "1,1,1,0,0,0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "7") (term "1,1,1,0,0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "7") (term "0,1,1,0,0,0,0,0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                     (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                     (rule "polySimp_elimOne" (formula "5") (term "0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                     (rule "polySimp_mulComm0" (formula "4") (term "1"))
                     (rule "polySimp_rightDist" (formula "4") (term "1"))
                     (rule "polySimp_rightDist" (formula "4") (term "0,1"))
                     (rule "mul_literals" (formula "4") (term "0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1"))
                     (rule "polySimp_elimOne" (formula "4") (term "1,0,1"))
                     (rule "inEqSimp_invertInEq0" (formula "6"))
                     (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                     (rule "times_zero_2" (formula "6") (term "1"))
                     (rule "polySimp_elimOne" (formula "6") (term "0"))
                     (rule "inEqSimp_antiSymm" (formula "3") (ifseqformula "1"))
                     (rule "applyEqRigid" (formula "1") (term "0") (ifseqformula "3"))
                     (rule "leq_literals" (formula "1"))
                     (rule "true_left" (formula "1"))
                     (rule "applyEqRigid" (formula "5") (term "1,1") (ifseqformula "2"))
                     (rule "add_zero_right" (formula "5") (term "1"))
                     (rule "applyEq" (formula "3") (term "0") (ifseqformula "2"))
                     (rule "qeq_literals" (formula "3"))
                     (rule "true_left" (formula "3"))
                     (rule "applyEqRigid" (formula "3") (term "1,0,1") (ifseqformula "2"))
                     (rule "add_zero_right" (formula "3") (term "0,1"))
                     (rule "applyEqRigid" (formula "7") (term "1,1") (ifseqformula "2"))
                     (rule "applyEqRigid" (formula "7") (term "0,1,1,0") (ifseqformula "2"))
                     (rule "add_zero_left" (formula "7") (term "1,1,0"))
                     (rule "inEqSimp_contradInEq1" (formula "4") (ifseqformula "5"))
                     (rule "qeq_literals" (formula "4") (term "0"))
                     (rule "concrete_and_2" (formula "4"))
                     (rule "closeFalse" (formula "4"))
                  )
               )
               (branch " CUT: i_6 = 0 FALSE"
                  (rule "andLeft" (formula "1"))
                  (rule "andLeft" (formula "1"))
                  (rule "andLeft" (formula "1"))
                  (rule "andLeft" (formula "1"))
                  (rule "eqSymm" (formula "9"))
                  (rule "replace_known_right" (formula "9") (term "0,0,0") (ifseqformula "8"))
                  (rule "ifthenelse_false" (formula "9") (term "0,0"))
                  (rule "polySimp_elimSub" (formula "6") (term "1,1,1,1,0,0,0"))
                  (rule "polySimp_elimSub" (formula "9") (term "1,1,0"))
                  (rule "inEqSimp_gtRight" (formula "8"))
                  (rule "times_zero_1" (formula "1") (term "0,0"))
                  (rule "add_zero_left" (formula "1") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "7") (term "1,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0,0,0"))
                  (rule "inEqSimp_gtToGeq" (formula "7") (term "1,0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "6"))
                  (rule "inEqSimp_gtToGeq" (formula "5"))
                  (rule "polySimp_addComm0" (formula "4") (term "0,1"))
                  (rule "polySimp_addComm0" (formula "9") (term "1,0,0"))
                  (rule "polySimp_addComm0" (formula "7") (term "1,1,1,1,0,0,0"))
                  (rule "polySimp_addComm0" (formula "6") (term "1,1,0,0"))
                  (rule "polySimp_addComm0" (formula "5") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                  (rule "mul_literals" (formula "6") (term "0,1,0,0"))
                  (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
                  (rule "mul_literals" (formula "5") (term "0,1,0,0"))
                  (rule "inEqSimp_homoInEq0" (formula "7") (term "1,0,0,0,0,0,0"))
                  (rule "polySimp_addComm1" (formula "7") (term "0,1,0,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                  (rule "add_literals" (formula "6") (term "0,0,0"))
                  (rule "add_zero_left" (formula "6") (term "0,0"))
                  (rule "polySimp_addComm0" (formula "6") (term "0"))
                  (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                  (rule "add_literals" (formula "5") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "5") (term "0"))
                  (rule "inEqSimp_homoInEq0" (formula "4"))
                  (rule "polySimp_addComm1" (formula "4") (term "0"))
                  (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "7") (term "1,1,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "7") (term "1,1,0,0,0,0"))
                  (rule "mul_literals" (formula "7") (term "0,1,1,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "7") (term "1,1,1,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "7") (term "1,1,1,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "7") (term "1,0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "7") (term "1,1,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "7") (term "1,1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "7") (term "0,1,1,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "7") (term "1,1,1,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "7") (term "1,1,1,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "7") (term "1,0,0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "7") (term "1,1,0,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "7") (term "1,1,0,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "7") (term "1,1,1,0,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "7") (term "1,1,1,0,0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "7") (term "0,1,1,0,0,0,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "6"))
                  (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                  (rule "polySimp_elimOne" (formula "6") (term "0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                  (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                  (rule "polySimp_elimOne" (formula "5") (term "0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                  (rule "polySimp_mulComm0" (formula "4") (term "1"))
                  (rule "polySimp_rightDist" (formula "4") (term "1"))
                  (rule "polySimp_rightDist" (formula "4") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1"))
                  (rule "mul_literals" (formula "4") (term "0,0,1"))
                  (rule "polySimp_elimOne" (formula "4") (term "1,0,1"))
                  (rule "inEqSimp_strengthen0" (formula "1") (ifseqformula "8"))
                  (rule "add_zero_right" (formula "1") (term "1"))
                  (rule "inEqSimp_contradEq3" (formula "8") (ifseqformula "1"))
                  (rule "times_zero_1" (formula "8") (term "1,0,0"))
                  (rule "add_zero_right" (formula "8") (term "0,0"))
                  (rule "qeq_literals" (formula "8") (term "0"))
                  (rule "concrete_and_2" (formula "8"))
                  (rule "false_right" (formula "8"))
                  (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "1"))
                  (rule "qeq_literals" (formula "2") (term "0"))
                  (rule "concrete_and_2" (formula "2"))
                  (rule "closeFalse" (formula "2"))
               )
            )
         )
         (branch " Use Case"
            (rule "instAll" (formula "5") (term "0,2,0") (ifseqformula "1") (userinteraction))
            (rule "instAll" (formula "6") (term "1,2,0") (ifseqformula "1") (userinteraction))
            (rule "instAll" (formula "6") (term "0") (ifseqformula "1") (userinteraction))
            (rule "instAll" (formula "6") (term "0") (ifseqformula "1") (userinteraction))
            (rule "impLeft" (formula "1") (userinteraction))
            (branch " Case 1"
               (rule "andLeft" (formula "5"))
               (rule "andLeft" (formula "5"))
               (rule "eqSymm" (formula "11"))
               (rule "replace_known_left" (formula "1") (term "0,0,0,0,0,0") (ifseqformula "5"))
               (rule "concrete_and_1" (formula "1") (term "0,0,0,0,0"))
               (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "7"))
               (rule "concrete_and_3" (formula "8") (term "0,0"))
               (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "6"))
               (rule "concrete_and_3" (formula "8") (term "0,0"))
               (rule "replace_known_left" (formula "8") (term "0,0") (ifseqformula "5"))
               (rule "concrete_and_1" (formula "8") (term "0"))
               (rule "polySimp_elimSub" (formula "1") (term "1,1,1,1,0"))
               (rule "polySimp_elimSub" (formula "2") (term "1,1,1,1,0,0"))
               (rule "polySimp_elimSub" (formula "4") (term "1,1,1,1,0,0,0,0"))
               (rule "polySimp_elimSub" (formula "3") (term "1,1,1,1,0,0,0"))
               (rule "polySimp_elimSub" (formula "11") (term "1,1,0"))
               (rule "inEqSimp_geqRight" (formula "10"))
               (rule "inEqSimp_leqRight" (formula "10"))
               (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "3") (term "1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "6") (term "1,0,0,0,0,0"))
               (rule "inEqSimp_gtToGeq" (formula "6") (term "1,0,0,0,0,0,0"))
               (rule "inEqSimp_gtToGeq" (formula "5") (term "1,0,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "10") (term "1"))
               (rule "inEqSimp_gtToGeq" (formula "3") (term "1,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "4") (term "1,0,0,0"))
               (rule "inEqSimp_gtToGeq" (formula "4") (term "1,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "5") (term "1,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1,0,0"))
               (rule "replace_known_left" (formula "3") (term "1,0,0") (ifseqformula "2"))
               (rule "concrete_and_3" (formula "3") (term "0,0"))
               (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1,0,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1,0,0,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,1,0,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1"))
               (rule "replace_known_left" (formula "10") (term "1") (ifseqformula "2"))
               (rule "concrete_and_3" (formula "10"))
               (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,1,0,0,0"))
               (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,1,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,1,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_gtRight" (formula "10"))
               (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
               (rule "polySimp_addComm0" (formula "4") (term "1,1,1,1,0"))
               (rule "polySimp_addComm0" (formula "5") (term "1,1,1,1,0,0"))
               (rule "polySimp_addComm0" (formula "6") (term "1,1,1,1,0,0,0"))
               (rule "polySimp_addComm1" (formula "3") (term "0"))
               (rule "polySimp_addComm1" (formula "2") (term "0"))
               (rule "polySimp_addComm1" (formula "7") (term "0,1,0,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "7") (term "0,1,0,0,0,0,0,0"))
               (rule "polySimp_addComm0" (formula "1") (term "0"))
               (rule "inEqSimp_homoInEq0" (formula "6") (term "1,0,0,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "6") (term "0,1,0,0,0,0,0,0"))
               (rule "inEqSimp_homoInEq0" (formula "7") (term "1,0,0,0,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "7") (term "0,1,0,0,0,0,0,0,0"))
               (rule "polySimp_addComm0" (formula "7") (term "0,0,1,0,0,0,0,0,0,0"))
               (rule "inEqSimp_homoInEq0" (formula "10"))
               (rule "polySimp_addComm1" (formula "10") (term "0"))
               (rule "polySimp_addComm0" (formula "10") (term "0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "6") (term "1,0,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "6") (term "1,1,0,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "6") (term "1,1,0,0,0,0,0"))
               (rule "mul_literals" (formula "6") (term "0,1,1,0,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "6") (term "1,1,1,0,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "6") (term "1,1,1,0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "1,0,0,0"))
               (rule "polySimp_mulComm0" (formula "5") (term "1,1,0,0,0"))
               (rule "polySimp_rightDist" (formula "5") (term "1,1,0,0,0"))
               (rule "mul_literals" (formula "5") (term "0,1,1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "5") (term "1,1,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "5") (term "1,1,1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "5") (term "1,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "5") (term "1,1,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "5") (term "1,1,0,0,0,0"))
               (rule "mul_literals" (formula "5") (term "0,1,1,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "5") (term "1,1,1,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "5") (term "1,1,1,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "1,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "6") (term "1,1,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "6") (term "1,1,0,0,0,0"))
               (rule "mul_literals" (formula "6") (term "0,1,1,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "6") (term "1,1,1,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "6") (term "1,1,1,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "4") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "4") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "4") (term "1,1,0,0"))
               (rule "mul_literals" (formula "4") (term "0,1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "4") (term "1,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "4") (term "1,1,1,0,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "3"))
               (rule "polySimp_mulLiterals" (formula "3") (term "0"))
               (rule "polySimp_elimOne" (formula "3") (term "0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "2"))
               (rule "polySimp_mulLiterals" (formula "2") (term "0"))
               (rule "polySimp_elimOne" (formula "2") (term "0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "7") (term "1,0,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "7") (term "0,1,0,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "7") (term "0,1,0,0,0,0,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "7") (term "1,0,0,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "7") (term "0,1,0,0,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "7") (term "0,1,0,0,0,0,0,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "1"))
               (rule "polySimp_mulLiterals" (formula "1") (term "0"))
               (rule "polySimp_elimOne" (formula "1") (term "0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "6") (term "1,0,0,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "6") (term "1,1,0,0,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "6") (term "1,1,0,0,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "6") (term "1,1,1,0,0,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "6") (term "1,1,1,0,0,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "6") (term "0,1,1,0,0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "7") (term "1,0,0,0,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "7") (term "1,1,0,0,0,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "7") (term "1,1,0,0,0,0,0,0,0"))
               (rule "polySimp_mulAssoc" (formula "7") (term "0,1,1,0,0,0,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "7") (term "0,0,1,1,0,0,0,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "7") (term "0,1,1,0,0,0,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "7") (term "0,1,1,0,0,0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "10"))
               (rule "polySimp_mulComm0" (formula "10") (term "1"))
               (rule "polySimp_rightDist" (formula "10") (term "1"))
               (rule "polySimp_mulAssoc" (formula "10") (term "0,1"))
               (rule "polySimp_mulComm0" (formula "10") (term "0,0,1"))
               (rule "polySimp_mulLiterals" (formula "10") (term "0,1"))
               (rule "polySimp_elimOne" (formula "10") (term "0,1"))
               (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "1"))
               (rule "andLeft" (formula "2"))
               (rule "inEqSimp_homoInEq1" (formula "2"))
               (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
               (rule "polySimp_rightDist" (formula "2") (term "1,0"))
               (rule "mul_literals" (formula "2") (term "0,1,0"))
               (rule "polySimp_addAssoc" (formula "2") (term "0"))
               (rule "polySimp_addComm0" (formula "2") (term "0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
               (rule "add_literals" (formula "2") (term "1,1,0"))
               (rule "times_zero_1" (formula "2") (term "1,0"))
               (rule "add_zero_right" (formula "2") (term "0"))
               (rule "leq_literals" (formula "2"))
               (rule "closeFalse" (formula "2"))
            )
            (branch " Case 2"
               (rule "close" (formula "9") (ifseqformula "1"))
            )
         )
      )
   )
)
(branch "   i_441 >= 0
& j_440 >= i_441
& j_440 <= length(l1_439) + length(l2_438) FALSE"
   (rule "eqClose" (formula "2") (userinteraction))
   (rule "closeTrue" (formula "2") (userinteraction))
)
)

}
