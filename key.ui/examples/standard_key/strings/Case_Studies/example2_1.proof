\settings {
"#Proof-Settings-Config-File
#Tue Sep 15 14:40:02 CEST 2009
[General]SoundNotification=false
[View]FontIndex=2
[StrategyProperty]GOALCHOOSER_OPTIONS_KEY=GOALCHOOSER_DEFAULT
[General]UseOCL=false
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_HIGH
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_NONE
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_LOW
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_LOW
[SimultaneousUpdateSimplifier]DeleteEffectLessLocations=true
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[DecisionProcedure]Timeout=60
[View]ShowWholeTaclet=false
[General]ProofAssistant=false
[View]MaxTooltipLines=40
[General]DnDDirectionSensitive=true
[SimultaneousUpdateSimplifier]EagerSimplification=true
[General]StupidMode=true
[Strategy]Timeout=-1
[Strategy]MaximumNumberOfAutomaticApplications=500
[Libraries]Default=acc.key-false, stringRules.key-false, /Users/geilmann/.key/libraries/deprecatedRules.key-false, /Users/geilmann/.key/libraries/acc.key-false, /Users/geilmann/.key/libraries/stringRules.key-false, deprecatedRules.key-false
[StrategyProperty]QUERY_OPTIONS_KEY=QUERY_NONE
[Choice]DefaultChoices=transactions-transactions\:transactionsOn , throughout-throughout\:toutOn , assertions-assertions\:on , programRules-programRules\:Java , intRules-intRules\:arithmeticSemanticsIgnoringOF , initialisation-initialisation\:disableStaticInitialisation , transactionAbort-transactionAbort\:abortOn , nullPointerPolicy-nullPointerPolicy\:nullCheck , stringRules-stringRules\:withoutStringPool , javacard-javacard\:jcOff
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[DecisionProcedure]ActiveRule=_noname_
[General]UseJML=false
[View]HideClosedSubtrees=false
[Choice]Choices=transactions-transactions\:transactionsOn-transactions\:transactionsOff , throughout-throughout\:toutOn-throughout\:toutOff , assertions-assertions\:on-assertions\:off-assertions\:safe , programRules-programRules\:Java-programRules\:ODL , intRules-intRules\:javaSemantics-intRules\:arithmeticSemanticsIgnoringOF-intRules\:arithmeticSemanticsCheckingOF , initialisation-initialisation\:enableStaticInitialisation-initialisation\:disableStaticInitialisation , transactionAbort-transactionAbort\:abortOn-transactionAbort\:abortOff , nullPointerPolicy-nullPointerPolicy\:noNullCheck-nullPointerPolicy\:nullCheck , stringRules-stringRules\:withStringPool-stringRules\:withoutStringPool-stringRules\:platformIndependent , javacard-javacard\:jcOff-javacard\:jcOn
[View]HideIntermediateProofsteps=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
"
}



\javaSource "./src";

\include "stringRules.key";

\include "contracts.key";

\problem {
   inReachableState
-> \forall java.lang.String s; 
     \forall java.lang.String t; 
       (     s.<created>@(java.lang.Object) = TRUE
           & t.<created>@(java.lang.Object) = TRUE
           & !s = null
           & !t = null
        -> (    StringDistance.distance(s, t) = 0
            <-> s.equals@(java.lang.String)(t) = TRUE))

}

\proof {
(keyLog "0" (keyUser "geilmann" ) (keyVersion "90bb886cd7b78027c8f6703803461f09e5699bb9"))
(keyLog "1" (keyUser "geilmann" ) (keyVersion "90bb886cd7b78027c8f6703803461f09e5699bb9"))

(autoModeTime "31867")

(branch "dummy ID"
(rule "impRight" (formula "1") (userinteraction))
(rule "allRight" (formula "2") (inst "sk=s_1"))
(rule "allRight" (formula "2") (inst "sk=t_1"))
(rule "impRight" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "3"))
(rule "equiv_right" (formula "6"))
(branch " Case 1"
   (rule "lengthGEq0" (newnames "L_2"))
   (rule "resolvequery" (formula "8") (term "0") (inst "queryValue=java_lang_Stringequals_2") (userinteraction))
   (rule "eqSymm" (formula "2") (term "0,2,0"))
   (rule "apply_eq_boolean_rigid" (formula "1") (term "1") (ifseqformula "10"))
   (rule "false_to_not_true" (formula "1"))
   (rule "notLeft" (formula "1"))
   (rule "apply_eq_boolean_rigid" (formula "1") (term "0,0,2,0") (ifseqformula "10"))
   (rule "eqSymm" (formula "1") (term "0,2,0"))
   (rule "false_to_not_true" (formula "1") (term "0,2,0"))
   (rule "variableDeclaration" (formula "1") (newnames "equals_2"))
   (rule "variableDeclaration" (formula "1") (newnames "arg0_5"))
   (rule "variableDeclaration" (formula "1") (newnames "queryReceiver_2"))
   (rule "emptyModality" (formula "1"))
   (rule "methodCallWithAssignment" (formula "1") (term "2") (inst "#v0=b"))
   (branch " Normal Execution (queryReceiver_2 != null)"
      (builtin "Update Simplification" (formula "7"))
      (rule "variableDeclaration" (formula "1") (term "2") (newnames "b_8"))
      (rule "variableDeclarationAssign" (formula "1") (term "2"))
      (rule "variableDeclaration" (formula "1") (term "2") (newnames "arg0_6"))
      (rule "assignment" (formula "1") (term "2"))
      (builtin "Update Simplification" (formula "1"))
      (rule "boxToDiamond" (formula "1") (term "2") (userinteraction))
      (builtin "Update Simplification" (formula "1"))
      (rule "notLeft" (formula "1") (userinteraction))
      (rule "double_not" (formula "6") (term "0,2"))
      (builtin "Use Operation Contract" (formula "6") (newnames "arg0_6_0,result_19") (contract "equalsNormal;;"))
      (branch " Pre"
         (builtin "Update Simplification" (formula "6"))
         (rule "replace_known_right" (formula "6") (term "1,1") (ifseqformula "9"))
         (rule "concrete_or_4" (formula "6") (term "1"))
         (rule "replace_known_left" (formula "6") (term "0,0") (ifseqformula "5"))
         (rule "concrete_and_1" (formula "6") (term "0"))
         (rule "replace_known_left" (formula "6") (term "0,0") (ifseqformula "3"))
         (rule "concrete_and_1" (formula "6") (term "0"))
         (rule "replace_known_right" (formula "6") (term "0,0") (ifseqformula "8"))
         (rule "concrete_not_2" (formula "6") (term "0"))
         (rule "concrete_and_1" (formula "6"))
         (rule "close" (formula "6") (ifseqformula "4"))
      )
      (branch " Post"
         (builtin "Update Simplification" (formula "6"))
         (rule "impRight" (formula "6"))
         (rule "andLeft" (formula "1"))
         (rule "andLeft" (formula "2"))
         (rule "andLeft" (formula "1"))
         (rule "eqSymm" (formula "1") (term "1,1"))
         (rule "replace_known_right" (formula "1") (term "0,0,0,1") (ifseqformula "11"))
         (rule "concrete_not_2" (formula "1") (term "0,0,1"))
         (rule "concrete_and_1" (formula "1") (term "0,1"))
         (rule "instanceof_static_type" (formula "1") (term "0,0,1"))
         (rule "boolean_equal" (formula "1") (term "0,1"))
         (rule "concrete_and_1" (formula "1") (term "1"))
         (rule "castDel" (formula "1") (term "0,0,1"))
         (rule "blockEmpty" (formula "8") (term "1"))
         (rule "assignment" (formula "8") (term "1"))
         (builtin "Update Simplification" (formula "8"))
         (rule "methodCallEmpty" (formula "8") (term "1"))
         (rule "emptyModality" (formula "8") (term "1"))
         (builtin "Update Simplification" (formula "8"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "8"))
         (rule "concrete_eq_2" (formula "1"))
         (rule "notLeft" (formula "1"))
         (rule "resolvequery" (formula "3") (term "0") (inst "queryValue=StringDistancedistance_2") (userinteraction))
         (rule "applyEqRigid" (formula "4") (term "1,0,2,0") (ifseqformula "5"))
         (rule "applyEqRigid" (formula "3") (term "1") (ifseqformula "5"))
         (rule "variableDeclaration" (formula "4") (newnames "distance_2"))
         (rule "variableDeclaration" (formula "4") (newnames "s1_2"))
         (rule "variableDeclaration" (formula "4") (newnames "s2_2"))
         (rule "emptyModality" (formula "4"))
         (rule "methodBodyExpand" (formula "4") (term "2"))
         (rule "ifUnfold" (formula "4") (term "2") (inst "#boolv=b"))
         (rule "variableDeclaration" (formula "4") (term "2") (newnames "b_9"))
         (rule "evaluate_lazy_or" (formula "4") (term "2"))
         (rule "ifElseUnfold" (formula "4") (term "2") (inst "#boolv=b_10"))
         (rule "variableDeclaration" (formula "4") (term "2") (newnames "b_10"))
         (rule "equality_comparison_new" (formula "4") (term "2"))
         (builtin "Update Simplification" (formula "4"))
         (rule "replace_known_right" (formula "4") (term "0,0") (ifseqformula "12"))
         (rule "concrete_not_2" (formula "4") (term "0"))
         (rule "ifthenelse_true_for" (formula "4"))
         (rule "ifElseSkipThen" (formula "4") (term "2"))
         (rule "assignment" (formula "4") (term "2"))
         (builtin "Update Simplification" (formula "4"))
         (rule "equality_comparison_new" (formula "4") (term "2"))
         (builtin "Update Simplification" (formula "4"))
         (rule "replace_known_right" (formula "4") (term "0,0") (ifseqformula "13"))
         (rule "concrete_not_2" (formula "4") (term "0"))
         (rule "ifthenelse_true_for" (formula "4"))
         (rule "ifSkipThenConditionInBlock" (formula "4") (term "2"))
         (rule "assignment" (formula "4") (term "2"))
         (builtin "Update Simplification" (formula "4"))
         (rule "blockEmpty" (formula "4") (term "2"))
         (rule "variableDeclarationAssign" (formula "4") (term "2"))
         (rule "variableDeclaration" (formula "4") (term "2") (newnames "d_2"))
         (rule "assignment" (formula "4") (term "2"))
         (builtin "Update Simplification" (formula "4"))
         (rule "variableDeclarationAssign" (formula "4") (term "3"))
         (rule "variableDeclaration" (formula "4") (term "3") (newnames "m_2"))
         (rule "methodCallWithAssignment" (formula "4") (term "3") (inst "#v0=j"))
         (branch " Normal Execution (s1_2 != null)"
            (builtin "Update Simplification" (formula "9"))
            (rule "variableDeclaration" (formula "4") (term "3") (newnames "j_11"))
            (rule "boxToDiamond" (formula "4") (term "3") (userinteraction))
            (builtin "Update Simplification" (formula "4"))
            (rule "notLeft" (formula "4") (userinteraction))
            (builtin "Use Operation Contract" (formula "8") (newnames "result_21") (contract "length;;"))
            (branch " Pre"
               (builtin "Update Simplification" (formula "8"))
               (rule "replace_known_left" (formula "8") (term "0") (ifseqformula "7"))
               (rule "concrete_and_1" (formula "8"))
               (rule "replace_known_right" (formula "8") (term "0,1") (ifseqformula "12"))
               (rule "concrete_not_2" (formula "8") (term "1"))
               (rule "concrete_and_3" (formula "8"))
               (rule "close" (formula "8") (ifseqformula "5"))
            )
            (branch " Post"
               (builtin "Update Simplification" (formula "8"))
               (rule "inInt" (formula "8") (term "1,1,0,0"))
               (rule "concrete_and_3" (formula "8") (term "1,0,0"))
               (rule "impRight" (formula "8"))
               (rule "andLeft" (formula "1"))
               (rule "andLeft" (formula "1"))
               (rule "andLeft" (formula "2"))
               (rule "eqSymm" (formula "2"))
               (rule "blockEmpty" (formula "10") (term "4"))
               (rule "assignment" (formula "10") (term "4"))
               (builtin "Update Simplification" (formula "10"))
               (rule "ifUnfold" (formula "10") (term "4") (inst "#boolv=b"))
               (rule "variableDeclaration" (formula "10") (term "4") (newnames "b_11"))
               (rule "compound_greater_than_comparison_2" (formula "10") (term "4") (inst "#v0=j") (inst "#v1=j_1"))
               (rule "variableDeclarationAssign" (formula "10") (term "4"))
               (rule "variableDeclaration" (formula "10") (term "4") (newnames "j_12"))
               (rule "methodCallWithAssignment" (formula "10") (term "4") (inst "#v0=j_13"))
               (branch " Normal Execution (s1_2 != null)"
                  (builtin "Update Simplification" (formula "10"))
                  (rule "variableDeclaration" (formula "10") (term "4") (newnames "j_13"))
                  (builtin "Use Operation Contract" (formula "10") (newnames "result_23") (contract "length;;"))
                  (branch " Pre"
                     (builtin "Update Simplification" (formula "10"))
                     (rule "replace_known_left" (formula "10") (term "0") (ifseqformula "9"))
                     (rule "concrete_and_1" (formula "10"))
                     (rule "replace_known_left" (formula "10") (term "0") (ifseqformula "7"))
                     (rule "concrete_and_1" (formula "10"))
                     (rule "notRight" (formula "10"))
                     (rule "close" (formula "14") (ifseqformula "1"))
                  )
                  (branch " Post"
                     (builtin "Update Simplification" (formula "10"))
                     (rule "inInt" (formula "10") (term "1,1,0,0"))
                     (rule "concrete_and_3" (formula "10") (term "1,0,0"))
                     (rule "impRight" (formula "10"))
                     (rule "andLeft" (formula "1"))
                     (rule "andLeft" (formula "1"))
                     (rule "andLeft" (formula "2"))
                     (rule "eqSymm" (formula "2"))
                     (rule "applyEq" (formula "4") (term "0") (ifseqformula "2"))
                     (rule "applyEq" (formula "12") (term "1") (ifseqformula "4"))
                     (rule "applyEq" (formula "2") (term "1") (ifseqformula "4"))
                     (rule "blockEmpty" (formula "12") (term "5"))
                     (rule "assignment" (formula "12") (term "5"))
                     (builtin "Update Simplification" (formula "12"))
                     (rule "variableDeclarationAssign" (formula "12") (term "5"))
                     (rule "variableDeclaration" (formula "12") (term "5") (newnames "j_14"))
                     (rule "methodCallWithAssignment" (formula "12") (term "5") (inst "#v0=j_15"))
                     (branch " Normal Execution (s2_2 != null)"
                        (builtin "Update Simplification" (formula "12"))
                        (rule "variableDeclaration" (formula "12") (term "5") (newnames "j_15"))
                        (builtin "Use Operation Contract" (formula "12") (newnames "result_25") (contract "length;;"))
                        (branch " Pre"
                           (builtin "Update Simplification" (formula "12"))
                           (rule "replace_known_left" (formula "12") (term "0") (ifseqformula "11"))
                           (rule "concrete_and_1" (formula "12"))
                           (rule "replace_known_left" (formula "12") (term "0") (ifseqformula "10"))
                           (rule "concrete_and_1" (formula "12"))
                           (rule "notRight" (formula "12"))
                           (rule "close" (formula "17") (ifseqformula "1"))
                        )
                        (branch " Post"
                           (builtin "Update Simplification" (formula "12"))
                           (rule "inInt" (formula "12") (term "1,1,0,0"))
                           (rule "concrete_and_3" (formula "12") (term "1,0,0"))
                           (rule "impRight" (formula "12"))
                           (rule "andLeft" (formula "1"))
                           (rule "andLeft" (formula "1"))
                           (rule "andLeft" (formula "2"))
                           (rule "eqSymm" (formula "2"))
                           (rule "blockEmpty" (formula "14") (term "6"))
                           (rule "assignment" (formula "14") (term "6"))
                           (builtin "Update Simplification" (formula "14"))
                           (rule "greater_than_comparison_new" (formula "14") (term "6"))
                           (builtin "Update Simplification" (formula "14"))
                           (rule "inEqSimp_gtToGeq" (formula "14") (term "0"))
                           (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0"))
                           (rule "polySimp_addComm1" (formula "14") (term "0,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "14") (term "0"))
                           (rule "polySimp_mulLiterals" (formula "14") (term "0,0"))
                           (rule "polySimp_elimOne" (formula "14") (term "0,0"))
                           (rule "ifthenelse_split_for" (formula "14"))
                           (branch " result_3 <= -1 + result_1 TRUE"
                              (rule "ifEnterThen" (formula "15") (term "4"))
                              (rule "assignment" (formula "15") (term "4"))
                              (builtin "Update Simplification" (formula "15"))
                              (rule "methodCallWithAssignment" (formula "15") (term "4") (inst "#v0=j"))
                              (branch " Normal Execution (s2_2 != null)"
                                 (builtin "Update Simplification" (formula "15"))
                                 (rule "variableDeclaration" (formula "15") (term "4") (newnames "j_16"))
                                 (builtin "Use Operation Contract" (formula "15") (newnames "result_27") (contract "length;;"))
                                 (branch " Pre"
                                    (builtin "Update Simplification" (formula "15"))
                                    (rule "replace_known_left" (formula "15") (term "0") (ifseqformula "14"))
                                    (rule "concrete_and_1" (formula "15"))
                                    (rule "replace_known_left" (formula "15") (term "0") (ifseqformula "13"))
                                    (rule "concrete_and_1" (formula "15"))
                                    (rule "notRight" (formula "15"))
                                    (rule "close" (formula "20") (ifseqformula "1"))
                                 )
                                 (branch " Post"
                                    (builtin "Update Simplification" (formula "15"))
                                    (rule "inInt" (formula "15") (term "1,1,0,0"))
                                    (rule "concrete_and_3" (formula "15") (term "1,0,0"))
                                    (rule "impRight" (formula "15"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "andLeft" (formula "2"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "eqSymm" (formula "1"))
                                    (rule "applyEq" (formula "1") (term "0") (ifseqformula "5"))
                                    (rule "eqSymm" (formula "1"))
                                    (rule "applyEq" (formula "17") (term "1") (ifseqformula "1"))
                                    (rule "blockEmpty" (formula "17") (term "5"))
                                    (rule "assignment" (formula "17") (term "5"))
                                    (builtin "Update Simplification" (formula "17"))
                                    (rule "blockEmpty" (formula "17") (term "4"))
                                    (rule "for_to_while" (formula "17") (term "4") (inst "#innerLabel=_label6") (inst "#outerLabel=_label7"))
                                    (rule "variableDeclarationAssign" (formula "17") (term "4"))
                                    (rule "variableDeclaration" (formula "17") (term "4") (newnames "i_3"))
                                    (rule "assignment" (formula "17") (term "4"))
                                    (builtin "Update Simplification" (formula "17"))
                                    (rule "whileInvDiamondDec2" (formula "17") (newnames "i_3_0,d_2_0,i_3_1,d_2_1,anon_0,j_17") (inst "#v1=b") (inst "#v2=j") (inst "#modifies={i_3,d_2}") (inst "inv=d_2 >= 0") (inst "variant=m_2 - i_3") (userinteraction))
                                    (branch " Invariant Initially Valid"
                                       (builtin "Update Simplification" (formula "17"))
                                       (rule "lengthGEq0" (inst "l=content(t_1)") (userinteraction))
                                       (rule "castDelInt" (formula "18") (term "0,0"))
                                       (rule "qeq_literals" (formula "18") (term "0"))
                                       (rule "concrete_and_1" (formula "18"))
                                       (rule "castDelInt" (formula "18") (term "1,0"))
                                       (rule "polySimp_elimSub" (formula "18") (term "0"))
                                       (rule "times_zero_2" (formula "18") (term "1,0"))
                                       (rule "add_zero_right" (formula "18") (term "0"))
                                       (rule "inEqSimp_geqRight" (formula "18"))
                                       (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "1") (term "0,0"))
                                       (rule "applyEq" (formula "2") (term "0") (ifseqformula "7"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                       (rule "mul_literals" (formula "1") (term "1"))
                                       (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "1"))
                                       (rule "qeq_literals" (formula "2") (term "0"))
                                       (rule "concrete_and_2" (formula "2"))
                                       (rule "closeFalse" (formula "2"))
                                    )
                                    (branch " Body Preserves Invariant and Decreases Variant"
                                       (builtin "Update Simplification" (formula "17"))
                                       (rule "concrete_impl_1" (formula "17"))
                                       (rule "impRight" (formula "17"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "impRight" (formula "19"))
                                       (rule "andLeft" (formula "2"))
                                       (rule "andLeft" (formula "2"))
                                       (rule "castDelInt" (formula "5") (term "1,0,1"))
                                       (rule "castDelInt" (formula "5") (term "1"))
                                       (rule "polySimp_elimSub" (formula "5") (term "0"))
                                       (rule "polySimp_elimSub" (formula "22") (term "0,1,1,1,0,6"))
                                       (rule "polySimp_elimSub" (formula "22") (term "0,1,0,1,1,0,6"))
                                       (rule "polySimp_elimSub" (formula "22") (term "2"))
                                       (rule "polySimp_elimSub" (formula "4") (term "0"))
                                       (rule "polySimp_elimSub" (formula "5") (term "1"))
                                       (rule "times_zero_2" (formula "5") (term "1,1"))
                                       (rule "add_zero_right" (formula "5") (term "1"))
                                       (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,1,1,0,6"))
                                       (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,1,1,0,6"))
                                       (rule "polySimp_addComm0" (formula "5") (term "0"))
                                       (rule "polySimp_addComm0" (formula "22") (term "0,1,1,1,0,6"))
                                       (rule "polySimp_addComm0" (formula "22") (term "2"))
                                       (rule "polySimp_addComm0" (formula "4") (term "0"))
                                       (rule "polySimp_addComm0" (formula "22") (term "1,0,1,0,1,1,0,6"))
                                       (rule "polySimp_addAssoc" (formula "22") (term "0,1,0,1,1,0,6"))
                                       (rule "polySimp_addComm1" (formula "22") (term "0,0,1,0,1,1,0,6"))
                                       (rule "inEqSimp_homoInEq0" (formula "5"))
                                       (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                                       (rule "polySimp_mulAssoc" (formula "5") (term "0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "5") (term "0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "5") (term "0,1,0"))
                                       (rule "polySimp_elimOne" (formula "5") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                       (rule "polySimp_addComm0" (formula "5") (term "0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "5") (term "0"))
                                       (rule "add_literals" (formula "5") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "5") (term "1,0"))
                                       (rule "add_zero_right" (formula "5") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "1,1,1,0,6"))
                                       (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,1,0,6"))
                                       (rule "polySimp_elimOne" (formula "22") (term "1,1,1,1,0,6"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                       (rule "polySimp_mulLiterals" (formula "4") (term "1"))
                                       (rule "polySimp_elimOne" (formula "4") (term "1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,1,1,0,6"))
                                       (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,1,1,0,6"))
                                       (rule "polySimp_rightDist" (formula "22") (term "1,1,0,1,1,0,6"))
                                       (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,1,1,0,6"))
                                       (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,1,1,0,6"))
                                       (rule "polySimp_rightDist" (formula "22") (term "0,1,1,0,1,1,0,6"))
                                       (rule "mul_literals" (formula "22") (term "0,0,1,1,0,1,1,0,6"))
                                       (rule "polySimp_mulLiterals" (formula "22") (term "1,0,1,1,0,1,1,0,6"))
                                       (rule "polySimp_elimOne" (formula "22") (term "1,0,1,1,0,1,1,0,6"))
                                       (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "8"))
                                       (rule "polySimp_mulComm0" (formula "4") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                       (rule "polySimp_addComm0" (formula "4") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                       (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                       (rule "polySimp_rightDist" (formula "4") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                       (rule "mul_literals" (formula "4") (term "0,1"))
                                       (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                       (rule "variableDeclarationAssign" (formula "1") (term "2"))
                                       (rule "variableDeclarationAssign" (formula "23") (term "6"))
                                       (rule "variableDeclaration" (formula "1") (term "2") (newnames "b_12"))
                                       (rule "variableDeclaration" (formula "23") (term "6") (newnames "exc"))
                                       (rule "assignment" (formula "23") (term "6"))
                                       (builtin "Update Simplification" (formula "23"))
                                       (rule "variableDeclaration" (formula "23") (term "7") (newnames "thrownExc"))
                                       (rule "less_than_comparison_new" (formula "1") (term "2"))
                                       (builtin "Update Simplification" (formula "1"))
                                       (rule "inEqSimp_ltToLeq" (formula "1") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "0,0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "0,0"))
                                       (rule "ifUnfold" (formula "23") (term "7") (inst "#boolv=b"))
                                       (rule "variableDeclaration" (formula "23") (term "7") (newnames "b_13"))
                                       (rule "less_than_comparison_new" (formula "23") (term "7"))
                                       (builtin "Update Simplification" (formula "23"))
                                       (rule "inEqSimp_ltToLeq" (formula "23") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0"))
                                       (rule "polySimp_addComm1" (formula "23") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "23") (term "0"))
                                       (rule "polySimp_mulLiterals" (formula "23") (term "0,0"))
                                       (rule "polySimp_elimOne" (formula "23") (term "0,0"))
                                       (rule "ifthenelse_split_for" (formula "1"))
                                       (branch " result_3 >= 1 + i_3_0 TRUE"
                                          (rule "replace_known_left" (formula "24") (term "0") (ifseqformula "1"))
                                          (rule "ifthenelse_true_for" (formula "24"))
                                          (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "1"))
                                          (rule "inEqSimp_homoInEq0" (formula "6") (term "0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0"))
                                          (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "6") (term "0,0"))
                                          (rule "qeq_literals" (formula "6") (term "0"))
                                          (rule "concrete_or_1" (formula "6"))
                                          (rule "true_left" (formula "6"))
                                          (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "9"))
                                          (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                          (rule "mul_literals" (formula "1") (term "0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1"))
                                          (rule "mul_literals" (formula "1") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                          (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "1"))
                                          (rule "inEqSimp_homoInEq0" (formula "6") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                                          (rule "mul_literals" (formula "6") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                          (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
                                          (rule "add_literals" (formula "6") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0"))
                                          (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "6") (term "0,0"))
                                          (rule "qeq_literals" (formula "6") (term "0"))
                                          (rule "concrete_or_1" (formula "6"))
                                          (rule "true_left" (formula "6"))
                                          (rule "ifEnterThen" (formula "23") (term "7"))
                                          (rule "assignment" (formula "3"))
                                          (rule "assignment" (formula "23") (term "7"))
                                          (builtin "Update Simplification" (formula "23"))
                                          (rule "methodCallEmpty" (formula "3") (term "1"))
                                          (rule "variableDeclarationAssign" (formula "23") (term "7"))
                                          (rule "emptyModality" (formula "3") (term "1"))
                                          (builtin "Update Simplification" (formula "3"))
                                          (rule "boolean_equal" (formula "3"))
                                          (rule "true_left" (formula "3"))
                                          (rule "variableDeclaration" (formula "22") (term "7") (newnames "f"))
                                          (rule "compound_subtraction_2" (formula "22") (term "7") (inst "#v0=j") (inst "#v1=j_1"))
                                          (rule "variableDeclarationAssign" (formula "22") (term "7"))
                                          (rule "variableDeclaration" (formula "22") (term "7") (newnames "j_18"))
                                          (rule "methodCallWithAssignment" (formula "22") (term "7") (inst "#v0=j_19"))
                                          (branch " Normal Execution (s1_2 != null)"
                                             (builtin "Update Simplification" (formula "22"))
                                             (rule "variableDeclaration" (formula "22") (term "7") (newnames "j_19"))
                                             (rule "variableDeclarationAssign" (formula "22") (term "7"))
                                             (rule "variableDeclaration" (formula "22") (term "7") (newnames "arg0_8"))
                                             (rule "assignment" (formula "22") (term "7"))
                                             (builtin "Update Simplification" (formula "22"))
                                             (builtin "Use Operation Contract" (formula "22") (newnames "arg0_8_0,result_29") (contract "charAtExc#charAtNormal;;"))
                                             (branch " Pre"
                                                (builtin "Update Simplification" (formula "22"))
                                                (rule "inInt" (formula "22") (term "1,0"))
                                                (rule "concrete_and_3" (formula "22") (term "0"))
                                                (rule "replace_known_left" (formula "22") (term "0,1,0") (ifseqformula "19"))
                                                (rule "concrete_and_1" (formula "22") (term "1,0"))
                                                (rule "replace_known_right" (formula "22") (term "0,1,0") (ifseqformula "26"))
                                                (rule "concrete_not_2" (formula "22") (term "1,0"))
                                                (rule "concrete_and_3" (formula "22") (term "0"))
                                                (rule "replace_known_left" (formula "22") (term "0") (ifseqformula "21"))
                                                (rule "concrete_and_1" (formula "22"))
                                                (rule "orRight" (formula "22"))
                                                (rule "orRight" (formula "22"))
                                                (rule "replace_known_left" (formula "24") (term "0") (ifseqformula "5"))
                                                (rule "concrete_and_1" (formula "24"))
                                                (rule "inEqSimp_ltRight" (formula "22"))
                                                (rule "times_zero_1" (formula "1") (term "0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0"))
                                                (rule "inEqSimp_geqRight" (formula "22"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "inEqSimp_ltRight" (formula "23"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "14"))
                                                (rule "applyEq" (formula "2") (term "0,1,0") (ifseqformula "14"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "3"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "inEqSimp_homoInEq1" (formula "1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                                (rule "add_literals" (formula "1") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "1") (term "1,0"))
                                                (rule "add_zero_right" (formula "1") (term "0"))
                                                (rule "leq_literals" (formula "1"))
                                                (rule "closeFalse" (formula "1"))
                                             )
                                             (branch " Post"
                                                (builtin "Update Simplification" (formula "22"))
                                                (rule "inChar" (formula "22") (term "1,1,0,0"))
                                                (rule "concrete_and_3" (formula "22") (term "1,0,0"))
                                                (rule "impRight" (formula "22"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "2"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "typeEqDerived" (formula "2") (term "0,1,1") (ifseqformula "1"))
                                                (rule "boolean_equal" (formula "2") (term "1,1"))
                                                (rule "concrete_and_3" (formula "2") (term "1"))
                                                (rule "eqSymm" (formula "3") (term "1,1"))
                                                (rule "replace_known_left" (formula "2") (term "0,1") (ifseqformula "1"))
                                                (rule "concrete_not_1" (formula "2") (term "1"))
                                                (rule "concrete_impl_3" (formula "2"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "orRight" (formula "24"))
                                                (rule "replace_known_left" (formula "2") (term "0,1") (ifseqformula "1"))
                                                (rule "concrete_and_1" (formula "2") (term "1"))
                                                (rule "replace_known_left" (formula "2") (term "0,0") (ifseqformula "7"))
                                                (rule "concrete_and_1" (formula "2") (term "0"))
                                                (rule "inEqSimp_geqRight" (formula "25"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "inEqSimp_ltRight" (formula "25"))
                                                (rule "times_zero_1" (formula "1") (term "0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0"))
                                                (rule "inEqSimp_ltToLeq" (formula "3") (term "0"))
                                                (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0"))
                                                (rule "replace_known_left" (formula "3") (term "0") (ifseqformula "1"))
                                                (rule "concrete_impl_1" (formula "3"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "15"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "4"))
                                                (rule "inEqSimp_homoInEq0" (formula "1") (term "0"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0"))
                                                (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0"))
                                                (rule "qeq_literals" (formula "1") (term "0"))
                                                (rule "concrete_or_1" (formula "1"))
                                                (rule "true_left" (formula "1"))
                                                (rule "blockEmpty" (formula "24") (term "8"))
                                                (rule "assignment" (formula "24") (term "8"))
                                                (builtin "Update Simplification" (formula "24"))
                                                (rule "variableDeclarationAssign" (formula "24") (term "8"))
                                                (rule "variableDeclaration" (formula "24") (term "8") (newnames "j_20"))
                                                (rule "methodCallWithAssignment" (formula "24") (term "8") (inst "#v0=j_21"))
                                                (branch " Normal Execution (s2_2 != null)"
                                                   (builtin "Update Simplification" (formula "24"))
                                                   (rule "variableDeclaration" (formula "24") (term "8") (newnames "j_21"))
                                                   (rule "variableDeclarationAssign" (formula "24") (term "8"))
                                                   (rule "variableDeclaration" (formula "24") (term "8") (newnames "arg0_10"))
                                                   (rule "assignment" (formula "24") (term "8"))
                                                   (builtin "Update Simplification" (formula "24"))
                                                   (builtin "Use Operation Contract" (formula "24") (newnames "arg0_10_0,result_31") (contract "charAtExc#charAtNormal;;"))
                                                   (branch " Pre"
                                                      (builtin "Update Simplification" (formula "24"))
                                                      (rule "inInt" (formula "24") (term "1,0"))
                                                      (rule "concrete_and_3" (formula "24") (term "0"))
                                                      (rule "replace_known_right" (formula "24") (term "0,1,1,0") (ifseqformula "29"))
                                                      (rule "concrete_not_2" (formula "24") (term "1,1,0"))
                                                      (rule "concrete_and_3" (formula "24") (term "1,0"))
                                                      (rule "replace_known_left" (formula "24") (term "1,0") (ifseqformula "22"))
                                                      (rule "concrete_and_3" (formula "24") (term "0"))
                                                      (rule "replace_known_left" (formula "24") (term "0") (ifseqformula "23"))
                                                      (rule "concrete_and_1" (formula "24"))
                                                      (rule "orRight" (formula "24"))
                                                      (rule "orRight" (formula "24"))
                                                      (rule "replace_known_left" (formula "26") (term "0") (ifseqformula "7"))
                                                      (rule "concrete_and_1" (formula "26"))
                                                      (rule "inEqSimp_ltRight" (formula "24"))
                                                      (rule "times_zero_1" (formula "1") (term "0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0"))
                                                      (rule "inEqSimp_geqRight" (formula "24"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                      (rule "inEqSimp_ltRight" (formula "25"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                      (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                      (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                      (rule "applyEq" (formula "2") (term "0,1,0") (ifseqformula "14"))
                                                      (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "14"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                      (rule "inEqSimp_contradInEq0" (formula "5") (ifseqformula "1"))
                                                      (rule "andLeft" (formula "5"))
                                                      (rule "inEqSimp_homoInEq1" (formula "5"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "5") (term "0"))
                                                      (rule "add_literals" (formula "5") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "5") (term "1,0"))
                                                      (rule "add_zero_right" (formula "5") (term "0"))
                                                      (rule "leq_literals" (formula "5"))
                                                      (rule "closeFalse" (formula "5"))
                                                   )
                                                   (branch " Post"
                                                      (builtin "Update Simplification" (formula "24"))
                                                      (rule "inChar" (formula "24") (term "1,1,0,0"))
                                                      (rule "concrete_and_3" (formula "24") (term "1,0,0"))
                                                      (rule "impRight" (formula "24"))
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "andLeft" (formula "2"))
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "typeEqDerived" (formula "2") (term "0,1,1") (ifseqformula "1"))
                                                      (rule "boolean_equal" (formula "2") (term "1,1"))
                                                      (rule "concrete_and_3" (formula "2") (term "1"))
                                                      (rule "eqSymm" (formula "3") (term "1,1"))
                                                      (rule "replace_known_left" (formula "2") (term "0,1") (ifseqformula "1"))
                                                      (rule "concrete_not_1" (formula "2") (term "1"))
                                                      (rule "concrete_impl_3" (formula "2"))
                                                      (rule "notLeft" (formula "2"))
                                                      (rule "orRight" (formula "26"))
                                                      (rule "replace_known_left" (formula "2") (term "0,0") (ifseqformula "9"))
                                                      (rule "concrete_and_1" (formula "2") (term "0"))
                                                      (rule "replace_known_left" (formula "2") (term "0,1") (ifseqformula "1"))
                                                      (rule "concrete_and_1" (formula "2") (term "1"))
                                                      (rule "inEqSimp_geqRight" (formula "27"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                      (rule "inEqSimp_ltRight" (formula "27"))
                                                      (rule "times_zero_1" (formula "1") (term "0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "3") (term "0"))
                                                      (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0"))
                                                      (rule "replace_known_left" (formula "3") (term "0") (ifseqformula "1"))
                                                      (rule "concrete_impl_1" (formula "3"))
                                                      (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                      (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "15"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                      (rule "blockEmpty" (formula "26") (term "9"))
                                                      (rule "assignment" (formula "26") (term "9"))
                                                      (builtin "Update Simplification" (formula "26"))
                                                      (rule "assignmentSubtractionInt" (formula "26") (term "9"))
                                                      (builtin "Update Simplification" (formula "26"))
                                                      (rule "translateJavaSubInt" (formula "26") (term "2"))
                                                      (rule "polySimp_elimSub" (formula "26") (term "2"))
                                                      (rule "ifElseUnfold" (formula "26") (term "8") (inst "#boolv=b"))
                                                      (rule "variableDeclaration" (formula "26") (term "8") (newnames "b_15"))
                                                      (rule "greater_equal_than_comparison_new" (formula "26") (term "8"))
                                                      (builtin "Update Simplification" (formula "26"))
                                                      (rule "castDelInt" (formula "26") (term "0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "26") (term "0"))
                                                      (rule "polySimp_mulLiterals" (formula "26") (term "0,0"))
                                                      (rule "polySimp_elimOne" (formula "26") (term "0,0"))
                                                      (rule "ifthenelse_split_for" (formula "26"))
                                                      (branch " result_6 <= result_5 TRUE"
                                                         (rule "ifElseSkipElse" (formula "27") (term "8"))
                                                         (rule "assignment" (formula "27") (term "8"))
                                                         (builtin "Update Simplification" (formula "27"))
                                                         (rule "compound_assignment_op_plus" (formula "27") (term "8"))
                                                         (rule "compound_int_cast_expression" (formula "27") (term "8") (inst "#v=j"))
                                                         (rule "variableDeclarationAssign" (formula "27") (term "8"))
                                                         (rule "variableDeclaration" (formula "27") (term "8") (newnames "j_22"))
                                                         (rule "remove_parentheses_right" (formula "27") (term "8"))
                                                         (rule "compound_addition_2" (formula "27") (term "8") (inst "#v0=j_23") (inst "#v1=j_24"))
                                                         (rule "variableDeclarationAssign" (formula "27") (term "8"))
                                                         (rule "variableDeclaration" (formula "27") (term "8") (newnames "j_23"))
                                                         (rule "assignment" (formula "27") (term "8"))
                                                         (builtin "Update Simplification" (formula "27"))
                                                         (rule "variableDeclarationAssign" (formula "27") (term "9"))
                                                         (rule "variableDeclaration" (formula "27") (term "9") (newnames "j_24"))
                                                         (rule "remove_parentheses_right" (formula "27") (term "9"))
                                                         (rule "assignment" (formula "27") (term "9"))
                                                         (builtin "Update Simplification" (formula "27"))
                                                         (rule "castDelInt" (formula "27") (term "5"))
                                                         (rule "assignmentAdditionInt" (formula "27") (term "9"))
                                                         (builtin "Update Simplification" (formula "27"))
                                                         (rule "castDelInt" (formula "27") (term "1,4"))
                                                         (rule "translateJavaAddInt" (formula "27") (term "4"))
                                                         (rule "polySimp_addAssoc" (formula "27") (term "4"))
                                                         (rule "widening_identity_cast_5" (formula "27") (term "8"))
                                                         (rule "assignment" (formula "27") (term "8"))
                                                         (builtin "Update Simplification" (formula "27"))
                                                         (rule "castDelInt" (formula "27") (term "0"))
                                                         (rule "blockEmpty" (formula "27") (term "7"))
                                                         (rule "preincrement" (formula "27") (term "7"))
                                                         (rule "compound_int_cast_expression" (formula "27") (term "7") (inst "#v=j"))
                                                         (rule "variableDeclarationAssign" (formula "27") (term "7"))
                                                         (rule "variableDeclaration" (formula "27") (term "7") (newnames "j_25"))
                                                         (rule "remove_parentheses_right" (formula "27") (term "7"))
                                                         (rule "assignmentAdditionInt" (formula "27") (term "7"))
                                                         (builtin "Update Simplification" (formula "27"))
                                                         (rule "translateJavaAddInt" (formula "27") (term "4"))
                                                         (rule "polySimp_addComm0" (formula "27") (term "4"))
                                                         (rule "widening_identity_cast_5" (formula "27") (term "8"))
                                                         (rule "assignment" (formula "27") (term "8"))
                                                         (builtin "Update Simplification" (formula "27"))
                                                         (rule "castDelInt" (formula "27") (term "2"))
                                                         (rule "tryEmpty" (formula "27") (term "7"))
                                                         (rule "methodCallEmpty" (formula "27") (term "7"))
                                                         (rule "emptyModality" (formula "27") (term "7"))
                                                         (builtin "Update Simplification" (formula "27"))
                                                         (rule "boolean_not_equal_2" (formula "27") (term "0,0"))
                                                         (rule "boolean_not_equal_2" (formula "27") (term "0,0,1"))
                                                         (rule "concrete_impl_2" (formula "27") (term "0"))
                                                         (rule "concrete_not_2" (formula "27") (term "0,1"))
                                                         (rule "concrete_and_1" (formula "27"))
                                                         (rule "concrete_impl_1" (formula "27"))
                                                         (rule "castDelInt" (formula "27") (term "1,1,1,0"))
                                                         (rule "castDelInt" (formula "27") (term "1,1"))
                                                         (rule "castDelInt" (formula "27") (term "0,1,0,0"))
                                                         (rule "castDelInt" (formula "27") (term "1,0,1,1,0"))
                                                         (rule "replace_known_left" (formula "27") (term "0,0,0") (ifseqformula "8"))
                                                         (rule "concrete_and_1" (formula "27") (term "0,0"))
                                                         (rule "replace_known_left" (formula "27") (term "1") (ifseqformula "7"))
                                                         (rule "concrete_and_3" (formula "27"))
                                                         (rule "polySimp_addAssoc" (formula "27") (term "0,1,1"))
                                                         (rule "add_literals" (formula "27") (term "0,0,1,1"))
                                                         (rule "add_zero_left" (formula "27") (term "0,1,1"))
                                                         (rule "polySimp_addAssoc" (formula "27") (term "1,1"))
                                                         (rule "polySimp_pullOutFactor1" (formula "27") (term "0,1,1"))
                                                         (rule "add_literals" (formula "27") (term "1,0,1,1"))
                                                         (rule "times_zero_1" (formula "27") (term "0,1,1"))
                                                         (rule "add_zero_left" (formula "27") (term "1,1"))
                                                         (rule "inEqSimp_homoInEq0" (formula "27") (term "1"))
                                                         (rule "polySimp_pullOutFactor1" (formula "27") (term "0,1"))
                                                         (rule "add_literals" (formula "27") (term "1,0,1"))
                                                         (rule "times_zero_1" (formula "27") (term "0,1"))
                                                         (rule "qeq_literals" (formula "27") (term "1"))
                                                         (rule "concrete_and_3" (formula "27"))
                                                         (rule "inEqSimp_geqRight" (formula "27"))
                                                         (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0"))
                                                         (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                         (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                         (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                         (rule "polySimp_pullOutFactor2b" (formula "1") (term "0"))
                                                         (rule "add_literals" (formula "1") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "1") (term "1,0"))
                                                         (rule "add_zero_right" (formula "1") (term "0"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "0"))
                                                         (rule "mul_literals" (formula "1") (term "0,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "11"))
                                                         (rule "qeq_literals" (formula "1") (term "0"))
                                                         (rule "concrete_and_2" (formula "1"))
                                                         (rule "closeFalse" (formula "1"))
                                                      )
                                                      (branch " result_6 <= result_5 FALSE"
                                                         (rule "inEqSimp_leqRight" (formula "26"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                         (rule "mul_literals" (formula "1") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                         (rule "ifElseSkipThen" (formula "27") (term "8"))
                                                         (rule "assignment" (formula "27") (term "8"))
                                                         (builtin "Update Simplification" (formula "27"))
                                                         (rule "compound_assignment_op_plus" (formula "27") (term "8"))
                                                         (rule "compound_int_cast_expression" (formula "27") (term "8") (inst "#v=j"))
                                                         (rule "variableDeclarationAssign" (formula "27") (term "8"))
                                                         (rule "variableDeclaration" (formula "27") (term "8") (newnames "j_26"))
                                                         (rule "remove_parentheses_right" (formula "27") (term "8"))
                                                         (rule "compound_addition_2" (formula "27") (term "8") (inst "#v0=j_27") (inst "#v1=j_28"))
                                                         (rule "variableDeclarationAssign" (formula "27") (term "8"))
                                                         (rule "variableDeclaration" (formula "27") (term "8") (newnames "j_27"))
                                                         (rule "assignment" (formula "27") (term "8"))
                                                         (builtin "Update Simplification" (formula "27"))
                                                         (rule "variableDeclarationAssign" (formula "27") (term "9"))
                                                         (rule "variableDeclaration" (formula "27") (term "9") (newnames "j_28"))
                                                         (rule "remove_parentheses_right" (formula "27") (term "9"))
                                                         (rule "unaryMinusInt" (formula "27") (term "9"))
                                                         (builtin "Update Simplification" (formula "27"))
                                                         (rule "castDelInt" (formula "27") (term "0,5"))
                                                         (rule "translateJavaUnaryMinusInt" (formula "27") (term "5"))
                                                         (rule "polySimp_elimNeg" (formula "27") (term "5"))
                                                         (rule "polySimp_mulComm0" (formula "27") (term "5"))
                                                         (rule "polySimp_rightDist" (formula "27") (term "5"))
                                                         (rule "polySimp_mulLiterals" (formula "27") (term "1,5"))
                                                         (rule "polySimp_elimOne" (formula "27") (term "1,5"))
                                                         (rule "polySimp_mulComm0" (formula "27") (term "0,5"))
                                                         (rule "assignmentAdditionInt" (formula "27") (term "9"))
                                                         (builtin "Update Simplification" (formula "27"))
                                                         (rule "castDelInt" (formula "27") (term "1,4"))
                                                         (rule "translateJavaAddInt" (formula "27") (term "4"))
                                                         (rule "polySimp_addAssoc" (formula "27") (term "4"))
                                                         (rule "widening_identity_cast_5" (formula "27") (term "8"))
                                                         (rule "assignment" (formula "27") (term "8"))
                                                         (builtin "Update Simplification" (formula "27"))
                                                         (rule "castDelInt" (formula "27") (term "0"))
                                                         (rule "blockEmpty" (formula "27") (term "7"))
                                                         (rule "preincrement" (formula "27") (term "7"))
                                                         (rule "compound_int_cast_expression" (formula "27") (term "7") (inst "#v=j"))
                                                         (rule "variableDeclarationAssign" (formula "27") (term "7"))
                                                         (rule "variableDeclaration" (formula "27") (term "7") (newnames "j_29"))
                                                         (rule "remove_parentheses_right" (formula "27") (term "7"))
                                                         (rule "assignmentAdditionInt" (formula "27") (term "7"))
                                                         (builtin "Update Simplification" (formula "27"))
                                                         (rule "translateJavaAddInt" (formula "27") (term "4"))
                                                         (rule "polySimp_addComm0" (formula "27") (term "4"))
                                                         (rule "widening_identity_cast_5" (formula "27") (term "8"))
                                                         (rule "assignment" (formula "27") (term "8"))
                                                         (builtin "Update Simplification" (formula "27"))
                                                         (rule "castDelInt" (formula "27") (term "2"))
                                                         (rule "tryEmpty" (formula "27") (term "7"))
                                                         (rule "methodCallEmpty" (formula "27") (term "7"))
                                                         (rule "emptyModality" (formula "27") (term "7"))
                                                         (builtin "Update Simplification" (formula "27"))
                                                         (rule "boolean_not_equal_2" (formula "27") (term "0,0"))
                                                         (rule "boolean_not_equal_2" (formula "27") (term "0,0,1"))
                                                         (rule "concrete_impl_2" (formula "27") (term "0"))
                                                         (rule "concrete_not_2" (formula "27") (term "0,1"))
                                                         (rule "concrete_and_1" (formula "27"))
                                                         (rule "concrete_impl_1" (formula "27"))
                                                         (rule "castDelInt" (formula "27") (term "1,1"))
                                                         (rule "castDelInt" (formula "27") (term "0,1,0,0"))
                                                         (rule "castDelInt" (formula "27") (term "1,1,1,0"))
                                                         (rule "castDelInt" (formula "27") (term "1,0,1,1,0"))
                                                         (rule "replace_known_left" (formula "27") (term "5,0,0,0") (ifseqformula "8"))
                                                         (builtin "Update Simplification" (formula "27"))
                                                         (rule "concrete_and_1" (formula "27") (term "0,0"))
                                                         (rule "replace_known_left" (formula "27") (term "1") (ifseqformula "7"))
                                                         (rule "concrete_and_3" (formula "27"))
                                                         (rule "polySimp_addAssoc" (formula "27") (term "0,1,1"))
                                                         (rule "add_literals" (formula "27") (term "0,0,1,1"))
                                                         (rule "add_zero_left" (formula "27") (term "0,1,1"))
                                                         (rule "polySimp_addAssoc" (formula "27") (term "1,1"))
                                                         (rule "polySimp_pullOutFactor1" (formula "27") (term "0,1,1"))
                                                         (rule "add_literals" (formula "27") (term "1,0,1,1"))
                                                         (rule "times_zero_1" (formula "27") (term "0,1,1"))
                                                         (rule "add_zero_left" (formula "27") (term "1,1"))
                                                         (rule "inEqSimp_homoInEq0" (formula "27") (term "1"))
                                                         (rule "polySimp_pullOutFactor1" (formula "27") (term "0,1"))
                                                         (rule "add_literals" (formula "27") (term "1,0,1"))
                                                         (rule "times_zero_1" (formula "27") (term "0,1"))
                                                         (rule "qeq_literals" (formula "27") (term "1"))
                                                         (rule "concrete_and_3" (formula "27"))
                                                         (rule "inEqSimp_geqRight" (formula "27"))
                                                         (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0"))
                                                         (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                         (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "0,1"))
                                                         (rule "mul_literals" (formula "1") (term "0,0,1"))
                                                         (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "1"))
                                                         (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                         (rule "mul_literals" (formula "2") (term "0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                         (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                                         (rule "polySimp_pullOutFactor2b" (formula "2") (term "0"))
                                                         (rule "add_literals" (formula "2") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "2") (term "1,0"))
                                                         (rule "add_zero_right" (formula "2") (term "0"))
                                                         (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                         (rule "add_literals" (formula "2") (term "0,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "11"))
                                                         (rule "qeq_literals" (formula "2") (term "0"))
                                                         (rule "concrete_and_2" (formula "2"))
                                                         (rule "closeFalse" (formula "2"))
                                                      )
                                                   )
                                                   (branch " Exceptional Post"
                                                      (builtin "Update Simplification" (formula "24"))
                                                      (rule "impRight" (formula "24"))
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "andLeft" (formula "2"))
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "notLeft" (formula "2"))
                                                      (rule "eqSymm" (formula "3") (term "1,1"))
                                                      (rule "replace_known_right" (formula "2") (term "0,0,1") (ifseqformula "27"))
                                                      (rule "concrete_not_2" (formula "2") (term "0,1"))
                                                      (rule "concrete_and_1" (formula "2") (term "1"))
                                                      (rule "replace_known_right" (formula "3") (term "0,1") (ifseqformula "27"))
                                                      (rule "concrete_and_2" (formula "3") (term "1"))
                                                      (rule "concrete_impl_3" (formula "3"))
                                                      (rule "notLeft" (formula "3"))
                                                      (rule "replace_known_left" (formula "26") (term "0") (ifseqformula "9"))
                                                      (rule "concrete_and_1" (formula "26"))
                                                      (rule "inEqSimp_ltToLeq" (formula "2") (term "0,0"))
                                                      (rule "times_zero_1" (formula "2") (term "1,0,0,0,0"))
                                                      (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                                      (rule "inEqSimp_ltRight" (formula "26"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                      (rule "inEqSimp_commuteGeq" (formula "3") (term "1,0"))
                                                      (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "15"))
                                                      (rule "applyEq" (formula "3") (term "0,1,0") (ifseqformula "15"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "0,0"))
                                                      (rule "mul_literals" (formula "3") (term "1,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                      (rule "replace_known_left" (formula "3") (term "1,0") (ifseqformula "1"))
                                                      (rule "concrete_or_3" (formula "3") (term "0"))
                                                      (rule "concrete_impl_1" (formula "3"))
                                                      (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "7"))
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "inEqSimp_homoInEq1" (formula "1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                                      (rule "add_literals" (formula "1") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "1") (term "1,0"))
                                                      (rule "add_literals" (formula "1") (term "0"))
                                                      (rule "leq_literals" (formula "1"))
                                                      (rule "closeFalse" (formula "1"))
                                                   )
                                                )
                                                (branch " Null Reference (s2_2 = null)"
                                                   (builtin "Update Simplification" (formula "1"))
                                                   (rule "close" (formula "30") (ifseqformula "1"))
                                                )
                                             )
                                             (branch " Exceptional Post"
                                                (builtin "Update Simplification" (formula "22"))
                                                (rule "impRight" (formula "22"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "2"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "eqSymm" (formula "3") (term "1,1"))
                                                (rule "replace_known_right" (formula "2") (term "0,0,1") (ifseqformula "25"))
                                                (rule "concrete_not_2" (formula "2") (term "0,1"))
                                                (rule "concrete_and_1" (formula "2") (term "1"))
                                                (rule "replace_known_left" (formula "3") (term "0,0") (ifseqformula "8"))
                                                (rule "concrete_and_1" (formula "3") (term "0"))
                                                (rule "replace_known_right" (formula "3") (term "0,1") (ifseqformula "25"))
                                                (rule "concrete_and_2" (formula "3") (term "1"))
                                                (rule "concrete_impl_3" (formula "3"))
                                                (rule "notLeft" (formula "3"))
                                                (rule "inEqSimp_ltToLeq" (formula "2") (term "0,0"))
                                                (rule "times_zero_1" (formula "2") (term "1,0,0,0,0"))
                                                (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                                (rule "inEqSimp_ltRight" (formula "24"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                (rule "inEqSimp_commuteGeq" (formula "3") (term "1,0"))
                                                (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "15"))
                                                (rule "applyEq" (formula "3") (term "0,1,0") (ifseqformula "15"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "0,0"))
                                                (rule "mul_literals" (formula "3") (term "1,0,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                (rule "replace_known_left" (formula "3") (term "1,0") (ifseqformula "1"))
                                                (rule "concrete_or_3" (formula "3") (term "0"))
                                                (rule "concrete_impl_1" (formula "3"))
                                                (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "4"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "inEqSimp_homoInEq1" (formula "1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                                (rule "add_literals" (formula "1") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "1") (term "1,0"))
                                                (rule "add_literals" (formula "1") (term "0"))
                                                (rule "leq_literals" (formula "1"))
                                                (rule "closeFalse" (formula "1"))
                                             )
                                          )
                                          (branch " Null Reference (s1_2 = null)"
                                             (builtin "Update Simplification" (formula "1"))
                                             (rule "close" (formula "27") (ifseqformula "1"))
                                          )
                                       )
                                       (branch " result_3 >= 1 + i_3_0 FALSE"
                                          (rule "replace_known_right" (formula "24") (term "0") (ifseqformula "23"))
                                          (rule "ifthenelse_false_for" (formula "24"))
                                          (rule "inEqSimp_geqRight" (formula "23"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                          (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1"))
                                          (rule "inEqSimp_antiSymm" (formula "6") (ifseqformula "1"))
                                          (rule "applyEq" (formula "1") (term "0") (ifseqformula "6"))
                                          (rule "inEqSimp_homoInEq0" (formula "1"))
                                          (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                                          (rule "add_literals" (formula "1") (term "1,0"))
                                          (rule "times_zero_1" (formula "1") (term "0"))
                                          (rule "qeq_literals" (formula "1"))
                                          (rule "true_left" (formula "1"))
                                          (rule "applyEq" (formula "6") (term "0") (ifseqformula "5"))
                                          (rule "inEqSimp_homoInEq1" (formula "6"))
                                          (rule "polySimp_pullOutFactor1" (formula "6") (term "0"))
                                          (rule "add_literals" (formula "6") (term "1,0"))
                                          (rule "times_zero_1" (formula "6") (term "0"))
                                          (rule "leq_literals" (formula "6"))
                                          (rule "true_left" (formula "6"))
                                          (rule "applyEq" (formula "2") (term "2") (ifseqformula "5"))
                                          (rule "applyEq" (formula "9") (term "0") (ifseqformula "5"))
                                          (rule "inEqSimp_homoInEq0" (formula "9"))
                                          (rule "polySimp_addComm1" (formula "9") (term "0"))
                                          (rule "applyEq" (formula "23") (term "1,3") (ifseqformula "5"))
                                          (rule "polySimp_pullOutFactor2" (formula "23") (term "3"))
                                          (rule "add_literals" (formula "23") (term "1,3"))
                                          (rule "times_zero_1" (formula "23") (term "3"))
                                          (rule "applyEq" (formula "23") (term "4") (ifseqformula "5"))
                                          (rule "applyEq" (formula "7") (term "1") (ifseqformula "5"))
                                          (rule "applyEq" (formula "11") (term "1") (ifseqformula "5"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                                          (rule "polySimp_mulComm0" (formula "9") (term "1"))
                                          (rule "polySimp_rightDist" (formula "9") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
                                          (rule "mul_literals" (formula "9") (term "0,1"))
                                          (rule "polySimp_elimOne" (formula "9") (term "1,1"))
                                          (rule "ifSkipThen" (formula "22") (term "7"))
                                          (rule "assignment" (formula "1"))
                                          (rule "assignment" (formula "22") (term "7"))
                                          (builtin "Update Simplification" (formula "22"))
                                          (rule "methodCallEmpty" (formula "1") (term "1"))
                                          (rule "tryEmpty" (formula "22") (term "7"))
                                          (rule "emptyModality" (formula "1") (term "1"))
                                          (builtin "Update Simplification" (formula "1"))
                                          (rule "boolean_not_equal_2" (formula "1"))
                                          (rule "closeFalse" (formula "1"))
                                       )
                                    )
                                    (branch " Use Case"
                                       (builtin "Update Simplification" (formula "17"))
                                       (rule "false_to_not_true" (formula "17") (term "0,0,5,1"))
                                       (rule "impRight" (formula "17"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "polySimp_elimSub" (formula "2") (term "0"))
                                       (rule "polySimp_addComm0" (formula "2") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1"))
                                       (rule "polySimp_elimOne" (formula "2") (term "1"))
                                       (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "5"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                       (rule "polySimp_addComm0" (formula "2") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                       (rule "polySimp_rightDist" (formula "2") (term "1"))
                                       (rule "mul_literals" (formula "2") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                       (rule "variableDeclarationAssign" (formula "20") (term "5"))
                                       (rule "variableDeclaration" (formula "20") (term "5") (newnames "b_14"))
                                       (rule "less_than_comparison_new" (formula "20") (term "5"))
                                       (builtin "Update Simplification" (formula "20"))
                                       (rule "inEqSimp_ltToLeq" (formula "20") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0"))
                                       (rule "polySimp_addComm1" (formula "20") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "20") (term "0"))
                                       (rule "polySimp_mulLiterals" (formula "20") (term "0,0"))
                                       (rule "polySimp_elimOne" (formula "20") (term "0,0"))
                                       (rule "ifthenelse_split_for" (formula "20"))
                                       (branch " result_3 >= 1 + i_3_1 TRUE"
                                          (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "1"))
                                          (rule "inEqSimp_homoInEq0" (formula "4") (term "0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0"))
                                          (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                          (rule "add_literals" (formula "4") (term "0,0"))
                                          (rule "qeq_literals" (formula "4") (term "0"))
                                          (rule "concrete_or_1" (formula "4"))
                                          (rule "true_left" (formula "4"))
                                          (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "6"))
                                          (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                          (rule "mul_literals" (formula "1") (term "0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                          (rule "mul_literals" (formula "1") (term "0,1"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                          (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "1"))
                                          (rule "inEqSimp_homoInEq0" (formula "4") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                                          (rule "mul_literals" (formula "4") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                          (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                                          (rule "add_literals" (formula "4") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0"))
                                          (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "4") (term "0,0"))
                                          (rule "qeq_literals" (formula "4") (term "0"))
                                          (rule "concrete_or_1" (formula "4"))
                                          (rule "true_left" (formula "4"))
                                          (rule "assignment" (formula "20") (term "4"))
                                          (builtin "Update Simplification" (formula "20"))
                                          (rule "methodCallEmpty" (formula "20") (term "5"))
                                          (rule "emptyModality" (formula "20") (term "5"))
                                          (builtin "Update Simplification" (formula "20"))
                                          (rule "boolean_equal" (formula "20") (term "0,0"))
                                          (rule "concrete_not_1" (formula "20") (term "0"))
                                          (rule "concrete_impl_2" (formula "20"))
                                          (rule "closeTrue" (formula "20"))
                                       )
                                       (branch " result_3 >= 1 + i_3_1 FALSE"
                                          (rule "inEqSimp_geqRight" (formula "20"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                          (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1"))
                                          (rule "inEqSimp_antiSymm" (formula "4") (ifseqformula "1"))
                                          (rule "applyEq" (formula "1") (term "0") (ifseqformula "4"))
                                          (rule "inEqSimp_homoInEq0" (formula "1"))
                                          (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                                          (rule "add_literals" (formula "1") (term "1,0"))
                                          (rule "times_zero_1" (formula "1") (term "0"))
                                          (rule "qeq_literals" (formula "1"))
                                          (rule "true_left" (formula "1"))
                                          (rule "applyEq" (formula "21") (term "1") (ifseqformula "3"))
                                          (rule "applyEq" (formula "4") (term "0") (ifseqformula "3"))
                                          (rule "inEqSimp_homoInEq1" (formula "4"))
                                          (rule "polySimp_pullOutFactor1" (formula "4") (term "0"))
                                          (rule "add_literals" (formula "4") (term "1,0"))
                                          (rule "times_zero_1" (formula "4") (term "0"))
                                          (rule "leq_literals" (formula "4"))
                                          (rule "true_left" (formula "4"))
                                          (rule "applyEq" (formula "6") (term "0") (ifseqformula "3"))
                                          (rule "inEqSimp_homoInEq0" (formula "6"))
                                          (rule "polySimp_addComm1" (formula "6") (term "0"))
                                          (rule "applyEq" (formula "4") (term "1") (ifseqformula "3"))
                                          (rule "applyEq" (formula "8") (term "1") (ifseqformula "3"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                          (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                          (rule "polySimp_rightDist" (formula "6") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                          (rule "mul_literals" (formula "6") (term "0,1"))
                                          (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                                          (rule "assignment" (formula "19") (term "4"))
                                          (builtin "Update Simplification" (formula "19"))
                                          (rule "methodCallEmpty" (formula "19") (term "5"))
                                          (rule "emptyModality" (formula "19") (term "5"))
                                          (builtin "Update Simplification" (formula "19"))
                                          (rule "boolean_not_equal_2" (formula "19") (term "0,0"))
                                          (rule "concrete_not_2" (formula "19") (term "0"))
                                          (rule "concrete_impl_1" (formula "19"))
                                          (rule "blockEmpty" (formula "19") (term "4"))
                                          (rule "compound_subtraction_2" (formula "19") (term "4") (inst "#v0=j") (inst "#v1=j_1"))
                                          (rule "variableDeclarationAssign" (formula "19") (term "4"))
                                          (rule "variableDeclaration" (formula "19") (term "4") (newnames "j_30"))
                                          (rule "methodCallWithAssignment" (formula "19") (term "4") (inst "#v0=j_31"))
                                          (branch " Normal Execution (s1_2 != null)"
                                             (builtin "Update Simplification" (formula "19"))
                                             (rule "variableDeclaration" (formula "19") (term "4") (newnames "j_31"))
                                             (builtin "Use Operation Contract" (formula "19") (newnames "result_33") (contract "length;;"))
                                             (branch " Pre"
                                                (builtin "Update Simplification" (formula "19"))
                                                (rule "replace_known_left" (formula "19") (term "0,1") (ifseqformula "16"))
                                                (rule "concrete_and_1" (formula "19") (term "1"))
                                                (rule "replace_known_right" (formula "19") (term "0,1") (ifseqformula "23"))
                                                (rule "concrete_not_2" (formula "19") (term "1"))
                                                (rule "concrete_and_3" (formula "19"))
                                                (rule "close" (formula "19") (ifseqformula "18"))
                                             )
                                             (branch " Post"
                                                (builtin "Update Simplification" (formula "19"))
                                                (rule "inInt" (formula "19") (term "1,1,0,0"))
                                                (rule "concrete_and_3" (formula "19") (term "1,0,0"))
                                                (rule "impRight" (formula "19"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "2"))
                                                (rule "eqSymm" (formula "2"))
                                                (rule "applyEq" (formula "11") (term "0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "21") (term "1") (ifseqformula "11"))
                                                (rule "applyEq" (formula "2") (term "1") (ifseqformula "11"))
                                                (rule "blockEmpty" (formula "21") (term "4"))
                                                (rule "assignment" (formula "21") (term "4"))
                                                (builtin "Update Simplification" (formula "21"))
                                                (rule "variableDeclarationAssign" (formula "21") (term "4"))
                                                (rule "variableDeclaration" (formula "21") (term "4") (newnames "j_32"))
                                                (rule "methodCallWithAssignment" (formula "21") (term "4") (inst "#v0=j_33"))
                                                (branch " Normal Execution (s2_2 != null)"
                                                   (builtin "Update Simplification" (formula "21"))
                                                   (rule "variableDeclaration" (formula "21") (term "4") (newnames "j_33"))
                                                   (builtin "Use Operation Contract" (formula "21") (newnames "result_35") (contract "length;;"))
                                                   (branch " Pre"
                                                      (builtin "Update Simplification" (formula "21"))
                                                      (rule "replace_known_right" (formula "21") (term "0,1,1") (ifseqformula "26"))
                                                      (rule "concrete_not_2" (formula "21") (term "1,1"))
                                                      (rule "concrete_and_3" (formula "21") (term "1"))
                                                      (rule "replace_known_left" (formula "21") (term "1") (ifseqformula "19"))
                                                      (rule "concrete_and_3" (formula "21"))
                                                      (rule "close" (formula "21") (ifseqformula "20"))
                                                   )
                                                   (branch " Post"
                                                      (builtin "Update Simplification" (formula "21"))
                                                      (rule "inInt" (formula "21") (term "1,1,0,0"))
                                                      (rule "concrete_and_3" (formula "21") (term "1,0,0"))
                                                      (rule "impRight" (formula "21"))
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "andLeft" (formula "2"))
                                                      (rule "eqSymm" (formula "2"))
                                                      (rule "applyEq" (formula "2") (term "0") (ifseqformula "11"))
                                                      (rule "eqSymm" (formula "2"))
                                                      (rule "applyEq" (formula "23") (term "2") (ifseqformula "2"))
                                                      (rule "blockEmpty" (formula "23") (term "4"))
                                                      (rule "assignment" (formula "23") (term "4"))
                                                      (builtin "Update Simplification" (formula "23"))
                                                      (rule "assignmentSubtractionInt" (formula "23") (term "4"))
                                                      (builtin "Update Simplification" (formula "23"))
                                                      (rule "translateJavaSubInt" (formula "23") (term "1"))
                                                      (rule "polySimp_elimSub" (formula "23") (term "1"))
                                                      (rule "polySimp_addComm0" (formula "23") (term "1"))
                                                      (rule "ifElseUnfold" (formula "23") (term "2") (inst "#boolv=b"))
                                                      (rule "variableDeclaration" (formula "23") (term "2") (newnames "b_16"))
                                                      (rule "less_than_comparison_new" (formula "23") (term "2"))
                                                      (builtin "Update Simplification" (formula "23"))
                                                      (rule "castDelInt" (formula "23") (term "0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "23") (term "0"))
                                                      (rule "times_zero_1" (formula "23") (term "1,0,0,0"))
                                                      (rule "add_zero_right" (formula "23") (term "0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "23") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0"))
                                                      (rule "polySimp_mulComm0" (formula "23") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "23") (term "1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0"))
                                                      (rule "mul_literals" (formula "23") (term "0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "23") (term "1,1,0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "23") (term "0") (ifseqformula "6"))
                                                      (rule "inEqSimp_homoInEq1" (formula "23") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "23") (term "0,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "23") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "23") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "23") (term "0,0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,0"))
                                                      (rule "add_literals" (formula "23") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "23") (term "1,0,0,0"))
                                                      (rule "add_zero_right" (formula "23") (term "0,0,0"))
                                                      (rule "leq_literals" (formula "23") (term "0,0"))
                                                      (rule "concrete_and_2" (formula "23") (term "0"))
                                                      (rule "ifthenelse_false_for" (formula "23"))
                                                      (rule "ifElseSkipThen" (formula "23") (term "2"))
                                                      (rule "assignment" (formula "23") (term "2"))
                                                      (builtin "Update Simplification" (formula "23"))
                                                      (rule "compound_assignment_op_plus" (formula "23") (term "2"))
                                                      (rule "compound_int_cast_expression" (formula "23") (term "2") (inst "#v=j"))
                                                      (rule "variableDeclarationAssign" (formula "23") (term "2"))
                                                      (rule "variableDeclaration" (formula "23") (term "2") (newnames "j_34"))
                                                      (rule "remove_parentheses_right" (formula "23") (term "2"))
                                                      (rule "compound_addition_2" (formula "23") (term "2") (inst "#v0=j_35") (inst "#v1=j_36"))
                                                      (rule "variableDeclarationAssign" (formula "23") (term "2"))
                                                      (rule "variableDeclaration" (formula "23") (term "2") (newnames "j_35"))
                                                      (rule "assignment" (formula "23") (term "2"))
                                                      (builtin "Update Simplification" (formula "23"))
                                                      (rule "variableDeclarationAssign" (formula "23") (term "3"))
                                                      (rule "variableDeclaration" (formula "23") (term "3") (newnames "j_36"))
                                                      (rule "remove_parentheses_right" (formula "23") (term "3"))
                                                      (rule "assignment" (formula "23") (term "3"))
                                                      (builtin "Update Simplification" (formula "23"))
                                                      (rule "castDelInt" (formula "23") (term "2"))
                                                      (rule "assignmentAdditionInt" (formula "23") (term "3"))
                                                      (builtin "Update Simplification" (formula "23"))
                                                      (rule "castDelInt" (formula "23") (term "1,1"))
                                                      (rule "translateJavaAddInt" (formula "23") (term "1"))
                                                      (rule "polySimp_addAssoc" (formula "23") (term "1"))
                                                      (rule "widening_identity_cast_5" (formula "23") (term "2"))
                                                      (rule "assignment" (formula "23") (term "2"))
                                                      (builtin "Update Simplification" (formula "23"))
                                                      (rule "castDelInt" (formula "23") (term "0"))
                                                      (rule "blockEmpty" (formula "23") (term "1"))
                                                      (rule "methodCallReturn" (formula "23") (term "1"))
                                                      (rule "assignment" (formula "23") (term "1"))
                                                      (builtin "Update Simplification" (formula "23"))
                                                      (rule "castDelInt" (formula "23") (term "0"))
                                                      (rule "methodCallEmpty" (formula "23") (term "1"))
                                                      (rule "emptyModality" (formula "23") (term "1"))
                                                      (builtin "Update Simplification" (formula "23"))
                                                      (rule "notRight" (formula "23"))
                                                      (rule "castDelInt" (formula "1") (term "0"))
                                                      (rule "polySimp_sepPosMonomial" (formula "1"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "0,1"))
                                                      (rule "applyEq" (formula "7") (term "0") (ifseqformula "1"))
                                                      (rule "inEqSimp_homoInEq1" (formula "7"))
                                                      (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "7") (term "1,0"))
                                                      (rule "polySimp_mulAssoc" (formula "7") (term "0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "7") (term "0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "7") (term "0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "7") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "7") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "7") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "7") (term "0"))
                                                      (rule "add_literals" (formula "7") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "7") (term "1,0"))
                                                      (rule "add_zero_right" (formula "7") (term "0"))
                                                      (rule "applyEq" (formula "16") (term "1") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "5") (term "1") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "14") (term "1") (ifseqformula "1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "7"))
                                                      (rule "mul_literals" (formula "7") (term "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "7") (ifseqformula "6"))
                                                      (rule "qeq_literals" (formula "7") (term "0"))
                                                      (rule "concrete_and_2" (formula "7"))
                                                      (rule "closeFalse" (formula "7"))
                                                   )
                                                   (branch " Exceptional Post"
                                                      (builtin "Update Simplification" (formula "21"))
                                                      (rule "impRight" (formula "21"))
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "andLeft" (formula "2"))
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "notLeft" (formula "2"))
                                                      (rule "close" (formula "24") (ifseqformula "3"))
                                                   )
                                                )
                                                (branch " Null Reference (s2_2 = null)"
                                                   (builtin "Update Simplification" (formula "22"))
                                                   (builtin "Update Simplification" (formula "1"))
                                                   (rule "close" (formula "27") (ifseqformula "1"))
                                                )
                                             )
                                             (branch " Exceptional Post"
                                                (builtin "Update Simplification" (formula "19"))
                                                (rule "impRight" (formula "19"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "2"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "close" (formula "22") (ifseqformula "3"))
                                             )
                                          )
                                          (branch " Null Reference (s1_2 = null)"
                                             (builtin "Update Simplification" (formula "20"))
                                             (builtin "Update Simplification" (formula "1"))
                                             (rule "close" (formula "24") (ifseqformula "1"))
                                          )
                                       )
                                    )
                                 )
                                 (branch " Exceptional Post"
                                    (builtin "Update Simplification" (formula "15"))
                                    (rule "impRight" (formula "15"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "andLeft" (formula "2"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "notLeft" (formula "2"))
                                    (rule "close" (formula "18") (ifseqformula "3"))
                                 )
                              )
                              (branch " Null Reference (s2_2 = null)"
                                 (builtin "Update Simplification" (formula "1"))
                                 (rule "close" (formula "21") (ifseqformula "1"))
                              )
                           )
                           (branch " result_3 <= -1 + result_1 FALSE"
                              (rule "inEqSimp_leqRight" (formula "14"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                              (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                              (rule "add_literals" (formula "1") (term "0,0,0"))
                              (rule "add_zero_left" (formula "1") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                              (rule "polySimp_elimOne" (formula "1") (term "1"))
                              (rule "ifSkipThen" (formula "15") (term "4"))
                              (rule "assignment" (formula "15") (term "4"))
                              (builtin "Update Simplification" (formula "15"))
                              (rule "for_to_while" (formula "15") (term "4") (inst "#innerLabel=_label4") (inst "#outerLabel=_label5"))
                              (rule "variableDeclarationAssign" (formula "15") (term "4"))
                              (rule "variableDeclaration" (formula "15") (term "4") (newnames "i_2"))
                              (rule "assignment" (formula "15") (term "4"))
                              (builtin "Update Simplification" (formula "15"))
                              (rule "cut" (inst "cutFormula=result_3 = result_1") (userinteraction))
                              (branch " CUT: result_3 = result_1 TRUE"
                                 (rule "whileInvDiamondDec2" (formula "16") (newnames "i_2_0,d_2_2,i_2_1,d_2_3,anon_1,j") (inst "variant=m_2 - i_2") (inst "inv=  d_2 >= 0
& (   d_2 = 0
   -> \\forall int k; 
        (   k >= 0 & k <  i_2
         ->   charAt(k, content(t_1))
            = charAt(k, content(s_1))))") (inst "#modifies={i_2,d_2}") (inst "#v2=j") (inst "#v1=b") (userinteraction))
                                 (branch " Invariant Initially Valid"
                                    (builtin "Update Simplification" (formula "16"))
                                    (rule "castDelInt" (formula "16") (term "1,1,0,0,1,1,0"))
                                    (rule "castDelInt" (formula "16") (term "0,0,1,0"))
                                    (rule "eqClose" (formula "16") (term "0,1,0"))
                                    (rule "concrete_impl_1" (formula "16") (term "1,0"))
                                    (rule "castDelInt" (formula "16") (term "1,0,1"))
                                    (rule "castDelInt" (formula "16") (term "0,0,0"))
                                    (rule "qeq_literals" (formula "16") (term "0,0"))
                                    (rule "concrete_and_1" (formula "16") (term "0"))
                                    (rule "polySimp_elimSub" (formula "16") (term "0,1"))
                                    (rule "times_zero_2" (formula "16") (term "1,0,1"))
                                    (rule "add_zero_right" (formula "16") (term "0,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0,0"))
                                    (rule "times_zero_1" (formula "16") (term "1,0,0,1,0,0,0"))
                                    (rule "add_zero_right" (formula "16") (term "0,0,1,0,0,0"))
                                    (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                    (rule "inEqSimp_homoInEq1" (formula "2"))
                                    (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                                    (rule "add_literals" (formula "2") (term "1,0"))
                                    (rule "times_zero_1" (formula "2") (term "0"))
                                    (rule "leq_literals" (formula "2"))
                                    (rule "true_left" (formula "2"))
                                    (rule "applyEq" (formula "3") (term "1") (ifseqformula "1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "15") (term "1,1,0,0,0"))
                                    (rule "nnf_imp2or" (formula "15") (term "0,0"))
                                    (rule "nnf_notAnd" (formula "15") (term "0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "15") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "15") (term "1,0,0,1,0,0,0"))
                                    (rule "add_literals" (formula "15") (term "0,0,1,0,0,0"))
                                    (rule "add_zero_left" (formula "15") (term "0,1,0,0,0"))
                                    (rule "neq_or_2" (formula "15") (term "0,0,0"))
                                    (rule "concrete_or_1" (formula "15") (term "0,0"))
                                    (rule "all_unused" (formula "15") (term "0"))
                                    (rule "concrete_and_1" (formula "15"))
                                    (rule "inEqSimp_geqRight" (formula "15"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                    (rule "mul_literals" (formula "1") (term "1"))
                                    (rule "lengthGEq0" (newnames "L_0"))
                                    (rule "lengthGEq0" (inst "l=content(s_1)") (userinteraction))
                                    (rule "applyEq" (formula "1") (term "0") (ifseqformula "8"))
                                    (rule "inEqSimp_contradInEq1" (formula "3") (ifseqformula "1"))
                                    (rule "qeq_literals" (formula "3") (term "0"))
                                    (rule "concrete_and_2" (formula "3"))
                                    (rule "closeFalse" (formula "3"))
                                 )
                                 (branch " Body Preserves Invariant and Decreases Variant"
                                    (builtin "Update Simplification" (formula "16"))
                                    (rule "concrete_impl_1" (formula "16"))
                                    (rule "impRight" (formula "16"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "impRight" (formula "18"))
                                    (rule "andLeft" (formula "2"))
                                    (rule "andLeft" (formula "2"))
                                    (rule "andLeft" (formula "3"))
                                    (rule "castDelInt" (formula "6") (term "1,0,1"))
                                    (rule "castDelInt" (formula "6") (term "1"))
                                    (rule "polySimp_elimSub" (formula "6") (term "0"))
                                    (rule "polySimp_elimSub" (formula "22") (term "0,1,0,1,1,0,6"))
                                    (rule "polySimp_elimSub" (formula "22") (term "0,1,1,1,0,6"))
                                    (rule "polySimp_elimSub" (formula "22") (term "2"))
                                    (rule "polySimp_elimSub" (formula "5") (term "0"))
                                    (rule "polySimp_elimSub" (formula "6") (term "1"))
                                    (rule "times_zero_2" (formula "6") (term "1,1"))
                                    (rule "add_zero_right" (formula "6") (term "1"))
                                    (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0,1,1,1,0,0,1,1,0,6"))
                                    (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0,1,1,1,0,0,1,1,0,6"))
                                    (rule "inEqSimp_ltToLeq" (formula "4") (term "1,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,1,0,0,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,1,1,0,6"))
                                    (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,1,1,0,6"))
                                    (rule "polySimp_addComm0" (formula "6") (term "0"))
                                    (rule "polySimp_addComm0" (formula "22") (term "0,1,1,1,0,6"))
                                    (rule "polySimp_addComm0" (formula "22") (term "2"))
                                    (rule "polySimp_addComm0" (formula "5") (term "0"))
                                    (rule "polySimp_addComm0" (formula "22") (term "1,0,1,0,1,1,0,6"))
                                    (rule "polySimp_addAssoc" (formula "22") (term "0,1,0,1,1,0,6"))
                                    (rule "polySimp_addComm1" (formula "22") (term "0,0,1,0,1,1,0,6"))
                                    (rule "inEqSimp_homoInEq0" (formula "6"))
                                    (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                                    (rule "polySimp_mulAssoc" (formula "6") (term "0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "6") (term "0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "6") (term "0,1,0"))
                                    (rule "polySimp_elimOne" (formula "6") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                    (rule "polySimp_addComm0" (formula "6") (term "0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "6") (term "0"))
                                    (rule "add_literals" (formula "6") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "6") (term "1,0"))
                                    (rule "add_zero_right" (formula "6") (term "0"))
                                    (rule "applyEq" (formula "8") (term "0") (ifseqformula "7"))
                                    (rule "inEqSimp_homoInEq1" (formula "8"))
                                    (rule "polySimp_pullOutFactor1" (formula "8") (term "0"))
                                    (rule "add_literals" (formula "8") (term "1,0"))
                                    (rule "times_zero_1" (formula "8") (term "0"))
                                    (rule "leq_literals" (formula "8"))
                                    (rule "true_left" (formula "8"))
                                    (rule "applyEq" (formula "9") (term "1") (ifseqformula "7"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0,1,1,1,0,0,1,1,0,6"))
                                    (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0,1,1,1,0,0,1,1,0,6"))
                                    (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0,1,1,1,0,0,1,1,0,6"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0,1,1,1,0,0,1,1,0,6"))
                                    (rule "mul_literals" (formula "21") (term "0,1,1,0,0,1,1,1,0,0,1,1,0,6"))
                                    (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0,1,1,1,0,0,1,1,0,6"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "4") (term "1,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "4") (term "1,1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "4") (term "1,1,0,0,1"))
                                    (rule "mul_literals" (formula "4") (term "0,1,1,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "4") (term "1,1,1,0,0,1"))
                                    (rule "polySimp_elimOne" (formula "4") (term "1,1,1,0,0,1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "1,1,1,0,6"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,1,0,6"))
                                    (rule "polySimp_elimOne" (formula "21") (term "1,1,1,1,0,6"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "1"))
                                    (rule "polySimp_elimOne" (formula "5") (term "1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,1,1,0,6"))
                                    (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,1,1,0,6"))
                                    (rule "polySimp_rightDist" (formula "21") (term "1,1,0,1,1,0,6"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,1,1,0,6"))
                                    (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,1,1,0,6"))
                                    (rule "polySimp_rightDist" (formula "21") (term "0,1,1,0,1,1,0,6"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "1,0,1,1,0,1,1,0,6"))
                                    (rule "mul_literals" (formula "21") (term "0,0,1,1,0,1,1,0,6"))
                                    (rule "polySimp_elimOne" (formula "21") (term "1,0,1,1,0,1,1,0,6"))
                                    (rule "nnf_imp2or" (formula "4") (term "0,1"))
                                    (rule "nnf_notAnd" (formula "4") (term "0,0,1"))
                                    (rule "inEqSimp_notGeq" (formula "4") (term "0,0,0,1"))
                                    (rule "times_zero_1" (formula "4") (term "1,0,0,0,0,0,1"))
                                    (rule "add_zero_right" (formula "4") (term "0,0,0,0,0,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "4") (term "0,0,0,1"))
                                    (rule "mul_literals" (formula "4") (term "1,0,0,0,1"))
                                    (rule "inEqSimp_notLeq" (formula "4") (term "1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "4") (term "1,0,0,1,0,0,1"))
                                    (rule "mul_literals" (formula "4") (term "0,1,0,0,1,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "4") (term "0,0,1,0,0,1"))
                                    (rule "add_literals" (formula "4") (term "0,0,0,1,0,0,1"))
                                    (rule "add_zero_left" (formula "4") (term "0,0,1,0,0,1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "4") (term "1,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,0,1"))
                                    (rule "polySimp_elimOne" (formula "4") (term "1,1,0,0,1"))
                                    (rule "nnf_imp2or" (formula "21") (term "0,1,1,1,0,0,1,1,0,6"))
                                    (rule "nnf_notAnd" (formula "21") (term "0,0,1,1,1,0,0,1,1,0,6"))
                                    (rule "inEqSimp_notGeq" (formula "21") (term "0,0,0,1,1,1,0,0,1,1,0,6"))
                                    (rule "times_zero_1" (formula "21") (term "1,0,0,0,0,0,1,1,1,0,0,1,1,0,6"))
                                    (rule "add_zero_right" (formula "21") (term "0,0,0,0,0,1,1,1,0,0,1,1,0,6"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0,1,1,1,0,0,1,1,0,6"))
                                    (rule "mul_literals" (formula "21") (term "1,0,0,0,1,1,1,0,0,1,1,0,6"))
                                    (rule "inEqSimp_notLeq" (formula "21") (term "1,0,0,1,1,1,0,0,1,1,0,6"))
                                    (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,0,0,1,1,1,0,0,1,1,0,6"))
                                    (rule "mul_literals" (formula "21") (term "0,1,0,0,1,0,0,1,1,1,0,0,1,1,0,6"))
                                    (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0,0,1,1,1,0,0,1,1,0,6"))
                                    (rule "add_literals" (formula "21") (term "0,0,0,1,0,0,1,1,1,0,0,1,1,0,6"))
                                    (rule "add_zero_left" (formula "21") (term "0,0,1,0,0,1,1,1,0,0,1,1,0,6"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "1,0,0,1,1,1,0,0,1,1,0,6"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,1,1,1,0,0,1,1,0,6"))
                                    (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,1,1,1,0,0,1,1,0,6"))
                                    (rule "variableDeclarationAssign" (formula "1") (term "2"))
                                    (rule "variableDeclarationAssign" (formula "21") (term "6"))
                                    (rule "variableDeclaration" (formula "1") (term "2") (newnames "b_17"))
                                    (rule "variableDeclaration" (formula "21") (term "6") (newnames "exc_9"))
                                    (rule "assignment" (formula "21") (term "6"))
                                    (builtin "Update Simplification" (formula "21"))
                                    (rule "variableDeclaration" (formula "21") (term "7") (newnames "thrownExc_1"))
                                    (rule "less_than_comparison_new" (formula "1") (term "2"))
                                    (builtin "Update Simplification" (formula "1"))
                                    (rule "inEqSimp_ltToLeq" (formula "1") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "0,0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "0,0"))
                                    (rule "ifUnfold" (formula "21") (term "7") (inst "#boolv=b"))
                                    (rule "variableDeclaration" (formula "21") (term "7") (newnames "b_18"))
                                    (rule "less_than_comparison_new" (formula "21") (term "7"))
                                    (builtin "Update Simplification" (formula "21"))
                                    (rule "inEqSimp_ltToLeq" (formula "21") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "21") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "21") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "0,0"))
                                    (rule "polySimp_elimOne" (formula "21") (term "0,0"))
                                    (rule "ifthenelse_split_for" (formula "1"))
                                    (branch " result_1 >= 1 + i_2_0 TRUE"
                                       (rule "replace_known_left" (formula "22") (term "0") (ifseqformula "1"))
                                       (rule "ifthenelse_true_for" (formula "22"))
                                       (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "1"))
                                       (rule "inEqSimp_homoInEq0" (formula "6") (term "0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0"))
                                       (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "6") (term "0,0"))
                                       (rule "qeq_literals" (formula "6") (term "0"))
                                       (rule "concrete_or_1" (formula "6"))
                                       (rule "true_left" (formula "6"))
                                       (rule "ifEnterThen" (formula "21") (term "7"))
                                       (rule "assignment" (formula "2"))
                                       (rule "assignment" (formula "21") (term "7"))
                                       (builtin "Update Simplification" (formula "21"))
                                       (rule "methodCallEmpty" (formula "2") (term "1"))
                                       (rule "variableDeclarationAssign" (formula "21") (term "7"))
                                       (rule "emptyModality" (formula "2") (term "1"))
                                       (builtin "Update Simplification" (formula "2"))
                                       (rule "boolean_equal" (formula "2"))
                                       (rule "true_left" (formula "2"))
                                       (rule "variableDeclaration" (formula "20") (term "7") (newnames "f_1"))
                                       (rule "compound_subtraction_2" (formula "20") (term "7") (inst "#v1=j_1") (inst "#v0=j"))
                                       (rule "variableDeclarationAssign" (formula "20") (term "7"))
                                       (rule "variableDeclaration" (formula "20") (term "7") (newnames "j_43"))
                                       (rule "methodCallWithAssignment" (formula "20") (term "7") (inst "#v0=j_44"))
                                       (branch " Normal Execution (s1_2 != null)"
                                          (builtin "Update Simplification" (formula "20"))
                                          (rule "variableDeclaration" (formula "20") (term "7") (newnames "j_44"))
                                          (rule "variableDeclarationAssign" (formula "20") (term "7"))
                                          (rule "variableDeclaration" (formula "20") (term "7") (newnames "arg0"))
                                          (rule "assignment" (formula "20") (term "7"))
                                          (builtin "Update Simplification" (formula "20"))
                                          (builtin "Use Operation Contract" (formula "20") (newnames "arg0_4,result_14") (contract "charAtExc#charAtNormal;;"))
                                          (branch " Pre"
                                             (builtin "Update Simplification" (formula "20"))
                                             (rule "inInt" (formula "20") (term "1,0"))
                                             (rule "concrete_and_3" (formula "20") (term "0"))
                                             (rule "replace_known_left" (formula "20") (term "0,1,0") (ifseqformula "17"))
                                             (rule "concrete_and_1" (formula "20") (term "1,0"))
                                             (rule "replace_known_right" (formula "20") (term "0,1,0") (ifseqformula "24"))
                                             (rule "concrete_not_2" (formula "20") (term "1,0"))
                                             (rule "concrete_and_3" (formula "20") (term "0"))
                                             (rule "replace_known_left" (formula "20") (term "0") (ifseqformula "19"))
                                             (rule "concrete_and_1" (formula "20"))
                                             (rule "orRight" (formula "20"))
                                             (rule "orRight" (formula "20"))
                                             (rule "replace_known_left" (formula "22") (term "0") (ifseqformula "5"))
                                             (rule "concrete_and_1" (formula "22"))
                                             (rule "inEqSimp_ltRight" (formula "20"))
                                             (rule "times_zero_1" (formula "1") (term "0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0"))
                                             (rule "inEqSimp_geqRight" (formula "20"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                             (rule "inEqSimp_ltRight" (formula "21"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                             (rule "polySimp_addComm1" (formula "2") (term "0"))
                                             (rule "polySimp_addComm0" (formula "1") (term "0"))
                                             (rule "applyEq" (formula "2") (term "0,1,0") (ifseqformula "12"))
                                             (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "12"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                             (rule "polySimp_elimOne" (formula "2") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                             (rule "polySimp_elimOne" (formula "1") (term "0"))
                                             (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "2"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "inEqSimp_homoInEq1" (formula "1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                             (rule "add_literals" (formula "1") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "1") (term "1,0"))
                                             (rule "add_literals" (formula "1") (term "0"))
                                             (rule "leq_literals" (formula "1"))
                                             (rule "closeFalse" (formula "1"))
                                          )
                                          (branch " Post"
                                             (builtin "Update Simplification" (formula "20"))
                                             (rule "inChar" (formula "20") (term "1,1,0,0"))
                                             (rule "concrete_and_3" (formula "20") (term "1,0,0"))
                                             (rule "impRight" (formula "20"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "andLeft" (formula "2"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "typeEqDerived" (formula "2") (term "0,1,1") (ifseqformula "1"))
                                             (rule "boolean_equal" (formula "2") (term "1,1"))
                                             (rule "concrete_and_3" (formula "2") (term "1"))
                                             (rule "eqSymm" (formula "3") (term "1,1"))
                                             (rule "replace_known_left" (formula "2") (term "0,1") (ifseqformula "1"))
                                             (rule "concrete_not_1" (formula "2") (term "1"))
                                             (rule "concrete_impl_3" (formula "2"))
                                             (rule "notLeft" (formula "2"))
                                             (rule "orRight" (formula "22"))
                                             (rule "replace_known_left" (formula "2") (term "0,0") (ifseqformula "7"))
                                             (rule "concrete_and_1" (formula "2") (term "0"))
                                             (rule "replace_known_left" (formula "2") (term "0,1") (ifseqformula "1"))
                                             (rule "concrete_and_1" (formula "2") (term "1"))
                                             (rule "inEqSimp_geqRight" (formula "23"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                             (rule "inEqSimp_ltRight" (formula "23"))
                                             (rule "times_zero_1" (formula "1") (term "0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "3") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0"))
                                             (rule "replace_known_left" (formula "3") (term "0") (ifseqformula "1"))
                                             (rule "concrete_impl_1" (formula "3"))
                                             (rule "polySimp_addComm1" (formula "1") (term "0"))
                                             (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "13"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                             (rule "polySimp_elimOne" (formula "1") (term "0"))
                                             (rule "blockEmpty" (formula "22") (term "8"))
                                             (rule "assignment" (formula "22") (term "8"))
                                             (builtin "Update Simplification" (formula "22"))
                                             (rule "variableDeclarationAssign" (formula "22") (term "8"))
                                             (rule "variableDeclaration" (formula "22") (term "8") (newnames "j_45"))
                                             (rule "methodCallWithAssignment" (formula "22") (term "8") (inst "#v0=j_46"))
                                             (branch " Normal Execution (s2_2 != null)"
                                                (builtin "Update Simplification" (formula "22"))
                                                (rule "variableDeclaration" (formula "22") (term "8") (newnames "j_46"))
                                                (rule "variableDeclarationAssign" (formula "22") (term "8"))
                                                (rule "variableDeclaration" (formula "22") (term "8") (newnames "arg0_7"))
                                                (rule "assignment" (formula "22") (term "8"))
                                                (builtin "Update Simplification" (formula "22"))
                                                (builtin "Use Operation Contract" (formula "22") (newnames "arg0_7_0,result_16") (contract "charAtExc#charAtNormal;;"))
                                                (branch " Pre"
                                                   (builtin "Update Simplification" (formula "22"))
                                                   (rule "inInt" (formula "22") (term "1,0"))
                                                   (rule "concrete_and_3" (formula "22") (term "0"))
                                                   (rule "replace_known_left" (formula "22") (term "0,1,0") (ifseqformula "20"))
                                                   (rule "concrete_and_1" (formula "22") (term "1,0"))
                                                   (rule "replace_known_right" (formula "22") (term "0,1,0") (ifseqformula "27"))
                                                   (rule "concrete_not_2" (formula "22") (term "1,0"))
                                                   (rule "concrete_and_3" (formula "22") (term "0"))
                                                   (rule "replace_known_left" (formula "22") (term "0") (ifseqformula "21"))
                                                   (rule "concrete_and_1" (formula "22"))
                                                   (rule "orRight" (formula "22"))
                                                   (rule "orRight" (formula "22"))
                                                   (rule "replace_known_left" (formula "24") (term "0") (ifseqformula "7"))
                                                   (rule "concrete_and_1" (formula "24"))
                                                   (rule "inEqSimp_ltRight" (formula "22"))
                                                   (rule "times_zero_1" (formula "1") (term "0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0"))
                                                   (rule "inEqSimp_geqRight" (formula "22"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                   (rule "inEqSimp_ltRight" (formula "23"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                   (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                   (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                   (rule "applyEq" (formula "2") (term "0,1,0") (ifseqformula "12"))
                                                   (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "12"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                   (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "4"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                                   (rule "add_literals" (formula "1") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "1") (term "1,0"))
                                                   (rule "add_literals" (formula "1") (term "0"))
                                                   (rule "leq_literals" (formula "1"))
                                                   (rule "closeFalse" (formula "1"))
                                                )
                                                (branch " Post"
                                                   (builtin "Update Simplification" (formula "22"))
                                                   (rule "inChar" (formula "22") (term "1,1,0,0"))
                                                   (rule "concrete_and_3" (formula "22") (term "1,0,0"))
                                                   (rule "impRight" (formula "22"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "andLeft" (formula "2"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "typeEqDerived" (formula "2") (term "0,1,1") (ifseqformula "1"))
                                                   (rule "boolean_equal" (formula "2") (term "1,1"))
                                                   (rule "concrete_and_3" (formula "2") (term "1"))
                                                   (rule "eqSymm" (formula "3") (term "1,1"))
                                                   (rule "replace_known_left" (formula "2") (term "0,1") (ifseqformula "1"))
                                                   (rule "concrete_not_1" (formula "2") (term "1"))
                                                   (rule "concrete_impl_3" (formula "2"))
                                                   (rule "notLeft" (formula "2"))
                                                   (rule "orRight" (formula "24"))
                                                   (rule "replace_known_left" (formula "2") (term "0,0") (ifseqformula "9"))
                                                   (rule "concrete_and_1" (formula "2") (term "0"))
                                                   (rule "replace_known_left" (formula "2") (term "0,1") (ifseqformula "1"))
                                                   (rule "concrete_and_1" (formula "2") (term "1"))
                                                   (rule "inEqSimp_geqRight" (formula "25"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                   (rule "inEqSimp_ltRight" (formula "25"))
                                                   (rule "times_zero_1" (formula "1") (term "0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "3") (term "0"))
                                                   (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0"))
                                                   (rule "replace_known_left" (formula "3") (term "0") (ifseqformula "1"))
                                                   (rule "concrete_impl_1" (formula "3"))
                                                   (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                   (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "13"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                   (rule "blockEmpty" (formula "24") (term "9"))
                                                   (rule "assignment" (formula "24") (term "9"))
                                                   (builtin "Update Simplification" (formula "24"))
                                                   (rule "assignmentSubtractionInt" (formula "24") (term "9"))
                                                   (builtin "Update Simplification" (formula "24"))
                                                   (rule "translateJavaSubInt" (formula "24") (term "2"))
                                                   (rule "polySimp_elimSub" (formula "24") (term "2"))
                                                   (rule "ifElseUnfold" (formula "24") (term "8") (inst "#boolv=b"))
                                                   (rule "variableDeclaration" (formula "24") (term "8") (newnames "b_20"))
                                                   (rule "greater_equal_than_comparison_new" (formula "24") (term "8"))
                                                   (builtin "Update Simplification" (formula "24"))
                                                   (rule "castDelInt" (formula "24") (term "0,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "24") (term "0"))
                                                   (rule "polySimp_mulLiterals" (formula "24") (term "0,0"))
                                                   (rule "polySimp_elimOne" (formula "24") (term "0,0"))
                                                   (rule "ifthenelse_split_for" (formula "24"))
                                                   (branch " result_15 <= result_13 TRUE"
                                                      (rule "ifElseSkipElse" (formula "25") (term "8"))
                                                      (rule "assignment" (formula "25") (term "8"))
                                                      (builtin "Update Simplification" (formula "25"))
                                                      (rule "compound_assignment_op_plus" (formula "25") (term "8"))
                                                      (rule "compound_int_cast_expression" (formula "25") (term "8") (inst "#v=j"))
                                                      (rule "variableDeclarationAssign" (formula "25") (term "8"))
                                                      (rule "variableDeclaration" (formula "25") (term "8") (newnames "j_47"))
                                                      (rule "remove_parentheses_right" (formula "25") (term "8"))
                                                      (rule "compound_addition_2" (formula "25") (term "8") (inst "#v1=j_49") (inst "#v0=j_48"))
                                                      (rule "variableDeclarationAssign" (formula "25") (term "8"))
                                                      (rule "variableDeclaration" (formula "25") (term "8") (newnames "j_48"))
                                                      (rule "assignment" (formula "25") (term "8"))
                                                      (builtin "Update Simplification" (formula "25"))
                                                      (rule "variableDeclarationAssign" (formula "25") (term "9"))
                                                      (rule "variableDeclaration" (formula "25") (term "9") (newnames "j_49"))
                                                      (rule "remove_parentheses_right" (formula "25") (term "9"))
                                                      (rule "assignment" (formula "25") (term "9"))
                                                      (builtin "Update Simplification" (formula "25"))
                                                      (rule "castDelInt" (formula "25") (term "5"))
                                                      (rule "assignmentAdditionInt" (formula "25") (term "9"))
                                                      (builtin "Update Simplification" (formula "25"))
                                                      (rule "castDelInt" (formula "25") (term "1,4"))
                                                      (rule "translateJavaAddInt" (formula "25") (term "4"))
                                                      (rule "polySimp_addAssoc" (formula "25") (term "4"))
                                                      (rule "widening_identity_cast_5" (formula "25") (term "8"))
                                                      (rule "assignment" (formula "25") (term "8"))
                                                      (builtin "Update Simplification" (formula "25"))
                                                      (rule "castDelInt" (formula "25") (term "0"))
                                                      (rule "blockEmpty" (formula "25") (term "7"))
                                                      (rule "preincrement" (formula "25") (term "7"))
                                                      (rule "compound_int_cast_expression" (formula "25") (term "7") (inst "#v=j"))
                                                      (rule "variableDeclarationAssign" (formula "25") (term "7"))
                                                      (rule "variableDeclaration" (formula "25") (term "7") (newnames "j_50"))
                                                      (rule "remove_parentheses_right" (formula "25") (term "7"))
                                                      (rule "assignmentAdditionInt" (formula "25") (term "7"))
                                                      (builtin "Update Simplification" (formula "25"))
                                                      (rule "translateJavaAddInt" (formula "25") (term "4"))
                                                      (rule "polySimp_addComm0" (formula "25") (term "4"))
                                                      (rule "widening_identity_cast_5" (formula "25") (term "8"))
                                                      (rule "assignment" (formula "25") (term "8"))
                                                      (builtin "Update Simplification" (formula "25"))
                                                      (rule "castDelInt" (formula "25") (term "2"))
                                                      (rule "tryEmpty" (formula "25") (term "7"))
                                                      (rule "methodCallEmpty" (formula "25") (term "7"))
                                                      (rule "emptyModality" (formula "25") (term "7"))
                                                      (builtin "Update Simplification" (formula "25"))
                                                      (rule "boolean_not_equal_2" (formula "25") (term "0,0"))
                                                      (rule "boolean_not_equal_2" (formula "25") (term "0,0,1"))
                                                      (rule "concrete_impl_2" (formula "25") (term "0"))
                                                      (rule "concrete_not_2" (formula "25") (term "0,1"))
                                                      (rule "concrete_and_1" (formula "25"))
                                                      (rule "concrete_impl_1" (formula "25"))
                                                      (rule "castDelInt" (formula "25") (term "0,0,1,1,0,0"))
                                                      (rule "castDelInt" (formula "25") (term "1,1,1,0"))
                                                      (rule "castDelInt" (formula "25") (term "1,0,1,1,0"))
                                                      (rule "castDelInt" (formula "25") (term "1,1,0,0,1,1,1,0,0"))
                                                      (rule "castDelInt" (formula "25") (term "0,0,1,0,0"))
                                                      (rule "castDelInt" (formula "25") (term "1,1"))
                                                      (rule "replace_known_left" (formula "25") (term "5,0,0,0") (ifseqformula "7"))
                                                      (builtin "Update Simplification" (formula "25"))
                                                      (rule "concrete_and_1" (formula "25") (term "0,0"))
                                                      (rule "replace_known_left" (formula "25") (term "1") (ifseqformula "6"))
                                                      (rule "concrete_and_3" (formula "25"))
                                                      (rule "polySimp_addAssoc" (formula "25") (term "0,1,1"))
                                                      (rule "add_literals" (formula "25") (term "0,0,1,1"))
                                                      (rule "add_zero_left" (formula "25") (term "0,1,1"))
                                                      (rule "polySimp_addAssoc" (formula "25") (term "1,1"))
                                                      (rule "polySimp_pullOutFactor1" (formula "25") (term "0,1,1"))
                                                      (rule "add_literals" (formula "25") (term "1,0,1,1"))
                                                      (rule "times_zero_1" (formula "25") (term "0,1,1"))
                                                      (rule "add_zero_left" (formula "25") (term "1,1"))
                                                      (rule "inEqSimp_homoInEq0" (formula "25") (term "1"))
                                                      (rule "polySimp_pullOutFactor1" (formula "25") (term "0,1"))
                                                      (rule "add_literals" (formula "25") (term "1,0,1"))
                                                      (rule "times_zero_1" (formula "25") (term "0,1"))
                                                      (rule "qeq_literals" (formula "25") (term "1"))
                                                      (rule "concrete_and_3" (formula "25"))
                                                      (rule "polySimp_sepNegMonomial" (formula "25") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "25") (term "0,0,1"))
                                                      (rule "polySimp_elimOne" (formula "25") (term "0,0,1"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "25") (term "0"))
                                                      (rule "polySimp_mulLiterals" (formula "25") (term "0,0"))
                                                      (rule "polySimp_elimOne" (formula "25") (term "0,0"))
                                                      (rule "cut_direct" (formula "9") (term "0"))
                                                      (branch " CUT: d_2_2 = 0 TRUE"
                                                         (rule "concrete_impl_1" (formula "10"))
                                                         (rule "applyEqRigid" (formula "7") (term "0") (ifseqformula "9"))
                                                         (rule "applyEq" (formula "8") (term "0") (ifseqformula "9"))
                                                         (rule "qeq_literals" (formula "8"))
                                                         (rule "true_left" (formula "8"))
                                                         (rule "applyEq" (formula "25") (term "0,1,0") (ifseqformula "8"))
                                                         (rule "add_zero_left" (formula "25") (term "1,0"))
                                                         (rule "replace_known_left" (formula "25") (term "0") (ifseqformula "1"))
                                                         (rule "concrete_and_1" (formula "25"))
                                                         (rule "impRight" (formula "25"))
                                                         (rule "allRight" (formula "26") (inst "sk=k_0"))
                                                         (rule "orRight" (formula "26"))
                                                         (rule "orRight" (formula "26"))
                                                         (rule "inEqSimp_geqRight" (formula "27"))
                                                         (rule "inEqSimp_leqRight" (formula "27"))
                                                         (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0"))
                                                         (rule "add_zero_left" (formula "1") (term "0"))
                                                         (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                         (rule "add_literals" (formula "2") (term "0,0,0"))
                                                         (rule "add_zero_left" (formula "2") (term "0,0"))
                                                         (rule "applyEq" (formula "4") (term "0") (ifseqformula "3"))
                                                         (rule "inEqSimp_homoInEq0" (formula "4"))
                                                         (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "4") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                                         (rule "polySimp_addComm0" (formula "4") (term "0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                                                         (rule "add_literals" (formula "4") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "4") (term "1,0"))
                                                         (rule "add_zero_right" (formula "4") (term "0"))
                                                         (rule "applyEq" (formula "6") (term "1") (ifseqformula "3"))
                                                         (rule "applyEq" (formula "3") (term "0,1") (ifseqformula "11"))
                                                         (rule "add_zero_left" (formula "3") (term "1"))
                                                         (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "11"))
                                                         (rule "mul_literals" (formula "4") (term "0"))
                                                         (rule "qeq_literals" (formula "4"))
                                                         (rule "true_left" (formula "4"))
                                                         (rule "applyEqRigid" (formula "5") (term "0,1") (ifseqformula "10"))
                                                         (rule "add_zero_left" (formula "5") (term "1"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "1"))
                                                         (rule "polySimp_elimOne" (formula "2") (term "1"))
                                                         (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                                                         (rule "times_zero_1" (formula "1") (term "0,0"))
                                                         (rule "add_zero_left" (formula "1") (term "0"))
                                                         (rule "allLeft" (formula "11") (inst "t=k_0"))
                                                         (rule "replace_known_right" (formula "11") (term "1") (ifseqformula "28"))
                                                         (rule "concrete_or_4" (formula "11"))
                                                         (rule "inEqSimp_contradInEq1" (formula "11") (term "0") (ifseqformula "1"))
                                                         (rule "qeq_literals" (formula "11") (term "0,0"))
                                                         (rule "concrete_and_2" (formula "11") (term "0"))
                                                         (rule "concrete_or_2" (formula "11"))
                                                         (rule "inEqSimp_antiSymm" (formula "11") (ifseqformula "2"))
                                                         (rule "applyEq" (formula "12") (term "0") (ifseqformula "11"))
                                                         (rule "inEqSimp_homoInEq1" (formula "12"))
                                                         (rule "polySimp_pullOutFactor1" (formula "12") (term "0"))
                                                         (rule "add_literals" (formula "12") (term "1,0"))
                                                         (rule "times_zero_1" (formula "12") (term "0"))
                                                         (rule "leq_literals" (formula "12"))
                                                         (rule "true_left" (formula "12"))
                                                         (rule "applyEq" (formula "2") (term "0") (ifseqformula "11"))
                                                         (rule "inEqSimp_homoInEq0" (formula "2"))
                                                         (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                                                         (rule "add_literals" (formula "2") (term "1,0"))
                                                         (rule "times_zero_1" (formula "2") (term "0"))
                                                         (rule "qeq_literals" (formula "2"))
                                                         (rule "true_left" (formula "2"))
                                                         (rule "applyEqRigid" (formula "1") (term "0") (ifseqformula "10"))
                                                         (rule "applyEqRigid" (formula "26") (term "0,0") (ifseqformula "9"))
                                                         (rule "applyEq" (formula "26") (term "0") (ifseqformula "3"))
                                                         (rule "eqSymm" (formula "26"))
                                                         (rule "applyEqRigid" (formula "26") (term "0,0") (ifseqformula "9"))
                                                         (rule "close" (formula "26") (ifseqformula "5"))
                                                      )
                                                      (branch " CUT: d_2_2 = 0 FALSE"
                                                         (rule "concrete_impl_2" (formula "9"))
                                                         (rule "true_left" (formula "9"))
                                                         (rule "inEqSimp_strengthen1" (formula "8") (ifseqformula "24"))
                                                         (rule "add_literals" (formula "8") (term "1"))
                                                         (rule "inEqSimp_contradEq7" (formula "24") (ifseqformula "8"))
                                                         (rule "times_zero_1" (formula "24") (term "1,0,0"))
                                                         (rule "add_literals" (formula "24") (term "0,0"))
                                                         (rule "leq_literals" (formula "24") (term "0"))
                                                         (rule "concrete_and_2" (formula "24"))
                                                         (rule "false_right" (formula "24"))
                                                         (rule "cut_direct" (formula "24") (term "0"))
                                                         (branch " CUT: result_15 <= d_2_2 + result_13 TRUE"
                                                            (rule "concrete_and_1" (formula "25"))
                                                            (rule "impRight" (formula "25"))
                                                            (rule "allRight" (formula "26") (inst "sk=k_1"))
                                                            (rule "orRight" (formula "26"))
                                                            (rule "orRight" (formula "26"))
                                                            (rule "inEqSimp_geqRight" (formula "27"))
                                                            (rule "inEqSimp_leqRight" (formula "27"))
                                                            (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                            (rule "add_literals" (formula "1") (term "0,0"))
                                                            (rule "add_zero_left" (formula "1") (term "0"))
                                                            (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                            (rule "add_literals" (formula "2") (term "0,0,0"))
                                                            (rule "add_zero_left" (formula "2") (term "0,0"))
                                                            (rule "applyEq" (formula "5") (term "0") (ifseqformula "3"))
                                                            (rule "inEqSimp_homoInEq0" (formula "5"))
                                                            (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "5") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                                            (rule "polySimp_addComm0" (formula "5") (term "0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "5") (term "0"))
                                                            (rule "add_literals" (formula "5") (term "1,1,0"))
                                                            (rule "times_zero_1" (formula "5") (term "1,0"))
                                                            (rule "add_zero_right" (formula "5") (term "0"))
                                                            (rule "applyEq" (formula "4") (term "0") (ifseqformula "3"))
                                                            (rule "inEqSimp_homoInEq0" (formula "4"))
                                                            (rule "polySimp_pullOutFactor1" (formula "4") (term "0"))
                                                            (rule "add_literals" (formula "4") (term "1,0"))
                                                            (rule "times_zero_1" (formula "4") (term "0"))
                                                            (rule "qeq_literals" (formula "4"))
                                                            (rule "true_left" (formula "4"))
                                                            (rule "applyEq" (formula "6") (term "1") (ifseqformula "3"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                                            (rule "polySimp_mulLiterals" (formula "2") (term "1"))
                                                            (rule "polySimp_elimOne" (formula "2") (term "1"))
                                                            (rule "inEqSimp_invertInEq1" (formula "4"))
                                                            (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                                            (rule "times_zero_2" (formula "4") (term "1"))
                                                            (rule "polySimp_elimOne" (formula "4") (term "0"))
                                                            (rule "inEqSimp_contradInEq0" (formula "11") (ifseqformula "4"))
                                                            (rule "qeq_literals" (formula "11") (term "0"))
                                                            (rule "concrete_and_2" (formula "11"))
                                                            (rule "closeFalse" (formula "11"))
                                                         )
                                                         (branch " CUT: result_15 <= d_2_2 + result_13 FALSE"
                                                            (rule "concrete_and_2" (formula "25"))
                                                            (rule "false_right" (formula "25"))
                                                            (rule "inEqSimp_leqRight" (formula "24"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1"))
                                                            (rule "mul_literals" (formula "1") (term "0,0,1"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "1,0,1"))
                                                            (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                            (rule "polySimp_pullOutFactor2b" (formula "1") (term "0"))
                                                            (rule "add_literals" (formula "1") (term "1,1,0"))
                                                            (rule "times_zero_1" (formula "1") (term "1,0"))
                                                            (rule "add_zero_right" (formula "1") (term "0"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "0"))
                                                            (rule "mul_literals" (formula "1") (term "0,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                            (rule "inEqSimp_contradInEq0" (formula "10") (ifseqformula "1"))
                                                            (rule "qeq_literals" (formula "10") (term "0"))
                                                            (rule "concrete_and_2" (formula "10"))
                                                            (rule "closeFalse" (formula "10"))
                                                         )
                                                      )
                                                   )
                                                   (branch " result_15 <= result_13 FALSE"
                                                      (rule "inEqSimp_leqRight" (formula "24"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                      (rule "mul_literals" (formula "1") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                      (rule "ifElseSkipThen" (formula "25") (term "8"))
                                                      (rule "assignment" (formula "25") (term "8"))
                                                      (builtin "Update Simplification" (formula "25"))
                                                      (rule "compound_assignment_op_plus" (formula "25") (term "8"))
                                                      (rule "compound_int_cast_expression" (formula "25") (term "8") (inst "#v=j"))
                                                      (rule "variableDeclarationAssign" (formula "25") (term "8"))
                                                      (rule "variableDeclaration" (formula "25") (term "8") (newnames "j_51"))
                                                      (rule "remove_parentheses_right" (formula "25") (term "8"))
                                                      (rule "compound_addition_2" (formula "25") (term "8") (inst "#v1=j_53") (inst "#v0=j_52"))
                                                      (rule "variableDeclarationAssign" (formula "25") (term "8"))
                                                      (rule "variableDeclaration" (formula "25") (term "8") (newnames "j_52"))
                                                      (rule "assignment" (formula "25") (term "8"))
                                                      (builtin "Update Simplification" (formula "25"))
                                                      (rule "variableDeclarationAssign" (formula "25") (term "9"))
                                                      (rule "variableDeclaration" (formula "25") (term "9") (newnames "j_53"))
                                                      (rule "remove_parentheses_right" (formula "25") (term "9"))
                                                      (rule "unaryMinusInt" (formula "25") (term "9"))
                                                      (builtin "Update Simplification" (formula "25"))
                                                      (rule "castDelInt" (formula "25") (term "0,5"))
                                                      (rule "translateJavaUnaryMinusInt" (formula "25") (term "5"))
                                                      (rule "polySimp_elimNeg" (formula "25") (term "5"))
                                                      (rule "polySimp_mulComm0" (formula "25") (term "5"))
                                                      (rule "polySimp_rightDist" (formula "25") (term "5"))
                                                      (rule "polySimp_mulLiterals" (formula "25") (term "1,5"))
                                                      (rule "polySimp_elimOne" (formula "25") (term "1,5"))
                                                      (rule "polySimp_mulComm0" (formula "25") (term "0,5"))
                                                      (rule "assignmentAdditionInt" (formula "25") (term "9"))
                                                      (builtin "Update Simplification" (formula "25"))
                                                      (rule "castDelInt" (formula "25") (term "1,4"))
                                                      (rule "translateJavaAddInt" (formula "25") (term "4"))
                                                      (rule "polySimp_addAssoc" (formula "25") (term "4"))
                                                      (rule "widening_identity_cast_5" (formula "25") (term "8"))
                                                      (rule "assignment" (formula "25") (term "8"))
                                                      (builtin "Update Simplification" (formula "25"))
                                                      (rule "castDelInt" (formula "25") (term "0"))
                                                      (rule "blockEmpty" (formula "25") (term "7"))
                                                      (rule "preincrement" (formula "25") (term "7"))
                                                      (rule "compound_int_cast_expression" (formula "25") (term "7") (inst "#v=j"))
                                                      (rule "variableDeclarationAssign" (formula "25") (term "7"))
                                                      (rule "variableDeclaration" (formula "25") (term "7") (newnames "j_54"))
                                                      (rule "remove_parentheses_right" (formula "25") (term "7"))
                                                      (rule "assignmentAdditionInt" (formula "25") (term "7"))
                                                      (builtin "Update Simplification" (formula "25"))
                                                      (rule "translateJavaAddInt" (formula "25") (term "4"))
                                                      (rule "polySimp_addComm0" (formula "25") (term "4"))
                                                      (rule "widening_identity_cast_5" (formula "25") (term "8"))
                                                      (rule "assignment" (formula "25") (term "8"))
                                                      (builtin "Update Simplification" (formula "25"))
                                                      (rule "castDelInt" (formula "25") (term "2"))
                                                      (rule "tryEmpty" (formula "25") (term "7"))
                                                      (rule "methodCallEmpty" (formula "25") (term "7"))
                                                      (rule "emptyModality" (formula "25") (term "7"))
                                                      (builtin "Update Simplification" (formula "25"))
                                                      (rule "boolean_not_equal_2" (formula "25") (term "0,0"))
                                                      (rule "boolean_not_equal_2" (formula "25") (term "0,0,1"))
                                                      (rule "concrete_impl_2" (formula "25") (term "0"))
                                                      (rule "concrete_not_2" (formula "25") (term "0,1"))
                                                      (rule "concrete_and_1" (formula "25"))
                                                      (rule "concrete_impl_1" (formula "25"))
                                                      (rule "castDelInt" (formula "25") (term "1,1,1,0"))
                                                      (rule "castDelInt" (formula "25") (term "1,1"))
                                                      (rule "castDelInt" (formula "25") (term "1,0,1,1,0"))
                                                      (rule "castDelInt" (formula "25") (term "1,1,0,0,1,1,1,0,0"))
                                                      (rule "castDelInt" (formula "25") (term "0,0,1,1,0,0"))
                                                      (rule "castDelInt" (formula "25") (term "0,0,1,0,0"))
                                                      (rule "replace_known_left" (formula "25") (term "5,0,0,0") (ifseqformula "7"))
                                                      (builtin "Update Simplification" (formula "25"))
                                                      (rule "concrete_and_1" (formula "25") (term "0,0"))
                                                      (rule "replace_known_left" (formula "25") (term "1") (ifseqformula "6"))
                                                      (rule "concrete_and_3" (formula "25"))
                                                      (rule "polySimp_addAssoc" (formula "25") (term "0,1,1"))
                                                      (rule "add_literals" (formula "25") (term "0,0,1,1"))
                                                      (rule "add_zero_left" (formula "25") (term "0,1,1"))
                                                      (rule "polySimp_addAssoc" (formula "25") (term "1,1"))
                                                      (rule "polySimp_pullOutFactor1" (formula "25") (term "0,1,1"))
                                                      (rule "add_literals" (formula "25") (term "1,0,1,1"))
                                                      (rule "times_zero_1" (formula "25") (term "0,1,1"))
                                                      (rule "add_zero_left" (formula "25") (term "1,1"))
                                                      (rule "inEqSimp_homoInEq0" (formula "25") (term "1"))
                                                      (rule "polySimp_pullOutFactor1" (formula "25") (term "0,1"))
                                                      (rule "add_literals" (formula "25") (term "1,0,1"))
                                                      (rule "times_zero_1" (formula "25") (term "0,1"))
                                                      (rule "qeq_literals" (formula "25") (term "1"))
                                                      (rule "concrete_and_3" (formula "25"))
                                                      (rule "polySimp_sepPosMonomial" (formula "25") (term "0,1"))
                                                      (rule "polySimp_mulComm0" (formula "25") (term "1,0,1"))
                                                      (rule "polySimp_rightDist" (formula "25") (term "1,0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,1"))
                                                      (rule "polySimp_elimOne" (formula "25") (term "1,1,0,1"))
                                                      (rule "polySimp_mulComm0" (formula "25") (term "0,1,0,1"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "0"))
                                                      (rule "polySimp_mulComm0" (formula "25") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "25") (term "1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "25") (term "1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "25") (term "0,1,0"))
                                                      (rule "cut_direct" (formula "9") (term "0"))
                                                      (branch " CUT: d_2_2 = 0 TRUE"
                                                         (rule "concrete_impl_1" (formula "10"))
                                                         (rule "applyEqRigid" (formula "8") (term "0") (ifseqformula "9"))
                                                         (rule "qeq_literals" (formula "8"))
                                                         (rule "true_left" (formula "8"))
                                                         (rule "applyEqRigid" (formula "7") (term "0") (ifseqformula "8"))
                                                         (rule "applyEq" (formula "25") (term "0,0,1,0") (ifseqformula "8"))
                                                         (rule "times_zero_2" (formula "25") (term "0,1,0"))
                                                         (rule "add_zero_left" (formula "25") (term "1,0"))
                                                         (rule "applyEq" (formula "25") (term "0,0,1,0,1") (ifseqformula "8"))
                                                         (rule "times_zero_2" (formula "25") (term "0,1,0,1"))
                                                         (rule "add_zero_left" (formula "25") (term "1,0,1"))
                                                         (rule "inEqSimp_contradEq7" (formula "25") (term "0,1") (ifseqformula "1"))
                                                         (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,0,1"))
                                                         (rule "add_literals" (formula "25") (term "1,1,0,0,0,1"))
                                                         (rule "times_zero_1" (formula "25") (term "1,0,0,0,1"))
                                                         (rule "add_literals" (formula "25") (term "0,0,0,1"))
                                                         (rule "leq_literals" (formula "25") (term "0,0,1"))
                                                         (rule "concrete_and_2" (formula "25") (term "0,1"))
                                                         (rule "concrete_impl_2" (formula "25") (term "1"))
                                                         (rule "concrete_and_3" (formula "25"))
                                                         (rule "inEqSimp_geqRight" (formula "25"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                         (rule "mul_literals" (formula "1") (term "0,1"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                         (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "1"))
                                                         (rule "andLeft" (formula "2"))
                                                         (rule "inEqSimp_homoInEq1" (formula "2"))
                                                         (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                         (rule "mul_literals" (formula "2") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                         (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                                         (rule "add_literals" (formula "2") (term "0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                                         (rule "add_literals" (formula "2") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "2") (term "1,0"))
                                                         (rule "add_zero_right" (formula "2") (term "0"))
                                                         (rule "leq_literals" (formula "2"))
                                                         (rule "closeFalse" (formula "2"))
                                                      )
                                                      (branch " CUT: d_2_2 = 0 FALSE"
                                                         (rule "concrete_impl_2" (formula "9"))
                                                         (rule "true_left" (formula "9"))
                                                         (rule "inEqSimp_strengthen1" (formula "8") (ifseqformula "24"))
                                                         (rule "add_zero_right" (formula "8") (term "1"))
                                                         (rule "inEqSimp_contradEq7" (formula "24") (ifseqformula "8"))
                                                         (rule "times_zero_1" (formula "24") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "24") (term "0,0"))
                                                         (rule "leq_literals" (formula "24") (term "0"))
                                                         (rule "concrete_and_2" (formula "24"))
                                                         (rule "false_right" (formula "24"))
                                                         (rule "cut_direct" (formula "24") (term "0"))
                                                         (branch " CUT: result_15 >= d_2_2 * -1 + result_13 TRUE"
                                                            (rule "concrete_and_1" (formula "25"))
                                                            (rule "impRight" (formula "25"))
                                                            (rule "allRight" (formula "26") (inst "sk=k_2"))
                                                            (rule "orRight" (formula "26"))
                                                            (rule "orRight" (formula "26"))
                                                            (rule "inEqSimp_geqRight" (formula "27"))
                                                            (rule "inEqSimp_leqRight" (formula "27"))
                                                            (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                            (rule "add_literals" (formula "1") (term "0,0"))
                                                            (rule "add_zero_left" (formula "1") (term "0"))
                                                            (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                            (rule "add_literals" (formula "2") (term "0,0,0"))
                                                            (rule "add_zero_left" (formula "2") (term "0,0"))
                                                            (rule "applyEq" (formula "5") (term "0") (ifseqformula "3"))
                                                            (rule "inEqSimp_homoInEq1" (formula "5"))
                                                            (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                                                            (rule "polySimp_mulAssoc" (formula "5") (term "0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "5") (term "0,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "5") (term "0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "5") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                                            (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "5") (term "0"))
                                                            (rule "add_literals" (formula "5") (term "1,1,0"))
                                                            (rule "times_zero_1" (formula "5") (term "1,0"))
                                                            (rule "add_zero_right" (formula "5") (term "0"))
                                                            (rule "applyEq" (formula "4") (term "0") (ifseqformula "3"))
                                                            (rule "inEqSimp_homoInEq1" (formula "4"))
                                                            (rule "polySimp_pullOutFactor1" (formula "4") (term "0"))
                                                            (rule "add_literals" (formula "4") (term "1,0"))
                                                            (rule "times_zero_1" (formula "4") (term "0"))
                                                            (rule "leq_literals" (formula "4"))
                                                            (rule "true_left" (formula "4"))
                                                            (rule "applyEq" (formula "6") (term "1") (ifseqformula "3"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                                            (rule "polySimp_mulLiterals" (formula "2") (term "1"))
                                                            (rule "polySimp_elimOne" (formula "2") (term "1"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                                            (rule "mul_literals" (formula "4") (term "1"))
                                                            (rule "inEqSimp_contradInEq0" (formula "11") (ifseqformula "4"))
                                                            (rule "qeq_literals" (formula "11") (term "0"))
                                                            (rule "concrete_and_2" (formula "11"))
                                                            (rule "closeFalse" (formula "11"))
                                                         )
                                                         (branch " CUT: result_15 >= d_2_2 * -1 + result_13 FALSE"
                                                            (rule "concrete_and_2" (formula "25"))
                                                            (rule "false_right" (formula "25"))
                                                            (rule "inEqSimp_geqRight" (formula "24"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                            (rule "polySimp_mulAssoc" (formula "1") (term "0,1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "0,0,1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "0,1"))
                                                            (rule "mul_literals" (formula "1") (term "0,0,1"))
                                                            (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "1"))
                                                            (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                            (rule "mul_literals" (formula "2") (term "0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                            (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                                            (rule "polySimp_pullOutFactor2b" (formula "2") (term "0"))
                                                            (rule "add_literals" (formula "2") (term "1,1,0"))
                                                            (rule "times_zero_1" (formula "2") (term "1,0"))
                                                            (rule "add_zero_right" (formula "2") (term "0"))
                                                            (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                            (rule "add_literals" (formula "2") (term "0,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                            (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                            (rule "inEqSimp_contradInEq0" (formula "10") (ifseqformula "2"))
                                                            (rule "qeq_literals" (formula "10") (term "0"))
                                                            (rule "concrete_and_2" (formula "10"))
                                                            (rule "closeFalse" (formula "10"))
                                                         )
                                                      )
                                                   )
                                                )
                                                (branch " Exceptional Post"
                                                   (builtin "Update Simplification" (formula "22"))
                                                   (rule "impRight" (formula "22"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "andLeft" (formula "2"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "notLeft" (formula "2"))
                                                   (rule "eqSymm" (formula "3") (term "1,1"))
                                                   (rule "replace_known_right" (formula "2") (term "0,0,1") (ifseqformula "25"))
                                                   (rule "concrete_not_2" (formula "2") (term "0,1"))
                                                   (rule "concrete_and_1" (formula "2") (term "1"))
                                                   (rule "replace_known_right" (formula "3") (term "0,1") (ifseqformula "25"))
                                                   (rule "concrete_and_2" (formula "3") (term "1"))
                                                   (rule "concrete_impl_3" (formula "3"))
                                                   (rule "notLeft" (formula "3"))
                                                   (rule "replace_known_left" (formula "24") (term "0") (ifseqformula "9"))
                                                   (rule "concrete_and_1" (formula "24"))
                                                   (rule "inEqSimp_ltToLeq" (formula "2") (term "0,0"))
                                                   (rule "times_zero_1" (formula "2") (term "1,0,0,0,0"))
                                                   (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                                   (rule "inEqSimp_ltRight" (formula "24"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                   (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                   (rule "inEqSimp_commuteGeq" (formula "3") (term "1,0"))
                                                   (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "13"))
                                                   (rule "applyEq" (formula "3") (term "0,1,0") (ifseqformula "13"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "0,0"))
                                                   (rule "mul_literals" (formula "3") (term "1,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                   (rule "replace_known_left" (formula "3") (term "1,0") (ifseqformula "1"))
                                                   (rule "concrete_or_3" (formula "3") (term "0"))
                                                   (rule "concrete_impl_1" (formula "3"))
                                                   (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "6"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                                   (rule "add_literals" (formula "1") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "1") (term "1,0"))
                                                   (rule "add_literals" (formula "1") (term "0"))
                                                   (rule "leq_literals" (formula "1"))
                                                   (rule "closeFalse" (formula "1"))
                                                )
                                             )
                                             (branch " Null Reference (s2_2 = null)"
                                                (builtin "Update Simplification" (formula "1"))
                                                (rule "close" (formula "28") (ifseqformula "1"))
                                             )
                                          )
                                          (branch " Exceptional Post"
                                             (builtin "Update Simplification" (formula "20"))
                                             (rule "impRight" (formula "20"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "andLeft" (formula "2"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "notLeft" (formula "2"))
                                             (rule "eqSymm" (formula "3") (term "1,1"))
                                             (rule "replace_known_right" (formula "2") (term "0,0,1") (ifseqformula "23"))
                                             (rule "concrete_not_2" (formula "2") (term "0,1"))
                                             (rule "concrete_and_1" (formula "2") (term "1"))
                                             (rule "replace_known_right" (formula "3") (term "0,1") (ifseqformula "23"))
                                             (rule "concrete_and_2" (formula "3") (term "1"))
                                             (rule "concrete_impl_3" (formula "3"))
                                             (rule "notLeft" (formula "3"))
                                             (rule "replace_known_left" (formula "22") (term "0") (ifseqformula "7"))
                                             (rule "concrete_and_1" (formula "22"))
                                             (rule "inEqSimp_ltToLeq" (formula "2") (term "0,0"))
                                             (rule "times_zero_1" (formula "2") (term "1,0,0,0,0"))
                                             (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                             (rule "inEqSimp_ltRight" (formula "22"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                             (rule "polySimp_addComm0" (formula "1") (term "0"))
                                             (rule "inEqSimp_commuteGeq" (formula "3") (term "1,0"))
                                             (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "13"))
                                             (rule "applyEq" (formula "3") (term "0,1,0") (ifseqformula "13"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "0,0"))
                                             (rule "mul_literals" (formula "3") (term "1,0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                             (rule "polySimp_elimOne" (formula "1") (term "0"))
                                             (rule "replace_known_left" (formula "3") (term "1,0") (ifseqformula "1"))
                                             (rule "concrete_or_3" (formula "3") (term "0"))
                                             (rule "concrete_impl_1" (formula "3"))
                                             (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "1"))
                                             (rule "andLeft" (formula "4"))
                                             (rule "inEqSimp_homoInEq1" (formula "4"))
                                             (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                                             (rule "add_literals" (formula "4") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "4") (term "1,0"))
                                             (rule "add_literals" (formula "4") (term "0"))
                                             (rule "leq_literals" (formula "4"))
                                             (rule "closeFalse" (formula "4"))
                                          )
                                       )
                                       (branch " Null Reference (s1_2 = null)"
                                          (builtin "Update Simplification" (formula "1"))
                                          (rule "close" (formula "25") (ifseqformula "1"))
                                       )
                                    )
                                    (branch " result_1 >= 1 + i_2_0 FALSE"
                                       (rule "replace_known_right" (formula "22") (term "0") (ifseqformula "21"))
                                       (rule "ifthenelse_false_for" (formula "22"))
                                       (rule "inEqSimp_geqRight" (formula "21"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                       (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1"))
                                       (rule "inEqSimp_antiSymm" (formula "6") (ifseqformula "1"))
                                       (rule "applyEq" (formula "3") (term "2") (ifseqformula "6"))
                                       (rule "applyEq" (formula "23") (term "1,3") (ifseqformula "6"))
                                       (rule "polySimp_pullOutFactor2" (formula "23") (term "3"))
                                       (rule "add_literals" (formula "23") (term "1,3"))
                                       (rule "times_zero_1" (formula "23") (term "3"))
                                       (rule "applyEq" (formula "23") (term "4") (ifseqformula "6"))
                                       (rule "applyEq" (formula "7") (term "0") (ifseqformula "6"))
                                       (rule "inEqSimp_homoInEq1" (formula "7"))
                                       (rule "polySimp_pullOutFactor1" (formula "7") (term "0"))
                                       (rule "add_literals" (formula "7") (term "1,0"))
                                       (rule "times_zero_1" (formula "7") (term "0"))
                                       (rule "leq_literals" (formula "7"))
                                       (rule "true_left" (formula "7"))
                                       (rule "applyEq" (formula "1") (term "0") (ifseqformula "6"))
                                       (rule "inEqSimp_homoInEq0" (formula "1"))
                                       (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                                       (rule "add_literals" (formula "1") (term "1,0"))
                                       (rule "times_zero_1" (formula "1") (term "0"))
                                       (rule "qeq_literals" (formula "1"))
                                       (rule "true_left" (formula "1"))
                                       (rule "applyEq" (formula "7") (term "1") (ifseqformula "5"))
                                       (rule "applyEq" (formula "9") (term "1") (ifseqformula "5"))
                                       (rule "applyEq" (formula "11") (term "1") (ifseqformula "5"))
                                       (rule "applyEq" (formula "13") (term "1") (ifseqformula "5"))
                                       (rule "ifSkipThen" (formula "21") (term "7"))
                                       (rule "assignment" (formula "1"))
                                       (rule "assignment" (formula "21") (term "7"))
                                       (builtin "Update Simplification" (formula "21"))
                                       (rule "methodCallEmpty" (formula "1") (term "1"))
                                       (rule "tryEmpty" (formula "21") (term "7"))
                                       (rule "emptyModality" (formula "1") (term "1"))
                                       (builtin "Update Simplification" (formula "1"))
                                       (rule "boolean_not_equal_2" (formula "1"))
                                       (rule "closeFalse" (formula "1"))
                                    )
                                 )
                                 (branch " Use Case"
                                    (builtin "Update Simplification" (formula "16"))
                                    (rule "equality" (formula "17") (inst "iv=_var0") (userinteraction))
                                    (rule "false_to_not_true" (formula "16") (term "0,0,5,1"))
                                    (rule "impRight" (formula "16"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "polySimp_elimSub" (formula "3") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "2") (term "1,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1,0,0,1"))
                                    (rule "polySimp_addComm0" (formula "3") (term "0"))
                                    (rule "applyEq" (formula "20") (term "0,0") (ifseqformula "7"))
                                    (rule "eqSymm" (formula "20") (term "0"))
                                    (rule "applyEq" (formula "5") (term "0") (ifseqformula "4"))
                                    (rule "inEqSimp_homoInEq1" (formula "5"))
                                    (rule "polySimp_pullOutFactor1" (formula "5") (term "0"))
                                    (rule "add_literals" (formula "5") (term "1,0"))
                                    (rule "times_zero_1" (formula "5") (term "0"))
                                    (rule "leq_literals" (formula "5"))
                                    (rule "true_left" (formula "5"))
                                    (rule "applyEq" (formula "6") (term "1") (ifseqformula "4"))
                                    (rule "applyEq" (formula "19") (term "0,0") (ifseqformula "8"))
                                    (rule "eqSymm" (formula "19") (term "0"))
                                    (rule "replace_known_left" (formula "19") (term "0") (ifseqformula "4"))
                                    (rule "concrete_and_1" (formula "19"))
                                    (rule "allRight" (formula "19") (inst "sk=_var0_0"))
                                    (rule "impRight" (formula "19"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0"))
                                    (rule "applyEq" (formula "2") (term "0,1,0") (ifseqformula "8"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "4") (term "1,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "4") (term "1,1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "4") (term "1,1,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "4") (term "1,1,1,0,0,1"))
                                    (rule "mul_literals" (formula "4") (term "0,1,1,0,0,1"))
                                    (rule "polySimp_elimOne" (formula "4") (term "1,1,1,0,0,1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "1"))
                                    (rule "polySimp_elimOne" (formula "5") (term "1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                    (rule "polySimp_rightDist" (formula "2") (term "1"))
                                    (rule "mul_literals" (formula "2") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                    (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                                    (rule "times_zero_1" (formula "1") (term "0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                    (rule "mul_literals" (formula "1") (term "1"))
                                    (rule "nnf_imp2or" (formula "5") (term "0,1"))
                                    (rule "nnf_notAnd" (formula "5") (term "0,0,1"))
                                    (rule "inEqSimp_notGeq" (formula "5") (term "0,0,0,1"))
                                    (rule "times_zero_1" (formula "5") (term "1,0,0,0,0,0,1"))
                                    (rule "add_zero_right" (formula "5") (term "0,0,0,0,0,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "0,0,0,1"))
                                    (rule "mul_literals" (formula "5") (term "1,0,0,0,1"))
                                    (rule "inEqSimp_notLeq" (formula "5") (term "1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "5") (term "1,0,0,1,0,0,1"))
                                    (rule "mul_literals" (formula "5") (term "0,1,0,0,1,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "5") (term "0,0,1,0,0,1"))
                                    (rule "add_literals" (formula "5") (term "0,0,0,1,0,0,1"))
                                    (rule "add_zero_left" (formula "5") (term "0,0,1,0,0,1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "5") (term "1,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0,1"))
                                    (rule "polySimp_elimOne" (formula "5") (term "1,1,0,0,1"))
                                    (rule "variableDeclarationAssign" (formula "21") (term "5"))
                                    (rule "variableDeclaration" (formula "21") (term "5") (newnames "b"))
                                    (rule "less_than_comparison_new" (formula "21") (term "5"))
                                    (builtin "Update Simplification" (formula "21"))
                                    (rule "inEqSimp_ltToLeq" (formula "21") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "21") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "21") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "0,0"))
                                    (rule "polySimp_elimOne" (formula "21") (term "0,0"))
                                    (rule "ifthenelse_split_for" (formula "21"))
                                    (branch " result_1 >= 1 + i_2_1 TRUE"
                                       (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "1"))
                                       (rule "inEqSimp_homoInEq0" (formula "7") (term "0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0"))
                                       (rule "add_literals" (formula "7") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "7") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "7") (term "0,0"))
                                       (rule "qeq_literals" (formula "7") (term "0"))
                                       (rule "concrete_or_1" (formula "7"))
                                       (rule "true_left" (formula "7"))
                                       (rule "assignment" (formula "21") (term "4"))
                                       (builtin "Update Simplification" (formula "21"))
                                       (rule "methodCallEmpty" (formula "21") (term "5"))
                                       (rule "emptyModality" (formula "21") (term "5"))
                                       (builtin "Update Simplification" (formula "21"))
                                       (rule "boolean_equal" (formula "21") (term "0,0"))
                                       (rule "concrete_not_1" (formula "21") (term "0"))
                                       (rule "concrete_impl_2" (formula "21"))
                                       (rule "closeTrue" (formula "21"))
                                    )
                                    (branch " result_1 >= 1 + i_2_1 FALSE"
                                       (rule "inEqSimp_geqRight" (formula "21"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                       (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1"))
                                       (rule "inEqSimp_antiSymm" (formula "7") (ifseqformula "1"))
                                       (rule "applyEq" (formula "8") (term "0") (ifseqformula "7"))
                                       (rule "inEqSimp_homoInEq1" (formula "8"))
                                       (rule "polySimp_pullOutFactor1" (formula "8") (term "0"))
                                       (rule "add_literals" (formula "8") (term "1,0"))
                                       (rule "times_zero_1" (formula "8") (term "0"))
                                       (rule "leq_literals" (formula "8"))
                                       (rule "true_left" (formula "8"))
                                       (rule "applyEq" (formula "22") (term "1") (ifseqformula "7"))
                                       (rule "applyEq" (formula "2") (term "0") (ifseqformula "7"))
                                       (rule "applyEq" (formula "1") (term "0") (ifseqformula "7"))
                                       (rule "inEqSimp_homoInEq0" (formula "1"))
                                       (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                                       (rule "add_literals" (formula "1") (term "1,0"))
                                       (rule "times_zero_1" (formula "1") (term "0"))
                                       (rule "qeq_literals" (formula "1"))
                                       (rule "true_left" (formula "1"))
                                       (rule "applyEq" (formula "3") (term "1,1") (ifseqformula "6"))
                                       (rule "applyEq" (formula "7") (term "1") (ifseqformula "6"))
                                       (rule "applyEq" (formula "9") (term "1") (ifseqformula "6"))
                                       (rule "applyEq" (formula "11") (term "1") (ifseqformula "6"))
                                       (rule "applyEq" (formula "13") (term "1") (ifseqformula "6"))
                                       (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "3"))
                                       (rule "times_zero_1" (formula "2") (term "0,0"))
                                       (rule "add_zero_left" (formula "2") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                       (rule "mul_literals" (formula "2") (term "1"))
                                       (rule "assignment" (formula "21") (term "4"))
                                       (builtin "Update Simplification" (formula "21"))
                                       (rule "methodCallEmpty" (formula "21") (term "5"))
                                       (rule "emptyModality" (formula "21") (term "5"))
                                       (builtin "Update Simplification" (formula "21"))
                                       (rule "boolean_not_equal_2" (formula "21") (term "0,0"))
                                       (rule "concrete_not_2" (formula "21") (term "0"))
                                       (rule "concrete_impl_1" (formula "21"))
                                       (rule "blockEmpty" (formula "21") (term "4"))
                                       (rule "compound_subtraction_2" (formula "21") (term "4") (inst "#v1=j_1") (inst "#v0=j"))
                                       (rule "variableDeclarationAssign" (formula "21") (term "4"))
                                       (rule "variableDeclaration" (formula "21") (term "4") (newnames "j_37"))
                                       (rule "methodCallWithAssignment" (formula "21") (term "4") (inst "#v0=j_38"))
                                       (branch " Normal Execution (s1_2 != null)"
                                          (builtin "Update Simplification" (formula "21"))
                                          (rule "variableDeclaration" (formula "21") (term "4") (newnames "j_38"))
                                          (builtin "Use Operation Contract" (formula "21") (newnames "result_10") (contract "length;;"))
                                          (branch " Pre"
                                             (builtin "Update Simplification" (formula "21"))
                                             (rule "replace_known_left" (formula "21") (term "0") (ifseqformula "20"))
                                             (rule "concrete_and_1" (formula "21"))
                                             (rule "replace_known_left" (formula "21") (term "0") (ifseqformula "18"))
                                             (rule "concrete_and_1" (formula "21"))
                                             (rule "notRight" (formula "21"))
                                             (rule "close" (formula "26") (ifseqformula "1"))
                                          )
                                          (branch " Post"
                                             (builtin "Update Simplification" (formula "21"))
                                             (rule "inInt" (formula "21") (term "1,1,0,0"))
                                             (rule "concrete_and_3" (formula "21") (term "1,0,0"))
                                             (rule "impRight" (formula "21"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "andLeft" (formula "2"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "eqSymm" (formula "1"))
                                             (rule "applyEq" (formula "1") (term "0") (ifseqformula "13"))
                                             (rule "eqSymm" (formula "1"))
                                             (rule "applyEq" (formula "23") (term "1") (ifseqformula "1"))
                                             (rule "blockEmpty" (formula "23") (term "4"))
                                             (rule "assignment" (formula "23") (term "4"))
                                             (builtin "Update Simplification" (formula "23"))
                                             (rule "variableDeclarationAssign" (formula "23") (term "4"))
                                             (rule "variableDeclaration" (formula "23") (term "4") (newnames "j_1"))
                                             (rule "methodCallWithAssignment" (formula "23") (term "4") (inst "#v0=j_38"))
                                             (branch " Normal Execution (s2_2 != null)"
                                                (builtin "Update Simplification" (formula "23"))
                                                (rule "variableDeclaration" (formula "23") (term "4") (newnames "j_39"))
                                                (builtin "Use Operation Contract" (formula "23") (newnames "result_12") (contract "length;;"))
                                                (branch " Pre"
                                                   (builtin "Update Simplification" (formula "23"))
                                                   (rule "replace_known_left" (formula "23") (term "0") (ifseqformula "22"))
                                                   (rule "concrete_and_1" (formula "23"))
                                                   (rule "replace_known_right" (formula "23") (term "0,1") (ifseqformula "29"))
                                                   (rule "concrete_not_2" (formula "23") (term "1"))
                                                   (rule "concrete_and_3" (formula "23"))
                                                   (rule "close" (formula "23") (ifseqformula "21"))
                                                )
                                                (branch " Post"
                                                   (builtin "Update Simplification" (formula "23"))
                                                   (rule "inInt" (formula "23") (term "1,1,0,0"))
                                                   (rule "concrete_and_3" (formula "23") (term "1,0,0"))
                                                   (rule "impRight" (formula "23"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "andLeft" (formula "2"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "eqSymm" (formula "1"))
                                                   (rule "applyEq" (formula "1") (term "0") (ifseqformula "13"))
                                                   (rule "eqSymm" (formula "1"))
                                                   (rule "applyEq" (formula "25") (term "2") (ifseqformula "1"))
                                                   (rule "blockEmpty" (formula "25") (term "4"))
                                                   (rule "assignment" (formula "25") (term "4"))
                                                   (builtin "Update Simplification" (formula "25"))
                                                   (rule "assignmentSubtractionInt" (formula "25") (term "4"))
                                                   (builtin "Update Simplification" (formula "25"))
                                                   (rule "translateJavaSubInt" (formula "25") (term "1"))
                                                   (rule "polySimp_elimSub" (formula "25") (term "1"))
                                                   (rule "polySimp_pullOutFactor1" (formula "25") (term "1"))
                                                   (rule "add_literals" (formula "25") (term "1,1"))
                                                   (rule "times_zero_1" (formula "25") (term "1"))
                                                   (rule "ifElseUnfold" (formula "25") (term "2") (inst "#boolv=b"))
                                                   (rule "variableDeclaration" (formula "25") (term "2") (newnames "b_19"))
                                                   (rule "less_than_comparison_new" (formula "25") (term "2"))
                                                   (builtin "Update Simplification" (formula "25"))
                                                   (rule "castDelInt" (formula "25") (term "0,0"))
                                                   (rule "less_literals" (formula "25") (term "0"))
                                                   (rule "ifthenelse_false_for" (formula "25"))
                                                   (rule "ifElseSkipThen" (formula "25") (term "2"))
                                                   (rule "assignment" (formula "25") (term "2"))
                                                   (builtin "Update Simplification" (formula "25"))
                                                   (rule "compound_assignment_op_plus" (formula "25") (term "2"))
                                                   (rule "compound_int_cast_expression" (formula "25") (term "2") (inst "#v=j"))
                                                   (rule "variableDeclarationAssign" (formula "25") (term "2"))
                                                   (rule "variableDeclaration" (formula "25") (term "2") (newnames "j_40"))
                                                   (rule "remove_parentheses_right" (formula "25") (term "2"))
                                                   (rule "compound_addition_2" (formula "25") (term "2") (inst "#v1=j_42") (inst "#v0=j_41"))
                                                   (rule "variableDeclarationAssign" (formula "25") (term "2"))
                                                   (rule "variableDeclaration" (formula "25") (term "2") (newnames "j_41"))
                                                   (rule "assignment" (formula "25") (term "2"))
                                                   (builtin "Update Simplification" (formula "25"))
                                                   (rule "variableDeclarationAssign" (formula "25") (term "3"))
                                                   (rule "variableDeclaration" (formula "25") (term "3") (newnames "j_42"))
                                                   (rule "remove_parentheses_right" (formula "25") (term "3"))
                                                   (rule "assignment" (formula "25") (term "3"))
                                                   (builtin "Update Simplification" (formula "25"))
                                                   (rule "castDelInt" (formula "25") (term "2"))
                                                   (rule "assignmentAdditionInt" (formula "25") (term "3"))
                                                   (builtin "Update Simplification" (formula "25"))
                                                   (rule "castDelInt" (formula "25") (term "1,1"))
                                                   (rule "translateJavaAddInt" (formula "25") (term "1"))
                                                   (rule "add_zero_right" (formula "25") (term "1"))
                                                   (rule "widening_identity_cast_5" (formula "25") (term "2"))
                                                   (rule "assignment" (formula "25") (term "2"))
                                                   (builtin "Update Simplification" (formula "25"))
                                                   (rule "blockEmpty" (formula "25") (term "1"))
                                                   (rule "methodCallReturn" (formula "25") (term "1"))
                                                   (rule "assignment" (formula "25") (term "1"))
                                                   (builtin "Update Simplification" (formula "25"))
                                                   (rule "methodCallEmpty" (formula "25") (term "1"))
                                                   (rule "emptyModality" (formula "25") (term "1"))
                                                   (builtin "Update Simplification" (formula "25"))
                                                   (rule "notRight" (formula "25"))
                                                   (rule "replace_known_left" (formula "10") (term "0") (ifseqformula "1"))
                                                   (rule "concrete_impl_1" (formula "10"))
                                                   (rule "applyEq" (formula "9") (term "0") (ifseqformula "1"))
                                                   (rule "qeq_literals" (formula "9"))
                                                   (rule "true_left" (formula "9"))
                                                   (rule "allLeft" (formula "9") (inst "t=_var0_0"))
                                                   (rule "replace_known_right" (formula "9") (term "1") (ifseqformula "26"))
                                                   (rule "concrete_or_4" (formula "9"))
                                                   (rule "inEqSimp_contradInEq1" (formula "9") (term "0") (ifseqformula "7"))
                                                   (rule "qeq_literals" (formula "9") (term "0,0"))
                                                   (rule "concrete_and_2" (formula "9") (term "0"))
                                                   (rule "concrete_or_2" (formula "9"))
                                                   (rule "inEqSimp_contradInEq0" (formula "9") (ifseqformula "8"))
                                                   (rule "andLeft" (formula "9"))
                                                   (rule "inEqSimp_homoInEq1" (formula "9"))
                                                   (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "9") (term "1,0"))
                                                   (rule "mul_literals" (formula "9") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                                   (rule "polySimp_addComm0" (formula "9") (term "0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "9") (term "0"))
                                                   (rule "add_literals" (formula "9") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "9") (term "1,0"))
                                                   (rule "add_literals" (formula "9") (term "0"))
                                                   (rule "leq_literals" (formula "9"))
                                                   (rule "closeFalse" (formula "9"))
                                                )
                                                (branch " Exceptional Post"
                                                   (builtin "Update Simplification" (formula "23"))
                                                   (rule "impRight" (formula "23"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "andLeft" (formula "2"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "notLeft" (formula "2"))
                                                   (rule "close" (formula "26") (ifseqformula "3"))
                                                )
                                             )
                                             (branch " Null Reference (s2_2 = null)"
                                                (builtin "Update Simplification" (formula "24"))
                                                (builtin "Update Simplification" (formula "1"))
                                                (rule "close" (formula "30") (ifseqformula "1"))
                                             )
                                          )
                                          (branch " Exceptional Post"
                                             (builtin "Update Simplification" (formula "21"))
                                             (rule "impRight" (formula "21"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "andLeft" (formula "2"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "notLeft" (formula "2"))
                                             (rule "close" (formula "24") (ifseqformula "3"))
                                          )
                                       )
                                       (branch " Null Reference (s1_2 = null)"
                                          (builtin "Update Simplification" (formula "22"))
                                          (builtin "Update Simplification" (formula "1"))
                                          (rule "close" (formula "27") (ifseqformula "1"))
                                       )
                                    )
                                 )
                              )
                              (branch " CUT: result_3 = result_1 FALSE"
                                 (rule "inEqSimp_strengthen1" (formula "1") (ifseqformula "15"))
                                 (rule "inEqSimp_contradEq7" (formula "15") (ifseqformula "1"))
                                 (rule "polySimp_mulComm0" (formula "15") (term "1,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0"))
                                 (rule "add_literals" (formula "15") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "15") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "15") (term "0,0"))
                                 (rule "leq_literals" (formula "15") (term "0"))
                                 (rule "concrete_and_2" (formula "15"))
                                 (rule "false_right" (formula "15"))
                                 (rule "lengthGEq0" (newnames "L_1"))
                                 (rule "whileInvDiamondDec2" (formula "16") (newnames "i_2_2,d_2_4,i_2_3,d_2_5,anon_2,j_55") (inst "variant=m_2 - i_2") (inst "inv=d_2 >= 0") (inst "#modifies={i_2,d_2}") (inst "#v2=j") (inst "#v1=b") (userinteraction))
                                 (branch " Invariant Initially Valid"
                                    (builtin "Update Simplification" (formula "16"))
                                    (rule "lengthGEq0" (inst "l=content(s_1)") (userinteraction))
                                    (rule "castDelInt" (formula "17") (term "0,0"))
                                    (rule "qeq_literals" (formula "17") (term "0"))
                                    (rule "concrete_and_1" (formula "17"))
                                    (rule "castDelInt" (formula "17") (term "1,0"))
                                    (rule "polySimp_elimSub" (formula "17") (term "0"))
                                    (rule "times_zero_2" (formula "17") (term "1,0"))
                                    (rule "add_zero_right" (formula "17") (term "0"))
                                    (rule "inEqSimp_geqRight" (formula "17"))
                                    (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "applyEq" (formula "2") (term "0") (ifseqformula "8"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                    (rule "mul_literals" (formula "1") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "2"))
                                    (rule "qeq_literals" (formula "1") (term "0"))
                                    (rule "concrete_and_2" (formula "1"))
                                    (rule "closeFalse" (formula "1"))
                                 )
                                 (branch " Body Preserves Invariant and Decreases Variant"
                                    (builtin "Update Simplification" (formula "16"))
                                    (rule "concrete_impl_1" (formula "16"))
                                    (rule "impRight" (formula "16"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "impRight" (formula "18"))
                                    (rule "andLeft" (formula "2"))
                                    (rule "andLeft" (formula "2"))
                                    (rule "castDelInt" (formula "5") (term "1,0,1"))
                                    (rule "castDelInt" (formula "5") (term "1"))
                                    (rule "polySimp_elimSub" (formula "5") (term "0"))
                                    (rule "polySimp_elimSub" (formula "21") (term "0,1,1,1,0,6"))
                                    (rule "polySimp_elimSub" (formula "21") (term "2"))
                                    (rule "polySimp_elimSub" (formula "21") (term "0,1,0,1,1,0,6"))
                                    (rule "polySimp_elimSub" (formula "4") (term "0"))
                                    (rule "polySimp_elimSub" (formula "5") (term "1"))
                                    (rule "mul_literals" (formula "5") (term "1,1"))
                                    (rule "add_zero_right" (formula "5") (term "1"))
                                    (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,1,1,0,6"))
                                    (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,1,1,0,6"))
                                    (rule "polySimp_addComm0" (formula "5") (term "0"))
                                    (rule "polySimp_addComm0" (formula "21") (term "0,1,1,1,0,6"))
                                    (rule "polySimp_addComm0" (formula "21") (term "2"))
                                    (rule "polySimp_addComm0" (formula "4") (term "0"))
                                    (rule "polySimp_addComm0" (formula "21") (term "1,0,1,0,1,1,0,6"))
                                    (rule "polySimp_addAssoc" (formula "21") (term "0,1,0,1,1,0,6"))
                                    (rule "polySimp_addComm1" (formula "21") (term "0,0,1,0,1,1,0,6"))
                                    (rule "inEqSimp_homoInEq0" (formula "5"))
                                    (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                                    (rule "polySimp_mulAssoc" (formula "5") (term "0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "5") (term "0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "0,1,0"))
                                    (rule "polySimp_elimOne" (formula "5") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                    (rule "polySimp_addComm0" (formula "5") (term "0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "5") (term "0"))
                                    (rule "add_literals" (formula "5") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "5") (term "1,0"))
                                    (rule "add_zero_right" (formula "5") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "1,1,1,0,6"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,1,0,6"))
                                    (rule "polySimp_elimOne" (formula "21") (term "1,1,1,1,0,6"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                    (rule "polySimp_mulLiterals" (formula "4") (term "1"))
                                    (rule "polySimp_elimOne" (formula "4") (term "1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,1,1,0,6"))
                                    (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,1,1,0,6"))
                                    (rule "polySimp_rightDist" (formula "21") (term "1,1,0,1,1,0,6"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,1,1,0,6"))
                                    (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,1,1,0,6"))
                                    (rule "polySimp_rightDist" (formula "21") (term "0,1,1,0,1,1,0,6"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "1,0,1,1,0,1,1,0,6"))
                                    (rule "mul_literals" (formula "21") (term "0,0,1,1,0,1,1,0,6"))
                                    (rule "polySimp_elimOne" (formula "21") (term "1,0,1,1,0,1,1,0,6"))
                                    (rule "variableDeclarationAssign" (formula "1") (term "2"))
                                    (rule "variableDeclarationAssign" (formula "21") (term "6"))
                                    (rule "variableDeclaration" (formula "1") (term "2") (newnames "b_21"))
                                    (rule "variableDeclaration" (formula "21") (term "6") (newnames "exc_14"))
                                    (rule "assignment" (formula "21") (term "6"))
                                    (builtin "Update Simplification" (formula "21"))
                                    (rule "variableDeclaration" (formula "21") (term "7") (newnames "thrownExc_2"))
                                    (rule "less_than_comparison_new" (formula "1") (term "2"))
                                    (builtin "Update Simplification" (formula "1"))
                                    (rule "inEqSimp_ltToLeq" (formula "1") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "0,0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "0,0"))
                                    (rule "ifUnfold" (formula "21") (term "7") (inst "#boolv=b"))
                                    (rule "variableDeclaration" (formula "21") (term "7") (newnames "b_22"))
                                    (rule "less_than_comparison_new" (formula "21") (term "7"))
                                    (builtin "Update Simplification" (formula "21"))
                                    (rule "inEqSimp_ltToLeq" (formula "21") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "21") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "21") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "0,0"))
                                    (rule "polySimp_elimOne" (formula "21") (term "0,0"))
                                    (rule "ifthenelse_split_for" (formula "1"))
                                    (branch " result_1 >= 1 + i_2_2 TRUE"
                                       (rule "replace_known_left" (formula "22") (term "0") (ifseqformula "1"))
                                       (rule "ifthenelse_true_for" (formula "22"))
                                       (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "1"))
                                       (rule "inEqSimp_homoInEq0" (formula "5") (term "0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0"))
                                       (rule "add_literals" (formula "5") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "5") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "5") (term "0,0"))
                                       (rule "qeq_literals" (formula "5") (term "0"))
                                       (rule "concrete_or_1" (formula "5"))
                                       (rule "true_left" (formula "5"))
                                       (rule "ifEnterThen" (formula "21") (term "7"))
                                       (rule "assignment" (formula "2"))
                                       (rule "assignment" (formula "21") (term "7"))
                                       (builtin "Update Simplification" (formula "21"))
                                       (rule "methodCallEmpty" (formula "2") (term "1"))
                                       (rule "variableDeclarationAssign" (formula "21") (term "7"))
                                       (rule "emptyModality" (formula "2") (term "1"))
                                       (builtin "Update Simplification" (formula "2"))
                                       (rule "boolean_equal" (formula "2"))
                                       (rule "true_left" (formula "2"))
                                       (rule "variableDeclaration" (formula "20") (term "7") (newnames "f_2"))
                                       (rule "compound_subtraction_2" (formula "20") (term "7") (inst "#v1=j_1") (inst "#v0=j"))
                                       (rule "variableDeclarationAssign" (formula "20") (term "7"))
                                       (rule "variableDeclaration" (formula "20") (term "7") (newnames "j_56"))
                                       (rule "methodCallWithAssignment" (formula "20") (term "7") (inst "#v0=j_57"))
                                       (branch " Normal Execution (s1_2 != null)"
                                          (builtin "Update Simplification" (formula "20"))
                                          (rule "variableDeclaration" (formula "20") (term "7") (newnames "j_57"))
                                          (rule "variableDeclarationAssign" (formula "20") (term "7"))
                                          (rule "variableDeclaration" (formula "20") (term "7") (newnames "arg0_11"))
                                          (rule "assignment" (formula "20") (term "7"))
                                          (builtin "Update Simplification" (formula "20"))
                                          (builtin "Use Operation Contract" (formula "20") (newnames "arg0_11_0,result_18") (contract "charAtExc#charAtNormal;;"))
                                          (branch " Pre"
                                             (builtin "Update Simplification" (formula "20"))
                                             (rule "inInt" (formula "20") (term "1,0"))
                                             (rule "concrete_and_3" (formula "20") (term "0"))
                                             (rule "replace_known_right" (formula "20") (term "0,1,1,0") (ifseqformula "24"))
                                             (rule "concrete_not_2" (formula "20") (term "1,1,0"))
                                             (rule "concrete_and_3" (formula "20") (term "1,0"))
                                             (rule "replace_known_left" (formula "20") (term "1,0") (ifseqformula "17"))
                                             (rule "concrete_and_3" (formula "20") (term "0"))
                                             (rule "replace_known_left" (formula "20") (term "0") (ifseqformula "19"))
                                             (rule "concrete_and_1" (formula "20"))
                                             (rule "orRight" (formula "20"))
                                             (rule "orRight" (formula "20"))
                                             (rule "replace_known_left" (formula "22") (term "0") (ifseqformula "4"))
                                             (rule "concrete_and_1" (formula "22"))
                                             (rule "inEqSimp_geqRight" (formula "21"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                             (rule "inEqSimp_ltRight" (formula "21"))
                                             (rule "times_zero_1" (formula "1") (term "0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0"))
                                             (rule "inEqSimp_ltRight" (formula "21"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                             (rule "polySimp_addComm1" (formula "2") (term "0"))
                                             (rule "polySimp_addComm0" (formula "1") (term "0"))
                                             (rule "applyEq" (formula "2") (term "0,1,0") (ifseqformula "12"))
                                             (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "12"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                             (rule "polySimp_elimOne" (formula "2") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                             (rule "polySimp_elimOne" (formula "1") (term "0"))
                                             (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "2"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "inEqSimp_homoInEq1" (formula "1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                             (rule "add_literals" (formula "1") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "1") (term "1,0"))
                                             (rule "add_literals" (formula "1") (term "0"))
                                             (rule "leq_literals" (formula "1"))
                                             (rule "closeFalse" (formula "1"))
                                          )
                                          (branch " Post"
                                             (builtin "Update Simplification" (formula "20"))
                                             (rule "inChar" (formula "20") (term "1,1,0,0"))
                                             (rule "concrete_and_3" (formula "20") (term "1,0,0"))
                                             (rule "impRight" (formula "20"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "andLeft" (formula "2"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "typeEqDerived" (formula "2") (term "0,1,1") (ifseqformula "1"))
                                             (rule "boolean_equal" (formula "2") (term "1,1"))
                                             (rule "concrete_and_3" (formula "2") (term "1"))
                                             (rule "eqSymm" (formula "3") (term "1,1"))
                                             (rule "replace_known_left" (formula "2") (term "0,1") (ifseqformula "1"))
                                             (rule "concrete_not_1" (formula "2") (term "1"))
                                             (rule "concrete_impl_3" (formula "2"))
                                             (rule "notLeft" (formula "2"))
                                             (rule "orRight" (formula "22"))
                                             (rule "replace_known_left" (formula "2") (term "0,1") (ifseqformula "1"))
                                             (rule "concrete_and_1" (formula "2") (term "1"))
                                             (rule "replace_known_left" (formula "2") (term "0,0") (ifseqformula "6"))
                                             (rule "concrete_and_1" (formula "2") (term "0"))
                                             (rule "inEqSimp_ltRight" (formula "22"))
                                             (rule "times_zero_1" (formula "1") (term "0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0"))
                                             (rule "inEqSimp_geqRight" (formula "22"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "3") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0"))
                                             (rule "replace_known_left" (formula "3") (term "0") (ifseqformula "1"))
                                             (rule "concrete_impl_1" (formula "3"))
                                             (rule "polySimp_addComm1" (formula "1") (term "0"))
                                             (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "13"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                             (rule "polySimp_elimOne" (formula "1") (term "0"))
                                             (rule "blockEmpty" (formula "22") (term "8"))
                                             (rule "assignment" (formula "22") (term "8"))
                                             (builtin "Update Simplification" (formula "22"))
                                             (rule "variableDeclarationAssign" (formula "22") (term "8"))
                                             (rule "variableDeclaration" (formula "22") (term "8") (newnames "j_65"))
                                             (rule "methodCallWithAssignment" (formula "22") (term "8") (inst "#v0=j_66"))
                                             (branch " Normal Execution (s2_2 != null)"
                                                (builtin "Update Simplification" (formula "22"))
                                                (rule "variableDeclaration" (formula "22") (term "8") (newnames "j_66"))
                                                (rule "variableDeclarationAssign" (formula "22") (term "8"))
                                                (rule "variableDeclaration" (formula "22") (term "8") (newnames "arg0_13"))
                                                (rule "assignment" (formula "22") (term "8"))
                                                (builtin "Update Simplification" (formula "22"))
                                                (builtin "Use Operation Contract" (formula "22") (newnames "arg0_13_0,result_30") (contract "charAtExc#charAtNormal;;"))
                                                (branch " Pre"
                                                   (builtin "Update Simplification" (formula "22"))
                                                   (rule "inInt" (formula "22") (term "1,0"))
                                                   (rule "concrete_and_3" (formula "22") (term "0"))
                                                   (rule "replace_known_right" (formula "22") (term "0,1,1,0") (ifseqformula "27"))
                                                   (rule "concrete_not_2" (formula "22") (term "1,1,0"))
                                                   (rule "concrete_and_3" (formula "22") (term "1,0"))
                                                   (rule "replace_known_left" (formula "22") (term "1,0") (ifseqformula "20"))
                                                   (rule "concrete_and_3" (formula "22") (term "0"))
                                                   (rule "replace_known_left" (formula "22") (term "0") (ifseqformula "21"))
                                                   (rule "concrete_and_1" (formula "22"))
                                                   (rule "orRight" (formula "22"))
                                                   (rule "orRight" (formula "22"))
                                                   (rule "replace_known_left" (formula "24") (term "0") (ifseqformula "6"))
                                                   (rule "concrete_and_1" (formula "24"))
                                                   (rule "inEqSimp_ltRight" (formula "22"))
                                                   (rule "times_zero_1" (formula "1") (term "0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0"))
                                                   (rule "inEqSimp_geqRight" (formula "22"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                   (rule "inEqSimp_ltRight" (formula "23"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                   (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                   (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                   (rule "applyEq" (formula "2") (term "0,1,0") (ifseqformula "12"))
                                                   (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "12"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                   (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                   (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "1"))
                                                   (rule "andLeft" (formula "2"))
                                                   (rule "inEqSimp_homoInEq1" (formula "2"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                                   (rule "add_literals" (formula "2") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "2") (term "1,0"))
                                                   (rule "add_literals" (formula "2") (term "0"))
                                                   (rule "leq_literals" (formula "2"))
                                                   (rule "closeFalse" (formula "2"))
                                                )
                                                (branch " Post"
                                                   (builtin "Update Simplification" (formula "22"))
                                                   (rule "inChar" (formula "22") (term "1,1,0,0"))
                                                   (rule "concrete_and_3" (formula "22") (term "1,0,0"))
                                                   (rule "impRight" (formula "22"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "typeEqDerived" (formula "2") (term "0,1,1,0") (ifseqformula "1"))
                                                   (rule "boolean_equal" (formula "2") (term "1,1,0"))
                                                   (rule "concrete_and_3" (formula "2") (term "1,0"))
                                                   (rule "andLeft" (formula "2"))
                                                   (rule "eqSymm" (formula "3") (term "1,1"))
                                                   (rule "replace_known_left" (formula "2") (term "0,1") (ifseqformula "1"))
                                                   (rule "concrete_not_1" (formula "2") (term "1"))
                                                   (rule "concrete_impl_3" (formula "2"))
                                                   (rule "notLeft" (formula "2"))
                                                   (rule "orRight" (formula "24"))
                                                   (rule "replace_known_left" (formula "2") (term "0,1") (ifseqformula "1"))
                                                   (rule "concrete_and_1" (formula "2") (term "1"))
                                                   (rule "replace_known_left" (formula "2") (term "0,0") (ifseqformula "8"))
                                                   (rule "concrete_and_1" (formula "2") (term "0"))
                                                   (rule "inEqSimp_ltRight" (formula "24"))
                                                   (rule "times_zero_1" (formula "1") (term "0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0"))
                                                   (rule "inEqSimp_geqRight" (formula "24"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "3") (term "0"))
                                                   (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0"))
                                                   (rule "replace_known_left" (formula "3") (term "0") (ifseqformula "1"))
                                                   (rule "concrete_impl_1" (formula "3"))
                                                   (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                   (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "13"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                   (rule "blockEmpty" (formula "25") (term "9"))
                                                   (rule "assignment" (formula "25") (term "9"))
                                                   (builtin "Update Simplification" (formula "25"))
                                                   (rule "assignmentSubtractionInt" (formula "25") (term "9"))
                                                   (builtin "Update Simplification" (formula "25"))
                                                   (rule "translateJavaSubInt" (formula "25") (term "2"))
                                                   (rule "polySimp_elimSub" (formula "25") (term "2"))
                                                   (rule "ifElseUnfold" (formula "25") (term "8") (inst "#boolv=b"))
                                                   (rule "variableDeclaration" (formula "25") (term "8") (newnames "b_25"))
                                                   (rule "greater_equal_than_comparison_new" (formula "25") (term "8"))
                                                   (builtin "Update Simplification" (formula "25"))
                                                   (rule "castDelInt" (formula "25") (term "0,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "25") (term "0"))
                                                   (rule "polySimp_mulLiterals" (formula "25") (term "0,0"))
                                                   (rule "polySimp_elimOne" (formula "25") (term "0,0"))
                                                   (rule "ifthenelse_split_for" (formula "25"))
                                                   (branch " result_28 <= result_17 TRUE"
                                                      (rule "ifElseSkipElse" (formula "26") (term "8"))
                                                      (rule "assignment" (formula "26") (term "8"))
                                                      (builtin "Update Simplification" (formula "26"))
                                                      (rule "compound_assignment_op_plus" (formula "26") (term "8"))
                                                      (rule "compound_int_cast_expression" (formula "26") (term "8") (inst "#v=j"))
                                                      (rule "variableDeclarationAssign" (formula "26") (term "8"))
                                                      (rule "variableDeclaration" (formula "26") (term "8") (newnames "j_71"))
                                                      (rule "remove_parentheses_right" (formula "26") (term "8"))
                                                      (rule "compound_addition_2" (formula "26") (term "8") (inst "#v1=j_73") (inst "#v0=j_72"))
                                                      (rule "variableDeclarationAssign" (formula "26") (term "8"))
                                                      (rule "variableDeclaration" (formula "26") (term "8") (newnames "j_72"))
                                                      (rule "assignment" (formula "26") (term "8"))
                                                      (builtin "Update Simplification" (formula "26"))
                                                      (rule "variableDeclarationAssign" (formula "26") (term "9"))
                                                      (rule "variableDeclaration" (formula "26") (term "9") (newnames "j_73"))
                                                      (rule "remove_parentheses_right" (formula "26") (term "9"))
                                                      (rule "assignment" (formula "26") (term "9"))
                                                      (builtin "Update Simplification" (formula "26"))
                                                      (rule "castDelInt" (formula "26") (term "5"))
                                                      (rule "assignmentAdditionInt" (formula "26") (term "9"))
                                                      (builtin "Update Simplification" (formula "26"))
                                                      (rule "castDelInt" (formula "26") (term "1,4"))
                                                      (rule "translateJavaAddInt" (formula "26") (term "4"))
                                                      (rule "polySimp_addAssoc" (formula "26") (term "4"))
                                                      (rule "widening_identity_cast_5" (formula "26") (term "8"))
                                                      (rule "assignment" (formula "26") (term "8"))
                                                      (builtin "Update Simplification" (formula "26"))
                                                      (rule "castDelInt" (formula "26") (term "0"))
                                                      (rule "blockEmpty" (formula "26") (term "7"))
                                                      (rule "preincrement" (formula "26") (term "7"))
                                                      (rule "compound_int_cast_expression" (formula "26") (term "7") (inst "#v=j"))
                                                      (rule "variableDeclarationAssign" (formula "26") (term "7"))
                                                      (rule "variableDeclaration" (formula "26") (term "7") (newnames "j_74"))
                                                      (rule "remove_parentheses_right" (formula "26") (term "7"))
                                                      (rule "assignmentAdditionInt" (formula "26") (term "7"))
                                                      (builtin "Update Simplification" (formula "26"))
                                                      (rule "translateJavaAddInt" (formula "26") (term "4"))
                                                      (rule "polySimp_addComm0" (formula "26") (term "4"))
                                                      (rule "widening_identity_cast_5" (formula "26") (term "8"))
                                                      (rule "assignment" (formula "26") (term "8"))
                                                      (builtin "Update Simplification" (formula "26"))
                                                      (rule "castDelInt" (formula "26") (term "2"))
                                                      (rule "tryEmpty" (formula "26") (term "7"))
                                                      (rule "methodCallEmpty" (formula "26") (term "7"))
                                                      (rule "emptyModality" (formula "26") (term "7"))
                                                      (builtin "Update Simplification" (formula "26"))
                                                      (rule "boolean_not_equal_2" (formula "26") (term "0,0"))
                                                      (rule "boolean_not_equal_2" (formula "26") (term "0,0,1"))
                                                      (rule "concrete_impl_2" (formula "26") (term "0"))
                                                      (rule "concrete_not_2" (formula "26") (term "0,1"))
                                                      (rule "concrete_and_1" (formula "26"))
                                                      (rule "concrete_impl_1" (formula "26"))
                                                      (rule "castDelInt" (formula "26") (term "1,1,1,0"))
                                                      (rule "castDelInt" (formula "26") (term "1,1"))
                                                      (rule "castDelInt" (formula "26") (term "0,1,0,0"))
                                                      (rule "castDelInt" (formula "26") (term "1,0,1,1,0"))
                                                      (rule "replace_known_left" (formula "26") (term "5,0,0,0") (ifseqformula "8"))
                                                      (builtin "Update Simplification" (formula "26"))
                                                      (rule "concrete_and_1" (formula "26") (term "0,0"))
                                                      (rule "replace_known_left" (formula "26") (term "1") (ifseqformula "7"))
                                                      (rule "concrete_and_3" (formula "26"))
                                                      (rule "polySimp_addAssoc" (formula "26") (term "0,1,1"))
                                                      (rule "add_literals" (formula "26") (term "0,0,1,1"))
                                                      (rule "add_zero_left" (formula "26") (term "0,1,1"))
                                                      (rule "polySimp_addAssoc" (formula "26") (term "1,1"))
                                                      (rule "polySimp_pullOutFactor1" (formula "26") (term "0,1,1"))
                                                      (rule "add_literals" (formula "26") (term "1,0,1,1"))
                                                      (rule "times_zero_1" (formula "26") (term "0,1,1"))
                                                      (rule "add_zero_left" (formula "26") (term "1,1"))
                                                      (rule "inEqSimp_homoInEq0" (formula "26") (term "1"))
                                                      (rule "polySimp_pullOutFactor1" (formula "26") (term "0,1"))
                                                      (rule "add_literals" (formula "26") (term "1,0,1"))
                                                      (rule "times_zero_1" (formula "26") (term "0,1"))
                                                      (rule "qeq_literals" (formula "26") (term "1"))
                                                      (rule "concrete_and_3" (formula "26"))
                                                      (rule "inEqSimp_geqRight" (formula "26"))
                                                      (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                      (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor2b" (formula "1") (term "0"))
                                                      (rule "add_literals" (formula "1") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "1") (term "1,0"))
                                                      (rule "add_zero_right" (formula "1") (term "0"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "0"))
                                                      (rule "mul_literals" (formula "1") (term "0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                      (rule "inEqSimp_contradInEq0" (formula "11") (ifseqformula "1"))
                                                      (rule "qeq_literals" (formula "11") (term "0"))
                                                      (rule "concrete_and_2" (formula "11"))
                                                      (rule "closeFalse" (formula "11"))
                                                   )
                                                   (branch " result_28 <= result_17 FALSE"
                                                      (rule "inEqSimp_leqRight" (formula "25"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                      (rule "mul_literals" (formula "1") (term "0,1"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                      (rule "ifElseSkipThen" (formula "26") (term "8"))
                                                      (rule "assignment" (formula "26") (term "8"))
                                                      (builtin "Update Simplification" (formula "26"))
                                                      (rule "compound_assignment_op_plus" (formula "26") (term "8"))
                                                      (rule "compound_int_cast_expression" (formula "26") (term "8") (inst "#v=j"))
                                                      (rule "variableDeclarationAssign" (formula "26") (term "8"))
                                                      (rule "variableDeclaration" (formula "26") (term "8") (newnames "j_67"))
                                                      (rule "remove_parentheses_right" (formula "26") (term "8"))
                                                      (rule "compound_addition_2" (formula "26") (term "8") (inst "#v1=j_69") (inst "#v0=j_68"))
                                                      (rule "variableDeclarationAssign" (formula "26") (term "8"))
                                                      (rule "variableDeclaration" (formula "26") (term "8") (newnames "j_68"))
                                                      (rule "assignment" (formula "26") (term "8"))
                                                      (builtin "Update Simplification" (formula "26"))
                                                      (rule "variableDeclarationAssign" (formula "26") (term "9"))
                                                      (rule "variableDeclaration" (formula "26") (term "9") (newnames "j_69"))
                                                      (rule "remove_parentheses_right" (formula "26") (term "9"))
                                                      (rule "unaryMinusInt" (formula "26") (term "9"))
                                                      (builtin "Update Simplification" (formula "26"))
                                                      (rule "castDelInt" (formula "26") (term "0,5"))
                                                      (rule "translateJavaUnaryMinusInt" (formula "26") (term "5"))
                                                      (rule "polySimp_elimNeg" (formula "26") (term "5"))
                                                      (rule "polySimp_mulComm0" (formula "26") (term "5"))
                                                      (rule "polySimp_rightDist" (formula "26") (term "5"))
                                                      (rule "polySimp_mulLiterals" (formula "26") (term "1,5"))
                                                      (rule "polySimp_elimOne" (formula "26") (term "1,5"))
                                                      (rule "polySimp_mulComm0" (formula "26") (term "0,5"))
                                                      (rule "assignmentAdditionInt" (formula "26") (term "9"))
                                                      (builtin "Update Simplification" (formula "26"))
                                                      (rule "castDelInt" (formula "26") (term "1,4"))
                                                      (rule "translateJavaAddInt" (formula "26") (term "4"))
                                                      (rule "polySimp_addAssoc" (formula "26") (term "4"))
                                                      (rule "widening_identity_cast_5" (formula "26") (term "8"))
                                                      (rule "assignment" (formula "26") (term "8"))
                                                      (builtin "Update Simplification" (formula "26"))
                                                      (rule "castDelInt" (formula "26") (term "0"))
                                                      (rule "blockEmpty" (formula "26") (term "7"))
                                                      (rule "preincrement" (formula "26") (term "7"))
                                                      (rule "compound_int_cast_expression" (formula "26") (term "7") (inst "#v=j"))
                                                      (rule "variableDeclarationAssign" (formula "26") (term "7"))
                                                      (rule "variableDeclaration" (formula "26") (term "7") (newnames "j_70"))
                                                      (rule "remove_parentheses_right" (formula "26") (term "7"))
                                                      (rule "assignmentAdditionInt" (formula "26") (term "7"))
                                                      (builtin "Update Simplification" (formula "26"))
                                                      (rule "translateJavaAddInt" (formula "26") (term "4"))
                                                      (rule "polySimp_addComm0" (formula "26") (term "4"))
                                                      (rule "widening_identity_cast_5" (formula "26") (term "8"))
                                                      (rule "assignment" (formula "26") (term "8"))
                                                      (builtin "Update Simplification" (formula "26"))
                                                      (rule "castDelInt" (formula "26") (term "2"))
                                                      (rule "tryEmpty" (formula "26") (term "7"))
                                                      (rule "methodCallEmpty" (formula "26") (term "7"))
                                                      (rule "emptyModality" (formula "26") (term "7"))
                                                      (builtin "Update Simplification" (formula "26"))
                                                      (rule "boolean_not_equal_2" (formula "26") (term "0,0"))
                                                      (rule "boolean_not_equal_2" (formula "26") (term "0,0,1"))
                                                      (rule "concrete_impl_2" (formula "26") (term "0"))
                                                      (rule "concrete_not_2" (formula "26") (term "0,1"))
                                                      (rule "concrete_and_1" (formula "26"))
                                                      (rule "concrete_impl_1" (formula "26"))
                                                      (rule "castDelInt" (formula "26") (term "1,1,1,0"))
                                                      (rule "castDelInt" (formula "26") (term "0,1,0,0"))
                                                      (rule "castDelInt" (formula "26") (term "1,0,1,1,0"))
                                                      (rule "castDelInt" (formula "26") (term "1,1"))
                                                      (rule "replace_known_left" (formula "26") (term "5,0,0,0") (ifseqformula "8"))
                                                      (builtin "Update Simplification" (formula "26"))
                                                      (rule "concrete_and_1" (formula "26") (term "0,0"))
                                                      (rule "replace_known_left" (formula "26") (term "1") (ifseqformula "7"))
                                                      (rule "concrete_and_3" (formula "26"))
                                                      (rule "polySimp_addAssoc" (formula "26") (term "0,1,1"))
                                                      (rule "add_literals" (formula "26") (term "0,0,1,1"))
                                                      (rule "add_zero_left" (formula "26") (term "0,1,1"))
                                                      (rule "polySimp_addAssoc" (formula "26") (term "1,1"))
                                                      (rule "polySimp_pullOutFactor1" (formula "26") (term "0,1,1"))
                                                      (rule "add_literals" (formula "26") (term "1,0,1,1"))
                                                      (rule "times_zero_1" (formula "26") (term "0,1,1"))
                                                      (rule "add_zero_left" (formula "26") (term "1,1"))
                                                      (rule "inEqSimp_homoInEq0" (formula "26") (term "1"))
                                                      (rule "polySimp_pullOutFactor1" (formula "26") (term "0,1"))
                                                      (rule "add_literals" (formula "26") (term "1,0,1"))
                                                      (rule "times_zero_1" (formula "26") (term "0,1"))
                                                      (rule "qeq_literals" (formula "26") (term "1"))
                                                      (rule "concrete_and_3" (formula "26"))
                                                      (rule "inEqSimp_geqRight" (formula "26"))
                                                      (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "0,1"))
                                                      (rule "mul_literals" (formula "1") (term "0,0,1"))
                                                      (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "1"))
                                                      (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                      (rule "mul_literals" (formula "2") (term "0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor2b" (formula "2") (term "0"))
                                                      (rule "add_literals" (formula "2") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "2") (term "1,0"))
                                                      (rule "add_zero_right" (formula "2") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                      (rule "add_literals" (formula "2") (term "0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "11"))
                                                      (rule "qeq_literals" (formula "2") (term "0"))
                                                      (rule "concrete_and_2" (formula "2"))
                                                      (rule "closeFalse" (formula "2"))
                                                   )
                                                )
                                                (branch " Exceptional Post"
                                                   (builtin "Update Simplification" (formula "22"))
                                                   (rule "impRight" (formula "22"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "andLeft" (formula "2"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "notLeft" (formula "2"))
                                                   (rule "eqSymm" (formula "3") (term "1,1"))
                                                   (rule "replace_known_right" (formula "2") (term "0,0,1") (ifseqformula "25"))
                                                   (rule "concrete_not_2" (formula "2") (term "0,1"))
                                                   (rule "concrete_and_1" (formula "2") (term "1"))
                                                   (rule "replace_known_right" (formula "3") (term "0,1") (ifseqformula "25"))
                                                   (rule "concrete_and_2" (formula "3") (term "1"))
                                                   (rule "concrete_impl_3" (formula "3"))
                                                   (rule "notLeft" (formula "3"))
                                                   (rule "replace_known_left" (formula "24") (term "0") (ifseqformula "8"))
                                                   (rule "concrete_and_1" (formula "24"))
                                                   (rule "inEqSimp_ltToLeq" (formula "2") (term "0,0"))
                                                   (rule "times_zero_1" (formula "2") (term "1,0,0,0,0"))
                                                   (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                                   (rule "inEqSimp_ltRight" (formula "24"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                   (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                   (rule "inEqSimp_commuteGeq" (formula "3") (term "1,0"))
                                                   (rule "applyEq" (formula "3") (term "0,1,0") (ifseqformula "13"))
                                                   (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "13"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "0,0"))
                                                   (rule "mul_literals" (formula "3") (term "1,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                   (rule "replace_known_left" (formula "3") (term "1,0") (ifseqformula "1"))
                                                   (rule "concrete_or_3" (formula "3") (term "0"))
                                                   (rule "concrete_impl_1" (formula "3"))
                                                   (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "1"))
                                                   (rule "polySimp_rightDist" (formula "11") (term "0,0"))
                                                   (rule "mul_literals" (formula "11") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "11") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "11"))
                                                   (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "11") (term "0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "11") (ifseqformula "6"))
                                                   (rule "andLeft" (formula "11"))
                                                   (rule "inEqSimp_homoInEq1" (formula "11"))
                                                   (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "11") (term "1,0"))
                                                   (rule "mul_literals" (formula "11") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "11") (term "0,0"))
                                                   (rule "add_literals" (formula "11") (term "0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "11") (term "0"))
                                                   (rule "add_literals" (formula "11") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "11") (term "1,0"))
                                                   (rule "add_literals" (formula "11") (term "0"))
                                                   (rule "leq_literals" (formula "11"))
                                                   (rule "closeFalse" (formula "11"))
                                                )
                                             )
                                             (branch " Null Reference (s2_2 = null)"
                                                (builtin "Update Simplification" (formula "1"))
                                                (rule "close" (formula "28") (ifseqformula "1"))
                                             )
                                          )
                                          (branch " Exceptional Post"
                                             (builtin "Update Simplification" (formula "20"))
                                             (rule "impRight" (formula "20"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "andLeft" (formula "2"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "notLeft" (formula "2"))
                                             (rule "eqSymm" (formula "3") (term "1,1"))
                                             (rule "replace_known_right" (formula "2") (term "0,0,1") (ifseqformula "23"))
                                             (rule "concrete_not_2" (formula "2") (term "0,1"))
                                             (rule "concrete_and_1" (formula "2") (term "1"))
                                             (rule "replace_known_right" (formula "3") (term "0,1") (ifseqformula "23"))
                                             (rule "concrete_and_2" (formula "3") (term "1"))
                                             (rule "concrete_impl_3" (formula "3"))
                                             (rule "notLeft" (formula "3"))
                                             (rule "replace_known_left" (formula "22") (term "0") (ifseqformula "6"))
                                             (rule "concrete_and_1" (formula "22"))
                                             (rule "inEqSimp_ltToLeq" (formula "2") (term "0,0"))
                                             (rule "times_zero_1" (formula "2") (term "1,0,0,0,0"))
                                             (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                             (rule "inEqSimp_ltRight" (formula "22"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                             (rule "polySimp_addComm0" (formula "1") (term "0"))
                                             (rule "inEqSimp_commuteGeq" (formula "3") (term "1,0"))
                                             (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "13"))
                                             (rule "applyEq" (formula "3") (term "0,1,0") (ifseqformula "13"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "0,0"))
                                             (rule "mul_literals" (formula "3") (term "1,0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                             (rule "polySimp_elimOne" (formula "1") (term "0"))
                                             (rule "replace_known_left" (formula "3") (term "1,0") (ifseqformula "1"))
                                             (rule "concrete_or_3" (formula "3") (term "0"))
                                             (rule "concrete_impl_1" (formula "3"))
                                             (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "4"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "inEqSimp_homoInEq1" (formula "1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                             (rule "add_literals" (formula "1") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "1") (term "1,0"))
                                             (rule "add_literals" (formula "1") (term "0"))
                                             (rule "leq_literals" (formula "1"))
                                             (rule "closeFalse" (formula "1"))
                                          )
                                       )
                                       (branch " Null Reference (s1_2 = null)"
                                          (builtin "Update Simplification" (formula "1"))
                                          (rule "close" (formula "25") (ifseqformula "1"))
                                       )
                                    )
                                    (branch " result_1 >= 1 + i_2_2 FALSE"
                                       (rule "replace_known_right" (formula "22") (term "0") (ifseqformula "21"))
                                       (rule "ifthenelse_false_for" (formula "22"))
                                       (rule "inEqSimp_geqRight" (formula "21"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                       (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1"))
                                       (rule "inEqSimp_antiSymm" (formula "5") (ifseqformula "1"))
                                       (rule "applyEq" (formula "1") (term "0") (ifseqformula "5"))
                                       (rule "inEqSimp_homoInEq0" (formula "1"))
                                       (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                                       (rule "add_literals" (formula "1") (term "1,0"))
                                       (rule "times_zero_1" (formula "1") (term "0"))
                                       (rule "qeq_literals" (formula "1"))
                                       (rule "true_left" (formula "1"))
                                       (rule "applyEq" (formula "5") (term "0") (ifseqformula "4"))
                                       (rule "inEqSimp_homoInEq1" (formula "5"))
                                       (rule "polySimp_pullOutFactor1" (formula "5") (term "0"))
                                       (rule "add_literals" (formula "5") (term "1,0"))
                                       (rule "times_zero_1" (formula "5") (term "0"))
                                       (rule "leq_literals" (formula "5"))
                                       (rule "true_left" (formula "5"))
                                       (rule "applyEq" (formula "2") (term "2") (ifseqformula "4"))
                                       (rule "applyEq" (formula "7") (term "1,1") (ifseqformula "4"))
                                       (rule "applyEq" (formula "21") (term "1,3") (ifseqformula "4"))
                                       (rule "polySimp_pullOutFactor2" (formula "21") (term "3"))
                                       (rule "add_literals" (formula "21") (term "1,3"))
                                       (rule "times_zero_1" (formula "21") (term "3"))
                                       (rule "applyEq" (formula "21") (term "4") (ifseqformula "4"))
                                       (rule "applyEq" (formula "11") (term "1") (ifseqformula "4"))
                                       (rule "applyEq" (formula "13") (term "1") (ifseqformula "4"))
                                       (rule "ifSkipThen" (formula "21") (term "7"))
                                       (rule "assignment" (formula "1"))
                                       (rule "assignment" (formula "21") (term "7"))
                                       (builtin "Update Simplification" (formula "21"))
                                       (rule "methodCallEmpty" (formula "1") (term "1"))
                                       (rule "tryEmpty" (formula "21") (term "7"))
                                       (rule "emptyModality" (formula "1") (term "1"))
                                       (builtin "Update Simplification" (formula "1"))
                                       (rule "boolean_not_equal_2" (formula "1"))
                                       (rule "closeFalse" (formula "1"))
                                    )
                                 )
                                 (branch " Use Case"
                                    (builtin "Update Simplification" (formula "16"))
                                    (rule "false_to_not_true" (formula "16") (term "0,0,5,1"))
                                    (rule "impRight" (formula "16"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "polySimp_elimSub" (formula "2") (term "0"))
                                    (rule "polySimp_addComm0" (formula "2") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1"))
                                    (rule "polySimp_elimOne" (formula "2") (term "1"))
                                    (rule "variableDeclarationAssign" (formula "18") (term "5"))
                                    (rule "variableDeclaration" (formula "18") (term "5") (newnames "b_23"))
                                    (rule "less_than_comparison_new" (formula "18") (term "5"))
                                    (builtin "Update Simplification" (formula "18"))
                                    (rule "inEqSimp_ltToLeq" (formula "18") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "18") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "18") (term "0,0"))
                                    (rule "polySimp_elimOne" (formula "18") (term "0,0"))
                                    (rule "ifthenelse_split_for" (formula "18"))
                                    (branch " result_1 >= 1 + i_2_3 TRUE"
                                       (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "1"))
                                       (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0"))
                                       (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "3") (term "0,0"))
                                       (rule "qeq_literals" (formula "3") (term "0"))
                                       (rule "concrete_or_1" (formula "3"))
                                       (rule "true_left" (formula "3"))
                                       (rule "assignment" (formula "18") (term "4"))
                                       (builtin "Update Simplification" (formula "18"))
                                       (rule "methodCallEmpty" (formula "18") (term "5"))
                                       (rule "emptyModality" (formula "18") (term "5"))
                                       (builtin "Update Simplification" (formula "18"))
                                       (rule "boolean_equal" (formula "18") (term "0,0"))
                                       (rule "concrete_not_1" (formula "18") (term "0"))
                                       (rule "concrete_impl_2" (formula "18"))
                                       (rule "closeTrue" (formula "18"))
                                    )
                                    (branch " result_1 >= 1 + i_2_3 FALSE"
                                       (rule "inEqSimp_geqRight" (formula "18"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                       (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1"))
                                       (rule "inEqSimp_antiSymm" (formula "3") (ifseqformula "1"))
                                       (rule "applyEq" (formula "1") (term "0") (ifseqformula "3"))
                                       (rule "inEqSimp_homoInEq0" (formula "1"))
                                       (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                                       (rule "add_literals" (formula "1") (term "1,0"))
                                       (rule "times_zero_1" (formula "1") (term "0"))
                                       (rule "qeq_literals" (formula "1"))
                                       (rule "true_left" (formula "1"))
                                       (rule "applyEq" (formula "3") (term "0") (ifseqformula "2"))
                                       (rule "inEqSimp_homoInEq1" (formula "3"))
                                       (rule "polySimp_pullOutFactor1" (formula "3") (term "0"))
                                       (rule "add_literals" (formula "3") (term "1,0"))
                                       (rule "times_zero_1" (formula "3") (term "0"))
                                       (rule "leq_literals" (formula "3"))
                                       (rule "true_left" (formula "3"))
                                       (rule "applyEq" (formula "4") (term "1,1") (ifseqformula "2"))
                                       (rule "applyEq" (formula "18") (term "1") (ifseqformula "2"))
                                       (rule "applyEq" (formula "8") (term "1") (ifseqformula "2"))
                                       (rule "applyEq" (formula "10") (term "1") (ifseqformula "2"))
                                       (rule "assignment" (formula "18") (term "4"))
                                       (builtin "Update Simplification" (formula "18"))
                                       (rule "methodCallEmpty" (formula "18") (term "5"))
                                       (rule "emptyModality" (formula "18") (term "5"))
                                       (builtin "Update Simplification" (formula "18"))
                                       (rule "boolean_not_equal_2" (formula "18") (term "0,0"))
                                       (rule "concrete_not_2" (formula "18") (term "0"))
                                       (rule "concrete_impl_1" (formula "18"))
                                       (rule "blockEmpty" (formula "18") (term "4"))
                                       (rule "compound_subtraction_2" (formula "18") (term "4") (inst "#v1=j_1") (inst "#v0=j"))
                                       (rule "variableDeclarationAssign" (formula "18") (term "4"))
                                       (rule "variableDeclaration" (formula "18") (term "4") (newnames "j_58"))
                                       (rule "methodCallWithAssignment" (formula "18") (term "4") (inst "#v0=j_59"))
                                       (branch " Normal Execution (s1_2 != null)"
                                          (builtin "Update Simplification" (formula "18"))
                                          (rule "variableDeclaration" (formula "18") (term "4") (newnames "j_59"))
                                          (builtin "Use Operation Contract" (formula "18") (newnames "result_22") (contract "length;;"))
                                          (branch " Pre"
                                             (builtin "Update Simplification" (formula "18"))
                                             (rule "replace_known_right" (formula "18") (term "0,1,1") (ifseqformula "22"))
                                             (rule "concrete_not_2" (formula "18") (term "1,1"))
                                             (rule "concrete_and_3" (formula "18") (term "1"))
                                             (rule "replace_known_left" (formula "18") (term "1") (ifseqformula "15"))
                                             (rule "concrete_and_3" (formula "18"))
                                             (rule "close" (formula "18") (ifseqformula "17"))
                                          )
                                          (branch " Post"
                                             (builtin "Update Simplification" (formula "18"))
                                             (rule "inInt" (formula "18") (term "1,1,0,0"))
                                             (rule "concrete_and_3" (formula "18") (term "1,0,0"))
                                             (rule "impRight" (formula "18"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "andLeft" (formula "2"))
                                             (rule "eqSymm" (formula "2"))
                                             (rule "applyEq" (formula "2") (term "0") (ifseqformula "10"))
                                             (rule "eqSymm" (formula "2"))
                                             (rule "applyEq" (formula "20") (term "1") (ifseqformula "2"))
                                             (rule "blockEmpty" (formula "20") (term "4"))
                                             (rule "assignment" (formula "20") (term "4"))
                                             (builtin "Update Simplification" (formula "20"))
                                             (rule "variableDeclarationAssign" (formula "20") (term "4"))
                                             (rule "variableDeclaration" (formula "20") (term "4") (newnames "j_60"))
                                             (rule "methodCallWithAssignment" (formula "20") (term "4") (inst "#v0=j_61"))
                                             (branch " Normal Execution (s2_2 != null)"
                                                (builtin "Update Simplification" (formula "20"))
                                                (rule "variableDeclaration" (formula "20") (term "4") (newnames "j_61"))
                                                (builtin "Use Operation Contract" (formula "20") (newnames "result_26") (contract "length;;"))
                                                (branch " Pre"
                                                   (builtin "Update Simplification" (formula "20"))
                                                   (rule "replace_known_left" (formula "20") (term "0") (ifseqformula "19"))
                                                   (rule "concrete_and_1" (formula "20"))
                                                   (rule "replace_known_right" (formula "20") (term "0,1") (ifseqformula "25"))
                                                   (rule "concrete_not_2" (formula "20") (term "1"))
                                                   (rule "concrete_and_3" (formula "20"))
                                                   (rule "close" (formula "20") (ifseqformula "18"))
                                                )
                                                (branch " Post"
                                                   (builtin "Update Simplification" (formula "20"))
                                                   (rule "inInt" (formula "20") (term "1,1,0,0"))
                                                   (rule "concrete_and_3" (formula "20") (term "1,0,0"))
                                                   (rule "impRight" (formula "20"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "andLeft" (formula "2"))
                                                   (rule "eqSymm" (formula "2"))
                                                   (rule "applyEq" (formula "2") (term "0") (ifseqformula "10"))
                                                   (rule "applyEq" (formula "8") (term "0") (ifseqformula "2"))
                                                   (rule "applyEq" (formula "10") (term "1") (ifseqformula "2"))
                                                   (rule "blockEmpty" (formula "22") (term "4"))
                                                   (rule "assignment" (formula "22") (term "4"))
                                                   (builtin "Update Simplification" (formula "22"))
                                                   (rule "assignmentSubtractionInt" (formula "22") (term "4"))
                                                   (builtin "Update Simplification" (formula "22"))
                                                   (rule "translateJavaSubInt" (formula "22") (term "1"))
                                                   (rule "polySimp_elimSub" (formula "22") (term "1"))
                                                   (rule "ifElseUnfold" (formula "22") (term "2") (inst "#boolv=b"))
                                                   (rule "variableDeclaration" (formula "22") (term "2") (newnames "b_24"))
                                                   (rule "less_than_comparison_new" (formula "22") (term "2"))
                                                   (builtin "Update Simplification" (formula "22"))
                                                   (rule "castDelInt" (formula "22") (term "0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "22") (term "0"))
                                                   (rule "times_zero_1" (formula "22") (term "1,0,0,0"))
                                                   (rule "add_zero_right" (formula "22") (term "0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "22") (term "0,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "22") (term "0"))
                                                   (rule "polySimp_mulLiterals" (formula "22") (term "0,0"))
                                                   (rule "polySimp_elimOne" (formula "22") (term "0,0"))
                                                   (rule "replace_known_left" (formula "22") (term "0") (ifseqformula "8"))
                                                   (rule "ifthenelse_true_for" (formula "22"))
                                                   (rule "ifElseSkipElse" (formula "22") (term "2"))
                                                   (rule "assignment" (formula "22") (term "2"))
                                                   (builtin "Update Simplification" (formula "22"))
                                                   (rule "compound_assignment_op_minus" (formula "22") (term "2"))
                                                   (rule "compound_int_cast_expression" (formula "22") (term "2") (inst "#v=j"))
                                                   (rule "variableDeclarationAssign" (formula "22") (term "2"))
                                                   (rule "variableDeclaration" (formula "22") (term "2") (newnames "j_62"))
                                                   (rule "remove_parentheses_right" (formula "22") (term "2"))
                                                   (rule "compound_subtraction_2" (formula "22") (term "2") (inst "#v1=j_64") (inst "#v0=j_63"))
                                                   (rule "variableDeclarationAssign" (formula "22") (term "2"))
                                                   (rule "variableDeclaration" (formula "22") (term "2") (newnames "j_63"))
                                                   (rule "assignment" (formula "22") (term "2"))
                                                   (builtin "Update Simplification" (formula "22"))
                                                   (rule "variableDeclarationAssign" (formula "22") (term "3"))
                                                   (rule "variableDeclaration" (formula "22") (term "3") (newnames "j_64"))
                                                   (rule "remove_parentheses_right" (formula "22") (term "3"))
                                                   (rule "assignment" (formula "22") (term "3"))
                                                   (builtin "Update Simplification" (formula "22"))
                                                   (rule "castDelInt" (formula "22") (term "2"))
                                                   (rule "assignmentSubtractionInt" (formula "22") (term "3"))
                                                   (builtin "Update Simplification" (formula "22"))
                                                   (rule "castDelInt" (formula "22") (term "1,1"))
                                                   (rule "translateJavaSubInt" (formula "22") (term "1"))
                                                   (rule "polySimp_elimSub" (formula "22") (term "1"))
                                                   (rule "polySimp_mulComm0" (formula "22") (term "1,1"))
                                                   (rule "polySimp_rightDist" (formula "22") (term "1,1"))
                                                   (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1"))
                                                   (rule "polySimp_elimOne" (formula "22") (term "1,1,1"))
                                                   (rule "polySimp_mulComm0" (formula "22") (term "0,1,1"))
                                                   (rule "polySimp_addAssoc" (formula "22") (term "1"))
                                                   (rule "widening_identity_cast_5" (formula "22") (term "2"))
                                                   (rule "assignment" (formula "22") (term "2"))
                                                   (builtin "Update Simplification" (formula "22"))
                                                   (rule "castDelInt" (formula "22") (term "0"))
                                                   (rule "methodCallReturn" (formula "22") (term "1"))
                                                   (rule "assignment" (formula "22") (term "1"))
                                                   (builtin "Update Simplification" (formula "22"))
                                                   (rule "castDelInt" (formula "22") (term "0"))
                                                   (rule "methodCallEmpty" (formula "22") (term "1"))
                                                   (rule "emptyModality" (formula "22") (term "1"))
                                                   (builtin "Update Simplification" (formula "22"))
                                                   (rule "notRight" (formula "22"))
                                                   (rule "castDelInt" (formula "1") (term "0"))
                                                   (rule "polySimp_sepPosMonomial" (formula "1"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "0,1"))
                                                   (rule "applyEq" (formula "9") (term "0") (ifseqformula "1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "9"))
                                                   (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "9") (term "1,0"))
                                                   (rule "polySimp_mulAssoc" (formula "9") (term "0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "9") (term "0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "9") (term "0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "9") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "9") (term "0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "9") (term "0"))
                                                   (rule "add_literals" (formula "9") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "9") (term "1,0"))
                                                   (rule "add_zero_right" (formula "9") (term "0"))
                                                   (rule "applyEq" (formula "11") (term "1") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "3") (term "1") (ifseqformula "1"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "9"))
                                                   (rule "mul_literals" (formula "9") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "9") (ifseqformula "6"))
                                                   (rule "qeq_literals" (formula "9") (term "0"))
                                                   (rule "concrete_and_2" (formula "9"))
                                                   (rule "closeFalse" (formula "9"))
                                                )
                                                (branch " Exceptional Post"
                                                   (builtin "Update Simplification" (formula "20"))
                                                   (rule "impRight" (formula "20"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "andLeft" (formula "2"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "notLeft" (formula "2"))
                                                   (rule "close" (formula "23") (ifseqformula "3"))
                                                )
                                             )
                                             (branch " Null Reference (s2_2 = null)"
                                                (builtin "Update Simplification" (formula "21"))
                                                (builtin "Update Simplification" (formula "1"))
                                                (rule "close" (formula "26") (ifseqformula "1"))
                                             )
                                          )
                                          (branch " Exceptional Post"
                                             (builtin "Update Simplification" (formula "18"))
                                             (rule "impRight" (formula "18"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "andLeft" (formula "2"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "notLeft" (formula "2"))
                                             (rule "close" (formula "21") (ifseqformula "3"))
                                          )
                                       )
                                       (branch " Null Reference (s1_2 = null)"
                                          (builtin "Update Simplification" (formula "19"))
                                          (builtin "Update Simplification" (formula "1"))
                                          (rule "close" (formula "23") (ifseqformula "1"))
                                       )
                                    )
                                 )
                              )
                           )
                        )
                        (branch " Exceptional Post"
                           (builtin "Update Simplification" (formula "12"))
                           (rule "impRight" (formula "12"))
                           (rule "andLeft" (formula "1"))
                           (rule "andLeft" (formula "2"))
                           (rule "andLeft" (formula "1"))
                           (rule "andLeft" (formula "1"))
                           (rule "notLeft" (formula "2"))
                           (rule "close" (formula "15") (ifseqformula "3"))
                        )
                     )
                     (branch " Null Reference (s2_2 = null)"
                        (builtin "Update Simplification" (formula "1"))
                        (rule "close" (formula "18") (ifseqformula "1"))
                     )
                  )
                  (branch " Exceptional Post"
                     (builtin "Update Simplification" (formula "10"))
                     (rule "impRight" (formula "10"))
                     (rule "andLeft" (formula "1"))
                     (rule "andLeft" (formula "2"))
                     (rule "andLeft" (formula "1"))
                     (rule "andLeft" (formula "1"))
                     (rule "notLeft" (formula "2"))
                     (rule "close" (formula "13") (ifseqformula "3"))
                  )
               )
               (branch " Null Reference (s1_2 = null)"
                  (builtin "Update Simplification" (formula "1"))
                  (rule "close" (formula "15") (ifseqformula "1"))
               )
            )
            (branch " Exceptional Post"
               (builtin "Update Simplification" (formula "8"))
               (rule "impRight" (formula "8"))
               (rule "andLeft" (formula "1"))
               (rule "andLeft" (formula "2"))
               (rule "andLeft" (formula "1"))
               (rule "andLeft" (formula "1"))
               (rule "notLeft" (formula "2"))
               (rule "close" (formula "11") (ifseqformula "3"))
            )
         )
         (branch " Null Reference (s1_2 = null)"
            (builtin "Update Simplification" (formula "4"))
            (rule "close" (formula "13") (ifseqformula "4"))
         )
      )
      (branch " Exceptional Post"
         (builtin "Update Simplification" (formula "6"))
         (rule "impRight" (formula "6"))
         (rule "andLeft" (formula "1"))
         (rule "andLeft" (formula "1"))
         (rule "andLeft" (formula "2"))
         (rule "andLeft" (formula "1"))
         (rule "notLeft" (formula "2"))
         (rule "close" (formula "9") (ifseqformula "3"))
      )
   )
   (branch " Null Reference (queryReceiver_2 = null)"
      (builtin "Update Simplification" (formula "2"))
      (builtin "Update Simplification" (formula "1"))
      (rule "close" (formula "9") (ifseqformula "1"))
   )
)
(branch " Case 2"
   (rule "lengthGEq0" (newnames "L_3"))
   (rule "resolvequery" (formula "2") (term "0") (inst "queryValue=java_lang_Stringequals_0") (userinteraction))
   (rule "eqSymm" (formula "3") (term "0,2,0"))
   (rule "applyEq" (formula "2") (term "1") (ifseqformula "4"))
   (rule "applyEqRigid" (formula "3") (term "0,0,2,0") (ifseqformula "4"))
   (rule "eqSymm" (formula "3") (term "0,2,0"))
   (rule "variableDeclaration" (formula "3") (newnames "equals"))
   (rule "variableDeclaration" (formula "3") (newnames "arg0_15"))
   (rule "variableDeclaration" (formula "3") (newnames "queryReceiver"))
   (rule "emptyModality" (formula "3"))
   (rule "methodCallWithAssignment" (formula "3") (term "2") (inst "#v0=b"))
   (branch " Normal Execution (queryReceiver != null)"
      (builtin "Update Simplification" (formula "8"))
      (rule "variableDeclaration" (formula "3") (term "2") (newnames "b_1"))
      (rule "variableDeclarationAssign" (formula "3") (term "2"))
      (rule "variableDeclaration" (formula "3") (term "2") (newnames "arg0_16"))
      (rule "assignment" (formula "3") (term "2"))
      (builtin "Update Simplification" (formula "3"))
      (rule "boxToDiamond" (formula "3") (term "2") (userinteraction))
      (builtin "Update Simplification" (formula "3"))
      (rule "notLeft" (formula "3") (userinteraction))
      (builtin "Use Operation Contract" (formula "7") (newnames "arg0_16_0,result_34") (contract "equalsNormal;;"))
      (branch " Pre"
         (builtin "Update Simplification" (formula "7"))
         (rule "replace_known_left" (formula "7") (term "0,1") (ifseqformula "5"))
         (rule "concrete_or_1" (formula "7") (term "1"))
         (rule "concrete_and_3" (formula "7"))
         (rule "replace_known_left" (formula "7") (term "0,1") (ifseqformula "4"))
         (rule "concrete_and_1" (formula "7") (term "1"))
         (rule "replace_known_right" (formula "7") (term "0,1") (ifseqformula "8"))
         (rule "concrete_not_2" (formula "7") (term "1"))
         (rule "concrete_and_3" (formula "7"))
         (rule "close" (formula "7") (ifseqformula "6"))
      )
      (branch " Post"
         (builtin "Update Simplification" (formula "7"))
         (rule "impRight" (formula "7"))
         (rule "andLeft" (formula "1"))
         (rule "andLeft" (formula "2"))
         (rule "andLeft" (formula "1"))
         (rule "eqSymm" (formula "1") (term "1,1"))
         (rule "replace_known_right" (formula "1") (term "0,0,0,1") (ifseqformula "11"))
         (rule "concrete_not_2" (formula "1") (term "0,0,1"))
         (rule "concrete_and_1" (formula "1") (term "0,1"))
         (rule "instanceof_static_type" (formula "1") (term "0,0,1"))
         (rule "boolean_equal" (formula "1") (term "0,1"))
         (rule "concrete_and_1" (formula "1") (term "1"))
         (rule "castDel" (formula "1") (term "0,0,1"))
         (rule "blockEmpty" (formula "9") (term "1"))
         (rule "assignment" (formula "9") (term "1"))
         (builtin "Update Simplification" (formula "9"))
         (rule "methodCallEmpty" (formula "9") (term "1"))
         (rule "emptyModality" (formula "9") (term "1"))
         (builtin "Update Simplification" (formula "9"))
         (rule "notRight" (formula "9"))
         (rule "replace_known_left" (formula "2") (term "0") (ifseqformula "1"))
         (rule "concrete_eq_1" (formula "2"))
         (rule "resolvequery" (formula "12") (term "0") (inst "queryValue=StringDistancedistance_0") (userinteraction))
         (rule "variableDeclaration" (formula "2") (newnames "distance"))
         (rule "variableDeclaration" (formula "2") (newnames "s1"))
         (rule "variableDeclaration" (formula "2") (newnames "s2"))
         (rule "emptyModality" (formula "2"))
         (rule "methodBodyExpand" (formula "2") (term "2"))
         (rule "ifUnfold" (formula "2") (term "2") (inst "#boolv=b"))
         (rule "variableDeclaration" (formula "2") (term "2") (newnames "b_2"))
         (rule "compound_assignment_5" (formula "2") (term "2"))
         (rule "ifElseUnfold" (formula "2") (term "2") (inst "#boolv=b_3"))
         (rule "variableDeclaration" (formula "2") (term "2") (newnames "b_3"))
         (rule "equality_comparison_new" (formula "2") (term "2"))
         (builtin "Update Simplification" (formula "2"))
         (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "12"))
         (rule "concrete_not_2" (formula "2") (term "0"))
         (rule "ifthenelse_true_for" (formula "2"))
         (rule "ifElseSkipThen" (formula "2") (term "2"))
         (rule "assignment" (formula "2") (term "2"))
         (builtin "Update Simplification" (formula "2"))
         (rule "equality_comparison_new" (formula "2") (term "2"))
         (builtin "Update Simplification" (formula "2"))
         (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "13"))
         (rule "concrete_not_2" (formula "2") (term "0"))
         (rule "ifthenelse_true_for" (formula "2"))
         (rule "ifSkipThenConditionInBlock" (formula "2") (term "2"))
         (rule "assignment" (formula "2") (term "2"))
         (builtin "Update Simplification" (formula "2"))
         (rule "blockEmpty" (formula "2") (term "2"))
         (rule "variableDeclarationAssign" (formula "2") (term "2"))
         (rule "variableDeclaration" (formula "2") (term "2") (newnames "d"))
         (rule "assignment" (formula "2") (term "2"))
         (builtin "Update Simplification" (formula "2"))
         (rule "variableDeclarationAssign" (formula "2") (term "3"))
         (rule "variableDeclaration" (formula "2") (term "3") (newnames "m"))
         (rule "methodCallWithAssignment" (formula "2") (term "3") (inst "#v0=j"))
         (branch " Normal Execution (s1 != null)"
            (builtin "Update Simplification" (formula "12"))
            (rule "variableDeclaration" (formula "2") (term "3") (newnames "j_2"))
            (rule "boxToDiamond" (formula "2") (term "3") (userinteraction))
            (builtin "Update Simplification" (formula "2"))
            (rule "notLeft" (formula "2") (userinteraction))
            (builtin "Use Operation Contract" (formula "11") (newnames "result_37") (contract "length;;"))
            (branch " Pre"
               (builtin "Update Simplification" (formula "11"))
               (rule "replace_known_left" (formula "11") (term "0,1") (ifseqformula "8"))
               (rule "concrete_and_1" (formula "11") (term "1"))
               (rule "replace_known_right" (formula "11") (term "0,1") (ifseqformula "12"))
               (rule "concrete_not_2" (formula "11") (term "1"))
               (rule "concrete_and_3" (formula "11"))
               (rule "close" (formula "11") (ifseqformula "10"))
            )
            (branch " Post"
               (builtin "Update Simplification" (formula "11"))
               (rule "inInt" (formula "11") (term "1,1,0,0"))
               (rule "concrete_and_3" (formula "11") (term "1,0,0"))
               (rule "impRight" (formula "11"))
               (rule "andLeft" (formula "1"))
               (rule "andLeft" (formula "1"))
               (rule "andLeft" (formula "2"))
               (rule "eqSymm" (formula "2"))
               (rule "blockEmpty" (formula "13") (term "4"))
               (rule "assignment" (formula "13") (term "4"))
               (builtin "Update Simplification" (formula "13"))
               (rule "ifUnfold" (formula "13") (term "4") (inst "#boolv=b"))
               (rule "variableDeclaration" (formula "13") (term "4") (newnames "b_4"))
               (rule "compound_greater_than_comparison_2" (formula "13") (term "4") (inst "#v1=j_1") (inst "#v0=j"))
               (rule "variableDeclarationAssign" (formula "13") (term "4"))
               (rule "variableDeclaration" (formula "13") (term "4") (newnames "j_3"))
               (rule "methodCallWithAssignment" (formula "13") (term "4") (inst "#v0=j_4"))
               (branch " Normal Execution (s1 != null)"
                  (builtin "Update Simplification" (formula "13"))
                  (rule "variableDeclaration" (formula "13") (term "4") (newnames "j_4"))
                  (builtin "Use Operation Contract" (formula "13") (newnames "result_39") (contract "length;;"))
                  (branch " Pre"
                     (builtin "Update Simplification" (formula "13"))
                     (rule "replace_known_left" (formula "13") (term "0,1") (ifseqformula "10"))
                     (rule "concrete_and_1" (formula "13") (term "1"))
                     (rule "replace_known_right" (formula "13") (term "0,1") (ifseqformula "14"))
                     (rule "concrete_not_2" (formula "13") (term "1"))
                     (rule "concrete_and_3" (formula "13"))
                     (rule "close" (formula "13") (ifseqformula "12"))
                  )
                  (branch " Post"
                     (builtin "Update Simplification" (formula "13"))
                     (rule "inInt" (formula "13") (term "1,1,0,0"))
                     (rule "concrete_and_3" (formula "13") (term "1,0,0"))
                     (rule "impRight" (formula "13"))
                     (rule "andLeft" (formula "1"))
                     (rule "andLeft" (formula "1"))
                     (rule "andLeft" (formula "2"))
                     (rule "eqSymm" (formula "2"))
                     (rule "applyEq" (formula "2") (term "0") (ifseqformula "4"))
                     (rule "eqSymm" (formula "2"))
                     (rule "applyEq" (formula "15") (term "1") (ifseqformula "2"))
                     (rule "blockEmpty" (formula "15") (term "5"))
                     (rule "assignment" (formula "15") (term "5"))
                     (builtin "Update Simplification" (formula "15"))
                     (rule "variableDeclarationAssign" (formula "15") (term "5"))
                     (rule "variableDeclaration" (formula "15") (term "5") (newnames "j_5"))
                     (rule "methodCallWithAssignment" (formula "15") (term "5") (inst "#v0=j_6"))
                     (branch " Normal Execution (s2 != null)"
                        (builtin "Update Simplification" (formula "15"))
                        (rule "variableDeclaration" (formula "15") (term "5") (newnames "j_6"))
                        (builtin "Use Operation Contract" (formula "15") (newnames "result_41") (contract "length;;"))
                        (branch " Pre"
                           (builtin "Update Simplification" (formula "15"))
                           (rule "replace_known_right" (formula "15") (term "0,1,1") (ifseqformula "17"))
                           (rule "concrete_not_2" (formula "15") (term "1,1"))
                           (rule "concrete_and_3" (formula "15") (term "1"))
                           (rule "replace_known_left" (formula "15") (term "1") (ifseqformula "13"))
                           (rule "concrete_and_3" (formula "15"))
                           (rule "close" (formula "15") (ifseqformula "14"))
                        )
                        (branch " Post"
                           (builtin "Update Simplification" (formula "15"))
                           (rule "inInt" (formula "15") (term "1,1,0,0"))
                           (rule "concrete_and_3" (formula "15") (term "1,0,0"))
                           (rule "impRight" (formula "15"))
                           (rule "andLeft" (formula "1"))
                           (rule "andLeft" (formula "1"))
                           (rule "andLeft" (formula "2"))
                           (rule "eqSymm" (formula "2"))
                           (rule "applyEq" (formula "2") (term "0,0") (ifseqformula "9"))
                           (rule "applyEq" (formula "2") (term "0") (ifseqformula "6"))
                           (rule "eqSymm" (formula "2"))
                           (rule "applyEq" (formula "17") (term "2") (ifseqformula "2"))
                           (rule "blockEmpty" (formula "17") (term "6"))
                           (rule "assignment" (formula "17") (term "6"))
                           (builtin "Update Simplification" (formula "17"))
                           (rule "greater_than_comparison_new" (formula "17") (term "6"))
                           (builtin "Update Simplification" (formula "17"))
                           (rule "inEqSimp_gtToGeq" (formula "17") (term "0"))
                           (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0"))
                           (rule "polySimp_pullOutFactor2b" (formula "17") (term "0,0"))
                           (rule "add_literals" (formula "17") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "17") (term "1,0,0"))
                           (rule "add_zero_right" (formula "17") (term "0,0"))
                           (rule "qeq_literals" (formula "17") (term "0"))
                           (rule "ifthenelse_false_for" (formula "17"))
                           (rule "ifSkipThen" (formula "17") (term "4"))
                           (rule "assignment" (formula "17") (term "4"))
                           (builtin "Update Simplification" (formula "17"))
                           (rule "for_to_while" (formula "17") (term "4") (inst "#outerLabel=_label1") (inst "#innerLabel=_label0"))
                           (rule "variableDeclarationAssign" (formula "17") (term "4"))
                           (rule "variableDeclaration" (formula "17") (term "4") (newnames "i"))
                           (rule "assignment" (formula "17") (term "4"))
                           (builtin "Update Simplification" (formula "17"))
                           (rule "whileInvDiamondDec2" (formula "17") (newnames "i_0,d_0,i_1,d_1,anon_3,j_7") (inst "variant=m - i") (inst "inv=d = 0") (inst "#modifies={i,d}") (inst "#v2=j") (inst "#v1=b") (userinteraction))
                           (branch " Invariant Initially Valid"
                              (builtin "Update Simplification" (formula "17"))
                              (rule "lengthGEq0" (inst "l=content(s_1)") (userinteraction))
                              (rule "castDelInt" (formula "18") (term "0,0"))
                              (rule "eqClose" (formula "18") (term "0"))
                              (rule "concrete_and_1" (formula "18"))
                              (rule "castDelInt" (formula "18") (term "1,0"))
                              (rule "polySimp_elimSub" (formula "18") (term "0"))
                              (rule "times_zero_2" (formula "18") (term "1,0"))
                              (rule "add_zero_right" (formula "18") (term "0"))
                              (rule "inEqSimp_geqRight" (formula "18"))
                              (rule "times_zero_1" (formula "1") (term "1,0,0"))
                              (rule "add_zero_right" (formula "1") (term "0,0"))
                              (rule "applyEq" (formula "2") (term "0") (ifseqformula "8"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                              (rule "mul_literals" (formula "1") (term "1"))
                              (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "2"))
                              (rule "qeq_literals" (formula "1") (term "0"))
                              (rule "concrete_and_2" (formula "1"))
                              (rule "closeFalse" (formula "1"))
                           )
                           (branch " Body Preserves Invariant and Decreases Variant"
                              (builtin "Update Simplification" (formula "17"))
                              (rule "concrete_impl_1" (formula "17"))
                              (rule "impRight" (formula "17"))
                              (rule "impRight" (formula "18"))
                              (rule "andLeft" (formula "2"))
                              (rule "andLeft" (formula "2"))
                              (rule "andLeft" (formula "2"))
                              (rule "castDelInt" (formula "5") (term "1"))
                              (rule "castDelInt" (formula "5") (term "1,1"))
                              (rule "polySimp_elimSub" (formula "22") (term "2"))
                              (rule "polySimp_elimSub" (formula "22") (term "0,1,0,1,1,0,6"))
                              (rule "polySimp_elimSub" (formula "22") (term "0,1,1,1,0,6"))
                              (rule "polySimp_elimSub" (formula "5") (term "0"))
                              (rule "polySimp_elimSub" (formula "4") (term "0"))
                              (rule "polySimp_elimSub" (formula "5") (term "1"))
                              (rule "times_zero_2" (formula "5") (term "1,1"))
                              (rule "add_zero_right" (formula "5") (term "1"))
                              (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,1,1,0,6"))
                              (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,1,1,0,6"))
                              (rule "polySimp_addComm0" (formula "22") (term "2"))
                              (rule "polySimp_addComm0" (formula "22") (term "0,1,1,1,0,6"))
                              (rule "polySimp_addComm0" (formula "5") (term "0"))
                              (rule "polySimp_addComm0" (formula "4") (term "0"))
                              (rule "polySimp_addComm0" (formula "22") (term "1,0,1,0,1,1,0,6"))
                              (rule "polySimp_addAssoc" (formula "22") (term "0,1,0,1,1,0,6"))
                              (rule "polySimp_addComm1" (formula "22") (term "0,0,1,0,1,1,0,6"))
                              (rule "inEqSimp_homoInEq0" (formula "5"))
                              (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                              (rule "polySimp_mulAssoc" (formula "5") (term "0,1,0"))
                              (rule "polySimp_mulComm0" (formula "5") (term "0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "5") (term "0,1,0"))
                              (rule "polySimp_elimOne" (formula "5") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "5") (term "0"))
                              (rule "polySimp_addComm0" (formula "5") (term "0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "5") (term "0"))
                              (rule "add_literals" (formula "5") (term "1,1,0"))
                              (rule "times_zero_1" (formula "5") (term "1,0"))
                              (rule "add_zero_right" (formula "5") (term "0"))
                              (rule "applyEq" (formula "2") (term "0") (ifseqformula "3"))
                              (rule "applyEqRigid" (formula "22") (term "0,0,0,0,1,1,0,6") (ifseqformula "3"))
                              (rule "applyEqRigid" (formula "22") (term "0") (ifseqformula "3"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "1,1,1,0,6"))
                              (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,1,0,6"))
                              (rule "polySimp_elimOne" (formula "22") (term "1,1,1,1,0,6"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                              (rule "polySimp_mulLiterals" (formula "4") (term "1"))
                              (rule "polySimp_elimOne" (formula "4") (term "1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,1,1,0,6"))
                              (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,1,1,0,6"))
                              (rule "polySimp_rightDist" (formula "22") (term "1,1,0,1,1,0,6"))
                              (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,1,1,0,6"))
                              (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,1,1,0,6"))
                              (rule "polySimp_rightDist" (formula "22") (term "0,1,1,0,1,1,0,6"))
                              (rule "mul_literals" (formula "22") (term "0,0,1,1,0,1,1,0,6"))
                              (rule "polySimp_mulLiterals" (formula "22") (term "1,0,1,1,0,1,1,0,6"))
                              (rule "polySimp_elimOne" (formula "22") (term "1,0,1,1,0,1,1,0,6"))
                              (rule "variableDeclarationAssign" (formula "1") (term "2"))
                              (rule "variableDeclarationAssign" (formula "22") (term "6"))
                              (rule "variableDeclaration" (formula "1") (term "2") (newnames "b_5"))
                              (rule "variableDeclaration" (formula "22") (term "6") (newnames "exc_23"))
                              (rule "assignment" (formula "22") (term "6"))
                              (builtin "Update Simplification" (formula "22"))
                              (rule "variableDeclaration" (formula "22") (term "7") (newnames "thrownExc_3"))
                              (rule "less_than_comparison_new" (formula "1") (term "2"))
                              (builtin "Update Simplification" (formula "1"))
                              (rule "inEqSimp_ltToLeq" (formula "1") (term "0"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "0,0"))
                              (rule "polySimp_elimOne" (formula "1") (term "0,0"))
                              (rule "ifUnfold" (formula "22") (term "7") (inst "#boolv=b"))
                              (rule "variableDeclaration" (formula "22") (term "7") (newnames "b_6"))
                              (rule "less_than_comparison_new" (formula "22") (term "7"))
                              (builtin "Update Simplification" (formula "22"))
                              (rule "inEqSimp_ltToLeq" (formula "22") (term "0"))
                              (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0"))
                              (rule "polySimp_addComm1" (formula "22") (term "0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "22") (term "0"))
                              (rule "polySimp_mulLiterals" (formula "22") (term "0,0"))
                              (rule "polySimp_elimOne" (formula "22") (term "0,0"))
                              (rule "ifthenelse_split_for" (formula "1"))
                              (branch " result_36 >= 1 + i_0 TRUE"
                                 (rule "replace_known_left" (formula "23") (term "0") (ifseqformula "1"))
                                 (rule "ifthenelse_true_for" (formula "23"))
                                 (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "1"))
                                 (rule "inEqSimp_homoInEq0" (formula "5") (term "0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0"))
                                 (rule "add_literals" (formula "5") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "5") (term "1,0,0"))
                                 (rule "add_literals" (formula "5") (term "0,0"))
                                 (rule "qeq_literals" (formula "5") (term "0"))
                                 (rule "concrete_or_1" (formula "5"))
                                 (rule "true_left" (formula "5"))
                                 (rule "ifEnterThen" (formula "22") (term "7"))
                                 (rule "assignment" (formula "2"))
                                 (rule "assignment" (formula "22") (term "7"))
                                 (builtin "Update Simplification" (formula "22"))
                                 (rule "methodCallEmpty" (formula "2") (term "1"))
                                 (rule "variableDeclarationAssign" (formula "22") (term "7"))
                                 (rule "emptyModality" (formula "2") (term "1"))
                                 (builtin "Update Simplification" (formula "2"))
                                 (rule "boolean_equal" (formula "2"))
                                 (rule "true_left" (formula "2"))
                                 (rule "variableDeclaration" (formula "21") (term "7") (newnames "f_3"))
                                 (rule "compound_subtraction_2" (formula "21") (term "7") (inst "#v1=j_1") (inst "#v0=j"))
                                 (rule "variableDeclarationAssign" (formula "21") (term "7"))
                                 (rule "variableDeclaration" (formula "21") (term "7") (newnames "j_8"))
                                 (rule "methodCallWithAssignment" (formula "21") (term "7") (inst "#v0=j_9"))
                                 (branch " Normal Execution (s1 != null)"
                                    (builtin "Update Simplification" (formula "21"))
                                    (rule "variableDeclaration" (formula "21") (term "7") (newnames "j_9"))
                                    (rule "variableDeclarationAssign" (formula "21") (term "7"))
                                    (rule "variableDeclaration" (formula "21") (term "7") (newnames "arg0_18"))
                                    (rule "assignment" (formula "21") (term "7"))
                                    (builtin "Update Simplification" (formula "21"))
                                    (builtin "Use Operation Contract" (formula "21") (newnames "arg0_18_0,result_43") (contract "charAtExc#charAtNormal;;"))
                                    (branch " Pre"
                                       (builtin "Update Simplification" (formula "21"))
                                       (rule "inInt" (formula "21") (term "1,0"))
                                       (rule "concrete_and_3" (formula "21") (term "0"))
                                       (rule "replace_known_right" (formula "21") (term "0,1,1,0") (ifseqformula "22"))
                                       (rule "concrete_not_2" (formula "21") (term "1,1,0"))
                                       (rule "concrete_and_3" (formula "21") (term "1,0"))
                                       (rule "replace_known_left" (formula "21") (term "1,0") (ifseqformula "18"))
                                       (rule "concrete_and_3" (formula "21") (term "0"))
                                       (rule "replace_known_left" (formula "21") (term "0") (ifseqformula "20"))
                                       (rule "concrete_and_1" (formula "21"))
                                       (rule "orRight" (formula "21"))
                                       (rule "orRight" (formula "21"))
                                       (rule "replace_known_left" (formula "23") (term "0") (ifseqformula "4"))
                                       (rule "concrete_and_1" (formula "23"))
                                       (rule "inEqSimp_geqRight" (formula "22"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                       (rule "inEqSimp_ltRight" (formula "22"))
                                       (rule "times_zero_1" (formula "1") (term "0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0"))
                                       (rule "inEqSimp_ltRight" (formula "22"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0"))
                                       (rule "polySimp_addComm0" (formula "1") (term "0"))
                                       (rule "applyEq" (formula "2") (term "0,1,0") (ifseqformula "12"))
                                       (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "12"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                       (rule "polySimp_elimOne" (formula "2") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "0"))
                                       (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "1"))
                                       (rule "andLeft" (formula "2"))
                                       (rule "inEqSimp_homoInEq1" (formula "2"))
                                       (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                       (rule "add_literals" (formula "2") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "2") (term "1,0"))
                                       (rule "add_zero_right" (formula "2") (term "0"))
                                       (rule "leq_literals" (formula "2"))
                                       (rule "closeFalse" (formula "2"))
                                    )
                                    (branch " Post"
                                       (builtin "Update Simplification" (formula "21"))
                                       (rule "inChar" (formula "21") (term "1,1,0,0"))
                                       (rule "concrete_and_3" (formula "21") (term "1,0,0"))
                                       (rule "impRight" (formula "21"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "andLeft" (formula "2"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "typeEqDerived" (formula "2") (term "0,1,1") (ifseqformula "1"))
                                       (rule "boolean_equal" (formula "2") (term "1,1"))
                                       (rule "concrete_and_3" (formula "2") (term "1"))
                                       (rule "eqSymm" (formula "3") (term "1,1"))
                                       (rule "replace_known_left" (formula "2") (term "0,1") (ifseqformula "1"))
                                       (rule "concrete_not_1" (formula "2") (term "1"))
                                       (rule "concrete_impl_3" (formula "2"))
                                       (rule "notLeft" (formula "2"))
                                       (rule "orRight" (formula "23"))
                                       (rule "replace_known_left" (formula "2") (term "0,0") (ifseqformula "6"))
                                       (rule "concrete_and_1" (formula "2") (term "0"))
                                       (rule "replace_known_left" (formula "2") (term "0,1") (ifseqformula "1"))
                                       (rule "concrete_and_1" (formula "2") (term "1"))
                                       (rule "inEqSimp_geqRight" (formula "24"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                       (rule "inEqSimp_ltRight" (formula "24"))
                                       (rule "mul_literals" (formula "1") (term "0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "3") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0"))
                                       (rule "replace_known_left" (formula "3") (term "0") (ifseqformula "1"))
                                       (rule "concrete_impl_1" (formula "3"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0"))
                                       (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "13"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "0"))
                                       (rule "blockEmpty" (formula "23") (term "8"))
                                       (rule "assignment" (formula "23") (term "8"))
                                       (builtin "Update Simplification" (formula "23"))
                                       (rule "variableDeclarationAssign" (formula "23") (term "8"))
                                       (rule "variableDeclaration" (formula "23") (term "8") (newnames "j_81"))
                                       (rule "methodCallWithAssignment" (formula "23") (term "8") (inst "#v0=j_82"))
                                       (branch " Normal Execution (s2 != null)"
                                          (builtin "Update Simplification" (formula "23"))
                                          (rule "variableDeclaration" (formula "23") (term "8") (newnames "j_82"))
                                          (rule "variableDeclarationAssign" (formula "23") (term "8"))
                                          (rule "variableDeclaration" (formula "23") (term "8") (newnames "arg0_20"))
                                          (rule "assignment" (formula "23") (term "8"))
                                          (builtin "Update Simplification" (formula "23"))
                                          (builtin "Use Operation Contract" (formula "23") (newnames "arg0_20_0,result_49") (contract "charAtExc#charAtNormal;;"))
                                          (branch " Pre"
                                             (builtin "Update Simplification" (formula "23"))
                                             (rule "inInt" (formula "23") (term "1,0"))
                                             (rule "concrete_and_3" (formula "23") (term "0"))
                                             (rule "replace_known_left" (formula "23") (term "0,1,0") (ifseqformula "21"))
                                             (rule "concrete_and_1" (formula "23") (term "1,0"))
                                             (rule "replace_known_right" (formula "23") (term "0,1,0") (ifseqformula "25"))
                                             (rule "concrete_not_2" (formula "23") (term "1,0"))
                                             (rule "concrete_and_3" (formula "23") (term "0"))
                                             (rule "replace_known_left" (formula "23") (term "0") (ifseqformula "22"))
                                             (rule "concrete_and_1" (formula "23"))
                                             (rule "orRight" (formula "23"))
                                             (rule "orRight" (formula "23"))
                                             (rule "replace_known_left" (formula "25") (term "0") (ifseqformula "6"))
                                             (rule "concrete_and_1" (formula "25"))
                                             (rule "inEqSimp_ltRight" (formula "23"))
                                             (rule "times_zero_1" (formula "1") (term "0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0"))
                                             (rule "inEqSimp_geqRight" (formula "23"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                             (rule "inEqSimp_ltRight" (formula "24"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                             (rule "polySimp_addComm1" (formula "2") (term "0"))
                                             (rule "polySimp_addComm0" (formula "1") (term "0"))
                                             (rule "applyEq" (formula "1") (term "0,0,1,0") (ifseqformula "17"))
                                             (rule "applyEq" (formula "2") (term "0,0,1,0") (ifseqformula "17"))
                                             (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "14"))
                                             (rule "applyEq" (formula "2") (term "0,1,0") (ifseqformula "14"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                             (rule "polySimp_elimOne" (formula "1") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                             (rule "polySimp_elimOne" (formula "2") (term "0"))
                                             (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "1"))
                                             (rule "andLeft" (formula "4"))
                                             (rule "inEqSimp_homoInEq1" (formula "4"))
                                             (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                                             (rule "add_literals" (formula "4") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "4") (term "1,0"))
                                             (rule "add_zero_right" (formula "4") (term "0"))
                                             (rule "leq_literals" (formula "4"))
                                             (rule "closeFalse" (formula "4"))
                                          )
                                          (branch " Post"
                                             (builtin "Update Simplification" (formula "23"))
                                             (rule "inChar" (formula "23") (term "1,1,0,0"))
                                             (rule "concrete_and_3" (formula "23") (term "1,0,0"))
                                             (rule "impRight" (formula "23"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "andLeft" (formula "2"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "typeEqDerived" (formula "2") (term "0,1,1") (ifseqformula "1"))
                                             (rule "boolean_equal" (formula "2") (term "1,1"))
                                             (rule "concrete_and_3" (formula "2") (term "1"))
                                             (rule "eqSymm" (formula "3") (term "1,1"))
                                             (rule "replace_known_left" (formula "2") (term "0,1") (ifseqformula "1"))
                                             (rule "concrete_not_1" (formula "2") (term "1"))
                                             (rule "concrete_impl_3" (formula "2"))
                                             (rule "notLeft" (formula "2"))
                                             (rule "orRight" (formula "25"))
                                             (rule "replace_known_left" (formula "2") (term "0,1") (ifseqformula "1"))
                                             (rule "concrete_and_1" (formula "2") (term "1"))
                                             (rule "replace_known_left" (formula "2") (term "0,0") (ifseqformula "8"))
                                             (rule "concrete_and_1" (formula "2") (term "0"))
                                             (rule "inEqSimp_ltRight" (formula "25"))
                                             (rule "mul_literals" (formula "1") (term "0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0"))
                                             (rule "inEqSimp_geqRight" (formula "25"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "3") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0"))
                                             (rule "replace_known_left" (formula "3") (term "0") (ifseqformula "1"))
                                             (rule "concrete_impl_1" (formula "3"))
                                             (rule "polySimp_addComm1" (formula "1") (term "0"))
                                             (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "18"))
                                             (rule "applyEq" (formula "1") (term "0,0,1,0") (ifseqformula "18"))
                                             (rule "applyEq" (formula "5") (term "0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "26") (term "5") (ifseqformula "5"))
                                             (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "15"))
                                             (rule "applyEq" (formula "3") (term "1") (ifseqformula "5"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                             (rule "polySimp_elimOne" (formula "1") (term "0"))
                                             (rule "blockEmpty" (formula "25") (term "9"))
                                             (rule "assignment" (formula "25") (term "9"))
                                             (builtin "Update Simplification" (formula "25"))
                                             (rule "assignmentSubtractionInt" (formula "25") (term "9"))
                                             (builtin "Update Simplification" (formula "25"))
                                             (rule "translateJavaSubInt" (formula "25") (term "2"))
                                             (rule "polySimp_elimSub" (formula "25") (term "2"))
                                             (rule "polySimp_pullOutFactor1" (formula "25") (term "2"))
                                             (rule "add_literals" (formula "25") (term "1,2"))
                                             (rule "times_zero_1" (formula "25") (term "2"))
                                             (rule "ifElseUnfold" (formula "25") (term "8") (inst "#boolv=b"))
                                             (rule "variableDeclaration" (formula "25") (term "8") (newnames "b_27"))
                                             (rule "greater_equal_than_comparison_new" (formula "25") (term "8"))
                                             (builtin "Update Simplification" (formula "25"))
                                             (rule "castDelInt" (formula "25") (term "0,0"))
                                             (rule "qeq_literals" (formula "25") (term "0"))
                                             (rule "ifthenelse_true_for" (formula "25"))
                                             (rule "ifElseSkipElse" (formula "25") (term "8"))
                                             (rule "assignment" (formula "25") (term "8"))
                                             (builtin "Update Simplification" (formula "25"))
                                             (rule "compound_assignment_op_plus" (formula "25") (term "8"))
                                             (rule "compound_int_cast_expression" (formula "25") (term "8") (inst "#v=j"))
                                             (rule "variableDeclarationAssign" (formula "25") (term "8"))
                                             (rule "variableDeclaration" (formula "25") (term "8") (newnames "j_83"))
                                             (rule "remove_parentheses_right" (formula "25") (term "8"))
                                             (rule "compound_addition_2" (formula "25") (term "8") (inst "#v1=j_85") (inst "#v0=j_84"))
                                             (rule "variableDeclarationAssign" (formula "25") (term "8"))
                                             (rule "variableDeclaration" (formula "25") (term "8") (newnames "j_84"))
                                             (rule "assignment" (formula "25") (term "8"))
                                             (builtin "Update Simplification" (formula "25"))
                                             (rule "castDelInt" (formula "25") (term "5"))
                                             (rule "variableDeclarationAssign" (formula "25") (term "9"))
                                             (rule "variableDeclaration" (formula "25") (term "9") (newnames "j_85"))
                                             (rule "remove_parentheses_right" (formula "25") (term "9"))
                                             (rule "assignment" (formula "25") (term "9"))
                                             (builtin "Update Simplification" (formula "25"))
                                             (rule "castDelInt" (formula "25") (term "5"))
                                             (rule "assignmentAdditionInt" (formula "25") (term "9"))
                                             (builtin "Update Simplification" (formula "25"))
                                             (rule "castDelInt" (formula "25") (term "1,4"))
                                             (rule "castDelInt" (formula "25") (term "0,4"))
                                             (rule "translateJavaAddInt" (formula "25") (term "4"))
                                             (rule "add_literals" (formula "25") (term "4"))
                                             (rule "widening_identity_cast_5" (formula "25") (term "8"))
                                             (rule "assignment" (formula "25") (term "8"))
                                             (builtin "Update Simplification" (formula "25"))
                                             (rule "castDelInt" (formula "25") (term "0"))
                                             (rule "blockEmpty" (formula "25") (term "7"))
                                             (rule "preincrement" (formula "25") (term "7"))
                                             (rule "compound_int_cast_expression" (formula "25") (term "7") (inst "#v=j"))
                                             (rule "variableDeclarationAssign" (formula "25") (term "7"))
                                             (rule "variableDeclaration" (formula "25") (term "7") (newnames "j_86"))
                                             (rule "remove_parentheses_right" (formula "25") (term "7"))
                                             (rule "assignmentAdditionInt" (formula "25") (term "7"))
                                             (builtin "Update Simplification" (formula "25"))
                                             (rule "translateJavaAddInt" (formula "25") (term "4"))
                                             (rule "polySimp_addComm0" (formula "25") (term "4"))
                                             (rule "widening_identity_cast_5" (formula "25") (term "8"))
                                             (rule "assignment" (formula "25") (term "8"))
                                             (builtin "Update Simplification" (formula "25"))
                                             (rule "castDelInt" (formula "25") (term "2"))
                                             (rule "tryEmpty" (formula "25") (term "7"))
                                             (rule "methodCallEmpty" (formula "25") (term "7"))
                                             (rule "emptyModality" (formula "25") (term "7"))
                                             (builtin "Update Simplification" (formula "25"))
                                             (rule "boolean_not_equal_2" (formula "25") (term "0,0"))
                                             (rule "boolean_not_equal_2" (formula "25") (term "0,0,1"))
                                             (rule "concrete_impl_2" (formula "25") (term "0"))
                                             (rule "concrete_not_2" (formula "25") (term "0,1"))
                                             (rule "concrete_and_1" (formula "25"))
                                             (rule "concrete_impl_1" (formula "25"))
                                             (rule "castDelInt" (formula "25") (term "1,1"))
                                             (rule "castDelInt" (formula "25") (term "1,1,1,0"))
                                             (rule "castDelInt" (formula "25") (term "0,1,0,0"))
                                             (rule "eqClose" (formula "25") (term "1,0,0"))
                                             (rule "concrete_and_3" (formula "25") (term "0,0"))
                                             (rule "castDelInt" (formula "25") (term "1,0,1,1,0"))
                                             (rule "replace_known_left" (formula "25") (term "0,0") (ifseqformula "6"))
                                             (rule "concrete_and_1" (formula "25") (term "0"))
                                             (rule "replace_known_left" (formula "25") (term "1") (ifseqformula "5"))
                                             (rule "concrete_and_3" (formula "25"))
                                             (rule "inEqSimp_leqRight" (formula "25"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0,1,1,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0,1,1,0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0,1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0"))
                                             (rule "polySimp_mulAssoc" (formula "1") (term "0,1,1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "0,0,1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "0,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "1") (term "0,1,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor2" (formula "1") (term "0,1,0,0"))
                                             (rule "add_literals" (formula "1") (term "1,0,1,0,0"))
                                             (rule "times_zero_1" (formula "1") (term "0,1,0,0"))
                                             (rule "add_zero_left" (formula "1") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor2b" (formula "1") (term "0"))
                                             (rule "add_literals" (formula "1") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "1") (term "1,0"))
                                             (rule "add_zero_right" (formula "1") (term "0"))
                                             (rule "qeq_literals" (formula "1"))
                                             (rule "closeFalse" (formula "1"))
                                          )
                                          (branch " Exceptional Post"
                                             (builtin "Update Simplification" (formula "23"))
                                             (rule "impRight" (formula "23"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "andLeft" (formula "2"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "notLeft" (formula "2"))
                                             (rule "eqSymm" (formula "3") (term "1,1"))
                                             (rule "replace_known_right" (formula "2") (term "0,0,1") (ifseqformula "26"))
                                             (rule "concrete_not_2" (formula "2") (term "0,1"))
                                             (rule "concrete_and_1" (formula "2") (term "1"))
                                             (rule "replace_known_right" (formula "3") (term "0,1") (ifseqformula "26"))
                                             (rule "concrete_and_2" (formula "3") (term "1"))
                                             (rule "concrete_impl_3" (formula "3"))
                                             (rule "notLeft" (formula "3"))
                                             (rule "replace_known_left" (formula "25") (term "0") (ifseqformula "8"))
                                             (rule "concrete_and_1" (formula "25"))
                                             (rule "inEqSimp_ltToLeq" (formula "2") (term "0,0"))
                                             (rule "times_zero_1" (formula "2") (term "1,0,0,0,0"))
                                             (rule "add_zero_right" (formula "2") (term "0,0,0,0"))
                                             (rule "inEqSimp_ltRight" (formula "25"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                             (rule "polySimp_addComm0" (formula "1") (term "0"))
                                             (rule "inEqSimp_commuteGeq" (formula "3") (term "1,0"))
                                             (rule "applyEq" (formula "3") (term "0,0,1,0") (ifseqformula "18"))
                                             (rule "applyEq" (formula "1") (term "0,0,1,0") (ifseqformula "18"))
                                             (rule "applyEq" (formula "3") (term "0,1,0") (ifseqformula "15"))
                                             (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "15"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "0,0"))
                                             (rule "mul_literals" (formula "3") (term "1,0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                             (rule "polySimp_elimOne" (formula "1") (term "0"))
                                             (rule "replace_known_left" (formula "3") (term "1,0") (ifseqformula "1"))
                                             (rule "concrete_or_3" (formula "3") (term "0"))
                                             (rule "concrete_impl_1" (formula "3"))
                                             (rule "inEqSimp_contradInEq0" (formula "6") (ifseqformula "1"))
                                             (rule "andLeft" (formula "6"))
                                             (rule "inEqSimp_homoInEq1" (formula "6"))
                                             (rule "polySimp_pullOutFactor1b" (formula "6") (term "0"))
                                             (rule "add_literals" (formula "6") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "6") (term "1,0"))
                                             (rule "add_zero_right" (formula "6") (term "0"))
                                             (rule "leq_literals" (formula "6"))
                                             (rule "closeFalse" (formula "6"))
                                          )
                                       )
                                       (branch " Null Reference (s2 = null)"
                                          (builtin "Update Simplification" (formula "1"))
                                          (rule "close" (formula "26") (ifseqformula "1"))
                                       )
                                    )
                                    (branch " Exceptional Post"
                                       (builtin "Update Simplification" (formula "21"))
                                       (rule "impRight" (formula "21"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "andLeft" (formula "2"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "notLeft" (formula "2"))
                                       (rule "eqSymm" (formula "3") (term "1,1"))
                                       (rule "replace_known_right" (formula "2") (term "0,0,1") (ifseqformula "24"))
                                       (rule "concrete_not_2" (formula "2") (term "0,1"))
                                       (rule "concrete_and_1" (formula "2") (term "1"))
                                       (rule "replace_known_left" (formula "3") (term "0,0") (ifseqformula "7"))
                                       (rule "concrete_and_1" (formula "3") (term "0"))
                                       (rule "replace_known_right" (formula "3") (term "0,1") (ifseqformula "24"))
                                       (rule "concrete_and_2" (formula "3") (term "1"))
                                       (rule "concrete_impl_3" (formula "3"))
                                       (rule "notLeft" (formula "3"))
                                       (rule "inEqSimp_ltToLeq" (formula "2") (term "0,0"))
                                       (rule "times_zero_1" (formula "2") (term "1,0,0,0,0"))
                                       (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                       (rule "inEqSimp_ltRight" (formula "23"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "1") (term "0"))
                                       (rule "inEqSimp_commuteGeq" (formula "3") (term "1,0"))
                                       (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "13"))
                                       (rule "applyEq" (formula "3") (term "0,1,0") (ifseqformula "13"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "0,0"))
                                       (rule "mul_literals" (formula "3") (term "1,0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "0"))
                                       (rule "replace_known_left" (formula "3") (term "1,0") (ifseqformula "1"))
                                       (rule "concrete_or_3" (formula "3") (term "0"))
                                       (rule "concrete_impl_1" (formula "3"))
                                       (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "1"))
                                       (rule "andLeft" (formula "4"))
                                       (rule "inEqSimp_homoInEq1" (formula "4"))
                                       (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                                       (rule "add_literals" (formula "4") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "4") (term "1,0"))
                                       (rule "add_zero_right" (formula "4") (term "0"))
                                       (rule "leq_literals" (formula "4"))
                                       (rule "closeFalse" (formula "4"))
                                    )
                                 )
                                 (branch " Null Reference (s1 = null)"
                                    (builtin "Update Simplification" (formula "1"))
                                    (rule "close" (formula "23") (ifseqformula "1"))
                                 )
                              )
                              (branch " result_36 >= 1 + i_0 FALSE"
                                 (rule "replace_known_right" (formula "23") (term "0") (ifseqformula "22"))
                                 (rule "ifthenelse_false_for" (formula "23"))
                                 (rule "inEqSimp_geqRight" (formula "22"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                 (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                 (rule "polySimp_elimOne" (formula "1") (term "1"))
                                 (rule "inEqSimp_antiSymm" (formula "5") (ifseqformula "1"))
                                 (rule "applyEq" (formula "24") (term "1,3") (ifseqformula "5"))
                                 (rule "polySimp_pullOutFactor2" (formula "24") (term "3"))
                                 (rule "add_literals" (formula "24") (term "1,3"))
                                 (rule "times_zero_1" (formula "24") (term "3"))
                                 (rule "applyEq" (formula "24") (term "4") (ifseqformula "5"))
                                 (rule "applyEq" (formula "3") (term "2") (ifseqformula "5"))
                                 (rule "applyEq" (formula "6") (term "0") (ifseqformula "5"))
                                 (rule "inEqSimp_homoInEq1" (formula "6"))
                                 (rule "polySimp_pullOutFactor1" (formula "6") (term "0"))
                                 (rule "add_literals" (formula "6") (term "1,0"))
                                 (rule "times_zero_1" (formula "6") (term "0"))
                                 (rule "leq_literals" (formula "6"))
                                 (rule "true_left" (formula "6"))
                                 (rule "applyEq" (formula "1") (term "0") (ifseqformula "5"))
                                 (rule "inEqSimp_homoInEq0" (formula "1"))
                                 (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                                 (rule "add_literals" (formula "1") (term "1,0"))
                                 (rule "times_zero_1" (formula "1") (term "0"))
                                 (rule "qeq_literals" (formula "1"))
                                 (rule "true_left" (formula "1"))
                                 (rule "applyEq" (formula "11") (term "1") (ifseqformula "4"))
                                 (rule "applyEq" (formula "7") (term "1") (ifseqformula "4"))
                                 (rule "applyEq" (formula "9") (term "1") (ifseqformula "4"))
                                 (rule "ifSkipThen" (formula "22") (term "7"))
                                 (rule "assignment" (formula "1"))
                                 (rule "assignment" (formula "22") (term "7"))
                                 (builtin "Update Simplification" (formula "22"))
                                 (rule "methodCallEmpty" (formula "1") (term "1"))
                                 (rule "tryEmpty" (formula "22") (term "7"))
                                 (rule "emptyModality" (formula "1") (term "1"))
                                 (builtin "Update Simplification" (formula "1"))
                                 (rule "boolean_not_equal_2" (formula "1"))
                                 (rule "closeFalse" (formula "1"))
                              )
                           )
                           (branch " Use Case"
                              (builtin "Update Simplification" (formula "17"))
                              (rule "false_to_not_true" (formula "17") (term "0,0,5,1"))
                              (rule "impRight" (formula "17"))
                              (rule "andLeft" (formula "1"))
                              (rule "polySimp_elimSub" (formula "2") (term "0"))
                              (rule "polySimp_addComm0" (formula "2") (term "0"))
                              (rule "applyEq" (formula "19") (term "0") (ifseqformula "1"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1"))
                              (rule "polySimp_elimOne" (formula "2") (term "1"))
                              (rule "variableDeclarationAssign" (formula "19") (term "5"))
                              (rule "variableDeclaration" (formula "19") (term "5") (newnames "b_7"))
                              (rule "less_than_comparison_new" (formula "19") (term "5"))
                              (builtin "Update Simplification" (formula "19"))
                              (rule "inEqSimp_ltToLeq" (formula "19") (term "0"))
                              (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0"))
                              (rule "polySimp_addComm1" (formula "19") (term "0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "19") (term "0"))
                              (rule "polySimp_mulLiterals" (formula "19") (term "0,0"))
                              (rule "polySimp_elimOne" (formula "19") (term "0,0"))
                              (rule "ifthenelse_split_for" (formula "19"))
                              (branch " result_36 >= 1 + i_1 TRUE"
                                 (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "1"))
                                 (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0"))
                                 (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "3") (term "0,0"))
                                 (rule "qeq_literals" (formula "3") (term "0"))
                                 (rule "concrete_or_1" (formula "3"))
                                 (rule "true_left" (formula "3"))
                                 (rule "assignment" (formula "19") (term "4"))
                                 (builtin "Update Simplification" (formula "19"))
                                 (rule "methodCallEmpty" (formula "19") (term "5"))
                                 (rule "emptyModality" (formula "19") (term "5"))
                                 (builtin "Update Simplification" (formula "19"))
                                 (rule "boolean_equal" (formula "19") (term "0,0"))
                                 (rule "concrete_not_1" (formula "19") (term "0"))
                                 (rule "concrete_impl_2" (formula "19"))
                                 (rule "closeTrue" (formula "19"))
                              )
                              (branch " result_36 >= 1 + i_1 FALSE"
                                 (rule "inEqSimp_geqRight" (formula "19"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                 (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                 (rule "polySimp_elimOne" (formula "1") (term "1"))
                                 (rule "inEqSimp_antiSymm" (formula "3") (ifseqformula "1"))
                                 (rule "applyEq" (formula "4") (term "0") (ifseqformula "3"))
                                 (rule "inEqSimp_homoInEq1" (formula "4"))
                                 (rule "polySimp_pullOutFactor1" (formula "4") (term "0"))
                                 (rule "add_literals" (formula "4") (term "1,0"))
                                 (rule "times_zero_1" (formula "4") (term "0"))
                                 (rule "leq_literals" (formula "4"))
                                 (rule "true_left" (formula "4"))
                                 (rule "applyEq" (formula "20") (term "1") (ifseqformula "3"))
                                 (rule "applyEq" (formula "1") (term "0") (ifseqformula "3"))
                                 (rule "inEqSimp_homoInEq0" (formula "1"))
                                 (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                                 (rule "add_literals" (formula "1") (term "1,0"))
                                 (rule "times_zero_1" (formula "1") (term "0"))
                                 (rule "qeq_literals" (formula "1"))
                                 (rule "true_left" (formula "1"))
                                 (rule "applyEq" (formula "6") (term "1") (ifseqformula "2"))
                                 (rule "applyEq" (formula "8") (term "1") (ifseqformula "2"))
                                 (rule "applyEq" (formula "4") (term "1") (ifseqformula "2"))
                                 (rule "assignment" (formula "19") (term "4"))
                                 (builtin "Update Simplification" (formula "19"))
                                 (rule "methodCallEmpty" (formula "19") (term "5"))
                                 (rule "emptyModality" (formula "19") (term "5"))
                                 (builtin "Update Simplification" (formula "19"))
                                 (rule "boolean_not_equal_2" (formula "19") (term "0,0"))
                                 (rule "concrete_not_2" (formula "19") (term "0"))
                                 (rule "concrete_impl_1" (formula "19"))
                                 (rule "blockEmpty" (formula "19") (term "4"))
                                 (rule "compound_subtraction_2" (formula "19") (term "4") (inst "#v1=j_1") (inst "#v0=j"))
                                 (rule "variableDeclarationAssign" (formula "19") (term "4"))
                                 (rule "variableDeclaration" (formula "19") (term "4") (newnames "j_10"))
                                 (rule "methodCallWithAssignment" (formula "19") (term "4") (inst "#v0=j_11"))
                                 (branch " Normal Execution (s1 != null)"
                                    (builtin "Update Simplification" (formula "19"))
                                    (rule "variableDeclaration" (formula "19") (term "4") (newnames "j_75"))
                                    (builtin "Use Operation Contract" (formula "19") (newnames "result_45") (contract "length;;"))
                                    (branch " Pre"
                                       (builtin "Update Simplification" (formula "19"))
                                       (rule "replace_known_left" (formula "19") (term "0,1") (ifseqformula "16"))
                                       (rule "concrete_and_1" (formula "19") (term "1"))
                                       (rule "replace_known_right" (formula "19") (term "0,1") (ifseqformula "20"))
                                       (rule "concrete_not_2" (formula "19") (term "1"))
                                       (rule "concrete_and_3" (formula "19"))
                                       (rule "close" (formula "19") (ifseqformula "18"))
                                    )
                                    (branch " Post"
                                       (builtin "Update Simplification" (formula "19"))
                                       (rule "inInt" (formula "19") (term "1,1,0,0"))
                                       (rule "concrete_and_3" (formula "19") (term "1,0,0"))
                                       (rule "impRight" (formula "19"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "andLeft" (formula "2"))
                                       (rule "eqSymm" (formula "2"))
                                       (rule "applyEq" (formula "2") (term "0") (ifseqformula "10"))
                                       (rule "eqSymm" (formula "2"))
                                       (rule "applyEq" (formula "21") (term "1") (ifseqformula "2"))
                                       (rule "blockEmpty" (formula "21") (term "4"))
                                       (rule "assignment" (formula "21") (term "4"))
                                       (builtin "Update Simplification" (formula "21"))
                                       (rule "variableDeclarationAssign" (formula "21") (term "4"))
                                       (rule "variableDeclaration" (formula "21") (term "4") (newnames "j_76"))
                                       (rule "methodCallWithAssignment" (formula "21") (term "4") (inst "#v0=j_77"))
                                       (branch " Normal Execution (s2 != null)"
                                          (builtin "Update Simplification" (formula "21"))
                                          (rule "variableDeclaration" (formula "21") (term "4") (newnames "j_77"))
                                          (builtin "Use Operation Contract" (formula "21") (newnames "result_47") (contract "length;;"))
                                          (branch " Pre"
                                             (builtin "Update Simplification" (formula "21"))
                                             (rule "replace_known_left" (formula "21") (term "0,1") (ifseqformula "19"))
                                             (rule "concrete_and_1" (formula "21") (term "1"))
                                             (rule "replace_known_right" (formula "21") (term "0,1") (ifseqformula "23"))
                                             (rule "concrete_not_2" (formula "21") (term "1"))
                                             (rule "concrete_and_3" (formula "21"))
                                             (rule "close" (formula "21") (ifseqformula "20"))
                                          )
                                          (branch " Post"
                                             (builtin "Update Simplification" (formula "21"))
                                             (rule "inInt" (formula "21") (term "1,1,0,0"))
                                             (rule "concrete_and_3" (formula "21") (term "1,0,0"))
                                             (rule "impRight" (formula "21"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "andLeft" (formula "2"))
                                             (rule "eqSymm" (formula "2"))
                                             (rule "applyEq" (formula "2") (term "0,0") (ifseqformula "15"))
                                             (rule "applyEq" (formula "2") (term "0") (ifseqformula "12"))
                                             (rule "eqSymm" (formula "2"))
                                             (rule "applyEq" (formula "23") (term "2") (ifseqformula "2"))
                                             (rule "blockEmpty" (formula "23") (term "4"))
                                             (rule "assignment" (formula "23") (term "4"))
                                             (builtin "Update Simplification" (formula "23"))
                                             (rule "assignmentSubtractionInt" (formula "23") (term "4"))
                                             (builtin "Update Simplification" (formula "23"))
                                             (rule "translateJavaSubInt" (formula "23") (term "1"))
                                             (rule "polySimp_elimSub" (formula "23") (term "1"))
                                             (rule "polySimp_pullOutFactor1" (formula "23") (term "1"))
                                             (rule "add_literals" (formula "23") (term "1,1"))
                                             (rule "times_zero_1" (formula "23") (term "1"))
                                             (rule "ifElseUnfold" (formula "23") (term "2") (inst "#boolv=b"))
                                             (rule "variableDeclaration" (formula "23") (term "2") (newnames "b_26"))
                                             (rule "less_than_comparison_new" (formula "23") (term "2"))
                                             (builtin "Update Simplification" (formula "23"))
                                             (rule "castDelInt" (formula "23") (term "0,0"))
                                             (rule "less_literals" (formula "23") (term "0"))
                                             (rule "ifthenelse_false_for" (formula "23"))
                                             (rule "ifElseSkipThen" (formula "23") (term "2"))
                                             (rule "assignment" (formula "23") (term "2"))
                                             (builtin "Update Simplification" (formula "23"))
                                             (rule "compound_assignment_op_plus" (formula "23") (term "2"))
                                             (rule "compound_int_cast_expression" (formula "23") (term "2") (inst "#v=j"))
                                             (rule "variableDeclarationAssign" (formula "23") (term "2"))
                                             (rule "variableDeclaration" (formula "23") (term "2") (newnames "j_78"))
                                             (rule "remove_parentheses_right" (formula "23") (term "2"))
                                             (rule "compound_addition_2" (formula "23") (term "2") (inst "#v1=j_80") (inst "#v0=j_79"))
                                             (rule "variableDeclarationAssign" (formula "23") (term "2"))
                                             (rule "variableDeclaration" (formula "23") (term "2") (newnames "j_79"))
                                             (rule "assignment" (formula "23") (term "2"))
                                             (builtin "Update Simplification" (formula "23"))
                                             (rule "castDelInt" (formula "23") (term "1"))
                                             (rule "variableDeclarationAssign" (formula "23") (term "3"))
                                             (rule "variableDeclaration" (formula "23") (term "3") (newnames "j_80"))
                                             (rule "remove_parentheses_right" (formula "23") (term "3"))
                                             (rule "assignment" (formula "23") (term "3"))
                                             (builtin "Update Simplification" (formula "23"))
                                             (rule "castDelInt" (formula "23") (term "2"))
                                             (rule "assignmentAdditionInt" (formula "23") (term "3"))
                                             (builtin "Update Simplification" (formula "23"))
                                             (rule "castDelInt" (formula "23") (term "0,1"))
                                             (rule "castDelInt" (formula "23") (term "1,1"))
                                             (rule "translateJavaAddInt" (formula "23") (term "1"))
                                             (rule "add_zero_left" (formula "23") (term "1"))
                                             (rule "widening_identity_cast_5" (formula "23") (term "2"))
                                             (rule "assignment" (formula "23") (term "2"))
                                             (builtin "Update Simplification" (formula "23"))
                                             (rule "castDelInt" (formula "23") (term "0"))
                                             (rule "blockEmpty" (formula "23") (term "1"))
                                             (rule "methodCallReturn" (formula "23") (term "1"))
                                             (rule "assignment" (formula "23") (term "1"))
                                             (builtin "Update Simplification" (formula "23"))
                                             (rule "castDelInt" (formula "23") (term "0"))
                                             (rule "methodCallEmpty" (formula "23") (term "1"))
                                             (rule "emptyModality" (formula "23") (term "1"))
                                             (builtin "Update Simplification" (formula "23"))
                                             (rule "notRight" (formula "23"))
                                             (rule "castDelInt" (formula "1") (term "0"))
                                             (rule "eqSymm" (formula "1"))
                                             (rule "close" (formula "26") (ifseqformula "1"))
                                          )
                                          (branch " Exceptional Post"
                                             (builtin "Update Simplification" (formula "21"))
                                             (rule "impRight" (formula "21"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "andLeft" (formula "2"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "notLeft" (formula "2"))
                                             (rule "close" (formula "24") (ifseqformula "3"))
                                          )
                                       )
                                       (branch " Null Reference (s2 = null)"
                                          (builtin "Update Simplification" (formula "22"))
                                          (builtin "Update Simplification" (formula "1"))
                                          (rule "close" (formula "24") (ifseqformula "1"))
                                       )
                                    )
                                    (branch " Exceptional Post"
                                       (builtin "Update Simplification" (formula "19"))
                                       (rule "impRight" (formula "19"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "andLeft" (formula "2"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "notLeft" (formula "2"))
                                       (rule "close" (formula "22") (ifseqformula "3"))
                                    )
                                 )
                                 (branch " Null Reference (s1 = null)"
                                    (builtin "Update Simplification" (formula "20"))
                                    (builtin "Update Simplification" (formula "1"))
                                    (rule "close" (formula "21") (ifseqformula "1"))
                                 )
                              )
                           )
                        )
                        (branch " Exceptional Post"
                           (builtin "Update Simplification" (formula "15"))
                           (rule "impRight" (formula "15"))
                           (rule "andLeft" (formula "1"))
                           (rule "andLeft" (formula "2"))
                           (rule "andLeft" (formula "1"))
                           (rule "andLeft" (formula "1"))
                           (rule "notLeft" (formula "2"))
                           (rule "close" (formula "18") (ifseqformula "3"))
                        )
                     )
                     (branch " Null Reference (s2 = null)"
                        (builtin "Update Simplification" (formula "1"))
                        (rule "close" (formula "18") (ifseqformula "1"))
                     )
                  )
                  (branch " Exceptional Post"
                     (builtin "Update Simplification" (formula "13"))
                     (rule "impRight" (formula "13"))
                     (rule "andLeft" (formula "1"))
                     (rule "andLeft" (formula "2"))
                     (rule "andLeft" (formula "1"))
                     (rule "andLeft" (formula "1"))
                     (rule "notLeft" (formula "2"))
                     (rule "close" (formula "16") (ifseqformula "3"))
                  )
               )
               (branch " Null Reference (s1 = null)"
                  (builtin "Update Simplification" (formula "1"))
                  (rule "close" (formula "15") (ifseqformula "1"))
               )
            )
            (branch " Exceptional Post"
               (builtin "Update Simplification" (formula "11"))
               (rule "impRight" (formula "11"))
               (rule "andLeft" (formula "1"))
               (rule "andLeft" (formula "2"))
               (rule "andLeft" (formula "1"))
               (rule "andLeft" (formula "1"))
               (rule "notLeft" (formula "2"))
               (rule "close" (formula "14") (ifseqformula "3"))
            )
         )
         (branch " Null Reference (s1 = null)"
            (builtin "Update Simplification" (formula "2"))
            (rule "close" (formula "13") (ifseqformula "2"))
         )
      )
      (branch " Exceptional Post"
         (builtin "Update Simplification" (formula "7"))
         (rule "impRight" (formula "7"))
         (rule "andLeft" (formula "1"))
         (rule "andLeft" (formula "1"))
         (rule "andLeft" (formula "2"))
         (rule "andLeft" (formula "1"))
         (rule "notLeft" (formula "2"))
         (rule "close" (formula "10") (ifseqformula "3"))
      )
   )
   (branch " Null Reference (queryReceiver = null)"
      (builtin "Update Simplification" (formula "4"))
      (builtin "Update Simplification" (formula "3"))
      (rule "close" (formula "9") (ifseqformula "3"))
   )
)
)

}
