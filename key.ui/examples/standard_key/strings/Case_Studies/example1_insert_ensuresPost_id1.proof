\settings {
"#Proof-Settings-Config-File
#Thu Sep 17 15:09:39 CEST 2009
[General]SoundNotification=false
[View]FontIndex=2
[StrategyProperty]GOALCHOOSER_OPTIONS_KEY=GOALCHOOSER_DEFAULT
[General]UseOCL=false
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_EXPAND
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_HIGH
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_NONE
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_LOW
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_LOW
[SimultaneousUpdateSimplifier]DeleteEffectLessLocations=true
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[DecisionProcedure]Timeout=60
[View]ShowWholeTaclet=false
[General]ProofAssistant=false
[View]MaxTooltipLines=40
[General]DnDDirectionSensitive=true
[SimultaneousUpdateSimplifier]EagerSimplification=true
[General]StupidMode=true
[Strategy]Timeout=-1
[Strategy]MaximumNumberOfAutomaticApplications=500
[Libraries]Default=acc.key-false, stringRules.key-false, /Users/geilmann/.key/libraries/deprecatedRules.key-false, /Users/geilmann/.key/libraries/acc.key-false, /Users/geilmann/.key/libraries/stringRules.key-false, deprecatedRules.key-false
[StrategyProperty]QUERY_OPTIONS_KEY=QUERY_EXPAND
[Choice]DefaultChoices=throughout-throughout\:toutOn , transactions-transactions\:transactionsOn , assertions-assertions\:on , intRules-intRules\:arithmeticSemanticsIgnoringOF , programRules-programRules\:Java , initialisation-initialisation\:disableStaticInitialisation , transactionAbort-transactionAbort\:abortOn , nullPointerPolicy-nullPointerPolicy\:nullCheck , stringRules-stringRules\:withoutStringPool , javacard-javacard\:jcOff
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[DecisionProcedure]ActiveRule=_noname_
[General]UseJML=true
[View]HideClosedSubtrees=false
[Choice]Choices=throughout-throughout\:toutOn-throughout\:toutOff , transactions-transactions\:transactionsOn-transactions\:transactionsOff , assertions-assertions\:on-assertions\:off-assertions\:safe , intRules-intRules\:javaSemantics-intRules\:arithmeticSemanticsIgnoringOF-intRules\:arithmeticSemanticsCheckingOF , programRules-programRules\:Java-programRules\:ODL , initialisation-initialisation\:enableStaticInitialisation-initialisation\:disableStaticInitialisation , transactionAbort-transactionAbort\:abortOn-transactionAbort\:abortOff , nullPointerPolicy-nullPointerPolicy\:noNullCheck-nullPointerPolicy\:nullCheck , stringRules-stringRules\:withStringPool-stringRules\:withoutStringPool-stringRules\:platformIndependent , javacard-javacard\:jcOff-javacard\:jcOn
[View]HideIntermediateProofsteps=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
"
}

\include "./example1.key";

\programVariables {
java.lang.String _s;
java.lang.Throwable exc;
StringSet self;
java.lang.String s;
boolean result;
}

\functions {
}

\predicates {
}

\problem {
     inReachableState
   & \forall java.lang.String j_0; 
       (     j_0.<created>@(java.lang.Object) = TRUE
           & !j_0 = null
        -> j_0.hashCode@(java.lang.String)() >= 0)
   & \forall StringSet s_0; 
       (     s_0.<created>@(java.lang.Object) = TRUE
           & !s_0 = null
        -> s_0.size@(StringSet) >  (jint)(0))
   & \forall StringSet s_0; 
       (     s_0.<created>@(java.lang.Object) = TRUE
           & !s_0 = null
        ->   !s_0.elements@(StringSet) = null
           &   s_0.elements@(StringSet).length
             = s_0.size@(StringSet))
   & (  self.<created>@(java.lang.Object) = TRUE
      & !self = null)
   & (s.<created>@(java.lang.Object) = TRUE | s = null)
   & (  !s = null
      & !  self.elements@(StringSet)[(jint)(javaMod(s.hashCode@(java.lang.String)(),
                                                    self.size@(StringSet)))]
         = null)
-> {_s:=s}
     \<{
         exc=null;try {
           result=self.insert(_s)@StringSet;
         }  catch (java.lang.Throwable e) {
           exc=e;
         }
       }\> (    result
              = self.elements@(StringSet)[(jint)(javaMod(s.hashCode@(java.lang.String)(),
                                                         self.size@(StringSet)))].equals@(java.lang.String)(s)
            & exc = null)

}

\proof {
(keyLog "0" (keyUser "geilmann" ) (keyVersion "90bb886cd7b78027c8f6703803461f09e5699bb9"))

(autoModeTime "41674")

(branch "dummy ID"
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "4"))
(rule "notLeft" (formula "4"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "5"))
(rule "andLeft" (formula "1"))
(rule "castDelInt" (formula "10") (term "1,0,1,0,0,1"))
(rule "castDelInt" (formula "8") (term "1,0"))
(rule "castDelInt" (formula "3") (term "1,1,0"))
(rule "eqSymm" (formula "10") (term "0,0,1"))
(rule "translateJavaMod" (formula "8") (term "1,0"))
(rule "translateJavaMod" (formula "10") (term "1,0,0,0,0,1"))
(rule "replace_known_right" (formula "6") (term "1") (ifseqformula "9"))
(rule "concrete_or_4" (formula "6"))
(rule "inEqSimp_gtToGeq" (formula "3") (term "1,0"))
(rule "times_zero_1" (formula "3") (term "1,0,0,1,0"))
(rule "add_zero_right" (formula "3") (term "0,0,1,0"))
(rule "jmod_axiom" (formula "8") (term "1,0"))
(rule "polySimp_mulComm1" (formula "8") (term "1,1,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "3") (term "1,0"))
(rule "mul_literals" (formula "3") (term "1,1,0"))
(rule "nnf_imp2or" (formula "4") (term "0"))
(rule "nnf_imp2or" (formula "2") (term "0"))
(rule "nnf_imp2or" (formula "3") (term "0"))
(rule "nnf_notAnd" (formula "4") (term "0,0"))
(rule "double_not" (formula "4") (term "1,0,0"))
(rule "nnf_notAnd" (formula "2") (term "0,0"))
(rule "double_not" (formula "2") (term "1,0,0"))
(rule "nnf_notAnd" (formula "3") (term "0,0"))
(rule "double_not" (formula "3") (term "1,0,0"))
(rule "commute_or" (formula "4") (term "0,0"))
(rule "commute_or" (formula "2") (term "0,0"))
(rule "commute_or" (formula "3") (term "0,0"))
(rule "cnf_rightDist" (formula "4") (term "0"))
(rule "distr_forallAnd" (formula "4"))
(rule "andLeft" (formula "4"))
(rule "commute_or" (formula "5") (term "0"))
(rule "assignment" (formula "11") (term "1"))
(builtin "Update Simplification" (formula "11"))
(rule "jdiv_axiom" (formula "9") (term "0,0,1,1,0"))
(rule "eqSymm" (formula "1"))
(rule "allLeft" (formula "3") (inst "t=s"))
(rule "replace_known_right" (formula "3") (term "0,0") (ifseqformula "12"))
(rule "concrete_or_2" (formula "3") (term "0"))
(rule "replace_known_left" (formula "3") (term "0,0") (ifseqformula "9"))
(rule "concrete_not_1" (formula "3") (term "0"))
(rule "concrete_or_2" (formula "3"))
(rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "3"))
(rule "ifthenelse_true" (formula "1") (term "0"))
(rule "eqSymm" (formula "1"))
(rule "applyEq" (formula "11") (term "0,0,1,1,0") (ifseqformula "1"))
(rule "div_axiom" (formula "1") (term "1") (inst "quotient=quotient_0"))
(rule "polySimp_mulComm0" (formula "1") (term "0,1,0,1"))
(rule "polySimp_mulComm0" (formula "1") (term "0,1,1,1"))
(rule "polySimp_mulComm0" (formula "1") (term "1,1,1,1,1"))
(rule "polySimp_mulComm0" (formula "1") (term "0,2,1,1"))
(rule "allLeft" (formula "6") (inst "t=self"))
(rule "replace_known_right" (formula "6") (term "0,0") (ifseqformula "12"))
(rule "concrete_or_2" (formula "6") (term "0"))
(rule "replace_known_left" (formula "6") (term "0,0") (ifseqformula "10"))
(rule "concrete_not_1" (formula "6") (term "0"))
(rule "concrete_or_2" (formula "6"))
(rule "inEqSimp_contradEq7" (formula "1") (term "0") (ifseqformula "6"))
(rule "times_zero_1" (formula "1") (term "1,0,0,0"))
(rule "add_literals" (formula "1") (term "0,0,0"))
(rule "leq_literals" (formula "1") (term "0,0"))
(rule "concrete_and_2" (formula "1") (term "0"))
(rule "concrete_or_2" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "applyEq" (formula "15") (term "0,0,1,1,0") (ifseqformula "1"))
(rule "polySimp_mulComm0" (formula "15") (term "0,1,1,0"))
(rule "applyEq" (formula "4") (term "1") (ifseqformula "1"))
(rule "inEqSimp_subsumption1" (formula "3") (term "0") (ifseqformula "8"))
(rule "leq_literals" (formula "3") (term "0,0"))
(rule "concrete_or_1" (formula "3") (term "0"))
(rule "ifthenelse_true_for" (formula "3"))
(rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "2"))
(rule "polySimp_rightDist" (formula "3") (term "0,0"))
(rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
(rule "polySimp_elimOne" (formula "3") (term "1,0,0"))
(rule "polySimp_addComm1" (formula "3") (term "0"))
(rule "polySimp_rightDist" (formula "3") (term "0,0,0"))
(rule "mul_literals" (formula "3") (term "0,0,0,0"))
(rule "polySimp_pullOutFactor2b" (formula "3") (term "0,0"))
(rule "add_literals" (formula "3") (term "1,1,0,0"))
(rule "times_zero_1" (formula "3") (term "1,0,0"))
(rule "add_zero_right" (formula "3") (term "0,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "3"))
(rule "mul_literals" (formula "3") (term "1"))
(rule "allLeft" (formula "11") (inst "t=self"))
(rule "replace_known_right" (formula "11") (term "0,0") (ifseqformula "15"))
(rule "concrete_or_2" (formula "11") (term "0"))
(rule "replace_known_left" (formula "11") (term "0,0") (ifseqformula "13"))
(rule "concrete_not_1" (formula "11") (term "0"))
(rule "concrete_or_2" (formula "11"))
(rule "allLeft" (formula "10") (inst "t=self"))
(rule "replace_known_left" (formula "10") (term "0,1,0") (ifseqformula "14"))
(rule "concrete_not_1" (formula "10") (term "1,0"))
(rule "concrete_or_4" (formula "10") (term "0"))
(rule "replace_known_right" (formula "10") (term "0") (ifseqformula "16"))
(rule "concrete_or_2" (formula "10"))
(rule "notLeft" (formula "10"))
(rule "methodBodyExpand" (formula "19") (term "2"))
(rule "ifElseUnfold" (formula "19") (term "2") (inst "#boolv=b"))
(rule "variableDeclaration" (formula "19") (term "2") (newnames "b"))
(rule "compound_assignment_5" (formula "19") (term "2"))
(rule "ifElseUnfold" (formula "19") (term "2") (inst "#boolv=b_1"))
(rule "variableDeclaration" (formula "19") (term "2") (newnames "b_1"))
(rule "equality_comparison_new" (formula "19") (term "2"))
(builtin "Update Simplification" (formula "19"))
(rule "replace_known_right" (formula "19") (term "0,0") (ifseqformula "18"))
(rule "concrete_not_2" (formula "19") (term "0"))
(rule "ifthenelse_true_for" (formula "19"))
(rule "ifElseSkipThen" (formula "19") (term "2"))
(rule "assignment" (formula "19") (term "2"))
(builtin "Update Simplification" (formula "19"))
(rule "compound_greater_equal_than_comparison_1" (formula "19") (term "2") (inst "#v0=j"))
(rule "variableDeclarationAssign" (formula "19") (term "2"))
(rule "variableDeclaration" (formula "19") (term "2") (newnames "j"))
(rule "compound_modulo_1" (formula "19") (term "2") (inst "#v=j_1"))
(rule "variableDeclarationAssign" (formula "19") (term "2"))
(rule "variableDeclaration" (formula "19") (term "2") (newnames "j_1"))
(rule "methodCallWithAssignment" (formula "19") (term "2") (inst "#v0=j_2"))
(branch " Normal Execution (_s != null)"
   (builtin "Update Simplification" (formula "19"))
   (rule "variableDeclaration" (formula "19") (term "2") (newnames "j_2"))
   (rule "only_created_object_are_referenced_non_null" (formula "17") (term "0,0") (ifseqformula "13") (ifseqformula "5") (ifseqformula "15"))
   (rule "array_length_non_negative_3" (formula "12") (term "0") (ifseqformula "6") (ifseqformula "1") (ifseqformula "16"))
   (rule "applyEq" (formula "12") (term "0") (ifseqformula "13"))
   (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "9"))
   (rule "leq_literals" (formula "12") (term "0"))
   (rule "concrete_or_1" (formula "12"))
   (rule "true_left" (formula "12"))
   (rule "only_created_object_are_referenced_by_arrays_non_null" (formula "18") (term "0") (ifseqformula "1") (ifseqformula "6") (ifseqformula "18"))
   (rule "lengthGEq0" (newnames "L_0"))
   (builtin "Use Operation Contract" (formula "22") (term "2") (newnames "result_1") (contract "hashCode;;"))
   (branch " Pre"
      (builtin "Update Simplification" (formula "22"))
      (rule "replace_known_right" (formula "22") (term "0,1,1") (ifseqformula "21"))
      (rule "concrete_not_2" (formula "22") (term "1,1"))
      (rule "concrete_and_3" (formula "22") (term "1"))
      (rule "replace_known_left" (formula "22") (term "1") (ifseqformula "17"))
      (rule "concrete_and_3" (formula "22"))
      (rule "close" (formula "22") (ifseqformula "8"))
   )
   (branch " Post"
      (builtin "Update Simplification" (formula "22"))
      (rule "inInt" (formula "22") (term "1,1,0,0"))
      (rule "concrete_and_3" (formula "22") (term "1,0,0"))
      (rule "impRight" (formula "22"))
      (rule "andLeft" (formula "1"))
      (rule "andLeft" (formula "1"))
      (rule "andLeft" (formula "2"))
      (rule "eqSymm" (formula "2"))
      (rule "blockEmpty" (formula "24") (term "3"))
      (rule "assignment" (formula "24") (term "3"))
      (builtin "Update Simplification" (formula "24"))
      (rule "assignmentModulo" (formula "24") (term "3"))
      (builtin "Update Simplification" (formula "24"))
      (rule "translateJavaMod" (formula "24") (term "2,1"))
      (rule "inEqSimp_contradEq7" (formula "24") (term "0,0") (ifseqformula "13"))
      (rule "times_zero_1" (formula "24") (term "1,0,0,0,0"))
      (rule "add_zero_right" (formula "24") (term "0,0,0,0"))
      (rule "leq_literals" (formula "24") (term "0,0,0"))
      (rule "concrete_and_2" (formula "24") (term "0,0"))
      (rule "concrete_not_2" (formula "24") (term "0"))
      (rule "ifthenelse_true_for" (formula "24"))
      (rule "greater_equal_than_comparison_new" (formula "24") (term "3"))
      (builtin "Update Simplification" (formula "24"))
      (rule "castDelInt" (formula "24") (term "0,0"))
      (rule "jmod_axiom" (formula "24") (term "0,0"))
      (rule "polySimp_mulComm1" (formula "24") (term "1,0,0"))
      (rule "inEqSimp_homoInEq1" (formula "24") (term "0"))
      (rule "polySimp_mulComm0" (formula "24") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "24") (term "1,0,0"))
      (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0"))
      (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0"))
      (rule "polySimp_mulComm0" (formula "24") (term "0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "24") (term "0,0"))
      (rule "polySimp_addComm0" (formula "24") (term "0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0"))
      (rule "polySimp_mulComm0" (formula "24") (term "1,0"))
      (rule "polySimp_rightDist" (formula "24") (term "1,0"))
      (rule "polySimp_mulAssoc" (formula "24") (term "0,1,0"))
      (rule "polySimp_mulComm0" (formula "24") (term "0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "24") (term "0,1,0"))
      (rule "polySimp_elimOne" (formula "24") (term "0,1,0"))
      (rule "jdiv_axiom" (formula "24") (term "0,0,0"))
      (rule "eqSymm" (formula "1"))
      (rule "ifthenelse_split_for" (formula "25"))
      (branch "    jdiv(result_0, self.size) * self.size
<= result_0
 + self.size * -1 TRUE"
         (rule "ifElseSkipElseConditionInBlock" (formula "26") (term "2"))
         (builtin "Update Simplification" (formula "26"))
         (rule "assignment" (formula "26") (term "1"))
         (builtin "Update Simplification" (formula "26"))
         (rule "blockEmpty" (formula "26") (term "1"))
         (rule "blockReturn" (formula "26") (term "1"))
         (rule "methodCallReturn" (formula "26") (term "1"))
         (rule "assignment" (formula "26") (term "1"))
         (builtin "Update Simplification" (formula "26"))
         (rule "methodCallEmpty" (formula "26") (term "2"))
         (rule "tryEmpty" (formula "26") (term "2"))
         (rule "emptyModality" (formula "26") (term "2"))
         (builtin "Update Simplification" (formula "26"))
         (rule "false_to_not_true" (formula "26") (term "0"))
         (rule "eqClose" (formula "26") (term "1"))
         (rule "concrete_and_3" (formula "26"))
         (rule "notRight" (formula "26"))
         (rule "jmod_axiom" (formula "1") (term "1,0,0"))
         (rule "polySimp_mulComm1" (formula "1") (term "1,1,0,0"))
         (rule "applyEq" (formula "1") (term "0,0,1,1,0,0") (ifseqformula "12"))
         (rule "polySimp_mulComm0" (formula "1") (term "0,1,1,0,0"))
         (rule "ifthenelse_split" (formula "3") (term "0"))
         (branch " result_0 >= 0 TRUE"
            (rule "eqSymm" (formula "4"))
            (rule "applyEq" (formula "2") (term "0,0") (ifseqformula "4"))
            (rule "div_axiom" (formula "4") (term "1") (inst "quotient=quotient_1"))
            (rule "polySimp_mulComm0" (formula "4") (term "0,1,0,1"))
            (rule "polySimp_mulComm0" (formula "4") (term "0,2,1,1"))
            (rule "polySimp_mulComm0" (formula "4") (term "1,1,1,1,1"))
            (rule "polySimp_mulComm0" (formula "4") (term "0,1,1,1"))
            (rule "inEqSimp_contradEq7" (formula "4") (term "0") (ifseqformula "18"))
            (rule "times_zero_1" (formula "4") (term "1,0,0,0"))
            (rule "add_zero_right" (formula "4") (term "0,0,0"))
            (rule "leq_literals" (formula "4") (term "0,0"))
            (rule "concrete_and_2" (formula "4") (term "0"))
            (rule "concrete_or_2" (formula "4"))
            (rule "andLeft" (formula "4"))
            (rule "andLeft" (formula "4"))
            (rule "applyEq" (formula "2") (term "0,0") (ifseqformula "4"))
            (rule "polySimp_mulComm0" (formula "2") (term "0"))
            (rule "applyEq" (formula "7") (term "1") (ifseqformula "4"))
            (rule "inEqSimp_subsumption1" (formula "6") (term "0") (ifseqformula "20"))
            (rule "leq_literals" (formula "6") (term "0,0"))
            (rule "concrete_or_1" (formula "6") (term "0"))
            (rule "ifthenelse_true_for" (formula "6"))
            (rule "inEqSimp_contradInEq0" (formula "6") (ifseqformula "2"))
            (rule "andLeft" (formula "6"))
            (rule "inEqSimp_homoInEq1" (formula "6"))
            (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
            (rule "polySimp_rightDist" (formula "6") (term "1,0"))
            (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0"))
            (rule "polySimp_elimOne" (formula "6") (term "1,1,0"))
            (rule "polySimp_mulComm0" (formula "6") (term "0,1,0"))
            (rule "polySimp_addAssoc" (formula "6") (term "0"))
            (rule "polySimp_addComm1" (formula "6") (term "0,0"))
            (rule "polySimp_pullOutFactor2b" (formula "6") (term "0"))
            (rule "add_literals" (formula "6") (term "1,1,0"))
            (rule "times_zero_1" (formula "6") (term "1,0"))
            (rule "add_zero_right" (formula "6") (term "0"))
            (rule "polySimp_pullOutFactor1b" (formula "6") (term "0"))
            (rule "add_literals" (formula "6") (term "1,1,0"))
            (rule "times_zero_1" (formula "6") (term "1,0"))
            (rule "add_literals" (formula "6") (term "0"))
            (rule "leq_literals" (formula "6"))
            (rule "closeFalse" (formula "6"))
         )
         (branch " result_0 >= 0 FALSE"
            (rule "eqSymm" (formula "3"))
            (rule "inEqSimp_geqRight" (formula "23"))
            (rule "times_zero_1" (formula "1") (term "1,0,0"))
            (rule "add_literals" (formula "1") (term "0,0"))
            (rule "applyEq" (formula "3") (term "0,0") (ifseqformula "4"))
            (rule "polySimp_mulComm1" (formula "3") (term "0"))
            (rule "inEqSimp_homoInEq0" (formula "3"))
            (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
            (rule "polySimp_elimOne" (formula "3") (term "1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "1"))
            (rule "mul_literals" (formula "1") (term "1"))
            (rule "inEqSimp_sepPosMonomial1" (formula "3"))
            (rule "polySimp_mulComm0" (formula "3") (term "1"))
            (rule "polySimp_rightDist" (formula "3") (term "1"))
            (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
            (rule "polySimp_elimOne" (formula "3") (term "1,1"))
            (rule "polySimp_mulComm0" (formula "3") (term "0,1"))
            (rule "div_axiom" (formula "4") (term "0,1") (inst "quotient=quotient_2"))
            (rule "polySimp_mulComm0" (formula "4") (term "0,1,0,1"))
            (rule "polySimp_mulComm0" (formula "4") (term "0,1,1,1"))
            (rule "polySimp_mulComm0" (formula "4") (term "0,2,1,1"))
            (rule "polySimp_mulComm0" (formula "4") (term "1,1,1,1,1"))
            (rule "inEqSimp_contradEq7" (formula "4") (term "0") (ifseqformula "18"))
            (rule "times_zero_1" (formula "4") (term "1,0,0,0"))
            (rule "add_zero_right" (formula "4") (term "0,0,0"))
            (rule "leq_literals" (formula "4") (term "0,0"))
            (rule "concrete_and_2" (formula "4") (term "0"))
            (rule "concrete_or_2" (formula "4"))
            (rule "andLeft" (formula "4"))
            (rule "andLeft" (formula "4"))
            (rule "applyEq" (formula "3") (term "0,0") (ifseqformula "4"))
            (rule "polySimp_mulComm0" (formula "3") (term "0"))
            (rule "applyEq" (formula "7") (term "0,1") (ifseqformula "4"))
            (rule "inEqSimp_subsumption1" (formula "6") (term "0") (ifseqformula "20"))
            (rule "leq_literals" (formula "6") (term "0,0"))
            (rule "concrete_or_1" (formula "6") (term "0"))
            (rule "ifthenelse_true_for" (formula "6"))
            (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "5"))
            (rule "polySimp_rightDist" (formula "6") (term "0,0"))
            (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0"))
            (rule "polySimp_elimOne" (formula "6") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "6") (term "0"))
            (rule "polySimp_rightDist" (formula "6") (term "0,0,0"))
            (rule "mul_literals" (formula "6") (term "0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0,0"))
            (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0"))
            (rule "add_literals" (formula "6") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "6") (term "1,0,0"))
            (rule "add_literals" (formula "6") (term "0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "6"))
            (rule "mul_literals" (formula "6") (term "1"))
            (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "5"))
            (rule "polySimp_rightDist" (formula "3") (term "0,0"))
            (rule "polySimp_mulAssoc" (formula "3") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "3") (term "0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "3") (term "0,0,0"))
            (rule "polySimp_elimOne" (formula "3") (term "0,0,0"))
            (rule "polySimp_addComm1" (formula "3") (term "0"))
            (rule "polySimp_pullOutFactor1" (formula "3") (term "0,0"))
            (rule "add_literals" (formula "3") (term "1,0,0"))
            (rule "times_zero_1" (formula "3") (term "0,0"))
            (rule "add_zero_left" (formula "3") (term "0"))
            (rule "inEqSimp_invertInEq1" (formula "3"))
            (rule "polySimp_mulLiterals" (formula "3") (term "0"))
            (rule "times_zero_2" (formula "3") (term "1"))
            (rule "polySimp_elimOne" (formula "3") (term "0"))
            (rule "inEqSimp_contradInEq0" (formula "21") (ifseqformula "3"))
            (rule "qeq_literals" (formula "21") (term "0"))
            (rule "concrete_and_2" (formula "21"))
            (rule "closeFalse" (formula "21"))
         )
      )
      (branch "    jdiv(result_0, self.size) * self.size
<= result_0
 + self.size * -1 FALSE"
         (rule "inEqSimp_leqRight" (formula "25"))
         (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
         (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
         (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
         (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "1"))
         (rule "polySimp_mulComm0" (formula "1") (term "1"))
         (rule "polySimp_rightDist" (formula "1") (term "1"))
         (rule "polySimp_rightDist" (formula "1") (term "0,1"))
         (rule "mul_literals" (formula "1") (term "0,0,1"))
         (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1"))
         (rule "polySimp_elimOne" (formula "1") (term "1,0,1"))
         (rule "ifElseSkipThenConditionInBlock" (formula "26") (term "2"))
         (rule "assignment" (formula "26") (term "2"))
         (builtin "Update Simplification" (formula "26"))
         (rule "blockEmpty" (formula "26") (term "2"))
         (rule "ifElseUnfold" (formula "26") (term "2") (inst "#boolv=b"))
         (rule "variableDeclaration" (formula "26") (term "2") (newnames "b_2"))
         (rule "compound_equality_comparison_1" (formula "26") (term "2") (inst "#v0=v_String"))
         (rule "variableDeclarationAssign" (formula "26") (term "2"))
         (rule "variableDeclaration" (formula "26") (term "2") (newnames "v_String"))
         (rule "eval_order_array_access5" (formula "26") (term "2") (inst "#v1=j") (inst "#ar1=var"))
         (rule "variableDeclarationAssign" (formula "26") (term "2"))
         (rule "variableDeclaration" (formula "26") (term "2") (newnames "var"))
         (rule "assignment" (formula "26") (term "2"))
         (builtin "Update Simplification" (formula "26"))
         (rule "variableDeclarationAssign" (formula "26") (term "3"))
         (rule "variableDeclaration" (formula "26") (term "3") (newnames "j_3"))
         (rule "compound_modulo_1" (formula "26") (term "3") (inst "#v=j_4"))
         (rule "variableDeclarationAssign" (formula "26") (term "3"))
         (rule "variableDeclaration" (formula "26") (term "3") (newnames "j_4"))
         (rule "methodCallWithAssignment" (formula "26") (term "3") (inst "#v0=j_5"))
         (branch " Normal Execution (_s != null)"
            (builtin "Update Simplification" (formula "26"))
            (rule "variableDeclaration" (formula "26") (term "3") (newnames "j_5"))
            (rule "div_axiom" (formula "2") (term "0,2,0") (inst "quotient=quotient_3"))
            (rule "polySimp_mulComm0" (formula "2") (term "0,1,0,1"))
            (rule "polySimp_mulComm0" (formula "2") (term "1,1,1,1,1"))
            (rule "polySimp_mulComm0" (formula "2") (term "0,2,1,1"))
            (rule "polySimp_mulComm0" (formula "2") (term "0,1,1,1"))
            (rule "inEqSimp_contradEq7" (formula "2") (term "0") (ifseqformula "16"))
            (rule "mul_literals" (formula "2") (term "1,0,0,0"))
            (rule "add_zero_right" (formula "2") (term "0,0,0"))
            (rule "leq_literals" (formula "2") (term "0,0"))
            (rule "concrete_and_2" (formula "2") (term "0"))
            (rule "concrete_or_2" (formula "2"))
            (rule "andLeft" (formula "2"))
            (rule "andLeft" (formula "2"))
            (rule "applyEq" (formula "5") (term "0,2,0") (ifseqformula "2"))
            (rule "inEqSimp_subsumption1" (formula "4") (term "0") (ifseqformula "18"))
            (rule "leq_literals" (formula "4") (term "0,0"))
            (rule "concrete_or_1" (formula "4") (term "0"))
            (rule "ifthenelse_true_for" (formula "4"))
            (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "3"))
            (rule "polySimp_rightDist" (formula "4") (term "0,0"))
            (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0"))
            (rule "polySimp_elimOne" (formula "4") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "4") (term "0"))
            (rule "polySimp_rightDist" (formula "4") (term "0,0,0"))
            (rule "mul_literals" (formula "4") (term "0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,0"))
            (rule "polySimp_elimOne" (formula "4") (term "1,0,0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0"))
            (rule "add_literals" (formula "4") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "4") (term "1,0,0"))
            (rule "add_literals" (formula "4") (term "0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "4"))
            (rule "mul_literals" (formula "4") (term "1"))
            (rule "div_axiom" (formula "5") (term "1,0") (inst "quotient=quotient_4"))
            (rule "polySimp_mulComm0" (formula "5") (term "0,1,0,1"))
            (rule "polySimp_mulComm0" (formula "5") (term "0,1,1,1"))
            (rule "polySimp_mulComm0" (formula "5") (term "0,2,1,1"))
            (rule "polySimp_mulComm0" (formula "5") (term "1,1,1,1,1"))
            (rule "inEqSimp_contradEq7" (formula "5") (term "0") (ifseqformula "19"))
            (rule "mul_literals" (formula "5") (term "1,0,0,0"))
            (rule "add_zero_right" (formula "5") (term "0,0,0"))
            (rule "leq_literals" (formula "5") (term "0,0"))
            (rule "concrete_and_2" (formula "5") (term "0"))
            (rule "concrete_or_2" (formula "5"))
            (rule "andLeft" (formula "5"))
            (rule "andLeft" (formula "5"))
            (rule "applyEq" (formula "8") (term "1,0") (ifseqformula "5"))
            (rule "inEqSimp_subsumption1" (formula "7") (term "0") (ifseqformula "21"))
            (rule "leq_literals" (formula "7") (term "0,0"))
            (rule "concrete_or_1" (formula "7") (term "0"))
            (rule "ifthenelse_true_for" (formula "7"))
            (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "6"))
            (rule "polySimp_rightDist" (formula "7") (term "0,0"))
            (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0"))
            (rule "polySimp_elimOne" (formula "7") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "7") (term "0"))
            (rule "polySimp_rightDist" (formula "7") (term "0,0,0"))
            (rule "mul_literals" (formula "7") (term "0,0,0,0"))
            (rule "polySimp_pullOutFactor2b" (formula "7") (term "0,0"))
            (rule "add_literals" (formula "7") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "7") (term "1,0,0"))
            (rule "add_zero_right" (formula "7") (term "0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "7"))
            (rule "mul_literals" (formula "7") (term "1"))
            (builtin "Use Operation Contract" (formula "32") (term "3") (newnames "result_3") (contract "hashCode;;"))
            (branch " Pre"
               (builtin "Update Simplification" (formula "32"))
               (rule "replace_known_left" (formula "32") (term "0,1") (ifseqformula "27"))
               (rule "concrete_and_1" (formula "32") (term "1"))
               (rule "replace_known_right" (formula "32") (term "0,1") (ifseqformula "31"))
               (rule "concrete_not_2" (formula "32") (term "1"))
               (rule "concrete_and_3" (formula "32"))
               (rule "close" (formula "32") (ifseqformula "18"))
            )
            (branch " Post"
               (builtin "Update Simplification" (formula "32"))
               (rule "inInt" (formula "32") (term "1,1,0,0"))
               (rule "concrete_and_3" (formula "32") (term "1,0,0"))
               (rule "impRight" (formula "32"))
               (rule "andLeft" (formula "1"))
               (rule "andLeft" (formula "1"))
               (rule "andLeft" (formula "2"))
               (rule "eqSymm" (formula "2"))
               (rule "applyEq" (formula "2") (term "0") (ifseqformula "12"))
               (rule "eqSymm" (formula "2"))
               (rule "applyEq" (formula "34") (term "2") (ifseqformula "2"))
               (rule "blockEmpty" (formula "34") (term "4"))
               (rule "assignment" (formula "34") (term "4"))
               (builtin "Update Simplification" (formula "34"))
               (rule "assignmentModulo" (formula "34") (term "4"))
               (builtin "Update Simplification" (formula "34"))
               (rule "translateJavaMod" (formula "34") (term "2,1"))
               (rule "inEqSimp_contradEq7" (formula "34") (term "0,0") (ifseqformula "23"))
               (rule "times_zero_1" (formula "34") (term "1,0,0,0,0"))
               (rule "add_zero_right" (formula "34") (term "0,0,0,0"))
               (rule "leq_literals" (formula "34") (term "0,0,0"))
               (rule "concrete_and_2" (formula "34") (term "0,0"))
               (rule "concrete_not_2" (formula "34") (term "0"))
               (rule "ifthenelse_true_for" (formula "34"))
               (rule "assignment_array2" (formula "34") (term "4"))
               (branch " Normal Execution (var != null)"
                  (builtin "Update Simplification" (formula "35"))
                  (builtin "Update Simplification" (formula "34"))
                  (rule "orRight" (formula "34"))
                  (rule "orRight" (formula "34"))
                  (rule "castDelInt" (formula "36") (term "1,2"))
                  (rule "castDelInt" (formula "35") (term "0"))
                  (rule "castDelInt" (formula "34") (term "1"))
                  (rule "inEqSimp_ltRight" (formula "35"))
                  (rule "times_zero_1" (formula "1") (term "0,0"))
                  (rule "add_zero_left" (formula "1") (term "0"))
                  (rule "inEqSimp_leqRight" (formula "35"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                  (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "28"))
                  (rule "polySimp_addComm1" (formula "1") (term "0"))
                  (rule "jmod_axiom" (formula "2") (term "0"))
                  (rule "polySimp_mulComm1" (formula "2") (term "1,0"))
                  (rule "jmod_axiom" (formula "1") (term "0,1,0"))
                  (rule "polySimp_mulComm1" (formula "1") (term "1,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                  (rule "polySimp_elimOne" (formula "1") (term "1,1,0"))
                  (rule "polySimp_mulComm0" (formula "1") (term "0,1,0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0"))
                  (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                  (rule "polySimp_elimOne" (formula "2") (term "0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1"))
                  (rule "polySimp_rightDist" (formula "1") (term "1"))
                  (rule "polySimp_rightDist" (formula "1") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1"))
                  (rule "mul_literals" (formula "1") (term "0,0,1"))
                  (rule "polySimp_elimOne" (formula "1") (term "1,0,1"))
                  (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "1"))
                  (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0"))
                  (rule "polySimp_elimOne" (formula "4") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "4") (term "0"))
                  (rule "polySimp_rightDist" (formula "4") (term "0,0,0"))
                  (rule "mul_literals" (formula "4") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor2b" (formula "4") (term "0,0"))
                  (rule "add_literals" (formula "4") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "4") (term "1,0,0"))
                  (rule "add_zero_right" (formula "4") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                  (rule "mul_literals" (formula "4") (term "1"))
                  (rule "equality_comparison_new" (formula "35") (term "3"))
                  (builtin "Update Simplification" (formula "35"))
                  (rule "jmod_axiom" (formula "35") (term "1,0,0,0"))
                  (rule "polySimp_mulComm1" (formula "35") (term "1,1,0,0,0"))
                  (rule "ifthenelse_negated_for" (formula "35"))
                  (rule "ifthenelse_split_for" (formula "35"))
                  (branch "   self.elements[  result_0
                +   jdiv(result_0, self.size)
                  * self.size
                  * -1]
= null TRUE"
                     (rule "ifElseSkipElse" (formula "36") (term "2"))
                     (rule "assignment" (formula "36") (term "2"))
                     (builtin "Update Simplification" (formula "36"))
                     (rule "eval_order_array_access2" (formula "36") (term "2") (inst "#v0=j") (inst "#ar1=var"))
                     (rule "variableDeclarationAssign" (formula "36") (term "2"))
                     (rule "variableDeclaration" (formula "36") (term "2") (newnames "var_1"))
                     (rule "assignment" (formula "36") (term "2"))
                     (builtin "Update Simplification" (formula "36"))
                     (rule "variableDeclarationAssign" (formula "36") (term "3"))
                     (rule "variableDeclaration" (formula "36") (term "3") (newnames "j_6"))
                     (rule "compound_modulo_1" (formula "36") (term "3") (inst "#v=j_7"))
                     (rule "variableDeclarationAssign" (formula "36") (term "3"))
                     (rule "variableDeclaration" (formula "36") (term "3") (newnames "j_10"))
                     (rule "methodCallWithAssignment" (formula "36") (term "3") (inst "#v0=j_11"))
                     (branch " Normal Execution (_s != null)"
                        (builtin "Update Simplification" (formula "36"))
                        (rule "variableDeclaration" (formula "36") (term "3") (newnames "j_11"))
                        (builtin "Use Operation Contract" (formula "36") (term "3") (newnames "result_5") (contract "hashCode;;"))
                        (branch " Pre"
                           (builtin "Update Simplification" (formula "36"))
                           (rule "replace_known_left" (formula "36") (term "0,1") (ifseqformula "31"))
                           (rule "concrete_and_1" (formula "36") (term "1"))
                           (rule "replace_known_right" (formula "36") (term "0,1") (ifseqformula "35"))
                           (rule "concrete_not_2" (formula "36") (term "1"))
                           (rule "concrete_and_3" (formula "36"))
                           (rule "close" (formula "36") (ifseqformula "22"))
                        )
                        (branch " Post"
                           (builtin "Update Simplification" (formula "36"))
                           (rule "inInt" (formula "36") (term "1,1,0,0"))
                           (rule "concrete_and_3" (formula "36") (term "1,0,0"))
                           (rule "impRight" (formula "36"))
                           (rule "andLeft" (formula "1"))
                           (rule "andLeft" (formula "1"))
                           (rule "andLeft" (formula "2"))
                           (rule "eqSymm" (formula "2"))
                           (rule "applyEq" (formula "2") (term "0") (ifseqformula "16"))
                           (rule "eqSymm" (formula "2"))
                           (rule "applyEq" (formula "38") (term "2") (ifseqformula "2"))
                           (rule "blockEmpty" (formula "38") (term "4"))
                           (rule "assignment" (formula "38") (term "4"))
                           (builtin "Update Simplification" (formula "38"))
                           (rule "assignmentModulo" (formula "38") (term "4"))
                           (builtin "Update Simplification" (formula "38"))
                           (rule "translateJavaMod" (formula "38") (term "2,1"))
                           (rule "inEqSimp_contradEq7" (formula "38") (term "0,0") (ifseqformula "27"))
                           (rule "times_zero_1" (formula "38") (term "1,0,0,0,0"))
                           (rule "add_literals" (formula "38") (term "0,0,0,0"))
                           (rule "leq_literals" (formula "38") (term "0,0,0"))
                           (rule "concrete_and_2" (formula "38") (term "0,0"))
                           (rule "concrete_not_2" (formula "38") (term "0"))
                           (rule "ifthenelse_true_for" (formula "38"))
                           (rule "assignment_to_reference_array_component" (formula "38") (term "4"))
                           (branch " Normal Execution (var_1 != null)"
                              (builtin "Update Simplification" (formula "39"))
                              (builtin "Update Simplification" (formula "1"))
                              (rule "andLeft" (formula "1"))
                              (rule "andLeft" (formula "1"))
                              (rule "andLeft" (formula "1"))
                              (rule "notLeft" (formula "1"))
                              (rule "castDelInt" (formula "41") (term "2"))
                              (rule "castDelInt" (formula "2") (term "0"))
                              (rule "castDelInt" (formula "1") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0"))
                              (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "33"))
                              (rule "polySimp_addComm1" (formula "1") (term "0"))
                              (rule "jmod_axiom" (formula "2") (term "0"))
                              (rule "polySimp_mulComm1" (formula "2") (term "1,0"))
                              (rule "jmod_axiom" (formula "1") (term "1,0"))
                              (rule "polySimp_mulComm1" (formula "1") (term "1,1,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                              (rule "polySimp_elimOne" (formula "2") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                              (rule "polySimp_elimOne" (formula "1") (term "0"))
                              (rule "array_store_static_analyse" (formula "1") (ifseqformula "35"))
                              (rule "true_left" (formula "1"))
                              (rule "methodCallReturn" (formula "38") (term "4"))
                              (rule "assignment" (formula "38") (term "4"))
                              (builtin "Update Simplification" (formula "38"))
                              (rule "methodCallEmpty" (formula "38") (term "5"))
                              (rule "tryEmpty" (formula "38") (term "5"))
                              (rule "emptyModality" (formula "38") (term "5"))
                              (builtin "Update Simplification" (formula "38"))
                              (rule "eqClose" (formula "38") (term "1"))
                              (rule "concrete_and_3" (formula "38"))
                              (rule "ifthenelse_split" (formula "14") (term "0"))
                              (branch " result_0 >= 0 TRUE"
                                 (rule "eqSymm" (formula "15"))
                                 (rule "applyEq" (formula "7") (term "0,0") (ifseqformula "15"))
                                 (rule "polySimp_mulComm0" (formula "7") (term "0"))
                                 (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "14"))
                                 (rule "polySimp_mulComm0" (formula "4") (term "0"))
                                 (rule "applyEq" (formula "3") (term "0,0,1,1,0") (ifseqformula "13"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "0,1,1,0"))
                                 (rule "pullOut" (formula "37") (term "1,3,0") (inst "sk=s_0"))
                                 (builtin "Update Simplification" (formula "1"))
                                 (rule "eqSymm" (formula "1"))
                                 (rule "pullOut" (formula "38") (term "0,3,0") (inst "sk=arrayAccess_java_lang_String_0"))
                                 (builtin "Update Simplification" (formula "1"))
                                 (rule "jmod_axiom" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_mulComm1" (formula "1") (term "1,1,0,0"))
                                 (rule "polySimp_homoEq" (formula "1") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                                 (rule "applyEq" (formula "1") (term "0,0,1,0,0,0") (ifseqformula "15"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,0,0"))
                                 (rule "polySimp_sepNegMonomial" (formula "1") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "0,0,0"))
                                 (rule "pullOut" (formula "1") (term "0,3,0,0,1,1,0,0") (inst "sk=s_1"))
                                 (builtin "Update Simplification" (formula "1"))
                                 (rule "eqSymm" (formula "1"))
                                 (rule "ifthenelse_split" (formula "2") (term "0"))
                                 (branch "   self.size * quotient_4
=   result_0
  +   jmod({self.elements[jmod(result_0, self.size)]:=s}
             s_1.hashCode@(java.lang.String)(),
           self.size)
    * -1 TRUE"
                                    (rule "applyEq" (formula "39") (term "0,0,1,0") (ifseqformula "3"))
                                    (rule "applyEq" (formula "26") (term "0,0,0") (ifseqformula "3"))
                                    (rule "applyEq" (formula "14") (term "0") (ifseqformula "2"))
                                    (rule "inEqSimp_homoInEq0" (formula "14"))
                                    (rule "polySimp_mulComm0" (formula "14") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "14") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0"))
                                    (rule "polySimp_elimOne" (formula "14") (term "1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "14") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "14") (term "0"))
                                    (rule "polySimp_pullOutFactor1" (formula "14") (term "0,0"))
                                    (rule "add_literals" (formula "14") (term "1,0,0"))
                                    (rule "times_zero_1" (formula "14") (term "0,0"))
                                    (rule "add_zero_left" (formula "14") (term "0"))
                                    (rule "applyEq" (formula "41") (term "2,0") (ifseqformula "3"))
                                    (rule "applyEq" (formula "1") (term "1") (ifseqformula "3"))
                                    (rule "applyEq" (formula "4") (term "1") (ifseqformula "3"))
                                    (rule "applyEq" (formula "15") (term "0") (ifseqformula "2"))
                                    (rule "inEqSimp_homoInEq1" (formula "15"))
                                    (rule "polySimp_mulComm0" (formula "15") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "15") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0"))
                                    (rule "polySimp_elimOne" (formula "15") (term "1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "15") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "15") (term "0"))
                                    (rule "polySimp_addComm1" (formula "15") (term "0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,0"))
                                    (rule "add_literals" (formula "15") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "15") (term "1,0,0,0"))
                                    (rule "add_zero_right" (formula "15") (term "0,0,0"))
                                    (rule "applyEq" (formula "36") (term "0,0") (ifseqformula "3"))
                                    (rule "applyEq" (formula "24") (term "0,1") (ifseqformula "3"))
                                    (rule "applyEq" (formula "7") (term "0,1,1,0") (ifseqformula "2"))
                                    (rule "polySimp_mulComm0" (formula "7") (term "1,1,0"))
                                    (rule "polySimp_rightDist" (formula "7") (term "1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "7") (term "1,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "7") (term "1,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "7") (term "0,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "7") (term "1,0"))
                                    (rule "polySimp_pullOutFactor1" (formula "7") (term "0,1,0"))
                                    (rule "add_literals" (formula "7") (term "1,0,1,0"))
                                    (rule "times_zero_1" (formula "7") (term "0,1,0"))
                                    (rule "add_zero_left" (formula "7") (term "1,0"))
                                    (rule "applyEq" (formula "23") (term "0,0,0") (ifseqformula "3"))
                                    (rule "applyEq" (formula "25") (term "0,1,0,1") (ifseqformula "3"))
                                    (rule "applyEq" (formula "21") (term "0,0,1,0,0") (ifseqformula "3"))
                                    (rule "applyEq" (formula "19") (term "0,0,0") (ifseqformula "3"))
                                    (rule "applyEq" (formula "40") (term "0") (ifseqformula "3"))
                                    (rule "applyEq" (formula "28") (term "0,0") (ifseqformula "3"))
                                    (rule "applyEq" (formula "2") (term "2,0,0,1,1") (ifseqformula "3"))
                                    (rule "applyEqRigid" (formula "41") (term "1,3,0") (ifseqformula "4"))
                                    (rule "applyEqRigid" (formula "2") (term "0,3,0,0,1,1") (ifseqformula "1"))
                                    (rule "applyEq" (formula "7") (term "2,0,1,0") (ifseqformula "3"))
                                    (rule "applyEqRigid" (formula "15") (term "0,3,0,1,0") (ifseqformula "1"))
                                    (rule "applyEqRigid" (formula "14") (term "0,3,0,0") (ifseqformula "1"))
                                    (rule "applyEqRigid" (formula "7") (term "0,3,0,1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "15") (term "2,0,1,0") (ifseqformula "3"))
                                    (rule "applyEq" (formula "14") (term "2,0,0") (ifseqformula "3"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "15"))
                                    (rule "polySimp_mulComm0" (formula "15") (term "1"))
                                    (rule "polySimp_rightDist" (formula "15") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "15") (term "1,1"))
                                    (rule "mul_literals" (formula "15") (term "0,1"))
                                    (rule "polySimp_elimOne" (formula "15") (term "1,1"))
                                    (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "24"))
                                    (rule "polySimp_rightDist" (formula "25") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "25") (term "1,0,0"))
                                    (rule "polySimp_elimOne" (formula "25") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "25") (term "0"))
                                    (rule "polySimp_rightDist" (formula "25") (term "0,0,0"))
                                    (rule "mul_literals" (formula "25") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor2b" (formula "25") (term "0,0"))
                                    (rule "add_literals" (formula "25") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "25") (term "1,0,0"))
                                    (rule "add_literals" (formula "25") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "25"))
                                    (rule "mul_literals" (formula "25") (term "1"))
                                    (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "15"))
                                    (rule "times_zero_1" (formula "14") (term "0,0"))
                                    (rule "add_zero_left" (formula "14") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                                    (rule "mul_literals" (formula "14") (term "1"))
                                    (rule "jdiv_axiom" (formula "26") (term "0"))
                                    (rule "eqSymm" (formula "26"))
                                    (rule "replace_known_left" (formula "26") (term "0,0") (ifseqformula "29"))
                                    (rule "ifthenelse_true" (formula "26") (term "0"))
                                    (rule "eqSymm" (formula "26"))
                                    (rule "applyEq" (formula "26") (term "0") (ifseqformula "27"))
                                    (rule "eqSymm" (formula "26"))
                                    (rule "div_axiom" (formula "23") (term "0") (inst "quotient=quotient_5"))
                                    (rule "polySimp_mulComm0" (formula "23") (term "0,1,0,1"))
                                    (rule "polySimp_mulComm0" (formula "23") (term "1,1,1,1,1"))
                                    (rule "polySimp_mulComm0" (formula "23") (term "0,1,1,1"))
                                    (rule "polySimp_mulComm0" (formula "23") (term "0,2,1,1"))
                                    (rule "applyEq" (formula "23") (term "0,0,0,1") (ifseqformula "24"))
                                    (rule "inEqSimp_contradEq7" (formula "23") (term "0") (ifseqformula "31"))
                                    (rule "times_zero_1" (formula "23") (term "1,0,0,0"))
                                    (rule "add_zero_right" (formula "23") (term "0,0,0"))
                                    (rule "leq_literals" (formula "23") (term "0,0"))
                                    (rule "concrete_and_2" (formula "23") (term "0"))
                                    (rule "concrete_or_2" (formula "23"))
                                    (rule "andLeft" (formula "23"))
                                    (rule "andLeft" (formula "23"))
                                    (rule "applyEq" (formula "27") (term "1,0") (ifseqformula "23"))
                                    (rule "applyEqRigid" (formula "21") (term "1,0,1,1,0,0") (ifseqformula "23"))
                                    (rule "applyEqRigid" (formula "27") (term "1,0") (ifseqformula "23"))
                                    (rule "replace_known_left" (formula "25") (term "1") (ifseqformula "27"))
                                    (rule "applyEqRigid" (formula "41") (term "1,0,1,1,0") (ifseqformula "23"))
                                    (rule "applyEqRigid" (formula "28") (term "1") (ifseqformula "23"))
                                    (rule "applyEq" (formula "26") (term "1") (ifseqformula "23"))
                                    (rule "inEqSimp_subsumption1" (formula "25") (term "0") (ifseqformula "32"))
                                    (rule "leq_literals" (formula "25") (term "0,0"))
                                    (rule "concrete_or_1" (formula "25") (term "0"))
                                    (rule "ifthenelse_true_for" (formula "25"))
                                    (rule "true_left" (formula "25"))
                                    (rule "inEqSimp_exactShadow3" (formula "26") (ifseqformula "24"))
                                    (rule "polySimp_rightDist" (formula "26") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0"))
                                    (rule "polySimp_elimOne" (formula "26") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "26") (term "0"))
                                    (rule "polySimp_rightDist" (formula "26") (term "0,0,0"))
                                    (rule "mul_literals" (formula "26") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor2b" (formula "26") (term "0,0"))
                                    (rule "add_literals" (formula "26") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "26") (term "1,0,0"))
                                    (rule "add_literals" (formula "26") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "26"))
                                    (rule "mul_literals" (formula "26") (term "1"))
                                    (rule "only_created_object_are_referenced_by_arrays_non_null" (formula "21") (term "0,0") (ifseqformula "22") (ifseqformula "28") (ifseqformula "40"))
                                    (rule "resolvequery" (formula "42") (term "3,0") (inst "queryValue=java_lang_Stringequals_0") (userinteraction))
                                    (builtin "Update Simplification" (formula "1"))
                                    (builtin "Update Simplification" (formula "44"))
                                    (rule "resolvequery" (formula "42") (term "0,1,0") (inst "queryValue=java_lang_StringhashCode_0") (userinteraction))
                                    (rule "eqSymm" (formula "4") (term "0,2,0,3"))
                                    (rule "eqSymm" (formula "2") (term "0,1,0"))
                                    (rule "applyEq" (formula "33") (term "0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "29") (term "0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "28") (term "1") (ifseqformula "1"))
                                    (rule "apply_eq_boolean" (formula "3") (term "1") (ifseqformula "46"))
                                    (rule "false_to_not_true" (formula "3"))
                                    (rule "notLeft" (formula "3"))
                                    (rule "apply_eq_boolean_rigid" (formula "3") (term "0,0,2,0,3") (ifseqformula "46"))
                                    (rule "eqSymm" (formula "3") (term "0,2,0,3"))
                                    (rule "false_to_not_true" (formula "3") (term "0,2,0,3"))
                                    (rule "applyEq" (formula "24") (term "0,1,0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "29") (term "1,0,1") (ifseqformula "1"))
                                    (rule "inEqSimp_exactShadow3" (formula "29") (ifseqformula "27"))
                                    (rule "polySimp_rightDist" (formula "29") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0"))
                                    (rule "polySimp_elimOne" (formula "29") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "29") (term "0"))
                                    (rule "polySimp_rightDist" (formula "29") (term "0,0,0"))
                                    (rule "mul_literals" (formula "29") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor2b" (formula "29") (term "0,0"))
                                    (rule "add_literals" (formula "29") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "29") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "29") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "29"))
                                    (rule "mul_literals" (formula "29") (term "1"))
                                    (rule "variableDeclaration" (formula "2") (newnames "hcode"))
                                    (rule "variableDeclaration" (formula "3") (term "3") (newnames "equals"))
                                    (rule "variableDeclaration" (formula "2") (newnames "queryReceiver"))
                                    (rule "variableDeclaration" (formula "3") (term "3") (newnames "arg0"))
                                    (rule "emptyModality" (formula "2"))
                                    (rule "variableDeclaration" (formula "3") (term "3") (newnames "queryReceiver_1"))
                                    (rule "emptyModality" (formula "3") (term "3"))
                                    (builtin "Update Simplification" (formula "3"))
                                    (rule "jdiv_axiom" (formula "30") (term "0"))
                                    (rule "eqSymm" (formula "30"))
                                    (rule "replace_known_left" (formula "30") (term "0,0") (ifseqformula "33"))
                                    (rule "ifthenelse_true" (formula "30") (term "0"))
                                    (rule "eqSymm" (formula "30"))
                                    (rule "applyEq" (formula "31") (term "0") (ifseqformula "30"))
                                    (rule "applyEq" (formula "30") (term "1") (ifseqformula "28"))
                                    (rule "div_axiom" (formula "28") (term "0") (inst "quotient=quotient_7"))
                                    (rule "polySimp_mulComm0" (formula "28") (term "0,1,0,1"))
                                    (rule "polySimp_mulComm0" (formula "28") (term "0,1,1,1"))
                                    (rule "polySimp_mulComm0" (formula "28") (term "1,1,1,1,1"))
                                    (rule "polySimp_mulComm0" (formula "28") (term "0,2,1,1"))
                                    (rule "applyEq" (formula "28") (term "0,0,0,1") (ifseqformula "29"))
                                    (rule "inEqSimp_contradEq7" (formula "28") (term "0") (ifseqformula "35"))
                                    (rule "times_zero_1" (formula "28") (term "1,0,0,0"))
                                    (rule "add_literals" (formula "28") (term "0,0,0"))
                                    (rule "leq_literals" (formula "28") (term "0,0"))
                                    (rule "concrete_and_2" (formula "28") (term "0"))
                                    (rule "concrete_or_2" (formula "28"))
                                    (rule "andLeft" (formula "28"))
                                    (rule "andLeft" (formula "28"))
                                    (rule "applyEq" (formula "24") (term "1,0,1,1,0,0") (ifseqformula "28"))
                                    (rule "applyEq" (formula "32") (term "1,0") (ifseqformula "28"))
                                    (rule "replace_known_left" (formula "30") (term "1") (ifseqformula "32"))
                                    (rule "applyEqRigid" (formula "27") (term "1,0") (ifseqformula "28"))
                                    (rule "applyEq" (formula "46") (term "1,0,1,1,0") (ifseqformula "27"))
                                    (rule "applyEqRigid" (formula "26") (term "1") (ifseqformula "27"))
                                    (rule "applyEq" (formula "30") (term "1") (ifseqformula "27"))
                                    (rule "applyEqRigid" (formula "32") (term "1") (ifseqformula "27"))
                                    (rule "inEqSimp_subsumption1" (formula "29") (term "0") (ifseqformula "36"))
                                    (rule "leq_literals" (formula "29") (term "0,0"))
                                    (rule "concrete_or_1" (formula "29") (term "0"))
                                    (rule "ifthenelse_true_for" (formula "29"))
                                    (rule "true_left" (formula "29"))
                                    (rule "inEqSimp_exactShadow3" (formula "30") (ifseqformula "28"))
                                    (rule "polySimp_rightDist" (formula "30") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "30") (term "1,0,0"))
                                    (rule "polySimp_elimOne" (formula "30") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "30") (term "0"))
                                    (rule "polySimp_rightDist" (formula "30") (term "0,0,0"))
                                    (rule "mul_literals" (formula "30") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor2b" (formula "30") (term "0,0"))
                                    (rule "add_literals" (formula "30") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "30") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "30") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "30"))
                                    (rule "mul_literals" (formula "30") (term "1"))
                                    (rule "methodCallWithAssignment" (formula "2") (term "1") (inst "#v0=j"))
                                    (branch " Normal Execution (queryReceiver != null)"
                                       (builtin "Update Simplification" (formula "42"))
                                       (rule "variableDeclaration" (formula "2") (term "1") (newnames "j_12"))
                                       (rule "methodCallWithAssignment" (formula "3") (term "5") (inst "#v0=b"))
                                       (branch " Normal Execution (queryReceiver_1 != null)"
                                          (builtin "Update Simplification" (formula "42"))
                                          (rule "variableDeclaration" (formula "3") (term "5") (newnames "b_5"))
                                          (rule "variableDeclarationAssign" (formula "3") (term "5"))
                                          (rule "variableDeclaration" (formula "3") (term "5") (newnames "arg0_1"))
                                          (rule "assignment" (formula "3") (term "5"))
                                          (builtin "Update Simplification" (formula "3"))
                                          (rule "allLeft" (formula "34") (inst "t=arrayAccess_java_lang_String_0"))
                                          (rule "replace_known_left" (formula "34") (term "0,1,0") (ifseqformula "42"))
                                          (rule "concrete_not_1" (formula "34") (term "1,0"))
                                          (rule "concrete_or_4" (formula "34") (term "0"))
                                          (rule "replace_known_right" (formula "34") (term "0") (ifseqformula "47"))
                                          (rule "concrete_or_2" (formula "34"))
                                          (rule "applyEq" (formula "34") (term "0") (ifseqformula "1"))
                                          (rule "only_created_object_are_referenced_by_arrays_non_null" (formula "24") (term "0,0") (ifseqformula "25") (ifseqformula "32") (ifseqformula "45"))
                                          (rule "boxToDiamond" (formula "2") (term "1") (userinteraction))
                                          (builtin "Update Simplification" (formula "2"))
                                          (rule "notLeft" (formula "2") (userinteraction))
                                          (rule "boxToDiamond" (formula "2") (term "5") (userinteraction))
                                          (builtin "Update Simplification" (formula "2"))
                                          (rule "notLeft" (formula "2") (userinteraction))
                                          (rule "double_not" (formula "40") (term "0,5"))
                                          (builtin "Use Operation Contract" (formula "40") (term "5") (newnames "arg0_1_0,result_7") (contract "equalsNormal;;"))
                                          (branch " Pre"
                                             (builtin "Update Simplification" (formula "40"))
                                             (rule "replace_known_left" (formula "40") (term "0,1,0") (ifseqformula "39"))
                                             (rule "concrete_and_1" (formula "40") (term "1,0"))
                                             (rule "replace_known_right" (formula "40") (term "0,1,0") (ifseqformula "46"))
                                             (rule "concrete_not_2" (formula "40") (term "1,0"))
                                             (rule "concrete_and_3" (formula "40") (term "0"))
                                             (rule "replace_known_left" (formula "40") (term "0,1") (ifseqformula "39"))
                                             (rule "concrete_or_1" (formula "40") (term "1"))
                                             (rule "concrete_and_3" (formula "40"))
                                             (rule "inReachableStateRewrite" (formula "40") (ifseqformula "30"))
                                             (builtin "Update Simplification" (formula "40"))
                                             (rule "eq_imp" (formula "40") (term "0,0,1"))
                                             (rule "orRight" (formula "40"))
                                             (rule "jmod_axiom" (formula "41") (term "1,1,0,0,1,1,0,1,0,0,1"))
                                             (rule "polySimp_mulComm1" (formula "41") (term "1,1,1,0,0,1,1,0,1,0,0,1"))
                                             (rule "polySimp_homoEq" (formula "41") (term "1,0,0,1,1,0,1,0,0,1"))
                                             (rule "polySimp_addComm1" (formula "41") (term "0,1,0,0,1,1,0,1,0,0,1"))
                                             (rule "applyEq" (formula "41") (term "0,0,1,0,1,0,0,1,1,0,1,0,0,1") (ifseqformula "18"))
                                             (rule "polySimp_mulComm0" (formula "41") (term "0,1,0,1,0,0,1,1,0,1,0,0,1"))
                                             (rule "applyEq" (formula "41") (term "0,1,0,1,0,0,1,1,0,1,0,0,1") (ifseqformula "3"))
                                             (rule "polySimp_mulComm0" (formula "41") (term "1,0,1,0,0,1,1,0,1,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "41") (term "1,0,1,0,0,1,1,0,1,0,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,1,0,0,1,1,0,1,0,0,1"))
                                             (rule "polySimp_elimOne" (formula "41") (term "1,1,0,1,0,0,1,1,0,1,0,0,1"))
                                             (rule "polySimp_mulComm0" (formula "41") (term "0,1,0,1,0,0,1,1,0,1,0,0,1"))
                                             (rule "polySimp_addComm1" (formula "41") (term "0,1,0,0,1,1,0,1,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "41") (term "0,0,1,0,0,1,1,0,1,0,0,1"))
                                             (rule "polySimp_pullOutFactor1" (formula "41") (term "0,0,0,1,0,0,1,1,0,1,0,0,1"))
                                             (rule "add_literals" (formula "41") (term "1,0,0,0,1,0,0,1,1,0,1,0,0,1"))
                                             (rule "times_zero_1" (formula "41") (term "0,0,0,1,0,0,1,1,0,1,0,0,1"))
                                             (rule "add_zero_left" (formula "41") (term "0,0,1,0,0,1,1,0,1,0,0,1"))
                                             (rule "jmod_axiom" (formula "41") (term "1,1,0,0,0,0,1,0,1,0,0,1"))
                                             (rule "polySimp_mulComm1" (formula "41") (term "1,1,1,0,0,0,0,1,0,1,0,0,1"))
                                             (rule "polySimp_homoEq" (formula "41") (term "1,0,0,0,0,1,0,1,0,0,1"))
                                             (rule "polySimp_addComm1" (formula "41") (term "0,1,0,0,0,0,1,0,1,0,0,1"))
                                             (rule "applyEq" (formula "41") (term "0,0,1,0,1,0,0,0,0,1,0,1,0,0,1") (ifseqformula "18"))
                                             (rule "polySimp_mulComm0" (formula "41") (term "0,1,0,1,0,0,0,0,1,0,1,0,0,1"))
                                             (rule "applyEq" (formula "41") (term "0,1,0,1,0,0,0,0,1,0,1,0,0,1") (ifseqformula "3"))
                                             (rule "polySimp_mulComm0" (formula "41") (term "1,0,1,0,0,0,0,1,0,1,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "41") (term "1,0,1,0,0,0,0,1,0,1,0,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,1,0,0,0,0,1,0,1,0,0,1"))
                                             (rule "polySimp_elimOne" (formula "41") (term "1,1,0,1,0,0,0,0,1,0,1,0,0,1"))
                                             (rule "polySimp_mulComm0" (formula "41") (term "0,1,0,1,0,0,0,0,1,0,1,0,0,1"))
                                             (rule "polySimp_addComm1" (formula "41") (term "0,1,0,0,0,0,1,0,1,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "41") (term "0,0,1,0,0,0,0,1,0,1,0,0,1"))
                                             (rule "polySimp_pullOutFactor1" (formula "41") (term "0,0,0,1,0,0,0,0,1,0,1,0,0,1"))
                                             (rule "add_literals" (formula "41") (term "1,0,0,0,1,0,0,0,0,1,0,1,0,0,1"))
                                             (rule "times_zero_1" (formula "41") (term "0,0,0,1,0,0,0,0,1,0,1,0,0,1"))
                                             (rule "add_zero_left" (formula "41") (term "0,0,1,0,0,0,0,1,0,1,0,0,1"))
                                             (rule "jmod_axiom" (formula "41") (term "1,1,0,0,0,1"))
                                             (rule "polySimp_mulComm1" (formula "41") (term "1,1,1,0,0,0,1"))
                                             (rule "polySimp_homoEq" (formula "41") (term "1,0,0,0,1"))
                                             (rule "polySimp_addComm1" (formula "41") (term "0,1,0,0,0,1"))
                                             (rule "applyEq" (formula "41") (term "0,0,1,0,1,0,0,0,1") (ifseqformula "18"))
                                             (rule "polySimp_mulComm0" (formula "41") (term "0,1,0,1,0,0,0,1"))
                                             (rule "applyEq" (formula "41") (term "0,1,0,1,0,0,0,1") (ifseqformula "3"))
                                             (rule "polySimp_mulComm0" (formula "41") (term "1,0,1,0,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "41") (term "1,0,1,0,0,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,1,0,0,0,1"))
                                             (rule "polySimp_elimOne" (formula "41") (term "1,1,0,1,0,0,0,1"))
                                             (rule "polySimp_mulComm0" (formula "41") (term "0,1,0,1,0,0,0,1"))
                                             (rule "polySimp_addComm1" (formula "41") (term "0,1,0,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "41") (term "0,0,1,0,0,0,1"))
                                             (rule "polySimp_pullOutFactor1" (formula "41") (term "0,0,0,1,0,0,0,1"))
                                             (rule "add_literals" (formula "41") (term "1,0,0,0,1,0,0,0,1"))
                                             (rule "times_zero_1" (formula "41") (term "0,0,0,1,0,0,0,1"))
                                             (rule "add_zero_left" (formula "41") (term "0,0,1,0,0,0,1"))
                                             (rule "jmod_axiom" (formula "41") (term "1,1,0,1,1,1,0,0,1"))
                                             (rule "polySimp_mulComm1" (formula "41") (term "1,1,1,0,1,1,1,0,0,1"))
                                             (rule "polySimp_homoEq" (formula "41") (term "1,0,1,1,1,0,0,1"))
                                             (rule "polySimp_addComm1" (formula "41") (term "0,1,0,1,1,1,0,0,1"))
                                             (rule "applyEq" (formula "41") (term "0,0,1,0,1,0,1,1,1,0,0,1") (ifseqformula "18"))
                                             (rule "polySimp_mulComm0" (formula "41") (term "0,1,0,1,0,1,1,1,0,0,1"))
                                             (rule "applyEq" (formula "41") (term "0,1,0,1,0,1,1,1,0,0,1") (ifseqformula "3"))
                                             (rule "polySimp_mulComm0" (formula "41") (term "1,0,1,0,1,1,1,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "41") (term "1,0,1,0,1,1,1,0,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,1,0,1,1,1,0,0,1"))
                                             (rule "polySimp_elimOne" (formula "41") (term "1,1,0,1,0,1,1,1,0,0,1"))
                                             (rule "polySimp_mulComm0" (formula "41") (term "0,1,0,1,0,1,1,1,0,0,1"))
                                             (rule "polySimp_addComm1" (formula "41") (term "0,1,0,1,1,1,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "41") (term "0,0,1,0,1,1,1,0,0,1"))
                                             (rule "polySimp_pullOutFactor1" (formula "41") (term "0,0,0,1,0,1,1,1,0,0,1"))
                                             (rule "add_literals" (formula "41") (term "1,0,0,0,1,0,1,1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "41") (term "0,0,0,1,0,1,1,1,0,0,1"))
                                             (rule "add_zero_left" (formula "41") (term "0,0,1,0,1,1,1,0,0,1"))
                                             (rule "polySimp_sepNegMonomial" (formula "41") (term "1,0,0,1,1,0,1,0,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "41") (term "0,1,0,0,1,1,0,1,0,0,1"))
                                             (rule "polySimp_elimOne" (formula "41") (term "0,1,0,0,1,1,0,1,0,0,1"))
                                             (rule "polySimp_sepNegMonomial" (formula "41") (term "1,0,0,0,0,1,0,1,0,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "41") (term "0,1,0,0,0,0,1,0,1,0,0,1"))
                                             (rule "polySimp_elimOne" (formula "41") (term "0,1,0,0,0,0,1,0,1,0,0,1"))
                                             (rule "polySimp_sepNegMonomial" (formula "41") (term "1,0,0,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "41") (term "0,1,0,0,0,1"))
                                             (rule "polySimp_elimOne" (formula "41") (term "0,1,0,0,0,1"))
                                             (rule "polySimp_sepNegMonomial" (formula "41") (term "1,0,1,1,1,0,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "41") (term "0,1,0,1,1,1,0,0,1"))
                                             (rule "polySimp_elimOne" (formula "41") (term "0,1,0,1,1,1,0,0,1"))
                                             (rule "elim_forall12" (formula "41") (term "0,1"))
                                             (rule "eqClose" (formula "41") (term "1,0,0,0,0,1,0,1,0,1"))
                                             (rule "eqClose" (formula "41") (term "1,0,0,1,1,0,1,0,1"))
                                             (rule "eqClose" (formula "41") (term "1,0,1,1,1,0,1"))
                                             (rule "concrete_and_3" (formula "41") (term "0,0,0,0,1,0,1,0,1"))
                                             (rule "concrete_and_3" (formula "41") (term "0,0,1,1,0,1,0,1"))
                                             (rule "concrete_and_3" (formula "41") (term "0,1,1,1,0,1"))
                                             (rule "elim_forall8" (formula "41") (term "1"))
                                             (rule "eqClose" (formula "41") (term "0,0,1,1,0,1"))
                                             (rule "eqClose" (formula "41") (term "0,0,0,0,1,0,1"))
                                             (rule "eqClose" (formula "41") (term "0,1,1,1"))
                                             (rule "ifthenelse_true" (formula "41") (term "0,1,1,0,1"))
                                             (rule "ifthenelse_true" (formula "41") (term "0,0,0,1,0,1"))
                                             (rule "ifthenelse_true" (formula "41") (term "1,1,1"))
                                             (rule "replace_known_left" (formula "41") (term "0,0,1") (ifseqformula "23"))
                                             (rule "concrete_impl_1" (formula "41") (term "0,1"))
                                             (rule "replace_known_right" (formula "41") (term "1,0,1") (ifseqformula "47"))
                                             (rule "concrete_or_4" (formula "41") (term "0,1"))
                                             (rule "replace_known_left" (formula "41") (term "0,1") (ifseqformula "39"))
                                             (rule "concrete_and_1" (formula "41") (term "1"))
                                             (rule "array_store_static_analyse" (formula "41") (term "1") (ifseqformula "44"))
                                             (rule "concrete_and_3" (formula "41"))
                                             (rule "allRight" (formula "41") (inst "sk=o_0"))
                                             (rule "closeTrue" (formula "41"))
                                          )
                                          (branch " Post"
                                             (builtin "Update Simplification" (formula "40"))
                                             (rule "typeEqDerived2" (formula "40") (term "0,1,0,1,0,1,0") (ifseqformula "2"))
                                             (rule "boolean_equal" (formula "40") (term "1,0,1,0,1,0"))
                                             (rule "concrete_and_3" (formula "40") (term "0,1,0,1,0"))
                                             (rule "impRight" (formula "40"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "andLeft" (formula "3"))
                                             (rule "eqSymm" (formula "3") (term "1,1"))
                                             (rule "replace_known_right" (formula "3") (term "0,0,1") (ifseqformula "49"))
                                             (rule "concrete_not_2" (formula "3") (term "0,1"))
                                             (rule "concrete_and_1" (formula "3") (term "1"))
                                             (rule "inReachableStateExpand" (formula "2"))
                                             (builtin "Update Simplification" (formula "2"))
                                             (rule "eq_imp" (formula "2") (term "0,0,1"))
                                             (rule "replace_known_left" (formula "2") (term "0") (ifseqformula "33"))
                                             (rule "concrete_impl_1" (formula "2"))
                                             (rule "andLeft" (formula "2"))
                                             (rule "jmod_axiom" (formula "3") (term "1,1,0,0,1,1,0,1,0,0"))
                                             (rule "polySimp_mulComm1" (formula "3") (term "1,1,1,0,0,1,1,0,1,0,0"))
                                             (rule "polySimp_homoEq" (formula "3") (term "1,0,0,1,1,0,1,0,0"))
                                             (rule "polySimp_addComm1" (formula "3") (term "0,1,0,0,1,1,0,1,0,0"))
                                             (rule "applyEq" (formula "3") (term "0,0,1,0,1,0,0,1,1,0,1,0,0") (ifseqformula "22"))
                                             (rule "polySimp_mulComm0" (formula "3") (term "0,1,0,1,0,0,1,1,0,1,0,0"))
                                             (rule "applyEq" (formula "3") (term "0,1,0,1,0,0,1,1,0,1,0,0") (ifseqformula "7"))
                                             (rule "polySimp_mulComm0" (formula "3") (term "1,0,1,0,0,1,1,0,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "3") (term "1,0,1,0,0,1,1,0,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,1,0,0,1,1,0,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "3") (term "1,1,0,1,0,0,1,1,0,1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "3") (term "0,1,0,1,0,0,1,1,0,1,0,0"))
                                             (rule "polySimp_addComm1" (formula "3") (term "0,1,0,0,1,1,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "3") (term "0,0,1,0,0,1,1,0,1,0,0"))
                                             (rule "polySimp_pullOutFactor1" (formula "3") (term "0,0,0,1,0,0,1,1,0,1,0,0"))
                                             (rule "add_literals" (formula "3") (term "1,0,0,0,1,0,0,1,1,0,1,0,0"))
                                             (rule "times_zero_1" (formula "3") (term "0,0,0,1,0,0,1,1,0,1,0,0"))
                                             (rule "add_zero_left" (formula "3") (term "0,0,1,0,0,1,1,0,1,0,0"))
                                             (rule "jmod_axiom" (formula "3") (term "1,1,0,1,1,1,0,0"))
                                             (rule "polySimp_mulComm1" (formula "3") (term "1,1,1,0,1,1,1,0,0"))
                                             (rule "polySimp_homoEq" (formula "3") (term "1,0,1,1,1,0,0"))
                                             (rule "polySimp_addComm1" (formula "3") (term "0,1,0,1,1,1,0,0"))
                                             (rule "applyEq" (formula "3") (term "0,0,1,0,1,0,1,1,1,0,0") (ifseqformula "22"))
                                             (rule "polySimp_mulComm0" (formula "3") (term "0,1,0,1,0,1,1,1,0,0"))
                                             (rule "applyEq" (formula "3") (term "0,1,0,1,0,1,1,1,0,0") (ifseqformula "7"))
                                             (rule "polySimp_mulComm0" (formula "3") (term "1,0,1,0,1,1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "3") (term "1,0,1,0,1,1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,1,0,1,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "3") (term "1,1,0,1,0,1,1,1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "3") (term "0,1,0,1,0,1,1,1,0,0"))
                                             (rule "polySimp_addComm1" (formula "3") (term "0,1,0,1,1,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "3") (term "0,0,1,0,1,1,1,0,0"))
                                             (rule "polySimp_pullOutFactor1" (formula "3") (term "0,0,0,1,0,1,1,1,0,0"))
                                             (rule "add_literals" (formula "3") (term "1,0,0,0,1,0,1,1,1,0,0"))
                                             (rule "times_zero_1" (formula "3") (term "0,0,0,1,0,1,1,1,0,0"))
                                             (rule "add_zero_left" (formula "3") (term "0,0,1,0,1,1,1,0,0"))
                                             (rule "jmod_axiom" (formula "3") (term "1,1,0,0,0"))
                                             (rule "polySimp_mulComm1" (formula "3") (term "1,1,1,0,0,0"))
                                             (rule "polySimp_homoEq" (formula "3") (term "1,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "3") (term "0,1,0,0,0"))
                                             (rule "applyEq" (formula "3") (term "0,0,1,0,1,0,0,0") (ifseqformula "22"))
                                             (rule "polySimp_mulComm0" (formula "3") (term "0,1,0,1,0,0,0"))
                                             (rule "applyEq" (formula "3") (term "0,1,0,1,0,0,0") (ifseqformula "7"))
                                             (rule "polySimp_mulComm0" (formula "3") (term "1,0,1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "3") (term "1,0,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "3") (term "1,1,0,1,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "3") (term "0,1,0,1,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "3") (term "0,1,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "3") (term "0,0,1,0,0,0"))
                                             (rule "polySimp_pullOutFactor1" (formula "3") (term "0,0,0,1,0,0,0"))
                                             (rule "add_literals" (formula "3") (term "1,0,0,0,1,0,0,0"))
                                             (rule "times_zero_1" (formula "3") (term "0,0,0,1,0,0,0"))
                                             (rule "add_zero_left" (formula "3") (term "0,0,1,0,0,0"))
                                             (rule "jmod_axiom" (formula "3") (term "1,1,0,0,0,0,1,0,1,0,0"))
                                             (rule "polySimp_mulComm1" (formula "3") (term "1,1,1,0,0,0,0,1,0,1,0,0"))
                                             (rule "polySimp_homoEq" (formula "3") (term "1,0,0,0,0,1,0,1,0,0"))
                                             (rule "polySimp_addComm1" (formula "3") (term "0,1,0,0,0,0,1,0,1,0,0"))
                                             (rule "applyEq" (formula "3") (term "0,0,1,0,1,0,0,0,0,1,0,1,0,0") (ifseqformula "22"))
                                             (rule "polySimp_mulComm0" (formula "3") (term "0,1,0,1,0,0,0,0,1,0,1,0,0"))
                                             (rule "applyEq" (formula "3") (term "0,1,0,1,0,0,0,0,1,0,1,0,0") (ifseqformula "7"))
                                             (rule "polySimp_mulComm0" (formula "3") (term "1,0,1,0,0,0,0,1,0,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "3") (term "1,0,1,0,0,0,0,1,0,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,1,0,0,0,0,1,0,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "3") (term "1,1,0,1,0,0,0,0,1,0,1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "3") (term "0,1,0,1,0,0,0,0,1,0,1,0,0"))
                                             (rule "polySimp_addComm1" (formula "3") (term "0,1,0,0,0,0,1,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "3") (term "0,0,1,0,0,0,0,1,0,1,0,0"))
                                             (rule "polySimp_pullOutFactor1" (formula "3") (term "0,0,0,1,0,0,0,0,1,0,1,0,0"))
                                             (rule "add_literals" (formula "3") (term "1,0,0,0,1,0,0,0,0,1,0,1,0,0"))
                                             (rule "times_zero_1" (formula "3") (term "0,0,0,1,0,0,0,0,1,0,1,0,0"))
                                             (rule "add_zero_left" (formula "3") (term "0,0,1,0,0,0,0,1,0,1,0,0"))
                                             (rule "polySimp_sepNegMonomial" (formula "3") (term "1,0,0,1,1,0,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "3") (term "0,1,0,0,1,1,0,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "3") (term "0,1,0,0,1,1,0,1,0,0"))
                                             (rule "polySimp_sepNegMonomial" (formula "3") (term "1,0,1,1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "3") (term "0,1,0,1,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "3") (term "0,1,0,1,1,1,0,0"))
                                             (rule "polySimp_sepNegMonomial" (formula "3") (term "1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "3") (term "0,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "3") (term "0,1,0,0,0"))
                                             (rule "polySimp_sepNegMonomial" (formula "3") (term "1,0,0,0,0,1,0,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "3") (term "0,1,0,0,0,0,1,0,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "3") (term "0,1,0,0,0,0,1,0,1,0,0"))
                                             (rule "elim_forall12" (formula "3") (term "0"))
                                             (rule "eqClose" (formula "3") (term "1,0,0,0,0,1,0,1,0"))
                                             (rule "eqClose" (formula "3") (term "1,0,0,1,1,0,1,0"))
                                             (rule "eqClose" (formula "3") (term "1,0,1,1,1,0"))
                                             (rule "concrete_and_3" (formula "3") (term "0,0,0,0,1,0,1,0"))
                                             (rule "concrete_and_3" (formula "3") (term "0,0,1,1,0,1,0"))
                                             (rule "concrete_and_3" (formula "3") (term "0,1,1,1,0"))
                                             (rule "elim_forall8" (formula "3"))
                                             (rule "eqClose" (formula "3") (term "0,0,0,0,1,0"))
                                             (rule "eqClose" (formula "3") (term "0,0,1,1,0"))
                                             (rule "eqClose" (formula "3") (term "0,1,1"))
                                             (rule "ifthenelse_true" (formula "3") (term "0,0,0,1,0"))
                                             (rule "ifthenelse_true" (formula "3") (term "0,1,1,0"))
                                             (rule "ifthenelse_true" (formula "3") (term "1,1"))
                                             (rule "andLeft" (formula "3"))
                                             (rule "replace_known_right" (formula "3") (term "1,1") (ifseqformula "51"))
                                             (rule "concrete_or_4" (formula "3") (term "1"))
                                             (rule "replace_known_left" (formula "3") (term "1") (ifseqformula "44"))
                                             (rule "concrete_impl_4" (formula "3"))
                                             (rule "true_left" (formula "3"))
                                             (rule "array_store_static_analyse" (formula "3") (ifseqformula "47"))
                                             (rule "true_left" (formula "3"))
                                             (rule "castDel" (formula "3") (term "0,0,1"))
                                             (rule "eqClose" (formula "3") (term "1"))
                                             (rule "concrete_eq_3" (formula "3"))
                                             (rule "applyEq" (formula "43") (term "0") (ifseqformula "3"))
                                             (rule "all_unused" (formula "2"))
                                             (rule "true_left" (formula "2"))
                                             (rule "blockEmpty" (formula "42") (term "4"))
                                             (rule "assignment" (formula "42") (term "4"))
                                             (builtin "Update Simplification" (formula "42"))
                                             (rule "methodCallEmpty" (formula "42") (term "4"))
                                             (rule "emptyModality" (formula "42") (term "4"))
                                             (builtin "Update Simplification" (formula "42"))
                                             (rule "boolean_equal" (formula "42"))
                                             (rule "closeTrue" (formula "42"))
                                          )
                                          (branch " Exceptional Post"
                                             (builtin "Update Simplification" (formula "40"))
                                             (rule "typeEqDerived2" (formula "40") (term "0,1,0,1,0,1,0") (ifseqformula "2"))
                                             (rule "boolean_equal" (formula "40") (term "1,0,1,0,1,0"))
                                             (rule "concrete_and_3" (formula "40") (term "0,1,0,1,0"))
                                             (rule "impRight" (formula "40"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "andLeft" (formula "2"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "andLeft" (formula "2"))
                                             (rule "notLeft" (formula "3"))
                                             (rule "close" (formula "44") (ifseqformula "4"))
                                          )
                                       )
                                       (branch " Null Reference (queryReceiver_1 = null)"
                                          (builtin "Update Simplification" (formula "4"))
                                          (builtin "Update Simplification" (formula "3"))
                                          (rule "close" (formula "47") (ifseqformula "3"))
                                       )
                                    )
                                    (branch " Null Reference (queryReceiver = null)"
                                       (builtin "Update Simplification" (formula "3"))
                                       (builtin "Update Simplification" (formula "2"))
                                       (rule "close" (formula "47") (ifseqformula "2"))
                                    )
                                 )
                                 (branch "   self.size * quotient_4
=   result_0
  +   jmod({self.elements[jmod(result_0, self.size)]:=s}
             s_1.hashCode@(java.lang.String)(),
           self.size)
    * -1 FALSE"
                                    (rule "pullOut" (formula "2") (term "0,3,0,1,0") (inst "sk=s_2"))
                                    (builtin "Update Simplification" (formula "2"))
                                    (rule "eqSymm" (formula "2"))
                                    (rule "resolvequery" (formula "42") (term "3,0") (inst "queryValue=java_lang_Stringequals_1") (userinteraction))
                                    (builtin "Update Simplification" (formula "1"))
                                    (builtin "Update Simplification" (formula "44"))
                                    (rule "eqSymm" (formula "2") (term "0,2,0,3"))
                                    (rule "apply_eq_boolean" (formula "1") (term "1") (ifseqformula "44"))
                                    (rule "false_to_not_true" (formula "1"))
                                    (rule "notLeft" (formula "1"))
                                    (rule "apply_eq_boolean_rigid" (formula "1") (term "0,0,2,0,3") (ifseqformula "44"))
                                    (rule "eqSymm" (formula "1") (term "0,2,0,3"))
                                    (rule "false_to_not_true" (formula "1") (term "0,2,0,3"))
                                    (rule "variableDeclaration" (formula "1") (term "3") (newnames "equals_1"))
                                    (rule "variableDeclaration" (formula "1") (term "3") (newnames "arg0_2"))
                                    (rule "variableDeclaration" (formula "1") (term "3") (newnames "queryReceiver_2"))
                                    (rule "emptyModality" (formula "1") (term "3"))
                                    (builtin "Update Simplification" (formula "1"))
                                    (rule "applyEq" (formula "1") (term "0") (ifseqformula "5"))
                                    (rule "methodCallWithAssignment" (formula "1") (term "5") (inst "#v0=b"))
                                    (branch " Normal Execution (queryReceiver_2 != null)"
                                       (builtin "Update Simplification" (formula "38"))
                                       (rule "variableDeclaration" (formula "1") (term "5") (newnames "b_6"))
                                       (rule "variableDeclarationAssign" (formula "1") (term "5"))
                                       (rule "variableDeclaration" (formula "1") (term "5") (newnames "arg0_3"))
                                       (rule "assignment" (formula "1") (term "5"))
                                       (builtin "Update Simplification" (formula "1"))
                                       (rule "only_created_object_are_referenced_by_arrays_non_null2" (formula "4") (ifseqformula "23") (ifseqformula "28") (ifseqformula "38"))
                                       (rule "boxToDiamond" (formula "1") (term "5") (userinteraction))
                                       (builtin "Update Simplification" (formula "1"))
                                       (rule "notLeft" (formula "1") (userinteraction))
                                       (builtin "Use Operation Contract" (formula "38") (term "5") (newnames "arg0_3_0,result_9") (contract "equalsNormal;;"))
                                       (branch " Pre"
                                          (builtin "Update Simplification" (formula "38"))
                                          (rule "replace_known_right" (formula "38") (term "1,1") (ifseqformula "45"))
                                          (rule "concrete_or_4" (formula "38") (term "1"))
                                          (rule "replace_known_right" (formula "38") (term "0,1,1,0") (ifseqformula "39"))
                                          (rule "concrete_not_2" (formula "38") (term "1,1,0"))
                                          (rule "concrete_and_3" (formula "38") (term "1,0"))
                                          (rule "replace_known_left" (formula "38") (term "1,0") (ifseqformula "3"))
                                          (rule "concrete_and_3" (formula "38") (term "0"))
                                          (rule "replace_known_left" (formula "38") (term "1") (ifseqformula "37"))
                                          (rule "concrete_and_3" (formula "38"))
                                          (rule "inReachableStateRewrite" (formula "38") (ifseqformula "28"))
                                          (builtin "Update Simplification" (formula "38"))
                                          (rule "eq_imp" (formula "38") (term "0,0,1"))
                                          (rule "orRight" (formula "38"))
                                          (rule "jmod_axiom" (formula "39") (term "1,1,0,1,1,1,0,0,1"))
                                          (rule "polySimp_mulComm1" (formula "39") (term "1,1,1,0,1,1,1,0,0,1"))
                                          (rule "polySimp_homoEq" (formula "39") (term "1,0,1,1,1,0,0,1"))
                                          (rule "polySimp_addComm1" (formula "39") (term "0,1,0,1,1,1,0,0,1"))
                                          (rule "applyEq" (formula "39") (term "0,0,1,0,1,0,1,1,1,0,0,1") (ifseqformula "18"))
                                          (rule "polySimp_mulComm0" (formula "39") (term "0,1,0,1,0,1,1,1,0,0,1"))
                                          (rule "jmod_axiom" (formula "39") (term "1,1,0,0,0,1"))
                                          (rule "polySimp_mulComm1" (formula "39") (term "1,1,1,0,0,0,1"))
                                          (rule "polySimp_homoEq" (formula "39") (term "1,0,0,0,1"))
                                          (rule "polySimp_addComm1" (formula "39") (term "0,1,0,0,0,1"))
                                          (rule "applyEq" (formula "39") (term "0,0,1,0,1,0,0,0,1") (ifseqformula "18"))
                                          (rule "polySimp_mulComm0" (formula "39") (term "0,1,0,1,0,0,0,1"))
                                          (rule "jmod_axiom" (formula "39") (term "1,1,0,0,0,0,1,0,1,0,0,1"))
                                          (rule "polySimp_mulComm1" (formula "39") (term "1,1,1,0,0,0,0,1,0,1,0,0,1"))
                                          (rule "polySimp_homoEq" (formula "39") (term "1,0,0,0,0,1,0,1,0,0,1"))
                                          (rule "polySimp_addComm1" (formula "39") (term "0,1,0,0,0,0,1,0,1,0,0,1"))
                                          (rule "applyEq" (formula "39") (term "0,0,1,0,1,0,0,0,0,1,0,1,0,0,1") (ifseqformula "18"))
                                          (rule "polySimp_mulComm0" (formula "39") (term "0,1,0,1,0,0,0,0,1,0,1,0,0,1"))
                                          (rule "jmod_axiom" (formula "39") (term "1,1,0,0,1,1,0,1,0,0,1"))
                                          (rule "polySimp_mulComm1" (formula "39") (term "1,1,1,0,0,1,1,0,1,0,0,1"))
                                          (rule "polySimp_homoEq" (formula "39") (term "1,0,0,1,1,0,1,0,0,1"))
                                          (rule "polySimp_addComm1" (formula "39") (term "0,1,0,0,1,1,0,1,0,0,1"))
                                          (rule "applyEq" (formula "39") (term "0,0,1,0,1,0,0,1,1,0,1,0,0,1") (ifseqformula "18"))
                                          (rule "polySimp_mulComm0" (formula "39") (term "0,1,0,1,0,0,1,1,0,1,0,0,1"))
                                          (rule "polySimp_sepNegMonomial" (formula "39") (term "1,0,1,1,1,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "39") (term "0,1,0,1,1,1,0,0,1"))
                                          (rule "polySimp_elimOne" (formula "39") (term "0,1,0,1,1,1,0,0,1"))
                                          (rule "polySimp_sepNegMonomial" (formula "39") (term "1,0,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "39") (term "0,1,0,0,0,1"))
                                          (rule "polySimp_elimOne" (formula "39") (term "0,1,0,0,0,1"))
                                          (rule "polySimp_sepNegMonomial" (formula "39") (term "1,0,0,0,0,1,0,1,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "39") (term "0,1,0,0,0,0,1,0,1,0,0,1"))
                                          (rule "polySimp_elimOne" (formula "39") (term "0,1,0,0,0,0,1,0,1,0,0,1"))
                                          (rule "polySimp_sepNegMonomial" (formula "39") (term "1,0,0,1,1,0,1,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "39") (term "0,1,0,0,1,1,0,1,0,0,1"))
                                          (rule "polySimp_elimOne" (formula "39") (term "0,1,0,0,1,1,0,1,0,0,1"))
                                          (rule "nnf_imp2or" (formula "39") (term "0,0,1"))
                                          (rule "nnf_notAnd" (formula "39") (term "0,0,0,1"))
                                          (rule "nnf_imp2or" (formula "39") (term "0,1,0,0,1"))
                                          (rule "all_unused" (formula "39") (term "0"))
                                          (rule "concrete_and_1" (formula "39"))
                                          (rule "allRight" (formula "39") (inst "sk=j0irs_0"))
                                          (rule "allRight" (formula "39") (inst "sk=i1irs_0"))
                                          (rule "orRight" (formula "39"))
                                          (rule "orRight" (formula "39"))
                                          (rule "notRight" (formula "39"))
                                          (rule "notRight" (formula "40"))
                                          (rule "eqSymm" (formula "41") (term "0,0,0,0,0,1,0"))
                                          (rule "eqSymm" (formula "41") (term "0,0,0,1,1,0"))
                                          (rule "eqSymm" (formula "41") (term "0,0,1,1"))
                                          (rule "eqSymm" (formula "2"))
                                          (rule "replace_known_left" (formula "41") (term "1,0,0,0,0,1,0") (ifseqformula "1"))
                                          (rule "concrete_and_3" (formula "41") (term "0,0,0,0,1,0"))
                                          (rule "replace_known_left" (formula "41") (term "1,0,1,1") (ifseqformula "1"))
                                          (rule "concrete_and_3" (formula "41") (term "0,1,1"))
                                          (rule "replace_known_left" (formula "41") (term "1,0,0,1,1,0") (ifseqformula "1"))
                                          (rule "concrete_and_3" (formula "41") (term "0,0,1,1,0"))
                                          (rule "replace_known_left" (formula "41") (term "0,1,1") (ifseqformula "2"))
                                          (rule "ifthenelse_true" (formula "41") (term "1,1"))
                                          (rule "replace_known_left" (formula "41") (term "0,0,0,0,1,0") (ifseqformula "2"))
                                          (rule "ifthenelse_true" (formula "41") (term "0,0,0,1,0"))
                                          (rule "replace_known_left" (formula "41") (term "0,0,1,1,0") (ifseqformula "2"))
                                          (rule "ifthenelse_true" (formula "41") (term "0,1,1,0"))
                                          (rule "replace_known_left" (formula "41") (term "0,1,0") (ifseqformula "39"))
                                          (rule "concrete_or_1" (formula "41") (term "1,0"))
                                          (rule "concrete_or_3" (formula "41") (term "0"))
                                          (rule "concrete_and_1" (formula "41"))
                                          (rule "applyEq" (formula "25") (term "0,0") (ifseqformula "2"))
                                          (rule "applyEq" (formula "17") (term "0") (ifseqformula "1"))
                                          (rule "inEqSimp_homoInEq0" (formula "17"))
                                          (rule "polySimp_mulComm0" (formula "17") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "17") (term "1,0"))
                                          (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0"))
                                          (rule "polySimp_elimOne" (formula "17") (term "1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "17") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "17") (term "0"))
                                          (rule "polySimp_pullOutFactor1" (formula "17") (term "0,0"))
                                          (rule "add_literals" (formula "17") (term "1,0,0"))
                                          (rule "times_zero_1" (formula "17") (term "0,0"))
                                          (rule "add_zero_left" (formula "17") (term "0"))
                                          (rule "applyEq" (formula "18") (term "0") (ifseqformula "1"))
                                          (rule "inEqSimp_homoInEq1" (formula "18"))
                                          (rule "polySimp_mulComm0" (formula "18") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "18") (term "1,0"))
                                          (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0"))
                                          (rule "polySimp_elimOne" (formula "18") (term "1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "18") (term "0,1,0"))
                                          (rule "polySimp_addComm1" (formula "18") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "18") (term "0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,0"))
                                          (rule "add_literals" (formula "18") (term "1,1,0,0,0"))
                                          (rule "times_zero_1" (formula "18") (term "1,0,0,0"))
                                          (rule "add_zero_right" (formula "18") (term "0,0,0"))
                                          (rule "applyEq" (formula "10") (term "0,1,1,0") (ifseqformula "1"))
                                          (rule "polySimp_mulComm0" (formula "10") (term "1,1,0"))
                                          (rule "polySimp_rightDist" (formula "10") (term "1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "10") (term "0,1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "10") (term "1,0"))
                                          (rule "polySimp_pullOutFactor1" (formula "10") (term "0,1,0"))
                                          (rule "add_literals" (formula "10") (term "1,0,1,0"))
                                          (rule "times_zero_1" (formula "10") (term "0,1,0"))
                                          (rule "add_zero_left" (formula "10") (term "1,0"))
                                          (rule "applyEq" (formula "6") (term "0,0") (ifseqformula "2"))
                                          (rule "applyEq" (formula "10") (term "0,0") (ifseqformula "2"))
                                          (rule "applyEq" (formula "47") (term "0,0") (ifseqformula "2"))
                                          (rule "applyEq" (formula "40") (term "0") (ifseqformula "2"))
                                          (rule "applyEq" (formula "6") (term "0,0,1,0") (ifseqformula "2"))
                                          (rule "applyEq" (formula "36") (term "0,0") (ifseqformula "2"))
                                          (rule "eqSymm" (formula "36"))
                                          (rule "applyEq" (formula "44") (term "0,0,0,1,1") (ifseqformula "2"))
                                          (rule "applyEq" (formula "43") (term "0,0") (ifseqformula "2"))
                                          (rule "applyEq" (formula "45") (term "0") (ifseqformula "2"))
                                          (rule "applyEq" (formula "24") (term "0,0,0") (ifseqformula "2"))
                                          (rule "applyEq" (formula "44") (term "0") (ifseqformula "1"))
                                          (rule "polySimp_homoEq" (formula "44"))
                                          (rule "polySimp_mulComm0" (formula "44") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "44") (term "1,0"))
                                          (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0"))
                                          (rule "polySimp_elimOne" (formula "44") (term "1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "44") (term "0,1,0"))
                                          (rule "polySimp_addComm1" (formula "44") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "44") (term "0,0"))
                                          (rule "polySimp_pullOutFactor1" (formula "44") (term "0,0,0"))
                                          (rule "add_literals" (formula "44") (term "1,0,0,0"))
                                          (rule "times_zero_1" (formula "44") (term "0,0,0"))
                                          (rule "add_zero_left" (formula "44") (term "0,0"))
                                          (rule "applyEq" (formula "44") (term "1,1,0,0,1,0") (ifseqformula "36"))
                                          (rule "applyEq" (formula "33") (term "0") (ifseqformula "36"))
                                          (rule "applyEq" (formula "6") (term "1,1,0,1,0") (ifseqformula "36"))
                                          (rule "applyEq" (formula "40") (term "1,1") (ifseqformula "36"))
                                          (rule "applyEq" (formula "15") (term "0,0") (ifseqformula "36"))
                                          (rule "applyEq" (formula "28") (term "0,1,1") (ifseqformula "36"))
                                          (rule "polySimp_addComm1" (formula "28") (term "1"))
                                          (rule "applyEq" (formula "44") (term "1,0,1,0") (ifseqformula "36"))
                                          (rule "applyEq" (formula "6") (term "1,1,0") (ifseqformula "36"))
                                          (rule "applyEq" (formula "28") (term "0,0") (ifseqformula "36"))
                                          (rule "applyEq" (formula "47") (term "0,0,1,1,0") (ifseqformula "36"))
                                          (rule "applyEq" (formula "26") (term "1,0") (ifseqformula "36"))
                                          (rule "applyEq" (formula "29") (term "1,0") (ifseqformula "36"))
                                          (rule "applyEq" (formula "15") (term "0,1,1") (ifseqformula "36"))
                                          (rule "applyEq" (formula "14") (term "0,0") (ifseqformula "36"))
                                          (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "36"))
                                          (rule "applyEq" (formula "18") (term "0,1,0") (ifseqformula "36"))
                                          (rule "applyEq" (formula "27") (term "0,0") (ifseqformula "36"))
                                          (rule "applyEq" (formula "43") (term "1,1,0") (ifseqformula "36"))
                                          (rule "applyEq" (formula "13") (term "1,0") (ifseqformula "36"))
                                          (rule "applyEq" (formula "20") (term "1,0") (ifseqformula "36"))
                                          (rule "applyEq" (formula "24") (term "0,0,1,1,0,0") (ifseqformula "36"))
                                          (rule "applyEq" (formula "16") (term "1,0") (ifseqformula "36"))
                                          (rule "polySimp_sepNegMonomial" (formula "44"))
                                          (rule "polySimp_mulLiterals" (formula "44") (term "0"))
                                          (rule "polySimp_elimOne" (formula "44") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "18"))
                                          (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                                          (rule "polySimp_elimOne" (formula "18") (term "0"))
                                          (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "14"))
                                          (rule "polySimp_rightDist" (formula "15") (term "0,0"))
                                          (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0"))
                                          (rule "polySimp_elimOne" (formula "15") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "15") (term "0"))
                                          (rule "polySimp_rightDist" (formula "15") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "15") (term "0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "15") (term "1,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0"))
                                          (rule "add_literals" (formula "15") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "15") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "15") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                                          (rule "mul_literals" (formula "15") (term "1"))
                                          (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "27"))
                                          (rule "polySimp_rightDist" (formula "28") (term "0,0"))
                                          (rule "polySimp_pullOutFactor2b" (formula "28") (term "0"))
                                          (rule "add_literals" (formula "28") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "28") (term "1,0"))
                                          (rule "add_zero_right" (formula "28") (term "0"))
                                          (rule "polySimp_rightDist" (formula "28") (term "0"))
                                          (rule "mul_literals" (formula "28") (term "0,0"))
                                          (rule "polySimp_mulLiterals" (formula "28") (term "1,0"))
                                          (rule "polySimp_elimOne" (formula "28") (term "1,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "28"))
                                          (rule "mul_literals" (formula "28") (term "1"))
                                          (rule "array_store_static_analyse" (formula "41") (ifseqformula "45"))
                                          (rule "closeTrue" (formula "41"))
                                       )
                                       (branch " Post"
                                          (rule "double_not" (formula "38") (term "0,1,5,5"))
                                          (builtin "Update Simplification" (formula "38"))
                                          (rule "typeEqDerived2" (formula "38") (term "0,1,0,1,0,1,0") (ifseqformula "1"))
                                          (rule "boolean_equal" (formula "38") (term "1,0,1,0,1,0"))
                                          (rule "concrete_and_3" (formula "38") (term "0,1,0,1,0"))
                                          (rule "impRight" (formula "38"))
                                          (rule "andLeft" (formula "1"))
                                          (rule "andLeft" (formula "1"))
                                          (rule "andLeft" (formula "3"))
                                          (rule "eqSymm" (formula "3") (term "1,1"))
                                          (rule "replace_known_right" (formula "3") (term "0,0,1") (ifseqformula "48"))
                                          (rule "concrete_not_2" (formula "3") (term "0,1"))
                                          (rule "concrete_and_1" (formula "3") (term "1"))
                                          (rule "inReachableStateExpand" (formula "2"))
                                          (builtin "Update Simplification" (formula "2"))
                                          (rule "eq_imp" (formula "2") (term "0,0,1"))
                                          (rule "replace_known_left" (formula "2") (term "0") (ifseqformula "31"))
                                          (rule "concrete_impl_1" (formula "2"))
                                          (rule "andLeft" (formula "2"))
                                          (rule "jmod_axiom" (formula "3") (term "1,1,0,0,0"))
                                          (rule "polySimp_mulComm1" (formula "3") (term "1,1,1,0,0,0"))
                                          (rule "polySimp_homoEq" (formula "3") (term "1,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "3") (term "0,1,0,0,0"))
                                          (rule "applyEq" (formula "3") (term "0,0,1,0,1,0,0,0") (ifseqformula "22"))
                                          (rule "polySimp_mulComm0" (formula "3") (term "0,1,0,1,0,0,0"))
                                          (rule "jmod_axiom" (formula "3") (term "1,1,0,0,0,0,1,0,1,0,0"))
                                          (rule "polySimp_mulComm1" (formula "3") (term "1,1,1,0,0,0,0,1,0,1,0,0"))
                                          (rule "polySimp_homoEq" (formula "3") (term "1,0,0,0,0,1,0,1,0,0"))
                                          (rule "polySimp_addComm1" (formula "3") (term "0,1,0,0,0,0,1,0,1,0,0"))
                                          (rule "applyEq" (formula "3") (term "0,0,1,0,1,0,0,0,0,1,0,1,0,0") (ifseqformula "22"))
                                          (rule "polySimp_mulComm0" (formula "3") (term "0,1,0,1,0,0,0,0,1,0,1,0,0"))
                                          (rule "jmod_axiom" (formula "3") (term "1,1,0,0,1,1,0,1,0,0"))
                                          (rule "polySimp_mulComm1" (formula "3") (term "1,1,1,0,0,1,1,0,1,0,0"))
                                          (rule "polySimp_homoEq" (formula "3") (term "1,0,0,1,1,0,1,0,0"))
                                          (rule "polySimp_addComm1" (formula "3") (term "0,1,0,0,1,1,0,1,0,0"))
                                          (rule "applyEq" (formula "3") (term "0,0,1,0,1,0,0,1,1,0,1,0,0") (ifseqformula "22"))
                                          (rule "polySimp_mulComm0" (formula "3") (term "0,1,0,1,0,0,1,1,0,1,0,0"))
                                          (rule "jmod_axiom" (formula "3") (term "1,1,0,1,1,1,0,0"))
                                          (rule "polySimp_mulComm1" (formula "3") (term "1,1,1,0,1,1,1,0,0"))
                                          (rule "polySimp_homoEq" (formula "3") (term "1,0,1,1,1,0,0"))
                                          (rule "polySimp_addComm1" (formula "3") (term "0,1,0,1,1,1,0,0"))
                                          (rule "applyEq" (formula "3") (term "0,0,1,0,1,0,1,1,1,0,0") (ifseqformula "22"))
                                          (rule "polySimp_mulComm0" (formula "3") (term "0,1,0,1,0,1,1,1,0,0"))
                                          (rule "polySimp_sepNegMonomial" (formula "3") (term "1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "3") (term "0,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "3") (term "0,1,0,0,0"))
                                          (rule "polySimp_sepNegMonomial" (formula "3") (term "1,0,0,0,0,1,0,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "3") (term "0,1,0,0,0,0,1,0,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "3") (term "0,1,0,0,0,0,1,0,1,0,0"))
                                          (rule "polySimp_sepNegMonomial" (formula "3") (term "1,0,0,1,1,0,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "3") (term "0,1,0,0,1,1,0,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "3") (term "0,1,0,0,1,1,0,1,0,0"))
                                          (rule "polySimp_sepNegMonomial" (formula "3") (term "1,0,1,1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "3") (term "0,1,0,1,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "3") (term "0,1,0,1,1,1,0,0"))
                                          (rule "nnf_imp2or" (formula "3") (term "0,0"))
                                          (rule "nnf_notAnd" (formula "3") (term "0,0,0"))
                                          (rule "nnf_imp2or" (formula "3") (term "0,1,0,0"))
                                          (rule "commute_or" (formula "3") (term "0,0,0"))
                                          (rule "commute_or" (formula "3") (term "1,0,1,0,0"))
                                          (rule "castDel" (formula "4") (term "0,0,1"))
                                          (rule "all_unused" (formula "2"))
                                          (rule "true_left" (formula "2"))
                                          (rule "shift_paren_or" (formula "2") (term "0,1,0,0"))
                                          (rule "commute_and" (formula "2") (term "0,1,1,1,0,0"))
                                          (rule "commute_and" (formula "2") (term "0,0,0,1,0,1,0,0"))
                                          (rule "commute_or_2" (formula "2") (term "0,1,0,0"))
                                          (rule "commute_and" (formula "2") (term "0,0,1,0,1,0,0"))
                                          (rule "commute_or_2" (formula "2") (term "0,1,0,0"))
                                          (rule "commute_and" (formula "2") (term "1,0,0"))
                                          (rule "cnf_rightDist" (formula "2") (term "0,0"))
                                          (rule "distr_forallAnd" (formula "2") (term "0"))
                                          (rule "distr_forallAnd" (formula "2"))
                                          (rule "andLeft" (formula "2"))
                                          (rule "swapQuantifiersAll" (formula "2"))
                                          (rule "commute_or_2" (formula "2") (term "0,0"))
                                          (rule "elim_forall4" (formula "2") (term "0"))
                                          (rule "eqClose" (formula "2") (term "1,0,1,1,0"))
                                          (rule "concrete_and_3" (formula "2") (term "0,1,1,0"))
                                          (rule "array_store_static_analyse" (formula "2") (term "1,0") (ifseqformula "46"))
                                          (rule "concrete_or_3" (formula "2") (term "0"))
                                          (rule "shift_paren_or" (formula "3") (term "0,0"))
                                          (rule "swapQuantifiersAll" (formula "3"))
                                          (rule "elim_forall4" (formula "3") (term "0"))
                                          (rule "eqClose" (formula "3") (term "1,0,0,1,0,0,0"))
                                          (rule "eqClose" (formula "3") (term "1,0,0,0,1,0,0"))
                                          (rule "concrete_and_3" (formula "3") (term "0,0,1,0,0,0"))
                                          (rule "concrete_and_3" (formula "3") (term "0,0,0,1,0,0"))
                                          (rule "replace_known_left" (formula "3") (term "0,0,0,0,0") (ifseqformula "27"))
                                          (rule "concrete_not_1" (formula "3") (term "0,0,0,0"))
                                          (rule "concrete_or_2" (formula "3") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "3") (term "0"))
                                          (rule "commute_or" (formula "3") (term "0,0"))
                                          (rule "all_unused" (formula "2"))
                                          (rule "true_left" (formula "2"))
                                          (rule "blockEmpty" (formula "41") (term "4"))
                                          (rule "ifthenelse_to_or_left" (formula "2") (term "1,0,0"))
                                          (rule "replace_known_right" (formula "2") (term "1,0,1,0,0") (ifseqformula "48"))
                                          (rule "concrete_or_4" (formula "2") (term "0,1,0,0"))
                                          (rule "commute_or_2" (formula "2") (term "0"))
                                          (rule "cnf_rightDist" (formula "2") (term "0"))
                                          (rule "distr_forallAnd" (formula "2"))
                                          (rule "andLeft" (formula "2"))
                                          (rule "commute_or_2" (formula "2") (term "0"))
                                          (rule "eq_or" (formula "2") (term "0,0"))
                                          (rule "shift_paren_or" (formula "3") (term "0"))
                                          (rule "commute_or_2" (formula "3") (term "0,0"))
                                          (rule "neq_or" (formula "3") (term "0,0,0"))
                                          (rule "concrete_or_1" (formula "3") (term "0,0"))
                                          (rule "concrete_or_1" (formula "3") (term "0"))
                                          (rule "all_unused" (formula "3"))
                                          (rule "true_left" (formula "3"))
                                          (rule "assignment" (formula "41") (term "4"))
                                          (builtin "Update Simplification" (formula "41"))
                                          (rule "methodCallEmpty" (formula "41") (term "4"))
                                          (rule "emptyModality" (formula "41") (term "4"))
                                          (builtin "Update Simplification" (formula "41"))
                                          (rule "replace_known_right" (formula "3") (term "0") (ifseqformula "41"))
                                          (rule "concrete_eq_2" (formula "3"))
                                          (rule "notLeft" (formula "3"))
                                          (rule "allLeft" (formula "2") (inst "t=  s.hashCode@(java.lang.String)()
+ self.size@(StringSet) * quotient_0 * -1"))
                                          (rule "polySimp_mulComm0" (formula "2") (term "1,1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "2") (term "1,1,0,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "2") (term "1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "1,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "2") (term "1,1,1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "2") (term "0,1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "2") (term "1,1,0,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "1,1,1,0,0,0,1"))
                                          (rule "polySimp_elimOne" (formula "2") (term "1,1,1,0,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "2") (term "0,1,1,0,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "2") (term "1,0,0"))
                                          (rule "polySimp_homoEq" (formula "2") (term "0,0"))
                                          (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "2") (term "1,0,0,0,1"))
                                          (rule "polySimp_homoEq" (formula "2") (term "0,0,0,1"))
                                          (rule "polySimp_addComm1" (formula "2") (term "0,0,0,0,1"))
                                          (rule "polySimp_sepPosMonomial" (formula "2") (term "0,0"))
                                          (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "2") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "2") (term "0,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "2") (term "1,0,1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "2") (term "0,0,1,0,0"))
                                          (rule "polySimp_sepPosMonomial" (formula "2") (term "0,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0,0,1"))
                                          (rule "polySimp_elimOne" (formula "2") (term "1,1,0,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "2") (term "0,1,0,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0,0,0,1"))
                                          (rule "polySimp_elimOne" (formula "2") (term "1,0,1,0,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "2") (term "0,0,1,0,0,0,1"))
                                          (rule "ifthenelse_split" (formula "2") (term "0,0,1"))
                                          (branch "   self.size * quotient_0
=   result_0 * -1
  + s.hashCode@(java.lang.String)()
  + self.size * quotient_4 TRUE"
                                             (rule "replace_known_left" (formula "3") (term "1") (ifseqformula "41"))
                                             (rule "concrete_or_3" (formula "3"))
                                             (rule "true_left" (formula "3"))
                                             (rule "applyEq" (formula "25") (term "0,1,1,0,0") (ifseqformula "2"))
                                             (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "25") (term "0,1,1,0,0"))
                                             (rule "polySimp_mulAssoc" (formula "25") (term "0,0,1,1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "25") (term "0,0,0,1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "25") (term "0,0,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "25") (term "0,0,1,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "25") (term "1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "25") (term "0,1,0,0"))
                                             (rule "polySimp_addComm0" (formula "25") (term "0,0,1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,1,0,0"))
                                             (rule "add_literals" (formula "25") (term "1,1,0,1,0,0"))
                                             (rule "times_zero_1" (formula "25") (term "1,0,1,0,0"))
                                             (rule "add_zero_right" (formula "25") (term "0,1,0,0"))
                                             (rule "applyEq" (formula "28") (term "0") (ifseqformula "2"))
                                             (rule "inEqSimp_homoInEq0" (formula "28"))
                                             (rule "polySimp_mulComm0" (formula "28") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "28") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "28") (term "0,1,0"))
                                             (rule "polySimp_mulAssoc" (formula "28") (term "0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "28") (term "0,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "28") (term "0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "28") (term "0,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "28") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "28") (term "0,0"))
                                             (rule "polySimp_addComm0" (formula "28") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0"))
                                             (rule "add_literals" (formula "28") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "28") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "28") (term "0,0"))
                                             (rule "applyEq" (formula "48") (term "0,1,1,0") (ifseqformula "2"))
                                             (rule "polySimp_mulComm0" (formula "48") (term "1,1,0"))
                                             (rule "polySimp_rightDist" (formula "48") (term "1,1,0"))
                                             (rule "polySimp_rightDist" (formula "48") (term "0,1,1,0"))
                                             (rule "polySimp_mulAssoc" (formula "48") (term "0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "48") (term "0,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "48") (term "0,0,1,1,0"))
                                             (rule "polySimp_elimOne" (formula "48") (term "0,0,1,1,0"))
                                             (rule "polySimp_addAssoc" (formula "48") (term "1,0"))
                                             (rule "polySimp_addAssoc" (formula "48") (term "0,1,0"))
                                             (rule "polySimp_addComm0" (formula "48") (term "0,0,1,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "48") (term "0,1,0"))
                                             (rule "add_literals" (formula "48") (term "1,1,0,1,0"))
                                             (rule "times_zero_1" (formula "48") (term "1,0,1,0"))
                                             (rule "add_zero_right" (formula "48") (term "0,1,0"))
                                             (rule "close" (formula "48") (ifseqformula "11"))
                                          )
                                          (branch "   self.size * quotient_0
=   result_0 * -1
  + s.hashCode@(java.lang.String)()
  + self.size * quotient_4 FALSE"
                                             (rule "replace_known_left" (formula "2") (term "1") (ifseqformula "25"))
                                             (rule "concrete_or_3" (formula "2"))
                                             (rule "true_left" (formula "2"))
                                             (rule "allLeft" (formula "2") (inst "t=jmod({self.elements@(StringSet)[jmod(result_0,
                                     self.size@(StringSet))]:=
      s}
       s_2.hashCode@(java.lang.String)(),
     self.size@(StringSet))"))
                                             (rule "applyEq" (formula "2") (term "2,0,0,1") (ifseqformula "7"))
                                             (rule "ifthenelse_split" (formula "2") (term "0,0,1"))
                                             (branch "   self.size * quotient_4
=   result_0
  +   jmod({self.elements[jmod(result_0, self.size)]:=s}
             s_2.hashCode@(java.lang.String)(),
           self.size)
    * -1 TRUE"
                                                (rule "replace_known_left" (formula "3") (term "1") (ifseqformula "41"))
                                                (rule "concrete_or_3" (formula "3"))
                                                (rule "true_left" (formula "3"))
                                                (rule "applyEq" (formula "11") (term "0,1,1,0") (ifseqformula "2"))
                                                (rule "polySimp_mulComm0" (formula "11") (term "1,1,0"))
                                                (rule "polySimp_rightDist" (formula "11") (term "1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "11") (term "0,1,1,0"))
                                                (rule "polySimp_addAssoc" (formula "11") (term "1,0"))
                                                (rule "polySimp_pullOutFactor1" (formula "11") (term "0,1,0"))
                                                (rule "add_literals" (formula "11") (term "1,0,1,0"))
                                                (rule "times_zero_1" (formula "11") (term "0,1,0"))
                                                (rule "add_zero_left" (formula "11") (term "1,0"))
                                                (rule "applyEq" (formula "3") (term "0,0,0,0,1,0") (ifseqformula "2"))
                                                (rule "polySimp_homoEq" (formula "3") (term "0,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0,0,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "3") (term "1,1,0,0,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "3") (term "0,1,0,0,0,0,1,0"))
                                                (rule "polySimp_addComm1" (formula "3") (term "0,0,0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "3") (term "0,0,0,0,0,1,0"))
                                                (rule "polySimp_pullOutFactor1" (formula "3") (term "0,0,0,0,0,0,1,0"))
                                                (rule "add_literals" (formula "3") (term "1,0,0,0,0,0,0,1,0"))
                                                (rule "times_zero_1" (formula "3") (term "0,0,0,0,0,0,1,0"))
                                                (rule "add_zero_left" (formula "3") (term "0,0,0,0,0,1,0"))
                                                (rule "applyEq" (formula "3") (term "0,0,0,0") (ifseqformula "2"))
                                                (rule "polySimp_homoEq" (formula "3") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "3") (term "1,1,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "3") (term "0,1,0,0,0,0"))
                                                (rule "polySimp_addComm1" (formula "3") (term "0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "3") (term "0,0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1" (formula "3") (term "0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "3") (term "1,0,0,0,0,0,0"))
                                                (rule "times_zero_1" (formula "3") (term "0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "3") (term "0,0,0,0,0"))
                                                (rule "applyEq" (formula "18") (term "0") (ifseqformula "2"))
                                                (rule "inEqSimp_homoInEq0" (formula "18"))
                                                (rule "polySimp_mulComm0" (formula "18") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "18") (term "1,0"))
                                                (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0"))
                                                (rule "polySimp_elimOne" (formula "18") (term "1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "18") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "18") (term "0"))
                                                (rule "polySimp_pullOutFactor1" (formula "18") (term "0,0"))
                                                (rule "add_literals" (formula "18") (term "1,0,0"))
                                                (rule "times_zero_1" (formula "18") (term "0,0"))
                                                (rule "add_zero_left" (formula "18") (term "0"))
                                                (rule "applyEq" (formula "46") (term "0") (ifseqformula "2"))
                                                (rule "polySimp_homoEq" (formula "46"))
                                                (rule "polySimp_mulComm0" (formula "46") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "46") (term "1,0"))
                                                (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0"))
                                                (rule "polySimp_elimOne" (formula "46") (term "1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "46") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "46") (term "0"))
                                                (rule "polySimp_addComm1" (formula "46") (term "0,0"))
                                                (rule "polySimp_pullOutFactor1" (formula "46") (term "0,0,0"))
                                                (rule "add_literals" (formula "46") (term "1,0,0,0"))
                                                (rule "times_zero_1" (formula "46") (term "0,0,0"))
                                                (rule "add_zero_left" (formula "46") (term "0,0"))
                                                (rule "applyEq" (formula "19") (term "0") (ifseqformula "2"))
                                                (rule "inEqSimp_homoInEq1" (formula "19"))
                                                (rule "polySimp_mulComm0" (formula "19") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "19") (term "1,0"))
                                                (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0"))
                                                (rule "polySimp_elimOne" (formula "19") (term "1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "19") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "19") (term "0"))
                                                (rule "polySimp_addComm1" (formula "19") (term "0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,0"))
                                                (rule "add_literals" (formula "19") (term "1,1,0,0,0"))
                                                (rule "times_zero_1" (formula "19") (term "1,0,0,0"))
                                                (rule "add_literals" (formula "19") (term "0,0,0"))
                                                (rule "applyEq" (formula "41") (term "1,1") (ifseqformula "2"))
                                                (rule "polySimp_addAssoc" (formula "41") (term "1"))
                                                (rule "polySimp_addComm1" (formula "41") (term "0,1"))
                                                (rule "polySimp_pullOutFactor2" (formula "41") (term "0,0,1"))
                                                (rule "add_literals" (formula "41") (term "1,0,0,1"))
                                                (rule "times_zero_1" (formula "41") (term "0,0,1"))
                                                (rule "add_zero_left" (formula "41") (term "0,1"))
                                                (rule "applyEq" (formula "7") (term "0") (ifseqformula "11"))
                                                (rule "eqSymm" (formula "7"))
                                                (rule "close" (formula "44") (ifseqformula "7"))
                                             )
                                             (branch "   self.size * quotient_4
=   result_0
  +   jmod({self.elements[jmod(result_0, self.size)]:=s}
             s_2.hashCode@(java.lang.String)(),
           self.size)
    * -1 FALSE"
                                                (rule "replace_known_left" (formula "2") (term "1") (ifseqformula "6"))
                                                (rule "concrete_or_3" (formula "2"))
                                                (rule "true_left" (formula "2"))
                                                (rule "allLeft" (formula "2") (inst "t=self.size@(StringSet) * quotient_4"))
                                                (rule "polySimp_homoEq" (formula "2") (term "0,0"))
                                                (rule "polySimp_homoEq" (formula "2") (term "0,0,0,1"))
                                                (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0,0"))
                                                (rule "add_literals" (formula "2") (term "1,1,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0,0,0,1"))
                                                (rule "add_literals" (formula "2") (term "1,1,0,0,0,0,1"))
                                                (rule "polySimp_sepNegMonomial" (formula "2") (term "0,0"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "0,0,0"))
                                                (rule "polySimp_sepNegMonomial" (formula "2") (term "0,0,0,1"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "0,0,0,0,1"))
                                                (rule "ifthenelse_split" (formula "2") (term "0,0,1"))
                                                (branch " self.size * quotient_4 * 2 = result_0 TRUE"
                                                   (rule "replace_known_left" (formula "3") (term "1") (ifseqformula "41"))
                                                   (rule "concrete_or_3" (formula "3"))
                                                   (rule "true_left" (formula "3"))
                                                   (rule "apply_eq_monomials" (formula "11") (term "1,1,0") (ifseqformula "2"))
                                                   (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "11") (term "0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,1,0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "11") (term "1,1,0"))
                                                   (rule "add_literals" (formula "11") (term "1,1,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "11") (term "0,1,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "11") (term "1,0"))
                                                   (rule "polySimp_pullOutFactor1" (formula "11") (term "0,1,0"))
                                                   (rule "add_literals" (formula "11") (term "1,0,1,0"))
                                                   (rule "times_zero_1" (formula "11") (term "0,1,0"))
                                                   (rule "add_zero_left" (formula "11") (term "1,0"))
                                                   (rule "apply_eq_pseudo_eq" (formula "47") (inst "aePseudoTargetFactor=1") (ifseqformula "2"))
                                                   (rule "equal_literals" (formula "47") (term "0,1,0"))
                                                   (rule "concrete_not_2" (formula "47") (term "1,0"))
                                                   (rule "concrete_and_3" (formula "47") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "47") (term "1,0"))
                                                   (rule "eqClose" (formula "47") (term "0"))
                                                   (rule "ifthenelse_true_for" (formula "47"))
                                                   (rule "polySimp_elimOne" (formula "47") (term "0"))
                                                   (rule "polySimp_mulComm0" (formula "47") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "47") (term "1"))
                                                   (rule "polySimp_mulLiterals" (formula "47") (term "1,1"))
                                                   (rule "polySimp_mulComm0" (formula "47") (term "0,1"))
                                                   (rule "polySimp_homoEq" (formula "47"))
                                                   (rule "polySimp_addComm1" (formula "47") (term "0"))
                                                   (rule "polySimp_pullOutFactor0" (formula "47") (term "0,0"))
                                                   (rule "add_literals" (formula "47") (term "1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "47") (term "0,0"))
                                                   (rule "polySimp_sepNegMonomial" (formula "47"))
                                                   (rule "polySimp_mulLiterals" (formula "47") (term "0"))
                                                   (rule "apply_eq_pseudo_eq" (formula "3") (term "0,0,0") (inst "aePseudoTargetFactor=1") (ifseqformula "2"))
                                                   (rule "equal_literals" (formula "3") (term "0,1,0,0,0,0"))
                                                   (rule "concrete_not_2" (formula "3") (term "1,0,0,0,0"))
                                                   (rule "concrete_and_3" (formula "3") (term "0,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "3") (term "1,0,0,0,0"))
                                                   (rule "eqClose" (formula "3") (term "0,0,0,0"))
                                                   (rule "ifthenelse_true_for" (formula "3") (term "0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "3") (term "0,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "3") (term "0,1,0,0,0"))
                                                   (rule "polySimp_homoEq" (formula "3") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "3") (term "0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor0" (formula "3") (term "0,0,0,0,0"))
                                                   (rule "add_literals" (formula "3") (term "1,0,0,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "3") (term "0,0,0,0,0"))
                                                   (rule "polySimp_sepNegMonomial" (formula "3") (term "0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "3") (term "0,0,0,0"))
                                                   (rule "apply_eq_pseudo_eq" (formula "3") (term "0,0,0,1,0") (inst "aePseudoTargetFactor=1") (ifseqformula "2"))
                                                   (rule "equal_literals" (formula "3") (term "0,1,0,0,0,0,1,0"))
                                                   (rule "concrete_not_2" (formula "3") (term "1,0,0,0,0,1,0"))
                                                   (rule "concrete_and_3" (formula "3") (term "0,0,0,0,1,0"))
                                                   (rule "polySimp_homoEq" (formula "3") (term "0,0,0,0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "3") (term "0,0,0,0,0,0,1,0"))
                                                   (rule "polySimp_pullOutFactor1" (formula "3") (term "0,0,0,0,0,1,0"))
                                                   (rule "add_literals" (formula "3") (term "1,0,0,0,0,0,1,0"))
                                                   (rule "times_zero_1" (formula "3") (term "0,0,0,0,0,1,0"))
                                                   (rule "eqClose" (formula "3") (term "0,0,0,0,1,0"))
                                                   (rule "ifthenelse_true_for" (formula "3") (term "0,0,0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "3") (term "0,0,0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "3") (term "0,1,0,0,0,1,0"))
                                                   (rule "polySimp_homoEq" (formula "3") (term "0,0,0,1,0"))
                                                   (rule "polySimp_addComm1" (formula "3") (term "0,0,0,0,1,0"))
                                                   (rule "polySimp_pullOutFactor0" (formula "3") (term "0,0,0,0,0,1,0"))
                                                   (rule "add_literals" (formula "3") (term "1,0,0,0,0,0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "3") (term "0,0,0,0,0,1,0"))
                                                   (rule "polySimp_sepNegMonomial" (formula "3") (term "0,0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "3") (term "0,0,0,0,1,0"))
                                                   (rule "apply_eq_pseudo_eq" (formula "41") (inst "aePseudoTargetFactor=1") (ifseqformula "2"))
                                                   (rule "equal_literals" (formula "41") (term "0,1,0"))
                                                   (rule "concrete_not_2" (formula "41") (term "1,0"))
                                                   (rule "concrete_and_3" (formula "41") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "41") (term "1,0"))
                                                   (rule "eqClose" (formula "41") (term "0"))
                                                   (rule "ifthenelse_true_for" (formula "41"))
                                                   (rule "polySimp_elimOne" (formula "41") (term "0"))
                                                   (rule "polySimp_mulComm0" (formula "41") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "41") (term "1"))
                                                   (rule "polySimp_mulLiterals" (formula "41") (term "1,1"))
                                                   (rule "polySimp_mulComm0" (formula "41") (term "0,1"))
                                                   (rule "polySimp_homoEq" (formula "41"))
                                                   (rule "polySimp_addComm1" (formula "41") (term "0"))
                                                   (rule "polySimp_pullOutFactor0" (formula "41") (term "0,0"))
                                                   (rule "add_literals" (formula "41") (term "1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "41") (term "0,0"))
                                                   (rule "polySimp_sepNegMonomial" (formula "41"))
                                                   (rule "polySimp_mulLiterals" (formula "41") (term "0"))
                                                   (rule "apply_eq_pseudo_geq" (formula "19") (inst "aePseudoTargetFactor=1") (ifseqformula "2"))
                                                   (rule "greater_literals" (formula "19") (term "1,0"))
                                                   (rule "concrete_and_3" (formula "19") (term "0"))
                                                   (rule "polySimp_homoEq" (formula "19") (term "0"))
                                                   (rule "polySimp_pullOutFactor0" (formula "19") (term "0,0"))
                                                   (rule "add_literals" (formula "19") (term "1,0,0"))
                                                   (rule "times_zero_1" (formula "19") (term "0,0"))
                                                   (rule "eqClose" (formula "19") (term "0"))
                                                   (rule "ifthenelse_true_for" (formula "19"))
                                                   (rule "polySimp_elimOne" (formula "19") (term "0"))
                                                   (rule "polySimp_mulComm0" (formula "19") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "19") (term "1"))
                                                   (rule "polySimp_mulLiterals" (formula "19") (term "1,1"))
                                                   (rule "polySimp_rightDist" (formula "19") (term "0,1"))
                                                   (rule "mul_literals" (formula "19") (term "0,0,1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "19"))
                                                   (rule "polySimp_addComm1" (formula "19") (term "0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "19") (term "0,0"))
                                                   (rule "add_literals" (formula "19") (term "1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "19") (term "1,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "19"))
                                                   (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                                                   (rule "apply_eq_pseudo_leq" (formula "18") (inst "aePseudoTargetFactor=1") (ifseqformula "2"))
                                                   (rule "greater_literals" (formula "18") (term "1,0"))
                                                   (rule "concrete_and_3" (formula "18") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "18") (term "1,0"))
                                                   (rule "eqClose" (formula "18") (term "0"))
                                                   (rule "ifthenelse_true_for" (formula "18"))
                                                   (rule "polySimp_elimOne" (formula "18") (term "0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "18"))
                                                   (rule "polySimp_pullOutFactor0" (formula "18") (term "0"))
                                                   (rule "add_literals" (formula "18") (term "1,0"))
                                                   (rule "polySimp_elimOne" (formula "18") (term "0"))
                                                   (rule "polyDiv_pullOut" (formula "14") (term "0") (inst "polyDivCoeff=quotient_4 * -2"))
                                                   (rule "polySimp_mulLiterals" (formula "14") (term "0,1,0,0,2,0"))
                                                   (rule "polySimp_mulComm1" (formula "14") (term "1,0,0,2,0"))
                                                   (rule "polySimp_mulComm0" (formula "14") (term "0,1,0,0,2,0"))
                                                   (rule "polySimp_addComm0" (formula "14") (term "2,0"))
                                                   (rule "applyEq" (formula "14") (term "1,0,1,2,0") (ifseqformula "2"))
                                                   (rule "polySimp_pullOutFactor2" (formula "14") (term "0,1,2,0"))
                                                   (rule "add_literals" (formula "14") (term "1,0,1,2,0"))
                                                   (rule "times_zero_1" (formula "14") (term "0,1,2,0"))
                                                   (rule "inEqSimp_contradEq7" (formula "14") (term "0,0") (ifseqformula "33"))
                                                   (rule "times_zero_1" (formula "14") (term "1,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "14") (term "0,0,0,0"))
                                                   (rule "leq_literals" (formula "14") (term "0,0,0"))
                                                   (rule "concrete_and_2" (formula "14") (term "0,0"))
                                                   (rule "ifthenelse_false" (formula "14") (term "0"))
                                                   (rule "polySimp_homoEq" (formula "14"))
                                                   (rule "polySimp_mulComm0" (formula "14") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "14") (term "1,0"))
                                                   (rule "polySimp_mulComm0" (formula "14") (term "0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "14") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "14") (term "0"))
                                                   (rule "polySimp_addComm0" (formula "14") (term "0,0"))
                                                   (rule "polySimp_sepNegMonomial" (formula "14"))
                                                   (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "14") (term "0"))
                                                   (rule "polyDiv_zero" (formula "14") (term "0"))
                                                   (rule "div_literals" (formula "14") (term "1,0"))
                                                   (rule "inEqSimp_contradEq7" (formula "14") (term "0,0") (ifseqformula "33"))
                                                   (rule "times_zero_1" (formula "14") (term "1,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "14") (term "0,0,0,0"))
                                                   (rule "leq_literals" (formula "14") (term "0,0,0"))
                                                   (rule "concrete_and_2" (formula "14") (term "0,0"))
                                                   (rule "ifthenelse_false" (formula "14") (term "0"))
                                                   (rule "polySimp_homoEq" (formula "14"))
                                                   (rule "times_zero_2" (formula "14") (term "1,0"))
                                                   (rule "add_zero_right" (formula "14") (term "0"))
                                                   (rule "polySimp_sepPosMonomial" (formula "14"))
                                                   (rule "polySimp_mulLiterals" (formula "14") (term "1"))
                                                   (rule "applyEqRigid" (formula "16") (term "1,0") (ifseqformula "14"))
                                                   (rule "polySimp_mulAssoc" (formula "16") (term "0"))
                                                   (rule "inEqSimp_homoInEq1" (formula "16"))
                                                   (rule "polySimp_mulLiterals" (formula "16") (term "1,0"))
                                                   (rule "applyEq" (formula "15") (term "1,0") (ifseqformula "14"))
                                                   (rule "polySimp_mulAssoc" (formula "15") (term "0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "15"))
                                                   (rule "polySimp_mulLiterals" (formula "15") (term "1,0"))
                                                   (rule "applyEq" (formula "16") (term "1,0") (ifseqformula "2"))
                                                   (rule "polySimp_addComm1" (formula "16") (term "0"))
                                                   (rule "polySimp_pullOutFactor2b" (formula "16") (term "0,0"))
                                                   (rule "add_literals" (formula "16") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "16") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "16") (term "0,0"))
                                                   (rule "applyEq" (formula "15") (term "1,0") (ifseqformula "2"))
                                                   (rule "polySimp_pullOutFactor2" (formula "15") (term "0"))
                                                   (rule "add_literals" (formula "15") (term "1,0"))
                                                   (rule "times_zero_1" (formula "15") (term "0"))
                                                   (rule "qeq_literals" (formula "15"))
                                                   (rule "true_left" (formula "15"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "15"))
                                                   (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "15") (term "0"))
                                                   (rule "polyDiv_pullOut" (formula "15") (term "0") (inst "polyDivCoeff=quotient_4 * 2"))
                                                   (rule "polySimp_mulLiterals" (formula "15") (term "0,1,0,0,2,0"))
                                                   (rule "polySimp_mulComm1" (formula "15") (term "1,0,0,2,0"))
                                                   (rule "polySimp_mulComm0" (formula "15") (term "0,1,0,0,2,0"))
                                                   (rule "polySimp_addComm0" (formula "15") (term "2,0"))
                                                   (rule "apply_eq_monomials" (formula "15") (term "1,0,1,2,0") (ifseqformula "2"))
                                                   (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,1,0,1,2,0"))
                                                   (rule "polySimp_rightDist" (formula "15") (term "0,1,0,1,2,0"))
                                                   (rule "polySimp_mulLiterals" (formula "15") (term "1,0,1,0,1,2,0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "15") (term "1,0,1,2,0"))
                                                   (rule "add_literals" (formula "15") (term "1,1,1,0,1,2,0"))
                                                   (rule "times_zero_1" (formula "15") (term "1,1,0,1,2,0"))
                                                   (rule "add_zero_right" (formula "15") (term "1,0,1,2,0"))
                                                   (rule "polySimp_mulComm0" (formula "15") (term "1,0,1,2,0"))
                                                   (rule "polySimp_pullOutFactor1" (formula "15") (term "0,1,2,0"))
                                                   (rule "add_literals" (formula "15") (term "1,0,1,2,0"))
                                                   (rule "times_zero_1" (formula "15") (term "0,1,2,0"))
                                                   (rule "inEqSimp_contradEq7" (formula "15") (term "0,0") (ifseqformula "31"))
                                                   (rule "times_zero_1" (formula "15") (term "1,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "15") (term "0,0,0,0"))
                                                   (rule "leq_literals" (formula "15") (term "0,0,0"))
                                                   (rule "concrete_and_2" (formula "15") (term "0,0"))
                                                   (rule "ifthenelse_false" (formula "15") (term "0"))
                                                   (rule "polySimp_homoEq" (formula "15"))
                                                   (rule "polySimp_mulComm0" (formula "15") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "15") (term "1,0"))
                                                   (rule "polySimp_mulAssoc" (formula "15") (term "0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "15") (term "0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "15") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "15") (term "0"))
                                                   (rule "polySimp_pullOutFactor1" (formula "15") (term "0,0"))
                                                   (rule "add_literals" (formula "15") (term "1,0,0"))
                                                   (rule "polySimp_sepNegMonomial" (formula "15"))
                                                   (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "15") (term "0"))
                                                   (rule "polyDiv_zero" (formula "15") (term "0"))
                                                   (rule "div_literals" (formula "15") (term "1,0"))
                                                   (rule "inEqSimp_contradEq7" (formula "15") (term "0,0") (ifseqformula "31"))
                                                   (rule "times_zero_1" (formula "15") (term "1,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "15") (term "0,0,0,0"))
                                                   (rule "leq_literals" (formula "15") (term "0,0,0"))
                                                   (rule "concrete_and_2" (formula "15") (term "0,0"))
                                                   (rule "ifthenelse_false" (formula "15") (term "0"))
                                                   (rule "eqSymm" (formula "15"))
                                                   (rule "polySimp_invertEq" (formula "15"))
                                                   (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                                                   (rule "times_zero_2" (formula "15") (term "1"))
                                                   (rule "polySimp_elimOne" (formula "15") (term "0"))
                                                   (rule "applyEq" (formula "11") (term "1,1,0") (ifseqformula "15"))
                                                   (rule "times_zero_1" (formula "11") (term "1,0"))
                                                   (rule "applyEq" (formula "2") (term "1,0,0") (ifseqformula "15"))
                                                   (rule "times_zero_1" (formula "2") (term "0,0"))
                                                   (rule "mul_literals" (formula "2") (term "0"))
                                                   (rule "eqSymm" (formula "2"))
                                                   (rule "applyEq" (formula "18") (term "1") (ifseqformula "15"))
                                                   (rule "applyEq" (formula "39") (term "1,1,1") (ifseqformula "15"))
                                                   (rule "times_zero_1" (formula "39") (term "1,1"))
                                                   (rule "add_zero_right" (formula "39") (term "1"))
                                                   (rule "applyEq" (formula "14") (term "0,1") (ifseqformula "15"))
                                                   (rule "times_zero_2" (formula "14") (term "1"))
                                                   (rule "applyEq" (formula "16") (term "1,1") (ifseqformula "2"))
                                                   (rule "add_zero_right" (formula "16") (term "1"))
                                                   (rule "applyEq" (formula "44") (term "0,1,0,0,0") (ifseqformula "2"))
                                                   (rule "applyEq" (formula "43") (term "0,1,0") (ifseqformula "2"))
                                                   (rule "applyEq" (formula "18") (term "0,0") (ifseqformula "2"))
                                                   (rule "jdiv_axiom_inline" (formula "18") (term "0"))
                                                   (rule "qeq_literals" (formula "18") (term "0,0"))
                                                   (rule "ifthenelse_true" (formula "18") (term "0"))
                                                   (rule "applyEq" (formula "38") (term "0,1,0,0,0") (ifseqformula "2"))
                                                   (rule "applyEq" (formula "17") (term "0") (ifseqformula "2"))
                                                   (rule "qeq_literals" (formula "17"))
                                                   (rule "true_left" (formula "17"))
                                                   (rule "applyEq" (formula "7") (term "0,1,0,1,0") (ifseqformula "2"))
                                                   (rule "applyEq" (formula "10") (term "1") (ifseqformula "2"))
                                                   (rule "applyEq" (formula "13") (term "1") (ifseqformula "2"))
                                                   (rule "applyEq" (formula "37") (term "1") (ifseqformula "2"))
                                                   (rule "applyEq" (formula "19") (term "1") (ifseqformula "2"))
                                                   (rule "applyEq" (formula "3") (term "1,0,0,0,1,0") (ifseqformula "2"))
                                                   (rule "applyEq" (formula "43") (term "1") (ifseqformula "2"))
                                                   (rule "applyEq" (formula "3") (term "1,0,0,0") (ifseqformula "2"))
                                                   (rule "applyEq" (formula "38") (term "0,0,1") (ifseqformula "2"))
                                                   (rule "times_zero_2" (formula "38") (term "0,1"))
                                                   (rule "add_zero_left" (formula "38") (term "1"))
                                                   (rule "inEqSimp_strengthen0" (formula "24") (ifseqformula "38"))
                                                   (rule "inEqSimp_contradEq3" (formula "38") (ifseqformula "24"))
                                                   (rule "polySimp_mulComm0" (formula "38") (term "1,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "38") (term "0,0"))
                                                   (rule "add_literals" (formula "38") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "38") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "38") (term "0,0"))
                                                   (rule "qeq_literals" (formula "38") (term "0"))
                                                   (rule "concrete_and_2" (formula "38"))
                                                   (rule "false_right" (formula "38"))
                                                   (rule "inEqSimp_subsumption6" (formula "16") (ifseqformula "30"))
                                                   (rule "mul_literals" (formula "16") (term "1,1,0"))
                                                   (rule "greater_literals" (formula "16") (term "0,0"))
                                                   (rule "concrete_and_1" (formula "16") (term "0"))
                                                   (rule "leq_literals" (formula "16") (term "0"))
                                                   (rule "concrete_or_1" (formula "16"))
                                                   (rule "true_left" (formula "16"))
                                                   (rule "polyDiv_zero" (formula "16") (term "0"))
                                                   (rule "div_literals" (formula "16") (term "1,0"))
                                                   (rule "inEqSimp_contradEq7" (formula "16") (term "0,0") (ifseqformula "29"))
                                                   (rule "times_zero_1" (formula "16") (term "1,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "16") (term "0,0,0,0"))
                                                   (rule "leq_literals" (formula "16") (term "0,0,0"))
                                                   (rule "concrete_and_2" (formula "16") (term "0,0"))
                                                   (rule "ifthenelse_false" (formula "16") (term "0"))
                                                   (rule "eqClose" (formula "16"))
                                                   (rule "true_left" (formula "16"))
                                                   (rule "elimGcdEq" (formula "3") (term "0,0,0") (inst "elimGcdRightDiv=0") (inst "elimGcdLeftDiv=i1irs") (inst "elimGcd=2"))
                                                   (rule "eqClose" (formula "3") (term "0,0,0,0,0,0"))
                                                   (rule "concrete_and_1" (formula "3") (term "0,0,0,0,0"))
                                                   (rule "mul_literals" (formula "3") (term "0,1,0,1,0,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0,0,0,0"))
                                                   (rule "add_literals" (formula "3") (term "1,0,0,0,0,0"))
                                                   (rule "times_zero_1" (formula "3") (term "1,0,1,0,0,0,0"))
                                                   (rule "add_zero_left" (formula "3") (term "0,0,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "3") (term "0,1,0,0,0,0"))
                                                   (rule "times_zero_1" (formula "3") (term "0,0,0,0,0,0"))
                                                   (rule "qeq_literals" (formula "3") (term "1,0,0,0,0"))
                                                   (rule "concrete_and_3" (formula "3") (term "0,0,0,0"))
                                                   (rule "leq_literals" (formula "3") (term "0,0,0,0"))
                                                   (rule "ifthenelse_true_for" (formula "3") (term "0,0,0"))
                                                   (rule "add_zero_left" (formula "3") (term "0,0,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "3") (term "0,0,0,0,0"))
                                                   (rule "times_zero_1" (formula "3") (term "0,0,0,0,0"))
                                                   (rule "eqClose" (formula "3") (term "0,0,0,0"))
                                                   (rule "concrete_and_1" (formula "3") (term "0,0,0"))
                                                   (rule "elimGcdEq" (formula "40") (inst "elimGcdRightDiv=0") (inst "elimGcdLeftDiv=jmod({self.elements@(StringSet)[jmod(0,
                                     self.size@(StringSet))]:=
      s}
       s_1.hashCode@(java.lang.String)(),
     self.size@(StringSet))") (inst "elimGcd=2"))
                                                   (rule "eqClose" (formula "40") (term "0,0,0"))
                                                   (rule "concrete_and_1" (formula "40") (term "0,0"))
                                                   (rule "mul_literals" (formula "40") (term "0,1,0,1,0"))
                                                   (rule "add_zero_left" (formula "40") (term "0,0,0"))
                                                   (rule "add_literals" (formula "40") (term "1,0,0"))
                                                   (rule "times_zero_1" (formula "40") (term "1,0,1,0"))
                                                   (rule "times_zero_1" (formula "40") (term "0,0,0"))
                                                   (rule "add_zero_right" (formula "40") (term "0,1,0"))
                                                   (rule "leq_literals" (formula "40") (term "0,0"))
                                                   (rule "concrete_and_1" (formula "40") (term "0"))
                                                   (rule "qeq_literals" (formula "40") (term "0"))
                                                   (rule "ifthenelse_true_for" (formula "40"))
                                                   (rule "add_zero_left" (formula "40") (term "0,0"))
                                                   (rule "mul_literals" (formula "40") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "40") (term "0,0"))
                                                   (rule "eqClose" (formula "40") (term "0"))
                                                   (rule "concrete_and_1" (formula "40"))
                                                   (rule "elimGcdEq" (formula "3") (term "0,0,0,1,0") (inst "elimGcdRightDiv=0") (inst "elimGcdLeftDiv=i1irs") (inst "elimGcd=2"))
                                                   (rule "eqClose" (formula "3") (term "0,0,0,0,0,0,1,0"))
                                                   (rule "concrete_and_1" (formula "3") (term "0,0,0,0,0,1,0"))
                                                   (rule "mul_literals" (formula "3") (term "0,1,0,1,0,0,0,0,1,0"))
                                                   (rule "add_literals" (formula "3") (term "1,0,0,0,0,0,1,0"))
                                                   (rule "mul_literals" (formula "3") (term "0,1,0,0,0,0,0,0,1,0"))
                                                   (rule "mul_literals" (formula "3") (term "1,0,1,0,0,0,0,1,0"))
                                                   (rule "mul_literals" (formula "3") (term "1,0,0,0,0,0,0,1,0"))
                                                   (rule "add_zero_right" (formula "3") (term "0,1,0,0,0,0,1,0"))
                                                   (rule "add_zero_left" (formula "3") (term "0,0,0,0,0,0,1,0"))
                                                   (rule "qeq_literals" (formula "3") (term "1,0,0,0,0,1,0"))
                                                   (rule "concrete_and_3" (formula "3") (term "0,0,0,0,1,0"))
                                                   (rule "leq_literals" (formula "3") (term "0,0,0,0,1,0"))
                                                   (rule "ifthenelse_true_for" (formula "3") (term "0,0,0,1,0"))
                                                   (rule "mul_literals" (formula "3") (term "0,1,0,0,0,0,0,1,0"))
                                                   (rule "times_zero_1" (formula "3") (term "1,0,0,0,0,0,1,0"))
                                                   (rule "add_zero_right" (formula "3") (term "0,0,0,0,0,1,0"))
                                                   (rule "eqClose" (formula "3") (term "0,0,0,0,1,0"))
                                                   (rule "concrete_and_1" (formula "3") (term "0,0,0,1,0"))
                                                   (rule "elimGcdEq" (formula "35") (inst "elimGcdRightDiv=0") (inst "elimGcdLeftDiv=jmod({self.elements@(StringSet)[jmod(0,
                                     self.size@(StringSet))]:=
      s}
       s_2.hashCode@(java.lang.String)(),
     self.size@(StringSet))") (inst "elimGcd=2"))
                                                   (rule "eqClose" (formula "35") (term "0,0,0"))
                                                   (rule "concrete_and_1" (formula "35") (term "0,0"))
                                                   (rule "mul_literals" (formula "35") (term "0,1,0,1,0"))
                                                   (rule "add_literals" (formula "35") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "35") (term "0,1,0,0,0"))
                                                   (rule "add_zero_left" (formula "35") (term "0,1,0"))
                                                   (rule "add_zero_left" (formula "35") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "35") (term "0,1,0"))
                                                   (rule "times_zero_1" (formula "35") (term "0,0,0"))
                                                   (rule "qeq_literals" (formula "35") (term "1,0"))
                                                   (rule "concrete_and_3" (formula "35") (term "0"))
                                                   (rule "leq_literals" (formula "35") (term "0"))
                                                   (rule "ifthenelse_true_for" (formula "35"))
                                                   (rule "add_zero_left" (formula "35") (term "0,0"))
                                                   (rule "times_zero_1" (formula "35") (term "0,0"))
                                                   (rule "eqClose" (formula "35") (term "0"))
                                                   (rule "concrete_and_1" (formula "35"))
                                                   (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "22"))
                                                   (rule "polySimp_rightDist" (formula "23") (term "0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "23") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "23") (term "0"))
                                                   (rule "polySimp_rightDist" (formula "23") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "23") (term "0,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "23") (term "0,0"))
                                                   (rule "polySimp_addComm1" (formula "23") (term "0,0,0"))
                                                   (rule "add_literals" (formula "23") (term "0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor2b" (formula "23") (term "0,0"))
                                                   (rule "add_literals" (formula "23") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "23") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "23") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "23"))
                                                   (rule "mul_literals" (formula "23") (term "1"))
                                                   (rule "inEqSimp_subsumption1" (formula "29") (ifseqformula "23"))
                                                   (rule "leq_literals" (formula "29") (term "0"))
                                                   (rule "concrete_or_1" (formula "29"))
                                                   (rule "true_left" (formula "29"))
                                                   (rule "commute_or" (formula "3") (term "0"))
                                                   (rule "elim_forall4" (formula "3"))
                                                   (rule "eqClose" (formula "3") (term "0,0,0"))
                                                   (rule "ifthenelse_true" (formula "3") (term "0,0"))
                                                   (rule "only_created_object_are_referenced_by_arrays_non_null2" (formula "6") (ifseqformula "19") (ifseqformula "25") (ifseqformula "37"))
                                                   (rule "resolvequery" (formula "20") (term "0,0") (inst "queryValue=java_lang_StringhashCode_1") (userinteraction))
                                                   (rule "eqSymm" (formula "21") (term "0,1,0"))
                                                   (rule "applyEq" (formula "28") (term "0") (ifseqformula "20"))
                                                   (rule "applyEq" (formula "26") (term "0,0") (ifseqformula "20"))
                                                   (rule "applyEq" (formula "23") (term "1,1") (ifseqformula "20"))
                                                   (rule "applyEq" (formula "18") (term "0,1,0,0") (ifseqformula "20"))
                                                   (rule "applyEq" (formula "25") (term "1,0,1") (ifseqformula "20"))
                                                   (rule "applyEq" (formula "44") (term "0,1,0") (ifseqformula "20"))
                                                   (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "23"))
                                                   (rule "polySimp_rightDist" (formula "25") (term "0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "25") (term "1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "25") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "25") (term "0"))
                                                   (rule "polySimp_rightDist" (formula "25") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "25") (term "0,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "25") (term "0,0"))
                                                   (rule "polySimp_addComm1" (formula "25") (term "0,0,0"))
                                                   (rule "add_literals" (formula "25") (term "0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor2b" (formula "25") (term "0,0"))
                                                   (rule "add_literals" (formula "25") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "25") (term "1,0,0"))
                                                   (rule "add_literals" (formula "25") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "25"))
                                                   (rule "mul_literals" (formula "25") (term "1"))
                                                   (rule "variableDeclaration" (formula "21") (newnames "hcode_1"))
                                                   (rule "variableDeclaration" (formula "21") (newnames "queryReceiver_3"))
                                                   (rule "emptyModality" (formula "21"))
                                                   (rule "div_axiom" (formula "22") (term "0") (inst "quotient=quotient_8"))
                                                   (rule "polySimp_mulComm0" (formula "22") (term "0,1,0,1"))
                                                   (rule "polySimp_mulComm0" (formula "22") (term "0,2,1,1"))
                                                   (rule "polySimp_mulComm0" (formula "22") (term "0,1,1,1"))
                                                   (rule "polySimp_mulComm0" (formula "22") (term "1,1,1,1,1"))
                                                   (rule "applyEq" (formula "22") (term "0,0,0,1") (ifseqformula "23"))
                                                   (rule "inEqSimp_contradEq7" (formula "22") (term "0") (ifseqformula "25"))
                                                   (rule "times_zero_1" (formula "22") (term "1,0,0,0"))
                                                   (rule "add_literals" (formula "22") (term "0,0,0"))
                                                   (rule "leq_literals" (formula "22") (term "0,0"))
                                                   (rule "concrete_and_2" (formula "22") (term "0"))
                                                   (rule "concrete_or_2" (formula "22"))
                                                   (rule "andLeft" (formula "22"))
                                                   (rule "andLeft" (formula "22"))
                                                   (rule "applyEqRigid" (formula "28") (term "1,0") (ifseqformula "22"))
                                                   (rule "replace_known_left" (formula "24") (term "1") (ifseqformula "28"))
                                                   (rule "applyEqRigid" (formula "26") (term "1,0") (ifseqformula "22"))
                                                   (rule "applyEq" (formula "47") (term "1,0,1,1,0") (ifseqformula "22"))
                                                   (rule "applyEqRigid" (formula "18") (term "1,0,1,1,0,0") (ifseqformula "22"))
                                                   (rule "applyEqRigid" (formula "25") (term "1") (ifseqformula "22"))
                                                   (rule "applyEqRigid" (formula "29") (term "1") (ifseqformula "22"))
                                                   (rule "inEqSimp_subsumption0" (formula "23") (ifseqformula "26"))
                                                   (rule "inEqSimp_homoInEq0" (formula "23") (term "0"))
                                                   (rule "polySimp_mulComm0" (formula "23") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "23") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "23") (term "0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "23") (term "0,0"))
                                                   (rule "polySimp_addComm0" (formula "23") (term "0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0"))
                                                   (rule "add_literals" (formula "23") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "23") (term "1,0,0"))
                                                   (rule "add_literals" (formula "23") (term "0,0"))
                                                   (rule "qeq_literals" (formula "23") (term "0"))
                                                   (rule "concrete_or_1" (formula "23"))
                                                   (rule "true_left" (formula "23"))
                                                   (rule "inEqSimp_subsumption1" (formula "23") (term "0") (ifseqformula "26"))
                                                   (rule "leq_literals" (formula "23") (term "0,0"))
                                                   (rule "concrete_or_1" (formula "23") (term "0"))
                                                   (rule "ifthenelse_true_for" (formula "23"))
                                                   (rule "true_left" (formula "23"))
                                                   (rule "inEqSimp_exactShadow3" (formula "26") (ifseqformula "24"))
                                                   (rule "polySimp_rightDist" (formula "26") (term "0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "26") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "26") (term "0"))
                                                   (rule "polySimp_rightDist" (formula "26") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "26") (term "0,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "26") (term "0,0"))
                                                   (rule "polySimp_addComm1" (formula "26") (term "0,0,0"))
                                                   (rule "add_literals" (formula "26") (term "0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor2b" (formula "26") (term "0,0"))
                                                   (rule "add_literals" (formula "26") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "26") (term "1,0,0"))
                                                   (rule "add_literals" (formula "26") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "26"))
                                                   (rule "mul_literals" (formula "26") (term "1"))
                                                   (rule "jdiv_axiom" (formula "27") (term "0"))
                                                   (rule "eqSymm" (formula "27"))
                                                   (rule "replace_known_left" (formula "27") (term "0,0") (ifseqformula "30"))
                                                   (rule "ifthenelse_true" (formula "27") (term "0"))
                                                   (rule "eqSymm" (formula "27"))
                                                   (rule "applyEq" (formula "27") (term "0") (ifseqformula "28"))
                                                   (rule "eqSymm" (formula "27"))
                                                   (rule "methodCallWithAssignment" (formula "21") (term "1") (inst "#v0=j"))
                                                   (branch " Normal Execution (queryReceiver_3 != null)"
                                                      (builtin "Update Simplification" (formula "37"))
                                                      (rule "variableDeclaration" (formula "21") (term "1") (newnames "j_13"))
                                                      (rule "only_created_object_are_referenced_by_arrays_non_null" (formula "45") (term "0") (ifseqformula "19") (ifseqformula "28") (ifseqformula "45"))
                                                      (rule "boxToDiamond" (formula "21") (term "1") (userinteraction))
                                                      (builtin "Update Simplification" (formula "21"))
                                                      (rule "notLeft" (formula "21") (userinteraction))
                                                      (builtin "Use Operation Contract" (formula "36") (term "1") (newnames "result_11") (contract "hashCode;;"))
                                                      (branch " Pre"
                                                         (builtin "Update Simplification" (formula "36"))
                                                         (rule "replace_known_left" (formula "36") (term "0") (ifseqformula "27"))
                                                         (rule "concrete_and_1" (formula "36"))
                                                         (rule "replace_known_left" (formula "36") (term "0") (ifseqformula "35"))
                                                         (rule "concrete_and_1" (formula "36"))
                                                         (rule "notRight" (formula "36"))
                                                         (rule "close" (formula "46") (ifseqformula "1"))
                                                      )
                                                      (branch " Post"
                                                         (builtin "Update Simplification" (formula "36"))
                                                         (rule "inInt" (formula "36") (term "1,1,0,0"))
                                                         (rule "concrete_and_3" (formula "36") (term "1,0,0"))
                                                         (rule "impRight" (formula "36"))
                                                         (rule "andLeft" (formula "1"))
                                                         (rule "andLeft" (formula "2"))
                                                         (rule "andLeft" (formula "1"))
                                                         (rule "eqSymm" (formula "1"))
                                                         (rule "applyEq" (formula "1") (term "0") (ifseqformula "18"))
                                                         (rule "eqSymm" (formula "1"))
                                                         (rule "applyEq" (formula "38") (term "0") (ifseqformula "1"))
                                                         (rule "blockEmpty" (formula "38") (term "1"))
                                                         (rule "assignment" (formula "38") (term "1"))
                                                         (builtin "Update Simplification" (formula "38"))
                                                         (rule "castDelInt" (formula "38") (term "0"))
                                                         (rule "methodCallEmpty" (formula "38") (term "1"))
                                                         (rule "emptyModality" (formula "38") (term "1"))
                                                         (builtin "Update Simplification" (formula "38"))
                                                         (rule "notRight" (formula "38"))
                                                         (rule "castDelInt" (formula "1") (term "1"))
                                                         (rule "applyEq" (formula "25") (term "0,0") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "26") (term "1,1") (ifseqformula "1"))
                                                         (rule "add_zero_right" (formula "26") (term "1"))
                                                         (rule "applyEqRigid" (formula "29") (term "0,0") (ifseqformula "1"))
                                                         (rule "jdiv_axiom_inline" (formula "29") (term "0"))
                                                         (rule "qeq_literals" (formula "29") (term "0,0"))
                                                         (rule "ifthenelse_true" (formula "29") (term "0"))
                                                         (rule "applyEq" (formula "30") (term "0") (ifseqformula "1"))
                                                         (rule "qeq_literals" (formula "30"))
                                                         (rule "true_left" (formula "30"))
                                                         (rule "applyEqRigid" (formula "21") (term "0,1,0,0") (ifseqformula "1"))
                                                         (rule "add_zero_left" (formula "21") (term "1,0,0"))
                                                         (rule "applyEqRigid" (formula "23") (term "1") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "45") (term "0,1,0") (ifseqformula "1"))
                                                         (rule "add_zero_left" (formula "45") (term "1,0"))
                                                         (rule "applyEq" (formula "28") (term "1,0,1") (ifseqformula "1"))
                                                         (rule "add_literals" (formula "28") (term "0,1"))
                                                         (rule "polyDiv_zero" (formula "25") (term "0"))
                                                         (rule "div_literals" (formula "25") (term "1,0"))
                                                         (rule "inEqSimp_contradEq7" (formula "25") (term "0,0") (ifseqformula "27"))
                                                         (rule "times_zero_1" (formula "25") (term "1,0,0,0,0"))
                                                         (rule "add_zero_right" (formula "25") (term "0,0,0,0"))
                                                         (rule "leq_literals" (formula "25") (term "0,0,0"))
                                                         (rule "concrete_and_2" (formula "25") (term "0,0"))
                                                         (rule "ifthenelse_false" (formula "25") (term "0"))
                                                         (rule "eqSymm" (formula "25"))
                                                         (rule "applyEqRigid" (formula "28") (term "1,0") (ifseqformula "25"))
                                                         (rule "times_zero_1" (formula "28") (term "0"))
                                                         (rule "inEqSimp_homoInEq1" (formula "28"))
                                                         (rule "times_zero_2" (formula "28") (term "1,0"))
                                                         (rule "add_zero_right" (formula "28") (term "0"))
                                                         (rule "applyEqRigid" (formula "45") (term "1,0,1,0") (ifseqformula "25"))
                                                         (rule "times_zero_1" (formula "45") (term "0,1,0"))
                                                         (rule "mul_literals" (formula "45") (term "1,0"))
                                                         (rule "close" (formula "45") (ifseqformula "13"))
                                                      )
                                                      (branch " Exceptional Post"
                                                         (builtin "Update Simplification" (formula "36"))
                                                         (rule "impRight" (formula "36"))
                                                         (rule "andLeft" (formula "1"))
                                                         (rule "andLeft" (formula "1"))
                                                         (rule "andLeft" (formula "2"))
                                                         (rule "andLeft" (formula "1"))
                                                         (rule "notLeft" (formula "2"))
                                                         (rule "close" (formula "39") (ifseqformula "3"))
                                                      )
                                                   )
                                                   (branch " Null Reference (queryReceiver_3 = null)"
                                                      (builtin "Update Simplification" (formula "22"))
                                                      (builtin "Update Simplification" (formula "21"))
                                                      (rule "close" (formula "47") (ifseqformula "21"))
                                                   )
                                                )
                                                (branch " self.size * quotient_4 * 2 = result_0 FALSE"
                                                   (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "41"))
                                                   (rule "concrete_not_2" (formula "2") (term "0"))
                                                   (rule "concrete_or_1" (formula "2"))
                                                   (rule "true_left" (formula "2"))
                                                   (rule "allLeft" (formula "2") (inst "t=self.size@(StringSet) * quotient_0"))
                                                   (rule "polySimp_homoEq" (formula "2") (term "0,0"))
                                                   (rule "polySimp_homoEq" (formula "2") (term "0,0,0,1"))
                                                   (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "2") (term "0,0,0,0,1"))
                                                   (rule "polySimp_sepNegMonomial" (formula "2") (term "0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "2") (term "0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "2") (term "0,0,0"))
                                                   (rule "polySimp_sepNegMonomial" (formula "2") (term "0,0,0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "2") (term "0,0,0,0,1"))
                                                   (rule "polySimp_elimOne" (formula "2") (term "0,0,0,0,1"))
                                                   (rule "ifthenelse_split" (formula "2") (term "0,0,1"))
                                                   (branch "   self.size * quotient_0
= result_0 + self.size * quotient_4 * -1 TRUE"
                                                      (rule "replace_known_left" (formula "3") (term "1") (ifseqformula "41"))
                                                      (rule "concrete_or_3" (formula "3"))
                                                      (rule "true_left" (formula "3"))
                                                      (rule "applyEq" (formula "51") (term "0,1,1,0") (ifseqformula "2"))
                                                      (rule "polySimp_mulComm0" (formula "51") (term "1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "51") (term "1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "51") (term "1,1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "51") (term "1,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "51") (term "0,1,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "51") (term "1,0"))
                                                      (rule "polySimp_addComm0" (formula "51") (term "0,1,0"))
                                                      (rule "applyEq" (formula "29") (term "0") (ifseqformula "2"))
                                                      (rule "inEqSimp_homoInEq1" (formula "29"))
                                                      (rule "polySimp_mulComm0" (formula "29") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "29") (term "1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "29") (term "1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "29") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "29") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "29") (term "0,0"))
                                                      (rule "polySimp_addComm1" (formula "29") (term "0,0,0"))
                                                      (rule "applyEq" (formula "28") (term "0") (ifseqformula "2"))
                                                      (rule "inEqSimp_homoInEq0" (formula "28"))
                                                      (rule "polySimp_mulComm0" (formula "28") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "28") (term "1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "28") (term "1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "28") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "28") (term "0"))
                                                      (rule "polySimp_addComm0" (formula "28") (term "0,0"))
                                                      (rule "applyEq" (formula "43") (term "0") (ifseqformula "2"))
                                                      (rule "polySimp_homoEq" (formula "43"))
                                                      (rule "polySimp_mulComm0" (formula "43") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "43") (term "1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "43") (term "1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "43") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "43") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "43") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor3b" (formula "43") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "43") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor0" (formula "43") (term "0,0,0"))
                                                      (rule "add_literals" (formula "43") (term "1,0,0,0"))
                                                      (rule "applyEq" (formula "25") (term "0,1,1,0,0") (ifseqformula "2"))
                                                      (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "25") (term "0,1,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "25") (term "1,0,0"))
                                                      (rule "polySimp_addComm0" (formula "25") (term "0,1,0,0"))
                                                      (rule "polySimp_sepPosMonomial" (formula "43"))
                                                      (rule "polySimp_mulComm0" (formula "43") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "43") (term "1"))
                                                      (rule "polySimp_mulComm0" (formula "43") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "43") (term "0,1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "29"))
                                                      (rule "polySimp_mulComm0" (formula "29") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "29") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "29") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "29") (term "1,1"))
                                                      (rule "polySimp_rightDist" (formula "29") (term "0,1"))
                                                      (rule "polySimp_rightDist" (formula "29") (term "0,0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0,1"))
                                                      (rule "mul_literals" (formula "29") (term "0,0,0,1"))
                                                      (rule "polySimp_elimOne" (formula "29") (term "1,0,0,1"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "28"))
                                                      (rule "polySimp_mulComm0" (formula "28") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "28") (term "1"))
                                                      (rule "polySimp_mulAssoc" (formula "28") (term "0,1"))
                                                      (rule "polySimp_mulComm0" (formula "28") (term "0,0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "28") (term "0,1"))
                                                      (rule "polySimp_elimOne" (formula "28") (term "0,1"))
                                                      (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "29"))
                                                      (rule "polySimp_rightDist" (formula "19") (term "0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "19") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "19") (term "0,0,0"))
                                                      (rule "mul_literals" (formula "19") (term "0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "19") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "19") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor3b" (formula "19") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "19") (term "0,0"))
                                                      (rule "polySimp_addAssoc" (formula "19") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "19") (term "0,0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor2b" (formula "19") (term "0,0,0"))
                                                      (rule "add_literals" (formula "19") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "19") (term "1,0,0,0"))
                                                      (rule "add_literals" (formula "19") (term "0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "19"))
                                                      (rule "polySimp_mulComm0" (formula "19") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "19") (term "1"))
                                                      (rule "mul_literals" (formula "19") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "19") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "19") (term "1,1"))
                                                      (rule "inEqSimp_exactShadow3" (formula "29") (ifseqformula "30"))
                                                      (rule "polySimp_rightDist" (formula "29") (term "0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "29") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "29") (term "0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "29") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "29") (term "0,0"))
                                                      (rule "polySimp_addComm1" (formula "29") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0"))
                                                      (rule "add_literals" (formula "29") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "29") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "29") (term "0,0"))
                                                      (rule "polySimp_addAssoc" (formula "29") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "29") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor2b" (formula "29") (term "0,0"))
                                                      (rule "add_literals" (formula "29") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "29") (term "1,0,0"))
                                                      (rule "add_literals" (formula "29") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "29"))
                                                      (rule "mul_literals" (formula "29") (term "1"))
                                                      (rule "inEqSimp_exactShadow3" (formula "29") (ifseqformula "18"))
                                                      (rule "polySimp_rightDist" (formula "29") (term "0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "29") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "29") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "29") (term "0"))
                                                      (rule "polySimp_pullOutFactor2" (formula "29") (term "0,0"))
                                                      (rule "add_literals" (formula "29") (term "1,0,0"))
                                                      (rule "times_zero_1" (formula "29") (term "0,0"))
                                                      (rule "add_zero_left" (formula "29") (term "0"))
                                                      (rule "polyDiv_pullOut" (formula "17") (term "0") (inst "polyDivCoeff=quotient_4 + quotient_0"))
                                                      (rule "polySimp_mulComm1" (formula "17") (term "1,0,0,2,0"))
                                                      (rule "polySimp_mulComm0" (formula "17") (term "0,1,0,0,2,0"))
                                                      (rule "polySimp_mulComm1" (formula "17") (term "1,0,0,2,0"))
                                                      (rule "polySimp_addComm0" (formula "17") (term "2,0"))
                                                      (rule "polySimp_rightDist" (formula "17") (term "1,0,1,2,0"))
                                                      (rule "polySimp_mulComm1" (formula "17") (term "0,1,0,1,2,0"))
                                                      (rule "polySimp_mulAssoc" (formula "17") (term "1,1,0,1,2,0"))
                                                      (rule "polySimp_mulComm0" (formula "17") (term "0,1,1,0,1,2,0"))
                                                      (rule "polySimp_addAssoc" (formula "17") (term "0,1,2,0"))
                                                      (rule "applyEq" (formula "17") (term "0,1,0,1,2,0") (ifseqformula "2"))
                                                      (rule "polySimp_pullOutFactor1" (formula "17") (term "0,1,2,0"))
                                                      (rule "add_literals" (formula "17") (term "1,0,1,2,0"))
                                                      (rule "times_zero_1" (formula "17") (term "0,1,2,0"))
                                                      (rule "inEqSimp_contradEq7" (formula "17") (term "0,0") (ifseqformula "35"))
                                                      (rule "times_zero_1" (formula "17") (term "1,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "17") (term "0,0,0,0"))
                                                      (rule "leq_literals" (formula "17") (term "0,0,0"))
                                                      (rule "concrete_and_2" (formula "17") (term "0,0"))
                                                      (rule "ifthenelse_false" (formula "17") (term "0"))
                                                      (rule "polySimp_homoEq" (formula "17"))
                                                      (rule "polySimp_mulComm0" (formula "17") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "17") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "17") (term "0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "17") (term "0,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "17") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "17") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor1" (formula "17") (term "0,0,0"))
                                                      (rule "add_literals" (formula "17") (term "1,0,0,0"))
                                                      (rule "times_zero_1" (formula "17") (term "0,0,0"))
                                                      (rule "add_zero_left" (formula "17") (term "0,0"))
                                                      (rule "polySimp_sepNegMonomial" (formula "17"))
                                                      (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "17") (term "0"))
                                                      (rule "polyDiv_zero" (formula "17") (term "0"))
                                                      (rule "div_literals" (formula "17") (term "1,0"))
                                                      (rule "inEqSimp_contradEq7" (formula "17") (term "0,0") (ifseqformula "35"))
                                                      (rule "times_zero_1" (formula "17") (term "1,0,0,0,0"))
                                                      (rule "add_literals" (formula "17") (term "0,0,0,0"))
                                                      (rule "leq_literals" (formula "17") (term "0,0,0"))
                                                      (rule "concrete_and_2" (formula "17") (term "0,0"))
                                                      (rule "ifthenelse_false" (formula "17") (term "0"))
                                                      (rule "eqSymm" (formula "17"))
                                                      (rule "polySimp_invertEq" (formula "17"))
                                                      (rule "times_zero_2" (formula "17") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "17") (term "0"))
                                                      (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "17"))
                                                      (rule "times_zero_1" (formula "2") (term "0"))
                                                      (rule "polySimp_homoEq" (formula "2"))
                                                      (rule "times_zero_2" (formula "2") (term "1,0"))
                                                      (rule "add_zero_right" (formula "2") (term "0"))
                                                      (rule "applyEqRigid" (formula "28") (term "1") (ifseqformula "17"))
                                                      (rule "applyEq" (formula "31") (term "1") (ifseqformula "17"))
                                                      (rule "polySimp_sepNegMonomial" (formula "2"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                      (rule "applyEq" (formula "18") (term "0") (ifseqformula "2"))
                                                      (rule "inEqSimp_homoInEq0" (formula "18"))
                                                      (rule "polySimp_pullOutFactor1" (formula "18") (term "0"))
                                                      (rule "add_literals" (formula "18") (term "1,0"))
                                                      (rule "times_zero_1" (formula "18") (term "0"))
                                                      (rule "qeq_literals" (formula "18"))
                                                      (rule "true_left" (formula "18"))
                                                      (rule "applyEq" (formula "3") (term "0,0,0,0") (ifseqformula "2"))
                                                      (rule "polySimp_homoEq" (formula "3") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "3") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1" (formula "3") (term "0,0,0,0,0"))
                                                      (rule "add_literals" (formula "3") (term "1,0,0,0,0,0"))
                                                      (rule "times_zero_1" (formula "3") (term "0,0,0,0,0"))
                                                      (rule "add_zero_left" (formula "3") (term "0,0,0,0"))
                                                      (rule "applyEq" (formula "51") (term "1,1,0") (ifseqformula "2"))
                                                      (rule "polySimp_addComm1" (formula "51") (term "1,0"))
                                                      (rule "polySimp_pullOutFactor2" (formula "51") (term "0,1,0"))
                                                      (rule "add_literals" (formula "51") (term "1,0,1,0"))
                                                      (rule "times_zero_1" (formula "51") (term "0,1,0"))
                                                      (rule "add_zero_left" (formula "51") (term "1,0"))
                                                      (rule "applyEq" (formula "19") (term "0") (ifseqformula "2"))
                                                      (rule "inEqSimp_homoInEq1" (formula "19"))
                                                      (rule "polySimp_addComm1" (formula "19") (term "0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0"))
                                                      (rule "add_literals" (formula "19") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "19") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "19") (term "0,0"))
                                                      (rule "applyEq" (formula "11") (term "0,1,1,0") (ifseqformula "2"))
                                                      (rule "polySimp_pullOutFactor1" (formula "11") (term "1,0"))
                                                      (rule "add_literals" (formula "11") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "11") (term "1,0"))
                                                      (rule "applyEq" (formula "41") (term "0,0") (ifseqformula "2"))
                                                      (rule "polySimp_homoEq" (formula "41"))
                                                      (rule "polySimp_mulLiterals" (formula "41") (term "1,0"))
                                                      (rule "polySimp_pullOutFactor1" (formula "41") (term "0"))
                                                      (rule "add_literals" (formula "41") (term "1,0"))
                                                      (rule "applyEq" (formula "29") (term "0") (ifseqformula "2"))
                                                      (rule "inEqSimp_homoInEq0" (formula "29"))
                                                      (rule "polySimp_addComm1" (formula "29") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "29") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,0"))
                                                      (rule "add_literals" (formula "29") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "29") (term "1,0,0,0"))
                                                      (rule "add_literals" (formula "29") (term "0,0,0"))
                                                      (rule "applyEq" (formula "42") (term "0") (ifseqformula "2"))
                                                      (rule "polySimp_homoEq" (formula "42"))
                                                      (rule "polySimp_addComm1" (formula "42") (term "0"))
                                                      (rule "polySimp_pullOutFactor1" (formula "42") (term "0,0"))
                                                      (rule "add_literals" (formula "42") (term "1,0,0"))
                                                      (rule "times_zero_1" (formula "42") (term "0,0"))
                                                      (rule "add_zero_left" (formula "42") (term "0"))
                                                      (rule "applyEq" (formula "25") (term "1,1,0,0") (ifseqformula "2"))
                                                      (rule "polySimp_addComm1" (formula "25") (term "1,0,0"))
                                                      (rule "polySimp_pullOutFactor2" (formula "25") (term "0,1,0,0"))
                                                      (rule "add_literals" (formula "25") (term "1,0,1,0,0"))
                                                      (rule "times_zero_1" (formula "25") (term "0,1,0,0"))
                                                      (rule "add_zero_left" (formula "25") (term "1,0,0"))
                                                      (rule "applyEq" (formula "3") (term "0,0,0,0,1,0") (ifseqformula "2"))
                                                      (rule "polySimp_homoEq" (formula "3") (term "0,0,0,1,0"))
                                                      (rule "polySimp_addComm1" (formula "3") (term "0,0,0,0,1,0"))
                                                      (rule "polySimp_pullOutFactor1" (formula "3") (term "0,0,0,0,0,1,0"))
                                                      (rule "add_literals" (formula "3") (term "1,0,0,0,0,0,1,0"))
                                                      (rule "times_zero_1" (formula "3") (term "0,0,0,0,0,1,0"))
                                                      (rule "add_zero_left" (formula "3") (term "0,0,0,0,1,0"))
                                                      (rule "applyEq" (formula "28") (term "0") (ifseqformula "2"))
                                                      (rule "inEqSimp_homoInEq1" (formula "28"))
                                                      (rule "polySimp_addComm1" (formula "28") (term "0"))
                                                      (rule "polySimp_pullOutFactor1" (formula "28") (term "0,0"))
                                                      (rule "add_literals" (formula "28") (term "1,0,0"))
                                                      (rule "times_zero_1" (formula "28") (term "0,0"))
                                                      (rule "add_zero_left" (formula "28") (term "0"))
                                                      (rule "applyEq" (formula "48") (term "0") (ifseqformula "2"))
                                                      (rule "polySimp_homoEq" (formula "48"))
                                                      (rule "polySimp_addComm1" (formula "48") (term "0"))
                                                      (rule "polySimp_pullOutFactor1" (formula "48") (term "0,0"))
                                                      (rule "add_literals" (formula "48") (term "1,0,0"))
                                                      (rule "times_zero_1" (formula "48") (term "0,0"))
                                                      (rule "add_zero_left" (formula "48") (term "0"))
                                                      (rule "applyEq" (formula "43") (term "0,0") (ifseqformula "2"))
                                                      (rule "polySimp_homoEq" (formula "43"))
                                                      (rule "polySimp_mulLiterals" (formula "43") (term "1,0"))
                                                      (rule "polySimp_addComm1" (formula "43") (term "0"))
                                                      (rule "polySimp_pullOutFactor0" (formula "43") (term "0,0"))
                                                      (rule "add_literals" (formula "43") (term "1,0,0"))
                                                      (rule "times_zero_1" (formula "43") (term "0,0"))
                                                      (rule "add_zero_left" (formula "43") (term "0"))
                                                      (rule "polySimp_invertEq" (formula "3") (term "0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "3") (term "0,0,0,0"))
                                                      (rule "times_zero_2" (formula "3") (term "1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "3") (term "0,0,0,0"))
                                                      (rule "polySimp_invertEq" (formula "41"))
                                                      (rule "polySimp_mulLiterals" (formula "41") (term "0"))
                                                      (rule "mul_literals" (formula "41") (term "1"))
                                                      (rule "polySimp_elimOne" (formula "41") (term "0"))
                                                      (rule "polySimp_invertEq" (formula "42"))
                                                      (rule "polySimp_mulLiterals" (formula "42") (term "0"))
                                                      (rule "times_zero_2" (formula "42") (term "1"))
                                                      (rule "polySimp_elimOne" (formula "42") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "19"))
                                                      (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "19") (term "0"))
                                                      (rule "polySimp_invertEq" (formula "3") (term "0,0,0,1,0"))
                                                      (rule "times_zero_2" (formula "3") (term "1,0,0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "3") (term "0,0,0,0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "3") (term "0,0,0,0,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "28"))
                                                      (rule "polySimp_mulComm0" (formula "28") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "28") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "28") (term "1,1"))
                                                      (rule "mul_literals" (formula "28") (term "0,1"))
                                                      (rule "polySimp_elimOne" (formula "28") (term "1,1"))
                                                      (rule "polySimp_invertEq" (formula "47"))
                                                      (rule "mul_literals" (formula "47") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "47") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "47") (term "0"))
                                                      (rule "polySimp_invertEq" (formula "42"))
                                                      (rule "polySimp_mulLiterals" (formula "42") (term "0"))
                                                      (rule "times_zero_2" (formula "42") (term "1"))
                                                      (rule "polySimp_elimOne" (formula "42") (term "0"))
                                                      (rule "inEqSimp_invertInEq0" (formula "27"))
                                                      (rule "mul_literals" (formula "27") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "27") (term "0"))
                                                      (rule "inEqSimp_strengthen1" (formula "30") (ifseqformula "41"))
                                                      (rule "add_literals" (formula "30") (term "1"))
                                                      (rule "inEqSimp_contradEq7" (formula "41") (ifseqformula "30"))
                                                      (rule "times_zero_1" (formula "41") (term "1,0,0"))
                                                      (rule "add_literals" (formula "41") (term "0,0"))
                                                      (rule "leq_literals" (formula "41") (term "0"))
                                                      (rule "concrete_and_2" (formula "41"))
                                                      (rule "false_right" (formula "41"))
                                                      (rule "inEqSimp_strengthen1" (formula "19") (ifseqformula "39"))
                                                      (rule "add_zero_right" (formula "19") (term "1"))
                                                      (rule "inEqSimp_contradEq7" (formula "39") (ifseqformula "19"))
                                                      (rule "times_zero_1" (formula "39") (term "1,0,0"))
                                                      (rule "add_literals" (formula "39") (term "0,0"))
                                                      (rule "leq_literals" (formula "39") (term "0"))
                                                      (rule "concrete_and_2" (formula "39"))
                                                      (rule "false_right" (formula "39"))
                                                      (rule "commute_or" (formula "3") (term "0"))
                                                      (rule "elim_forall4" (formula "3"))
                                                      (rule "eqClose" (formula "3") (term "0,0,0"))
                                                      (rule "ifthenelse_true" (formula "3") (term "0,0"))
                                                      (rule "polyDiv_pullOut" (formula "13") (term "0") (inst "polyDivCoeff=quotient_4 * -1"))
                                                      (rule "polySimp_mulLiterals" (formula "13") (term "0,1,0,0,2,0"))
                                                      (rule "polySimp_elimOneLeft1" (formula "13") (term "1,0,0,2,0"))
                                                      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,2,0"))
                                                      (rule "polySimp_addComm0" (formula "13") (term "2,0"))
                                                      (rule "applyEq" (formula "13") (term "1,0,1,2,0") (ifseqformula "2"))
                                                      (rule "polySimp_pullOutFactor2" (formula "13") (term "0,1,2,0"))
                                                      (rule "add_literals" (formula "13") (term "1,0,1,2,0"))
                                                      (rule "times_zero_1" (formula "13") (term "0,1,2,0"))
                                                      (rule "inEqSimp_contradEq7" (formula "13") (term "0,0") (ifseqformula "31"))
                                                      (rule "mul_literals" (formula "13") (term "1,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "13") (term "0,0,0,0"))
                                                      (rule "leq_literals" (formula "13") (term "0,0,0"))
                                                      (rule "concrete_and_2" (formula "13") (term "0,0"))
                                                      (rule "ifthenelse_false" (formula "13") (term "0"))
                                                      (rule "polySimp_homoEq" (formula "13"))
                                                      (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "13") (term "1,0"))
                                                      (rule "polySimp_mulAssoc" (formula "13") (term "0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "13") (term "0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "13") (term "0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "13") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "13") (term "0"))
                                                      (rule "polySimp_addComm0" (formula "13") (term "0,0"))
                                                      (rule "polySimp_sepNegMonomial" (formula "13"))
                                                      (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "13") (term "0"))
                                                      (rule "polyDiv_zero" (formula "13") (term "0"))
                                                      (rule "div_literals" (formula "13") (term "1,0"))
                                                      (rule "inEqSimp_contradEq7" (formula "13") (term "0,0") (ifseqformula "31"))
                                                      (rule "times_zero_1" (formula "13") (term "1,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "13") (term "0,0,0,0"))
                                                      (rule "leq_literals" (formula "13") (term "0,0,0"))
                                                      (rule "concrete_and_2" (formula "13") (term "0,0"))
                                                      (rule "ifthenelse_false" (formula "13") (term "0"))
                                                      (rule "polySimp_homoEq" (formula "13"))
                                                      (rule "times_zero_2" (formula "13") (term "1,0"))
                                                      (rule "add_zero_right" (formula "13") (term "0"))
                                                      (rule "polySimp_sepPosMonomial" (formula "13"))
                                                      (rule "applyEqRigid" (formula "14") (term "1,0") (ifseqformula "13"))
                                                      (rule "polySimp_mulAssoc" (formula "14") (term "0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "14"))
                                                      (rule "polySimp_mulLiterals" (formula "14") (term "1,0"))
                                                      (rule "polySimp_elimOne" (formula "14") (term "1,0"))
                                                      (rule "applyEq" (formula "15") (term "1,0") (ifseqformula "13"))
                                                      (rule "polySimp_mulAssoc" (formula "15") (term "0"))
                                                      (rule "inEqSimp_homoInEq1" (formula "15"))
                                                      (rule "polySimp_mulLiterals" (formula "15") (term "1,0"))
                                                      (rule "polySimp_elimOne" (formula "15") (term "1,0"))
                                                      (rule "applyEq" (formula "15") (term "1,0") (ifseqformula "2"))
                                                      (rule "polySimp_addComm1" (formula "15") (term "0"))
                                                      (rule "polySimp_pullOutFactor2b" (formula "15") (term "0,0"))
                                                      (rule "add_literals" (formula "15") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "15") (term "1,0,0"))
                                                      (rule "add_literals" (formula "15") (term "0,0"))
                                                      (rule "applyEq" (formula "14") (term "1,0") (ifseqformula "2"))
                                                      (rule "polySimp_pullOutFactor2" (formula "14") (term "0"))
                                                      (rule "add_literals" (formula "14") (term "1,0"))
                                                      (rule "times_zero_1" (formula "14") (term "0"))
                                                      (rule "qeq_literals" (formula "14"))
                                                      (rule "true_left" (formula "14"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "14"))
                                                      (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "14") (term "0"))
                                                      (rule "only_created_object_are_referenced_by_arrays_non_null" (formula "21") (term "0,0") (ifseqformula "22") (ifseqformula "26") (ifseqformula "44"))
                                                      (rule "resolvequery" (formula "36") (term "3,0,0") (inst "queryValue=java_lang_StringhashCode_2") (userinteraction))
                                                      (builtin "Update Simplification" (formula "1"))
                                                      (builtin "Update Simplification" (formula "38"))
                                                      (rule "eqSymm" (formula "2") (term "0,1,0,3"))
                                                      (rule "applyEq" (formula "8") (term "0,1,0") (ifseqformula "1"))
                                                      (rule "jmod_axiom" (formula "38") (term "0"))
                                                      (rule "polySimp_mulComm1" (formula "38") (term "1,0"))
                                                      (rule "jmod_axiom" (formula "8") (term "1,0"))
                                                      (rule "polySimp_mulComm1" (formula "8") (term "1,1,0"))
                                                      (rule "polySimp_sepNegMonomial" (formula "38"))
                                                      (rule "polySimp_mulLiterals" (formula "38") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "38") (term "0"))
                                                      (rule "variableDeclaration" (formula "2") (term "3") (newnames "hcode_2"))
                                                      (rule "variableDeclaration" (formula "2") (term "3") (newnames "queryReceiver_4"))
                                                      (rule "emptyModality" (formula "2") (term "3"))
                                                      (builtin "Update Simplification" (formula "2"))
                                                      (rule "applyEq" (formula "2") (term "0") (ifseqformula "6"))
                                                      (rule "jdiv_axiom" (formula "8") (term "0,0,1,1,0"))
                                                      (rule "eqSymm" (formula "8"))
                                                      (rule "methodCallWithAssignment" (formula "2") (term "4") (inst "#v0=j"))
                                                      (branch " Normal Execution (queryReceiver_4 != null)"
                                                         (builtin "Update Simplification" (formula "39"))
                                                         (rule "variableDeclaration" (formula "2") (term "4") (newnames "j_14"))
                                                         (rule "only_created_object_are_referenced_by_arrays_non_null2" (formula "9") (ifseqformula "25") (ifseqformula "29") (ifseqformula "42"))
                                                         (rule "div_axiom" (formula "8") (term "1,0") (inst "quotient=quotient_9"))
                                                         (rule "polySimp_mulComm0" (formula "8") (term "0,1,0,1"))
                                                         (rule "polySimp_mulComm0" (formula "8") (term "0,1,1,1"))
                                                         (rule "polySimp_mulComm0" (formula "8") (term "0,2,1,1"))
                                                         (rule "polySimp_mulComm0" (formula "8") (term "1,1,1,1,1"))
                                                         (rule "inEqSimp_contradEq7" (formula "8") (term "0") (ifseqformula "33"))
                                                         (rule "times_zero_1" (formula "8") (term "1,0,0,0"))
                                                         (rule "add_literals" (formula "8") (term "0,0,0"))
                                                         (rule "leq_literals" (formula "8") (term "0,0"))
                                                         (rule "concrete_and_2" (formula "8") (term "0"))
                                                         (rule "concrete_or_2" (formula "8"))
                                                         (rule "andLeft" (formula "8"))
                                                         (rule "andLeft" (formula "8"))
                                                         (rule "applyEq" (formula "11") (term "1,0") (ifseqformula "8"))
                                                         (rule "inEqSimp_subsumption1" (formula "10") (term "0") (ifseqformula "35"))
                                                         (rule "leq_literals" (formula "10") (term "0,0"))
                                                         (rule "concrete_or_1" (formula "10") (term "0"))
                                                         (rule "ifthenelse_true_for" (formula "10"))
                                                         (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "9"))
                                                         (rule "polySimp_rightDist" (formula "10") (term "0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "10") (term "1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "10") (term "0"))
                                                         (rule "polySimp_rightDist" (formula "10") (term "0,0,0"))
                                                         (rule "mul_literals" (formula "10") (term "0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor2b" (formula "10") (term "0,0"))
                                                         (rule "add_literals" (formula "10") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "10") (term "1,0,0"))
                                                         (rule "add_literals" (formula "10") (term "0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                                                         (rule "mul_literals" (formula "10") (term "1"))
                                                         (rule "div_axiom" (formula "11") (term "0,2,0") (inst "quotient=quotient_10"))
                                                         (rule "polySimp_mulComm0" (formula "11") (term "0,1,0,1"))
                                                         (rule "polySimp_mulComm0" (formula "11") (term "1,1,1,1,1"))
                                                         (rule "polySimp_mulComm0" (formula "11") (term "0,2,1,1"))
                                                         (rule "polySimp_mulComm0" (formula "11") (term "0,1,1,1"))
                                                         (rule "inEqSimp_contradEq7" (formula "11") (term "0") (ifseqformula "36"))
                                                         (rule "times_zero_1" (formula "11") (term "1,0,0,0"))
                                                         (rule "add_zero_right" (formula "11") (term "0,0,0"))
                                                         (rule "leq_literals" (formula "11") (term "0,0"))
                                                         (rule "concrete_and_2" (formula "11") (term "0"))
                                                         (rule "concrete_or_2" (formula "11"))
                                                         (rule "andLeft" (formula "11"))
                                                         (rule "andLeft" (formula "11"))
                                                         (rule "applyEq" (formula "14") (term "0,2,0") (ifseqformula "11"))
                                                         (rule "inEqSimp_subsumption1" (formula "13") (term "0") (ifseqformula "38"))
                                                         (rule "leq_literals" (formula "13") (term "0,0"))
                                                         (rule "concrete_or_1" (formula "13") (term "0"))
                                                         (rule "ifthenelse_true_for" (formula "13"))
                                                         (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "12"))
                                                         (rule "polySimp_rightDist" (formula "13") (term "0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "13") (term "1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "13") (term "0"))
                                                         (rule "polySimp_rightDist" (formula "13") (term "0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "13") (term "0,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "13") (term "1,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0"))
                                                         (rule "add_literals" (formula "13") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "13") (term "1,0,0"))
                                                         (rule "add_literals" (formula "13") (term "0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                                                         (rule "mul_literals" (formula "13") (term "1"))
                                                         (rule "boxToDiamond" (formula "2") (term "4") (userinteraction))
                                                         (builtin "Update Simplification" (formula "2"))
                                                         (rule "notLeft" (formula "2") (userinteraction))
                                                         (builtin "Use Operation Contract" (formula "44") (term "4") (newnames "result_13") (contract "hashCode;;"))
                                                         (branch " Pre"
                                                            (builtin "Update Simplification" (formula "44"))
                                                            (rule "replace_known_left" (formula "44") (term "0,1") (ifseqformula "43"))
                                                            (rule "concrete_and_1" (formula "44") (term "1"))
                                                            (rule "replace_known_right" (formula "44") (term "0,1") (ifseqformula "54"))
                                                            (rule "concrete_not_2" (formula "44") (term "1"))
                                                            (rule "concrete_and_3" (formula "44"))
                                                            (rule "inReachableStateRewrite" (formula "44") (ifseqformula "34"))
                                                            (builtin "Update Simplification" (formula "44"))
                                                            (rule "eq_imp" (formula "44") (term "0,0,1"))
                                                            (rule "orRight" (formula "44"))
                                                            (rule "jmod_axiom" (formula "45") (term "1,1,0,0,0,1"))
                                                            (rule "polySimp_mulComm1" (formula "45") (term "1,1,1,0,0,0,1"))
                                                            (rule "polySimp_homoEq" (formula "45") (term "1,0,0,0,1"))
                                                            (rule "polySimp_addComm1" (formula "45") (term "0,1,0,0,0,1"))
                                                            (rule "applyEq" (formula "45") (term "0,0,1,0,1,0,0,0,1") (ifseqformula "25"))
                                                            (rule "polySimp_mulComm0" (formula "45") (term "0,1,0,1,0,0,0,1"))
                                                            (rule "applyEq" (formula "45") (term "0,1,0,1,0,0,0,1") (ifseqformula "3"))
                                                            (rule "polySimp_addComm1" (formula "45") (term "0,1,0,0,0,1"))
                                                            (rule "polySimp_pullOutFactor1" (formula "45") (term "0,0,1,0,0,0,1"))
                                                            (rule "add_literals" (formula "45") (term "1,0,0,1,0,0,0,1"))
                                                            (rule "times_zero_1" (formula "45") (term "0,0,1,0,0,0,1"))
                                                            (rule "add_zero_left" (formula "45") (term "0,1,0,0,0,1"))
                                                            (rule "jmod_axiom" (formula "45") (term "1,1,0,1,1,1,0,0,1"))
                                                            (rule "polySimp_mulComm1" (formula "45") (term "1,1,1,0,1,1,1,0,0,1"))
                                                            (rule "polySimp_homoEq" (formula "45") (term "1,0,1,1,1,0,0,1"))
                                                            (rule "polySimp_addComm1" (formula "45") (term "0,1,0,1,1,1,0,0,1"))
                                                            (rule "applyEq" (formula "45") (term "0,0,1,0,1,0,1,1,1,0,0,1") (ifseqformula "25"))
                                                            (rule "polySimp_mulComm0" (formula "45") (term "0,1,0,1,0,1,1,1,0,0,1"))
                                                            (rule "applyEq" (formula "45") (term "0,1,0,1,0,1,1,1,0,0,1") (ifseqformula "3"))
                                                            (rule "polySimp_addComm1" (formula "45") (term "0,1,0,1,1,1,0,0,1"))
                                                            (rule "polySimp_pullOutFactor1" (formula "45") (term "0,0,1,0,1,1,1,0,0,1"))
                                                            (rule "add_literals" (formula "45") (term "1,0,0,1,0,1,1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "45") (term "0,0,1,0,1,1,1,0,0,1"))
                                                            (rule "add_zero_left" (formula "45") (term "0,1,0,1,1,1,0,0,1"))
                                                            (rule "jmod_axiom" (formula "45") (term "1,1,0,0,0,0,1,0,1,0,0,1"))
                                                            (rule "polySimp_mulComm1" (formula "45") (term "1,1,1,0,0,0,0,1,0,1,0,0,1"))
                                                            (rule "polySimp_homoEq" (formula "45") (term "1,0,0,0,0,1,0,1,0,0,1"))
                                                            (rule "polySimp_addComm1" (formula "45") (term "0,1,0,0,0,0,1,0,1,0,0,1"))
                                                            (rule "applyEq" (formula "45") (term "0,0,1,0,1,0,0,0,0,1,0,1,0,0,1") (ifseqformula "25"))
                                                            (rule "polySimp_mulComm0" (formula "45") (term "0,1,0,1,0,0,0,0,1,0,1,0,0,1"))
                                                            (rule "applyEq" (formula "45") (term "0,1,0,1,0,0,0,0,1,0,1,0,0,1") (ifseqformula "3"))
                                                            (rule "polySimp_addComm1" (formula "45") (term "0,1,0,0,0,0,1,0,1,0,0,1"))
                                                            (rule "polySimp_pullOutFactor1" (formula "45") (term "0,0,1,0,0,0,0,1,0,1,0,0,1"))
                                                            (rule "add_literals" (formula "45") (term "1,0,0,1,0,0,0,0,1,0,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "45") (term "0,0,1,0,0,0,0,1,0,1,0,0,1"))
                                                            (rule "add_zero_left" (formula "45") (term "0,1,0,0,0,0,1,0,1,0,0,1"))
                                                            (rule "jmod_axiom" (formula "45") (term "1,1,0,0,1,1,0,1,0,0,1"))
                                                            (rule "polySimp_mulComm1" (formula "45") (term "1,1,1,0,0,1,1,0,1,0,0,1"))
                                                            (rule "polySimp_homoEq" (formula "45") (term "1,0,0,1,1,0,1,0,0,1"))
                                                            (rule "polySimp_addComm1" (formula "45") (term "0,1,0,0,1,1,0,1,0,0,1"))
                                                            (rule "applyEq" (formula "45") (term "0,0,1,0,1,0,0,1,1,0,1,0,0,1") (ifseqformula "25"))
                                                            (rule "polySimp_mulComm0" (formula "45") (term "0,1,0,1,0,0,1,1,0,1,0,0,1"))
                                                            (rule "applyEq" (formula "45") (term "0,1,0,1,0,0,1,1,0,1,0,0,1") (ifseqformula "3"))
                                                            (rule "polySimp_addComm1" (formula "45") (term "0,1,0,0,1,1,0,1,0,0,1"))
                                                            (rule "polySimp_pullOutFactor1" (formula "45") (term "0,0,1,0,0,1,1,0,1,0,0,1"))
                                                            (rule "add_literals" (formula "45") (term "1,0,0,1,0,0,1,1,0,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "45") (term "0,0,1,0,0,1,1,0,1,0,0,1"))
                                                            (rule "add_zero_left" (formula "45") (term "0,1,0,0,1,1,0,1,0,0,1"))
                                                            (rule "polySimp_invertEq" (formula "45") (term "1,0,0,0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "45") (term "0,1,0,0,0,1"))
                                                            (rule "times_zero_2" (formula "45") (term "1,1,0,0,0,1"))
                                                            (rule "polySimp_elimOne" (formula "45") (term "0,1,0,0,0,1"))
                                                            (rule "polySimp_invertEq" (formula "45") (term "1,0,1,1,1,0,0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "45") (term "0,1,0,1,1,1,0,0,1"))
                                                            (rule "times_zero_2" (formula "45") (term "1,1,0,1,1,1,0,0,1"))
                                                            (rule "polySimp_elimOne" (formula "45") (term "0,1,0,1,1,1,0,0,1"))
                                                            (rule "polySimp_invertEq" (formula "45") (term "1,0,0,0,0,1,0,1,0,0,1"))
                                                            (rule "times_zero_2" (formula "45") (term "1,1,0,0,0,0,1,0,1,0,0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "45") (term "0,1,0,0,0,0,1,0,1,0,0,1"))
                                                            (rule "polySimp_elimOne" (formula "45") (term "0,1,0,0,0,0,1,0,1,0,0,1"))
                                                            (rule "polySimp_invertEq" (formula "45") (term "1,0,0,1,1,0,1,0,0,1"))
                                                            (rule "mul_literals" (formula "45") (term "1,1,0,0,1,1,0,1,0,0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "45") (term "0,1,0,0,1,1,0,1,0,0,1"))
                                                            (rule "polySimp_elimOne" (formula "45") (term "0,1,0,0,1,1,0,1,0,0,1"))
                                                            (rule "elim_forall12" (formula "45") (term "0,1"))
                                                            (rule "eqClose" (formula "45") (term "1,0,0,0,0,1,0,1,0,1"))
                                                            (rule "eqClose" (formula "45") (term "1,0,0,1,1,0,1,0,1"))
                                                            (rule "eqClose" (formula "45") (term "1,0,1,1,1,0,1"))
                                                            (rule "concrete_and_3" (formula "45") (term "0,0,0,0,1,0,1,0,1"))
                                                            (rule "concrete_and_3" (formula "45") (term "0,0,1,1,0,1,0,1"))
                                                            (rule "concrete_and_3" (formula "45") (term "0,1,1,1,0,1"))
                                                            (rule "elim_forall8" (formula "45") (term "1"))
                                                            (rule "eqClose" (formula "45") (term "0,0,1,1,0,1"))
                                                            (rule "eqClose" (formula "45") (term "0,0,0,0,1,0,1"))
                                                            (rule "eqClose" (formula "45") (term "0,1,1,1"))
                                                            (rule "ifthenelse_true" (formula "45") (term "0,1,1,0,1"))
                                                            (rule "ifthenelse_true" (formula "45") (term "0,0,0,1,0,1"))
                                                            (rule "ifthenelse_true" (formula "45") (term "1,1,1"))
                                                            (rule "replace_known_left" (formula "45") (term "0,0,1") (ifseqformula "30"))
                                                            (rule "concrete_impl_1" (formula "45") (term "0,1"))
                                                            (rule "replace_known_left" (formula "45") (term "0,0,1") (ifseqformula "43"))
                                                            (rule "concrete_or_1" (formula "45") (term "0,1"))
                                                            (rule "concrete_and_1" (formula "45") (term "1"))
                                                            (rule "array_store_static_analyse" (formula "45") (term "1") (ifseqformula "52"))
                                                            (rule "concrete_and_3" (formula "45"))
                                                            (rule "allRight" (formula "45") (inst "sk=o_1"))
                                                            (rule "closeTrue" (formula "45"))
                                                         )
                                                         (branch " Post"
                                                            (builtin "Update Simplification" (formula "44"))
                                                            (rule "inInt" (formula "44") (term "1,1,0,0"))
                                                            (rule "concrete_and_3" (formula "44") (term "1,0,0"))
                                                            (rule "impRight" (formula "44"))
                                                            (rule "andLeft" (formula "1"))
                                                            (rule "andLeft" (formula "1"))
                                                            (rule "andLeft" (formula "3"))
                                                            (rule "eqSymm" (formula "3"))
                                                            (rule "applyEq" (formula "3") (term "0") (ifseqformula "30"))
                                                            (rule "eqSymm" (formula "3"))
                                                            (rule "applyEq" (formula "47") (term "0") (ifseqformula "3"))
                                                            (rule "inReachableStateExpand" (formula "2"))
                                                            (builtin "Update Simplification" (formula "2"))
                                                            (rule "eq_imp" (formula "2") (term "0,0,1"))
                                                            (rule "replace_known_left" (formula "2") (term "0") (ifseqformula "37"))
                                                            (rule "concrete_impl_1" (formula "2"))
                                                            (rule "andLeft" (formula "2"))
                                                            (rule "jmod_axiom" (formula "3") (term "1,1,0,0,0,0,1,0,1,0,0"))
                                                            (rule "polySimp_mulComm1" (formula "3") (term "1,1,1,0,0,0,0,1,0,1,0,0"))
                                                            (rule "polySimp_homoEq" (formula "3") (term "1,0,0,0,0,1,0,1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "3") (term "0,1,0,0,0,0,1,0,1,0,0"))
                                                            (rule "applyEq" (formula "3") (term "0,0,1,0,1,0,0,0,0,1,0,1,0,0") (ifseqformula "29"))
                                                            (rule "polySimp_mulComm0" (formula "3") (term "0,1,0,1,0,0,0,0,1,0,1,0,0"))
                                                            (rule "applyEq" (formula "3") (term "0,1,0,1,0,0,0,0,1,0,1,0,0") (ifseqformula "7"))
                                                            (rule "polySimp_addComm1" (formula "3") (term "0,1,0,0,0,0,1,0,1,0,0"))
                                                            (rule "polySimp_pullOutFactor1" (formula "3") (term "0,0,1,0,0,0,0,1,0,1,0,0"))
                                                            (rule "add_literals" (formula "3") (term "1,0,0,1,0,0,0,0,1,0,1,0,0"))
                                                            (rule "times_zero_1" (formula "3") (term "0,0,1,0,0,0,0,1,0,1,0,0"))
                                                            (rule "add_zero_left" (formula "3") (term "0,1,0,0,0,0,1,0,1,0,0"))
                                                            (rule "jmod_axiom" (formula "3") (term "1,1,0,0,1,1,0,1,0,0"))
                                                            (rule "polySimp_mulComm1" (formula "3") (term "1,1,1,0,0,1,1,0,1,0,0"))
                                                            (rule "polySimp_homoEq" (formula "3") (term "1,0,0,1,1,0,1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "3") (term "0,1,0,0,1,1,0,1,0,0"))
                                                            (rule "applyEq" (formula "3") (term "0,0,1,0,1,0,0,1,1,0,1,0,0") (ifseqformula "29"))
                                                            (rule "polySimp_mulComm0" (formula "3") (term "0,1,0,1,0,0,1,1,0,1,0,0"))
                                                            (rule "applyEq" (formula "3") (term "0,1,0,1,0,0,1,1,0,1,0,0") (ifseqformula "7"))
                                                            (rule "polySimp_addComm1" (formula "3") (term "0,1,0,0,1,1,0,1,0,0"))
                                                            (rule "polySimp_pullOutFactor1" (formula "3") (term "0,0,1,0,0,1,1,0,1,0,0"))
                                                            (rule "add_literals" (formula "3") (term "1,0,0,1,0,0,1,1,0,1,0,0"))
                                                            (rule "times_zero_1" (formula "3") (term "0,0,1,0,0,1,1,0,1,0,0"))
                                                            (rule "add_zero_left" (formula "3") (term "0,1,0,0,1,1,0,1,0,0"))
                                                            (rule "jmod_axiom" (formula "3") (term "1,1,0,1,1,1,0,0"))
                                                            (rule "polySimp_mulComm1" (formula "3") (term "1,1,1,0,1,1,1,0,0"))
                                                            (rule "polySimp_homoEq" (formula "3") (term "1,0,1,1,1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "3") (term "0,1,0,1,1,1,0,0"))
                                                            (rule "applyEq" (formula "3") (term "0,0,1,0,1,0,1,1,1,0,0") (ifseqformula "29"))
                                                            (rule "polySimp_mulComm0" (formula "3") (term "0,1,0,1,0,1,1,1,0,0"))
                                                            (rule "applyEq" (formula "3") (term "0,1,0,1,0,1,1,1,0,0") (ifseqformula "7"))
                                                            (rule "polySimp_addComm1" (formula "3") (term "0,1,0,1,1,1,0,0"))
                                                            (rule "polySimp_pullOutFactor1" (formula "3") (term "0,0,1,0,1,1,1,0,0"))
                                                            (rule "add_literals" (formula "3") (term "1,0,0,1,0,1,1,1,0,0"))
                                                            (rule "times_zero_1" (formula "3") (term "0,0,1,0,1,1,1,0,0"))
                                                            (rule "add_zero_left" (formula "3") (term "0,1,0,1,1,1,0,0"))
                                                            (rule "jmod_axiom" (formula "3") (term "1,1,0,0,0"))
                                                            (rule "polySimp_mulComm1" (formula "3") (term "1,1,1,0,0,0"))
                                                            (rule "polySimp_homoEq" (formula "3") (term "1,0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "3") (term "0,1,0,0,0"))
                                                            (rule "applyEq" (formula "3") (term "0,0,1,0,1,0,0,0") (ifseqformula "29"))
                                                            (rule "polySimp_mulComm0" (formula "3") (term "0,1,0,1,0,0,0"))
                                                            (rule "applyEq" (formula "3") (term "0,1,0,1,0,0,0") (ifseqformula "7"))
                                                            (rule "polySimp_addComm1" (formula "3") (term "0,1,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1" (formula "3") (term "0,0,1,0,0,0"))
                                                            (rule "add_literals" (formula "3") (term "1,0,0,1,0,0,0"))
                                                            (rule "times_zero_1" (formula "3") (term "0,0,1,0,0,0"))
                                                            (rule "add_zero_left" (formula "3") (term "0,1,0,0,0"))
                                                            (rule "polySimp_invertEq" (formula "3") (term "1,0,0,0,0,1,0,1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "3") (term "0,1,0,0,0,0,1,0,1,0,0"))
                                                            (rule "times_zero_2" (formula "3") (term "1,1,0,0,0,0,1,0,1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "3") (term "0,1,0,0,0,0,1,0,1,0,0"))
                                                            (rule "polySimp_invertEq" (formula "3") (term "1,0,0,1,1,0,1,0,0"))
                                                            (rule "times_zero_2" (formula "3") (term "1,1,0,0,1,1,0,1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "3") (term "0,1,0,0,1,1,0,1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "3") (term "0,1,0,0,1,1,0,1,0,0"))
                                                            (rule "polySimp_invertEq" (formula "3") (term "1,0,1,1,1,0,0"))
                                                            (rule "times_zero_2" (formula "3") (term "1,1,0,1,1,1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "3") (term "0,1,0,1,1,1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "3") (term "0,1,0,1,1,1,0,0"))
                                                            (rule "polySimp_invertEq" (formula "3") (term "1,0,0,0"))
                                                            (rule "times_zero_2" (formula "3") (term "1,1,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "3") (term "0,1,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "3") (term "0,1,0,0,0"))
                                                            (rule "elim_forall12" (formula "3") (term "0"))
                                                            (rule "eqClose" (formula "3") (term "1,0,0,0,0,1,0,1,0"))
                                                            (rule "eqClose" (formula "3") (term "1,0,0,1,1,0,1,0"))
                                                            (rule "eqClose" (formula "3") (term "1,0,1,1,1,0"))
                                                            (rule "concrete_and_3" (formula "3") (term "0,0,0,0,1,0,1,0"))
                                                            (rule "concrete_and_3" (formula "3") (term "0,0,1,1,0,1,0"))
                                                            (rule "concrete_and_3" (formula "3") (term "0,1,1,1,0"))
                                                            (rule "elim_forall8" (formula "3"))
                                                            (rule "eqClose" (formula "3") (term "0,0,0,0,1,0"))
                                                            (rule "eqClose" (formula "3") (term "0,0,1,1,0"))
                                                            (rule "eqClose" (formula "3") (term "0,1,1"))
                                                            (rule "ifthenelse_true" (formula "3") (term "0,0,0,1,0"))
                                                            (rule "ifthenelse_true" (formula "3") (term "0,1,1,0"))
                                                            (rule "ifthenelse_true" (formula "3") (term "1,1"))
                                                            (rule "andLeft" (formula "3"))
                                                            (rule "replace_known_left" (formula "3") (term "0,1") (ifseqformula "48"))
                                                            (rule "concrete_or_1" (formula "3") (term "1"))
                                                            (rule "concrete_impl_4" (formula "3"))
                                                            (rule "true_left" (formula "3"))
                                                            (rule "array_store_static_analyse" (formula "3") (ifseqformula "55"))
                                                            (rule "true_left" (formula "3"))
                                                            (rule "all_unused" (formula "2"))
                                                            (rule "true_left" (formula "2"))
                                                            (rule "blockEmpty" (formula "46") (term "4"))
                                                            (rule "assignment" (formula "46") (term "4"))
                                                            (builtin "Update Simplification" (formula "46"))
                                                            (rule "methodCallEmpty" (formula "46") (term "4"))
                                                            (rule "emptyModality" (formula "46") (term "4"))
                                                            (builtin "Update Simplification" (formula "46"))
                                                            (rule "notRight" (formula "46"))
                                                            (rule "eqSymm" (formula "1"))
                                                            (rule "applyEq" (formula "51") (term "0,1,0") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "4") (term "0,1,0") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "52") (term "0,1,0,0") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "27") (term "0") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "28") (term "0,0") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "30") (term "1") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "6") (term "1") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "23") (term "1") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "3") (term "1") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "20") (term "1") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "47") (term "0,0") (ifseqformula "28"))
                                                            (rule "polySimp_mulComm0" (formula "47") (term "0"))
                                                            (rule "close" (formula "47") (ifseqformula "6"))
                                                         )
                                                         (branch " Exceptional Post"
                                                            (builtin "Update Simplification" (formula "44"))
                                                            (rule "impRight" (formula "44"))
                                                            (rule "andLeft" (formula "1"))
                                                            (rule "andLeft" (formula "1"))
                                                            (rule "andLeft" (formula "3"))
                                                            (rule "andLeft" (formula "2"))
                                                            (rule "notLeft" (formula "3"))
                                                            (rule "close" (formula "48") (ifseqformula "4"))
                                                         )
                                                      )
                                                      (branch " Null Reference (queryReceiver_4 = null)"
                                                         (builtin "Update Simplification" (formula "3"))
                                                         (builtin "Update Simplification" (formula "2"))
                                                         (rule "close" (formula "49") (ifseqformula "2"))
                                                      )
                                                   )
                                                   (branch "   self.size * quotient_0
= result_0 + self.size * quotient_4 * -1 FALSE"
                                                      (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "41"))
                                                      (rule "concrete_not_2" (formula "2") (term "0"))
                                                      (rule "concrete_or_1" (formula "2"))
                                                      (rule "true_left" (formula "2"))
                                                      (rule "allLeft" (formula "2") (inst "t=result_0"))
                                                      (rule "polySimp_pullOutFactor1" (formula "2") (term "1,0,0,0,1"))
                                                      (rule "add_literals" (formula "2") (term "1,1,0,0,0,1"))
                                                      (rule "times_zero_1" (formula "2") (term "1,0,0,0,1"))
                                                      (rule "polySimp_pullOutFactor1" (formula "2") (term "1,0,0"))
                                                      (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                                      (rule "ifthenelse_split" (formula "2") (term "0,0,1"))
                                                      (branch " self.size * quotient_4 = 0 TRUE"
                                                         (rule "replace_known_left" (formula "3") (term "1") (ifseqformula "41"))
                                                         (rule "concrete_or_3" (formula "3"))
                                                         (rule "true_left" (formula "3"))
                                                         (rule "applyEq" (formula "11") (term "0,1,1,0") (ifseqformula "2"))
                                                         (rule "mul_literals" (formula "11") (term "1,1,0"))
                                                         (rule "add_zero_right" (formula "11") (term "1,0"))
                                                         (rule "applyEq" (formula "18") (term "0") (ifseqformula "2"))
                                                         (rule "inEqSimp_commuteLeq" (formula "18"))
                                                         (rule "applyEq" (formula "48") (term "0") (ifseqformula "2"))
                                                         (rule "polySimp_homoEq" (formula "48"))
                                                         (rule "times_zero_2" (formula "48") (term "1,0"))
                                                         (rule "add_zero_right" (formula "48") (term "0"))
                                                         (rule "applyEq" (formula "41") (term "0,0") (ifseqformula "2"))
                                                         (rule "times_zero_2" (formula "41") (term "0"))
                                                         (rule "eqSymm" (formula "41"))
                                                         (rule "applyEq" (formula "3") (term "0,0,0,0") (ifseqformula "2"))
                                                         (rule "polySimp_homoEq" (formula "3") (term "0,0,0"))
                                                         (rule "times_zero_2" (formula "3") (term "1,0,0,0,0"))
                                                         (rule "add_zero_right" (formula "3") (term "0,0,0,0"))
                                                         (rule "applyEq" (formula "18") (term "0") (ifseqformula "2"))
                                                         (rule "inEqSimp_homoInEq1" (formula "18"))
                                                         (rule "times_zero_2" (formula "18") (term "1,0"))
                                                         (rule "add_zero_right" (formula "18") (term "0"))
                                                         (rule "applyEq" (formula "42") (term "0") (ifseqformula "2"))
                                                         (rule "polySimp_homoEq" (formula "42"))
                                                         (rule "times_zero_2" (formula "42") (term "1,0"))
                                                         (rule "add_zero_right" (formula "42") (term "0"))
                                                         (rule "applyEq" (formula "3") (term "0,0,0,0,1,0") (ifseqformula "2"))
                                                         (rule "polySimp_homoEq" (formula "3") (term "0,0,0,1,0"))
                                                         (rule "times_zero_2" (formula "3") (term "1,0,0,0,0,1,0"))
                                                         (rule "add_zero_right" (formula "3") (term "0,0,0,0,1,0"))
                                                         (rule "applyEq" (formula "43") (term "1,1") (ifseqformula "2"))
                                                         (rule "add_zero_right" (formula "43") (term "1"))
                                                         (rule "applyEq" (formula "40") (term "0,1,1") (ifseqformula "2"))
                                                         (rule "mul_literals" (formula "40") (term "1,1"))
                                                         (rule "add_zero_right" (formula "40") (term "1"))
                                                         (rule "polySimp_sepNegMonomial" (formula "48"))
                                                         (rule "polySimp_mulLiterals" (formula "48") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "48") (term "0"))
                                                         (rule "polySimp_sepNegMonomial" (formula "3") (term "0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "3") (term "0,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "3") (term "0,0,0,0"))
                                                         (rule "polySimp_sepNegMonomial" (formula "42"))
                                                         (rule "polySimp_mulLiterals" (formula "42") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "42") (term "0"))
                                                         (rule "polySimp_sepNegMonomial" (formula "3") (term "0,0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "3") (term "0,0,0,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "3") (term "0,0,0,0,1,0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "18"))
                                                         (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "18") (term "0"))
                                                         (rule "inEqSimp_strengthen1" (formula "19") (ifseqformula "41"))
                                                         (rule "add_literals" (formula "19") (term "1"))
                                                         (rule "inEqSimp_contradEq7" (formula "41") (ifseqformula "19"))
                                                         (rule "times_zero_1" (formula "41") (term "1,0,0"))
                                                         (rule "add_literals" (formula "41") (term "0,0"))
                                                         (rule "leq_literals" (formula "41") (term "0"))
                                                         (rule "concrete_and_2" (formula "41"))
                                                         (rule "false_right" (formula "41"))
                                                         (rule "divide_eq0" (formula "2") (inst "divY=quotient_4") (ifseqformula "33"))
                                                         (rule "eqClose" (formula "2") (term "0"))
                                                         (rule "concrete_impl_1" (formula "2"))
                                                         (rule "div_literals" (formula "2") (term "1,1,1"))
                                                         (rule "qeq_literals" (formula "2") (term "0,1"))
                                                         (rule "concrete_impl_1" (formula "2") (term "1"))
                                                         (rule "qeq_literals" (formula "2") (term "0"))
                                                         (rule "concrete_impl_1" (formula "2"))
                                                         (rule "divide_eq2" (formula "3") (inst "divY=quotient_4") (ifseqformula "34"))
                                                         (rule "eqClose" (formula "3") (term "0"))
                                                         (rule "concrete_impl_1" (formula "3"))
                                                         (rule "qeq_literals" (formula "3") (term "0"))
                                                         (rule "concrete_impl_1" (formula "3"))
                                                         (rule "leq_literals" (formula "3") (term "0"))
                                                         (rule "concrete_impl_1" (formula "3"))
                                                         (rule "add_zero_left" (formula "3") (term "0,0,1"))
                                                         (rule "sub_literals" (formula "3") (term "0,1"))
                                                         (rule "div_literals" (formula "3") (term "1"))
                                                         (rule "inEqSimp_antiSymm" (formula "3") (ifseqformula "2"))
                                                         (rule "applyEq" (formula "5") (term "1,0") (ifseqformula "3"))
                                                         (rule "times_zero_1" (formula "5") (term "0"))
                                                         (rule "eqClose" (formula "5"))
                                                         (rule "true_left" (formula "5"))
                                                         (rule "applyEqRigid" (formula "2") (term "0") (ifseqformula "3"))
                                                         (rule "leq_literals" (formula "2"))
                                                         (rule "true_left" (formula "2"))
                                                         (rule "applyEqRigid" (formula "3") (term "0") (ifseqformula "2"))
                                                         (rule "qeq_literals" (formula "3"))
                                                         (rule "true_left" (formula "3"))
                                                         (rule "applyEq" (formula "20") (term "1") (ifseqformula "2"))
                                                         (rule "applyEqRigid" (formula "17") (term "1") (ifseqformula "2"))
                                                         (rule "commute_or" (formula "3") (term "0"))
                                                         (rule "elim_forall4" (formula "3"))
                                                         (rule "eqClose" (formula "3") (term "0,0,0"))
                                                         (rule "ifthenelse_true" (formula "3") (term "0,0"))
                                                         (rule "resolvequery" (formula "49") (term "0,1,0") (inst "queryValue=java_lang_StringhashCode_3") (userinteraction))
                                                         (rule "eqSymm" (formula "2") (term "0,1,0"))
                                                         (rule "applyEq" (formula "32") (term "0") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "27") (term "0,0") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "28") (term "1") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "30") (term "0,0") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "29") (term "1,0,1") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "25") (term "0,1,0,0") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "43") (term "1,1") (ifseqformula "1"))
                                                         (rule "polySimp_addComm0" (formula "43") (term "1"))
                                                         (rule "inEqSimp_exactShadow3" (formula "29") (ifseqformula "28"))
                                                         (rule "polySimp_rightDist" (formula "29") (term "0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "29") (term "1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "29") (term "0"))
                                                         (rule "polySimp_rightDist" (formula "29") (term "0,0,0"))
                                                         (rule "mul_literals" (formula "29") (term "0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor2b" (formula "29") (term "0,0"))
                                                         (rule "add_literals" (formula "29") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "29") (term "1,0,0"))
                                                         (rule "add_literals" (formula "29") (term "0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "29"))
                                                         (rule "mul_literals" (formula "29") (term "1"))
                                                         (rule "variableDeclaration" (formula "2") (newnames "hcode_3"))
                                                         (rule "variableDeclaration" (formula "2") (newnames "queryReceiver_5"))
                                                         (rule "emptyModality" (formula "2"))
                                                         (rule "div_axiom" (formula "27") (term "0") (inst "quotient=quotient_11"))
                                                         (rule "polySimp_mulComm0" (formula "27") (term "0,1,0,1"))
                                                         (rule "polySimp_mulComm0" (formula "27") (term "0,1,1,1"))
                                                         (rule "polySimp_mulComm0" (formula "27") (term "0,2,1,1"))
                                                         (rule "polySimp_mulComm0" (formula "27") (term "1,1,1,1,1"))
                                                         (rule "applyEq" (formula "27") (term "0,0,0,1") (ifseqformula "28"))
                                                         (rule "inEqSimp_contradEq7" (formula "27") (term "0") (ifseqformula "35"))
                                                         (rule "times_zero_1" (formula "27") (term "1,0,0,0"))
                                                         (rule "add_literals" (formula "27") (term "0,0,0"))
                                                         (rule "leq_literals" (formula "27") (term "0,0"))
                                                         (rule "concrete_and_2" (formula "27") (term "0"))
                                                         (rule "concrete_or_2" (formula "27"))
                                                         (rule "andLeft" (formula "27"))
                                                         (rule "andLeft" (formula "27"))
                                                         (rule "applyEq" (formula "54") (term "1,0,1,1,0") (ifseqformula "27"))
                                                         (rule "applyEq" (formula "44") (term "1,0") (ifseqformula "27"))
                                                         (rule "applyEq" (formula "25") (term "1,0,1,1,0,0") (ifseqformula "27"))
                                                         (rule "applyEqRigid" (formula "32") (term "1,0") (ifseqformula "27"))
                                                         (rule "replace_known_left" (formula "29") (term "1") (ifseqformula "32"))
                                                         (rule "applyEq" (formula "31") (term "1,0") (ifseqformula "27"))
                                                         (rule "applyEqRigid" (formula "45") (term "1,0") (ifseqformula "27"))
                                                         (rule "applyEqRigid" (formula "32") (term "1") (ifseqformula "27"))
                                                         (rule "applyEq" (formula "30") (term "1") (ifseqformula "27"))
                                                         (rule "inEqSimp_subsumption1" (formula "29") (term "0") (ifseqformula "36"))
                                                         (rule "leq_literals" (formula "29") (term "0,0"))
                                                         (rule "concrete_or_1" (formula "29") (term "0"))
                                                         (rule "ifthenelse_true_for" (formula "29"))
                                                         (rule "true_left" (formula "29"))
                                                         (rule "inEqSimp_exactShadow3" (formula "30") (ifseqformula "28"))
                                                         (rule "polySimp_rightDist" (formula "30") (term "0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "30") (term "1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "30") (term "1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "30") (term "0"))
                                                         (rule "polySimp_rightDist" (formula "30") (term "0,0,0"))
                                                         (rule "mul_literals" (formula "30") (term "0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor2b" (formula "30") (term "0,0"))
                                                         (rule "add_literals" (formula "30") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "30") (term "1,0,0"))
                                                         (rule "add_literals" (formula "30") (term "0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "30"))
                                                         (rule "mul_literals" (formula "30") (term "1"))
                                                         (rule "jdiv_axiom" (formula "31") (term "0"))
                                                         (rule "eqSymm" (formula "31"))
                                                         (rule "replace_known_left" (formula "31") (term "0,0") (ifseqformula "34"))
                                                         (rule "ifthenelse_true" (formula "31") (term "0"))
                                                         (rule "eqSymm" (formula "31"))
                                                         (rule "applyEq" (formula "31") (term "0") (ifseqformula "32"))
                                                         (rule "eqSymm" (formula "31"))
                                                         (rule "methodCallWithAssignment" (formula "2") (term "1") (inst "#v0=j"))
                                                         (branch " Normal Execution (queryReceiver_5 != null)"
                                                            (builtin "Update Simplification" (formula "42"))
                                                            (rule "variableDeclaration" (formula "2") (term "1") (newnames "j_15"))
                                                            (rule "only_created_object_are_referenced_by_arrays_non_null" (formula "25") (term "0,0") (ifseqformula "26") (ifseqformula "32") (ifseqformula "52"))
                                                            (rule "resolvequery" (formula "49") (term "3,0,0") (inst "queryValue=java_lang_StringhashCode_4"))
                                                            (builtin "Update Simplification" (formula "51"))
                                                            (builtin "Update Simplification" (formula "1"))
                                                            (rule "eqSymm" (formula "2") (term "0,1,0,3"))
                                                            (rule "jmod_axiom" (formula "51") (term "0"))
                                                            (rule "polySimp_homoEq" (formula "51"))
                                                            (rule "polySimp_mulComm1" (formula "51") (term "1,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "51") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "51") (term "1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "51") (term "1,1,0"))
                                                            (rule "polySimp_elimOne" (formula "51") (term "1,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "51") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "51") (term "0"))
                                                            (rule "polySimp_addComm0" (formula "51") (term "0,0"))
                                                            (rule "polySimp_sepPosMonomial" (formula "51"))
                                                            (rule "polySimp_mulComm0" (formula "51") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "51") (term "1"))
                                                            (rule "polySimp_mulAssoc" (formula "51") (term "0,1"))
                                                            (rule "polySimp_mulComm0" (formula "51") (term "0,0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "51") (term "0,1"))
                                                            (rule "polySimp_elimOne" (formula "51") (term "0,1"))
                                                            (rule "variableDeclaration" (formula "2") (term "3") (newnames "hcode_4"))
                                                            (rule "variableDeclaration" (formula "2") (term "3") (newnames "queryReceiver_6"))
                                                            (rule "emptyModality" (formula "2") (term "3"))
                                                            (builtin "Update Simplification" (formula "2"))
                                                            (rule "applyEq" (formula "2") (term "0") (ifseqformula "7"))
                                                            (rule "resolvequery" (formula "10") (term "3,0,1,0") (inst "queryValue=java_lang_StringhashCode_5"))
                                                            (builtin "Update Simplification" (formula "12"))
                                                            (builtin "Update Simplification" (formula "10"))
                                                            (rule "eqSymm" (formula "11") (term "0,1,0,3"))
                                                            (rule "applyEq" (formula "47") (term "0,0") (ifseqformula "10"))
                                                            (rule "jmod_axiom" (formula "12") (term "1,0"))
                                                            (rule "polySimp_mulComm1" (formula "12") (term "1,1,0"))
                                                            (rule "jmod_axiom" (formula "47") (term "0"))
                                                            (rule "polySimp_homoEq" (formula "47"))
                                                            (rule "polySimp_mulComm1" (formula "47") (term "1,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "47") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "47") (term "1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "47") (term "1,1,0"))
                                                            (rule "polySimp_elimOne" (formula "47") (term "1,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "47") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "47") (term "0"))
                                                            (rule "polySimp_addComm0" (formula "47") (term "0,0"))
                                                            (rule "polySimp_sepPosMonomial" (formula "47"))
                                                            (rule "polySimp_mulComm0" (formula "47") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "47") (term "1"))
                                                            (rule "polySimp_mulAssoc" (formula "47") (term "0,1"))
                                                            (rule "polySimp_mulComm0" (formula "47") (term "0,0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "47") (term "0,1"))
                                                            (rule "polySimp_elimOne" (formula "47") (term "0,1"))
                                                            (rule "variableDeclaration" (formula "11") (term "3") (newnames "hcode_5"))
                                                            (rule "variableDeclaration" (formula "11") (term "3") (newnames "queryReceiver_7"))
                                                            (rule "emptyModality" (formula "11") (term "3"))
                                                            (builtin "Update Simplification" (formula "11"))
                                                            (rule "applyEq" (formula "11") (term "0") (ifseqformula "8"))
                                                            (rule "boxToDiamond" (formula "4") (term "1"))
                                                            (builtin "Update Simplification" (formula "4"))
                                                            (rule "notLeft" (formula "4"))
                                                            (rule "jdiv_axiom" (formula "53") (term "0,0"))
                                                            (rule "eqSymm" (formula "1"))
                                                            (rule "boxToDiamond" (formula "3") (term "4"))
                                                            (builtin "Update Simplification" (formula "3"))
                                                            (rule "notLeft" (formula "3"))
                                                            (rule "jdiv_axiom" (formula "11") (term "0,0,1,1,0"))
                                                            (rule "eqSymm" (formula "11"))
                                                            (rule "boxToDiamond" (formula "10") (term "4"))
                                                            (builtin "Update Simplification" (formula "10"))
                                                            (rule "notLeft" (formula "10"))
                                                            (rule "methodCallWithAssignment" (formula "46") (term "4") (inst "#v0=j"))
                                                            (branch " Normal Execution (queryReceiver_6 != null)"
                                                               (builtin "Update Simplification" (formula "46"))
                                                               (rule "variableDeclaration" (formula "46") (term "4") (newnames "j_16"))
                                                               (rule "methodCallWithAssignment" (formula "45") (term "4") (inst "#v0=j"))
                                                               (branch " Normal Execution (queryReceiver_7 != null)"
                                                                  (builtin "Update Simplification" (formula "45"))
                                                                  (rule "variableDeclaration" (formula "45") (term "4") (newnames "j_17"))
                                                                  (rule "only_created_object_are_referenced_by_arrays_non_null2" (formula "11") (ifseqformula "29") (ifseqformula "35") (ifseqformula "53"))
                                                                  (rule "div_axiom" (formula "1") (term "0,2,0") (inst "quotient=quotient_12"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,1"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "0,1,1,1"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "0,2,1,1"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "1,1,1,1,1"))
                                                                  (rule "inEqSimp_contradEq7" (formula "1") (term "0") (ifseqformula "39"))
                                                                  (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                                                                  (rule "add_zero_right" (formula "1") (term "0,0,0"))
                                                                  (rule "leq_literals" (formula "1") (term "0,0"))
                                                                  (rule "concrete_and_2" (formula "1") (term "0"))
                                                                  (rule "concrete_or_2" (formula "1"))
                                                                  (rule "andLeft" (formula "1"))
                                                                  (rule "andLeft" (formula "1"))
                                                                  (rule "applyEq" (formula "4") (term "0,2,0") (ifseqformula "1"))
                                                                  (rule "inEqSimp_subsumption1" (formula "3") (term "0") (ifseqformula "41"))
                                                                  (rule "leq_literals" (formula "3") (term "0,0"))
                                                                  (rule "concrete_or_1" (formula "3") (term "0"))
                                                                  (rule "ifthenelse_true_for" (formula "3"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "2"))
                                                                  (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "3") (term "1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                                  (rule "polySimp_rightDist" (formula "3") (term "0,0,0"))
                                                                  (rule "mul_literals" (formula "3") (term "0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                                                                  (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "3") (term "0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                                  (rule "mul_literals" (formula "3") (term "1"))
                                                                  (rule "div_axiom" (formula "4") (term "1,0") (inst "quotient=quotient_21"))
                                                                  (rule "polySimp_mulComm0" (formula "4") (term "0,1,0,1"))
                                                                  (rule "polySimp_mulComm0" (formula "4") (term "0,1,1,1"))
                                                                  (rule "polySimp_mulComm0" (formula "4") (term "1,1,1,1,1"))
                                                                  (rule "polySimp_mulComm0" (formula "4") (term "0,2,1,1"))
                                                                  (rule "inEqSimp_contradEq7" (formula "4") (term "0") (ifseqformula "42"))
                                                                  (rule "mul_literals" (formula "4") (term "1,0,0,0"))
                                                                  (rule "add_zero_right" (formula "4") (term "0,0,0"))
                                                                  (rule "leq_literals" (formula "4") (term "0,0"))
                                                                  (rule "concrete_and_2" (formula "4") (term "0"))
                                                                  (rule "concrete_or_2" (formula "4"))
                                                                  (rule "andLeft" (formula "4"))
                                                                  (rule "andLeft" (formula "4"))
                                                                  (rule "applyEq" (formula "7") (term "1,0") (ifseqformula "4"))
                                                                  (rule "inEqSimp_subsumption1" (formula "6") (term "0") (ifseqformula "44"))
                                                                  (rule "leq_literals" (formula "6") (term "0,0"))
                                                                  (rule "concrete_or_1" (formula "6") (term "0"))
                                                                  (rule "ifthenelse_true_for" (formula "6"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "5"))
                                                                  (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "6") (term "1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                                  (rule "polySimp_rightDist" (formula "6") (term "0,0,0"))
                                                                  (rule "mul_literals" (formula "6") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor2b" (formula "6") (term "0,0"))
                                                                  (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "6") (term "0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                                                  (rule "mul_literals" (formula "6") (term "1"))
                                                                  (rule "div_axiom" (formula "16") (term "1,0") (inst "quotient=quotient_22"))
                                                                  (rule "polySimp_mulComm0" (formula "16") (term "0,1,0,1"))
                                                                  (rule "polySimp_mulComm0" (formula "16") (term "1,1,1,1,1"))
                                                                  (rule "polySimp_mulComm0" (formula "16") (term "0,2,1,1"))
                                                                  (rule "polySimp_mulComm0" (formula "16") (term "0,1,1,1"))
                                                                  (rule "inEqSimp_contradEq7" (formula "16") (term "0") (ifseqformula "45"))
                                                                  (rule "times_zero_1" (formula "16") (term "1,0,0,0"))
                                                                  (rule "add_zero_right" (formula "16") (term "0,0,0"))
                                                                  (rule "leq_literals" (formula "16") (term "0,0"))
                                                                  (rule "concrete_and_2" (formula "16") (term "0"))
                                                                  (rule "concrete_or_2" (formula "16"))
                                                                  (rule "andLeft" (formula "16"))
                                                                  (rule "andLeft" (formula "16"))
                                                                  (rule "applyEq" (formula "19") (term "1,0") (ifseqformula "16"))
                                                                  (rule "inEqSimp_subsumption1" (formula "18") (term "0") (ifseqformula "47"))
                                                                  (rule "leq_literals" (formula "18") (term "0,0"))
                                                                  (rule "concrete_or_1" (formula "18") (term "0"))
                                                                  (rule "ifthenelse_true_for" (formula "18"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "17"))
                                                                  (rule "polySimp_rightDist" (formula "18") (term "0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "18") (term "1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "18") (term "0"))
                                                                  (rule "polySimp_rightDist" (formula "18") (term "0,0,0"))
                                                                  (rule "mul_literals" (formula "18") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor2b" (formula "18") (term "0,0"))
                                                                  (rule "add_literals" (formula "18") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "18") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "18") (term "0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                                                                  (rule "mul_literals" (formula "18") (term "1"))
                                                                  (rule "div_axiom" (formula "19") (term "0,2,0") (inst "quotient=quotient_23"))
                                                                  (rule "polySimp_mulComm0" (formula "19") (term "0,1,0,1"))
                                                                  (rule "polySimp_mulComm0" (formula "19") (term "0,1,1,1"))
                                                                  (rule "polySimp_mulComm0" (formula "19") (term "1,1,1,1,1"))
                                                                  (rule "polySimp_mulComm0" (formula "19") (term "0,2,1,1"))
                                                                  (rule "inEqSimp_contradEq7" (formula "19") (term "0") (ifseqformula "48"))
                                                                  (rule "times_zero_1" (formula "19") (term "1,0,0,0"))
                                                                  (rule "add_zero_right" (formula "19") (term "0,0,0"))
                                                                  (rule "leq_literals" (formula "19") (term "0,0"))
                                                                  (rule "concrete_and_2" (formula "19") (term "0"))
                                                                  (rule "concrete_or_2" (formula "19"))
                                                                  (rule "andLeft" (formula "19"))
                                                                  (rule "andLeft" (formula "19"))
                                                                  (rule "applyEq" (formula "22") (term "0,2,0") (ifseqformula "19"))
                                                                  (rule "inEqSimp_subsumption1" (formula "21") (term "0") (ifseqformula "50"))
                                                                  (rule "leq_literals" (formula "21") (term "0,0"))
                                                                  (rule "concrete_or_1" (formula "21") (term "0"))
                                                                  (rule "ifthenelse_true_for" (formula "21"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "20"))
                                                                  (rule "polySimp_rightDist" (formula "21") (term "0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "21") (term "1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "21") (term "0"))
                                                                  (rule "polySimp_rightDist" (formula "21") (term "0,0,0"))
                                                                  (rule "mul_literals" (formula "21") (term "0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "21") (term "1,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0"))
                                                                  (rule "add_literals" (formula "21") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "21") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "21") (term "0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "21"))
                                                                  (rule "mul_literals" (formula "21") (term "1"))
                                                                  (builtin "Use Operation Contract" (formula "59") (term "1") (newnames "result_15") (contract "hashCode;;"))
                                                                  (branch " Pre"
                                                                     (builtin "Update Simplification" (formula "59"))
                                                                     (rule "replace_known_left" (formula "59") (term "0") (ifseqformula "47"))
                                                                     (rule "concrete_and_1" (formula "59"))
                                                                     (rule "replace_known_left" (formula "59") (term "0") (ifseqformula "56"))
                                                                     (rule "concrete_and_1" (formula "59"))
                                                                     (rule "notRight" (formula "59"))
                                                                     (rule "close" (formula "71") (ifseqformula "1"))
                                                                  )
                                                                  (branch " Post"
                                                                     (builtin "Update Simplification" (formula "59"))
                                                                     (rule "inInt" (formula "59") (term "1,1,0,0"))
                                                                     (rule "concrete_and_3" (formula "59") (term "1,0,0"))
                                                                     (rule "impRight" (formula "59"))
                                                                     (rule "andLeft" (formula "1"))
                                                                     (rule "andLeft" (formula "2"))
                                                                     (rule "andLeft" (formula "1"))
                                                                     (rule "eqSymm" (formula "1"))
                                                                     (rule "applyEq" (formula "1") (term "0") (ifseqformula "40"))
                                                                     (rule "eqSymm" (formula "1"))
                                                                     (rule "applyEq" (formula "61") (term "0") (ifseqformula "1"))
                                                                     (rule "blockEmpty" (formula "61") (term "1"))
                                                                     (rule "assignment" (formula "61") (term "1"))
                                                                     (builtin "Update Simplification" (formula "61"))
                                                                     (rule "methodCallEmpty" (formula "61") (term "1"))
                                                                     (rule "emptyModality" (formula "61") (term "1"))
                                                                     (builtin "Update Simplification" (formula "61"))
                                                                     (rule "notRight" (formula "61"))
                                                                     (rule "eqSymm" (formula "1"))
                                                                     (rule "applyEq" (formula "36") (term "0,0") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "60") (term "0,2") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "34") (term "0,1") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "33") (term "0,0,0") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "37") (term "1,1") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "61") (term "0,2") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "18") (term "0,1,0") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "30") (term "1,0") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "11") (term "0,1,0") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "68") (term "0,1,0") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "39") (term "0,0") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "38") (term "0") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "36") (term "0") (ifseqformula "47"))
                                                                     (rule "applyEq" (formula "63") (term "0,1,1") (ifseqformula "1"))
                                                                     (rule "polySimp_addComm0" (formula "63") (term "1"))
                                                                     (rule "applyEq" (formula "41") (term "1") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "69") (term "0,1,1") (ifseqformula "1"))
                                                                     (rule "polySimp_addComm0" (formula "69") (term "1"))
                                                                     (rule "applyEq" (formula "35") (term "0,1,0,1") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "64") (term "0,1,1") (ifseqformula "1"))
                                                                     (rule "polySimp_pullOutFactor1" (formula "64") (term "1"))
                                                                     (rule "add_literals" (formula "64") (term "1,1"))
                                                                     (rule "times_zero_1" (formula "64") (term "1"))
                                                                     (rule "applyEq" (formula "62") (term "1") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "32") (term "1") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "2") (term "1") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "29") (term "1") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "49") (term "0") (ifseqformula "39"))
                                                                     (rule "eqSymm" (formula "49"))
                                                                     (rule "apply_eq_monomials_rigid" (formula "48") (term "0") (ifseqformula "36"))
                                                                     (rule "add_zero_left" (formula "48") (term "1,0,0"))
                                                                     (rule "polySimp_mulAssoc" (formula "48") (term "0,0"))
                                                                     (rule "polySimp_pullOutFactor2" (formula "48") (term "0"))
                                                                     (rule "add_literals" (formula "48") (term "1,0"))
                                                                     (rule "times_zero_1" (formula "48") (term "0"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "48"))
                                                                     (rule "times_zero_2" (formula "48") (term "1,0"))
                                                                     (rule "add_zero_right" (formula "48") (term "0"))
                                                                     (rule "apply_eq_monomials_rigid" (formula "43") (term "1,1,0,0") (ifseqformula "36"))
                                                                     (rule "add_zero_left" (formula "43") (term "1,0,1,1,0,0"))
                                                                     (rule "polySimp_mulAssoc" (formula "43") (term "0,1,1,0,0"))
                                                                     (rule "polySimp_mulComm1" (formula "43") (term "0,0,1,1,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "43") (term "0,1,1,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "43") (term "0,1,1,0,0"))
                                                                     (rule "polySimp_pullOutFactor1" (formula "43") (term "1,1,0,0"))
                                                                     (rule "add_literals" (formula "43") (term "1,1,1,0,0"))
                                                                     (rule "times_zero_1" (formula "43") (term "1,1,0,0"))
                                                                     (rule "add_zero_right" (formula "43") (term "1,0,0"))
                                                                     (rule "apply_eq_monomials_rigid" (formula "63") (term "0") (ifseqformula "36"))
                                                                     (rule "add_zero_left" (formula "63") (term "1,0,0"))
                                                                     (rule "polySimp_mulAssoc" (formula "63") (term "0,0"))
                                                                     (rule "polySimp_pullOutFactor2" (formula "63") (term "0"))
                                                                     (rule "add_literals" (formula "63") (term "1,0"))
                                                                     (rule "times_zero_1" (formula "63") (term "0"))
                                                                     (rule "eqClose" (formula "63"))
                                                                     (rule "closeTrue" (formula "63"))
                                                                  )
                                                                  (branch " Exceptional Post"
                                                                     (builtin "Update Simplification" (formula "59"))
                                                                     (rule "impRight" (formula "59"))
                                                                     (rule "andLeft" (formula "1"))
                                                                     (rule "andLeft" (formula "1"))
                                                                     (rule "andLeft" (formula "2"))
                                                                     (rule "andLeft" (formula "1"))
                                                                     (rule "notLeft" (formula "2"))
                                                                     (rule "close" (formula "60") (ifseqformula "3"))
                                                                  )
                                                               )
                                                               (branch " Null Reference (queryReceiver_7 = null)"
                                                                  (builtin "Update Simplification" (formula "46"))
                                                                  (builtin "Update Simplification" (formula "1"))
                                                                  (rule "close" (formula "60") (ifseqformula "1"))
                                                               )
                                                            )
                                                            (branch " Null Reference (queryReceiver_6 = null)"
                                                               (builtin "Update Simplification" (formula "47"))
                                                               (builtin "Update Simplification" (formula "1"))
                                                               (rule "close" (formula "60") (ifseqformula "1"))
                                                            )
                                                         )
                                                         (branch " Null Reference (queryReceiver_5 = null)"
                                                            (builtin "Update Simplification" (formula "3"))
                                                            (builtin "Update Simplification" (formula "2"))
                                                            (rule "close" (formula "54") (ifseqformula "2"))
                                                         )
                                                      )
                                                      (branch " self.size * quotient_4 = 0 FALSE"
                                                         (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "41"))
                                                         (rule "concrete_not_2" (formula "2") (term "0"))
                                                         (rule "concrete_or_1" (formula "2"))
                                                         (rule "true_left" (formula "2"))
                                                         (rule "allLeft" (formula "2") (inst "t=self.size@(StringSet)"))
                                                         (rule "inEqSimp_contradEq7" (formula "2") (term "0,0") (ifseqformula "19"))
                                                         (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "2") (term "1,1,0,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "2") (term "0,1,0,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "2") (term "0,0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "2") (term "0,0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor2b" (formula "2") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "2") (term "1,1,0,0,0,0"))
                                                         (rule "times_zero_1" (formula "2") (term "1,0,0,0,0"))
                                                         (rule "add_zero_right" (formula "2") (term "0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "2") (term "1,1,0,0,0,0"))
                                                         (rule "times_zero_1" (formula "2") (term "1,0,0,0,0"))
                                                         (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                                         (rule "leq_literals" (formula "2") (term "0,0,0"))
                                                         (rule "concrete_and_2" (formula "2") (term "0,0"))
                                                         (rule "concrete_not_2" (formula "2") (term "0"))
                                                         (rule "concrete_or_1" (formula "2"))
                                                         (rule "true_left" (formula "2"))
                                                         (rule "allLeft" (formula "2") (inst "t=result_0 + self.size@(StringSet) * quotient_4 * -1"))
                                                         (rule "polySimp_mulComm0" (formula "2") (term "1,1,0,0,0,1"))
                                                         (rule "polySimp_mulComm0" (formula "2") (term "1,1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "2") (term "1,1,0,0,0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "1,1,1,0,0,0,1"))
                                                         (rule "polySimp_elimOne" (formula "2") (term "1,1,1,0,0,0,1"))
                                                         (rule "polySimp_mulComm0" (formula "2") (term "0,1,1,0,0,0,1"))
                                                         (rule "polySimp_rightDist" (formula "2") (term "1,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "1,1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "2") (term "1,1,1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "2") (term "0,1,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "2") (term "1,0,0,0,1"))
                                                         (rule "polySimp_pullOutFactor1" (formula "2") (term "0,1,0,0,0,1"))
                                                         (rule "add_literals" (formula "2") (term "1,0,1,0,0,0,1"))
                                                         (rule "times_zero_1" (formula "2") (term "0,1,0,0,0,1"))
                                                         (rule "add_zero_left" (formula "2") (term "1,0,0,0,1"))
                                                         (rule "eqClose" (formula "2") (term "0,0,0,1"))
                                                         (rule "ifthenelse_true" (formula "2") (term "0,0,1"))
                                                         (rule "replace_known_left" (formula "2") (term "1") (ifseqformula "40"))
                                                         (rule "concrete_or_3" (formula "2"))
                                                         (rule "true_left" (formula "2"))
                                                         (rule "resolvequery" (formula "29") (term "0,0") (inst "queryValue=java_lang_StringhashCode_6"))
                                                         (rule "eqSymm" (formula "30") (term "0,1,0"))
                                                         (rule "applyEq" (formula "33") (term "0") (ifseqformula "29"))
                                                         (rule "applyEq" (formula "26") (term "0,0") (ifseqformula "29"))
                                                         (rule "applyEq" (formula "27") (term "1") (ifseqformula "29"))
                                                         (rule "applyEq" (formula "54") (term "0,1,0") (ifseqformula "29"))
                                                         (rule "applyEq" (formula "28") (term "1,0,1") (ifseqformula "29"))
                                                         (rule "applyEq" (formula "24") (term "0,1,0,0") (ifseqformula "29"))
                                                         (rule "applyEq" (formula "46") (term "1,0,1") (ifseqformula "29"))
                                                         (rule "polySimp_addComm0" (formula "46") (term "0,1"))
                                                         (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "27"))
                                                         (rule "polySimp_rightDist" (formula "28") (term "0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "28") (term "1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "28") (term "0"))
                                                         (rule "polySimp_rightDist" (formula "28") (term "0,0,0"))
                                                         (rule "mul_literals" (formula "28") (term "0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor2b" (formula "28") (term "0,0"))
                                                         (rule "add_literals" (formula "28") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "28") (term "1,0,0"))
                                                         (rule "add_literals" (formula "28") (term "0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "28"))
                                                         (rule "mul_literals" (formula "28") (term "1"))
                                                         (rule "variableDeclaration" (formula "30") (newnames "hcode_6"))
                                                         (rule "variableDeclaration" (formula "30") (newnames "queryReceiver_8"))
                                                         (rule "emptyModality" (formula "30"))
                                                         (rule "resolvequery" (formula "6") (term "3,0,1,0") (inst "queryValue=java_lang_StringhashCode_7"))
                                                         (builtin "Update Simplification" (formula "8"))
                                                         (builtin "Update Simplification" (formula "6"))
                                                         (rule "eqSymm" (formula "7") (term "0,1,0,3"))
                                                         (rule "applyEq" (formula "47") (term "0,0,1,1") (ifseqformula "6"))
                                                         (rule "jmod_axiom" (formula "8") (term "1,0"))
                                                         (rule "polySimp_mulComm1" (formula "8") (term "1,1,0"))
                                                         (rule "jmod_axiom" (formula "47") (term "0,1,1"))
                                                         (rule "polySimp_mulComm0" (formula "47") (term "1,1"))
                                                         (rule "polySimp_mulComm1" (formula "47") (term "1,1,1,1"))
                                                         (rule "polySimp_rightDist" (formula "47") (term "1,1"))
                                                         (rule "polySimp_mulLiterals" (formula "47") (term "1,1,1"))
                                                         (rule "polySimp_elimOne" (formula "47") (term "1,1,1"))
                                                         (rule "polySimp_mulComm0" (formula "47") (term "0,1,1"))
                                                         (rule "polySimp_addAssoc" (formula "47") (term "1"))
                                                         (rule "polySimp_homoEq" (formula "47"))
                                                         (rule "polySimp_addComm0" (formula "47") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "47") (term "0"))
                                                         (rule "polySimp_sepPosMonomial" (formula "47"))
                                                         (rule "polySimp_mulComm0" (formula "47") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "47") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "47") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "47") (term "1,1"))
                                                         (rule "polySimp_rightDist" (formula "47") (term "0,1"))
                                                         (rule "polySimp_mulAssoc" (formula "47") (term "0,0,1"))
                                                         (rule "polySimp_mulComm0" (formula "47") (term "0,0,0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "47") (term "0,0,1"))
                                                         (rule "polySimp_elimOne" (formula "47") (term "0,0,1"))
                                                         (rule "variableDeclaration" (formula "7") (term "3") (newnames "hcode_7"))
                                                         (rule "variableDeclaration" (formula "7") (term "3") (newnames "queryReceiver_9"))
                                                         (rule "emptyModality" (formula "7") (term "3"))
                                                         (builtin "Update Simplification" (formula "7"))
                                                         (rule "applyEq" (formula "7") (term "0") (ifseqformula "4"))
                                                         (rule "resolvequery" (formula "53") (term "3,0,0,1,1") (inst "queryValue=java_lang_StringhashCode_8"))
                                                         (builtin "Update Simplification" (formula "55"))
                                                         (builtin "Update Simplification" (formula "1"))
                                                         (rule "eqSymm" (formula "2") (term "0,1,0,3"))
                                                         (rule "jmod_axiom" (formula "55") (term "0,1,1"))
                                                         (rule "polySimp_mulComm0" (formula "55") (term "1,1"))
                                                         (rule "polySimp_mulComm1" (formula "55") (term "1,1,1,1"))
                                                         (rule "polySimp_rightDist" (formula "55") (term "1,1"))
                                                         (rule "polySimp_mulLiterals" (formula "55") (term "1,1,1"))
                                                         (rule "polySimp_elimOne" (formula "55") (term "1,1,1"))
                                                         (rule "polySimp_mulComm0" (formula "55") (term "0,1,1"))
                                                         (rule "polySimp_addAssoc" (formula "55") (term "1"))
                                                         (rule "polySimp_homoEq" (formula "55"))
                                                         (rule "polySimp_addComm1" (formula "55") (term "0"))
                                                         (rule "polySimp_addComm0" (formula "55") (term "0,0,0"))
                                                         (rule "polySimp_sepPosMonomial" (formula "55"))
                                                         (rule "polySimp_mulComm0" (formula "55") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "55") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "55") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "55") (term "1,1"))
                                                         (rule "polySimp_rightDist" (formula "55") (term "0,1"))
                                                         (rule "polySimp_mulAssoc" (formula "55") (term "0,0,1"))
                                                         (rule "polySimp_mulComm0" (formula "55") (term "0,0,0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "55") (term "0,0,1"))
                                                         (rule "polySimp_elimOne" (formula "55") (term "0,0,1"))
                                                         (rule "variableDeclaration" (formula "2") (term "3") (newnames "hcode_8"))
                                                         (rule "variableDeclaration" (formula "2") (term "3") (newnames "queryReceiver_10"))
                                                         (rule "emptyModality" (formula "2") (term "3"))
                                                         (builtin "Update Simplification" (formula "2"))
                                                         (rule "applyEq" (formula "2") (term "0") (ifseqformula "5"))
                                                         (rule "jdiv_axiom" (formula "35") (term "0"))
                                                         (rule "eqSymm" (formula "35"))
                                                         (rule "replace_known_left" (formula "35") (term "0,0") (ifseqformula "38"))
                                                         (rule "ifthenelse_true" (formula "35") (term "0"))
                                                         (rule "eqSymm" (formula "35"))
                                                         (rule "applyEq" (formula "35") (term "0") (ifseqformula "36"))
                                                         (rule "eqSymm" (formula "35"))
                                                         (rule "div_axiom" (formula "30") (term "0") (inst "quotient=quotient_19"))
                                                         (rule "polySimp_mulComm0" (formula "30") (term "0,1,0,1"))
                                                         (rule "polySimp_mulComm0" (formula "30") (term "0,1,1,1"))
                                                         (rule "polySimp_mulComm0" (formula "30") (term "0,2,1,1"))
                                                         (rule "polySimp_mulComm0" (formula "30") (term "1,1,1,1,1"))
                                                         (rule "applyEq" (formula "30") (term "0,0,0,1") (ifseqformula "31"))
                                                         (rule "inEqSimp_contradEq7" (formula "30") (term "0") (ifseqformula "40"))
                                                         (rule "mul_literals" (formula "30") (term "1,0,0,0"))
                                                         (rule "add_literals" (formula "30") (term "0,0,0"))
                                                         (rule "leq_literals" (formula "30") (term "0,0"))
                                                         (rule "concrete_and_2" (formula "30") (term "0"))
                                                         (rule "concrete_or_2" (formula "30"))
                                                         (rule "andLeft" (formula "30"))
                                                         (rule "andLeft" (formula "30"))
                                                         (rule "applyEq" (formula "61") (term "1,0,1,1,0") (ifseqformula "30"))
                                                         (rule "applyEqRigid" (formula "53") (term "1,0") (ifseqformula "30"))
                                                         (rule "polySimp_homoEq" (formula "53"))
                                                         (rule "polySimp_addComm1" (formula "53") (term "0"))
                                                         (rule "applyEq" (formula "34") (term "1,0") (ifseqformula "30"))
                                                         (rule "applyEq" (formula "34") (term "1,0") (ifseqformula "30"))
                                                         (rule "replace_known_left" (formula "32") (term "1") (ifseqformula "34"))
                                                         (rule "applyEqRigid" (formula "28") (term "1,0,1,1,0,0") (ifseqformula "30"))
                                                         (rule "applyEqRigid" (formula "49") (term "1,0") (ifseqformula "30"))
                                                         (rule "polySimp_homoEq" (formula "49"))
                                                         (rule "polySimp_addComm1" (formula "49") (term "0"))
                                                         (rule "applyEq" (formula "37") (term "1") (ifseqformula "30"))
                                                         (rule "applyEqRigid" (formula "33") (term "1") (ifseqformula "30"))
                                                         (rule "polySimp_sepPosMonomial" (formula "52"))
                                                         (rule "polySimp_mulComm0" (formula "52") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "52") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "52") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "52") (term "1,1"))
                                                         (rule "polySimp_rightDist" (formula "52") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "52") (term "1,0,1"))
                                                         (rule "polySimp_elimOne" (formula "52") (term "1,0,1"))
                                                         (rule "polySimp_mulComm0" (formula "52") (term "0,0,1"))
                                                         (rule "polySimp_sepNegMonomial" (formula "49"))
                                                         (rule "polySimp_mulLiterals" (formula "49") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "49") (term "0"))
                                                         (rule "inEqSimp_subsumption1" (formula "32") (term "0") (ifseqformula "41"))
                                                         (rule "leq_literals" (formula "32") (term "0,0"))
                                                         (rule "concrete_or_1" (formula "32") (term "0"))
                                                         (rule "ifthenelse_true_for" (formula "32"))
                                                         (rule "true_left" (formula "32"))
                                                         (rule "inEqSimp_exactShadow3" (formula "33") (ifseqformula "31"))
                                                         (rule "polySimp_rightDist" (formula "33") (term "0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "33") (term "1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "33") (term "1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "33") (term "0"))
                                                         (rule "polySimp_rightDist" (formula "33") (term "0,0,0"))
                                                         (rule "mul_literals" (formula "33") (term "0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor2b" (formula "33") (term "0,0"))
                                                         (rule "add_literals" (formula "33") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "33") (term "1,0,0"))
                                                         (rule "add_literals" (formula "33") (term "0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "33"))
                                                         (rule "mul_literals" (formula "33") (term "1"))
                                                         (rule "boxToDiamond" (formula "35") (term "1"))
                                                         (builtin "Update Simplification" (formula "35"))
                                                         (rule "notLeft" (formula "35"))
                                                         (rule "jdiv_axiom" (formula "10") (term "0,0,1,1,0"))
                                                         (rule "eqSymm" (formula "10"))
                                                         (rule "boxToDiamond" (formula "9") (term "4"))
                                                         (builtin "Update Simplification" (formula "9"))
                                                         (rule "notLeft" (formula "9"))
                                                         (rule "jdiv_axiom" (formula "57") (term "0,0"))
                                                         (rule "eqSymm" (formula "1"))
                                                         (rule "boxToDiamond" (formula "3") (term "4"))
                                                         (builtin "Update Simplification" (formula "3"))
                                                         (rule "notLeft" (formula "3"))
                                                         (rule "methodCallWithAssignment" (formula "48") (term "1") (inst "#v0=j"))
                                                         (branch " Normal Execution (queryReceiver_8 != null)"
                                                            (builtin "Update Simplification" (formula "48"))
                                                            (rule "variableDeclaration" (formula "48") (term "1") (newnames "j_23"))
                                                            (rule "methodCallWithAssignment" (formula "47") (term "4") (inst "#v0=j"))
                                                            (branch " Normal Execution (queryReceiver_9 != null)"
                                                               (builtin "Update Simplification" (formula "47"))
                                                               (rule "variableDeclaration" (formula "47") (term "4") (newnames "j_24"))
                                                               (rule "methodCallWithAssignment" (formula "46") (term "4") (inst "#v0=j"))
                                                               (branch " Normal Execution (queryReceiver_10 != null)"
                                                                  (builtin "Update Simplification" (formula "46"))
                                                                  (rule "variableDeclaration" (formula "46") (term "4") (newnames "j_25"))
                                                                  (rule "only_created_object_are_referenced_by_arrays_non_null2" (formula "10") (ifseqformula "29") (ifseqformula "36") (ifseqformula "56"))
                                                                  (rule "only_created_object_are_referenced_by_arrays_non_null" (formula "61") (term "0") (ifseqformula "29") (ifseqformula "36") (ifseqformula "61"))
                                                                  (rule "div_axiom" (formula "9") (term "1,0") (inst "quotient=quotient_20"))
                                                                  (rule "polySimp_mulComm0" (formula "9") (term "0,1,0,1"))
                                                                  (rule "polySimp_mulComm0" (formula "9") (term "0,1,1,1"))
                                                                  (rule "polySimp_mulComm0" (formula "9") (term "1,1,1,1,1"))
                                                                  (rule "polySimp_mulComm0" (formula "9") (term "0,2,1,1"))
                                                                  (rule "inEqSimp_contradEq7" (formula "9") (term "0") (ifseqformula "40"))
                                                                  (rule "mul_literals" (formula "9") (term "1,0,0,0"))
                                                                  (rule "add_zero_right" (formula "9") (term "0,0,0"))
                                                                  (rule "leq_literals" (formula "9") (term "0,0"))
                                                                  (rule "concrete_and_2" (formula "9") (term "0"))
                                                                  (rule "concrete_or_2" (formula "9"))
                                                                  (rule "andLeft" (formula "9"))
                                                                  (rule "andLeft" (formula "9"))
                                                                  (rule "applyEq" (formula "12") (term "1,0") (ifseqformula "9"))
                                                                  (rule "inEqSimp_subsumption1" (formula "11") (term "0") (ifseqformula "42"))
                                                                  (rule "leq_literals" (formula "11") (term "0,0"))
                                                                  (rule "concrete_or_1" (formula "11") (term "0"))
                                                                  (rule "ifthenelse_true_for" (formula "11"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "10"))
                                                                  (rule "polySimp_rightDist" (formula "11") (term "0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "11") (term "1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "11") (term "0"))
                                                                  (rule "polySimp_rightDist" (formula "11") (term "0,0,0"))
                                                                  (rule "mul_literals" (formula "11") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor2b" (formula "11") (term "0,0"))
                                                                  (rule "add_literals" (formula "11") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "11") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "11") (term "0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                                                                  (rule "mul_literals" (formula "11") (term "1"))
                                                                  (rule "div_axiom" (formula "12") (term "0,2,0") (inst "quotient=quotient_33"))
                                                                  (rule "polySimp_mulComm0" (formula "12") (term "0,1,0,1"))
                                                                  (rule "polySimp_mulComm0" (formula "12") (term "1,1,1,1,1"))
                                                                  (rule "polySimp_mulComm0" (formula "12") (term "0,2,1,1"))
                                                                  (rule "polySimp_mulComm0" (formula "12") (term "0,1,1,1"))
                                                                  (rule "inEqSimp_contradEq7" (formula "12") (term "0") (ifseqformula "43"))
                                                                  (rule "times_zero_1" (formula "12") (term "1,0,0,0"))
                                                                  (rule "add_zero_right" (formula "12") (term "0,0,0"))
                                                                  (rule "leq_literals" (formula "12") (term "0,0"))
                                                                  (rule "concrete_and_2" (formula "12") (term "0"))
                                                                  (rule "concrete_or_2" (formula "12"))
                                                                  (rule "andLeft" (formula "12"))
                                                                  (rule "andLeft" (formula "12"))
                                                                  (rule "applyEq" (formula "15") (term "0,2,0") (ifseqformula "12"))
                                                                  (rule "inEqSimp_subsumption1" (formula "14") (term "0") (ifseqformula "45"))
                                                                  (rule "leq_literals" (formula "14") (term "0,0"))
                                                                  (rule "concrete_or_1" (formula "14") (term "0"))
                                                                  (rule "ifthenelse_true_for" (formula "14"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "13"))
                                                                  (rule "polySimp_rightDist" (formula "14") (term "0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "14") (term "1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "14") (term "0"))
                                                                  (rule "polySimp_rightDist" (formula "14") (term "0,0,0"))
                                                                  (rule "mul_literals" (formula "14") (term "0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,0"))
                                                                  (rule "add_literals" (formula "14") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "14") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "14") (term "0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                                                                  (rule "mul_literals" (formula "14") (term "1"))
                                                                  (rule "div_axiom" (formula "1") (term "1,0") (inst "quotient=quotient_34"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,1"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "0,1,1,1"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "0,2,1,1"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "1,1,1,1,1"))
                                                                  (rule "inEqSimp_contradEq7" (formula "1") (term "0") (ifseqformula "46"))
                                                                  (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                                                                  (rule "add_zero_right" (formula "1") (term "0,0,0"))
                                                                  (rule "leq_literals" (formula "1") (term "0,0"))
                                                                  (rule "concrete_and_2" (formula "1") (term "0"))
                                                                  (rule "concrete_or_2" (formula "1"))
                                                                  (rule "andLeft" (formula "1"))
                                                                  (rule "andLeft" (formula "1"))
                                                                  (rule "applyEq" (formula "4") (term "1,0") (ifseqformula "1"))
                                                                  (rule "inEqSimp_subsumption1" (formula "3") (term "0") (ifseqformula "48"))
                                                                  (rule "leq_literals" (formula "3") (term "0,0"))
                                                                  (rule "concrete_or_1" (formula "3") (term "0"))
                                                                  (rule "ifthenelse_true_for" (formula "3"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "2"))
                                                                  (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "3") (term "1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                                  (rule "polySimp_rightDist" (formula "3") (term "0,0,0"))
                                                                  (rule "mul_literals" (formula "3") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor2b" (formula "3") (term "0,0"))
                                                                  (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "3") (term "0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                                  (rule "mul_literals" (formula "3") (term "1"))
                                                                  (rule "div_axiom" (formula "4") (term "0,2,0") (inst "quotient=quotient_35"))
                                                                  (rule "polySimp_mulComm0" (formula "4") (term "0,1,0,1"))
                                                                  (rule "polySimp_mulComm0" (formula "4") (term "0,1,1,1"))
                                                                  (rule "polySimp_mulComm0" (formula "4") (term "1,1,1,1,1"))
                                                                  (rule "polySimp_mulComm0" (formula "4") (term "0,2,1,1"))
                                                                  (rule "inEqSimp_contradEq7" (formula "4") (term "0") (ifseqformula "49"))
                                                                  (rule "times_zero_1" (formula "4") (term "1,0,0,0"))
                                                                  (rule "add_zero_right" (formula "4") (term "0,0,0"))
                                                                  (rule "leq_literals" (formula "4") (term "0,0"))
                                                                  (rule "concrete_and_2" (formula "4") (term "0"))
                                                                  (rule "concrete_or_2" (formula "4"))
                                                                  (rule "andLeft" (formula "4"))
                                                                  (rule "andLeft" (formula "4"))
                                                                  (rule "applyEq" (formula "7") (term "0,2,0") (ifseqformula "4"))
                                                                  (rule "inEqSimp_subsumption1" (formula "6") (term "0") (ifseqformula "51"))
                                                                  (rule "leq_literals" (formula "6") (term "0,0"))
                                                                  (rule "concrete_or_1" (formula "6") (term "0"))
                                                                  (rule "ifthenelse_true_for" (formula "6"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "5"))
                                                                  (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "6") (term "1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                                  (rule "polySimp_rightDist" (formula "6") (term "0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0,0"))
                                                                  (rule "mul_literals" (formula "6") (term "0,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "6") (term "1,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0"))
                                                                  (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "6") (term "0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                                                  (rule "mul_literals" (formula "6") (term "1"))
                                                                  (builtin "Use Operation Contract" (formula "58") (term "4") (newnames "result_17") (contract "hashCode;;"))
                                                                  (branch " Pre"
                                                                     (builtin "Update Simplification" (formula "58"))
                                                                     (rule "replace_known_left" (formula "58") (term "0,1") (ifseqformula "57"))
                                                                     (rule "concrete_and_1" (formula "58") (term "1"))
                                                                     (rule "replace_known_right" (formula "58") (term "0,1") (ifseqformula "74"))
                                                                     (rule "concrete_not_2" (formula "58") (term "1"))
                                                                     (rule "concrete_and_3" (formula "58"))
                                                                     (rule "inReachableStateRewrite" (formula "58") (ifseqformula "48"))
                                                                     (builtin "Update Simplification" (formula "58"))
                                                                     (rule "eq_imp" (formula "58") (term "0,0,1"))
                                                                     (rule "orRight" (formula "58"))
                                                                     (rule "jmod_axiom" (formula "59") (term "1,1,0,0,0,0,1,0,1,0,0,1"))
                                                                     (rule "polySimp_mulComm1" (formula "59") (term "1,1,1,0,0,0,0,1,0,1,0,0,1"))
                                                                     (rule "polySimp_homoEq" (formula "59") (term "1,0,0,0,0,1,0,1,0,0,1"))
                                                                     (rule "polySimp_addComm1" (formula "59") (term "0,1,0,0,0,0,1,0,1,0,0,1"))
                                                                     (rule "applyEq" (formula "59") (term "0,0,1,0,1,0,0,0,0,1,0,1,0,0,1") (ifseqformula "36"))
                                                                     (rule "polySimp_mulComm0" (formula "59") (term "0,1,0,1,0,0,0,0,1,0,1,0,0,1"))
                                                                     (rule "jmod_axiom" (formula "59") (term "1,1,0,0,1,1,0,1,0,0,1"))
                                                                     (rule "polySimp_mulComm1" (formula "59") (term "1,1,1,0,0,1,1,0,1,0,0,1"))
                                                                     (rule "polySimp_homoEq" (formula "59") (term "1,0,0,1,1,0,1,0,0,1"))
                                                                     (rule "polySimp_addComm1" (formula "59") (term "0,1,0,0,1,1,0,1,0,0,1"))
                                                                     (rule "applyEq" (formula "59") (term "0,0,1,0,1,0,0,1,1,0,1,0,0,1") (ifseqformula "36"))
                                                                     (rule "polySimp_mulComm0" (formula "59") (term "0,1,0,1,0,0,1,1,0,1,0,0,1"))
                                                                     (rule "jmod_axiom" (formula "59") (term "1,1,0,1,1,1,0,0,1"))
                                                                     (rule "polySimp_mulComm1" (formula "59") (term "1,1,1,0,1,1,1,0,0,1"))
                                                                     (rule "polySimp_homoEq" (formula "59") (term "1,0,1,1,1,0,0,1"))
                                                                     (rule "polySimp_addComm1" (formula "59") (term "0,1,0,1,1,1,0,0,1"))
                                                                     (rule "applyEq" (formula "59") (term "0,0,1,0,1,0,1,1,1,0,0,1") (ifseqformula "36"))
                                                                     (rule "polySimp_mulComm0" (formula "59") (term "0,1,0,1,0,1,1,1,0,0,1"))
                                                                     (rule "jmod_axiom" (formula "59") (term "1,1,0,0,0,1"))
                                                                     (rule "polySimp_mulComm1" (formula "59") (term "1,1,1,0,0,0,1"))
                                                                     (rule "polySimp_homoEq" (formula "59") (term "1,0,0,0,1"))
                                                                     (rule "polySimp_addComm1" (formula "59") (term "0,1,0,0,0,1"))
                                                                     (rule "applyEq" (formula "59") (term "0,0,1,0,1,0,0,0,1") (ifseqformula "36"))
                                                                     (rule "polySimp_mulComm0" (formula "59") (term "0,1,0,1,0,0,0,1"))
                                                                     (rule "polySimp_sepNegMonomial" (formula "59") (term "1,0,0,0,0,1,0,1,0,0,1"))
                                                                     (rule "polySimp_mulLiterals" (formula "59") (term "0,1,0,0,0,0,1,0,1,0,0,1"))
                                                                     (rule "polySimp_elimOne" (formula "59") (term "0,1,0,0,0,0,1,0,1,0,0,1"))
                                                                     (rule "polySimp_sepNegMonomial" (formula "59") (term "1,0,0,1,1,0,1,0,0,1"))
                                                                     (rule "polySimp_mulLiterals" (formula "59") (term "0,1,0,0,1,1,0,1,0,0,1"))
                                                                     (rule "polySimp_elimOne" (formula "59") (term "0,1,0,0,1,1,0,1,0,0,1"))
                                                                     (rule "polySimp_sepNegMonomial" (formula "59") (term "1,0,1,1,1,0,0,1"))
                                                                     (rule "polySimp_mulLiterals" (formula "59") (term "0,1,0,1,1,1,0,0,1"))
                                                                     (rule "polySimp_elimOne" (formula "59") (term "0,1,0,1,1,1,0,0,1"))
                                                                     (rule "polySimp_sepNegMonomial" (formula "59") (term "1,0,0,0,1"))
                                                                     (rule "polySimp_mulLiterals" (formula "59") (term "0,1,0,0,0,1"))
                                                                     (rule "polySimp_elimOne" (formula "59") (term "0,1,0,0,0,1"))
                                                                     (rule "nnf_imp2or" (formula "59") (term "0,0,1"))
                                                                     (rule "nnf_notAnd" (formula "59") (term "0,0,0,1"))
                                                                     (rule "nnf_imp2or" (formula "59") (term "0,1,0,0,1"))
                                                                     (rule "all_unused" (formula "59") (term "0"))
                                                                     (rule "concrete_and_1" (formula "59"))
                                                                     (rule "allRight" (formula "59") (inst "sk=j0irs_1"))
                                                                     (rule "allRight" (formula "59") (inst "sk=i1irs_1"))
                                                                     (rule "orRight" (formula "59"))
                                                                     (rule "orRight" (formula "59"))
                                                                     (rule "notRight" (formula "60"))
                                                                     (rule "notRight" (formula "60"))
                                                                     (rule "eqSymm" (formula "61") (term "0,0,0,1,1,0"))
                                                                     (rule "eqSymm" (formula "61") (term "0,0,0,0,0,1,0"))
                                                                     (rule "eqSymm" (formula "61") (term "0,0,1,1"))
                                                                     (rule "eqSymm" (formula "1"))
                                                                     (rule "replace_known_left" (formula "61") (term "1,0,0,0,0,1,0") (ifseqformula "2"))
                                                                     (rule "concrete_and_3" (formula "61") (term "0,0,0,0,1,0"))
                                                                     (rule "replace_known_left" (formula "61") (term "0,0,0,1,1,0") (ifseqformula "1"))
                                                                     (rule "concrete_and_1" (formula "61") (term "0,0,1,1,0"))
                                                                     (rule "replace_known_left" (formula "61") (term "1,0,1,1") (ifseqformula "2"))
                                                                     (rule "concrete_and_3" (formula "61") (term "0,1,1"))
                                                                     (rule "replace_known_left" (formula "61") (term "0,0,0,0,1,0") (ifseqformula "1"))
                                                                     (rule "ifthenelse_true" (formula "61") (term "0,0,0,1,0"))
                                                                     (rule "replace_known_left" (formula "61") (term "0,1,1") (ifseqformula "1"))
                                                                     (rule "ifthenelse_true" (formula "61") (term "1,1"))
                                                                     (rule "replace_known_left" (formula "61") (term "0,0,1,1,0") (ifseqformula "2"))
                                                                     (rule "ifthenelse_true" (formula "61") (term "0,1,1,0"))
                                                                     (rule "replace_known_right" (formula "61") (term "1,1,0") (ifseqformula "77"))
                                                                     (rule "concrete_or_4" (formula "61") (term "1,0"))
                                                                     (rule "replace_known_left" (formula "61") (term "1,0") (ifseqformula "59"))
                                                                     (rule "concrete_or_3" (formula "61") (term "0"))
                                                                     (rule "concrete_and_1" (formula "61"))
                                                                     (rule "applyEq" (formula "28") (term "0,1,1,0") (ifseqformula "2"))
                                                                     (rule "polySimp_mulComm0" (formula "28") (term "1,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "28") (term "1,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "28") (term "0,1,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "28") (term "1,0"))
                                                                     (rule "polySimp_pullOutFactor1" (formula "28") (term "0,1,0"))
                                                                     (rule "add_literals" (formula "28") (term "1,0,1,0"))
                                                                     (rule "times_zero_1" (formula "28") (term "0,1,0"))
                                                                     (rule "add_zero_left" (formula "28") (term "1,0"))
                                                                     (rule "applyEq" (formula "36") (term "0") (ifseqformula "2"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "36"))
                                                                     (rule "polySimp_mulComm0" (formula "36") (term "1,0"))
                                                                     (rule "polySimp_rightDist" (formula "36") (term "1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "36") (term "1,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "36") (term "0,1,0"))
                                                                     (rule "polySimp_addComm1" (formula "36") (term "0"))
                                                                     (rule "polySimp_addAssoc" (formula "36") (term "0,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0,0"))
                                                                     (rule "add_literals" (formula "36") (term "1,1,0,0,0"))
                                                                     (rule "times_zero_1" (formula "36") (term "1,0,0,0"))
                                                                     (rule "add_zero_right" (formula "36") (term "0,0,0"))
                                                                     (rule "applyEq" (formula "65") (term "0") (ifseqformula "2"))
                                                                     (rule "polySimp_homoEq" (formula "65"))
                                                                     (rule "polySimp_mulComm0" (formula "65") (term "1,0"))
                                                                     (rule "polySimp_rightDist" (formula "65") (term "1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "65") (term "1,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "65") (term "1,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "65") (term "0,1,0"))
                                                                     (rule "polySimp_addComm1" (formula "65") (term "0"))
                                                                     (rule "polySimp_addAssoc" (formula "65") (term "0,0"))
                                                                     (rule "polySimp_pullOutFactor1" (formula "65") (term "0,0,0"))
                                                                     (rule "add_literals" (formula "65") (term "1,0,0,0"))
                                                                     (rule "times_zero_1" (formula "65") (term "0,0,0"))
                                                                     (rule "add_zero_left" (formula "65") (term "0,0"))
                                                                     (rule "applyEq" (formula "28") (term "0,0") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "62") (term "1") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "76") (term "0,0") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "74") (term "0") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "56") (term "0,0") (ifseqformula "1"))
                                                                     (rule "eqSymm" (formula "56"))
                                                                     (rule "applyEq" (formula "72") (term "0,0") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "42") (term "0,0,0") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "12") (term "0,0,0,0,1,0") (ifseqformula "2"))
                                                                     (rule "polySimp_homoEq" (formula "12") (term "0,0,0,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,0,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0,0,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,0,0,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "12") (term "0,1,0,0,0,0,1,0"))
                                                                     (rule "polySimp_addComm1" (formula "12") (term "0,0,0,0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,0,0,1,0"))
                                                                     (rule "polySimp_pullOutFactor1" (formula "12") (term "0,0,0,0,0,0,1,0"))
                                                                     (rule "add_literals" (formula "12") (term "1,0,0,0,0,0,0,1,0"))
                                                                     (rule "times_zero_1" (formula "12") (term "0,0,0,0,0,0,1,0"))
                                                                     (rule "add_zero_left" (formula "12") (term "0,0,0,0,0,1,0"))
                                                                     (rule "applyEq" (formula "43") (term "0,0") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "66") (term "0,0") (ifseqformula "2"))
                                                                     (rule "polySimp_mulComm0" (formula "66") (term "0"))
                                                                     (rule "polySimp_rightDist" (formula "66") (term "0"))
                                                                     (rule "polySimp_mulLiterals" (formula "66") (term "1,0"))
                                                                     (rule "polySimp_homoEq" (formula "66"))
                                                                     (rule "polySimp_mulComm0" (formula "66") (term "0,0,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "66") (term "1,0"))
                                                                     (rule "polySimp_rightDist" (formula "66") (term "1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "66") (term "1,1,0"))
                                                                     (rule "polySimp_mulAssoc" (formula "66") (term "0,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "66") (term "0,0,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "66") (term "0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "66") (term "0"))
                                                                     (rule "polySimp_pullOutFactor1" (formula "66") (term "0,0"))
                                                                     (rule "add_literals" (formula "66") (term "1,0,0"))
                                                                     (rule "applyEq" (formula "35") (term "0") (ifseqformula "2"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "35"))
                                                                     (rule "polySimp_mulComm0" (formula "35") (term "1,0"))
                                                                     (rule "polySimp_rightDist" (formula "35") (term "1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "35") (term "1,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "35") (term "0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "35") (term "0"))
                                                                     (rule "polySimp_pullOutFactor1" (formula "35") (term "0,0"))
                                                                     (rule "add_literals" (formula "35") (term "1,0,0"))
                                                                     (rule "times_zero_1" (formula "35") (term "0,0"))
                                                                     (rule "add_zero_left" (formula "35") (term "0"))
                                                                     (rule "applyEq" (formula "68") (term "0") (ifseqformula "2"))
                                                                     (rule "polySimp_homoEq" (formula "68"))
                                                                     (rule "polySimp_mulComm0" (formula "68") (term "1,0"))
                                                                     (rule "polySimp_rightDist" (formula "68") (term "1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "68") (term "1,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "68") (term "1,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "68") (term "0,1,0"))
                                                                     (rule "polySimp_addComm1" (formula "68") (term "0"))
                                                                     (rule "polySimp_addAssoc" (formula "68") (term "0,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "68") (term "0,0,0"))
                                                                     (rule "add_literals" (formula "68") (term "1,1,0,0,0"))
                                                                     (rule "times_zero_1" (formula "68") (term "1,0,0,0"))
                                                                     (rule "add_zero_right" (formula "68") (term "0,0,0"))
                                                                     (rule "applyEq" (formula "10") (term "0,0") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "60") (term "0") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "24") (term "0,0") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "12") (term "0,0,0,0") (ifseqformula "2"))
                                                                     (rule "polySimp_homoEq" (formula "12") (term "0,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "12") (term "0,1,0,0,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "12") (term "0,0,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,0,0"))
                                                                     (rule "polySimp_pullOutFactor1" (formula "12") (term "0,0,0,0,0,0"))
                                                                     (rule "add_literals" (formula "12") (term "1,0,0,0,0,0,0"))
                                                                     (rule "times_zero_1" (formula "12") (term "0,0,0,0,0,0"))
                                                                     (rule "add_zero_left" (formula "12") (term "0,0,0,0,0"))
                                                                     (rule "applyEq" (formula "64") (term "0") (ifseqformula "2"))
                                                                     (rule "applyEq" (formula "16") (term "0,0") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "73") (term "1,1") (ifseqformula "2"))
                                                                     (rule "polySimp_addAssoc" (formula "73") (term "1"))
                                                                     (rule "polySimp_pullOutFactor2b" (formula "73") (term "0,1"))
                                                                     (rule "add_literals" (formula "73") (term "1,1,0,1"))
                                                                     (rule "times_zero_1" (formula "73") (term "1,0,1"))
                                                                     (rule "add_zero_right" (formula "73") (term "0,1"))
                                                                     (rule "applyEq" (formula "67") (term "1,1") (ifseqformula "2"))
                                                                     (rule "polySimp_addAssoc" (formula "67") (term "1"))
                                                                     (rule "polySimp_pullOutFactor2b" (formula "67") (term "0,1"))
                                                                     (rule "add_literals" (formula "67") (term "1,1,0,1"))
                                                                     (rule "times_zero_1" (formula "67") (term "1,0,1"))
                                                                     (rule "add_zero_right" (formula "67") (term "0,1"))
                                                                     (rule "apply_eq_monomials" (formula "7") (term "0") (ifseqformula "56"))
                                                                     (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                                                                     (rule "polySimp_mulComm1" (formula "7") (term "1,0,0"))
                                                                     (rule "polySimp_pullOutFactor2b" (formula "7") (term "0"))
                                                                     (rule "add_literals" (formula "7") (term "1,1,0"))
                                                                     (rule "times_zero_1" (formula "7") (term "1,0"))
                                                                     (rule "add_zero_right" (formula "7") (term "0"))
                                                                     (rule "polySimp_mulComm0" (formula "7") (term "0"))
                                                                     (rule "apply_eq_monomials" (formula "42") (term "1,1,0,0") (ifseqformula "56"))
                                                                     (rule "polySimp_rightDist" (formula "42") (term "0,1,1,0,0"))
                                                                     (rule "polySimp_mulComm1" (formula "42") (term "0,0,1,1,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "42") (term "0,0,0,1,1,0,0"))
                                                                     (rule "polySimp_mulAssoc" (formula "42") (term "1,0,1,1,0,0"))
                                                                     (rule "polySimp_mulComm1" (formula "42") (term "0,1,0,1,1,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "42") (term "1,0,1,1,0,0"))
                                                                     (rule "polySimp_pullOutFactor0b" (formula "42") (term "1,1,0,0"))
                                                                     (rule "add_literals" (formula "42") (term "1,1,1,1,0,0"))
                                                                     (rule "times_zero_1" (formula "42") (term "1,1,1,0,0"))
                                                                     (rule "add_zero_right" (formula "42") (term "1,1,0,0"))
                                                                     (rule "apply_eq_monomials" (formula "4") (term "0") (ifseqformula "56"))
                                                                     (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "4") (term "0,0,0"))
                                                                     (rule "polySimp_mulComm1" (formula "4") (term "1,0,0"))
                                                                     (rule "polySimp_pullOutFactor2b" (formula "4") (term "0"))
                                                                     (rule "add_literals" (formula "4") (term "1,1,0"))
                                                                     (rule "times_zero_1" (formula "4") (term "1,0"))
                                                                     (rule "add_zero_right" (formula "4") (term "0"))
                                                                     (rule "apply_eq_monomials" (formula "47") (term "1,1") (ifseqformula "56"))
                                                                     (rule "polySimp_rightDist" (formula "47") (term "0,1,1"))
                                                                     (rule "polySimp_mulLiterals" (formula "47") (term "1,0,1,1"))
                                                                     (rule "polySimp_pullOutFactor0b" (formula "47") (term "1,1"))
                                                                     (rule "add_literals" (formula "47") (term "1,1,1,1"))
                                                                     (rule "times_zero_1" (formula "47") (term "1,1,1"))
                                                                     (rule "add_zero_right" (formula "47") (term "1,1"))
                                                                     (rule "polySimp_mulComm0" (formula "47") (term "1,1"))
                                                                     (rule "apply_eq_monomials" (formula "5") (term "0") (ifseqformula "56"))
                                                                     (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                                                                     (rule "polySimp_mulComm1" (formula "5") (term "1,0,0"))
                                                                     (rule "polySimp_pullOutFactor2b" (formula "5") (term "0"))
                                                                     (rule "add_literals" (formula "5") (term "1,1,0"))
                                                                     (rule "times_zero_1" (formula "5") (term "1,0"))
                                                                     (rule "add_zero_right" (formula "5") (term "0"))
                                                                     (rule "polySimp_mulComm0" (formula "5") (term "0"))
                                                                     (rule "apply_eq_monomials" (formula "21") (term "0") (ifseqformula "56"))
                                                                     (rule "polySimp_rightDist" (formula "21") (term "0,0"))
                                                                     (rule "polySimp_mulComm1" (formula "21") (term "1,0,0"))
                                                                     (rule "polySimp_pullOutFactor2b" (formula "21") (term "0"))
                                                                     (rule "add_literals" (formula "21") (term "1,1,0"))
                                                                     (rule "times_zero_1" (formula "21") (term "1,0"))
                                                                     (rule "add_zero_right" (formula "21") (term "0"))
                                                                     (rule "polySimp_mulComm0" (formula "21") (term "0"))
                                                                     (rule "apply_eq_monomials" (formula "45") (term "0") (ifseqformula "56"))
                                                                     (rule "polySimp_rightDist" (formula "45") (term "0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "45") (term "0,0,0"))
                                                                     (rule "polySimp_mulComm1" (formula "45") (term "1,0,0"))
                                                                     (rule "polySimp_pullOutFactor2b" (formula "45") (term "0"))
                                                                     (rule "add_literals" (formula "45") (term "1,1,0"))
                                                                     (rule "times_zero_1" (formula "45") (term "1,0"))
                                                                     (rule "add_zero_right" (formula "45") (term "0"))
                                                                     (rule "apply_eq_monomials" (formula "22") (term "0") (ifseqformula "56"))
                                                                     (rule "polySimp_rightDist" (formula "22") (term "0,0"))
                                                                     (rule "polySimp_mulComm1" (formula "22") (term "1,0,0"))
                                                                     (rule "polySimp_pullOutFactor2b" (formula "22") (term "0"))
                                                                     (rule "add_literals" (formula "22") (term "1,1,0"))
                                                                     (rule "times_zero_1" (formula "22") (term "1,0"))
                                                                     (rule "add_zero_right" (formula "22") (term "0"))
                                                                     (rule "polySimp_mulComm0" (formula "22") (term "0"))
                                                                     (rule "apply_eq_monomials" (formula "32") (term "0") (ifseqformula "56"))
                                                                     (rule "polySimp_rightDist" (formula "32") (term "0,0"))
                                                                     (rule "polySimp_mulComm1" (formula "32") (term "1,0,0"))
                                                                     (rule "polySimp_pullOutFactor2b" (formula "32") (term "0"))
                                                                     (rule "add_literals" (formula "32") (term "1,1,0"))
                                                                     (rule "times_zero_1" (formula "32") (term "1,0"))
                                                                     (rule "add_zero_right" (formula "32") (term "0"))
                                                                     (rule "polySimp_mulComm0" (formula "32") (term "0"))
                                                                     (rule "apply_eq_monomials" (formula "76") (term "1,1,0") (ifseqformula "56"))
                                                                     (rule "polySimp_rightDist" (formula "76") (term "0,1,1,0"))
                                                                     (rule "polySimp_mulComm1" (formula "76") (term "0,0,1,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "76") (term "0,0,0,1,1,0"))
                                                                     (rule "polySimp_mulAssoc" (formula "76") (term "1,0,1,1,0"))
                                                                     (rule "polySimp_mulComm1" (formula "76") (term "0,1,0,1,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "76") (term "1,0,1,1,0"))
                                                                     (rule "polySimp_pullOutFactor0b" (formula "76") (term "1,1,0"))
                                                                     (rule "add_literals" (formula "76") (term "1,1,1,1,0"))
                                                                     (rule "times_zero_1" (formula "76") (term "1,1,1,0"))
                                                                     (rule "add_zero_right" (formula "76") (term "1,1,0"))
                                                                     (rule "apply_eq_monomials" (formula "5") (term "1,1") (ifseqformula "56"))
                                                                     (rule "polySimp_rightDist" (formula "5") (term "0,1,1"))
                                                                     (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1,1"))
                                                                     (rule "polySimp_pullOutFactor0b" (formula "5") (term "1,1"))
                                                                     (rule "add_literals" (formula "5") (term "1,1,1,1"))
                                                                     (rule "times_zero_1" (formula "5") (term "1,1,1"))
                                                                     (rule "add_zero_right" (formula "5") (term "1,1"))
                                                                     (rule "polySimp_mulComm0" (formula "5") (term "1,1"))
                                                                     (rule "apply_eq_monomials" (formula "67") (term "0") (ifseqformula "56"))
                                                                     (rule "polySimp_homoEq" (formula "67"))
                                                                     (rule "polySimp_mulComm0" (formula "67") (term "1,0"))
                                                                     (rule "polySimp_rightDist" (formula "67") (term "0,1,1,0"))
                                                                     (rule "polySimp_mulComm1" (formula "67") (term "1,0,1,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "67") (term "0,1,0,1,1,0"))
                                                                     (rule "polySimp_pullOutFactor2b" (formula "67") (term "1,1,0"))
                                                                     (rule "add_literals" (formula "67") (term "1,1,1,1,0"))
                                                                     (rule "times_zero_1" (formula "67") (term "1,1,1,0"))
                                                                     (rule "add_zero_right" (formula "67") (term "1,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "67") (term "1,0"))
                                                                     (rule "apply_eq_monomials" (formula "19") (term "1,1") (ifseqformula "56"))
                                                                     (rule "polySimp_rightDist" (formula "19") (term "0,1,1"))
                                                                     (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1,1"))
                                                                     (rule "polySimp_pullOutFactor0b" (formula "19") (term "1,1"))
                                                                     (rule "add_literals" (formula "19") (term "1,1,1,1"))
                                                                     (rule "times_zero_1" (formula "19") (term "1,1,1"))
                                                                     (rule "add_zero_right" (formula "19") (term "1,1"))
                                                                     (rule "polySimp_mulComm0" (formula "19") (term "1,1"))
                                                                     (rule "apply_eq_monomials" (formula "33") (term "1,1") (ifseqformula "56"))
                                                                     (rule "polySimp_rightDist" (formula "33") (term "0,1,1"))
                                                                     (rule "polySimp_mulLiterals" (formula "33") (term "1,0,1,1"))
                                                                     (rule "polySimp_pullOutFactor0b" (formula "33") (term "1,1"))
                                                                     (rule "add_literals" (formula "33") (term "1,1,1,1"))
                                                                     (rule "times_zero_1" (formula "33") (term "1,1,1"))
                                                                     (rule "add_zero_right" (formula "33") (term "1,1"))
                                                                     (rule "polySimp_mulComm0" (formula "33") (term "1,1"))
                                                                     (rule "apply_eq_monomials" (formula "8") (term "1,1") (ifseqformula "56"))
                                                                     (rule "polySimp_rightDist" (formula "8") (term "0,1,1"))
                                                                     (rule "polySimp_mulLiterals" (formula "8") (term "1,0,1,1"))
                                                                     (rule "polySimp_pullOutFactor0b" (formula "8") (term "1,1"))
                                                                     (rule "add_literals" (formula "8") (term "1,1,1,1"))
                                                                     (rule "times_zero_1" (formula "8") (term "1,1,1"))
                                                                     (rule "add_zero_right" (formula "8") (term "1,1"))
                                                                     (rule "polySimp_mulComm0" (formula "8") (term "1,1"))
                                                                     (rule "apply_eq_monomials" (formula "24") (term "1,1,0") (ifseqformula "56"))
                                                                     (rule "polySimp_rightDist" (formula "24") (term "0,1,1,0"))
                                                                     (rule "polySimp_mulComm1" (formula "24") (term "0,0,1,1,0"))
                                                                     (rule "polySimp_mulAssoc" (formula "24") (term "1,0,1,1,0"))
                                                                     (rule "polySimp_mulComm1" (formula "24") (term "0,1,0,1,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "24") (term "1,0,1,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "24") (term "1,0,1,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "24") (term "1,0,1,1,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "24") (term "1,1,0"))
                                                                     (rule "add_literals" (formula "24") (term "1,1,1,1,0"))
                                                                     (rule "times_zero_1" (formula "24") (term "1,1,1,0"))
                                                                     (rule "add_zero_right" (formula "24") (term "1,1,0"))
                                                                     (rule "apply_eq_monomials" (formula "19") (term "0") (ifseqformula "56"))
                                                                     (rule "polySimp_rightDist" (formula "19") (term "0,0"))
                                                                     (rule "polySimp_mulComm1" (formula "19") (term "1,0,0"))
                                                                     (rule "polySimp_pullOutFactor2b" (formula "19") (term "0"))
                                                                     (rule "add_literals" (formula "19") (term "1,1,0"))
                                                                     (rule "times_zero_1" (formula "19") (term "1,0"))
                                                                     (rule "add_zero_right" (formula "19") (term "0"))
                                                                     (rule "polySimp_mulComm0" (formula "19") (term "0"))
                                                                     (rule "apply_eq_monomials" (formula "8") (term "0") (ifseqformula "56"))
                                                                     (rule "polySimp_rightDist" (formula "8") (term "0,0"))
                                                                     (rule "polySimp_mulComm1" (formula "8") (term "1,0,0"))
                                                                     (rule "polySimp_pullOutFactor2b" (formula "8") (term "0"))
                                                                     (rule "add_literals" (formula "8") (term "1,1,0"))
                                                                     (rule "times_zero_1" (formula "8") (term "1,0"))
                                                                     (rule "add_zero_right" (formula "8") (term "0"))
                                                                     (rule "polySimp_mulComm0" (formula "8") (term "0"))
                                                                     (rule "apply_eq_monomials" (formula "22") (term "1,1") (ifseqformula "56"))
                                                                     (rule "polySimp_rightDist" (formula "22") (term "0,1,1"))
                                                                     (rule "polySimp_mulLiterals" (formula "22") (term "1,0,1,1"))
                                                                     (rule "polySimp_pullOutFactor0b" (formula "22") (term "1,1"))
                                                                     (rule "add_literals" (formula "22") (term "1,1,1,1"))
                                                                     (rule "times_zero_1" (formula "22") (term "1,1,1"))
                                                                     (rule "add_zero_right" (formula "22") (term "1,1"))
                                                                     (rule "polySimp_mulComm0" (formula "22") (term "1,1"))
                                                                     (rule "apply_eq_monomials" (formula "47") (term "0") (ifseqformula "56"))
                                                                     (rule "polySimp_rightDist" (formula "47") (term "0,0"))
                                                                     (rule "polySimp_mulComm1" (formula "47") (term "1,0,0"))
                                                                     (rule "polySimp_pullOutFactor2b" (formula "47") (term "0"))
                                                                     (rule "add_literals" (formula "47") (term "1,1,0"))
                                                                     (rule "times_zero_1" (formula "47") (term "1,0"))
                                                                     (rule "add_zero_right" (formula "47") (term "0"))
                                                                     (rule "polySimp_mulComm0" (formula "47") (term "0"))
                                                                     (rule "apply_eq_monomials" (formula "18") (term "0") (ifseqformula "56"))
                                                                     (rule "polySimp_rightDist" (formula "18") (term "0,0"))
                                                                     (rule "polySimp_mulComm1" (formula "18") (term "1,0,0"))
                                                                     (rule "polySimp_pullOutFactor2b" (formula "18") (term "0"))
                                                                     (rule "add_literals" (formula "18") (term "1,1,0"))
                                                                     (rule "times_zero_1" (formula "18") (term "1,0"))
                                                                     (rule "add_zero_right" (formula "18") (term "0"))
                                                                     (rule "polySimp_mulComm0" (formula "18") (term "0"))
                                                                     (rule "apply_eq_monomials" (formula "73") (term "0") (ifseqformula "56"))
                                                                     (rule "polySimp_homoEq" (formula "73"))
                                                                     (rule "polySimp_mulComm0" (formula "73") (term "1,0"))
                                                                     (rule "polySimp_rightDist" (formula "73") (term "0,1,1,0"))
                                                                     (rule "polySimp_mulComm1" (formula "73") (term "1,0,1,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "73") (term "0,1,0,1,1,0"))
                                                                     (rule "polySimp_pullOutFactor2b" (formula "73") (term "1,1,0"))
                                                                     (rule "add_literals" (formula "73") (term "1,1,1,1,0"))
                                                                     (rule "times_zero_1" (formula "73") (term "1,1,1,0"))
                                                                     (rule "add_zero_right" (formula "73") (term "1,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "73") (term "1,0"))
                                                                     (rule "applyEq" (formula "9") (term "1,1") (ifseqformula "56"))
                                                                     (rule "applyEq" (formula "23") (term "1,1") (ifseqformula "56"))
                                                                     (rule "applyEq" (formula "2") (term "0,0") (ifseqformula "56"))
                                                                     (rule "applyEq" (formula "49") (term "1,0") (ifseqformula "56"))
                                                                     (rule "applyEq" (formula "6") (term "1,0") (ifseqformula "56"))
                                                                     (rule "applyEq" (formula "31") (term "1,0") (ifseqformula "56"))
                                                                     (rule "applyEq" (formula "33") (term "0,0") (ifseqformula "56"))
                                                                     (rule "applyEq" (formula "72") (term "1,1,0") (ifseqformula "56"))
                                                                     (rule "applyEq" (formula "36") (term "0,1,0") (ifseqformula "56"))
                                                                     (rule "applyEq" (formula "20") (term "1,0") (ifseqformula "56"))
                                                                     (rule "applyEq" (formula "46") (term "1,0") (ifseqformula "56"))
                                                                     (rule "applyEq" (formula "60") (term "1,1") (ifseqformula "56"))
                                                                     (rule "applyEq" (formula "16") (term "1,1,0") (ifseqformula "56"))
                                                                     (rule "applyEq" (formula "53") (term "0") (ifseqformula "56"))
                                                                     (rule "applyEq" (formula "38") (term "1,0") (ifseqformula "56"))
                                                                     (rule "applyEq" (formula "65") (term "0,0,1,0") (ifseqformula "56"))
                                                                     (rule "applyEq" (formula "34") (term "1,0") (ifseqformula "56"))
                                                                     (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "56"))
                                                                     (rule "applyEq" (formula "10") (term "1,1,0") (ifseqformula "56"))
                                                                     (rule "applyEq" (formula "62") (term "1,2") (ifseqformula "56"))
                                                                     (rule "applyEq" (formula "17") (term "1,0") (ifseqformula "56"))
                                                                     (rule "applyEq" (formula "68") (term "0,1,0") (ifseqformula "56"))
                                                                     (rule "applyEq" (formula "24") (term "1,0,0,1,1,0") (ifseqformula "56"))
                                                                     (rule "applyEq" (formula "73") (term "1,0,0,1,0") (ifseqformula "56"))
                                                                     (rule "applyEq" (formula "67") (term "1,0,0,1,0") (ifseqformula "56"))
                                                                     (rule "applyEq" (formula "12") (term "0,2,0,0,1,0") (ifseqformula "1"))
                                                                     (rule "polySimp_sepNegMonomial" (formula "12") (term "0,0,0,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "12") (term "0,0,0,0,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "12") (term "0,0,0,0,1,0"))
                                                                     (rule "polySimp_sepPosMonomial" (formula "66"))
                                                                     (rule "polySimp_mulLiterals" (formula "66") (term "1"))
                                                                     (rule "polySimp_elimOne" (formula "66") (term "1"))
                                                                     (rule "polySimp_sepNegMonomial" (formula "12") (term "0,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "12") (term "0,0,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "12") (term "0,0,0,0"))
                                                                     (rule "polySimp_sepNegMonomial" (formula "64"))
                                                                     (rule "polySimp_mulLiterals" (formula "64") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "64") (term "0"))
                                                                     (rule "polySimp_sepNegMonomial" (formula "65"))
                                                                     (rule "polySimp_mulLiterals" (formula "65") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "65") (term "0"))
                                                                     (rule "polySimp_sepPosMonomial" (formula "68"))
                                                                     (rule "polySimp_mulComm0" (formula "68") (term "1"))
                                                                     (rule "polySimp_rightDist" (formula "68") (term "1"))
                                                                     (rule "polySimp_mulAssoc" (formula "68") (term "0,1"))
                                                                     (rule "polySimp_mulComm0" (formula "68") (term "0,0,1"))
                                                                     (rule "polySimp_mulLiterals" (formula "68") (term "0,1"))
                                                                     (rule "polySimp_elimOne" (formula "68") (term "0,1"))
                                                                     (rule "polySimp_sepNegMonomial" (formula "73"))
                                                                     (rule "polySimp_mulLiterals" (formula "73") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "73") (term "0"))
                                                                     (rule "polySimp_sepNegMonomial" (formula "67"))
                                                                     (rule "polySimp_mulLiterals" (formula "67") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "67") (term "0"))
                                                                     (rule "inEqSimp_sepNegMonomial0" (formula "36"))
                                                                     (rule "polySimp_mulLiterals" (formula "36") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "36") (term "0"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "18"))
                                                                     (rule "polySimp_rightDist" (formula "19") (term "0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "19") (term "1,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "19") (term "0"))
                                                                     (rule "polySimp_rightDist" (formula "19") (term "0,0,0"))
                                                                     (rule "mul_literals" (formula "19") (term "0,0,0,0"))
                                                                     (rule "polySimp_pullOutFactor2b" (formula "19") (term "0,0"))
                                                                     (rule "add_literals" (formula "19") (term "1,1,0,0"))
                                                                     (rule "times_zero_1" (formula "19") (term "1,0,0"))
                                                                     (rule "add_literals" (formula "19") (term "0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "19"))
                                                                     (rule "mul_literals" (formula "19") (term "1"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "4"))
                                                                     (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "5") (term "1,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                                     (rule "polySimp_rightDist" (formula "5") (term "0,0,0"))
                                                                     (rule "mul_literals" (formula "5") (term "0,0,0,0"))
                                                                     (rule "polySimp_pullOutFactor2b" (formula "5") (term "0,0"))
                                                                     (rule "add_literals" (formula "5") (term "1,1,0,0"))
                                                                     (rule "times_zero_1" (formula "5") (term "1,0,0"))
                                                                     (rule "add_literals" (formula "5") (term "0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                                                     (rule "mul_literals" (formula "5") (term "1"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "21"))
                                                                     (rule "polySimp_rightDist" (formula "22") (term "0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "22") (term "1,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "22") (term "1,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "22") (term "0"))
                                                                     (rule "polySimp_rightDist" (formula "22") (term "0,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "22") (term "1,0,0,0"))
                                                                     (rule "mul_literals" (formula "22") (term "0,0,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "22") (term "1,0,0,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0"))
                                                                     (rule "add_literals" (formula "22") (term "1,1,0,0"))
                                                                     (rule "times_zero_1" (formula "22") (term "1,0,0"))
                                                                     (rule "add_literals" (formula "22") (term "0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "22"))
                                                                     (rule "mul_literals" (formula "22") (term "1"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "47") (ifseqformula "45"))
                                                                     (rule "polySimp_rightDist" (formula "47") (term "0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "47") (term "1,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "47") (term "1,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "47") (term "0"))
                                                                     (rule "polySimp_rightDist" (formula "47") (term "0,0,0"))
                                                                     (rule "mul_literals" (formula "47") (term "0,0,0,0"))
                                                                     (rule "polySimp_pullOutFactor2b" (formula "47") (term "0,0"))
                                                                     (rule "add_literals" (formula "47") (term "1,1,0,0"))
                                                                     (rule "times_zero_1" (formula "47") (term "1,0,0"))
                                                                     (rule "add_literals" (formula "47") (term "0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "47"))
                                                                     (rule "mul_literals" (formula "47") (term "1"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "7"))
                                                                     (rule "polySimp_rightDist" (formula "8") (term "0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "8") (term "1,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "8") (term "0"))
                                                                     (rule "polySimp_rightDist" (formula "8") (term "0,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,0"))
                                                                     (rule "mul_literals" (formula "8") (term "0,0,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "8") (term "1,0,0,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0"))
                                                                     (rule "add_literals" (formula "8") (term "1,1,0,0"))
                                                                     (rule "times_zero_1" (formula "8") (term "1,0,0"))
                                                                     (rule "add_literals" (formula "8") (term "0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                                                     (rule "mul_literals" (formula "8") (term "1"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "33") (ifseqformula "32"))
                                                                     (rule "polySimp_rightDist" (formula "33") (term "0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "33") (term "1,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "33") (term "1,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "33") (term "0"))
                                                                     (rule "polySimp_rightDist" (formula "33") (term "0,0,0"))
                                                                     (rule "mul_literals" (formula "33") (term "0,0,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "33") (term "1,0,0,0"))
                                                                     (rule "polySimp_pullOutFactor0b" (formula "33") (term "0,0"))
                                                                     (rule "add_literals" (formula "33") (term "1,1,0,0"))
                                                                     (rule "times_zero_1" (formula "33") (term "1,0,0"))
                                                                     (rule "add_literals" (formula "33") (term "0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "33"))
                                                                     (rule "mul_literals" (formula "33") (term "1"))
                                                                     (rule "array_store_static_analyse" (formula "61") (ifseqformula "74"))
                                                                     (rule "closeTrue" (formula "61"))
                                                                  )
                                                                  (branch " Post"
                                                                     (builtin "Update Simplification" (formula "58"))
                                                                     (rule "inInt" (formula "58") (term "1,1,0,0"))
                                                                     (rule "concrete_and_3" (formula "58") (term "1,0,0"))
                                                                     (rule "impRight" (formula "58"))
                                                                     (rule "andLeft" (formula "1"))
                                                                     (rule "andLeft" (formula "2"))
                                                                     (rule "andLeft" (formula "1"))
                                                                     (rule "eqSymm" (formula "2"))
                                                                     (rule "applyEq" (formula "2") (term "0") (ifseqformula "41"))
                                                                     (rule "eqSymm" (formula "2"))
                                                                     (rule "applyEq" (formula "61") (term "0") (ifseqformula "2"))
                                                                     (rule "inReachableStateExpand" (formula "1"))
                                                                     (builtin "Update Simplification" (formula "1"))
                                                                     (rule "eq_imp" (formula "1") (term "0,0,1"))
                                                                     (rule "replace_known_left" (formula "1") (term "0") (ifseqformula "51"))
                                                                     (rule "concrete_impl_1" (formula "1"))
                                                                     (rule "andLeft" (formula "1"))
                                                                     (rule "jmod_axiom" (formula "2") (term "1,1,0,1,1,1,0,0"))
                                                                     (rule "polySimp_mulComm1" (formula "2") (term "1,1,1,0,1,1,1,0,0"))
                                                                     (rule "polySimp_homoEq" (formula "2") (term "1,0,1,1,1,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "2") (term "0,1,0,1,1,1,0,0"))
                                                                     (rule "applyEq" (formula "2") (term "0,0,1,0,1,0,1,1,1,0,0") (ifseqformula "40"))
                                                                     (rule "polySimp_mulComm0" (formula "2") (term "0,1,0,1,0,1,1,1,0,0"))
                                                                     (rule "jmod_axiom" (formula "2") (term "1,1,0,0,1,1,0,1,0,0"))
                                                                     (rule "polySimp_mulComm1" (formula "2") (term "1,1,1,0,0,1,1,0,1,0,0"))
                                                                     (rule "polySimp_homoEq" (formula "2") (term "1,0,0,1,1,0,1,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "2") (term "0,1,0,0,1,1,0,1,0,0"))
                                                                     (rule "applyEq" (formula "2") (term "0,0,1,0,1,0,0,1,1,0,1,0,0") (ifseqformula "40"))
                                                                     (rule "polySimp_mulComm0" (formula "2") (term "0,1,0,1,0,0,1,1,0,1,0,0"))
                                                                     (rule "jmod_axiom" (formula "2") (term "1,1,0,0,0"))
                                                                     (rule "polySimp_mulComm1" (formula "2") (term "1,1,1,0,0,0"))
                                                                     (rule "polySimp_homoEq" (formula "2") (term "1,0,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "2") (term "0,1,0,0,0"))
                                                                     (rule "applyEq" (formula "2") (term "0,0,1,0,1,0,0,0") (ifseqformula "40"))
                                                                     (rule "polySimp_mulComm0" (formula "2") (term "0,1,0,1,0,0,0"))
                                                                     (rule "jmod_axiom" (formula "2") (term "1,1,0,0,0,0,1,0,1,0,0"))
                                                                     (rule "polySimp_mulComm1" (formula "2") (term "1,1,1,0,0,0,0,1,0,1,0,0"))
                                                                     (rule "polySimp_homoEq" (formula "2") (term "1,0,0,0,0,1,0,1,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "2") (term "0,1,0,0,0,0,1,0,1,0,0"))
                                                                     (rule "applyEq" (formula "2") (term "0,0,1,0,1,0,0,0,0,1,0,1,0,0") (ifseqformula "40"))
                                                                     (rule "polySimp_mulComm0" (formula "2") (term "0,1,0,1,0,0,0,0,1,0,1,0,0"))
                                                                     (rule "polySimp_sepNegMonomial" (formula "2") (term "1,0,1,1,1,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "2") (term "0,1,0,1,1,1,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "2") (term "0,1,0,1,1,1,0,0"))
                                                                     (rule "polySimp_sepNegMonomial" (formula "2") (term "1,0,0,1,1,0,1,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "2") (term "0,1,0,0,1,1,0,1,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "2") (term "0,1,0,0,1,1,0,1,0,0"))
                                                                     (rule "polySimp_sepNegMonomial" (formula "2") (term "1,0,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "2") (term "0,1,0,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "2") (term "0,1,0,0,0"))
                                                                     (rule "polySimp_sepNegMonomial" (formula "2") (term "1,0,0,0,0,1,0,1,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "2") (term "0,1,0,0,0,0,1,0,1,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "2") (term "0,1,0,0,0,0,1,0,1,0,0"))
                                                                     (rule "nnf_imp2or" (formula "2") (term "0,0"))
                                                                     (rule "nnf_notAnd" (formula "2") (term "0,0,0"))
                                                                     (rule "nnf_imp2or" (formula "2") (term "0,1,0,0"))
                                                                     (rule "commute_or" (formula "2") (term "0,0,0"))
                                                                     (rule "commute_or" (formula "2") (term "1,0,1,0,0"))
                                                                     (rule "all_unused" (formula "1"))
                                                                     (rule "true_left" (formula "1"))
                                                                     (rule "shift_paren_or" (formula "1") (term "0,1,0,0"))
                                                                     (rule "commute_and" (formula "1") (term "0,1,1,1,0,0"))
                                                                     (rule "commute_and" (formula "1") (term "0,0,0,1,0,1,0,0"))
                                                                     (rule "commute_or_2" (formula "1") (term "0,1,0,0"))
                                                                     (rule "commute_and" (formula "1") (term "1,0,0"))
                                                                     (rule "commute_and" (formula "1") (term "0,0,1,1,1,0,0"))
                                                                     (rule "commute_or_2" (formula "1") (term "1,1,0,0"))
                                                                     (rule "cnf_rightDist" (formula "1") (term "0,0"))
                                                                     (rule "distr_forallAnd" (formula "1") (term "0"))
                                                                     (rule "distr_forallAnd" (formula "1"))
                                                                     (rule "andLeft" (formula "1"))
                                                                     (rule "swapQuantifiersAll" (formula "1"))
                                                                     (rule "commute_or_2" (formula "1") (term "0,0"))
                                                                     (rule "elim_forall4" (formula "1") (term "0"))
                                                                     (rule "eqClose" (formula "1") (term "1,0,1,1,0"))
                                                                     (rule "concrete_and_3" (formula "1") (term "0,1,1,0"))
                                                                     (rule "array_store_static_analyse" (formula "1") (term "1,0") (ifseqformula "75"))
                                                                     (rule "concrete_or_3" (formula "1") (term "0"))
                                                                     (rule "shift_paren_or" (formula "2") (term "0,0"))
                                                                     (rule "swapQuantifiersAll" (formula "2"))
                                                                     (rule "elim_forall4" (formula "2") (term "0"))
                                                                     (rule "eqClose" (formula "2") (term "1,0,0,1,0,0,0"))
                                                                     (rule "eqClose" (formula "2") (term "1,0,0,0,1,0,0"))
                                                                     (rule "concrete_and_3" (formula "2") (term "0,0,1,0,0,0"))
                                                                     (rule "concrete_and_3" (formula "2") (term "0,0,0,1,0,0"))
                                                                     (rule "replace_known_left" (formula "2") (term "0,0,0,0,0") (ifseqformula "45"))
                                                                     (rule "concrete_not_1" (formula "2") (term "0,0,0,0"))
                                                                     (rule "concrete_or_2" (formula "2") (term "0,0,0"))
                                                                     (rule "commute_or_2" (formula "2") (term "0"))
                                                                     (rule "commute_or" (formula "2") (term "0,0"))
                                                                     (rule "all_unused" (formula "1"))
                                                                     (rule "true_left" (formula "1"))
                                                                     (rule "blockEmpty" (formula "61") (term "4"))
                                                                     (rule "ifthenelse_to_or_left" (formula "1") (term "1,0,0"))
                                                                     (rule "replace_known_right" (formula "1") (term "1,0,1,0,0") (ifseqformula "77"))
                                                                     (rule "concrete_or_4" (formula "1") (term "0,1,0,0"))
                                                                     (rule "commute_or_2" (formula "1") (term "0"))
                                                                     (rule "cnf_rightDist" (formula "1") (term "0"))
                                                                     (rule "distr_forallAnd" (formula "1"))
                                                                     (rule "andLeft" (formula "1"))
                                                                     (rule "commute_or_2" (formula "1") (term "0"))
                                                                     (rule "eq_or" (formula "1") (term "0,0"))
                                                                     (rule "shift_paren_or" (formula "1") (term "0"))
                                                                     (rule "commute_or_2" (formula "1") (term "0,0"))
                                                                     (rule "neq_or" (formula "1") (term "0,0,0"))
                                                                     (rule "concrete_or_1" (formula "1") (term "0,0"))
                                                                     (rule "concrete_or_1" (formula "1") (term "0"))
                                                                     (rule "all_unused" (formula "1"))
                                                                     (rule "true_left" (formula "1"))
                                                                     (rule "assignment" (formula "60") (term "4"))
                                                                     (builtin "Update Simplification" (formula "60"))
                                                                     (rule "methodCallEmpty" (formula "60") (term "4"))
                                                                     (rule "emptyModality" (formula "60") (term "4"))
                                                                     (builtin "Update Simplification" (formula "60"))
                                                                     (rule "notRight" (formula "60"))
                                                                     (rule "eqSymm" (formula "1"))
                                                                     (rule "applyEq" (formula "11") (term "0,1,0") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "39") (term "0,0") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "33") (term "0,1") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "17") (term "0,1,0") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "32") (term "0,0,0") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "61") (term "0,2") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "71") (term "0,1,0") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "38") (term "0") (ifseqformula "1"))
                                                                     (rule "replace_known_left" (formula "10") (term "0,0") (ifseqformula "38"))
                                                                     (rule "ifthenelse_true" (formula "10") (term "0"))
                                                                     (rule "eqSymm" (formula "10"))
                                                                     (rule "applyEq" (formula "36") (term "1") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "35") (term "0,0") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "37") (term "1,0,1") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "34") (term "0,1,0,1") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "41") (term "1") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "65") (term "1") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "29") (term "0,1,0") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "31") (term "1") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "2") (term "1") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "28") (term "1") (ifseqformula "1"))
                                                                     (rule "apply_eq_monomials" (formula "72") (term "0") (ifseqformula "39"))
                                                                     (rule "polySimp_homoEq" (formula "72"))
                                                                     (rule "polySimp_mulComm0" (formula "72") (term "1,0"))
                                                                     (rule "polySimp_rightDist" (formula "72") (term "0,1,1,0"))
                                                                     (rule "polySimp_mulComm1" (formula "72") (term "1,0,1,1,0"))
                                                                     (rule "polySimp_pullOutFactor2b" (formula "72") (term "1,1,0"))
                                                                     (rule "add_literals" (formula "72") (term "1,1,1,1,0"))
                                                                     (rule "times_zero_1" (formula "72") (term "1,1,1,0"))
                                                                     (rule "add_zero_right" (formula "72") (term "1,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "72") (term "1,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "72") (term "0"))
                                                                     (rule "add_literals" (formula "72") (term "1,1,0"))
                                                                     (rule "times_zero_1" (formula "72") (term "1,0"))
                                                                     (rule "add_zero_right" (formula "72") (term "0"))
                                                                     (rule "applyEq" (formula "39") (term "0") (ifseqformula "10"))
                                                                     (rule "eqSymm" (formula "39"))
                                                                     (rule "applyEq" (formula "7") (term "0") (ifseqformula "32"))
                                                                     (rule "applyEq" (formula "4") (term "0") (ifseqformula "35"))
                                                                     (rule "applyEq" (formula "12") (term "0,1,0,0,0,1,0") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "66") (term "1,0,1") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "63") (term "0,1") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "65") (term "0,1,0,1") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "12") (term "0,1,0,0,0") (ifseqformula "1"))
                                                                     (rule "apply_eq_monomials" (formula "62") (term "0") (ifseqformula "38"))
                                                                     (rule "polySimp_rightDist" (formula "62") (term "0,0"))
                                                                     (rule "polySimp_mulComm1" (formula "62") (term "1,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "62") (term "0,1,0,0"))
                                                                     (rule "polySimp_pullOutFactor2b" (formula "62") (term "0"))
                                                                     (rule "add_literals" (formula "62") (term "1,1,0"))
                                                                     (rule "times_zero_1" (formula "62") (term "1,0"))
                                                                     (rule "add_zero_right" (formula "62") (term "0"))
                                                                     (rule "apply_eq_monomials" (formula "35") (term "0") (ifseqformula "38"))
                                                                     (rule "polySimp_rightDist" (formula "35") (term "0,0"))
                                                                     (rule "polySimp_mulComm1" (formula "35") (term "1,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "35") (term "0,1,0,0"))
                                                                     (rule "polySimp_pullOutFactor2b" (formula "35") (term "0"))
                                                                     (rule "add_literals" (formula "35") (term "1,1,0"))
                                                                     (rule "times_zero_1" (formula "35") (term "1,0"))
                                                                     (rule "add_zero_right" (formula "35") (term "0"))
                                                                     (rule "apply_eq_monomials" (formula "12") (term "0,0,0,0") (ifseqformula "37"))
                                                                     (rule "polySimp_homoEq" (formula "12") (term "0,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "12") (term "0,1,1,0,0,0,0"))
                                                                     (rule "polySimp_mulComm1" (formula "12") (term "1,0,1,1,0,0,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "12") (term "0,1,0,1,1,0,0,0,0"))
                                                                     (rule "polySimp_pullOutFactor2b" (formula "12") (term "1,1,0,0,0,0"))
                                                                     (rule "add_literals" (formula "12") (term "1,1,1,1,0,0,0,0"))
                                                                     (rule "times_zero_1" (formula "12") (term "1,1,1,0,0,0,0"))
                                                                     (rule "add_zero_right" (formula "12") (term "1,1,0,0,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0"))
                                                                     (rule "apply_eq_monomials" (formula "65") (term "0") (ifseqformula "37"))
                                                                     (rule "polySimp_homoEq" (formula "65"))
                                                                     (rule "polySimp_mulComm0" (formula "65") (term "1,0"))
                                                                     (rule "polySimp_rightDist" (formula "65") (term "0,1,1,0"))
                                                                     (rule "polySimp_mulComm1" (formula "65") (term "1,0,1,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "65") (term "0,1,0,1,1,0"))
                                                                     (rule "polySimp_pullOutFactor2b" (formula "65") (term "1,1,0"))
                                                                     (rule "add_literals" (formula "65") (term "1,1,1,1,0"))
                                                                     (rule "times_zero_1" (formula "65") (term "1,1,1,0"))
                                                                     (rule "add_zero_right" (formula "65") (term "1,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "65") (term "1,0"))
                                                                     (rule "polySimp_addComm1" (formula "65") (term "0"))
                                                                     (rule "apply_eq_monomials" (formula "63") (term "0") (ifseqformula "37"))
                                                                     (rule "polySimp_homoEq" (formula "63"))
                                                                     (rule "polySimp_mulComm0" (formula "63") (term "1,0"))
                                                                     (rule "polySimp_rightDist" (formula "63") (term "0,1,1,0"))
                                                                     (rule "polySimp_mulComm1" (formula "63") (term "0,0,1,1,0"))
                                                                     (rule "polySimp_mulAssoc" (formula "63") (term "1,0,1,1,0"))
                                                                     (rule "polySimp_mulComm1" (formula "63") (term "0,1,0,1,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "63") (term "1,0,1,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "63") (term "0,1,0,1,1,0"))
                                                                     (rule "polySimp_pullOutFactor0b" (formula "63") (term "1,1,0"))
                                                                     (rule "add_literals" (formula "63") (term "1,1,1,1,0"))
                                                                     (rule "times_zero_1" (formula "63") (term "1,1,1,0"))
                                                                     (rule "add_zero_right" (formula "63") (term "1,1,0"))
                                                                     (rule "polySimp_mulAssoc" (formula "63") (term "1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "63") (term "0,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "63") (term "1,0"))
                                                                     (rule "apply_eq_monomials" (formula "35") (term "0") (ifseqformula "37"))
                                                                     (rule "polySimp_rightDist" (formula "35") (term "0,0"))
                                                                     (rule "polySimp_mulComm1" (formula "35") (term "1,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "35") (term "0,1,0,0"))
                                                                     (rule "polySimp_pullOutFactor2b" (formula "35") (term "0"))
                                                                     (rule "add_literals" (formula "35") (term "1,1,0"))
                                                                     (rule "times_zero_1" (formula "35") (term "1,0"))
                                                                     (rule "add_zero_right" (formula "35") (term "0"))
                                                                     (rule "apply_eq_monomials" (formula "28") (term "1,1,0") (ifseqformula "36"))
                                                                     (rule "polySimp_rightDist" (formula "28") (term "0,1,1,0"))
                                                                     (rule "polySimp_mulComm1" (formula "28") (term "0,0,1,1,0"))
                                                                     (rule "polySimp_mulAssoc" (formula "28") (term "1,0,1,1,0"))
                                                                     (rule "polySimp_mulComm1" (formula "28") (term "0,1,0,1,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "28") (term "1,0,1,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "28") (term "1,0,1,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "28") (term "1,0,1,1,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "28") (term "1,1,0"))
                                                                     (rule "add_literals" (formula "28") (term "1,1,1,1,0"))
                                                                     (rule "times_zero_1" (formula "28") (term "1,1,1,0"))
                                                                     (rule "add_zero_right" (formula "28") (term "1,1,0"))
                                                                     (rule "apply_eq_monomials" (formula "33") (term "0") (ifseqformula "6"))
                                                                     (rule "polySimp_rightDist" (formula "33") (term "0,0"))
                                                                     (rule "polySimp_mulComm1" (formula "33") (term "1,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "33") (term "0,1,0,0"))
                                                                     (rule "polySimp_pullOutFactor2b" (formula "33") (term "0"))
                                                                     (rule "add_literals" (formula "33") (term "1,1,0"))
                                                                     (rule "times_zero_1" (formula "33") (term "1,0"))
                                                                     (rule "add_zero_right" (formula "33") (term "0"))
                                                                     (rule "apply_eq_monomials" (formula "12") (term "0,0,0,0,1,0") (ifseqformula "35"))
                                                                     (rule "polySimp_homoEq" (formula "12") (term "0,0,0,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "12") (term "0,1,1,0,0,0,0,1,0"))
                                                                     (rule "polySimp_mulComm1" (formula "12") (term "1,0,1,1,0,0,0,0,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "12") (term "0,1,0,1,1,0,0,0,0,1,0"))
                                                                     (rule "polySimp_pullOutFactor2b" (formula "12") (term "1,1,0,0,0,0,1,0"))
                                                                     (rule "add_literals" (formula "12") (term "1,1,1,1,0,0,0,0,1,0"))
                                                                     (rule "times_zero_1" (formula "12") (term "1,1,1,0,0,0,0,1,0"))
                                                                     (rule "add_zero_right" (formula "12") (term "1,1,0,0,0,0,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,1,0"))
                                                                     (rule "apply_eq_monomials" (formula "60") (term "0") (ifseqformula "35"))
                                                                     (rule "polySimp_homoEq" (formula "60"))
                                                                     (rule "polySimp_mulComm0" (formula "60") (term "1,0"))
                                                                     (rule "polySimp_rightDist" (formula "60") (term "0,1,1,0"))
                                                                     (rule "polySimp_mulComm1" (formula "60") (term "1,0,1,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "60") (term "0,1,0,1,1,0"))
                                                                     (rule "polySimp_pullOutFactor2b" (formula "60") (term "1,1,0"))
                                                                     (rule "add_literals" (formula "60") (term "1,1,1,1,0"))
                                                                     (rule "times_zero_1" (formula "60") (term "1,1,1,0"))
                                                                     (rule "add_zero_right" (formula "60") (term "1,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "60") (term "1,0"))
                                                                     (rule "polySimp_addComm1" (formula "60") (term "0"))
                                                                     (rule "apply_eq_monomials_rigid" (formula "32") (term "0") (ifseqformula "6"))
                                                                     (rule "polySimp_rightDist" (formula "32") (term "0,0"))
                                                                     (rule "polySimp_mulComm1" (formula "32") (term "1,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "32") (term "0,1,0,0"))
                                                                     (rule "polySimp_pullOutFactor2b" (formula "32") (term "0"))
                                                                     (rule "add_literals" (formula "32") (term "1,1,0"))
                                                                     (rule "times_zero_1" (formula "32") (term "1,0"))
                                                                     (rule "add_zero_right" (formula "32") (term "0"))
                                                                     (rule "applyEq" (formula "32") (term "1") (ifseqformula "34"))
                                                                     (rule "applyEq" (formula "61") (term "1,1,1") (ifseqformula "34"))
                                                                     (rule "applyEq" (formula "67") (term "0,1,0") (ifseqformula "1"))
                                                                     (rule "polySimp_pullOutFactor1" (formula "67") (term "0"))
                                                                     (rule "add_literals" (formula "67") (term "1,0"))
                                                                     (rule "times_zero_1" (formula "67") (term "0"))
                                                                     (rule "eqClose" (formula "67"))
                                                                     (rule "closeTrue" (formula "67"))
                                                                  )
                                                                  (branch " Exceptional Post"
                                                                     (builtin "Update Simplification" (formula "58"))
                                                                     (rule "impRight" (formula "58"))
                                                                     (rule "andLeft" (formula "1"))
                                                                     (rule "andLeft" (formula "1"))
                                                                     (rule "andLeft" (formula "3"))
                                                                     (rule "andLeft" (formula "2"))
                                                                     (rule "notLeft" (formula "3"))
                                                                     (rule "close" (formula "62") (ifseqformula "4"))
                                                                  )
                                                               )
                                                               (branch " Null Reference (queryReceiver_10 = null)"
                                                                  (builtin "Update Simplification" (formula "47"))
                                                                  (builtin "Update Simplification" (formula "1"))
                                                                  (rule "close" (formula "63") (ifseqformula "1"))
                                                               )
                                                            )
                                                            (branch " Null Reference (queryReceiver_9 = null)"
                                                               (builtin "Update Simplification" (formula "48"))
                                                               (builtin "Update Simplification" (formula "1"))
                                                               (rule "close" (formula "63") (ifseqformula "1"))
                                                            )
                                                         )
                                                         (branch " Null Reference (queryReceiver_8 = null)"
                                                            (builtin "Update Simplification" (formula "49"))
                                                            (builtin "Update Simplification" (formula "1"))
                                                            (rule "close" (formula "63") (ifseqformula "1"))
                                                         )
                                                      )
                                                   )
                                                )
                                             )
                                          )
                                       )
                                       (branch " Exceptional Post"
                                          (rule "double_not" (formula "38") (term "0,1,4,5"))
                                          (builtin "Update Simplification" (formula "38"))
                                          (rule "typeEqDerived2" (formula "38") (term "0,1,0,1,0,1,0") (ifseqformula "1"))
                                          (rule "boolean_equal" (formula "38") (term "1,0,1,0,1,0"))
                                          (rule "concrete_and_3" (formula "38") (term "0,1,0,1,0"))
                                          (rule "impRight" (formula "38"))
                                          (rule "andLeft" (formula "1"))
                                          (rule "andLeft" (formula "2"))
                                          (rule "andLeft" (formula "1"))
                                          (rule "andLeft" (formula "2"))
                                          (rule "notLeft" (formula "3"))
                                          (rule "close" (formula "42") (ifseqformula "4"))
                                       )
                                    )
                                    (branch " Null Reference (queryReceiver_2 = null)"
                                       (builtin "Update Simplification" (formula "2"))
                                       (builtin "Update Simplification" (formula "1"))
                                       (rule "applyEqRigid" (formula "39") (term "0,3,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "5") (term "1") (ifseqformula "1"))
                                       (rule "throwUnfold" (formula "2") (term "3") (inst "#v0=v_NullPointerException"))
                                       (rule "variableDeclarationAssign" (formula "2") (term "3"))
                                       (rule "variableDeclaration" (formula "2") (term "3") (newnames "v_NullPointerException"))
                                       (rule "instanceCreationAssignment" (formula "2") (term "3") (inst "#v0=v_NullPointerException_1"))
                                       (rule "variableDeclarationAssign" (formula "2") (term "3"))
                                       (rule "variableDeclaration" (formula "2") (term "3") (newnames "v_NullPointerException_1"))
                                       (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "2") (term "3") (inst "#v0=v_NullPointerException_2"))
                                       (rule "variableDeclaration" (formula "2") (term "3") (newnames "v_NullPointerException_2"))
                                       (rule "methodBodyExpand" (formula "2") (term "3"))
                                       (rule "variableDeclaration" (formula "2") (term "3") (newnames "__NEW___1"))
                                       (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "2") (term "3") (inst "#v0=v_NullPointerException_3"))
                                       (rule "variableDeclaration" (formula "2") (term "3") (newnames "v_NullPointerException_3"))
                                       (rule "allocateInstance" (formula "2") (term "3"))
                                       (builtin "Update Simplification" (formula "2"))
                                       (rule "polySimp_addComm0" (formula "2") (term "1"))
                                       (rule "blockEmpty" (formula "2") (term "7"))
                                       (rule "assignment" (formula "2") (term "7"))
                                       (builtin "Update Simplification" (formula "2"))
                                       (rule "methodBodyExpand" (formula "2") (term "7"))
                                       (rule "assignment" (formula "2") (term "7"))
                                       (builtin "Update Simplification" (formula "2"))
                                       (rule "assignment" (formula "2") (term "9"))
                                       (builtin "Update Simplification" (formula "2"))
                                       (rule "methodCallWithinClass" (formula "2") (term "11"))
                                       (rule "methodBodyExpand" (formula "2") (term "11"))
                                       (rule "methodCallSuper" (formula "2") (term "11"))
                                       (rule "nextToCreate_non_negative" (formula "2") (term "1,1") (ifseqformula "29"))
                                       (rule "methodBodyExpand" (formula "3") (term "11"))
                                       (rule "methodCallSuper" (formula "3") (term "11"))
                                       (rule "methodBodyExpand" (formula "3") (term "11"))
                                       (rule "methodCallSuper" (formula "3") (term "11"))
                                       (rule "methodBodyExpand" (formula "3") (term "11"))
                                       (rule "methodCallSuper" (formula "3") (term "11"))
                                       (rule "methodBodyExpand" (formula "3") (term "11"))
                                       (rule "methodCallEmpty" (formula "3") (term "11"))
                                       (rule "blockEmpty" (formula "3") (term "11"))
                                       (rule "assignment" (formula "3") (term "11"))
                                       (builtin "Update Simplification" (formula "3"))
                                       (rule "assignment" (formula "3") (term "13"))
                                       (builtin "Update Simplification" (formula "3"))
                                       (rule "methodCallEmpty" (formula "3") (term "15"))
                                       (rule "methodCallEmpty" (formula "3") (term "15"))
                                       (rule "methodCallEmpty" (formula "3") (term "15"))
                                       (rule "methodCallEmpty" (formula "3") (term "15"))
                                       (rule "blockEmpty" (formula "3") (term "15"))
                                       (rule "methodCallReturnIgnoreResult" (formula "3") (term "15"))
                                       (rule "methodCallReturn" (formula "3") (term "15"))
                                       (rule "assignment" (formula "3") (term "15"))
                                       (builtin "Update Simplification" (formula "3"))
                                       (rule "methodCallEmpty" (formula "3") (term "15"))
                                       (rule "blockEmpty" (formula "3") (term "15"))
                                       (rule "assignment" (formula "3") (term "15"))
                                       (builtin "Update Simplification" (formula "3"))
                                       (rule "methodBodyExpand" (formula "3") (term "15"))
                                       (rule "methodCallSuper" (formula "3") (term "15"))
                                       (rule "methodBodyExpand" (formula "3") (term "15"))
                                       (rule "methodCallSuper" (formula "3") (term "15"))
                                       (rule "methodBodyExpand" (formula "3") (term "15"))
                                       (rule "methodCallSuper" (formula "3") (term "15"))
                                       (rule "methodBodyExpand" (formula "3") (term "15"))
                                       (rule "methodCallSuper" (formula "3") (term "15"))
                                       (rule "methodBodyExpand" (formula "3") (term "15"))
                                       (rule "methodCallEmpty" (formula "3") (term "15"))
                                       (rule "blockEmpty" (formula "3") (term "15"))
                                       (rule "assignment" (formula "3") (term "15"))
                                       (builtin "Update Simplification" (formula "3"))
                                       (rule "assignment" (formula "3") (term "15"))
                                       (builtin "Update Simplification" (formula "3"))
                                       (rule "methodCallEmpty" (formula "3") (term "15"))
                                       (rule "methodCallEmpty" (formula "3") (term "15"))
                                       (rule "methodCallEmpty" (formula "3") (term "15"))
                                       (rule "methodCallEmpty" (formula "3") (term "15"))
                                       (rule "blockEmpty" (formula "3") (term "15"))
                                       (rule "assignment_write_attribute" (formula "3") (term "15"))
                                       (branch " Normal Execution (v_NullPointerException_1 != null)"
                                          (builtin "Update Simplification" (formula "3"))
                                          (builtin "Update Simplification" (formula "40"))
                                          (rule "repository_object_non_null" (formula "40"))
                                          (rule "false_right" (formula "40"))
                                          (rule "assignment" (formula "3") (term "15"))
                                          (builtin "Update Simplification" (formula "3"))
                                          (rule "methodCallThrow" (formula "3") (term "15"))
                                          (rule "throwBox" (formula "3") (term "15"))
                                          (builtin "Update Simplification" (formula "3"))
                                          (rule "true_left" (formula "3"))
                                          (rule "resolvequery" (formula "23") (term "0,1,0,0") (inst "queryValue=java_lang_StringhashCode_9"))
                                          (rule "eqSymm" (formula "24") (term "0,1,0"))
                                          (rule "applyEq" (formula "28") (term "1") (ifseqformula "23"))
                                          (rule "applyEq" (formula "27") (term "0,0") (ifseqformula "23"))
                                          (rule "applyEq" (formula "32") (term "0") (ifseqformula "23"))
                                          (rule "applyEq" (formula "30") (term "0,0") (ifseqformula "23"))
                                          (rule "applyEq" (formula "45") (term "0,1,0") (ifseqformula "23"))
                                          (rule "applyEq" (formula "29") (term "1,0,1") (ifseqformula "23"))
                                          (rule "inEqSimp_exactShadow3" (formula "29") (ifseqformula "28"))
                                          (rule "polySimp_rightDist" (formula "29") (term "0,0"))
                                          (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0"))
                                          (rule "polySimp_elimOne" (formula "29") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "29") (term "0"))
                                          (rule "polySimp_rightDist" (formula "29") (term "0,0,0"))
                                          (rule "mul_literals" (formula "29") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor2b" (formula "29") (term "0,0"))
                                          (rule "add_literals" (formula "29") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "29") (term "1,0,0"))
                                          (rule "add_literals" (formula "29") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "29"))
                                          (rule "mul_literals" (formula "29") (term "1"))
                                          (rule "variableDeclaration" (formula "24") (newnames "hcode_9"))
                                          (rule "variableDeclaration" (formula "24") (newnames "queryReceiver_11"))
                                          (rule "emptyModality" (formula "24"))
                                          (rule "resolvequery" (formula "41") (term "3,0") (inst "queryValue=java_lang_Stringequals_2"))
                                          (builtin "Update Simplification" (formula "43"))
                                          (builtin "Update Simplification" (formula "1"))
                                          (builtin "Update Simplification" (formula "2"))
                                          (rule "true_left" (formula "2"))
                                          (rule "apply_eq_boolean_rigid" (formula "1") (term "1") (ifseqformula "42"))
                                          (rule "false_to_not_true" (formula "1"))
                                          (rule "notLeft" (formula "1"))
                                          (rule "resolvequery" (formula "43") (term "3,0,0,1,1") (inst "queryValue=java_lang_StringhashCode_10"))
                                          (builtin "Update Simplification" (formula "45"))
                                          (builtin "Update Simplification" (formula "1"))
                                          (rule "eqSymm" (formula "2") (term "0,1,0,3"))
                                          (rule "jmod_axiom" (formula "45") (term "0,1,1"))
                                          (rule "polySimp_mulComm1" (formula "45") (term "1,0,1,1"))
                                          (rule "polySimp_mulComm0" (formula "45") (term "1,1"))
                                          (rule "polySimp_rightDist" (formula "45") (term "1,1"))
                                          (rule "polySimp_mulLiterals" (formula "45") (term "1,1,1"))
                                          (rule "polySimp_elimOne" (formula "45") (term "1,1,1"))
                                          (rule "polySimp_mulComm0" (formula "45") (term "0,1,1"))
                                          (rule "polySimp_addAssoc" (formula "45") (term "1"))
                                          (rule "polySimp_homoEq" (formula "45"))
                                          (rule "polySimp_addComm1" (formula "45") (term "0"))
                                          (rule "polySimp_addComm0" (formula "45") (term "0,0,0"))
                                          (rule "polySimp_sepPosMonomial" (formula "45"))
                                          (rule "polySimp_mulComm0" (formula "45") (term "1"))
                                          (rule "polySimp_rightDist" (formula "45") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "45") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "45") (term "1,1"))
                                          (rule "polySimp_rightDist" (formula "45") (term "0,1"))
                                          (rule "polySimp_mulAssoc" (formula "45") (term "0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "45") (term "0,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "45") (term "0,0,1"))
                                          (rule "polySimp_elimOne" (formula "45") (term "0,0,1"))
                                          (rule "variableDeclaration" (formula "2") (term "3") (newnames "hcode_10"))
                                          (rule "variableDeclaration" (formula "2") (term "3") (newnames "queryReceiver_12"))
                                          (rule "emptyModality" (formula "2") (term "3"))
                                          (builtin "Update Simplification" (formula "2"))
                                          (rule "applyEq" (formula "2") (term "0") (ifseqformula "5"))
                                          (rule "resolvequery" (formula "7") (term "3,0,1,0") (inst "queryValue=java_lang_StringhashCode_11"))
                                          (builtin "Update Simplification" (formula "9"))
                                          (builtin "Update Simplification" (formula "7"))
                                          (rule "eqSymm" (formula "8") (term "0,1,0,3"))
                                          (rule "jmod_axiom" (formula "9") (term "1,0"))
                                          (rule "polySimp_mulComm1" (formula "9") (term "1,1,0"))
                                          (rule "variableDeclaration" (formula "8") (term "3") (newnames "hcode_11"))
                                          (rule "variableDeclaration" (formula "8") (term "3") (newnames "queryReceiver_13"))
                                          (rule "emptyModality" (formula "8") (term "3"))
                                          (builtin "Update Simplification" (formula "8"))
                                          (rule "applyEq" (formula "8") (term "0") (ifseqformula "6"))
                                          (rule "div_axiom" (formula "31") (term "0") (inst "quotient=quotient_13"))
                                          (rule "polySimp_mulComm0" (formula "31") (term "0,1,0,1"))
                                          (rule "polySimp_mulComm0" (formula "31") (term "1,1,1,1,1"))
                                          (rule "polySimp_mulComm0" (formula "31") (term "0,2,1,1"))
                                          (rule "polySimp_mulComm0" (formula "31") (term "0,1,1,1"))
                                          (rule "applyEq" (formula "31") (term "0,0,0,1") (ifseqformula "32"))
                                          (rule "inEqSimp_contradEq7" (formula "31") (term "0") (ifseqformula "39"))
                                          (rule "times_zero_1" (formula "31") (term "1,0,0,0"))
                                          (rule "add_zero_right" (formula "31") (term "0,0,0"))
                                          (rule "leq_literals" (formula "31") (term "0,0"))
                                          (rule "concrete_and_2" (formula "31") (term "0"))
                                          (rule "concrete_or_2" (formula "31"))
                                          (rule "andLeft" (formula "31"))
                                          (rule "andLeft" (formula "31"))
                                          (rule "applyEqRigid" (formula "35") (term "1,0") (ifseqformula "31"))
                                          (rule "applyEqRigid" (formula "35") (term "1,0") (ifseqformula "31"))
                                          (rule "replace_known_left" (formula "33") (term "1") (ifseqformula "35"))
                                          (rule "applyEq" (formula "29") (term "1,0,1,1,0,0") (ifseqformula "31"))
                                          (rule "applyEqRigid" (formula "52") (term "1,0,1,1,0") (ifseqformula "31"))
                                          (rule "applyEq" (formula "34") (term "1") (ifseqformula "31"))
                                          (rule "applyEqRigid" (formula "36") (term "1") (ifseqformula "31"))
                                          (rule "inEqSimp_subsumption1" (formula "33") (term "0") (ifseqformula "40"))
                                          (rule "leq_literals" (formula "33") (term "0,0"))
                                          (rule "concrete_or_1" (formula "33") (term "0"))
                                          (rule "ifthenelse_true_for" (formula "33"))
                                          (rule "true_left" (formula "33"))
                                          (rule "inEqSimp_exactShadow3" (formula "34") (ifseqformula "32"))
                                          (rule "polySimp_rightDist" (formula "34") (term "0,0"))
                                          (rule "polySimp_mulLiterals" (formula "34") (term "1,0,0"))
                                          (rule "polySimp_elimOne" (formula "34") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "34") (term "0"))
                                          (rule "polySimp_rightDist" (formula "34") (term "0,0,0"))
                                          (rule "mul_literals" (formula "34") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor2b" (formula "34") (term "0,0"))
                                          (rule "add_literals" (formula "34") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "34") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "34") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "34"))
                                          (rule "mul_literals" (formula "34") (term "1"))
                                          (rule "jdiv_axiom" (formula "35") (term "0"))
                                          (rule "eqSymm" (formula "35"))
                                          (rule "replace_known_left" (formula "35") (term "0,0") (ifseqformula "38"))
                                          (rule "ifthenelse_true" (formula "35") (term "0"))
                                          (rule "eqSymm" (formula "35"))
                                          (rule "applyEq" (formula "35") (term "0") (ifseqformula "36"))
                                          (rule "eqSymm" (formula "35"))
                                          (rule "methodCallWithAssignment" (formula "28") (term "1") (inst "#v0=j"))
                                          (branch " Normal Execution (queryReceiver_11 != null)"
                                             (builtin "Update Simplification" (formula "46"))
                                             (rule "variableDeclaration" (formula "28") (term "1") (newnames "j_20"))
                                             (rule "jdiv_axiom" (formula "48") (term "0,0"))
                                             (rule "eqSymm" (formula "1"))
                                             (rule "boxToDiamond" (formula "3") (term "4"))
                                             (builtin "Update Simplification" (formula "3"))
                                             (rule "notLeft" (formula "3"))
                                             (rule "jdiv_axiom" (formula "9") (term "0,0,1,1,0"))
                                             (rule "eqSymm" (formula "9"))
                                             (rule "boxToDiamond" (formula "8") (term "4"))
                                             (builtin "Update Simplification" (formula "8"))
                                             (rule "notLeft" (formula "8"))
                                             (rule "boxToDiamond" (formula "28") (term "1"))
                                             (builtin "Update Simplification" (formula "28"))
                                             (rule "notLeft" (formula "28"))
                                             (rule "methodCallWithAssignment" (formula "47") (term "4") (inst "#v0=j"))
                                             (branch " Normal Execution (queryReceiver_12 != null)"
                                                (builtin "Update Simplification" (formula "47"))
                                                (rule "variableDeclaration" (formula "47") (term "4") (newnames "j_21"))
                                                (rule "methodCallWithAssignment" (formula "46") (term "4") (inst "#v0=j"))
                                                (branch " Normal Execution (queryReceiver_13 != null)"
                                                   (builtin "Update Simplification" (formula "46"))
                                                   (rule "variableDeclaration" (formula "46") (term "4") (newnames "j_22"))
                                                   (rule "only_created_object_are_referenced_by_arrays_non_null" (formula "53") (term "0") (ifseqformula "29") (ifseqformula "35") (ifseqformula "53"))
                                                   (rule "div_axiom" (formula "1") (term "0,2,0") (inst "quotient=quotient_17"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,1"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,1,1,1,1"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "0,1,1,1"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "0,2,1,1"))
                                                   (rule "inEqSimp_contradEq7" (formula "1") (term "0") (ifseqformula "39"))
                                                   (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                                                   (rule "add_zero_right" (formula "1") (term "0,0,0"))
                                                   (rule "leq_literals" (formula "1") (term "0,0"))
                                                   (rule "concrete_and_2" (formula "1") (term "0"))
                                                   (rule "concrete_or_2" (formula "1"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "applyEq" (formula "4") (term "0,2,0") (ifseqformula "1"))
                                                   (rule "inEqSimp_subsumption1" (formula "3") (term "0") (ifseqformula "41"))
                                                   (rule "leq_literals" (formula "3") (term "0,0"))
                                                   (rule "concrete_or_1" (formula "3") (term "0"))
                                                   (rule "ifthenelse_true_for" (formula "3"))
                                                   (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "2"))
                                                   (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "3") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                   (rule "polySimp_rightDist" (formula "3") (term "0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0"))
                                                   (rule "mul_literals" (formula "3") (term "0,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "3") (term "1,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0"))
                                                   (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                                   (rule "add_literals" (formula "3") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                   (rule "mul_literals" (formula "3") (term "1"))
                                                   (rule "div_axiom" (formula "4") (term "1,0") (inst "quotient=quotient_18"))
                                                   (rule "polySimp_mulComm0" (formula "4") (term "0,1,0,1"))
                                                   (rule "polySimp_mulComm0" (formula "4") (term "1,1,1,1,1"))
                                                   (rule "polySimp_mulComm0" (formula "4") (term "0,2,1,1"))
                                                   (rule "polySimp_mulComm0" (formula "4") (term "0,1,1,1"))
                                                   (rule "inEqSimp_contradEq7" (formula "4") (term "0") (ifseqformula "42"))
                                                   (rule "times_zero_1" (formula "4") (term "1,0,0,0"))
                                                   (rule "add_zero_right" (formula "4") (term "0,0,0"))
                                                   (rule "leq_literals" (formula "4") (term "0,0"))
                                                   (rule "concrete_and_2" (formula "4") (term "0"))
                                                   (rule "concrete_or_2" (formula "4"))
                                                   (rule "andLeft" (formula "4"))
                                                   (rule "andLeft" (formula "4"))
                                                   (rule "applyEq" (formula "7") (term "1,0") (ifseqformula "4"))
                                                   (rule "inEqSimp_subsumption1" (formula "6") (term "0") (ifseqformula "44"))
                                                   (rule "leq_literals" (formula "6") (term "0,0"))
                                                   (rule "concrete_or_1" (formula "6") (term "0"))
                                                   (rule "ifthenelse_true_for" (formula "6"))
                                                   (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "5"))
                                                   (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "6") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                   (rule "polySimp_rightDist" (formula "6") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "6") (term "0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor2b" (formula "6") (term "0,0"))
                                                   (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                                   (rule "add_literals" (formula "6") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                                   (rule "mul_literals" (formula "6") (term "1"))
                                                   (rule "div_axiom" (formula "14") (term "1,0") (inst "quotient=quotient_25"))
                                                   (rule "polySimp_mulComm0" (formula "14") (term "0,1,0,1"))
                                                   (rule "polySimp_mulComm0" (formula "14") (term "0,1,1,1"))
                                                   (rule "polySimp_mulComm0" (formula "14") (term "1,1,1,1,1"))
                                                   (rule "polySimp_mulComm0" (formula "14") (term "0,2,1,1"))
                                                   (rule "inEqSimp_contradEq7" (formula "14") (term "0") (ifseqformula "45"))
                                                   (rule "times_zero_1" (formula "14") (term "1,0,0,0"))
                                                   (rule "add_zero_right" (formula "14") (term "0,0,0"))
                                                   (rule "leq_literals" (formula "14") (term "0,0"))
                                                   (rule "concrete_and_2" (formula "14") (term "0"))
                                                   (rule "concrete_or_2" (formula "14"))
                                                   (rule "andLeft" (formula "14"))
                                                   (rule "andLeft" (formula "14"))
                                                   (rule "applyEq" (formula "17") (term "1,0") (ifseqformula "14"))
                                                   (rule "inEqSimp_subsumption1" (formula "16") (term "0") (ifseqformula "47"))
                                                   (rule "leq_literals" (formula "16") (term "0,0"))
                                                   (rule "concrete_or_1" (formula "16") (term "0"))
                                                   (rule "ifthenelse_true_for" (formula "16"))
                                                   (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "15"))
                                                   (rule "polySimp_rightDist" (formula "16") (term "0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "16") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "16") (term "0"))
                                                   (rule "polySimp_rightDist" (formula "16") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "16") (term "0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor2b" (formula "16") (term "0,0"))
                                                   (rule "add_literals" (formula "16") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "16") (term "1,0,0"))
                                                   (rule "add_literals" (formula "16") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                                                   (rule "mul_literals" (formula "16") (term "1"))
                                                   (rule "div_axiom" (formula "17") (term "0,2,0") (inst "quotient=quotient_26"))
                                                   (rule "polySimp_mulComm0" (formula "17") (term "0,1,0,1"))
                                                   (rule "polySimp_mulComm0" (formula "17") (term "0,1,1,1"))
                                                   (rule "polySimp_mulComm0" (formula "17") (term "1,1,1,1,1"))
                                                   (rule "polySimp_mulComm0" (formula "17") (term "0,2,1,1"))
                                                   (rule "inEqSimp_contradEq7" (formula "17") (term "0") (ifseqformula "48"))
                                                   (rule "times_zero_1" (formula "17") (term "1,0,0,0"))
                                                   (rule "add_zero_right" (formula "17") (term "0,0,0"))
                                                   (rule "leq_literals" (formula "17") (term "0,0"))
                                                   (rule "concrete_and_2" (formula "17") (term "0"))
                                                   (rule "concrete_or_2" (formula "17"))
                                                   (rule "andLeft" (formula "17"))
                                                   (rule "andLeft" (formula "17"))
                                                   (rule "applyEq" (formula "20") (term "0,2,0") (ifseqformula "17"))
                                                   (rule "inEqSimp_subsumption1" (formula "19") (term "0") (ifseqformula "50"))
                                                   (rule "leq_literals" (formula "19") (term "0,0"))
                                                   (rule "concrete_or_1" (formula "19") (term "0"))
                                                   (rule "ifthenelse_true_for" (formula "19"))
                                                   (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "18"))
                                                   (rule "polySimp_rightDist" (formula "19") (term "0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "19") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "19") (term "0"))
                                                   (rule "polySimp_rightDist" (formula "19") (term "0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0,0"))
                                                   (rule "mul_literals" (formula "19") (term "0,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "19") (term "1,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0"))
                                                   (rule "add_literals" (formula "19") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "19") (term "1,0,0"))
                                                   (rule "add_literals" (formula "19") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "19"))
                                                   (rule "mul_literals" (formula "19") (term "1"))
                                                   (builtin "Use Operation Contract" (formula "57") (term "1") (newnames "result_19") (contract "hashCode;;"))
                                                   (branch " Pre"
                                                      (builtin "Update Simplification" (formula "57"))
                                                      (rule "replace_known_right" (formula "57") (term "0,1,1") (ifseqformula "66"))
                                                      (rule "concrete_not_2" (formula "57") (term "1,1"))
                                                      (rule "concrete_and_3" (formula "57") (term "1"))
                                                      (rule "replace_known_left" (formula "57") (term "1") (ifseqformula "56"))
                                                      (rule "concrete_and_3" (formula "57"))
                                                      (rule "close" (formula "57") (ifseqformula "47"))
                                                   )
                                                   (branch " Post"
                                                      (builtin "Update Simplification" (formula "57"))
                                                      (rule "inInt" (formula "57") (term "1,1,0,0"))
                                                      (rule "concrete_and_3" (formula "57") (term "1,0,0"))
                                                      (rule "impRight" (formula "57"))
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "andLeft" (formula "2"))
                                                      (rule "eqSymm" (formula "2"))
                                                      (rule "applyEq" (formula "2") (term "0") (ifseqformula "39"))
                                                      (rule "eqSymm" (formula "2"))
                                                      (rule "applyEq" (formula "59") (term "0") (ifseqformula "2"))
                                                      (rule "blockEmpty" (formula "59") (term "1"))
                                                      (rule "assignment" (formula "59") (term "1"))
                                                      (builtin "Update Simplification" (formula "59"))
                                                      (rule "methodCallEmpty" (formula "59") (term "1"))
                                                      (rule "emptyModality" (formula "59") (term "1"))
                                                      (builtin "Update Simplification" (formula "59"))
                                                      (rule "notRight" (formula "59"))
                                                      (rule "eqSymm" (formula "1"))
                                                      (rule "applyEq" (formula "61") (term "0,2") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "31") (term "0,0,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "32") (term "0,1") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "34") (term "0,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "35") (term "1") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "38") (term "0,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "37") (term "0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "61") (term "0,1,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "59") (term "0,2") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "11") (term "0,1,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "16") (term "0,1,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "46") (term "0") (ifseqformula "34"))
                                                      (rule "applyEq" (formula "30") (term "1") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "28") (term "0,1,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "36") (term "1,0,1") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "27") (term "1") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "39") (term "1") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "3") (term "1") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "33") (term "0,1,0,1") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "48") (term "0") (ifseqformula "37"))
                                                      (rule "applyEq" (formula "34") (term "1") (ifseqformula "46"))
                                                      (rule "applyEq" (formula "62") (term "1,1,1") (ifseqformula "46"))
                                                      (rule "applyEq" (formula "37") (term "1") (ifseqformula "46"))
                                                      (rule "applyEq" (formula "35") (term "1,0") (ifseqformula "46"))
                                                      (rule "applyEq" (formula "28") (term "1,0,1,1,0") (ifseqformula "45"))
                                                      (rule "close" (formula "64") (ifseqformula "28"))
                                                   )
                                                   (branch " Exceptional Post"
                                                      (builtin "Update Simplification" (formula "57"))
                                                      (rule "impRight" (formula "57"))
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "andLeft" (formula "2"))
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "notLeft" (formula "2"))
                                                      (rule "close" (formula "60") (ifseqformula "3"))
                                                   )
                                                )
                                                (branch " Null Reference (queryReceiver_13 = null)"
                                                   (builtin "Update Simplification" (formula "47"))
                                                   (builtin "Update Simplification" (formula "1"))
                                                   (rule "close" (formula "55") (ifseqformula "1"))
                                                )
                                             )
                                             (branch " Null Reference (queryReceiver_12 = null)"
                                                (builtin "Update Simplification" (formula "48"))
                                                (builtin "Update Simplification" (formula "1"))
                                                (rule "close" (formula "55") (ifseqformula "1"))
                                             )
                                          )
                                          (branch " Null Reference (queryReceiver_11 = null)"
                                             (builtin "Update Simplification" (formula "29"))
                                             (builtin "Update Simplification" (formula "28"))
                                             (rule "close" (formula "53") (ifseqformula "28"))
                                          )
                                       )
                                       (branch " Null Reference (v_NullPointerException_1 = null)"
                                          (builtin "Update Simplification" (formula "3"))
                                          (rule "repository_object_non_null" (formula "3"))
                                          (rule "closeFalse" (formula "3"))
                                       )
                                    )
                                 )
                              )
                              (branch " result_0 >= 0 FALSE"
                                 (rule "eqSymm" (formula "14"))
                                 (rule "inEqSimp_geqRight" (formula "34"))
                                 (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "1") (term "0,0"))
                                 (rule "applyEq" (formula "4") (term "0,0,1,1,0") (ifseqformula "15"))
                                 (rule "polySimp_mulComm1" (formula "4") (term "0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0"))
                                 (rule "polySimp_elimOne" (formula "4") (term "1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "4") (term "1,1,0"))
                                 (rule "applyEq" (formula "8") (term "0,0") (ifseqformula "15"))
                                 (rule "polySimp_mulComm1" (formula "8") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "8") (term "0,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "8"))
                                 (rule "polySimp_mulLiterals" (formula "8") (term "1,0"))
                                 (rule "polySimp_elimOne" (formula "8") (term "1,0"))
                                 (rule "applyEq" (formula "5") (term "0,0") (ifseqformula "15"))
                                 (rule "polySimp_mulComm1" (formula "5") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "5") (term "0,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "5"))
                                 (rule "polySimp_mulLiterals" (formula "5") (term "1,0"))
                                 (rule "polySimp_elimOne" (formula "5") (term "1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                 (rule "mul_literals" (formula "1") (term "1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "8"))
                                 (rule "polySimp_mulComm0" (formula "8") (term "1"))
                                 (rule "polySimp_rightDist" (formula "8") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "8") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "8") (term "0,1"))
                                 (rule "mul_literals" (formula "8") (term "0,0,1"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                 (rule "inEqSimp_antiSymm" (formula "5") (ifseqformula "10"))
                                 (rule "applyEq" (formula "6") (term "0") (ifseqformula "5"))
                                 (rule "inEqSimp_homoInEq1" (formula "6"))
                                 (rule "polySimp_mulLiterals" (formula "6") (term "1,0"))
                                 (rule "polySimp_elimOne" (formula "6") (term "1,0"))
                                 (rule "polySimp_pullOutFactor2" (formula "6") (term "0"))
                                 (rule "add_literals" (formula "6") (term "1,0"))
                                 (rule "times_zero_1" (formula "6") (term "0"))
                                 (rule "leq_literals" (formula "6"))
                                 (rule "true_left" (formula "6"))
                                 (rule "applyEq" (formula "11") (term "0") (ifseqformula "5"))
                                 (rule "inEqSimp_homoInEq1" (formula "11"))
                                 (rule "polySimp_mulLiterals" (formula "11") (term "1,0"))
                                 (rule "polySimp_elimOne" (formula "11") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "11") (term "0"))
                                 (rule "polySimp_pullOutFactor2b" (formula "11") (term "0,0"))
                                 (rule "add_literals" (formula "11") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "11") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "11") (term "0,0"))
                                 (rule "applyEq" (formula "4") (term "1,1,0") (ifseqformula "5"))
                                 (rule "polySimp_pullOutFactor1" (formula "4") (term "1,0"))
                                 (rule "add_literals" (formula "4") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "4") (term "1,0"))
                                 (rule "applyEq" (formula "8") (term "0") (ifseqformula "5"))
                                 (rule "inEqSimp_homoInEq0" (formula "8"))
                                 (rule "polySimp_mulLiterals" (formula "8") (term "1,0"))
                                 (rule "polySimp_elimOne" (formula "8") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "8") (term "0"))
                                 (rule "polySimp_pullOutFactor2b" (formula "8") (term "0,0"))
                                 (rule "add_literals" (formula "8") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "8") (term "1,0,0"))
                                 (rule "add_literals" (formula "8") (term "0,0"))
                                 (rule "applyEq" (formula "10") (term "0") (ifseqformula "5"))
                                 (rule "inEqSimp_homoInEq0" (formula "10"))
                                 (rule "polySimp_mulLiterals" (formula "10") (term "1,0"))
                                 (rule "polySimp_elimOne" (formula "10") (term "1,0"))
                                 (rule "polySimp_pullOutFactor2" (formula "10") (term "0"))
                                 (rule "add_literals" (formula "10") (term "1,0"))
                                 (rule "times_zero_1" (formula "10") (term "0"))
                                 (rule "qeq_literals" (formula "10"))
                                 (rule "true_left" (formula "10"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "10"))
                                 (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                 (rule "polySimp_elimOne" (formula "10") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                 (rule "mul_literals" (formula "8") (term "1"))
                                 (rule "pullOut" (formula "36") (term "0,3,0") (inst "sk=arrayAccess_java_lang_String_1"))
                                 (builtin "Update Simplification" (formula "1"))
                                 (rule "jmod_axiom" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_mulComm1" (formula "1") (term "1,1,0,0"))
                                 (rule "polySimp_homoEq" (formula "1") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                                 (rule "applyEq" (formula "1") (term "0,0,1,0,0,0") (ifseqformula "13"))
                                 (rule "polySimp_mulComm1" (formula "1") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "1,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0"))
                                 (rule "applyEq" (formula "1") (term "1,0,0,0") (ifseqformula "6"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor1" (formula "1") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "1") (term "1,0,0,0,0"))
                                 (rule "times_zero_1" (formula "1") (term "0,0,0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0,0,0"))
                                 (rule "polySimp_invertEq" (formula "1") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "0,0,0"))
                                 (rule "pullOut" (formula "37") (term "1,3,0") (inst "sk=s_3"))
                                 (builtin "Update Simplification" (formula "1"))
                                 (rule "eqSymm" (formula "1"))
                                 (rule "polyDiv_pullOut" (formula "10") (term "0") (inst "polyDivCoeff=quotient_3"))
                                 (rule "polySimp_mulComm1" (formula "10") (term "1,0,0,2,0"))
                                 (rule "polySimp_mulComm0" (formula "10") (term "0,1,0,0,2,0"))
                                 (rule "polySimp_addComm0" (formula "10") (term "2,0"))
                                 (rule "applyEq" (formula "10") (term "0,1,0,1,2,0") (ifseqformula "7"))
                                 (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,2,0"))
                                 (rule "polySimp_elimOne" (formula "10") (term "1,0,1,2,0"))
                                 (rule "polySimp_pullOutFactor2" (formula "10") (term "0,1,2,0"))
                                 (rule "add_literals" (formula "10") (term "1,0,1,2,0"))
                                 (rule "times_zero_1" (formula "10") (term "0,1,2,0"))
                                 (rule "inEqSimp_contradEq7" (formula "10") (term "0,0") (ifseqformula "27"))
                                 (rule "times_zero_1" (formula "10") (term "1,0,0,0,0"))
                                 (rule "add_zero_right" (formula "10") (term "0,0,0,0"))
                                 (rule "leq_literals" (formula "10") (term "0,0,0"))
                                 (rule "concrete_and_2" (formula "10") (term "0,0"))
                                 (rule "ifthenelse_false" (formula "10") (term "0"))
                                 (rule "polySimp_homoEq" (formula "10"))
                                 (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "10") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "10") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                 (rule "polySimp_pullOutFactor1" (formula "10") (term "0,0"))
                                 (rule "add_literals" (formula "10") (term "1,0,0"))
                                 (rule "times_zero_1" (formula "10") (term "0,0"))
                                 (rule "add_zero_left" (formula "10") (term "0"))
                                 (rule "polySimp_invertEq" (formula "10"))
                                 (rule "mul_literals" (formula "10") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                 (rule "polySimp_elimOne" (formula "10") (term "0"))
                                 (rule "polyDiv_zero" (formula "10") (term "0"))
                                 (rule "div_literals" (formula "10") (term "1,0"))
                                 (rule "inEqSimp_contradEq7" (formula "10") (term "0,0") (ifseqformula "27"))
                                 (rule "times_zero_1" (formula "10") (term "1,0,0,0,0"))
                                 (rule "add_zero_right" (formula "10") (term "0,0,0,0"))
                                 (rule "leq_literals" (formula "10") (term "0,0,0"))
                                 (rule "concrete_and_2" (formula "10") (term "0,0"))
                                 (rule "ifthenelse_false" (formula "10") (term "0"))
                                 (rule "eqClose" (formula "10"))
                                 (rule "true_left" (formula "10"))
                                 (rule "polyDiv_pullOut" (formula "10") (term "0") (inst "polyDivCoeff=quotient_3 * -1"))
                                 (rule "polySimp_mulLiterals" (formula "10") (term "0,1,0,0,2,0"))
                                 (rule "polySimp_elimOneLeft1" (formula "10") (term "1,0,0,2,0"))
                                 (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,2,0"))
                                 (rule "polySimp_addComm0" (formula "10") (term "2,0"))
                                 (rule "applyEq" (formula "10") (term "1,0,1,2,0") (ifseqformula "7"))
                                 (rule "polySimp_pullOutFactor1" (formula "10") (term "0,1,2,0"))
                                 (rule "add_literals" (formula "10") (term "1,0,1,2,0"))
                                 (rule "times_zero_1" (formula "10") (term "0,1,2,0"))
                                 (rule "inEqSimp_contradEq7" (formula "10") (term "0,0") (ifseqformula "26"))
                                 (rule "times_zero_1" (formula "10") (term "1,0,0,0,0"))
                                 (rule "add_zero_right" (formula "10") (term "0,0,0,0"))
                                 (rule "leq_literals" (formula "10") (term "0,0,0"))
                                 (rule "concrete_and_2" (formula "10") (term "0,0"))
                                 (rule "ifthenelse_false" (formula "10") (term "0"))
                                 (rule "polySimp_homoEq" (formula "10"))
                                 (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "10") (term "1,0"))
                                 (rule "polySimp_mulAssoc" (formula "10") (term "0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "10") (term "0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "10") (term "0,1,0"))
                                 (rule "polySimp_elimOne" (formula "10") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                 (rule "polySimp_sepNegMonomial" (formula "10"))
                                 (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                 (rule "polySimp_elimOne" (formula "10") (term "0"))
                                 (rule "polyDiv_zero" (formula "10") (term "0"))
                                 (rule "div_literals" (formula "10") (term "1,0"))
                                 (rule "inEqSimp_contradEq7" (formula "10") (term "0,0") (ifseqformula "26"))
                                 (rule "times_zero_1" (formula "10") (term "1,0,0,0,0"))
                                 (rule "add_literals" (formula "10") (term "0,0,0,0"))
                                 (rule "leq_literals" (formula "10") (term "0,0,0"))
                                 (rule "concrete_and_2" (formula "10") (term "0,0"))
                                 (rule "ifthenelse_false" (formula "10") (term "0"))
                                 (rule "polySimp_homoEq" (formula "10"))
                                 (rule "times_zero_2" (formula "10") (term "1,0"))
                                 (rule "add_zero_right" (formula "10") (term "0"))
                                 (rule "polySimp_sepPosMonomial" (formula "10"))
                                 (rule "applyEqRigid" (formula "7") (term "1,0") (ifseqformula "10"))
                                 (rule "polySimp_mulAssoc" (formula "7") (term "0"))
                                 (rule "polySimp_homoEq" (formula "7"))
                                 (rule "polySimp_mulLiterals" (formula "7") (term "1,0"))
                                 (rule "polySimp_elimOne" (formula "7") (term "1,0"))
                                 (rule "applyEq" (formula "13") (term "0,1") (ifseqformula "10"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1"))
                                 (rule "polySimp_elimOne" (formula "13") (term "1"))
                                 (rule "polySimp_sepPosMonomial" (formula "7"))
                                 (rule "polySimp_mulLiterals" (formula "7") (term "1"))
                                 (rule "polySimp_elimOne" (formula "7") (term "1"))
                                 (rule "applyEq" (formula "11") (term "0") (ifseqformula "7"))
                                 (rule "inEqSimp_homoInEq0" (formula "11"))
                                 (rule "polySimp_pullOutFactor1" (formula "11") (term "0"))
                                 (rule "add_literals" (formula "11") (term "1,0"))
                                 (rule "times_zero_1" (formula "11") (term "0"))
                                 (rule "qeq_literals" (formula "11"))
                                 (rule "true_left" (formula "11"))
                                 (rule "applyEq" (formula "11") (term "0") (ifseqformula "7"))
                                 (rule "inEqSimp_homoInEq1" (formula "11"))
                                 (rule "polySimp_addComm1" (formula "11") (term "0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0"))
                                 (rule "add_literals" (formula "11") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "11") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "11") (term "0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "11"))
                                 (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                                 (rule "polySimp_elimOne" (formula "11") (term "0"))
                                 (rule "pullOut" (formula "2") (term "0,3,0,0,0,0") (inst "sk=s_4"))
                                 (builtin "Update Simplification" (formula "2"))
                                 (rule "eqSymm" (formula "2"))
                                 (rule "ifthenelse_split" (formula "3") (term "0"))
                                 (branch "   jmod({self.elements[jmod(result_0, self.size)]:=s}
         s_4.hashCode@(java.lang.String)(),
       self.size)
= 0 TRUE"
                                    (rule "applyEq" (formula "3") (term "2,0,0") (ifseqformula "4"))
                                    (rule "applyEq" (formula "15") (term "0,0,0") (ifseqformula "4"))
                                    (rule "applyEq" (formula "37") (term "2,0") (ifseqformula "4"))
                                    (rule "applyEq" (formula "32") (term "0,0") (ifseqformula "4"))
                                    (rule "applyEq" (formula "20") (term "0,1") (ifseqformula "4"))
                                    (rule "applyEq" (formula "24") (term "0,0") (ifseqformula "4"))
                                    (rule "applyEq" (formula "22") (term "0,0,0") (ifseqformula "4"))
                                    (rule "applyEq" (formula "19") (term "0,0,0") (ifseqformula "4"))
                                    (rule "applyEq" (formula "17") (term "0,0,1,0,0") (ifseqformula "4"))
                                    (rule "applyEq" (formula "1") (term "1") (ifseqformula "4"))
                                    (rule "applyEq" (formula "36") (term "0") (ifseqformula "4"))
                                    (rule "applyEq" (formula "35") (term "0,0,1,0") (ifseqformula "4"))
                                    (rule "applyEq" (formula "2") (term "1") (ifseqformula "4"))
                                    (rule "applyEq" (formula "21") (term "0,1,0,1") (ifseqformula "4"))
                                    (rule "applyEqRigid" (formula "37") (term "1,3,0") (ifseqformula "1"))
                                    (rule "applyEqRigid" (formula "3") (term "0,3,0,0") (ifseqformula "2"))
                                    (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "20"))
                                    (rule "polySimp_rightDist" (formula "21") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0"))
                                    (rule "polySimp_elimOne" (formula "21") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "21") (term "0"))
                                    (rule "polySimp_rightDist" (formula "21") (term "0,0,0"))
                                    (rule "mul_literals" (formula "21") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor2b" (formula "21") (term "0,0"))
                                    (rule "add_literals" (formula "21") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "21") (term "1,0,0"))
                                    (rule "add_literals" (formula "21") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "21"))
                                    (rule "mul_literals" (formula "21") (term "1"))
                                    (rule "jdiv_axiom" (formula "22") (term "0"))
                                    (rule "eqSymm" (formula "22"))
                                    (rule "replace_known_left" (formula "22") (term "0,0") (ifseqformula "25"))
                                    (rule "ifthenelse_true" (formula "22") (term "0"))
                                    (rule "eqSymm" (formula "22"))
                                    (rule "applyEq" (formula "23") (term "0") (ifseqformula "22"))
                                    (rule "applyEq" (formula "22") (term "1") (ifseqformula "19"))
                                    (rule "div_axiom" (formula "19") (term "0") (inst "quotient=quotient_6"))
                                    (rule "polySimp_mulComm0" (formula "19") (term "0,1,0,1"))
                                    (rule "polySimp_mulComm0" (formula "19") (term "0,1,1,1"))
                                    (rule "polySimp_mulComm0" (formula "19") (term "0,2,1,1"))
                                    (rule "polySimp_mulComm0" (formula "19") (term "1,1,1,1,1"))
                                    (rule "applyEq" (formula "19") (term "0,0,0,1") (ifseqformula "20"))
                                    (rule "inEqSimp_contradEq7" (formula "19") (term "0") (ifseqformula "27"))
                                    (rule "times_zero_1" (formula "19") (term "1,0,0,0"))
                                    (rule "add_zero_right" (formula "19") (term "0,0,0"))
                                    (rule "leq_literals" (formula "19") (term "0,0"))
                                    (rule "concrete_and_2" (formula "19") (term "0"))
                                    (rule "concrete_or_2" (formula "19"))
                                    (rule "andLeft" (formula "19"))
                                    (rule "andLeft" (formula "19"))
                                    (rule "applyEqRigid" (formula "23") (term "1,0") (ifseqformula "19"))
                                    (rule "applyEq" (formula "17") (term "1,0,1,1,0,0") (ifseqformula "19"))
                                    (rule "applyEq" (formula "37") (term "1,0,1,1,0") (ifseqformula "19"))
                                    (rule "applyEqRigid" (formula "23") (term "1,0") (ifseqformula "19"))
                                    (rule "replace_known_left" (formula "21") (term "1") (ifseqformula "23"))
                                    (rule "applyEqRigid" (formula "24") (term "1") (ifseqformula "19"))
                                    (rule "applyEqRigid" (formula "22") (term "1") (ifseqformula "19"))
                                    (rule "inEqSimp_subsumption1" (formula "21") (term "0") (ifseqformula "28"))
                                    (rule "leq_literals" (formula "21") (term "0,0"))
                                    (rule "concrete_or_1" (formula "21") (term "0"))
                                    (rule "ifthenelse_true_for" (formula "21"))
                                    (rule "true_left" (formula "21"))
                                    (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "20"))
                                    (rule "polySimp_rightDist" (formula "22") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "22") (term "1,0,0"))
                                    (rule "polySimp_elimOne" (formula "22") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "22") (term "0"))
                                    (rule "polySimp_rightDist" (formula "22") (term "0,0,0"))
                                    (rule "mul_literals" (formula "22") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor2b" (formula "22") (term "0,0"))
                                    (rule "add_literals" (formula "22") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "22") (term "1,0,0"))
                                    (rule "add_literals" (formula "22") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "22"))
                                    (rule "mul_literals" (formula "22") (term "1"))
                                    (rule "only_created_object_are_referenced_by_arrays_non_null" (formula "17") (term "0,0") (ifseqformula "18") (ifseqformula "24") (ifseqformula "36"))
                                    (rule "resolvequery" (formula "38") (term "3,0") (inst "queryValue=java_lang_Stringequals_3"))
                                    (builtin "Update Simplification" (formula "40"))
                                    (builtin "Update Simplification" (formula "1"))
                                    (rule "eqSymm" (formula "2") (term "0,2,0,3"))
                                    (rule "apply_eq_boolean" (formula "1") (term "1") (ifseqformula "40"))
                                    (rule "false_to_not_true" (formula "1"))
                                    (rule "notLeft" (formula "1"))
                                    (rule "apply_eq_boolean_rigid" (formula "1") (term "0,0,2,0,3") (ifseqformula "40"))
                                    (rule "eqSymm" (formula "1") (term "0,2,0,3"))
                                    (rule "false_to_not_true" (formula "1") (term "0,2,0,3"))
                                    (rule "variableDeclaration" (formula "1") (term "3") (newnames "equals_2"))
                                    (rule "variableDeclaration" (formula "1") (term "3") (newnames "arg0_5"))
                                    (rule "variableDeclaration" (formula "1") (term "3") (newnames "queryReceiver_14"))
                                    (rule "emptyModality" (formula "1") (term "3"))
                                    (builtin "Update Simplification" (formula "1"))
                                    (rule "resolvequery" (formula "22") (term "0,0") (inst "queryValue=java_lang_StringhashCode_12"))
                                    (rule "eqSymm" (formula "23") (term "0,1,0"))
                                    (rule "applyEq" (formula "26") (term "0,0") (ifseqformula "22"))
                                    (rule "applyEq" (formula "28") (term "0") (ifseqformula "22"))
                                    (rule "applyEq" (formula "21") (term "1") (ifseqformula "22"))
                                    (rule "applyEq" (formula "18") (term "0,1,0,0") (ifseqformula "22"))
                                    (rule "applyEq" (formula "25") (term "1,0,1") (ifseqformula "22"))
                                    (rule "applyEq" (formula "40") (term "0,1,0") (ifseqformula "22"))
                                    (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "21"))
                                    (rule "polySimp_rightDist" (formula "25") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "25") (term "1,0,0"))
                                    (rule "polySimp_elimOne" (formula "25") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "25") (term "0"))
                                    (rule "polySimp_rightDist" (formula "25") (term "0,0,0"))
                                    (rule "mul_literals" (formula "25") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor2b" (formula "25") (term "0,0"))
                                    (rule "add_literals" (formula "25") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "25") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "25") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "25"))
                                    (rule "mul_literals" (formula "25") (term "1"))
                                    (rule "variableDeclaration" (formula "23") (newnames "hcode_12"))
                                    (rule "variableDeclaration" (formula "23") (newnames "queryReceiver_15"))
                                    (rule "emptyModality" (formula "23"))
                                    (rule "resolvequery" (formula "4") (term "3,0,0") (inst "queryValue=java_lang_StringhashCode_13"))
                                    (builtin "Update Simplification" (formula "6"))
                                    (builtin "Update Simplification" (formula "4"))
                                    (rule "eqSymm" (formula "5") (term "0,1,0,3"))
                                    (rule "jmod_axiom" (formula "6") (term "0"))
                                    (rule "polySimp_mulComm1" (formula "6") (term "1,0"))
                                    (rule "polySimp_sepNegMonomial" (formula "6"))
                                    (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                    (rule "polySimp_elimOne" (formula "6") (term "0"))
                                    (rule "variableDeclaration" (formula "5") (term "3") (newnames "hcode_13"))
                                    (rule "variableDeclaration" (formula "5") (term "3") (newnames "queryReceiver_16"))
                                    (rule "emptyModality" (formula "5") (term "3"))
                                    (builtin "Update Simplification" (formula "5"))
                                    (rule "boxToDiamond" (formula "1") (term "5"))
                                    (builtin "Update Simplification" (formula "1"))
                                    (rule "double_not" (formula "1") (term "0,5,0"))
                                    (rule "notLeft" (formula "1"))
                                    (rule "div_axiom" (formula "25") (term "0") (inst "quotient=quotient_14"))
                                    (rule "polySimp_mulComm0" (formula "25") (term "0,1,0,1"))
                                    (rule "polySimp_mulComm0" (formula "25") (term "1,1,1,1,1"))
                                    (rule "polySimp_mulComm0" (formula "25") (term "0,1,1,1"))
                                    (rule "polySimp_mulComm0" (formula "25") (term "0,2,1,1"))
                                    (rule "applyEq" (formula "25") (term "0,0,0,1") (ifseqformula "26"))
                                    (rule "inEqSimp_contradEq7" (formula "25") (term "0") (ifseqformula "32"))
                                    (rule "times_zero_1" (formula "25") (term "1,0,0,0"))
                                    (rule "add_zero_right" (formula "25") (term "0,0,0"))
                                    (rule "leq_literals" (formula "25") (term "0,0"))
                                    (rule "concrete_and_2" (formula "25") (term "0"))
                                    (rule "concrete_or_2" (formula "25"))
                                    (rule "andLeft" (formula "25"))
                                    (rule "andLeft" (formula "25"))
                                    (rule "applyEqRigid" (formula "29") (term "1,0") (ifseqformula "25"))
                                    (rule "replace_known_left" (formula "27") (term "1") (ifseqformula "29"))
                                    (rule "applyEqRigid" (formula "45") (term "1,0,1,1,0") (ifseqformula "25"))
                                    (rule "applyEqRigid" (formula "19") (term "1,0,1,1,0,0") (ifseqformula "25"))
                                    (rule "applyEq" (formula "22") (term "1,0") (ifseqformula "25"))
                                    (rule "applyEqRigid" (formula "21") (term "1") (ifseqformula "24"))
                                    (rule "applyEqRigid" (formula "27") (term "1") (ifseqformula "24"))
                                    (rule "applyEq" (formula "29") (term "1") (ifseqformula "24"))
                                    (rule "inEqSimp_subsumption1" (formula "26") (term "0") (ifseqformula "33"))
                                    (rule "leq_literals" (formula "26") (term "0,0"))
                                    (rule "concrete_or_1" (formula "26") (term "0"))
                                    (rule "ifthenelse_true_for" (formula "26"))
                                    (rule "true_left" (formula "26"))
                                    (rule "inEqSimp_exactShadow3" (formula "27") (ifseqformula "25"))
                                    (rule "polySimp_rightDist" (formula "27") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "27") (term "1,0,0"))
                                    (rule "polySimp_elimOne" (formula "27") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "27") (term "0"))
                                    (rule "polySimp_rightDist" (formula "27") (term "0,0,0"))
                                    (rule "mul_literals" (formula "27") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor2b" (formula "27") (term "0,0"))
                                    (rule "add_literals" (formula "27") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "27") (term "1,0,0"))
                                    (rule "add_literals" (formula "27") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "27"))
                                    (rule "mul_literals" (formula "27") (term "1"))
                                    (rule "jdiv_axiom" (formula "28") (term "0"))
                                    (rule "eqSymm" (formula "28"))
                                    (rule "replace_known_left" (formula "28") (term "0,0") (ifseqformula "31"))
                                    (rule "ifthenelse_true" (formula "28") (term "0"))
                                    (rule "eqSymm" (formula "28"))
                                    (rule "applyEq" (formula "28") (term "0") (ifseqformula "29"))
                                    (rule "eqSymm" (formula "28"))
                                    (rule "methodCallWithAssignment" (formula "23") (term "1") (inst "#v0=j"))
                                    (branch " Normal Execution (queryReceiver_15 != null)"
                                       (builtin "Update Simplification" (formula "39"))
                                       (rule "variableDeclaration" (formula "23") (term "1") (newnames "j_19"))
                                       (rule "jdiv_axiom" (formula "5") (term "0,0"))
                                       (rule "eqSymm" (formula "5"))
                                       (rule "polyDiv_pullOut" (formula "5") (term "1,0") (inst "polyDivCoeff=jdiv(java_lang_StringhashCode_13,
     self.size@(StringSet))"))
                                       (rule "polySimp_mulComm1" (formula "5") (term "1,0,0,2,1,0"))
                                       (rule "polySimp_addComm0" (formula "5") (term "2,1,0"))
                                       (rule "applyEq" (formula "5") (term "0,1,0,1,2,1,0") (ifseqformula "6"))
                                       (rule "polySimp_pullOutFactor1" (formula "5") (term "0,1,2,1,0"))
                                       (rule "add_literals" (formula "5") (term "1,0,1,2,1,0"))
                                       (rule "times_zero_1" (formula "5") (term "0,1,2,1,0"))
                                       (rule "polySimp_addComm0" (formula "5") (term "2,1,0"))
                                       (rule "inEqSimp_contradEq7" (formula "5") (term "0,1,0") (ifseqformula "33"))
                                       (rule "times_zero_1" (formula "5") (term "1,0,0,0,1,0"))
                                       (rule "add_literals" (formula "5") (term "0,0,0,1,0"))
                                       (rule "leq_literals" (formula "5") (term "0,0,1,0"))
                                       (rule "concrete_and_2" (formula "5") (term "0,1,0"))
                                       (rule "ifthenelse_false" (formula "5") (term "1,0"))
                                       (rule "polyDiv_zero" (formula "5") (term "0,1,0"))
                                       (rule "div_literals" (formula "5") (term "1,0,1,0"))
                                       (rule "polySimp_addComm0" (formula "5") (term "1,0"))
                                       (rule "inEqSimp_contradEq7" (formula "5") (term "0,1,1,0") (ifseqformula "33"))
                                       (rule "times_zero_1" (formula "5") (term "1,0,0,0,1,1,0"))
                                       (rule "add_literals" (formula "5") (term "0,0,0,1,1,0"))
                                       (rule "leq_literals" (formula "5") (term "0,0,1,1,0"))
                                       (rule "concrete_and_2" (formula "5") (term "0,1,1,0"))
                                       (rule "ifthenelse_false" (formula "5") (term "1,1,0"))
                                       (rule "add_zero_right" (formula "5") (term "1,0"))
                                       (rule "polyDiv_pullOut" (formula "5") (term "0,2,0") (inst "polyDivCoeff=  jdiv(java_lang_StringhashCode_13,
       self.size@(StringSet))
* -1"))
                                       (rule "polySimp_mulLiterals" (formula "5") (term "0,1,0,0,2,0,2,0"))
                                       (rule "polySimp_elimOneLeft1" (formula "5") (term "1,0,0,2,0,2,0"))
                                       (rule "polySimp_addComm0" (formula "5") (term "2,0,2,0"))
                                       (rule "applyEq" (formula "5") (term "1,0,1,2,0,2,0") (ifseqformula "6"))
                                       (rule "polySimp_pullOutFactor2" (formula "5") (term "0,1,2,0,2,0"))
                                       (rule "add_literals" (formula "5") (term "1,0,1,2,0,2,0"))
                                       (rule "times_zero_1" (formula "5") (term "0,1,2,0,2,0"))
                                       (rule "polySimp_addComm0" (formula "5") (term "2,0,2,0"))
                                       (rule "inEqSimp_contradEq7" (formula "5") (term "0,0,2,0") (ifseqformula "33"))
                                       (rule "mul_literals" (formula "5") (term "1,0,0,0,0,2,0"))
                                       (rule "add_literals" (formula "5") (term "0,0,0,0,2,0"))
                                       (rule "leq_literals" (formula "5") (term "0,0,0,2,0"))
                                       (rule "concrete_and_2" (formula "5") (term "0,0,2,0"))
                                       (rule "ifthenelse_false" (formula "5") (term "0,2,0"))
                                       (rule "polySimp_mulComm0" (formula "5") (term "2,0"))
                                       (rule "polySimp_rightDist" (formula "5") (term "2,0"))
                                       (rule "polySimp_mulLiterals" (formula "5") (term "1,2,0"))
                                       (rule "polySimp_elimOne" (formula "5") (term "1,2,0"))
                                       (rule "polySimp_mulComm0" (formula "5") (term "0,2,0"))
                                       (rule "polyDiv_zero" (formula "5") (term "0,0,2,0"))
                                       (rule "div_literals" (formula "5") (term "1,0,0,2,0"))
                                       (rule "polySimp_addComm0" (formula "5") (term "2,0"))
                                       (rule "inEqSimp_contradEq7" (formula "5") (term "0,0,1,2,0") (ifseqformula "33"))
                                       (rule "times_zero_1" (formula "5") (term "1,0,0,0,0,1,2,0"))
                                       (rule "add_literals" (formula "5") (term "0,0,0,0,1,2,0"))
                                       (rule "leq_literals" (formula "5") (term "0,0,0,1,2,0"))
                                       (rule "concrete_and_2" (formula "5") (term "0,0,1,2,0"))
                                       (rule "ifthenelse_false" (formula "5") (term "0,1,2,0"))
                                       (rule "times_zero_2" (formula "5") (term "1,2,0"))
                                       (rule "add_zero_right" (formula "5") (term "2,0"))
                                       (rule "ifthenelse_same_branches" (formula "5") (term "0"))
                                       (rule "eqClose" (formula "5"))
                                       (rule "true_left" (formula "5"))
                                       (rule "boxToDiamond" (formula "4") (term "4"))
                                       (builtin "Update Simplification" (formula "4"))
                                       (rule "notLeft" (formula "4"))
                                       (rule "methodCallWithAssignment" (formula "39") (term "5") (inst "#v0=b"))
                                       (branch " Normal Execution (queryReceiver_14 != null)"
                                          (builtin "Update Simplification" (formula "39"))
                                          (rule "variableDeclaration" (formula "39") (term "5") (newnames "b_7"))
                                          (rule "variableDeclarationAssign" (formula "39") (term "5"))
                                          (rule "variableDeclaration" (formula "39") (term "5") (newnames "arg0_7"))
                                          (rule "assignment" (formula "39") (term "5"))
                                          (builtin "Update Simplification" (formula "39"))
                                          (rule "boxToDiamond" (formula "22") (term "1"))
                                          (builtin "Update Simplification" (formula "22"))
                                          (rule "notLeft" (formula "22"))
                                          (rule "polySimp_critPair" (formula "4") (ifseqformula "10"))
                                          (rule "polySimp_mulComm0" (formula "4") (term "0,1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "4") (term "1,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                                          (rule "polySimp_mulComm1" (formula "4") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "4") (term "0,1,0,0"))
                                          (rule "polySimp_mulAssoc" (formula "4") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                                          (rule "polySimp_mulComm1" (formula "4") (term "1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "4") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                          (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                                          (rule "add_literals" (formula "4") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "4") (term "1,0"))
                                          (rule "add_zero_right" (formula "4") (term "0"))
                                          (rule "polySimp_addComm0" (formula "4") (term "0"))
                                          (rule "polySimp_sepNegMonomial" (formula "4"))
                                          (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                          (rule "polySimp_elimOne" (formula "4") (term "0"))
                                          (rule "methodCallWithAssignment" (formula "39") (term "4") (inst "#v0=j"))
                                          (branch " Normal Execution (queryReceiver_16 != null)"
                                             (builtin "Update Simplification" (formula "39"))
                                             (rule "variableDeclaration" (formula "39") (term "4") (newnames "j_27"))
                                             (rule "polySimp_critPair" (formula "5") (ifseqformula "4"))
                                             (rule "polySimp_mulComm0" (formula "5") (term "1,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "5") (term "0,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                                             (rule "polySimp_mulComm1" (formula "5") (term "1,1,0"))
                                             (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                                             (rule "polySimp_mulComm1" (formula "5") (term "1,0,0"))
                                             (rule "polySimp_mulAssoc" (formula "5") (term "0,0,0"))
                                             (rule "polySimp_mulAssoc" (formula "5") (term "0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                             (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "5") (term "0"))
                                             (rule "add_literals" (formula "5") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "5") (term "1,0"))
                                             (rule "add_zero_right" (formula "5") (term "0"))
                                             (rule "polySimp_addComm0" (formula "5") (term "0"))
                                             (rule "apply_eq_monomials" (formula "5") (term "1,0") (ifseqformula "12"))
                                             (rule "polySimp_rightDist" (formula "5") (term "0,1,0"))
                                             (rule "polySimp_mulComm1" (formula "5") (term "0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "5") (term "0,0,0,1,0"))
                                             (rule "polySimp_mulAssoc" (formula "5") (term "1,0,1,0"))
                                             (rule "polySimp_mulComm1" (formula "5") (term "0,1,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "5") (term "1,0,1,0"))
                                             (rule "polySimp_mulComm1" (formula "5") (term "1,0,1,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "5") (term "1,0"))
                                             (rule "add_literals" (formula "5") (term "1,1,1,0"))
                                             (rule "times_zero_1" (formula "5") (term "1,1,0"))
                                             (rule "add_zero_right" (formula "5") (term "1,0"))
                                             (rule "polySimp_pullOutFactor1" (formula "5") (term "0"))
                                             (rule "add_literals" (formula "5") (term "1,0"))
                                             (rule "times_zero_1" (formula "5") (term "0"))
                                             (rule "eqClose" (formula "5"))
                                             (rule "true_left" (formula "5"))
                                             (rule "only_created_object_are_referenced_by_arrays_non_null" (formula "19") (term "0,0") (ifseqformula "20") (ifseqformula "28") (ifseqformula "44"))
                                             (builtin "Use Operation Contract" (formula "38") (term "1") (newnames "result_21") (contract "hashCode;;"))
                                             (branch " Pre"
                                                (builtin "Update Simplification" (formula "38"))
                                                (rule "replace_known_left" (formula "38") (term "0") (ifseqformula "28"))
                                                (rule "concrete_and_1" (formula "38"))
                                                (rule "replace_known_right" (formula "38") (term "0,1") (ifseqformula "45"))
                                                (rule "concrete_not_2" (formula "38") (term "1"))
                                                (rule "concrete_and_3" (formula "38"))
                                                (rule "close" (formula "38") (ifseqformula "37"))
                                             )
                                             (branch " Post"
                                                (builtin "Update Simplification" (formula "38"))
                                                (rule "inInt" (formula "38") (term "1,1,0,0"))
                                                (rule "concrete_and_3" (formula "38") (term "1,0,0"))
                                                (rule "impRight" (formula "38"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "2"))
                                                (rule "eqSymm" (formula "2"))
                                                (rule "applyEq" (formula "2") (term "0") (ifseqformula "19"))
                                                (rule "eqSymm" (formula "2"))
                                                (rule "applyEq" (formula "40") (term "0") (ifseqformula "2"))
                                                (rule "blockEmpty" (formula "40") (term "1"))
                                                (rule "assignment" (formula "40") (term "1"))
                                                (builtin "Update Simplification" (formula "40"))
                                                (rule "methodCallEmpty" (formula "40") (term "1"))
                                                (rule "emptyModality" (formula "40") (term "1"))
                                                (builtin "Update Simplification" (formula "40"))
                                                (rule "notRight" (formula "40"))
                                                (rule "eqSymm" (formula "1"))
                                                (rule "applyEq" (formula "43") (term "0,1,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "10") (term "0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "42") (term "0,3") (ifseqformula "1"))
                                                (rule "applyEq" (formula "41") (term "0,2") (ifseqformula "1"))
                                                (rule "applyEq" (formula "18") (term "0,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "6") (term "0,1,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "7") (term "1,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "16") (term "1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "20") (term "1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "12") (term "1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "14") (term "1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "3") (term "1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "18") (term "0") (ifseqformula "30"))
                                                (rule "eqSymm" (formula "18"))
                                                (rule "applyEqRigid" (formula "14") (term "1,0") (ifseqformula "18"))
                                                (rule "applyEq" (formula "29") (term "0") (ifseqformula "14"))
                                                (rule "inEqSimp_homoInEq1" (formula "29"))
                                                (rule "polySimp_addComm1" (formula "29") (term "0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0"))
                                                (rule "add_literals" (formula "29") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "29") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "29") (term "0,0"))
                                                (rule "applyEq" (formula "22") (term "0,1,1,0,0") (ifseqformula "14"))
                                                (rule "polySimp_pullOutFactor1" (formula "22") (term "1,0,0"))
                                                (rule "add_literals" (formula "22") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "22") (term "1,0,0"))
                                                (rule "applyEq" (formula "46") (term "0,1,1,0") (ifseqformula "14"))
                                                (rule "polySimp_pullOutFactor1" (formula "46") (term "1,0"))
                                                (rule "add_literals" (formula "46") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "46") (term "1,0"))
                                                (rule "close" (formula "46") (ifseqformula "13"))
                                             )
                                             (branch " Exceptional Post"
                                                (builtin "Update Simplification" (formula "38"))
                                                (rule "impRight" (formula "38"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "2"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "close" (formula "41") (ifseqformula "3"))
                                             )
                                          )
                                          (branch " Null Reference (queryReceiver_16 = null)"
                                             (builtin "Update Simplification" (formula "40"))
                                             (builtin "Update Simplification" (formula "1"))
                                             (rule "close" (formula "46") (ifseqformula "1"))
                                          )
                                       )
                                       (branch " Null Reference (queryReceiver_14 = null)"
                                          (builtin "Update Simplification" (formula "40"))
                                          (builtin "Update Simplification" (formula "1"))
                                          (rule "close" (formula "45") (ifseqformula "1"))
                                       )
                                    )
                                    (branch " Null Reference (queryReceiver_15 = null)"
                                       (builtin "Update Simplification" (formula "24"))
                                       (builtin "Update Simplification" (formula "23"))
                                       (rule "close" (formula "45") (ifseqformula "23"))
                                    )
                                 )
                                 (branch "   jmod({self.elements[jmod(result_0, self.size)]:=s}
         s_4.hashCode@(java.lang.String)(),
       self.size)
= 0 FALSE"
                                    (rule "pullOut" (formula "3") (term "0,3,0,1,0") (inst "sk=s_5"))
                                    (builtin "Update Simplification" (formula "3"))
                                    (rule "eqSymm" (formula "3"))
                                    (rule "resolvequery" (formula "36") (term "0,1,0") (inst "queryValue=java_lang_StringhashCode_14"))
                                    (rule "eqSymm" (formula "2") (term "0,1,0"))
                                    (rule "applyEq" (formula "26") (term "0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "22") (term "1") (ifseqformula "1"))
                                    (rule "applyEq" (formula "24") (term "0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "21") (term "0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "23") (term "1,0,1") (ifseqformula "1"))
                                    (rule "applyEq" (formula "19") (term "0,1,0,0") (ifseqformula "1"))
                                    (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "22"))
                                    (rule "polySimp_rightDist" (formula "23") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0"))
                                    (rule "polySimp_elimOne" (formula "23") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "23") (term "0"))
                                    (rule "polySimp_rightDist" (formula "23") (term "0,0,0"))
                                    (rule "mul_literals" (formula "23") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor2b" (formula "23") (term "0,0"))
                                    (rule "add_literals" (formula "23") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "23") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "23") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "23"))
                                    (rule "mul_literals" (formula "23") (term "1"))
                                    (rule "variableDeclaration" (formula "2") (newnames "hcode_14"))
                                    (rule "variableDeclaration" (formula "2") (newnames "queryReceiver_17"))
                                    (rule "emptyModality" (formula "2"))
                                    (rule "resolvequery" (formula "35") (term "3,0,0") (inst "queryValue=java_lang_StringhashCode_15"))
                                    (builtin "Update Simplification" (formula "37"))
                                    (builtin "Update Simplification" (formula "1"))
                                    (rule "eqSymm" (formula "2") (term "0,1,0,3"))
                                    (rule "jmod_axiom" (formula "37") (term "0"))
                                    (rule "polySimp_mulComm1" (formula "37") (term "1,0"))
                                    (rule "polySimp_sepNegMonomial" (formula "37"))
                                    (rule "polySimp_mulLiterals" (formula "37") (term "0"))
                                    (rule "polySimp_elimOne" (formula "37") (term "0"))
                                    (rule "variableDeclaration" (formula "2") (term "3") (newnames "hcode_15"))
                                    (rule "variableDeclaration" (formula "2") (term "3") (newnames "queryReceiver_18"))
                                    (rule "emptyModality" (formula "2") (term "3"))
                                    (builtin "Update Simplification" (formula "2"))
                                    (rule "applyEq" (formula "2") (term "0") (ifseqformula "6"))
                                    (rule "resolvequery" (formula "42") (term "3,0") (inst "queryValue=java_lang_Stringequals_4"))
                                    (builtin "Update Simplification" (formula "44"))
                                    (builtin "Update Simplification" (formula "1"))
                                    (rule "eqSymm" (formula "2") (term "0,2,0,3"))
                                    (rule "apply_eq_boolean_rigid" (formula "1") (term "1") (ifseqformula "44"))
                                    (rule "false_to_not_true" (formula "1"))
                                    (rule "notLeft" (formula "1"))
                                    (rule "apply_eq_boolean_rigid" (formula "1") (term "0,0,2,0,3") (ifseqformula "44"))
                                    (rule "eqSymm" (formula "1") (term "0,2,0,3"))
                                    (rule "false_to_not_true" (formula "1") (term "0,2,0,3"))
                                    (rule "variableDeclaration" (formula "1") (term "3") (newnames "equals_3"))
                                    (rule "variableDeclaration" (formula "1") (term "3") (newnames "arg0_6"))
                                    (rule "variableDeclaration" (formula "1") (term "3") (newnames "queryReceiver_19"))
                                    (rule "emptyModality" (formula "1") (term "3"))
                                    (builtin "Update Simplification" (formula "1"))
                                    (rule "applyEq" (formula "1") (term "0") (ifseqformula "6"))
                                    (rule "resolvequery" (formula "9") (term "3,0,1,0") (inst "queryValue=java_lang_StringhashCode_16"))
                                    (builtin "Update Simplification" (formula "11"))
                                    (builtin "Update Simplification" (formula "9"))
                                    (rule "eqSymm" (formula "10") (term "0,1,0,3"))
                                    (rule "jmod_axiom" (formula "11") (term "1,0"))
                                    (rule "polySimp_mulComm1" (formula "11") (term "1,1,0"))
                                    (rule "variableDeclaration" (formula "10") (term "3") (newnames "hcode_16"))
                                    (rule "variableDeclaration" (formula "10") (term "3") (newnames "queryReceiver_20"))
                                    (rule "emptyModality" (formula "10") (term "3"))
                                    (builtin "Update Simplification" (formula "10"))
                                    (rule "applyEq" (formula "10") (term "0") (ifseqformula "8"))
                                    (rule "jdiv_axiom" (formula "29") (term "0"))
                                    (rule "eqSymm" (formula "29"))
                                    (rule "replace_known_left" (formula "29") (term "0,0") (ifseqformula "32"))
                                    (rule "ifthenelse_true" (formula "29") (term "0"))
                                    (rule "eqSymm" (formula "29"))
                                    (rule "applyEq" (formula "29") (term "0") (ifseqformula "30"))
                                    (rule "eqSymm" (formula "29"))
                                    (rule "div_axiom" (formula "26") (term "0") (inst "quotient=quotient_15"))
                                    (rule "polySimp_mulComm0" (formula "26") (term "0,1,0,1"))
                                    (rule "polySimp_mulComm0" (formula "26") (term "0,2,1,1"))
                                    (rule "polySimp_mulComm0" (formula "26") (term "1,1,1,1,1"))
                                    (rule "polySimp_mulComm0" (formula "26") (term "0,1,1,1"))
                                    (rule "applyEq" (formula "26") (term "0,0,0,1") (ifseqformula "27"))
                                    (rule "inEqSimp_contradEq7" (formula "26") (term "0") (ifseqformula "34"))
                                    (rule "times_zero_1" (formula "26") (term "1,0,0,0"))
                                    (rule "add_zero_right" (formula "26") (term "0,0,0"))
                                    (rule "leq_literals" (formula "26") (term "0,0"))
                                    (rule "concrete_and_2" (formula "26") (term "0"))
                                    (rule "concrete_or_2" (formula "26"))
                                    (rule "andLeft" (formula "26"))
                                    (rule "andLeft" (formula "26"))
                                    (rule "applyEqRigid" (formula "47") (term "1,0,1,1,0") (ifseqformula "26"))
                                    (rule "applyEq" (formula "30") (term "1,0") (ifseqformula "26"))
                                    (rule "applyEq" (formula "30") (term "1,0") (ifseqformula "26"))
                                    (rule "replace_known_left" (formula "28") (term "1") (ifseqformula "30"))
                                    (rule "applyEqRigid" (formula "24") (term "1,0,1,1,0,0") (ifseqformula "26"))
                                    (rule "applyEqRigid" (formula "29") (term "1") (ifseqformula "26"))
                                    (rule "applyEq" (formula "31") (term "1") (ifseqformula "26"))
                                    (rule "inEqSimp_subsumption1" (formula "28") (term "0") (ifseqformula "35"))
                                    (rule "leq_literals" (formula "28") (term "0,0"))
                                    (rule "concrete_or_1" (formula "28") (term "0"))
                                    (rule "ifthenelse_true_for" (formula "28"))
                                    (rule "true_left" (formula "28"))
                                    (rule "inEqSimp_exactShadow3" (formula "29") (ifseqformula "27"))
                                    (rule "polySimp_rightDist" (formula "29") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0"))
                                    (rule "polySimp_elimOne" (formula "29") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "29") (term "0"))
                                    (rule "polySimp_rightDist" (formula "29") (term "0,0,0"))
                                    (rule "mul_literals" (formula "29") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor2b" (formula "29") (term "0,0"))
                                    (rule "add_literals" (formula "29") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "29") (term "1,0,0"))
                                    (rule "add_literals" (formula "29") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "29"))
                                    (rule "mul_literals" (formula "29") (term "1"))
                                    (rule "boxToDiamond" (formula "5") (term "1"))
                                    (builtin "Update Simplification" (formula "5"))
                                    (rule "notLeft" (formula "5"))
                                    (rule "jdiv_axiom" (formula "42") (term "0,0"))
                                    (rule "eqSymm" (formula "1"))
                                    (rule "boxToDiamond" (formula "4") (term "4"))
                                    (builtin "Update Simplification" (formula "4"))
                                    (rule "notLeft" (formula "4"))
                                    (rule "boxToDiamond" (formula "2") (term "5"))
                                    (builtin "Update Simplification" (formula "2"))
                                    (rule "double_not" (formula "2") (term "0,5,0"))
                                    (rule "notLeft" (formula "2"))
                                    (rule "jdiv_axiom" (formula "9") (term "0,0,1,1,0"))
                                    (rule "eqSymm" (formula "9"))
                                    (rule "boxToDiamond" (formula "8") (term "4"))
                                    (builtin "Update Simplification" (formula "8"))
                                    (rule "notLeft" (formula "8"))
                                    (rule "methodCallWithAssignment" (formula "42") (term "1") (inst "#v0=j"))
                                    (branch " Normal Execution (queryReceiver_17 != null)"
                                       (builtin "Update Simplification" (formula "42"))
                                       (rule "variableDeclaration" (formula "42") (term "1") (newnames "j_28"))
                                       (rule "methodCallWithAssignment" (formula "41") (term "4") (inst "#v0=j"))
                                       (branch " Normal Execution (queryReceiver_18 != null)"
                                          (builtin "Update Simplification" (formula "41"))
                                          (rule "variableDeclaration" (formula "41") (term "4") (newnames "j_29"))
                                          (rule "methodCallWithAssignment" (formula "40") (term "5") (inst "#v0=b"))
                                          (branch " Normal Execution (queryReceiver_19 != null)"
                                             (builtin "Update Simplification" (formula "40"))
                                             (rule "variableDeclaration" (formula "41") (term "5") (newnames "b_8"))
                                             (rule "variableDeclarationAssign" (formula "41") (term "5"))
                                             (rule "variableDeclaration" (formula "41") (term "5") (newnames "arg0_8"))
                                             (rule "assignment" (formula "41") (term "5"))
                                             (builtin "Update Simplification" (formula "41"))
                                             (rule "methodCallWithAssignment" (formula "39") (term "4") (inst "#v0=j"))
                                             (branch " Normal Execution (queryReceiver_20 != null)"
                                                (builtin "Update Simplification" (formula "39"))
                                                (rule "variableDeclaration" (formula "39") (term "4") (newnames "j_30"))
                                                (rule "only_created_object_are_referenced_by_arrays_non_null2" (formula "9") (ifseqformula "23") (ifseqformula "29") (ifseqformula "40"))
                                                (rule "only_created_object_are_referenced_by_arrays_non_null" (formula "23") (term "0,0") (ifseqformula "24") (ifseqformula "30") (ifseqformula "49"))
                                                (rule "div_axiom" (formula "1") (term "0,2,0") (inst "quotient=quotient_27"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,1"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "0,2,1,1"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,1,1,1,1"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "0,1,1,1"))
                                                (rule "inEqSimp_contradEq7" (formula "1") (term "0") (ifseqformula "34"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                                                (rule "add_zero_right" (formula "1") (term "0,0,0"))
                                                (rule "leq_literals" (formula "1") (term "0,0"))
                                                (rule "concrete_and_2" (formula "1") (term "0"))
                                                (rule "concrete_or_2" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "applyEq" (formula "4") (term "0,2,0") (ifseqformula "1"))
                                                (rule "inEqSimp_subsumption1" (formula "3") (term "0") (ifseqformula "36"))
                                                (rule "leq_literals" (formula "3") (term "0,0"))
                                                (rule "concrete_or_1" (formula "3") (term "0"))
                                                (rule "ifthenelse_true_for" (formula "3"))
                                                (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "2"))
                                                (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                                (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                                                (rule "polySimp_elimOne" (formula "3") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                (rule "polySimp_rightDist" (formula "3") (term "0,0,0"))
                                                (rule "mul_literals" (formula "3") (term "0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                                                (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "3") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                (rule "mul_literals" (formula "3") (term "1"))
                                                (rule "div_axiom" (formula "4") (term "1,0") (inst "quotient=quotient_28"))
                                                (rule "polySimp_mulComm0" (formula "4") (term "0,1,0,1"))
                                                (rule "polySimp_mulComm0" (formula "4") (term "1,1,1,1,1"))
                                                (rule "polySimp_mulComm0" (formula "4") (term "0,2,1,1"))
                                                (rule "polySimp_mulComm0" (formula "4") (term "0,1,1,1"))
                                                (rule "inEqSimp_contradEq7" (formula "4") (term "0") (ifseqformula "37"))
                                                (rule "times_zero_1" (formula "4") (term "1,0,0,0"))
                                                (rule "add_zero_right" (formula "4") (term "0,0,0"))
                                                (rule "leq_literals" (formula "4") (term "0,0"))
                                                (rule "concrete_and_2" (formula "4") (term "0"))
                                                (rule "concrete_or_2" (formula "4"))
                                                (rule "andLeft" (formula "4"))
                                                (rule "andLeft" (formula "4"))
                                                (rule "applyEq" (formula "7") (term "1,0") (ifseqformula "4"))
                                                (rule "inEqSimp_subsumption1" (formula "6") (term "0") (ifseqformula "39"))
                                                (rule "leq_literals" (formula "6") (term "0,0"))
                                                (rule "concrete_or_1" (formula "6") (term "0"))
                                                (rule "ifthenelse_true_for" (formula "6"))
                                                (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "5"))
                                                (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                                                (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0"))
                                                (rule "polySimp_elimOne" (formula "6") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                (rule "polySimp_rightDist" (formula "6") (term "0,0,0"))
                                                (rule "mul_literals" (formula "6") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor2b" (formula "6") (term "0,0"))
                                                (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "6") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                                (rule "mul_literals" (formula "6") (term "1"))
                                                (rule "div_axiom" (formula "14") (term "0,2,0") (inst "quotient=quotient_29"))
                                                (rule "polySimp_mulComm0" (formula "14") (term "0,1,0,1"))
                                                (rule "polySimp_mulComm0" (formula "14") (term "0,1,1,1"))
                                                (rule "polySimp_mulComm0" (formula "14") (term "0,2,1,1"))
                                                (rule "polySimp_mulComm0" (formula "14") (term "1,1,1,1,1"))
                                                (rule "inEqSimp_contradEq7" (formula "14") (term "0") (ifseqformula "40"))
                                                (rule "times_zero_1" (formula "14") (term "1,0,0,0"))
                                                (rule "add_zero_right" (formula "14") (term "0,0,0"))
                                                (rule "leq_literals" (formula "14") (term "0,0"))
                                                (rule "concrete_and_2" (formula "14") (term "0"))
                                                (rule "concrete_or_2" (formula "14"))
                                                (rule "andLeft" (formula "14"))
                                                (rule "andLeft" (formula "14"))
                                                (rule "applyEq" (formula "17") (term "0,2,0") (ifseqformula "14"))
                                                (rule "inEqSimp_subsumption1" (formula "16") (term "0") (ifseqformula "42"))
                                                (rule "leq_literals" (formula "16") (term "0,0"))
                                                (rule "concrete_or_1" (formula "16") (term "0"))
                                                (rule "ifthenelse_true_for" (formula "16"))
                                                (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "15"))
                                                (rule "polySimp_rightDist" (formula "16") (term "0,0"))
                                                (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0"))
                                                (rule "polySimp_elimOne" (formula "16") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "16") (term "0"))
                                                (rule "polySimp_rightDist" (formula "16") (term "0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "16") (term "0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "16") (term "1,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0"))
                                                (rule "add_literals" (formula "16") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "16") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "16") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                                                (rule "mul_literals" (formula "16") (term "1"))
                                                (rule "div_axiom" (formula "17") (term "1,0") (inst "quotient=quotient_37"))
                                                (rule "polySimp_mulComm0" (formula "17") (term "0,1,0,1"))
                                                (rule "polySimp_mulComm0" (formula "17") (term "0,2,1,1"))
                                                (rule "polySimp_mulComm0" (formula "17") (term "1,1,1,1,1"))
                                                (rule "polySimp_mulComm0" (formula "17") (term "0,1,1,1"))
                                                (rule "inEqSimp_contradEq7" (formula "17") (term "0") (ifseqformula "43"))
                                                (rule "times_zero_1" (formula "17") (term "1,0,0,0"))
                                                (rule "add_zero_right" (formula "17") (term "0,0,0"))
                                                (rule "leq_literals" (formula "17") (term "0,0"))
                                                (rule "concrete_and_2" (formula "17") (term "0"))
                                                (rule "concrete_or_2" (formula "17"))
                                                (rule "andLeft" (formula "17"))
                                                (rule "andLeft" (formula "17"))
                                                (rule "applyEq" (formula "20") (term "1,0") (ifseqformula "17"))
                                                (rule "inEqSimp_subsumption1" (formula "19") (term "0") (ifseqformula "45"))
                                                (rule "leq_literals" (formula "19") (term "0,0"))
                                                (rule "concrete_or_1" (formula "19") (term "0"))
                                                (rule "ifthenelse_true_for" (formula "19"))
                                                (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "18"))
                                                (rule "polySimp_rightDist" (formula "19") (term "0,0"))
                                                (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0"))
                                                (rule "polySimp_elimOne" (formula "19") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "19") (term "0"))
                                                (rule "polySimp_rightDist" (formula "19") (term "0,0,0"))
                                                (rule "mul_literals" (formula "19") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor2b" (formula "19") (term "0,0"))
                                                (rule "add_literals" (formula "19") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "19") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "19") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "19"))
                                                (rule "mul_literals" (formula "19") (term "1"))
                                                (builtin "Use Operation Contract" (formula "54") (term "5") (newnames "arg0_8_0,result_23") (contract "equalsNormal;;"))
                                                (branch " Pre"
                                                   (builtin "Update Simplification" (formula "54"))
                                                   (rule "replace_known_left" (formula "54") (term "0,1") (ifseqformula "51"))
                                                   (rule "concrete_or_1" (formula "54") (term "1"))
                                                   (rule "concrete_and_3" (formula "54"))
                                                   (rule "replace_known_right" (formula "54") (term "0,1,1") (ifseqformula "53"))
                                                   (rule "concrete_not_2" (formula "54") (term "1,1"))
                                                   (rule "concrete_and_3" (formula "54") (term "1"))
                                                   (rule "replace_known_left" (formula "54") (term "1") (ifseqformula "21"))
                                                   (rule "concrete_and_3" (formula "54"))
                                                   (rule "inReachableStateRewrite" (formula "54") (ifseqformula "42"))
                                                   (builtin "Update Simplification" (formula "54"))
                                                   (rule "eq_imp" (formula "54") (term "0,0,1"))
                                                   (rule "orRight" (formula "54"))
                                                   (rule "jmod_axiom" (formula "55") (term "1,1,0,0,0,0,1,0,1,0,0,1"))
                                                   (rule "polySimp_mulComm1" (formula "55") (term "1,1,1,0,0,0,0,1,0,1,0,0,1"))
                                                   (rule "polySimp_homoEq" (formula "55") (term "1,0,0,0,0,1,0,1,0,0,1"))
                                                   (rule "polySimp_addComm1" (formula "55") (term "0,1,0,0,0,0,1,0,1,0,0,1"))
                                                   (rule "applyEq" (formula "55") (term "0,0,1,0,1,0,0,0,0,1,0,1,0,0,1") (ifseqformula "31"))
                                                   (rule "polySimp_mulComm0" (formula "55") (term "0,1,0,1,0,0,0,0,1,0,1,0,0,1"))
                                                   (rule "applyEq" (formula "55") (term "0,1,0,1,0,0,0,0,1,0,1,0,0,1") (ifseqformula "27"))
                                                   (rule "polySimp_addComm1" (formula "55") (term "0,1,0,0,0,0,1,0,1,0,0,1"))
                                                   (rule "polySimp_pullOutFactor1" (formula "55") (term "0,0,1,0,0,0,0,1,0,1,0,0,1"))
                                                   (rule "add_literals" (formula "55") (term "1,0,0,1,0,0,0,0,1,0,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "55") (term "0,0,1,0,0,0,0,1,0,1,0,0,1"))
                                                   (rule "add_zero_left" (formula "55") (term "0,1,0,0,0,0,1,0,1,0,0,1"))
                                                   (rule "jmod_axiom" (formula "55") (term "1,1,0,1,1,1,0,0,1"))
                                                   (rule "polySimp_mulComm1" (formula "55") (term "1,1,1,0,1,1,1,0,0,1"))
                                                   (rule "polySimp_homoEq" (formula "55") (term "1,0,1,1,1,0,0,1"))
                                                   (rule "polySimp_addComm1" (formula "55") (term "0,1,0,1,1,1,0,0,1"))
                                                   (rule "applyEq" (formula "55") (term "0,0,1,0,1,0,1,1,1,0,0,1") (ifseqformula "31"))
                                                   (rule "polySimp_mulComm0" (formula "55") (term "0,1,0,1,0,1,1,1,0,0,1"))
                                                   (rule "applyEq" (formula "55") (term "0,1,0,1,0,1,1,1,0,0,1") (ifseqformula "27"))
                                                   (rule "polySimp_addComm1" (formula "55") (term "0,1,0,1,1,1,0,0,1"))
                                                   (rule "polySimp_pullOutFactor1" (formula "55") (term "0,0,1,0,1,1,1,0,0,1"))
                                                   (rule "add_literals" (formula "55") (term "1,0,0,1,0,1,1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "55") (term "0,0,1,0,1,1,1,0,0,1"))
                                                   (rule "add_zero_left" (formula "55") (term "0,1,0,1,1,1,0,0,1"))
                                                   (rule "jmod_axiom" (formula "55") (term "1,1,0,0,1,1,0,1,0,0,1"))
                                                   (rule "polySimp_mulComm1" (formula "55") (term "1,1,1,0,0,1,1,0,1,0,0,1"))
                                                   (rule "polySimp_homoEq" (formula "55") (term "1,0,0,1,1,0,1,0,0,1"))
                                                   (rule "polySimp_addComm1" (formula "55") (term "0,1,0,0,1,1,0,1,0,0,1"))
                                                   (rule "applyEq" (formula "55") (term "0,0,1,0,1,0,0,1,1,0,1,0,0,1") (ifseqformula "31"))
                                                   (rule "polySimp_mulComm0" (formula "55") (term "0,1,0,1,0,0,1,1,0,1,0,0,1"))
                                                   (rule "applyEq" (formula "55") (term "0,1,0,1,0,0,1,1,0,1,0,0,1") (ifseqformula "27"))
                                                   (rule "polySimp_addComm1" (formula "55") (term "0,1,0,0,1,1,0,1,0,0,1"))
                                                   (rule "polySimp_pullOutFactor1" (formula "55") (term "0,0,1,0,0,1,1,0,1,0,0,1"))
                                                   (rule "add_literals" (formula "55") (term "1,0,0,1,0,0,1,1,0,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "55") (term "0,0,1,0,0,1,1,0,1,0,0,1"))
                                                   (rule "add_zero_left" (formula "55") (term "0,1,0,0,1,1,0,1,0,0,1"))
                                                   (rule "jmod_axiom" (formula "55") (term "1,1,0,0,0,1"))
                                                   (rule "polySimp_mulComm1" (formula "55") (term "1,1,1,0,0,0,1"))
                                                   (rule "polySimp_homoEq" (formula "55") (term "1,0,0,0,1"))
                                                   (rule "polySimp_addComm1" (formula "55") (term "0,1,0,0,0,1"))
                                                   (rule "applyEq" (formula "55") (term "0,0,1,0,1,0,0,0,1") (ifseqformula "31"))
                                                   (rule "polySimp_mulComm0" (formula "55") (term "0,1,0,1,0,0,0,1"))
                                                   (rule "applyEq" (formula "55") (term "0,1,0,1,0,0,0,1") (ifseqformula "27"))
                                                   (rule "polySimp_addComm1" (formula "55") (term "0,1,0,0,0,1"))
                                                   (rule "polySimp_pullOutFactor1" (formula "55") (term "0,0,1,0,0,0,1"))
                                                   (rule "add_literals" (formula "55") (term "1,0,0,1,0,0,0,1"))
                                                   (rule "times_zero_1" (formula "55") (term "0,0,1,0,0,0,1"))
                                                   (rule "add_zero_left" (formula "55") (term "0,1,0,0,0,1"))
                                                   (rule "polySimp_invertEq" (formula "55") (term "1,0,0,0,0,1,0,1,0,0,1"))
                                                   (rule "times_zero_2" (formula "55") (term "1,1,0,0,0,0,1,0,1,0,0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "55") (term "0,1,0,0,0,0,1,0,1,0,0,1"))
                                                   (rule "polySimp_elimOne" (formula "55") (term "0,1,0,0,0,0,1,0,1,0,0,1"))
                                                   (rule "polySimp_invertEq" (formula "55") (term "1,0,1,1,1,0,0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "55") (term "0,1,0,1,1,1,0,0,1"))
                                                   (rule "times_zero_2" (formula "55") (term "1,1,0,1,1,1,0,0,1"))
                                                   (rule "polySimp_elimOne" (formula "55") (term "0,1,0,1,1,1,0,0,1"))
                                                   (rule "polySimp_invertEq" (formula "55") (term "1,0,0,1,1,0,1,0,0,1"))
                                                   (rule "times_zero_2" (formula "55") (term "1,1,0,0,1,1,0,1,0,0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "55") (term "0,1,0,0,1,1,0,1,0,0,1"))
                                                   (rule "polySimp_elimOne" (formula "55") (term "0,1,0,0,1,1,0,1,0,0,1"))
                                                   (rule "polySimp_invertEq" (formula "55") (term "1,0,0,0,1"))
                                                   (rule "times_zero_2" (formula "55") (term "1,1,0,0,0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "55") (term "0,1,0,0,0,1"))
                                                   (rule "polySimp_elimOne" (formula "55") (term "0,1,0,0,0,1"))
                                                   (rule "elim_forall12" (formula "55") (term "0,1"))
                                                   (rule "eqClose" (formula "55") (term "1,0,0,0,0,1,0,1,0,1"))
                                                   (rule "eqClose" (formula "55") (term "1,0,0,1,1,0,1,0,1"))
                                                   (rule "eqClose" (formula "55") (term "1,0,1,1,1,0,1"))
                                                   (rule "concrete_and_3" (formula "55") (term "0,0,0,0,1,0,1,0,1"))
                                                   (rule "concrete_and_3" (formula "55") (term "0,0,1,1,0,1,0,1"))
                                                   (rule "concrete_and_3" (formula "55") (term "0,1,1,1,0,1"))
                                                   (rule "elim_forall8" (formula "55") (term "1"))
                                                   (rule "eqClose" (formula "55") (term "0,0,0,0,1,0,1"))
                                                   (rule "eqClose" (formula "55") (term "0,0,1,1,0,1"))
                                                   (rule "eqClose" (formula "55") (term "0,1,1,1"))
                                                   (rule "ifthenelse_true" (formula "55") (term "0,0,0,1,0,1"))
                                                   (rule "ifthenelse_true" (formula "55") (term "0,1,1,0,1"))
                                                   (rule "ifthenelse_true" (formula "55") (term "1,1,1"))
                                                   (rule "replace_known_left" (formula "55") (term "0,0,1") (ifseqformula "36"))
                                                   (rule "concrete_impl_1" (formula "55") (term "0,1"))
                                                   (rule "replace_known_left" (formula "55") (term "0,0,1") (ifseqformula "51"))
                                                   (rule "concrete_or_1" (formula "55") (term "0,1"))
                                                   (rule "concrete_and_1" (formula "55") (term "1"))
                                                   (rule "array_store_static_analyse" (formula "55") (term "1") (ifseqformula "60"))
                                                   (rule "concrete_and_3" (formula "55"))
                                                   (rule "allRight" (formula "55") (inst "sk=o_2"))
                                                   (rule "closeTrue" (formula "55"))
                                                )
                                                (branch " Post"
                                                   (builtin "Update Simplification" (formula "54"))
                                                   (rule "typeEqDerived2" (formula "54") (term "0,1,0,1,0,1,0") (ifseqformula "10"))
                                                   (rule "boolean_equal" (formula "54") (term "1,0,1,0,1,0"))
                                                   (rule "concrete_and_3" (formula "54") (term "0,1,0,1,0"))
                                                   (rule "impRight" (formula "54"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "andLeft" (formula "3"))
                                                   (rule "eqSymm" (formula "3") (term "1,1"))
                                                   (rule "replace_known_right" (formula "3") (term "0,0,1") (ifseqformula "65"))
                                                   (rule "concrete_not_2" (formula "3") (term "0,1"))
                                                   (rule "concrete_and_1" (formula "3") (term "1"))
                                                   (rule "inReachableStateExpand" (formula "2"))
                                                   (builtin "Update Simplification" (formula "2"))
                                                   (rule "eq_imp" (formula "2") (term "0,0,1"))
                                                   (rule "replace_known_left" (formula "2") (term "0") (ifseqformula "45"))
                                                   (rule "concrete_impl_1" (formula "2"))
                                                   (rule "andLeft" (formula "2"))
                                                   (rule "jmod_axiom" (formula "3") (term "1,1,0,1,1,1,0,0"))
                                                   (rule "polySimp_mulComm1" (formula "3") (term "1,1,1,0,1,1,1,0,0"))
                                                   (rule "polySimp_homoEq" (formula "3") (term "1,0,1,1,1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "3") (term "0,1,0,1,1,1,0,0"))
                                                   (rule "applyEq" (formula "3") (term "0,0,1,0,1,0,1,1,1,0,0") (ifseqformula "35"))
                                                   (rule "polySimp_mulComm0" (formula "3") (term "0,1,0,1,0,1,1,1,0,0"))
                                                   (rule "applyEq" (formula "3") (term "0,1,0,1,0,1,1,1,0,0") (ifseqformula "31"))
                                                   (rule "polySimp_addComm1" (formula "3") (term "0,1,0,1,1,1,0,0"))
                                                   (rule "polySimp_pullOutFactor1" (formula "3") (term "0,0,1,0,1,1,1,0,0"))
                                                   (rule "add_literals" (formula "3") (term "1,0,0,1,0,1,1,1,0,0"))
                                                   (rule "times_zero_1" (formula "3") (term "0,0,1,0,1,1,1,0,0"))
                                                   (rule "add_zero_left" (formula "3") (term "0,1,0,1,1,1,0,0"))
                                                   (rule "jmod_axiom" (formula "3") (term "1,1,0,0,0,0,1,0,1,0,0"))
                                                   (rule "polySimp_mulComm1" (formula "3") (term "1,1,1,0,0,0,0,1,0,1,0,0"))
                                                   (rule "polySimp_homoEq" (formula "3") (term "1,0,0,0,0,1,0,1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "3") (term "0,1,0,0,0,0,1,0,1,0,0"))
                                                   (rule "applyEq" (formula "3") (term "0,0,1,0,1,0,0,0,0,1,0,1,0,0") (ifseqformula "35"))
                                                   (rule "polySimp_mulComm0" (formula "3") (term "0,1,0,1,0,0,0,0,1,0,1,0,0"))
                                                   (rule "applyEq" (formula "3") (term "0,1,0,1,0,0,0,0,1,0,1,0,0") (ifseqformula "31"))
                                                   (rule "polySimp_addComm1" (formula "3") (term "0,1,0,0,0,0,1,0,1,0,0"))
                                                   (rule "polySimp_pullOutFactor1" (formula "3") (term "0,0,1,0,0,0,0,1,0,1,0,0"))
                                                   (rule "add_literals" (formula "3") (term "1,0,0,1,0,0,0,0,1,0,1,0,0"))
                                                   (rule "times_zero_1" (formula "3") (term "0,0,1,0,0,0,0,1,0,1,0,0"))
                                                   (rule "add_zero_left" (formula "3") (term "0,1,0,0,0,0,1,0,1,0,0"))
                                                   (rule "jmod_axiom" (formula "3") (term "1,1,0,0,1,1,0,1,0,0"))
                                                   (rule "polySimp_mulComm1" (formula "3") (term "1,1,1,0,0,1,1,0,1,0,0"))
                                                   (rule "polySimp_homoEq" (formula "3") (term "1,0,0,1,1,0,1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "3") (term "0,1,0,0,1,1,0,1,0,0"))
                                                   (rule "applyEq" (formula "3") (term "0,0,1,0,1,0,0,1,1,0,1,0,0") (ifseqformula "35"))
                                                   (rule "polySimp_mulComm0" (formula "3") (term "0,1,0,1,0,0,1,1,0,1,0,0"))
                                                   (rule "applyEq" (formula "3") (term "0,1,0,1,0,0,1,1,0,1,0,0") (ifseqformula "31"))
                                                   (rule "polySimp_addComm1" (formula "3") (term "0,1,0,0,1,1,0,1,0,0"))
                                                   (rule "polySimp_pullOutFactor1" (formula "3") (term "0,0,1,0,0,1,1,0,1,0,0"))
                                                   (rule "add_literals" (formula "3") (term "1,0,0,1,0,0,1,1,0,1,0,0"))
                                                   (rule "times_zero_1" (formula "3") (term "0,0,1,0,0,1,1,0,1,0,0"))
                                                   (rule "add_zero_left" (formula "3") (term "0,1,0,0,1,1,0,1,0,0"))
                                                   (rule "jmod_axiom" (formula "3") (term "1,1,0,0,0"))
                                                   (rule "polySimp_mulComm1" (formula "3") (term "1,1,1,0,0,0"))
                                                   (rule "polySimp_homoEq" (formula "3") (term "1,0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "3") (term "0,1,0,0,0"))
                                                   (rule "applyEq" (formula "3") (term "0,0,1,0,1,0,0,0") (ifseqformula "35"))
                                                   (rule "polySimp_mulComm0" (formula "3") (term "0,1,0,1,0,0,0"))
                                                   (rule "applyEq" (formula "3") (term "0,1,0,1,0,0,0") (ifseqformula "31"))
                                                   (rule "polySimp_addComm1" (formula "3") (term "0,1,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1" (formula "3") (term "0,0,1,0,0,0"))
                                                   (rule "add_literals" (formula "3") (term "1,0,0,1,0,0,0"))
                                                   (rule "times_zero_1" (formula "3") (term "0,0,1,0,0,0"))
                                                   (rule "add_zero_left" (formula "3") (term "0,1,0,0,0"))
                                                   (rule "polySimp_invertEq" (formula "3") (term "1,0,1,1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "3") (term "0,1,0,1,1,1,0,0"))
                                                   (rule "times_zero_2" (formula "3") (term "1,1,0,1,1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "3") (term "0,1,0,1,1,1,0,0"))
                                                   (rule "polySimp_invertEq" (formula "3") (term "1,0,0,0,0,1,0,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "3") (term "0,1,0,0,0,0,1,0,1,0,0"))
                                                   (rule "times_zero_2" (formula "3") (term "1,1,0,0,0,0,1,0,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "3") (term "0,1,0,0,0,0,1,0,1,0,0"))
                                                   (rule "polySimp_invertEq" (formula "3") (term "1,0,0,1,1,0,1,0,0"))
                                                   (rule "times_zero_2" (formula "3") (term "1,1,0,0,1,1,0,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "3") (term "0,1,0,0,1,1,0,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "3") (term "0,1,0,0,1,1,0,1,0,0"))
                                                   (rule "polySimp_invertEq" (formula "3") (term "1,0,0,0"))
                                                   (rule "times_zero_2" (formula "3") (term "1,1,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "3") (term "0,1,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "3") (term "0,1,0,0,0"))
                                                   (rule "elim_forall12" (formula "3") (term "0"))
                                                   (rule "eqClose" (formula "3") (term "1,0,0,0,0,1,0,1,0"))
                                                   (rule "eqClose" (formula "3") (term "1,0,0,1,1,0,1,0"))
                                                   (rule "eqClose" (formula "3") (term "1,0,1,1,1,0"))
                                                   (rule "concrete_and_3" (formula "3") (term "0,0,0,0,1,0,1,0"))
                                                   (rule "concrete_and_3" (formula "3") (term "0,0,1,1,0,1,0"))
                                                   (rule "concrete_and_3" (formula "3") (term "0,1,1,1,0"))
                                                   (rule "elim_forall8" (formula "3"))
                                                   (rule "eqClose" (formula "3") (term "0,0,1,1,0"))
                                                   (rule "eqClose" (formula "3") (term "0,0,0,0,1,0"))
                                                   (rule "eqClose" (formula "3") (term "0,1,1"))
                                                   (rule "ifthenelse_true" (formula "3") (term "0,1,1,0"))
                                                   (rule "ifthenelse_true" (formula "3") (term "0,0,0,1,0"))
                                                   (rule "ifthenelse_true" (formula "3") (term "1,1"))
                                                   (rule "andLeft" (formula "3"))
                                                   (rule "replace_known_left" (formula "3") (term "0") (ifseqformula "41"))
                                                   (rule "concrete_impl_1" (formula "3"))
                                                   (rule "replace_known_right" (formula "3") (term "1") (ifseqformula "67"))
                                                   (rule "concrete_or_4" (formula "3"))
                                                   (rule "array_store_static_analyse" (formula "3") (ifseqformula "63"))
                                                   (rule "true_left" (formula "3"))
                                                   (rule "castDel" (formula "3") (term "0,0,1"))
                                                   (rule "all_unused" (formula "2"))
                                                   (rule "true_left" (formula "2"))
                                                   (rule "blockEmpty" (formula "56") (term "4"))
                                                   (rule "assignment" (formula "56") (term "4"))
                                                   (builtin "Update Simplification" (formula "56"))
                                                   (rule "methodCallEmpty" (formula "56") (term "4"))
                                                   (rule "emptyModality" (formula "56") (term "4"))
                                                   (builtin "Update Simplification" (formula "56"))
                                                   (rule "replace_known_right" (formula "2") (term "0") (ifseqformula "56"))
                                                   (rule "concrete_eq_2" (formula "2"))
                                                   (rule "notLeft" (formula "2"))
                                                   (builtin "Use Operation Contract" (formula "54") (term "4") (newnames "result_25") (contract "hashCode;;"))
                                                   (branch " Pre"
                                                      (builtin "Update Simplification" (formula "54"))
                                                      (rule "replace_known_left" (formula "54") (term "0,1") (ifseqformula "52"))
                                                      (rule "concrete_and_1" (formula "54") (term "1"))
                                                      (rule "replace_known_right" (formula "54") (term "0,1") (ifseqformula "64"))
                                                      (rule "concrete_not_2" (formula "54") (term "1"))
                                                      (rule "concrete_and_3" (formula "54"))
                                                      (rule "inReachableStateRewrite" (formula "54") (ifseqformula "43"))
                                                      (builtin "Update Simplification" (formula "54"))
                                                      (rule "eq_imp" (formula "54") (term "0,0,1"))
                                                      (rule "orRight" (formula "54"))
                                                      (rule "jmod_axiom" (formula "55") (term "1,1,0,0,0,1"))
                                                      (rule "polySimp_mulComm1" (formula "55") (term "1,1,1,0,0,0,1"))
                                                      (rule "polySimp_homoEq" (formula "55") (term "1,0,0,0,1"))
                                                      (rule "polySimp_addComm1" (formula "55") (term "0,1,0,0,0,1"))
                                                      (rule "applyEq" (formula "55") (term "0,0,1,0,1,0,0,0,1") (ifseqformula "32"))
                                                      (rule "polySimp_mulComm0" (formula "55") (term "0,1,0,1,0,0,0,1"))
                                                      (rule "applyEq" (formula "55") (term "0,1,0,1,0,0,0,1") (ifseqformula "28"))
                                                      (rule "polySimp_addComm1" (formula "55") (term "0,1,0,0,0,1"))
                                                      (rule "polySimp_pullOutFactor1" (formula "55") (term "0,0,1,0,0,0,1"))
                                                      (rule "add_literals" (formula "55") (term "1,0,0,1,0,0,0,1"))
                                                      (rule "times_zero_1" (formula "55") (term "0,0,1,0,0,0,1"))
                                                      (rule "add_zero_left" (formula "55") (term "0,1,0,0,0,1"))
                                                      (rule "jmod_axiom" (formula "55") (term "1,1,0,0,0,0,1,0,1,0,0,1"))
                                                      (rule "polySimp_mulComm1" (formula "55") (term "1,1,1,0,0,0,0,1,0,1,0,0,1"))
                                                      (rule "polySimp_homoEq" (formula "55") (term "1,0,0,0,0,1,0,1,0,0,1"))
                                                      (rule "polySimp_addComm1" (formula "55") (term "0,1,0,0,0,0,1,0,1,0,0,1"))
                                                      (rule "applyEq" (formula "55") (term "0,0,1,0,1,0,0,0,0,1,0,1,0,0,1") (ifseqformula "32"))
                                                      (rule "polySimp_mulComm0" (formula "55") (term "0,1,0,1,0,0,0,0,1,0,1,0,0,1"))
                                                      (rule "applyEq" (formula "55") (term "0,1,0,1,0,0,0,0,1,0,1,0,0,1") (ifseqformula "28"))
                                                      (rule "polySimp_addComm1" (formula "55") (term "0,1,0,0,0,0,1,0,1,0,0,1"))
                                                      (rule "polySimp_pullOutFactor1" (formula "55") (term "0,0,1,0,0,0,0,1,0,1,0,0,1"))
                                                      (rule "add_literals" (formula "55") (term "1,0,0,1,0,0,0,0,1,0,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "55") (term "0,0,1,0,0,0,0,1,0,1,0,0,1"))
                                                      (rule "add_zero_left" (formula "55") (term "0,1,0,0,0,0,1,0,1,0,0,1"))
                                                      (rule "jmod_axiom" (formula "55") (term "1,1,0,1,1,1,0,0,1"))
                                                      (rule "polySimp_mulComm1" (formula "55") (term "1,1,1,0,1,1,1,0,0,1"))
                                                      (rule "polySimp_homoEq" (formula "55") (term "1,0,1,1,1,0,0,1"))
                                                      (rule "polySimp_addComm1" (formula "55") (term "0,1,0,1,1,1,0,0,1"))
                                                      (rule "applyEq" (formula "55") (term "0,0,1,0,1,0,1,1,1,0,0,1") (ifseqformula "32"))
                                                      (rule "polySimp_mulComm0" (formula "55") (term "0,1,0,1,0,1,1,1,0,0,1"))
                                                      (rule "applyEq" (formula "55") (term "0,1,0,1,0,1,1,1,0,0,1") (ifseqformula "28"))
                                                      (rule "polySimp_addComm1" (formula "55") (term "0,1,0,1,1,1,0,0,1"))
                                                      (rule "polySimp_pullOutFactor1" (formula "55") (term "0,0,1,0,1,1,1,0,0,1"))
                                                      (rule "add_literals" (formula "55") (term "1,0,0,1,0,1,1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "55") (term "0,0,1,0,1,1,1,0,0,1"))
                                                      (rule "add_zero_left" (formula "55") (term "0,1,0,1,1,1,0,0,1"))
                                                      (rule "jmod_axiom" (formula "55") (term "1,1,0,0,1,1,0,1,0,0,1"))
                                                      (rule "polySimp_mulComm1" (formula "55") (term "1,1,1,0,0,1,1,0,1,0,0,1"))
                                                      (rule "polySimp_homoEq" (formula "55") (term "1,0,0,1,1,0,1,0,0,1"))
                                                      (rule "polySimp_addComm1" (formula "55") (term "0,1,0,0,1,1,0,1,0,0,1"))
                                                      (rule "applyEq" (formula "55") (term "0,0,1,0,1,0,0,1,1,0,1,0,0,1") (ifseqformula "32"))
                                                      (rule "polySimp_mulComm0" (formula "55") (term "0,1,0,1,0,0,1,1,0,1,0,0,1"))
                                                      (rule "applyEq" (formula "55") (term "0,1,0,1,0,0,1,1,0,1,0,0,1") (ifseqformula "28"))
                                                      (rule "polySimp_addComm1" (formula "55") (term "0,1,0,0,1,1,0,1,0,0,1"))
                                                      (rule "polySimp_pullOutFactor1" (formula "55") (term "0,0,1,0,0,1,1,0,1,0,0,1"))
                                                      (rule "add_literals" (formula "55") (term "1,0,0,1,0,0,1,1,0,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "55") (term "0,0,1,0,0,1,1,0,1,0,0,1"))
                                                      (rule "add_zero_left" (formula "55") (term "0,1,0,0,1,1,0,1,0,0,1"))
                                                      (rule "polySimp_invertEq" (formula "55") (term "1,0,0,0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "55") (term "0,1,0,0,0,1"))
                                                      (rule "times_zero_2" (formula "55") (term "1,1,0,0,0,1"))
                                                      (rule "polySimp_elimOne" (formula "55") (term "0,1,0,0,0,1"))
                                                      (rule "polySimp_invertEq" (formula "55") (term "1,0,0,0,0,1,0,1,0,0,1"))
                                                      (rule "times_zero_2" (formula "55") (term "1,1,0,0,0,0,1,0,1,0,0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "55") (term "0,1,0,0,0,0,1,0,1,0,0,1"))
                                                      (rule "polySimp_elimOne" (formula "55") (term "0,1,0,0,0,0,1,0,1,0,0,1"))
                                                      (rule "polySimp_invertEq" (formula "55") (term "1,0,1,1,1,0,0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "55") (term "0,1,0,1,1,1,0,0,1"))
                                                      (rule "times_zero_2" (formula "55") (term "1,1,0,1,1,1,0,0,1"))
                                                      (rule "polySimp_elimOne" (formula "55") (term "0,1,0,1,1,1,0,0,1"))
                                                      (rule "polySimp_invertEq" (formula "55") (term "1,0,0,1,1,0,1,0,0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "55") (term "0,1,0,0,1,1,0,1,0,0,1"))
                                                      (rule "times_zero_2" (formula "55") (term "1,1,0,0,1,1,0,1,0,0,1"))
                                                      (rule "polySimp_elimOne" (formula "55") (term "0,1,0,0,1,1,0,1,0,0,1"))
                                                      (rule "elim_forall12" (formula "55") (term "0,1"))
                                                      (rule "eqClose" (formula "55") (term "1,0,0,0,0,1,0,1,0,1"))
                                                      (rule "eqClose" (formula "55") (term "1,0,0,1,1,0,1,0,1"))
                                                      (rule "eqClose" (formula "55") (term "1,0,1,1,1,0,1"))
                                                      (rule "concrete_and_3" (formula "55") (term "0,0,0,0,1,0,1,0,1"))
                                                      (rule "concrete_and_3" (formula "55") (term "0,0,1,1,0,1,0,1"))
                                                      (rule "concrete_and_3" (formula "55") (term "0,1,1,1,0,1"))
                                                      (rule "elim_forall8" (formula "55") (term "1"))
                                                      (rule "eqClose" (formula "55") (term "0,1,1,1"))
                                                      (rule "eqClose" (formula "55") (term "0,0,1,1,0,1"))
                                                      (rule "eqClose" (formula "55") (term "0,0,0,0,1,0,1"))
                                                      (rule "ifthenelse_true" (formula "55") (term "1,1,1"))
                                                      (rule "ifthenelse_true" (formula "55") (term "0,1,1,0,1"))
                                                      (rule "ifthenelse_true" (formula "55") (term "0,0,0,1,0,1"))
                                                      (rule "replace_known_left" (formula "55") (term "0,0,1") (ifseqformula "37"))
                                                      (rule "concrete_impl_1" (formula "55") (term "0,1"))
                                                      (rule "replace_known_left" (formula "55") (term "0,0,1") (ifseqformula "52"))
                                                      (rule "concrete_or_1" (formula "55") (term "0,1"))
                                                      (rule "concrete_and_1" (formula "55") (term "1"))
                                                      (rule "array_store_static_analyse" (formula "55") (term "1") (ifseqformula "62"))
                                                      (rule "concrete_and_3" (formula "55"))
                                                      (rule "allRight" (formula "55") (inst "sk=o_3"))
                                                      (rule "closeTrue" (formula "55"))
                                                   )
                                                   (branch " Post"
                                                      (builtin "Update Simplification" (formula "54"))
                                                      (rule "inInt" (formula "54") (term "1,1,0,0"))
                                                      (rule "concrete_and_3" (formula "54") (term "1,0,0"))
                                                      (rule "impRight" (formula "54"))
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "andLeft" (formula "2"))
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "eqSymm" (formula "2"))
                                                      (rule "applyEq" (formula "2") (term "0") (ifseqformula "37"))
                                                      (rule "eqSymm" (formula "2"))
                                                      (rule "applyEq" (formula "57") (term "0") (ifseqformula "2"))
                                                      (rule "inReachableStateExpand" (formula "1"))
                                                      (builtin "Update Simplification" (formula "1"))
                                                      (rule "eq_imp" (formula "1") (term "0,0,1"))
                                                      (rule "replace_known_left" (formula "1") (term "0") (ifseqformula "46"))
                                                      (rule "concrete_impl_1" (formula "1"))
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "jmod_axiom" (formula "2") (term "1,1,0,1,1,1,0,0"))
                                                      (rule "polySimp_mulComm1" (formula "2") (term "1,1,1,0,1,1,1,0,0"))
                                                      (rule "polySimp_homoEq" (formula "2") (term "1,0,1,1,1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "2") (term "0,1,0,1,1,1,0,0"))
                                                      (rule "applyEq" (formula "2") (term "0,0,1,0,1,0,1,1,1,0,0") (ifseqformula "36"))
                                                      (rule "polySimp_mulComm0" (formula "2") (term "0,1,0,1,0,1,1,1,0,0"))
                                                      (rule "applyEq" (formula "2") (term "0,1,0,1,0,1,1,1,0,0") (ifseqformula "32"))
                                                      (rule "polySimp_addComm1" (formula "2") (term "0,1,0,1,1,1,0,0"))
                                                      (rule "polySimp_pullOutFactor1" (formula "2") (term "0,0,1,0,1,1,1,0,0"))
                                                      (rule "add_literals" (formula "2") (term "1,0,0,1,0,1,1,1,0,0"))
                                                      (rule "times_zero_1" (formula "2") (term "0,0,1,0,1,1,1,0,0"))
                                                      (rule "add_zero_left" (formula "2") (term "0,1,0,1,1,1,0,0"))
                                                      (rule "jmod_axiom" (formula "2") (term "1,1,0,0,0"))
                                                      (rule "polySimp_mulComm1" (formula "2") (term "1,1,1,0,0,0"))
                                                      (rule "polySimp_homoEq" (formula "2") (term "1,0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "2") (term "0,1,0,0,0"))
                                                      (rule "applyEq" (formula "2") (term "0,0,1,0,1,0,0,0") (ifseqformula "36"))
                                                      (rule "polySimp_mulComm0" (formula "2") (term "0,1,0,1,0,0,0"))
                                                      (rule "applyEq" (formula "2") (term "0,1,0,1,0,0,0") (ifseqformula "32"))
                                                      (rule "polySimp_addComm1" (formula "2") (term "0,1,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1" (formula "2") (term "0,0,1,0,0,0"))
                                                      (rule "add_literals" (formula "2") (term "1,0,0,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "2") (term "0,0,1,0,0,0"))
                                                      (rule "add_zero_left" (formula "2") (term "0,1,0,0,0"))
                                                      (rule "jmod_axiom" (formula "2") (term "1,1,0,0,1,1,0,1,0,0"))
                                                      (rule "polySimp_mulComm1" (formula "2") (term "1,1,1,0,0,1,1,0,1,0,0"))
                                                      (rule "polySimp_homoEq" (formula "2") (term "1,0,0,1,1,0,1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "2") (term "0,1,0,0,1,1,0,1,0,0"))
                                                      (rule "applyEq" (formula "2") (term "0,0,1,0,1,0,0,1,1,0,1,0,0") (ifseqformula "36"))
                                                      (rule "polySimp_mulComm0" (formula "2") (term "0,1,0,1,0,0,1,1,0,1,0,0"))
                                                      (rule "applyEq" (formula "2") (term "0,1,0,1,0,0,1,1,0,1,0,0") (ifseqformula "32"))
                                                      (rule "polySimp_addComm1" (formula "2") (term "0,1,0,0,1,1,0,1,0,0"))
                                                      (rule "polySimp_pullOutFactor1" (formula "2") (term "0,0,1,0,0,1,1,0,1,0,0"))
                                                      (rule "add_literals" (formula "2") (term "1,0,0,1,0,0,1,1,0,1,0,0"))
                                                      (rule "times_zero_1" (formula "2") (term "0,0,1,0,0,1,1,0,1,0,0"))
                                                      (rule "add_zero_left" (formula "2") (term "0,1,0,0,1,1,0,1,0,0"))
                                                      (rule "jmod_axiom" (formula "2") (term "1,1,0,0,0,0,1,0,1,0,0"))
                                                      (rule "polySimp_mulComm1" (formula "2") (term "1,1,1,0,0,0,0,1,0,1,0,0"))
                                                      (rule "polySimp_homoEq" (formula "2") (term "1,0,0,0,0,1,0,1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "2") (term "0,1,0,0,0,0,1,0,1,0,0"))
                                                      (rule "applyEq" (formula "2") (term "0,0,1,0,1,0,0,0,0,1,0,1,0,0") (ifseqformula "36"))
                                                      (rule "polySimp_mulComm0" (formula "2") (term "0,1,0,1,0,0,0,0,1,0,1,0,0"))
                                                      (rule "applyEq" (formula "2") (term "0,1,0,1,0,0,0,0,1,0,1,0,0") (ifseqformula "32"))
                                                      (rule "polySimp_addComm1" (formula "2") (term "0,1,0,0,0,0,1,0,1,0,0"))
                                                      (rule "polySimp_pullOutFactor1" (formula "2") (term "0,0,1,0,0,0,0,1,0,1,0,0"))
                                                      (rule "add_literals" (formula "2") (term "1,0,0,1,0,0,0,0,1,0,1,0,0"))
                                                      (rule "times_zero_1" (formula "2") (term "0,0,1,0,0,0,0,1,0,1,0,0"))
                                                      (rule "add_zero_left" (formula "2") (term "0,1,0,0,0,0,1,0,1,0,0"))
                                                      (rule "polySimp_invertEq" (formula "2") (term "1,0,1,1,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "0,1,0,1,1,1,0,0"))
                                                      (rule "times_zero_2" (formula "2") (term "1,1,0,1,1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "2") (term "0,1,0,1,1,1,0,0"))
                                                      (rule "polySimp_invertEq" (formula "2") (term "1,0,0,0"))
                                                      (rule "times_zero_2" (formula "2") (term "1,1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "0,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "2") (term "0,1,0,0,0"))
                                                      (rule "polySimp_invertEq" (formula "2") (term "1,0,0,1,1,0,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "0,1,0,0,1,1,0,1,0,0"))
                                                      (rule "mul_literals" (formula "2") (term "1,1,0,0,1,1,0,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "2") (term "0,1,0,0,1,1,0,1,0,0"))
                                                      (rule "polySimp_invertEq" (formula "2") (term "1,0,0,0,0,1,0,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "0,1,0,0,0,0,1,0,1,0,0"))
                                                      (rule "times_zero_2" (formula "2") (term "1,1,0,0,0,0,1,0,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "2") (term "0,1,0,0,0,0,1,0,1,0,0"))
                                                      (rule "elim_forall12" (formula "2") (term "0"))
                                                      (rule "eqClose" (formula "2") (term "1,0,0,0,0,1,0,1,0"))
                                                      (rule "eqClose" (formula "2") (term "1,0,0,1,1,0,1,0"))
                                                      (rule "eqClose" (formula "2") (term "1,0,1,1,1,0"))
                                                      (rule "concrete_and_3" (formula "2") (term "0,0,0,0,1,0,1,0"))
                                                      (rule "concrete_and_3" (formula "2") (term "0,0,1,1,0,1,0"))
                                                      (rule "concrete_and_3" (formula "2") (term "0,1,1,1,0"))
                                                      (rule "elim_forall8" (formula "2"))
                                                      (rule "eqClose" (formula "2") (term "0,1,1"))
                                                      (rule "eqClose" (formula "2") (term "0,0,1,1,0"))
                                                      (rule "eqClose" (formula "2") (term "0,0,0,0,1,0"))
                                                      (rule "ifthenelse_true" (formula "2") (term "1,1"))
                                                      (rule "ifthenelse_true" (formula "2") (term "0,1,1,0"))
                                                      (rule "ifthenelse_true" (formula "2") (term "0,0,0,1,0"))
                                                      (rule "andLeft" (formula "2"))
                                                      (rule "replace_known_right" (formula "2") (term "1,1") (ifseqformula "69"))
                                                      (rule "concrete_or_4" (formula "2") (term "1"))
                                                      (rule "replace_known_left" (formula "2") (term "1") (ifseqformula "57"))
                                                      (rule "concrete_impl_4" (formula "2"))
                                                      (rule "true_left" (formula "2"))
                                                      (rule "array_store_static_analyse" (formula "2") (ifseqformula "65"))
                                                      (rule "true_left" (formula "2"))
                                                      (rule "all_unused" (formula "1"))
                                                      (rule "true_left" (formula "1"))
                                                      (rule "blockEmpty" (formula "56") (term "4"))
                                                      (rule "assignment" (formula "56") (term "4"))
                                                      (builtin "Update Simplification" (formula "56"))
                                                      (rule "methodCallEmpty" (formula "56") (term "4"))
                                                      (rule "emptyModality" (formula "56") (term "4"))
                                                      (builtin "Update Simplification" (formula "56"))
                                                      (rule "notRight" (formula "56"))
                                                      (rule "eqSymm" (formula "1"))
                                                      (rule "applyEq" (formula "35") (term "0,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "27") (term "0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "12") (term "0,1,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "17") (term "0,1,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "59") (term "0,2") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "61") (term "0,1,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "26") (term "0,0,1,1,0") (ifseqformula "35"))
                                                      (rule "polySimp_mulComm0" (formula "26") (term "0,1,1,0"))
                                                      (rule "applyEq" (formula "29") (term "1") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "2") (term "1") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "33") (term "1") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "31") (term "1") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "37") (term "1") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "24") (term "1") (ifseqformula "35"))
                                                      (rule "applyEq" (formula "26") (term "0,1,1,0") (ifseqformula "31"))
                                                      (rule "polySimp_pullOutFactor1" (formula "26") (term "1,0"))
                                                      (rule "add_literals" (formula "26") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "26") (term "1,0"))
                                                      (rule "applyEq" (formula "26") (term "0") (ifseqformula "30"))
                                                      (rule "eqSymm" (formula "26"))
                                                      (rule "close" (formula "57") (ifseqformula "26"))
                                                   )
                                                   (branch " Exceptional Post"
                                                      (builtin "Update Simplification" (formula "54"))
                                                      (rule "impRight" (formula "54"))
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "andLeft" (formula "3"))
                                                      (rule "andLeft" (formula "2"))
                                                      (rule "notLeft" (formula "3"))
                                                      (rule "close" (formula "57") (ifseqformula "4"))
                                                   )
                                                )
                                                (branch " Exceptional Post"
                                                   (builtin "Update Simplification" (formula "54"))
                                                   (rule "typeEqDerived2" (formula "54") (term "0,1,0,1,0,1,0") (ifseqformula "10"))
                                                   (rule "boolean_equal" (formula "54") (term "1,0,1,0,1,0"))
                                                   (rule "concrete_and_3" (formula "54") (term "0,1,0,1,0"))
                                                   (rule "impRight" (formula "54"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "andLeft" (formula "3"))
                                                   (rule "andLeft" (formula "2"))
                                                   (rule "notLeft" (formula "3"))
                                                   (rule "close" (formula "56") (ifseqformula "4"))
                                                )
                                             )
                                             (branch " Null Reference (queryReceiver_20 = null)"
                                                (builtin "Update Simplification" (formula "40"))
                                                (builtin "Update Simplification" (formula "1"))
                                                (rule "close" (formula "50") (ifseqformula "1"))
                                             )
                                          )
                                          (branch " Null Reference (queryReceiver_19 = null)"
                                             (builtin "Update Simplification" (formula "41"))
                                             (builtin "Update Simplification" (formula "1"))
                                             (rule "applyEqRigid" (formula "44") (term "0,3,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "10") (term "1") (ifseqformula "1"))
                                             (rule "methodCallWithAssignment" (formula "40") (term "4") (inst "#v0=j"))
                                             (branch " Normal Execution (queryReceiver_20 != null)"
                                                (builtin "Update Simplification" (formula "40"))
                                                (rule "variableDeclaration" (formula "40") (term "4") (newnames "j_31"))
                                                (rule "resolvequery" (formula "44") (term "3,0") (inst "queryValue=java_lang_Stringequals_5"))
                                                (builtin "Update Simplification" (formula "46"))
                                                (builtin "Update Simplification" (formula "1"))
                                                (builtin "Update Simplification" (formula "2"))
                                                (rule "true_left" (formula "2"))
                                                (rule "apply_eq_boolean" (formula "1") (term "1") (ifseqformula "45"))
                                                (rule "false_to_not_true" (formula "1"))
                                                (rule "notLeft" (formula "1"))
                                                (rule "only_created_object_are_referenced_by_arrays_non_null" (formula "23") (term "0,0") (ifseqformula "24") (ifseqformula "30") (ifseqformula "49"))
                                                (rule "div_axiom" (formula "2") (term "0,2,0") (inst "quotient=quotient_30"))
                                                (rule "polySimp_mulComm0" (formula "2") (term "0,1,0,1"))
                                                (rule "polySimp_mulComm0" (formula "2") (term "0,2,1,1"))
                                                (rule "polySimp_mulComm0" (formula "2") (term "0,1,1,1"))
                                                (rule "polySimp_mulComm0" (formula "2") (term "1,1,1,1,1"))
                                                (rule "inEqSimp_contradEq7" (formula "2") (term "0") (ifseqformula "34"))
                                                (rule "times_zero_1" (formula "2") (term "1,0,0,0"))
                                                (rule "add_zero_right" (formula "2") (term "0,0,0"))
                                                (rule "leq_literals" (formula "2") (term "0,0"))
                                                (rule "concrete_and_2" (formula "2") (term "0"))
                                                (rule "concrete_or_2" (formula "2"))
                                                (rule "andLeft" (formula "2"))
                                                (rule "andLeft" (formula "2"))
                                                (rule "applyEq" (formula "5") (term "0,2,0") (ifseqformula "2"))
                                                (rule "inEqSimp_subsumption1" (formula "4") (term "0") (ifseqformula "36"))
                                                (rule "leq_literals" (formula "4") (term "0,0"))
                                                (rule "concrete_or_1" (formula "4") (term "0"))
                                                (rule "ifthenelse_true_for" (formula "4"))
                                                (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "3"))
                                                (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                                                (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0"))
                                                (rule "polySimp_elimOne" (formula "4") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                (rule "polySimp_rightDist" (formula "4") (term "0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "4") (term "0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "4") (term "1,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0"))
                                                (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "4") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                                (rule "mul_literals" (formula "4") (term "1"))
                                                (rule "div_axiom" (formula "5") (term "1,0") (inst "quotient=quotient_31"))
                                                (rule "polySimp_mulComm0" (formula "5") (term "0,1,0,1"))
                                                (rule "polySimp_mulComm0" (formula "5") (term "0,1,1,1"))
                                                (rule "polySimp_mulComm0" (formula "5") (term "1,1,1,1,1"))
                                                (rule "polySimp_mulComm0" (formula "5") (term "0,2,1,1"))
                                                (rule "inEqSimp_contradEq7" (formula "5") (term "0") (ifseqformula "37"))
                                                (rule "times_zero_1" (formula "5") (term "1,0,0,0"))
                                                (rule "add_zero_right" (formula "5") (term "0,0,0"))
                                                (rule "leq_literals" (formula "5") (term "0,0"))
                                                (rule "concrete_and_2" (formula "5") (term "0"))
                                                (rule "concrete_or_2" (formula "5"))
                                                (rule "andLeft" (formula "5"))
                                                (rule "andLeft" (formula "5"))
                                                (rule "applyEq" (formula "8") (term "1,0") (ifseqformula "5"))
                                                (rule "inEqSimp_subsumption1" (formula "7") (term "0") (ifseqformula "39"))
                                                (rule "leq_literals" (formula "7") (term "0,0"))
                                                (rule "concrete_or_1" (formula "7") (term "0"))
                                                (rule "ifthenelse_true_for" (formula "7"))
                                                (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "6"))
                                                (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                                                (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0"))
                                                (rule "polySimp_elimOne" (formula "7") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "7") (term "0"))
                                                (rule "polySimp_rightDist" (formula "7") (term "0,0,0"))
                                                (rule "mul_literals" (formula "7") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor2b" (formula "7") (term "0,0"))
                                                (rule "add_literals" (formula "7") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "7") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "7") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                                (rule "mul_literals" (formula "7") (term "1"))
                                                (rule "div_axiom" (formula "15") (term "0,2,0") (inst "quotient=quotient_32"))
                                                (rule "polySimp_mulComm0" (formula "15") (term "0,1,0,1"))
                                                (rule "polySimp_mulComm0" (formula "15") (term "1,1,1,1,1"))
                                                (rule "polySimp_mulComm0" (formula "15") (term "0,2,1,1"))
                                                (rule "polySimp_mulComm0" (formula "15") (term "0,1,1,1"))
                                                (rule "inEqSimp_contradEq7" (formula "15") (term "0") (ifseqformula "40"))
                                                (rule "times_zero_1" (formula "15") (term "1,0,0,0"))
                                                (rule "add_zero_right" (formula "15") (term "0,0,0"))
                                                (rule "leq_literals" (formula "15") (term "0,0"))
                                                (rule "concrete_and_2" (formula "15") (term "0"))
                                                (rule "concrete_or_2" (formula "15"))
                                                (rule "andLeft" (formula "15"))
                                                (rule "andLeft" (formula "15"))
                                                (rule "applyEq" (formula "18") (term "0,2,0") (ifseqformula "15"))
                                                (rule "inEqSimp_subsumption1" (formula "17") (term "0") (ifseqformula "42"))
                                                (rule "leq_literals" (formula "17") (term "0,0"))
                                                (rule "concrete_or_1" (formula "17") (term "0"))
                                                (rule "ifthenelse_true_for" (formula "17"))
                                                (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "16"))
                                                (rule "polySimp_rightDist" (formula "17") (term "0,0"))
                                                (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0"))
                                                (rule "polySimp_elimOne" (formula "17") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "17") (term "0"))
                                                (rule "polySimp_rightDist" (formula "17") (term "0,0,0"))
                                                (rule "mul_literals" (formula "17") (term "0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "17") (term "1,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0"))
                                                (rule "add_literals" (formula "17") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "17") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "17") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                                                (rule "mul_literals" (formula "17") (term "1"))
                                                (rule "div_axiom" (formula "18") (term "1,0") (inst "quotient=quotient_36"))
                                                (rule "polySimp_mulComm0" (formula "18") (term "0,1,0,1"))
                                                (rule "polySimp_mulComm0" (formula "18") (term "0,2,1,1"))
                                                (rule "polySimp_mulComm0" (formula "18") (term "1,1,1,1,1"))
                                                (rule "polySimp_mulComm0" (formula "18") (term "0,1,1,1"))
                                                (rule "inEqSimp_contradEq7" (formula "18") (term "0") (ifseqformula "43"))
                                                (rule "times_zero_1" (formula "18") (term "1,0,0,0"))
                                                (rule "add_zero_right" (formula "18") (term "0,0,0"))
                                                (rule "leq_literals" (formula "18") (term "0,0"))
                                                (rule "concrete_and_2" (formula "18") (term "0"))
                                                (rule "concrete_or_2" (formula "18"))
                                                (rule "andLeft" (formula "18"))
                                                (rule "andLeft" (formula "18"))
                                                (rule "applyEq" (formula "21") (term "1,0") (ifseqformula "18"))
                                                (rule "inEqSimp_subsumption1" (formula "20") (term "0") (ifseqformula "45"))
                                                (rule "leq_literals" (formula "20") (term "0,0"))
                                                (rule "concrete_or_1" (formula "20") (term "0"))
                                                (rule "ifthenelse_true_for" (formula "20"))
                                                (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "19"))
                                                (rule "polySimp_rightDist" (formula "20") (term "0,0"))
                                                (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0"))
                                                (rule "polySimp_elimOne" (formula "20") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "20") (term "0"))
                                                (rule "polySimp_rightDist" (formula "20") (term "0,0,0"))
                                                (rule "mul_literals" (formula "20") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor2b" (formula "20") (term "0,0"))
                                                (rule "add_literals" (formula "20") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "20") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "20") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "20"))
                                                (rule "mul_literals" (formula "20") (term "1"))
                                                (rule "throwUnfold" (formula "54") (term "3") (inst "#v0=v_NullPointerException"))
                                                (rule "variableDeclarationAssign" (formula "54") (term "3"))
                                                (rule "variableDeclaration" (formula "54") (term "3") (newnames "v_NullPointerException_4"))
                                                (rule "instanceCreationAssignment" (formula "54") (term "3") (inst "#v0=v_NullPointerException_5"))
                                                (rule "variableDeclarationAssign" (formula "54") (term "3"))
                                                (rule "variableDeclaration" (formula "54") (term "3") (newnames "v_NullPointerException_5"))
                                                (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "54") (term "3") (inst "#v0=v_NullPointerException_6"))
                                                (rule "variableDeclaration" (formula "54") (term "3") (newnames "v_NullPointerException_6"))
                                                (rule "methodBodyExpand" (formula "54") (term "3"))
                                                (rule "variableDeclaration" (formula "54") (term "3") (newnames "__NEW___2"))
                                                (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "54") (term "3") (inst "#v0=v_NullPointerException_7"))
                                                (rule "variableDeclaration" (formula "54") (term "3") (newnames "v_NullPointerException_7"))
                                                (rule "allocateInstance" (formula "54") (term "3"))
                                                (builtin "Update Simplification" (formula "54"))
                                                (rule "polySimp_addComm0" (formula "54") (term "1"))
                                                (rule "blockEmpty" (formula "54") (term "7"))
                                                (rule "assignment" (formula "54") (term "7"))
                                                (builtin "Update Simplification" (formula "54"))
                                                (rule "methodBodyExpand" (formula "54") (term "7"))
                                                (rule "assignment" (formula "54") (term "7"))
                                                (builtin "Update Simplification" (formula "54"))
                                                (rule "assignment" (formula "54") (term "9"))
                                                (builtin "Update Simplification" (formula "54"))
                                                (rule "methodCallWithinClass" (formula "54") (term "11"))
                                                (rule "methodBodyExpand" (formula "54") (term "11"))
                                                (rule "methodCallSuper" (formula "54") (term "11"))
                                                (rule "nextToCreate_non_negative" (formula "54") (term "1,1") (ifseqformula "42"))
                                                (rule "methodBodyExpand" (formula "55") (term "11"))
                                                (rule "methodCallSuper" (formula "55") (term "11"))
                                                (rule "methodBodyExpand" (formula "55") (term "11"))
                                                (rule "methodCallSuper" (formula "55") (term "11"))
                                                (rule "methodBodyExpand" (formula "55") (term "11"))
                                                (rule "methodCallSuper" (formula "55") (term "11"))
                                                (rule "methodBodyExpand" (formula "55") (term "11"))
                                                (rule "methodCallEmpty" (formula "55") (term "11"))
                                                (rule "blockEmpty" (formula "55") (term "11"))
                                                (rule "assignment" (formula "55") (term "11"))
                                                (builtin "Update Simplification" (formula "55"))
                                                (rule "assignment" (formula "55") (term "13"))
                                                (builtin "Update Simplification" (formula "55"))
                                                (rule "methodCallEmpty" (formula "55") (term "15"))
                                                (rule "methodCallEmpty" (formula "55") (term "15"))
                                                (rule "methodCallEmpty" (formula "55") (term "15"))
                                                (rule "methodCallEmpty" (formula "55") (term "15"))
                                                (rule "blockEmpty" (formula "55") (term "15"))
                                                (rule "methodCallReturnIgnoreResult" (formula "55") (term "15"))
                                                (rule "methodCallReturn" (formula "55") (term "15"))
                                                (rule "assignment" (formula "55") (term "15"))
                                                (builtin "Update Simplification" (formula "55"))
                                                (rule "methodCallEmpty" (formula "55") (term "15"))
                                                (rule "blockEmpty" (formula "55") (term "15"))
                                                (rule "assignment" (formula "55") (term "15"))
                                                (builtin "Update Simplification" (formula "55"))
                                                (rule "methodBodyExpand" (formula "55") (term "15"))
                                                (rule "methodCallSuper" (formula "55") (term "15"))
                                                (rule "methodBodyExpand" (formula "55") (term "15"))
                                                (rule "methodCallSuper" (formula "55") (term "15"))
                                                (rule "methodBodyExpand" (formula "55") (term "15"))
                                                (rule "methodCallSuper" (formula "55") (term "15"))
                                                (rule "methodBodyExpand" (formula "55") (term "15"))
                                                (rule "methodCallSuper" (formula "55") (term "15"))
                                                (rule "methodBodyExpand" (formula "55") (term "15"))
                                                (rule "methodCallEmpty" (formula "55") (term "15"))
                                                (rule "blockEmpty" (formula "55") (term "15"))
                                                (rule "assignment" (formula "55") (term "15"))
                                                (builtin "Update Simplification" (formula "55"))
                                                (rule "assignment" (formula "55") (term "15"))
                                                (builtin "Update Simplification" (formula "55"))
                                                (rule "methodCallEmpty" (formula "55") (term "15"))
                                                (rule "methodCallEmpty" (formula "55") (term "15"))
                                                (rule "methodCallEmpty" (formula "55") (term "15"))
                                                (rule "methodCallEmpty" (formula "55") (term "15"))
                                                (rule "blockEmpty" (formula "55") (term "15"))
                                                (rule "assignment_write_attribute" (formula "55") (term "15"))
                                                (branch " Normal Execution (v_NullPointerException_5 != null)"
                                                   (builtin "Update Simplification" (formula "56"))
                                                   (builtin "Update Simplification" (formula "55"))
                                                   (rule "repository_object_non_null" (formula "55"))
                                                   (rule "false_right" (formula "55"))
                                                   (rule "assignment" (formula "55") (term "15"))
                                                   (builtin "Update Simplification" (formula "55"))
                                                   (rule "methodCallThrow" (formula "55") (term "15"))
                                                   (rule "throwDiamond" (formula "55") (term "15"))
                                                   (builtin "Update Simplification" (formula "55"))
                                                   (rule "false_right" (formula "55"))
                                                   (builtin "Use Operation Contract" (formula "54") (term "4") (newnames "result_27") (contract "hashCode;;"))
                                                   (branch " Pre"
                                                      (builtin "Update Simplification" (formula "54"))
                                                      (rule "replace_known_left" (formula "54") (term "0,1") (ifseqformula "52"))
                                                      (rule "concrete_and_1" (formula "54") (term "1"))
                                                      (rule "replace_known_right" (formula "54") (term "0,1") (ifseqformula "62"))
                                                      (rule "concrete_not_2" (formula "54") (term "1"))
                                                      (rule "concrete_and_3" (formula "54"))
                                                      (rule "inReachableStateRewrite" (formula "54") (ifseqformula "43"))
                                                      (builtin "Update Simplification" (formula "54"))
                                                      (rule "eq_imp" (formula "54") (term "0,0,1"))
                                                      (rule "orRight" (formula "54"))
                                                      (rule "jmod_axiom" (formula "55") (term "1,1,0,0,1,1,0,1,0,0,1"))
                                                      (rule "polySimp_mulComm1" (formula "55") (term "1,1,1,0,0,1,1,0,1,0,0,1"))
                                                      (rule "polySimp_homoEq" (formula "55") (term "1,0,0,1,1,0,1,0,0,1"))
                                                      (rule "polySimp_addComm1" (formula "55") (term "0,1,0,0,1,1,0,1,0,0,1"))
                                                      (rule "applyEq" (formula "55") (term "0,0,1,0,1,0,0,1,1,0,1,0,0,1") (ifseqformula "32"))
                                                      (rule "polySimp_mulComm0" (formula "55") (term "0,1,0,1,0,0,1,1,0,1,0,0,1"))
                                                      (rule "applyEq" (formula "55") (term "0,1,0,1,0,0,1,1,0,1,0,0,1") (ifseqformula "28"))
                                                      (rule "polySimp_addComm1" (formula "55") (term "0,1,0,0,1,1,0,1,0,0,1"))
                                                      (rule "polySimp_pullOutFactor1" (formula "55") (term "0,0,1,0,0,1,1,0,1,0,0,1"))
                                                      (rule "add_literals" (formula "55") (term "1,0,0,1,0,0,1,1,0,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "55") (term "0,0,1,0,0,1,1,0,1,0,0,1"))
                                                      (rule "add_zero_left" (formula "55") (term "0,1,0,0,1,1,0,1,0,0,1"))
                                                      (rule "jmod_axiom" (formula "55") (term "1,1,0,1,1,1,0,0,1"))
                                                      (rule "polySimp_mulComm1" (formula "55") (term "1,1,1,0,1,1,1,0,0,1"))
                                                      (rule "polySimp_homoEq" (formula "55") (term "1,0,1,1,1,0,0,1"))
                                                      (rule "polySimp_addComm1" (formula "55") (term "0,1,0,1,1,1,0,0,1"))
                                                      (rule "applyEq" (formula "55") (term "0,0,1,0,1,0,1,1,1,0,0,1") (ifseqformula "32"))
                                                      (rule "polySimp_mulComm0" (formula "55") (term "0,1,0,1,0,1,1,1,0,0,1"))
                                                      (rule "applyEq" (formula "55") (term "0,1,0,1,0,1,1,1,0,0,1") (ifseqformula "28"))
                                                      (rule "polySimp_addComm1" (formula "55") (term "0,1,0,1,1,1,0,0,1"))
                                                      (rule "polySimp_pullOutFactor1" (formula "55") (term "0,0,1,0,1,1,1,0,0,1"))
                                                      (rule "add_literals" (formula "55") (term "1,0,0,1,0,1,1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "55") (term "0,0,1,0,1,1,1,0,0,1"))
                                                      (rule "add_zero_left" (formula "55") (term "0,1,0,1,1,1,0,0,1"))
                                                      (rule "jmod_axiom" (formula "55") (term "1,1,0,0,0,0,1,0,1,0,0,1"))
                                                      (rule "polySimp_mulComm1" (formula "55") (term "1,1,1,0,0,0,0,1,0,1,0,0,1"))
                                                      (rule "polySimp_homoEq" (formula "55") (term "1,0,0,0,0,1,0,1,0,0,1"))
                                                      (rule "polySimp_addComm1" (formula "55") (term "0,1,0,0,0,0,1,0,1,0,0,1"))
                                                      (rule "applyEq" (formula "55") (term "0,0,1,0,1,0,0,0,0,1,0,1,0,0,1") (ifseqformula "32"))
                                                      (rule "polySimp_mulComm0" (formula "55") (term "0,1,0,1,0,0,0,0,1,0,1,0,0,1"))
                                                      (rule "applyEq" (formula "55") (term "0,1,0,1,0,0,0,0,1,0,1,0,0,1") (ifseqformula "28"))
                                                      (rule "polySimp_addComm1" (formula "55") (term "0,1,0,0,0,0,1,0,1,0,0,1"))
                                                      (rule "polySimp_pullOutFactor1" (formula "55") (term "0,0,1,0,0,0,0,1,0,1,0,0,1"))
                                                      (rule "add_literals" (formula "55") (term "1,0,0,1,0,0,0,0,1,0,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "55") (term "0,0,1,0,0,0,0,1,0,1,0,0,1"))
                                                      (rule "add_zero_left" (formula "55") (term "0,1,0,0,0,0,1,0,1,0,0,1"))
                                                      (rule "jmod_axiom" (formula "55") (term "1,1,0,0,0,1"))
                                                      (rule "polySimp_mulComm1" (formula "55") (term "1,1,1,0,0,0,1"))
                                                      (rule "polySimp_homoEq" (formula "55") (term "1,0,0,0,1"))
                                                      (rule "polySimp_addComm1" (formula "55") (term "0,1,0,0,0,1"))
                                                      (rule "applyEq" (formula "55") (term "0,0,1,0,1,0,0,0,1") (ifseqformula "32"))
                                                      (rule "polySimp_mulComm0" (formula "55") (term "0,1,0,1,0,0,0,1"))
                                                      (rule "applyEq" (formula "55") (term "0,1,0,1,0,0,0,1") (ifseqformula "28"))
                                                      (rule "polySimp_addComm1" (formula "55") (term "0,1,0,0,0,1"))
                                                      (rule "polySimp_pullOutFactor1" (formula "55") (term "0,0,1,0,0,0,1"))
                                                      (rule "add_literals" (formula "55") (term "1,0,0,1,0,0,0,1"))
                                                      (rule "times_zero_1" (formula "55") (term "0,0,1,0,0,0,1"))
                                                      (rule "add_zero_left" (formula "55") (term "0,1,0,0,0,1"))
                                                      (rule "polySimp_invertEq" (formula "55") (term "1,0,0,1,1,0,1,0,0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "55") (term "0,1,0,0,1,1,0,1,0,0,1"))
                                                      (rule "times_zero_2" (formula "55") (term "1,1,0,0,1,1,0,1,0,0,1"))
                                                      (rule "polySimp_elimOne" (formula "55") (term "0,1,0,0,1,1,0,1,0,0,1"))
                                                      (rule "polySimp_invertEq" (formula "55") (term "1,0,1,1,1,0,0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "55") (term "0,1,0,1,1,1,0,0,1"))
                                                      (rule "times_zero_2" (formula "55") (term "1,1,0,1,1,1,0,0,1"))
                                                      (rule "polySimp_elimOne" (formula "55") (term "0,1,0,1,1,1,0,0,1"))
                                                      (rule "polySimp_invertEq" (formula "55") (term "1,0,0,0,0,1,0,1,0,0,1"))
                                                      (rule "times_zero_2" (formula "55") (term "1,1,0,0,0,0,1,0,1,0,0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "55") (term "0,1,0,0,0,0,1,0,1,0,0,1"))
                                                      (rule "polySimp_elimOne" (formula "55") (term "0,1,0,0,0,0,1,0,1,0,0,1"))
                                                      (rule "polySimp_invertEq" (formula "55") (term "1,0,0,0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "55") (term "0,1,0,0,0,1"))
                                                      (rule "mul_literals" (formula "55") (term "1,1,0,0,0,1"))
                                                      (rule "polySimp_elimOne" (formula "55") (term "0,1,0,0,0,1"))
                                                      (rule "elim_forall12" (formula "55") (term "0,1"))
                                                      (rule "eqClose" (formula "55") (term "1,0,0,0,0,1,0,1,0,1"))
                                                      (rule "eqClose" (formula "55") (term "1,0,0,1,1,0,1,0,1"))
                                                      (rule "eqClose" (formula "55") (term "1,0,1,1,1,0,1"))
                                                      (rule "concrete_and_3" (formula "55") (term "0,0,0,0,1,0,1,0,1"))
                                                      (rule "concrete_and_3" (formula "55") (term "0,0,1,1,0,1,0,1"))
                                                      (rule "concrete_and_3" (formula "55") (term "0,1,1,1,0,1"))
                                                      (rule "elim_forall8" (formula "55") (term "1"))
                                                      (rule "eqClose" (formula "55") (term "0,1,1,1"))
                                                      (rule "eqClose" (formula "55") (term "0,0,1,1,0,1"))
                                                      (rule "eqClose" (formula "55") (term "0,0,0,0,1,0,1"))
                                                      (rule "ifthenelse_true" (formula "55") (term "1,1,1"))
                                                      (rule "ifthenelse_true" (formula "55") (term "0,1,1,0,1"))
                                                      (rule "ifthenelse_true" (formula "55") (term "0,0,0,1,0,1"))
                                                      (rule "replace_known_right" (formula "55") (term "1,1,0,1") (ifseqformula "63"))
                                                      (rule "concrete_or_4" (formula "55") (term "1,0,1"))
                                                      (rule "replace_known_left" (formula "55") (term "0,0,1") (ifseqformula "37"))
                                                      (rule "concrete_impl_1" (formula "55") (term "0,1"))
                                                      (rule "replace_known_left" (formula "55") (term "0,1") (ifseqformula "52"))
                                                      (rule "concrete_and_1" (formula "55") (term "1"))
                                                      (rule "array_store_static_analyse" (formula "55") (term "1") (ifseqformula "60"))
                                                      (rule "concrete_and_3" (formula "55"))
                                                      (rule "allRight" (formula "55") (inst "sk=o_4"))
                                                      (rule "closeTrue" (formula "55"))
                                                   )
                                                   (branch " Post"
                                                      (builtin "Update Simplification" (formula "54"))
                                                      (rule "inInt" (formula "54") (term "1,1,0,0"))
                                                      (rule "concrete_and_3" (formula "54") (term "1,0,0"))
                                                      (rule "impRight" (formula "54"))
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "andLeft" (formula "3"))
                                                      (rule "eqSymm" (formula "3"))
                                                      (rule "applyEq" (formula "3") (term "0") (ifseqformula "37"))
                                                      (rule "eqSymm" (formula "3"))
                                                      (rule "applyEq" (formula "57") (term "0") (ifseqformula "3"))
                                                      (rule "inReachableStateExpand" (formula "2"))
                                                      (builtin "Update Simplification" (formula "2"))
                                                      (rule "eq_imp" (formula "2") (term "0,0,1"))
                                                      (rule "replace_known_left" (formula "2") (term "0") (ifseqformula "46"))
                                                      (rule "concrete_impl_1" (formula "2"))
                                                      (rule "andLeft" (formula "2"))
                                                      (rule "jmod_axiom" (formula "3") (term "1,1,0,0,0"))
                                                      (rule "polySimp_mulComm1" (formula "3") (term "1,1,1,0,0,0"))
                                                      (rule "polySimp_homoEq" (formula "3") (term "1,0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "3") (term "0,1,0,0,0"))
                                                      (rule "applyEq" (formula "3") (term "0,0,1,0,1,0,0,0") (ifseqformula "36"))
                                                      (rule "polySimp_mulComm0" (formula "3") (term "0,1,0,1,0,0,0"))
                                                      (rule "applyEq" (formula "3") (term "0,1,0,1,0,0,0") (ifseqformula "32"))
                                                      (rule "polySimp_addComm1" (formula "3") (term "0,1,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1" (formula "3") (term "0,0,1,0,0,0"))
                                                      (rule "add_literals" (formula "3") (term "1,0,0,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "3") (term "0,0,1,0,0,0"))
                                                      (rule "add_zero_left" (formula "3") (term "0,1,0,0,0"))
                                                      (rule "jmod_axiom" (formula "3") (term "1,1,0,0,1,1,0,1,0,0"))
                                                      (rule "polySimp_mulComm1" (formula "3") (term "1,1,1,0,0,1,1,0,1,0,0"))
                                                      (rule "polySimp_homoEq" (formula "3") (term "1,0,0,1,1,0,1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "3") (term "0,1,0,0,1,1,0,1,0,0"))
                                                      (rule "applyEq" (formula "3") (term "0,0,1,0,1,0,0,1,1,0,1,0,0") (ifseqformula "36"))
                                                      (rule "polySimp_mulComm0" (formula "3") (term "0,1,0,1,0,0,1,1,0,1,0,0"))
                                                      (rule "applyEq" (formula "3") (term "0,1,0,1,0,0,1,1,0,1,0,0") (ifseqformula "32"))
                                                      (rule "polySimp_addComm1" (formula "3") (term "0,1,0,0,1,1,0,1,0,0"))
                                                      (rule "polySimp_pullOutFactor1" (formula "3") (term "0,0,1,0,0,1,1,0,1,0,0"))
                                                      (rule "add_literals" (formula "3") (term "1,0,0,1,0,0,1,1,0,1,0,0"))
                                                      (rule "times_zero_1" (formula "3") (term "0,0,1,0,0,1,1,0,1,0,0"))
                                                      (rule "add_zero_left" (formula "3") (term "0,1,0,0,1,1,0,1,0,0"))
                                                      (rule "jmod_axiom" (formula "3") (term "1,1,0,1,1,1,0,0"))
                                                      (rule "polySimp_mulComm1" (formula "3") (term "1,1,1,0,1,1,1,0,0"))
                                                      (rule "polySimp_homoEq" (formula "3") (term "1,0,1,1,1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "3") (term "0,1,0,1,1,1,0,0"))
                                                      (rule "applyEq" (formula "3") (term "0,0,1,0,1,0,1,1,1,0,0") (ifseqformula "36"))
                                                      (rule "polySimp_mulComm0" (formula "3") (term "0,1,0,1,0,1,1,1,0,0"))
                                                      (rule "applyEq" (formula "3") (term "0,1,0,1,0,1,1,1,0,0") (ifseqformula "32"))
                                                      (rule "polySimp_addComm1" (formula "3") (term "0,1,0,1,1,1,0,0"))
                                                      (rule "polySimp_pullOutFactor1" (formula "3") (term "0,0,1,0,1,1,1,0,0"))
                                                      (rule "add_literals" (formula "3") (term "1,0,0,1,0,1,1,1,0,0"))
                                                      (rule "times_zero_1" (formula "3") (term "0,0,1,0,1,1,1,0,0"))
                                                      (rule "add_zero_left" (formula "3") (term "0,1,0,1,1,1,0,0"))
                                                      (rule "jmod_axiom" (formula "3") (term "1,1,0,0,0,0,1,0,1,0,0"))
                                                      (rule "polySimp_mulComm1" (formula "3") (term "1,1,1,0,0,0,0,1,0,1,0,0"))
                                                      (rule "polySimp_homoEq" (formula "3") (term "1,0,0,0,0,1,0,1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "3") (term "0,1,0,0,0,0,1,0,1,0,0"))
                                                      (rule "applyEq" (formula "3") (term "0,0,1,0,1,0,0,0,0,1,0,1,0,0") (ifseqformula "36"))
                                                      (rule "polySimp_mulComm0" (formula "3") (term "0,1,0,1,0,0,0,0,1,0,1,0,0"))
                                                      (rule "applyEq" (formula "3") (term "0,1,0,1,0,0,0,0,1,0,1,0,0") (ifseqformula "32"))
                                                      (rule "polySimp_addComm1" (formula "3") (term "0,1,0,0,0,0,1,0,1,0,0"))
                                                      (rule "polySimp_pullOutFactor1" (formula "3") (term "0,0,1,0,0,0,0,1,0,1,0,0"))
                                                      (rule "add_literals" (formula "3") (term "1,0,0,1,0,0,0,0,1,0,1,0,0"))
                                                      (rule "times_zero_1" (formula "3") (term "0,0,1,0,0,0,0,1,0,1,0,0"))
                                                      (rule "add_zero_left" (formula "3") (term "0,1,0,0,0,0,1,0,1,0,0"))
                                                      (rule "polySimp_invertEq" (formula "3") (term "1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "3") (term "0,1,0,0,0"))
                                                      (rule "times_zero_2" (formula "3") (term "1,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "3") (term "0,1,0,0,0"))
                                                      (rule "polySimp_invertEq" (formula "3") (term "1,0,0,1,1,0,1,0,0"))
                                                      (rule "times_zero_2" (formula "3") (term "1,1,0,0,1,1,0,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "3") (term "0,1,0,0,1,1,0,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "3") (term "0,1,0,0,1,1,0,1,0,0"))
                                                      (rule "polySimp_invertEq" (formula "3") (term "1,0,1,1,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "3") (term "0,1,0,1,1,1,0,0"))
                                                      (rule "times_zero_2" (formula "3") (term "1,1,0,1,1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "3") (term "0,1,0,1,1,1,0,0"))
                                                      (rule "polySimp_invertEq" (formula "3") (term "1,0,0,0,0,1,0,1,0,0"))
                                                      (rule "times_zero_2" (formula "3") (term "1,1,0,0,0,0,1,0,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "3") (term "0,1,0,0,0,0,1,0,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "3") (term "0,1,0,0,0,0,1,0,1,0,0"))
                                                      (rule "elim_forall12" (formula "3") (term "0"))
                                                      (rule "eqClose" (formula "3") (term "1,0,0,0,0,1,0,1,0"))
                                                      (rule "eqClose" (formula "3") (term "1,0,0,1,1,0,1,0"))
                                                      (rule "eqClose" (formula "3") (term "1,0,1,1,1,0"))
                                                      (rule "concrete_and_3" (formula "3") (term "0,0,0,0,1,0,1,0"))
                                                      (rule "concrete_and_3" (formula "3") (term "0,0,1,1,0,1,0"))
                                                      (rule "concrete_and_3" (formula "3") (term "0,1,1,1,0"))
                                                      (rule "elim_forall8" (formula "3"))
                                                      (rule "eqClose" (formula "3") (term "0,1,1"))
                                                      (rule "eqClose" (formula "3") (term "0,0,1,1,0"))
                                                      (rule "eqClose" (formula "3") (term "0,0,0,0,1,0"))
                                                      (rule "ifthenelse_true" (formula "3") (term "1,1"))
                                                      (rule "ifthenelse_true" (formula "3") (term "0,1,1,0"))
                                                      (rule "ifthenelse_true" (formula "3") (term "0,0,0,1,0"))
                                                      (rule "andLeft" (formula "3"))
                                                      (rule "replace_known_right" (formula "3") (term "1,1") (ifseqformula "67"))
                                                      (rule "concrete_or_4" (formula "3") (term "1"))
                                                      (rule "replace_known_left" (formula "3") (term "1") (ifseqformula "57"))
                                                      (rule "concrete_impl_4" (formula "3"))
                                                      (rule "true_left" (formula "3"))
                                                      (rule "array_store_static_analyse" (formula "3") (ifseqformula "63"))
                                                      (rule "true_left" (formula "3"))
                                                      (rule "all_unused" (formula "2"))
                                                      (rule "true_left" (formula "2"))
                                                      (rule "blockEmpty" (formula "56") (term "4"))
                                                      (rule "assignment" (formula "56") (term "4"))
                                                      (builtin "Update Simplification" (formula "56"))
                                                      (rule "methodCallEmpty" (formula "56") (term "4"))
                                                      (rule "emptyModality" (formula "56") (term "4"))
                                                      (builtin "Update Simplification" (formula "56"))
                                                      (rule "notRight" (formula "56"))
                                                      (rule "eqSymm" (formula "1"))
                                                      (rule "applyEq" (formula "57") (term "0,2") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "56") (term "0,1,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "18") (term "0,1,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "35") (term "0,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "27") (term "0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "13") (term "0,1,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "29") (term "1") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "33") (term "1") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "3") (term "1") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "31") (term "1") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "37") (term "1") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "26") (term "0,0,1,1,0") (ifseqformula "35"))
                                                      (rule "polySimp_mulComm0" (formula "26") (term "0,1,1,0"))
                                                      (rule "applyEq" (formula "25") (term "1") (ifseqformula "35"))
                                                      (rule "applyEq" (formula "26") (term "0,1,1,0") (ifseqformula "31"))
                                                      (rule "polySimp_pullOutFactor1" (formula "26") (term "1,0"))
                                                      (rule "add_literals" (formula "26") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "26") (term "1,0"))
                                                      (rule "inEqSimp_contradInEq0" (formula "25") (term "0,0") (ifseqformula "26"))
                                                      (rule "qeq_literals" (formula "25") (term "0,0,0"))
                                                      (rule "concrete_and_2" (formula "25") (term "0,0"))
                                                      (rule "ifthenelse_false" (formula "25") (term "0"))
                                                      (rule "eqSymm" (formula "25"))
                                                      (rule "applyEqRigid" (formula "30") (term "1,0") (ifseqformula "25"))
                                                      (rule "polySimp_mulAssoc" (formula "30") (term "0"))
                                                      (rule "polySimp_homoEq" (formula "30"))
                                                      (rule "polySimp_mulLiterals" (formula "30") (term "1,0"))
                                                      (rule "polySimp_elimOne" (formula "30") (term "1,0"))
                                                      (rule "applyEqRigid" (formula "33") (term "0,1") (ifseqformula "25"))
                                                      (rule "polySimp_mulLiterals" (formula "33") (term "1"))
                                                      (rule "polySimp_elimOne" (formula "33") (term "1"))
                                                      (rule "applyEqRigid" (formula "34") (term "1") (ifseqformula "25"))
                                                      (rule "polySimp_sepPosMonomial" (formula "30"))
                                                      (rule "applyEq" (formula "20") (term "0") (ifseqformula "30"))
                                                      (rule "inEqSimp_homoInEq0" (formula "20"))
                                                      (rule "polySimp_mulLiterals" (formula "20") (term "1,0"))
                                                      (rule "polySimp_pullOutFactor0" (formula "20") (term "0"))
                                                      (rule "add_literals" (formula "20") (term "1,0"))
                                                      (rule "times_zero_1" (formula "20") (term "0"))
                                                      (rule "qeq_literals" (formula "20"))
                                                      (rule "true_left" (formula "20"))
                                                      (rule "applyEq" (formula "20") (term "0") (ifseqformula "29"))
                                                      (rule "inEqSimp_homoInEq1" (formula "20"))
                                                      (rule "polySimp_mulLiterals" (formula "20") (term "1,0"))
                                                      (rule "polySimp_elimOne" (formula "20") (term "1,0"))
                                                      (rule "polySimp_addComm1" (formula "20") (term "0"))
                                                      (rule "polySimp_pullOutFactor2b" (formula "20") (term "0,0"))
                                                      (rule "add_literals" (formula "20") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "20") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "20") (term "0,0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "20"))
                                                      (rule "polySimp_mulLiterals" (formula "20") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "20") (term "0"))
                                                      (rule "polyDiv_pullOut" (formula "19") (term "0") (inst "polyDivCoeff=quotient_32"))
                                                      (rule "polySimp_mulComm1" (formula "19") (term "1,0,0,2,0"))
                                                      (rule "polySimp_mulComm0" (formula "19") (term "0,1,0,0,2,0"))
                                                      (rule "polySimp_addComm0" (formula "19") (term "2,0"))
                                                      (rule "applyEq" (formula "19") (term "0,1,0,1,2,0") (ifseqformula "28"))
                                                      (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1,2,0"))
                                                      (rule "polySimp_pullOutFactor0" (formula "19") (term "0,1,2,0"))
                                                      (rule "add_literals" (formula "19") (term "1,0,1,2,0"))
                                                      (rule "times_zero_1" (formula "19") (term "0,1,2,0"))
                                                      (rule "inEqSimp_contradEq7" (formula "19") (term "0,0") (ifseqformula "46"))
                                                      (rule "times_zero_1" (formula "19") (term "1,0,0,0,0"))
                                                      (rule "add_literals" (formula "19") (term "0,0,0,0"))
                                                      (rule "leq_literals" (formula "19") (term "0,0,0"))
                                                      (rule "concrete_and_2" (formula "19") (term "0,0"))
                                                      (rule "ifthenelse_false" (formula "19") (term "0"))
                                                      (rule "polySimp_homoEq" (formula "19"))
                                                      (rule "polySimp_mulComm0" (formula "19") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "19") (term "1,0"))
                                                      (rule "polySimp_mulComm0" (formula "19") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "19") (term "0"))
                                                      (rule "polySimp_pullOutFactor1" (formula "19") (term "0,0"))
                                                      (rule "add_literals" (formula "19") (term "1,0,0"))
                                                      (rule "times_zero_1" (formula "19") (term "0,0"))
                                                      (rule "add_zero_left" (formula "19") (term "0"))
                                                      (rule "polySimp_invertEq" (formula "19"))
                                                      (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                                                      (rule "times_zero_2" (formula "19") (term "1"))
                                                      (rule "polySimp_elimOne" (formula "19") (term "0"))
                                                      (rule "polyDiv_zero" (formula "19") (term "0"))
                                                      (rule "div_literals" (formula "19") (term "1,0"))
                                                      (rule "inEqSimp_contradEq7" (formula "19") (term "0,0") (ifseqformula "46"))
                                                      (rule "times_zero_1" (formula "19") (term "1,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "19") (term "0,0,0,0"))
                                                      (rule "leq_literals" (formula "19") (term "0,0,0"))
                                                      (rule "concrete_and_2" (formula "19") (term "0,0"))
                                                      (rule "ifthenelse_false" (formula "19") (term "0"))
                                                      (rule "eqClose" (formula "19"))
                                                      (rule "true_left" (formula "19"))
                                                      (rule "polyDiv_pullOut" (formula "19") (term "0") (inst "polyDivCoeff=quotient_32 * -1"))
                                                      (rule "polySimp_mulLiterals" (formula "19") (term "0,1,0,0,2,0"))
                                                      (rule "polySimp_elimOneLeft1" (formula "19") (term "1,0,0,2,0"))
                                                      (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,2,0"))
                                                      (rule "polySimp_addComm0" (formula "19") (term "2,0"))
                                                      (rule "applyEq" (formula "19") (term "1,0,1,2,0") (ifseqformula "27"))
                                                      (rule "polySimp_pullOutFactor1" (formula "19") (term "0,1,2,0"))
                                                      (rule "add_literals" (formula "19") (term "1,0,1,2,0"))
                                                      (rule "times_zero_1" (formula "19") (term "0,1,2,0"))
                                                      (rule "inEqSimp_contradEq7" (formula "19") (term "0,0") (ifseqformula "45"))
                                                      (rule "times_zero_1" (formula "19") (term "1,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "19") (term "0,0,0,0"))
                                                      (rule "leq_literals" (formula "19") (term "0,0,0"))
                                                      (rule "concrete_and_2" (formula "19") (term "0,0"))
                                                      (rule "ifthenelse_false" (formula "19") (term "0"))
                                                      (rule "polySimp_homoEq" (formula "19"))
                                                      (rule "polySimp_mulComm0" (formula "19") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "19") (term "1,0"))
                                                      (rule "polySimp_mulAssoc" (formula "19") (term "0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "19") (term "0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "19") (term "0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "19") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "19") (term "0"))
                                                      (rule "polySimp_sepNegMonomial" (formula "19"))
                                                      (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "19") (term "0"))
                                                      (rule "polyDiv_zero" (formula "19") (term "0"))
                                                      (rule "div_literals" (formula "19") (term "1,0"))
                                                      (rule "inEqSimp_contradEq7" (formula "19") (term "0,0") (ifseqformula "45"))
                                                      (rule "times_zero_1" (formula "19") (term "1,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "19") (term "0,0,0,0"))
                                                      (rule "leq_literals" (formula "19") (term "0,0,0"))
                                                      (rule "concrete_and_2" (formula "19") (term "0,0"))
                                                      (rule "ifthenelse_false" (formula "19") (term "0"))
                                                      (rule "polySimp_homoEq" (formula "19"))
                                                      (rule "mul_literals" (formula "19") (term "1,0"))
                                                      (rule "add_zero_right" (formula "19") (term "0"))
                                                      (rule "polySimp_sepPosMonomial" (formula "19"))
                                                      (rule "applyEq" (formula "27") (term "1,0") (ifseqformula "19"))
                                                      (rule "polySimp_mulAssoc" (formula "27") (term "0"))
                                                      (rule "polySimp_homoEq" (formula "27"))
                                                      (rule "polySimp_mulLiterals" (formula "27") (term "1,0"))
                                                      (rule "polySimp_elimOne" (formula "27") (term "1,0"))
                                                      (rule "applyEqRigid" (formula "30") (term "1") (ifseqformula "19"))
                                                      (rule "applyEqRigid" (formula "31") (term "0,1") (ifseqformula "19"))
                                                      (rule "polySimp_mulLiterals" (formula "31") (term "1"))
                                                      (rule "polySimp_elimOne" (formula "31") (term "1"))
                                                      (rule "applyEqRigid" (formula "22") (term "0,1") (ifseqformula "19"))
                                                      (rule "polySimp_mulLiterals" (formula "22") (term "1"))
                                                      (rule "polySimp_elimOne" (formula "22") (term "1"))
                                                      (rule "polySimp_sepPosMonomial" (formula "27"))
                                                      (rule "polySimp_mulLiterals" (formula "27") (term "1"))
                                                      (rule "polySimp_elimOne" (formula "27") (term "1"))
                                                      (rule "applyEq" (formula "21") (term "0") (ifseqformula "27"))
                                                      (rule "inEqSimp_homoInEq1" (formula "21"))
                                                      (rule "polySimp_addComm1" (formula "21") (term "0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0"))
                                                      (rule "add_literals" (formula "21") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "21") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "21") (term "0,0"))
                                                      (rule "applyEq" (formula "20") (term "0") (ifseqformula "27"))
                                                      (rule "inEqSimp_homoInEq0" (formula "20"))
                                                      (rule "polySimp_pullOutFactor1" (formula "20") (term "0"))
                                                      (rule "add_literals" (formula "20") (term "1,0"))
                                                      (rule "times_zero_1" (formula "20") (term "0"))
                                                      (rule "qeq_literals" (formula "20"))
                                                      (rule "true_left" (formula "20"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "20"))
                                                      (rule "polySimp_mulLiterals" (formula "20") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "20") (term "0"))
                                                      (rule "resolvequery" (formula "50") (term "3,0") (inst "queryValue=java_lang_Stringequals_6"))
                                                      (builtin "Update Simplification" (formula "52"))
                                                      (builtin "Update Simplification" (formula "1"))
                                                      (builtin "Update Simplification" (formula "2"))
                                                      (rule "true_left" (formula "2"))
                                                      (rule "apply_eq_boolean" (formula "1") (term "1") (ifseqformula "51"))
                                                      (rule "false_to_not_true" (formula "1"))
                                                      (rule "notLeft" (formula "1"))
                                                      (rule "resolvequery" (formula "18") (term "3,0") (inst "queryValue=java_lang_StringhashCode_19"))
                                                      (builtin "Update Simplification" (formula "20"))
                                                      (builtin "Update Simplification" (formula "18"))
                                                      (rule "eqSymm" (formula "19") (term "0,1,0,3"))
                                                      (rule "applyEqRigid" (formula "19") (term "0,0,1,0,3") (ifseqformula "20"))
                                                      (rule "applyEq" (formula "18") (term "1") (ifseqformula "20"))
                                                      (rule "resolvequery" (formula "13") (term "3,0") (inst "queryValue=java_lang_StringhashCode_20"))
                                                      (builtin "Update Simplification" (formula "15"))
                                                      (builtin "Update Simplification" (formula "13"))
                                                      (rule "eqSymm" (formula "14") (term "0,1,0,3"))
                                                      (rule "applyEqRigid" (formula "14") (term "0,0,1,0,3") (ifseqformula "15"))
                                                      (rule "applyEqRigid" (formula "13") (term "1") (ifseqformula "15"))
                                                      (rule "variableDeclaration" (formula "21") (term "3") (newnames "hcode_19"))
                                                      (rule "variableDeclaration" (formula "14") (term "3") (newnames "hcode_20"))
                                                      (rule "variableDeclaration" (formula "21") (term "3") (newnames "queryReceiver_23"))
                                                      (rule "variableDeclaration" (formula "14") (term "3") (newnames "queryReceiver_24"))
                                                      (rule "emptyModality" (formula "21") (term "3"))
                                                      (builtin "Update Simplification" (formula "21"))
                                                      (rule "applyEq" (formula "21") (term "0") (ifseqformula "19"))
                                                      (rule "emptyModality" (formula "14") (term "3"))
                                                      (builtin "Update Simplification" (formula "14"))
                                                      (rule "applyEq" (formula "14") (term "0") (ifseqformula "18"))
                                                      (rule "boxToDiamond" (formula "21") (term "4"))
                                                      (builtin "Update Simplification" (formula "21"))
                                                      (rule "notLeft" (formula "21"))
                                                      (rule "boxToDiamond" (formula "14") (term "4"))
                                                      (builtin "Update Simplification" (formula "14"))
                                                      (rule "notLeft" (formula "14"))
                                                      (rule "methodCallWithAssignment" (formula "53") (term "4") (inst "#v0=j"))
                                                      (branch " Normal Execution (queryReceiver_23 != null)"
                                                         (builtin "Update Simplification" (formula "53"))
                                                         (rule "variableDeclaration" (formula "53") (term "4") (newnames "j_32"))
                                                         (rule "methodCallWithAssignment" (formula "52") (term "4") (inst "#v0=j"))
                                                         (branch " Normal Execution (queryReceiver_24 != null)"
                                                            (builtin "Update Simplification" (formula "52"))
                                                            (rule "variableDeclaration" (formula "52") (term "4") (newnames "j_33"))
                                                            (builtin "Use Operation Contract" (formula "53") (term "4") (newnames "result_29") (contract "hashCode;;"))
                                                            (branch " Pre"
                                                               (builtin "Update Simplification" (formula "53"))
                                                               (rule "replace_known_left" (formula "53") (term "0,1") (ifseqformula "51"))
                                                               (rule "concrete_and_1" (formula "53") (term "1"))
                                                               (rule "replace_known_right" (formula "53") (term "0,1") (ifseqformula "63"))
                                                               (rule "concrete_not_2" (formula "53") (term "1"))
                                                               (rule "concrete_and_3" (formula "53"))
                                                               (rule "inReachableStateRewrite" (formula "53") (ifseqformula "42"))
                                                               (builtin "Update Simplification" (formula "53"))
                                                               (rule "eq_imp" (formula "53") (term "0,0,1"))
                                                               (rule "orRight" (formula "53"))
                                                               (rule "jmod_axiom" (formula "54") (term "1,1,0,0,1,1,0,1,0,0,1"))
                                                               (rule "polySimp_mulComm1" (formula "54") (term "1,1,1,0,0,1,1,0,1,0,0,1"))
                                                               (rule "polySimp_homoEq" (formula "54") (term "1,0,0,1,1,0,1,0,0,1"))
                                                               (rule "polySimp_addComm1" (formula "54") (term "0,1,0,0,1,1,0,1,0,0,1"))
                                                               (rule "applyEq" (formula "54") (term "0,0,1,0,1,0,0,1,1,0,1,0,0,1") (ifseqformula "31"))
                                                               (rule "polySimp_mulComm0" (formula "54") (term "0,1,0,1,0,0,1,1,0,1,0,0,1"))
                                                               (rule "applyEq" (formula "54") (term "0,1,0,1,0,0,1,1,0,1,0,0,1") (ifseqformula "27"))
                                                               (rule "polySimp_addComm1" (formula "54") (term "0,1,0,0,1,1,0,1,0,0,1"))
                                                               (rule "polySimp_pullOutFactor1" (formula "54") (term "0,0,1,0,0,1,1,0,1,0,0,1"))
                                                               (rule "add_literals" (formula "54") (term "1,0,0,1,0,0,1,1,0,1,0,0,1"))
                                                               (rule "times_zero_1" (formula "54") (term "0,0,1,0,0,1,1,0,1,0,0,1"))
                                                               (rule "add_zero_left" (formula "54") (term "0,1,0,0,1,1,0,1,0,0,1"))
                                                               (rule "jmod_axiom" (formula "54") (term "1,1,0,0,0,0,1,0,1,0,0,1"))
                                                               (rule "polySimp_mulComm1" (formula "54") (term "1,1,1,0,0,0,0,1,0,1,0,0,1"))
                                                               (rule "polySimp_homoEq" (formula "54") (term "1,0,0,0,0,1,0,1,0,0,1"))
                                                               (rule "polySimp_addComm1" (formula "54") (term "0,1,0,0,0,0,1,0,1,0,0,1"))
                                                               (rule "applyEq" (formula "54") (term "0,0,1,0,1,0,0,0,0,1,0,1,0,0,1") (ifseqformula "31"))
                                                               (rule "polySimp_mulComm0" (formula "54") (term "0,1,0,1,0,0,0,0,1,0,1,0,0,1"))
                                                               (rule "applyEq" (formula "54") (term "0,1,0,1,0,0,0,0,1,0,1,0,0,1") (ifseqformula "27"))
                                                               (rule "polySimp_addComm1" (formula "54") (term "0,1,0,0,0,0,1,0,1,0,0,1"))
                                                               (rule "polySimp_pullOutFactor1" (formula "54") (term "0,0,1,0,0,0,0,1,0,1,0,0,1"))
                                                               (rule "add_literals" (formula "54") (term "1,0,0,1,0,0,0,0,1,0,1,0,0,1"))
                                                               (rule "times_zero_1" (formula "54") (term "0,0,1,0,0,0,0,1,0,1,0,0,1"))
                                                               (rule "add_zero_left" (formula "54") (term "0,1,0,0,0,0,1,0,1,0,0,1"))
                                                               (rule "jmod_axiom" (formula "54") (term "1,1,0,1,1,1,0,0,1"))
                                                               (rule "polySimp_mulComm1" (formula "54") (term "1,1,1,0,1,1,1,0,0,1"))
                                                               (rule "polySimp_homoEq" (formula "54") (term "1,0,1,1,1,0,0,1"))
                                                               (rule "polySimp_addComm1" (formula "54") (term "0,1,0,1,1,1,0,0,1"))
                                                               (rule "applyEq" (formula "54") (term "0,0,1,0,1,0,1,1,1,0,0,1") (ifseqformula "31"))
                                                               (rule "polySimp_mulComm0" (formula "54") (term "0,1,0,1,0,1,1,1,0,0,1"))
                                                               (rule "applyEq" (formula "54") (term "0,1,0,1,0,1,1,1,0,0,1") (ifseqformula "27"))
                                                               (rule "polySimp_addComm1" (formula "54") (term "0,1,0,1,1,1,0,0,1"))
                                                               (rule "polySimp_pullOutFactor1" (formula "54") (term "0,0,1,0,1,1,1,0,0,1"))
                                                               (rule "add_literals" (formula "54") (term "1,0,0,1,0,1,1,1,0,0,1"))
                                                               (rule "times_zero_1" (formula "54") (term "0,0,1,0,1,1,1,0,0,1"))
                                                               (rule "add_zero_left" (formula "54") (term "0,1,0,1,1,1,0,0,1"))
                                                               (rule "jmod_axiom" (formula "54") (term "1,1,0,0,0,1"))
                                                               (rule "polySimp_mulComm1" (formula "54") (term "1,1,1,0,0,0,1"))
                                                               (rule "polySimp_homoEq" (formula "54") (term "1,0,0,0,1"))
                                                               (rule "polySimp_addComm1" (formula "54") (term "0,1,0,0,0,1"))
                                                               (rule "applyEq" (formula "54") (term "0,0,1,0,1,0,0,0,1") (ifseqformula "31"))
                                                               (rule "polySimp_mulComm0" (formula "54") (term "0,1,0,1,0,0,0,1"))
                                                               (rule "applyEq" (formula "54") (term "0,1,0,1,0,0,0,1") (ifseqformula "27"))
                                                               (rule "polySimp_addComm1" (formula "54") (term "0,1,0,0,0,1"))
                                                               (rule "polySimp_pullOutFactor1" (formula "54") (term "0,0,1,0,0,0,1"))
                                                               (rule "add_literals" (formula "54") (term "1,0,0,1,0,0,0,1"))
                                                               (rule "times_zero_1" (formula "54") (term "0,0,1,0,0,0,1"))
                                                               (rule "add_zero_left" (formula "54") (term "0,1,0,0,0,1"))
                                                               (rule "polySimp_invertEq" (formula "54") (term "1,0,0,1,1,0,1,0,0,1"))
                                                               (rule "times_zero_2" (formula "54") (term "1,1,0,0,1,1,0,1,0,0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "54") (term "0,1,0,0,1,1,0,1,0,0,1"))
                                                               (rule "polySimp_elimOne" (formula "54") (term "0,1,0,0,1,1,0,1,0,0,1"))
                                                               (rule "polySimp_invertEq" (formula "54") (term "1,0,0,0,0,1,0,1,0,0,1"))
                                                               (rule "times_zero_2" (formula "54") (term "1,1,0,0,0,0,1,0,1,0,0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "54") (term "0,1,0,0,0,0,1,0,1,0,0,1"))
                                                               (rule "polySimp_elimOne" (formula "54") (term "0,1,0,0,0,0,1,0,1,0,0,1"))
                                                               (rule "polySimp_invertEq" (formula "54") (term "1,0,1,1,1,0,0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "54") (term "0,1,0,1,1,1,0,0,1"))
                                                               (rule "times_zero_2" (formula "54") (term "1,1,0,1,1,1,0,0,1"))
                                                               (rule "polySimp_elimOne" (formula "54") (term "0,1,0,1,1,1,0,0,1"))
                                                               (rule "polySimp_invertEq" (formula "54") (term "1,0,0,0,1"))
                                                               (rule "mul_literals" (formula "54") (term "1,1,0,0,0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "54") (term "0,1,0,0,0,1"))
                                                               (rule "polySimp_elimOne" (formula "54") (term "0,1,0,0,0,1"))
                                                               (rule "elim_forall12" (formula "54") (term "0,1"))
                                                               (rule "eqClose" (formula "54") (term "1,0,0,0,0,1,0,1,0,1"))
                                                               (rule "eqClose" (formula "54") (term "1,0,0,1,1,0,1,0,1"))
                                                               (rule "eqClose" (formula "54") (term "1,0,1,1,1,0,1"))
                                                               (rule "concrete_and_3" (formula "54") (term "0,0,0,0,1,0,1,0,1"))
                                                               (rule "concrete_and_3" (formula "54") (term "0,0,1,1,0,1,0,1"))
                                                               (rule "concrete_and_3" (formula "54") (term "0,1,1,1,0,1"))
                                                               (rule "elim_forall8" (formula "54") (term "1"))
                                                               (rule "eqClose" (formula "54") (term "0,1,1,1"))
                                                               (rule "eqClose" (formula "54") (term "0,0,1,1,0,1"))
                                                               (rule "eqClose" (formula "54") (term "0,0,0,0,1,0,1"))
                                                               (rule "ifthenelse_true" (formula "54") (term "1,1,1"))
                                                               (rule "ifthenelse_true" (formula "54") (term "0,1,1,0,1"))
                                                               (rule "ifthenelse_true" (formula "54") (term "0,0,0,1,0,1"))
                                                               (rule "replace_known_left" (formula "54") (term "0,1,0,1") (ifseqformula "51"))
                                                               (rule "concrete_or_1" (formula "54") (term "1,0,1"))
                                                               (rule "concrete_impl_4" (formula "54") (term "0,1"))
                                                               (rule "concrete_and_1" (formula "54") (term "1"))
                                                               (rule "array_store_static_analyse" (formula "54") (term "1") (ifseqformula "61"))
                                                               (rule "concrete_and_3" (formula "54"))
                                                               (rule "allRight" (formula "54") (inst "sk=o_5"))
                                                               (rule "closeTrue" (formula "54"))
                                                            )
                                                            (branch " Post"
                                                               (builtin "Update Simplification" (formula "53"))
                                                               (rule "inInt" (formula "53") (term "1,1,0,0"))
                                                               (rule "concrete_and_3" (formula "53") (term "1,0,0"))
                                                               (rule "impRight" (formula "53"))
                                                               (rule "andLeft" (formula "1"))
                                                               (rule "andLeft" (formula "1"))
                                                               (rule "andLeft" (formula "3"))
                                                               (rule "eqSymm" (formula "3"))
                                                               (rule "applyEq" (formula "3") (term "0") (ifseqformula "36"))
                                                               (rule "eqSymm" (formula "3"))
                                                               (rule "applyEq" (formula "56") (term "0") (ifseqformula "3"))
                                                               (rule "inReachableStateExpand" (formula "2"))
                                                               (builtin "Update Simplification" (formula "2"))
                                                               (rule "eq_imp" (formula "2") (term "0,0,1"))
                                                               (rule "replace_known_left" (formula "2") (term "0") (ifseqformula "45"))
                                                               (rule "concrete_impl_1" (formula "2"))
                                                               (rule "andLeft" (formula "2"))
                                                               (rule "jmod_axiom" (formula "3") (term "1,1,0,0,0,0,1,0,1,0,0"))
                                                               (rule "polySimp_mulComm1" (formula "3") (term "1,1,1,0,0,0,0,1,0,1,0,0"))
                                                               (rule "polySimp_homoEq" (formula "3") (term "1,0,0,0,0,1,0,1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "3") (term "0,1,0,0,0,0,1,0,1,0,0"))
                                                               (rule "applyEq" (formula "3") (term "0,0,1,0,1,0,0,0,0,1,0,1,0,0") (ifseqformula "35"))
                                                               (rule "polySimp_mulComm0" (formula "3") (term "0,1,0,1,0,0,0,0,1,0,1,0,0"))
                                                               (rule "applyEq" (formula "3") (term "0,1,0,1,0,0,0,0,1,0,1,0,0") (ifseqformula "31"))
                                                               (rule "polySimp_addComm1" (formula "3") (term "0,1,0,0,0,0,1,0,1,0,0"))
                                                               (rule "polySimp_pullOutFactor1" (formula "3") (term "0,0,1,0,0,0,0,1,0,1,0,0"))
                                                               (rule "add_literals" (formula "3") (term "1,0,0,1,0,0,0,0,1,0,1,0,0"))
                                                               (rule "times_zero_1" (formula "3") (term "0,0,1,0,0,0,0,1,0,1,0,0"))
                                                               (rule "add_zero_left" (formula "3") (term "0,1,0,0,0,0,1,0,1,0,0"))
                                                               (rule "jmod_axiom" (formula "3") (term "1,1,0,0,0"))
                                                               (rule "polySimp_mulComm1" (formula "3") (term "1,1,1,0,0,0"))
                                                               (rule "polySimp_homoEq" (formula "3") (term "1,0,0,0"))
                                                               (rule "polySimp_addComm1" (formula "3") (term "0,1,0,0,0"))
                                                               (rule "applyEq" (formula "3") (term "0,0,1,0,1,0,0,0") (ifseqformula "35"))
                                                               (rule "polySimp_mulComm0" (formula "3") (term "0,1,0,1,0,0,0"))
                                                               (rule "applyEq" (formula "3") (term "0,1,0,1,0,0,0") (ifseqformula "31"))
                                                               (rule "polySimp_addComm1" (formula "3") (term "0,1,0,0,0"))
                                                               (rule "polySimp_pullOutFactor1" (formula "3") (term "0,0,1,0,0,0"))
                                                               (rule "add_literals" (formula "3") (term "1,0,0,1,0,0,0"))
                                                               (rule "times_zero_1" (formula "3") (term "0,0,1,0,0,0"))
                                                               (rule "add_zero_left" (formula "3") (term "0,1,0,0,0"))
                                                               (rule "jmod_axiom" (formula "3") (term "1,1,0,0,1,1,0,1,0,0"))
                                                               (rule "polySimp_mulComm1" (formula "3") (term "1,1,1,0,0,1,1,0,1,0,0"))
                                                               (rule "polySimp_homoEq" (formula "3") (term "1,0,0,1,1,0,1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "3") (term "0,1,0,0,1,1,0,1,0,0"))
                                                               (rule "applyEq" (formula "3") (term "0,0,1,0,1,0,0,1,1,0,1,0,0") (ifseqformula "35"))
                                                               (rule "polySimp_mulComm0" (formula "3") (term "0,1,0,1,0,0,1,1,0,1,0,0"))
                                                               (rule "applyEq" (formula "3") (term "0,1,0,1,0,0,1,1,0,1,0,0") (ifseqformula "31"))
                                                               (rule "polySimp_addComm1" (formula "3") (term "0,1,0,0,1,1,0,1,0,0"))
                                                               (rule "polySimp_pullOutFactor1" (formula "3") (term "0,0,1,0,0,1,1,0,1,0,0"))
                                                               (rule "add_literals" (formula "3") (term "1,0,0,1,0,0,1,1,0,1,0,0"))
                                                               (rule "times_zero_1" (formula "3") (term "0,0,1,0,0,1,1,0,1,0,0"))
                                                               (rule "add_zero_left" (formula "3") (term "0,1,0,0,1,1,0,1,0,0"))
                                                               (rule "jmod_axiom" (formula "3") (term "1,1,0,1,1,1,0,0"))
                                                               (rule "polySimp_mulComm1" (formula "3") (term "1,1,1,0,1,1,1,0,0"))
                                                               (rule "polySimp_homoEq" (formula "3") (term "1,0,1,1,1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "3") (term "0,1,0,1,1,1,0,0"))
                                                               (rule "applyEq" (formula "3") (term "0,0,1,0,1,0,1,1,1,0,0") (ifseqformula "35"))
                                                               (rule "polySimp_mulComm0" (formula "3") (term "0,1,0,1,0,1,1,1,0,0"))
                                                               (rule "applyEq" (formula "3") (term "0,1,0,1,0,1,1,1,0,0") (ifseqformula "31"))
                                                               (rule "polySimp_addComm1" (formula "3") (term "0,1,0,1,1,1,0,0"))
                                                               (rule "polySimp_pullOutFactor1" (formula "3") (term "0,0,1,0,1,1,1,0,0"))
                                                               (rule "add_literals" (formula "3") (term "1,0,0,1,0,1,1,1,0,0"))
                                                               (rule "times_zero_1" (formula "3") (term "0,0,1,0,1,1,1,0,0"))
                                                               (rule "add_zero_left" (formula "3") (term "0,1,0,1,1,1,0,0"))
                                                               (rule "polySimp_invertEq" (formula "3") (term "1,0,0,0,0,1,0,1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "3") (term "0,1,0,0,0,0,1,0,1,0,0"))
                                                               (rule "times_zero_2" (formula "3") (term "1,1,0,0,0,0,1,0,1,0,0"))
                                                               (rule "polySimp_elimOne" (formula "3") (term "0,1,0,0,0,0,1,0,1,0,0"))
                                                               (rule "polySimp_invertEq" (formula "3") (term "1,0,0,0"))
                                                               (rule "times_zero_2" (formula "3") (term "1,1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "3") (term "0,1,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "3") (term "0,1,0,0,0"))
                                                               (rule "polySimp_invertEq" (formula "3") (term "1,0,0,1,1,0,1,0,0"))
                                                               (rule "times_zero_2" (formula "3") (term "1,1,0,0,1,1,0,1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "3") (term "0,1,0,0,1,1,0,1,0,0"))
                                                               (rule "polySimp_elimOne" (formula "3") (term "0,1,0,0,1,1,0,1,0,0"))
                                                               (rule "polySimp_invertEq" (formula "3") (term "1,0,1,1,1,0,0"))
                                                               (rule "times_zero_2" (formula "3") (term "1,1,0,1,1,1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "3") (term "0,1,0,1,1,1,0,0"))
                                                               (rule "polySimp_elimOne" (formula "3") (term "0,1,0,1,1,1,0,0"))
                                                               (rule "elim_forall12" (formula "3") (term "0"))
                                                               (rule "eqClose" (formula "3") (term "1,0,0,0,0,1,0,1,0"))
                                                               (rule "eqClose" (formula "3") (term "1,0,0,1,1,0,1,0"))
                                                               (rule "eqClose" (formula "3") (term "1,0,1,1,1,0"))
                                                               (rule "concrete_and_3" (formula "3") (term "0,0,0,0,1,0,1,0"))
                                                               (rule "concrete_and_3" (formula "3") (term "0,0,1,1,0,1,0"))
                                                               (rule "concrete_and_3" (formula "3") (term "0,1,1,1,0"))
                                                               (rule "elim_forall8" (formula "3"))
                                                               (rule "eqClose" (formula "3") (term "0,1,1"))
                                                               (rule "eqClose" (formula "3") (term "0,0,1,1,0"))
                                                               (rule "eqClose" (formula "3") (term "0,0,0,0,1,0"))
                                                               (rule "ifthenelse_true" (formula "3") (term "1,1"))
                                                               (rule "ifthenelse_true" (formula "3") (term "0,1,1,0"))
                                                               (rule "ifthenelse_true" (formula "3") (term "0,0,0,1,0"))
                                                               (rule "andLeft" (formula "3"))
                                                               (rule "replace_known_left" (formula "3") (term "0,1") (ifseqformula "56"))
                                                               (rule "concrete_or_1" (formula "3") (term "1"))
                                                               (rule "concrete_impl_4" (formula "3"))
                                                               (rule "true_left" (formula "3"))
                                                               (rule "array_store_static_analyse" (formula "3") (ifseqformula "64"))
                                                               (rule "true_left" (formula "3"))
                                                               (rule "all_unused" (formula "2"))
                                                               (rule "true_left" (formula "2"))
                                                               (rule "blockEmpty" (formula "55") (term "4"))
                                                               (rule "assignment" (formula "55") (term "4"))
                                                               (builtin "Update Simplification" (formula "55"))
                                                               (rule "methodCallEmpty" (formula "55") (term "4"))
                                                               (rule "emptyModality" (formula "55") (term "4"))
                                                               (builtin "Update Simplification" (formula "55"))
                                                               (rule "eqClose" (formula "55") (term "0"))
                                                               (rule "concrete_not_1" (formula "55"))
                                                               (rule "false_right" (formula "55"))
                                                               (builtin "Use Operation Contract" (formula "54") (term "4") (newnames "result_31") (contract "hashCode;;"))
                                                               (branch " Pre"
                                                                  (builtin "Update Simplification" (formula "54"))
                                                                  (rule "replace_known_left" (formula "54") (term "0,1") (ifseqformula "53"))
                                                                  (rule "concrete_and_1" (formula "54") (term "1"))
                                                                  (rule "replace_known_right" (formula "54") (term "0,1") (ifseqformula "64"))
                                                                  (rule "concrete_not_2" (formula "54") (term "1"))
                                                                  (rule "concrete_and_3" (formula "54"))
                                                                  (rule "inReachableStateRewrite" (formula "54") (ifseqformula "44"))
                                                                  (builtin "Update Simplification" (formula "54"))
                                                                  (rule "eq_imp" (formula "54") (term "0,0,1"))
                                                                  (rule "orRight" (formula "54"))
                                                                  (rule "jmod_axiom" (formula "55") (term "1,1,0,0,1,1,0,1,0,0,1"))
                                                                  (rule "polySimp_mulComm1" (formula "55") (term "1,1,1,0,0,1,1,0,1,0,0,1"))
                                                                  (rule "polySimp_homoEq" (formula "55") (term "1,0,0,1,1,0,1,0,0,1"))
                                                                  (rule "polySimp_addComm1" (formula "55") (term "0,1,0,0,1,1,0,1,0,0,1"))
                                                                  (rule "applyEq" (formula "55") (term "0,0,1,0,1,0,0,1,1,0,1,0,0,1") (ifseqformula "33"))
                                                                  (rule "polySimp_mulComm0" (formula "55") (term "0,1,0,1,0,0,1,1,0,1,0,0,1"))
                                                                  (rule "applyEq" (formula "55") (term "0,1,0,1,0,0,1,1,0,1,0,0,1") (ifseqformula "29"))
                                                                  (rule "polySimp_addComm1" (formula "55") (term "0,1,0,0,1,1,0,1,0,0,1"))
                                                                  (rule "polySimp_pullOutFactor1" (formula "55") (term "0,0,1,0,0,1,1,0,1,0,0,1"))
                                                                  (rule "add_literals" (formula "55") (term "1,0,0,1,0,0,1,1,0,1,0,0,1"))
                                                                  (rule "times_zero_1" (formula "55") (term "0,0,1,0,0,1,1,0,1,0,0,1"))
                                                                  (rule "add_zero_left" (formula "55") (term "0,1,0,0,1,1,0,1,0,0,1"))
                                                                  (rule "jmod_axiom" (formula "55") (term "1,1,0,1,1,1,0,0,1"))
                                                                  (rule "polySimp_mulComm1" (formula "55") (term "1,1,1,0,1,1,1,0,0,1"))
                                                                  (rule "polySimp_homoEq" (formula "55") (term "1,0,1,1,1,0,0,1"))
                                                                  (rule "polySimp_addComm1" (formula "55") (term "0,1,0,1,1,1,0,0,1"))
                                                                  (rule "applyEq" (formula "55") (term "0,0,1,0,1,0,1,1,1,0,0,1") (ifseqformula "33"))
                                                                  (rule "polySimp_mulComm0" (formula "55") (term "0,1,0,1,0,1,1,1,0,0,1"))
                                                                  (rule "applyEq" (formula "55") (term "0,1,0,1,0,1,1,1,0,0,1") (ifseqformula "29"))
                                                                  (rule "polySimp_addComm1" (formula "55") (term "0,1,0,1,1,1,0,0,1"))
                                                                  (rule "polySimp_pullOutFactor1" (formula "55") (term "0,0,1,0,1,1,1,0,0,1"))
                                                                  (rule "add_literals" (formula "55") (term "1,0,0,1,0,1,1,1,0,0,1"))
                                                                  (rule "times_zero_1" (formula "55") (term "0,0,1,0,1,1,1,0,0,1"))
                                                                  (rule "add_zero_left" (formula "55") (term "0,1,0,1,1,1,0,0,1"))
                                                                  (rule "jmod_axiom" (formula "55") (term "1,1,0,0,0,1"))
                                                                  (rule "polySimp_mulComm1" (formula "55") (term "1,1,1,0,0,0,1"))
                                                                  (rule "polySimp_homoEq" (formula "55") (term "1,0,0,0,1"))
                                                                  (rule "polySimp_addComm1" (formula "55") (term "0,1,0,0,0,1"))
                                                                  (rule "applyEq" (formula "55") (term "0,0,1,0,1,0,0,0,1") (ifseqformula "33"))
                                                                  (rule "polySimp_mulComm0" (formula "55") (term "0,1,0,1,0,0,0,1"))
                                                                  (rule "applyEq" (formula "55") (term "0,1,0,1,0,0,0,1") (ifseqformula "29"))
                                                                  (rule "polySimp_addComm1" (formula "55") (term "0,1,0,0,0,1"))
                                                                  (rule "polySimp_pullOutFactor1" (formula "55") (term "0,0,1,0,0,0,1"))
                                                                  (rule "add_literals" (formula "55") (term "1,0,0,1,0,0,0,1"))
                                                                  (rule "times_zero_1" (formula "55") (term "0,0,1,0,0,0,1"))
                                                                  (rule "add_zero_left" (formula "55") (term "0,1,0,0,0,1"))
                                                                  (rule "jmod_axiom" (formula "55") (term "1,1,0,0,0,0,1,0,1,0,0,1"))
                                                                  (rule "polySimp_mulComm1" (formula "55") (term "1,1,1,0,0,0,0,1,0,1,0,0,1"))
                                                                  (rule "polySimp_homoEq" (formula "55") (term "1,0,0,0,0,1,0,1,0,0,1"))
                                                                  (rule "polySimp_addComm1" (formula "55") (term "0,1,0,0,0,0,1,0,1,0,0,1"))
                                                                  (rule "applyEq" (formula "55") (term "0,0,1,0,1,0,0,0,0,1,0,1,0,0,1") (ifseqformula "33"))
                                                                  (rule "polySimp_mulComm0" (formula "55") (term "0,1,0,1,0,0,0,0,1,0,1,0,0,1"))
                                                                  (rule "applyEq" (formula "55") (term "0,1,0,1,0,0,0,0,1,0,1,0,0,1") (ifseqformula "29"))
                                                                  (rule "polySimp_addComm1" (formula "55") (term "0,1,0,0,0,0,1,0,1,0,0,1"))
                                                                  (rule "polySimp_pullOutFactor1" (formula "55") (term "0,0,1,0,0,0,0,1,0,1,0,0,1"))
                                                                  (rule "add_literals" (formula "55") (term "1,0,0,1,0,0,0,0,1,0,1,0,0,1"))
                                                                  (rule "times_zero_1" (formula "55") (term "0,0,1,0,0,0,0,1,0,1,0,0,1"))
                                                                  (rule "add_zero_left" (formula "55") (term "0,1,0,0,0,0,1,0,1,0,0,1"))
                                                                  (rule "polySimp_invertEq" (formula "55") (term "1,0,0,1,1,0,1,0,0,1"))
                                                                  (rule "times_zero_2" (formula "55") (term "1,1,0,0,1,1,0,1,0,0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "55") (term "0,1,0,0,1,1,0,1,0,0,1"))
                                                                  (rule "polySimp_elimOne" (formula "55") (term "0,1,0,0,1,1,0,1,0,0,1"))
                                                                  (rule "polySimp_invertEq" (formula "55") (term "1,0,1,1,1,0,0,1"))
                                                                  (rule "times_zero_2" (formula "55") (term "1,1,0,1,1,1,0,0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "55") (term "0,1,0,1,1,1,0,0,1"))
                                                                  (rule "polySimp_elimOne" (formula "55") (term "0,1,0,1,1,1,0,0,1"))
                                                                  (rule "polySimp_invertEq" (formula "55") (term "1,0,0,0,1"))
                                                                  (rule "times_zero_2" (formula "55") (term "1,1,0,0,0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "55") (term "0,1,0,0,0,1"))
                                                                  (rule "polySimp_elimOne" (formula "55") (term "0,1,0,0,0,1"))
                                                                  (rule "polySimp_invertEq" (formula "55") (term "1,0,0,0,0,1,0,1,0,0,1"))
                                                                  (rule "times_zero_2" (formula "55") (term "1,1,0,0,0,0,1,0,1,0,0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "55") (term "0,1,0,0,0,0,1,0,1,0,0,1"))
                                                                  (rule "polySimp_elimOne" (formula "55") (term "0,1,0,0,0,0,1,0,1,0,0,1"))
                                                                  (rule "elim_forall12" (formula "55") (term "0,1"))
                                                                  (rule "eqClose" (formula "55") (term "1,0,0,0,0,1,0,1,0,1"))
                                                                  (rule "eqClose" (formula "55") (term "1,0,0,1,1,0,1,0,1"))
                                                                  (rule "eqClose" (formula "55") (term "1,0,1,1,1,0,1"))
                                                                  (rule "concrete_and_3" (formula "55") (term "0,0,0,0,1,0,1,0,1"))
                                                                  (rule "concrete_and_3" (formula "55") (term "0,0,1,1,0,1,0,1"))
                                                                  (rule "concrete_and_3" (formula "55") (term "0,1,1,1,0,1"))
                                                                  (rule "elim_forall8" (formula "55") (term "1"))
                                                                  (rule "eqClose" (formula "55") (term "0,1,1,1"))
                                                                  (rule "eqClose" (formula "55") (term "0,0,1,1,0,1"))
                                                                  (rule "eqClose" (formula "55") (term "0,0,0,0,1,0,1"))
                                                                  (rule "ifthenelse_true" (formula "55") (term "1,1,1"))
                                                                  (rule "ifthenelse_true" (formula "55") (term "0,1,1,0,1"))
                                                                  (rule "ifthenelse_true" (formula "55") (term "0,0,0,1,0,1"))
                                                                  (rule "replace_known_right" (formula "55") (term "1,1,0,1") (ifseqformula "65"))
                                                                  (rule "concrete_or_4" (formula "55") (term "1,0,1"))
                                                                  (rule "replace_known_left" (formula "55") (term "0,0,1") (ifseqformula "38"))
                                                                  (rule "concrete_impl_1" (formula "55") (term "0,1"))
                                                                  (rule "replace_known_left" (formula "55") (term "0,1") (ifseqformula "53"))
                                                                  (rule "concrete_and_1" (formula "55") (term "1"))
                                                                  (rule "array_store_static_analyse" (formula "55") (term "1") (ifseqformula "62"))
                                                                  (rule "concrete_and_3" (formula "55"))
                                                                  (rule "allRight" (formula "55") (inst "sk=o_6"))
                                                                  (rule "closeTrue" (formula "55"))
                                                               )
                                                               (branch " Post"
                                                                  (builtin "Update Simplification" (formula "54"))
                                                                  (rule "inInt" (formula "54") (term "1,1,0,0"))
                                                                  (rule "concrete_and_3" (formula "54") (term "1,0,0"))
                                                                  (rule "impRight" (formula "54"))
                                                                  (rule "andLeft" (formula "1"))
                                                                  (rule "andLeft" (formula "2"))
                                                                  (rule "andLeft" (formula "1"))
                                                                  (rule "eqSymm" (formula "2"))
                                                                  (rule "applyEq" (formula "2") (term "0") (ifseqformula "38"))
                                                                  (rule "eqSymm" (formula "2"))
                                                                  (rule "applyEq" (formula "57") (term "0") (ifseqformula "2"))
                                                                  (rule "inReachableStateExpand" (formula "1"))
                                                                  (builtin "Update Simplification" (formula "1"))
                                                                  (rule "eq_imp" (formula "1") (term "0,0,1"))
                                                                  (rule "replace_known_left" (formula "1") (term "0") (ifseqformula "47"))
                                                                  (rule "concrete_impl_1" (formula "1"))
                                                                  (rule "andLeft" (formula "1"))
                                                                  (rule "jmod_axiom" (formula "2") (term "1,1,0,0,0,0,1,0,1,0,0"))
                                                                  (rule "polySimp_mulComm1" (formula "2") (term "1,1,1,0,0,0,0,1,0,1,0,0"))
                                                                  (rule "polySimp_homoEq" (formula "2") (term "1,0,0,0,0,1,0,1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "2") (term "0,1,0,0,0,0,1,0,1,0,0"))
                                                                  (rule "applyEq" (formula "2") (term "0,0,1,0,1,0,0,0,0,1,0,1,0,0") (ifseqformula "37"))
                                                                  (rule "polySimp_mulComm0" (formula "2") (term "0,1,0,1,0,0,0,0,1,0,1,0,0"))
                                                                  (rule "applyEq" (formula "2") (term "0,1,0,1,0,0,0,0,1,0,1,0,0") (ifseqformula "33"))
                                                                  (rule "polySimp_addComm1" (formula "2") (term "0,1,0,0,0,0,1,0,1,0,0"))
                                                                  (rule "polySimp_pullOutFactor1" (formula "2") (term "0,0,1,0,0,0,0,1,0,1,0,0"))
                                                                  (rule "add_literals" (formula "2") (term "1,0,0,1,0,0,0,0,1,0,1,0,0"))
                                                                  (rule "times_zero_1" (formula "2") (term "0,0,1,0,0,0,0,1,0,1,0,0"))
                                                                  (rule "add_zero_left" (formula "2") (term "0,1,0,0,0,0,1,0,1,0,0"))
                                                                  (rule "jmod_axiom" (formula "2") (term "1,1,0,0,1,1,0,1,0,0"))
                                                                  (rule "polySimp_mulComm1" (formula "2") (term "1,1,1,0,0,1,1,0,1,0,0"))
                                                                  (rule "polySimp_homoEq" (formula "2") (term "1,0,0,1,1,0,1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "2") (term "0,1,0,0,1,1,0,1,0,0"))
                                                                  (rule "applyEq" (formula "2") (term "0,0,1,0,1,0,0,1,1,0,1,0,0") (ifseqformula "37"))
                                                                  (rule "polySimp_mulComm0" (formula "2") (term "0,1,0,1,0,0,1,1,0,1,0,0"))
                                                                  (rule "applyEq" (formula "2") (term "0,1,0,1,0,0,1,1,0,1,0,0") (ifseqformula "33"))
                                                                  (rule "polySimp_addComm1" (formula "2") (term "0,1,0,0,1,1,0,1,0,0"))
                                                                  (rule "polySimp_pullOutFactor1" (formula "2") (term "0,0,1,0,0,1,1,0,1,0,0"))
                                                                  (rule "add_literals" (formula "2") (term "1,0,0,1,0,0,1,1,0,1,0,0"))
                                                                  (rule "times_zero_1" (formula "2") (term "0,0,1,0,0,1,1,0,1,0,0"))
                                                                  (rule "add_zero_left" (formula "2") (term "0,1,0,0,1,1,0,1,0,0"))
                                                                  (rule "jmod_axiom" (formula "2") (term "1,1,0,1,1,1,0,0"))
                                                                  (rule "polySimp_mulComm1" (formula "2") (term "1,1,1,0,1,1,1,0,0"))
                                                                  (rule "polySimp_homoEq" (formula "2") (term "1,0,1,1,1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "2") (term "0,1,0,1,1,1,0,0"))
                                                                  (rule "applyEq" (formula "2") (term "0,0,1,0,1,0,1,1,1,0,0") (ifseqformula "37"))
                                                                  (rule "polySimp_mulComm0" (formula "2") (term "0,1,0,1,0,1,1,1,0,0"))
                                                                  (rule "applyEq" (formula "2") (term "0,1,0,1,0,1,1,1,0,0") (ifseqformula "33"))
                                                                  (rule "polySimp_addComm1" (formula "2") (term "0,1,0,1,1,1,0,0"))
                                                                  (rule "polySimp_pullOutFactor1" (formula "2") (term "0,0,1,0,1,1,1,0,0"))
                                                                  (rule "add_literals" (formula "2") (term "1,0,0,1,0,1,1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "2") (term "0,0,1,0,1,1,1,0,0"))
                                                                  (rule "add_zero_left" (formula "2") (term "0,1,0,1,1,1,0,0"))
                                                                  (rule "jmod_axiom" (formula "2") (term "1,1,0,0,0"))
                                                                  (rule "polySimp_mulComm1" (formula "2") (term "1,1,1,0,0,0"))
                                                                  (rule "polySimp_homoEq" (formula "2") (term "1,0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "2") (term "0,1,0,0,0"))
                                                                  (rule "applyEq" (formula "2") (term "0,0,1,0,1,0,0,0") (ifseqformula "37"))
                                                                  (rule "polySimp_mulComm0" (formula "2") (term "0,1,0,1,0,0,0"))
                                                                  (rule "applyEq" (formula "2") (term "0,1,0,1,0,0,0") (ifseqformula "33"))
                                                                  (rule "polySimp_addComm1" (formula "2") (term "0,1,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor1" (formula "2") (term "0,0,1,0,0,0"))
                                                                  (rule "add_literals" (formula "2") (term "1,0,0,1,0,0,0"))
                                                                  (rule "times_zero_1" (formula "2") (term "0,0,1,0,0,0"))
                                                                  (rule "add_zero_left" (formula "2") (term "0,1,0,0,0"))
                                                                  (rule "polySimp_invertEq" (formula "2") (term "1,0,0,0,0,1,0,1,0,0"))
                                                                  (rule "mul_literals" (formula "2") (term "1,1,0,0,0,0,1,0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "0,1,0,0,0,0,1,0,1,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "2") (term "0,1,0,0,0,0,1,0,1,0,0"))
                                                                  (rule "polySimp_invertEq" (formula "2") (term "1,0,0,1,1,0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "0,1,0,0,1,1,0,1,0,0"))
                                                                  (rule "times_zero_2" (formula "2") (term "1,1,0,0,1,1,0,1,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "2") (term "0,1,0,0,1,1,0,1,0,0"))
                                                                  (rule "polySimp_invertEq" (formula "2") (term "1,0,1,1,1,0,0"))
                                                                  (rule "times_zero_2" (formula "2") (term "1,1,0,1,1,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "0,1,0,1,1,1,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "2") (term "0,1,0,1,1,1,0,0"))
                                                                  (rule "polySimp_invertEq" (formula "2") (term "1,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "0,1,0,0,0"))
                                                                  (rule "times_zero_2" (formula "2") (term "1,1,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "2") (term "0,1,0,0,0"))
                                                                  (rule "elim_forall12" (formula "2") (term "0"))
                                                                  (rule "eqClose" (formula "2") (term "1,0,0,0,0,1,0,1,0"))
                                                                  (rule "eqClose" (formula "2") (term "1,0,0,1,1,0,1,0"))
                                                                  (rule "eqClose" (formula "2") (term "1,0,1,1,1,0"))
                                                                  (rule "concrete_and_3" (formula "2") (term "0,0,0,0,1,0,1,0"))
                                                                  (rule "concrete_and_3" (formula "2") (term "0,0,1,1,0,1,0"))
                                                                  (rule "concrete_and_3" (formula "2") (term "0,1,1,1,0"))
                                                                  (rule "elim_forall8" (formula "2"))
                                                                  (rule "eqClose" (formula "2") (term "0,1,1"))
                                                                  (rule "eqClose" (formula "2") (term "0,0,1,1,0"))
                                                                  (rule "eqClose" (formula "2") (term "0,0,0,0,1,0"))
                                                                  (rule "ifthenelse_true" (formula "2") (term "1,1"))
                                                                  (rule "ifthenelse_true" (formula "2") (term "0,1,1,0"))
                                                                  (rule "ifthenelse_true" (formula "2") (term "0,0,0,1,0"))
                                                                  (rule "andLeft" (formula "2"))
                                                                  (rule "replace_known_left" (formula "2") (term "0,1") (ifseqformula "58"))
                                                                  (rule "concrete_or_1" (formula "2") (term "1"))
                                                                  (rule "concrete_impl_4" (formula "2"))
                                                                  (rule "true_left" (formula "2"))
                                                                  (rule "array_store_static_analyse" (formula "2") (ifseqformula "65"))
                                                                  (rule "true_left" (formula "2"))
                                                                  (rule "all_unused" (formula "1"))
                                                                  (rule "true_left" (formula "1"))
                                                                  (rule "blockEmpty" (formula "56") (term "4"))
                                                                  (rule "assignment" (formula "56") (term "4"))
                                                                  (builtin "Update Simplification" (formula "56"))
                                                                  (rule "methodCallEmpty" (formula "56") (term "4"))
                                                                  (rule "emptyModality" (formula "56") (term "4"))
                                                                  (builtin "Update Simplification" (formula "56"))
                                                                  (rule "notRight" (formula "56"))
                                                                  (rule "eqSymm" (formula "1"))
                                                                  (rule "applyEq" (formula "59") (term "0,2") (ifseqformula "1"))
                                                                  (rule "applyEqRigid" (formula "24") (term "0,1,0") (ifseqformula "1"))
                                                                  (rule "applyEq" (formula "57") (term "0,1,0") (ifseqformula "1"))
                                                                  (rule "applyEq" (formula "18") (term "0,1,0") (ifseqformula "1"))
                                                                  (rule "applyEqRigid" (formula "28") (term "0") (ifseqformula "1"))
                                                                  (rule "applyEq" (formula "36") (term "0,0") (ifseqformula "1"))
                                                                  (rule "applyEq" (formula "6") (term "1") (ifseqformula "1"))
                                                                  (rule "applyEq" (formula "8") (term "1") (ifseqformula "1"))
                                                                  (rule "applyEqRigid" (formula "2") (term "1") (ifseqformula "1"))
                                                                  (rule "applyEqRigid" (formula "32") (term "1") (ifseqformula "1"))
                                                                  (rule "applyEqRigid" (formula "25") (term "1") (ifseqformula "1"))
                                                                  (rule "applyEq" (formula "34") (term "1") (ifseqformula "1"))
                                                                  (rule "applyEqRigid" (formula "5") (term "1") (ifseqformula "1"))
                                                                  (rule "applyEq" (formula "24") (term "1") (ifseqformula "1"))
                                                                  (rule "applyEq" (formula "30") (term "1") (ifseqformula "1"))
                                                                  (rule "applyEqRigid" (formula "38") (term "1") (ifseqformula "1"))
                                                                  (rule "applyEq" (formula "62") (term "0,0") (ifseqformula "36"))
                                                                  (rule "polySimp_mulComm0" (formula "62") (term "0"))
                                                                  (rule "close" (formula "62") (ifseqformula "32"))
                                                               )
                                                               (branch " Exceptional Post"
                                                                  (builtin "Update Simplification" (formula "54"))
                                                                  (rule "impRight" (formula "54"))
                                                                  (rule "andLeft" (formula "1"))
                                                                  (rule "andLeft" (formula "1"))
                                                                  (rule "andLeft" (formula "3"))
                                                                  (rule "andLeft" (formula "2"))
                                                                  (rule "notLeft" (formula "3"))
                                                                  (rule "close" (formula "58") (ifseqformula "4"))
                                                               )
                                                            )
                                                            (branch " Exceptional Post"
                                                               (builtin "Update Simplification" (formula "53"))
                                                               (rule "impRight" (formula "53"))
                                                               (rule "andLeft" (formula "1"))
                                                               (rule "andLeft" (formula "1"))
                                                               (rule "andLeft" (formula "3"))
                                                               (rule "andLeft" (formula "2"))
                                                               (rule "notLeft" (formula "3"))
                                                               (rule "close" (formula "56") (ifseqformula "4"))
                                                            )
                                                         )
                                                         (branch " Null Reference (queryReceiver_24 = null)"
                                                            (builtin "Update Simplification" (formula "53"))
                                                            (builtin "Update Simplification" (formula "1"))
                                                            (rule "close" (formula "64") (ifseqformula "1"))
                                                         )
                                                      )
                                                      (branch " Null Reference (queryReceiver_23 = null)"
                                                         (builtin "Update Simplification" (formula "54"))
                                                         (builtin "Update Simplification" (formula "1"))
                                                         (rule "close" (formula "64") (ifseqformula "1"))
                                                      )
                                                   )
                                                   (branch " Exceptional Post"
                                                      (builtin "Update Simplification" (formula "54"))
                                                      (rule "impRight" (formula "54"))
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "andLeft" (formula "3"))
                                                      (rule "andLeft" (formula "2"))
                                                      (rule "notLeft" (formula "3"))
                                                      (rule "close" (formula "57") (ifseqformula "4"))
                                                   )
                                                )
                                                (branch " Null Reference (v_NullPointerException_5 = null)"
                                                   (builtin "Update Simplification" (formula "1"))
                                                   (rule "repository_object_non_null" (formula "1"))
                                                   (rule "closeFalse" (formula "1"))
                                                )
                                             )
                                             (branch " Null Reference (queryReceiver_20 = null)"
                                                (builtin "Update Simplification" (formula "41"))
                                                (builtin "Update Simplification" (formula "1"))
                                                (rule "close" (formula "50") (ifseqformula "1"))
                                             )
                                          )
                                       )
                                       (branch " Null Reference (queryReceiver_18 = null)"
                                          (builtin "Update Simplification" (formula "42"))
                                          (builtin "Update Simplification" (formula "1"))
                                          (rule "close" (formula "49") (ifseqformula "1"))
                                       )
                                    )
                                    (branch " Null Reference (queryReceiver_17 = null)"
                                       (builtin "Update Simplification" (formula "43"))
                                       (builtin "Update Simplification" (formula "1"))
                                       (rule "close" (formula "49") (ifseqformula "1"))
                                    )
                                 )
                              )
                           )
                           (branch " Null Reference (var_1 = null)"
                              (builtin "Update Simplification" (formula "39"))
                              (builtin "Update Simplification" (formula "1"))
                              (rule "close" (formula "35") (ifseqformula "1"))
                           )
                           (branch " Index Out of Bounds (var_1 != null, but j_6 Out of Bounds!)"
                              (builtin "Update Simplification" (formula "39"))
                              (builtin "Update Simplification" (formula "1"))
                              (rule "andLeft" (formula "1"))
                              (rule "notLeft" (formula "1"))
                              (rule "castDelInt" (formula "1") (term "0,1"))
                              (rule "castDelInt" (formula "1") (term "1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                              (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                              (rule "add_zero_right" (formula "1") (term "0,0,1"))
                              (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "31"))
                              (rule "inEqSimp_commuteLeq" (formula "1") (term "0"))
                              (rule "jmod_axiom" (formula "1") (term "1,0,1"))
                              (rule "polySimp_mulComm1" (formula "1") (term "1,1,0,1"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
                              (rule "jmod_axiom" (formula "1") (term "0,0"))
                              (rule "polySimp_mulComm1" (formula "1") (term "1,0,0"))
                              (rule "inEqSimp_homoInEq1" (formula "1") (term "0"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                              (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                              (rule "polySimp_addComm0" (formula "1") (term "0,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "0,1"))
                              (rule "polySimp_elimOne" (formula "1") (term "0,1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                              (rule "polySimp_mulAssoc" (formula "1") (term "0,1,0"))
                              (rule "polySimp_mulComm0" (formula "1") (term "0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0"))
                              (rule "polySimp_elimOne" (formula "1") (term "0,1,0"))
                              (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "8"))
                              (rule "inEqSimp_homoInEq1" (formula "1") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor2b" (formula "1") (term "0,0,0"))
                              (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
                              (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                              (rule "add_zero_right" (formula "1") (term "0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0"))
                              (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
                              (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                              (rule "add_zero_right" (formula "1") (term "0,0,0"))
                              (rule "leq_literals" (formula "1") (term "0,0"))
                              (rule "concrete_and_2" (formula "1") (term "0"))
                              (rule "concrete_or_2" (formula "1"))
                              (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "5"))
                              (rule "andLeft" (formula "1"))
                              (rule "inEqSimp_homoInEq1" (formula "1"))
                              (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                              (rule "add_literals" (formula "1") (term "1,1,0"))
                              (rule "times_zero_1" (formula "1") (term "1,0"))
                              (rule "add_zero_right" (formula "1") (term "0"))
                              (rule "leq_literals" (formula "1"))
                              (rule "closeFalse" (formula "1"))
                           )
                           (branch " Array Store Exception (incompatible dynamic element type of var_1 and _s)"
                              (builtin "Update Simplification" (formula "39"))
                              (builtin "Update Simplification" (formula "1"))
                              (rule "andLeft" (formula "1"))
                              (rule "notLeft" (formula "2"))
                              (rule "andLeft" (formula "1"))
                              (rule "andLeft" (formula "1"))
                              (rule "notLeft" (formula "1"))
                              (rule "castDelInt" (formula "2") (term "0"))
                              (rule "castDelInt" (formula "1") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0"))
                              (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "32"))
                              (rule "polySimp_addComm1" (formula "1") (term "0"))
                              (rule "jmod_axiom" (formula "2") (term "0"))
                              (rule "polySimp_mulComm1" (formula "2") (term "1,0"))
                              (rule "jmod_axiom" (formula "1") (term "1,0"))
                              (rule "polySimp_mulComm1" (formula "1") (term "1,1,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                              (rule "polySimp_elimOne" (formula "2") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                              (rule "polySimp_elimOne" (formula "1") (term "0"))
                              (rule "array_store_static_analyse" (formula "34") (ifseqformula "35"))
                              (rule "closeTrue" (formula "34"))
                           )
                        )
                        (branch " Exceptional Post"
                           (builtin "Update Simplification" (formula "36"))
                           (rule "impRight" (formula "36"))
                           (rule "andLeft" (formula "1"))
                           (rule "andLeft" (formula "2"))
                           (rule "andLeft" (formula "1"))
                           (rule "andLeft" (formula "1"))
                           (rule "notLeft" (formula "2"))
                           (rule "close" (formula "35") (ifseqformula "3"))
                        )
                     )
                     (branch " Null Reference (_s = null)"
                        (builtin "Update Simplification" (formula "1"))
                        (rule "close" (formula "36") (ifseqformula "1"))
                     )
                  )
                  (branch "   self.elements[  result_0
                +   jdiv(result_0, self.size)
                  * self.size
                  * -1]
= null FALSE"
                     (rule "ifElseSkipThen" (formula "36") (term "2"))
                     (rule "assignment" (formula "36") (term "2"))
                     (builtin "Update Simplification" (formula "36"))
                     (rule "returnUnfold" (formula "36") (term "2") (inst "#v0=b"))
                     (rule "variableDeclarationAssign" (formula "36") (term "2"))
                     (rule "variableDeclaration" (formula "36") (term "2") (newnames "b_3"))
                     (rule "methodCallWithAssignmentUnfoldTarget" (formula "36") (term "2") (inst "#v0=v_String"))
                     (rule "variableDeclaration" (formula "36") (term "2") (newnames "v_String_1"))
                     (rule "eval_order_array_access5" (formula "36") (term "2") (inst "#v1=j") (inst "#ar1=var"))
                     (rule "variableDeclarationAssign" (formula "36") (term "2"))
                     (rule "variableDeclaration" (formula "36") (term "2") (newnames "var_2"))
                     (rule "assignment" (formula "36") (term "2"))
                     (builtin "Update Simplification" (formula "36"))
                     (rule "variableDeclarationAssign" (formula "36") (term "3"))
                     (rule "variableDeclaration" (formula "36") (term "3") (newnames "j_7"))
                     (rule "compound_modulo_1" (formula "36") (term "3") (inst "#v=j_8"))
                     (rule "variableDeclarationAssign" (formula "36") (term "3"))
                     (rule "variableDeclaration" (formula "36") (term "3") (newnames "j_8"))
                     (rule "methodCallWithAssignment" (formula "36") (term "3") (inst "#v0=j_9"))
                     (branch " Normal Execution (_s != null)"
                        (builtin "Update Simplification" (formula "36"))
                        (rule "variableDeclaration" (formula "36") (term "3") (newnames "j_9"))
                        (rule "only_created_object_are_referenced_by_arrays_non_null" (formula "35") (term "0") (ifseqformula "16") (ifseqformula "21") (ifseqformula "35"))
                        (rule "resolvequery" (formula "34") (term "0,1,0") (inst "queryValue=java_lang_StringhashCode_18"))
                        (rule "eqSymm" (formula "2") (term "0,1,0"))
                        (rule "applyEq" (formula "23") (term "0,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "20") (term "0,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "25") (term "0") (ifseqformula "1"))
                        (rule "applyEq" (formula "21") (term "1") (ifseqformula "1"))
                        (rule "applyEq" (formula "18") (term "0,1,0,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "22") (term "1,0,1") (ifseqformula "1"))
                        (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "21"))
                        (rule "polySimp_rightDist" (formula "22") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "22") (term "1,0,0"))
                        (rule "polySimp_elimOne" (formula "22") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "22") (term "0"))
                        (rule "polySimp_rightDist" (formula "22") (term "0,0,0"))
                        (rule "mul_literals" (formula "22") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor2b" (formula "22") (term "0,0"))
                        (rule "add_literals" (formula "22") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "22") (term "1,0,0"))
                        (rule "add_zero_right" (formula "22") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "22"))
                        (rule "mul_literals" (formula "22") (term "1"))
                        (rule "variableDeclaration" (formula "2") (newnames "hcode_18"))
                        (rule "variableDeclaration" (formula "2") (newnames "queryReceiver_22"))
                        (rule "emptyModality" (formula "2"))
                        (rule "jdiv_axiom" (formula "23") (term "0"))
                        (rule "eqSymm" (formula "23"))
                        (rule "replace_known_left" (formula "23") (term "0,0") (ifseqformula "26"))
                        (rule "ifthenelse_true" (formula "23") (term "0"))
                        (rule "eqSymm" (formula "23"))
                        (rule "applyEq" (formula "23") (term "0") (ifseqformula "24"))
                        (rule "eqSymm" (formula "23"))
                        (rule "div_axiom" (formula "20") (term "0") (inst "quotient=quotient_24"))
                        (rule "polySimp_mulComm0" (formula "20") (term "0,1,0,1"))
                        (rule "polySimp_mulComm0" (formula "20") (term "0,1,1,1"))
                        (rule "polySimp_mulComm0" (formula "20") (term "0,2,1,1"))
                        (rule "polySimp_mulComm0" (formula "20") (term "1,1,1,1,1"))
                        (rule "applyEq" (formula "20") (term "0,0,0,1") (ifseqformula "21"))
                        (rule "inEqSimp_contradEq7" (formula "20") (term "0") (ifseqformula "28"))
                        (rule "times_zero_1" (formula "20") (term "1,0,0,0"))
                        (rule "add_literals" (formula "20") (term "0,0,0"))
                        (rule "leq_literals" (formula "20") (term "0,0"))
                        (rule "concrete_and_2" (formula "20") (term "0"))
                        (rule "concrete_or_2" (formula "20"))
                        (rule "andLeft" (formula "20"))
                        (rule "andLeft" (formula "20"))
                        (rule "applyEqRigid" (formula "39") (term "1,0,1,1,0") (ifseqformula "20"))
                        (rule "applyEqRigid" (formula "18") (term "1,0,1,1,0,0") (ifseqformula "20"))
                        (rule "applyEqRigid" (formula "25") (term "1,0") (ifseqformula "20"))
                        (rule "replace_known_left" (formula "22") (term "1") (ifseqformula "25"))
                        (rule "applyEqRigid" (formula "24") (term "1,0") (ifseqformula "20"))
                        (rule "applyEqRigid" (formula "23") (term "1") (ifseqformula "20"))
                        (rule "applyEq" (formula "25") (term "1") (ifseqformula "20"))
                        (rule "inEqSimp_subsumption1" (formula "22") (term "0") (ifseqformula "29"))
                        (rule "leq_literals" (formula "22") (term "0,0"))
                        (rule "concrete_or_1" (formula "22") (term "0"))
                        (rule "ifthenelse_true_for" (formula "22"))
                        (rule "true_left" (formula "22"))
                        (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "21"))
                        (rule "polySimp_rightDist" (formula "23") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0"))
                        (rule "polySimp_elimOne" (formula "23") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "23") (term "0"))
                        (rule "polySimp_rightDist" (formula "23") (term "0,0,0"))
                        (rule "mul_literals" (formula "23") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor2b" (formula "23") (term "0,0"))
                        (rule "add_literals" (formula "23") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "23") (term "1,0,0"))
                        (rule "add_zero_right" (formula "23") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "23"))
                        (rule "mul_literals" (formula "23") (term "1"))
                        (rule "boxToDiamond" (formula "2") (term "1"))
                        (builtin "Update Simplification" (formula "2"))
                        (rule "notLeft" (formula "2"))
                        (rule "methodCallWithAssignment" (formula "34") (term "1") (inst "#v0=j"))
                        (branch " Normal Execution (queryReceiver_22 != null)"
                           (builtin "Update Simplification" (formula "34"))
                           (rule "variableDeclaration" (formula "34") (term "1") (newnames "j_26"))
                           (rule "only_created_object_are_referenced_by_arrays_non_null" (formula "37") (term "0") (ifseqformula "18") (ifseqformula "24") (ifseqformula "37"))
                           (builtin "Use Operation Contract" (formula "40") (term "3") (newnames "result_33") (contract "hashCode;;"))
                           (branch " Pre"
                              (builtin "Update Simplification" (formula "40"))
                              (rule "replace_known_right" (formula "40") (term "0,1,1") (ifseqformula "38"))
                              (rule "concrete_not_2" (formula "40") (term "1,1"))
                              (rule "concrete_and_3" (formula "40") (term "1"))
                              (rule "replace_known_left" (formula "40") (term "1") (ifseqformula "33"))
                              (rule "concrete_and_3" (formula "40"))
                              (rule "close" (formula "40") (ifseqformula "24"))
                           )
                           (branch " Post"
                              (builtin "Update Simplification" (formula "40"))
                              (rule "inInt" (formula "40") (term "1,1,0,0"))
                              (rule "concrete_and_3" (formula "40") (term "1,0,0"))
                              (rule "impRight" (formula "40"))
                              (rule "andLeft" (formula "1"))
                              (rule "andLeft" (formula "2"))
                              (rule "andLeft" (formula "1"))
                              (rule "eqSymm" (formula "1"))
                              (rule "applyEq" (formula "1") (term "0") (ifseqformula "17"))
                              (rule "eqSymm" (formula "1"))
                              (rule "applyEq" (formula "42") (term "2") (ifseqformula "1"))
                              (rule "blockEmpty" (formula "42") (term "4"))
                              (rule "assignment" (formula "42") (term "4"))
                              (builtin "Update Simplification" (formula "42"))
                              (rule "assignmentModulo" (formula "42") (term "4"))
                              (builtin "Update Simplification" (formula "42"))
                              (rule "translateJavaMod" (formula "42") (term "2,1"))
                              (rule "inEqSimp_contradEq7" (formula "42") (term "0,0") (ifseqformula "29"))
                              (rule "times_zero_1" (formula "42") (term "1,0,0,0,0"))
                              (rule "add_zero_right" (formula "42") (term "0,0,0,0"))
                              (rule "leq_literals" (formula "42") (term "0,0,0"))
                              (rule "concrete_and_2" (formula "42") (term "0,0"))
                              (rule "concrete_not_2" (formula "42") (term "0"))
                              (rule "ifthenelse_true_for" (formula "42"))
                              (rule "assignment_array2" (formula "42") (term "4"))
                              (branch " Normal Execution (var_2 != null)"
                                 (builtin "Update Simplification" (formula "43"))
                                 (builtin "Update Simplification" (formula "42"))
                                 (rule "orRight" (formula "42"))
                                 (rule "orRight" (formula "42"))
                                 (rule "castDelInt" (formula "44") (term "1,2"))
                                 (rule "castDelInt" (formula "43") (term "0"))
                                 (rule "castDelInt" (formula "42") (term "1"))
                                 (rule "inEqSimp_ltRight" (formula "43"))
                                 (rule "times_zero_1" (formula "1") (term "0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0"))
                                 (rule "inEqSimp_leqRight" (formula "43"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                 (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "34"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0"))
                                 (rule "jmod_axiom" (formula "2") (term "0"))
                                 (rule "polySimp_mulComm1" (formula "2") (term "1,0"))
                                 (rule "jmod_axiom" (formula "1") (term "0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                 (rule "polySimp_mulComm1" (formula "1") (term "1,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                 (rule "polySimp_elimOne" (formula "2") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1"))
                                 (rule "polySimp_rightDist" (formula "1") (term "0,1"))
                                 (rule "mul_literals" (formula "1") (term "0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1"))
                                 (rule "polySimp_elimOne" (formula "1") (term "1,0,1"))
                                 (rule "methodCallWithAssignment" (formula "42") (term "3") (inst "#v0=b_4"))
                                 (branch " Normal Execution (v_String_1 != null)"
                                    (builtin "Update Simplification" (formula "42"))
                                    (rule "jmod_axiom" (formula "42") (term "1,0"))
                                    (rule "polySimp_mulComm1" (formula "42") (term "1,1,0"))
                                    (rule "variableDeclaration" (formula "42") (term "3") (newnames "b_9"))
                                    (rule "variableDeclarationAssign" (formula "42") (term "3"))
                                    (rule "variableDeclaration" (formula "42") (term "3") (newnames "arg0_10"))
                                    (rule "assignment" (formula "42") (term "3"))
                                    (builtin "Update Simplification" (formula "42"))
                                    (builtin "Use Operation Contract" (formula "42") (term "3") (newnames "arg0_10_0,result_35") (contract "equalsNormal;;"))
                                    (branch " Pre"
                                       (builtin "Update Simplification" (formula "42"))
                                       (rule "replace_known_left" (formula "42") (term "0,0") (ifseqformula "26"))
                                       (rule "concrete_and_1" (formula "42") (term "0"))
                                       (rule "replace_known_right" (formula "42") (term "1,1") (ifseqformula "40"))
                                       (rule "concrete_or_4" (formula "42") (term "1"))
                                       (rule "replace_known_left" (formula "42") (term "1") (ifseqformula "35"))
                                       (rule "concrete_and_3" (formula "42"))
                                       (rule "jmod_axiom" (formula "42") (term "1,0,0,0"))
                                       (rule "polySimp_mulComm1" (formula "42") (term "1,1,0,0,0"))
                                       (rule "replace_known_left" (formula "42") (term "0") (ifseqformula "4"))
                                       (rule "concrete_and_1" (formula "42"))
                                       (rule "notRight" (formula "42"))
                                       (rule "jmod_axiom" (formula "1") (term "1,0"))
                                       (rule "polySimp_mulComm1" (formula "1") (term "1,1,0"))
                                       (rule "close" (formula "42") (ifseqformula "1"))
                                    )
                                    (branch " Post"
                                       (builtin "Update Simplification" (formula "42"))
                                       (rule "impRight" (formula "42"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "andLeft" (formula "2"))
                                       (rule "replace_known_right" (formula "2") (term "0,0,0,1") (ifseqformula "42"))
                                       (rule "concrete_not_2" (formula "2") (term "0,0,1"))
                                       (rule "concrete_and_1" (formula "2") (term "0,1"))
                                       (rule "jmod_axiom" (formula "2") (term "1,0,0,1,1"))
                                       (rule "polySimp_mulComm1" (formula "2") (term "1,1,0,0,1,1"))
                                       (rule "instanceof_static_type" (formula "2") (term "0,0,1"))
                                       (rule "boolean_equal" (formula "2") (term "0,1"))
                                       (rule "concrete_and_1" (formula "2") (term "1"))
                                       (rule "castDel" (formula "2") (term "0,1,1"))
                                       (rule "blockEmpty" (formula "44") (term "2"))
                                       (rule "assignment" (formula "44") (term "2"))
                                       (builtin "Update Simplification" (formula "44"))
                                       (rule "methodCallReturn" (formula "44") (term "2"))
                                       (rule "assignment" (formula "44") (term "2"))
                                       (builtin "Update Simplification" (formula "44"))
                                       (rule "methodCallEmpty" (formula "44") (term "2"))
                                       (rule "tryEmpty" (formula "44") (term "2"))
                                       (rule "emptyModality" (formula "44") (term "2"))
                                       (builtin "Update Simplification" (formula "44"))
                                       (rule "eqClose" (formula "44") (term "1"))
                                       (rule "concrete_and_3" (formula "44"))
                                       (rule "applyEq" (formula "44") (term "0,1,0,0") (ifseqformula "5"))
                                       (rule "jmod_axiom" (formula "44") (term "1,0,0"))
                                       (rule "polySimp_mulComm1" (formula "44") (term "1,1,0,0"))
                                       (rule "applyEq" (formula "44") (term "0,0,1,1,0,0") (ifseqformula "27"))
                                       (rule "polySimp_mulComm0" (formula "44") (term "0,1,1,0,0"))
                                       (rule "resolvequery" (formula "44") (term "0") (inst "queryValue=java_lang_Stringequals_7"))
                                       (rule "eqSymm" (formula "46"))
                                       (rule "eqSymm" (formula "2") (term "0,2,0"))
                                       (rule "variableDeclaration" (formula "2") (newnames "equals_4"))
                                       (rule "variableDeclaration" (formula "2") (newnames "arg0_12"))
                                       (rule "variableDeclaration" (formula "2") (newnames "queryReceiver_25"))
                                       (rule "emptyModality" (formula "2"))
                                       (rule "methodCallWithAssignment" (formula "2") (term "2") (inst "#v0=b"))
                                       (branch " Normal Execution (queryReceiver_25 != null)"
                                          (builtin "Update Simplification" (formula "40"))
                                          (rule "variableDeclaration" (formula "2") (term "2") (newnames "b_10"))
                                          (rule "variableDeclarationAssign" (formula "2") (term "2"))
                                          (rule "variableDeclaration" (formula "2") (term "2") (newnames "arg0_13"))
                                          (rule "assignment" (formula "2") (term "2"))
                                          (builtin "Update Simplification" (formula "2"))
                                          (rule "boxToDiamond" (formula "2") (term "2"))
                                          (builtin "Update Simplification" (formula "2"))
                                          (rule "notLeft" (formula "2"))
                                          (builtin "Use Operation Contract" (formula "39") (term "2") (newnames "arg0_13_0,result_37") (contract "equalsNormal;;"))
                                          (branch " Pre"
                                             (builtin "Update Simplification" (formula "39"))
                                             (rule "replace_known_left" (formula "39") (term "0,1") (ifseqformula "38"))
                                             (rule "concrete_or_1" (formula "39") (term "1"))
                                             (rule "concrete_and_3" (formula "39"))
                                             (rule "replace_known_left" (formula "39") (term "0") (ifseqformula "29"))
                                             (rule "concrete_and_1" (formula "39"))
                                             (rule "replace_known_right" (formula "39") (term "0,1") (ifseqformula "43"))
                                             (rule "concrete_not_2" (formula "39") (term "1"))
                                             (rule "concrete_and_3" (formula "39"))
                                             (rule "close" (formula "39") (ifseqformula "22"))
                                          )
                                          (branch " Post"
                                             (builtin "Update Simplification" (formula "39"))
                                             (rule "impRight" (formula "39"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "andLeft" (formula "2"))
                                             (rule "replace_known_right" (formula "2") (term "0,0,0,1") (ifseqformula "46"))
                                             (rule "concrete_not_2" (formula "2") (term "0,0,1"))
                                             (rule "concrete_and_1" (formula "2") (term "0,1"))
                                             (rule "instanceof_static_type" (formula "2") (term "0,0,1"))
                                             (rule "boolean_equal" (formula "2") (term "0,1"))
                                             (rule "concrete_and_1" (formula "2") (term "1"))
                                             (rule "castDel" (formula "2") (term "0,1,1"))
                                             (rule "blockEmpty" (formula "41") (term "1"))
                                             (rule "assignment" (formula "41") (term "1"))
                                             (builtin "Update Simplification" (formula "41"))
                                             (rule "methodCallEmpty" (formula "41") (term "1"))
                                             (rule "emptyModality" (formula "41") (term "1"))
                                             (builtin "Update Simplification" (formula "41"))
                                             (rule "notRight" (formula "41"))
                                             (rule "eqSymm" (formula "1"))
                                             (rule "applyEq" (formula "3") (term "0,0") (ifseqformula "1"))
                                             (builtin "Use Operation Contract" (formula "42") (term "1") (newnames "result_39") (contract "hashCode;;"))
                                             (branch " Pre"
                                                (builtin "Update Simplification" (formula "42"))
                                                (rule "replace_known_left" (formula "42") (term "0,1") (ifseqformula "41"))
                                                (rule "concrete_and_1" (formula "42") (term "1"))
                                                (rule "replace_known_right" (formula "42") (term "0,1") (ifseqformula "46"))
                                                (rule "concrete_not_2" (formula "42") (term "1"))
                                                (rule "concrete_and_3" (formula "42"))
                                                (rule "close" (formula "42") (ifseqformula "32"))
                                             )
                                             (branch " Post"
                                                (builtin "Update Simplification" (formula "42"))
                                                (rule "inInt" (formula "42") (term "1,1,0,0"))
                                                (rule "concrete_and_3" (formula "42") (term "1,0,0"))
                                                (rule "impRight" (formula "42"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "2"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "eqSymm" (formula "1"))
                                                (rule "applyEq" (formula "1") (term "0") (ifseqformula "25"))
                                                (rule "eqSymm" (formula "1"))
                                                (rule "applyEq" (formula "44") (term "0") (ifseqformula "1"))
                                                (rule "blockEmpty" (formula "44") (term "1"))
                                                (rule "assignment" (formula "44") (term "1"))
                                                (builtin "Update Simplification" (formula "44"))
                                                (rule "methodCallEmpty" (formula "44") (term "1"))
                                                (rule "emptyModality" (formula "44") (term "1"))
                                                (builtin "Update Simplification" (formula "44"))
                                                (rule "notRight" (formula "44"))
                                                (rule "eqSymm" (formula "1"))
                                                (rule "applyEq" (formula "18") (term "0,0,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "9") (term "0,0,0,1,1,0,0,1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "49") (term "0,0,0,1,1,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "21") (term "0,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "24") (term "0,0,0") (ifseqformula "1"))
                                                (rule "replace_known_left" (formula "24") (term "0,0") (ifseqformula "36"))
                                                (rule "ifthenelse_true" (formula "24") (term "0"))
                                                (rule "eqSymm" (formula "24"))
                                                (rule "applyEq" (formula "13") (term "0,0,0,1,1,0,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "17") (term "0,0,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "22") (term "1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "14") (term "0,0,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "19") (term "0,1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "14") (term "1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "20") (term "0,1,0,1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "16") (term "1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "26") (term "1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "13") (term "0,1,0,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "23") (term "1,0,1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "9") (term "0,1,0,0,1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "17") (term "1,0,1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "49") (term "0,1,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "2") (term "1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "10") (term "1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "21") (term "0") (ifseqformula "32"))
                                                (rule "eqSymm" (formula "21"))
                                                (rule "applyEq" (formula "49") (term "0,0,1,1,0") (ifseqformula "34"))
                                                (rule "polySimp_mulComm0" (formula "49") (term "0,1,1,0"))
                                                (rule "applyEq" (formula "9") (term "0,0,1,1,0,0,1") (ifseqformula "34"))
                                                (rule "polySimp_mulComm0" (formula "9") (term "0,1,1,0,0,1"))
                                                (rule "applyEq" (formula "17") (term "0,0") (ifseqformula "34"))
                                                (rule "polySimp_mulComm0" (formula "17") (term "0"))
                                                (rule "applyEq" (formula "14") (term "0,0") (ifseqformula "33"))
                                                (rule "polySimp_mulComm0" (formula "14") (term "0"))
                                                (rule "applyEq" (formula "13") (term "0,0,1,1,0,0") (ifseqformula "32"))
                                                (rule "polySimp_mulComm0" (formula "13") (term "0,1,1,0,0"))
                                                (rule "applyEq" (formula "21") (term "0,0") (ifseqformula "1"))
                                                (rule "applyEqRigid" (formula "20") (term "1,0") (ifseqformula "18"))
                                                (rule "applyEqRigid" (formula "19") (term "1,0") (ifseqformula "18"))
                                                (rule "applyEq" (formula "29") (term "0") (ifseqformula "19"))
                                                (rule "applyEq" (formula "19") (term "1") (ifseqformula "18"))
                                                (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "16"))
                                                (rule "polySimp_rightDist" (formula "17") (term "0,0"))
                                                (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0"))
                                                (rule "polySimp_elimOne" (formula "17") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "17") (term "0"))
                                                (rule "polySimp_rightDist" (formula "17") (term "0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "17") (term "0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "17") (term "1,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0"))
                                                (rule "add_literals" (formula "17") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "17") (term "1,0,0"))
                                                (rule "add_literals" (formula "17") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                                                (rule "mul_literals" (formula "17") (term "1"))
                                                (rule "div_axiom" (formula "15") (term "0") (inst "quotient=quotient_38"))
                                                (rule "polySimp_mulComm0" (formula "15") (term "0,1,0,1"))
                                                (rule "polySimp_mulComm0" (formula "15") (term "0,2,1,1"))
                                                (rule "polySimp_mulComm0" (formula "15") (term "0,1,1,1"))
                                                (rule "polySimp_mulComm0" (formula "15") (term "1,1,1,1,1"))
                                                (rule "applyEq" (formula "15") (term "0,0,0,1") (ifseqformula "16"))
                                                (rule "inEqSimp_contradEq7" (formula "15") (term "0") (ifseqformula "33"))
                                                (rule "times_zero_1" (formula "15") (term "1,0,0,0"))
                                                (rule "add_zero_right" (formula "15") (term "0,0,0"))
                                                (rule "leq_literals" (formula "15") (term "0,0"))
                                                (rule "concrete_and_2" (formula "15") (term "0"))
                                                (rule "concrete_or_2" (formula "15"))
                                                (rule "andLeft" (formula "15"))
                                                (rule "andLeft" (formula "15"))
                                                (rule "applyEq" (formula "19") (term "1,0") (ifseqformula "15"))
                                                (rule "applyEq" (formula "19") (term "1,0") (ifseqformula "15"))
                                                (rule "replace_known_left" (formula "17") (term "1") (ifseqformula "19"))
                                                (rule "applyEq" (formula "18") (term "1") (ifseqformula "15"))
                                                (rule "inEqSimp_subsumption1" (formula "17") (term "0") (ifseqformula "34"))
                                                (rule "leq_literals" (formula "17") (term "0,0"))
                                                (rule "concrete_or_1" (formula "17") (term "0"))
                                                (rule "ifthenelse_true_for" (formula "17"))
                                                (rule "true_left" (formula "17"))
                                                (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "16"))
                                                (rule "polySimp_rightDist" (formula "18") (term "0,0"))
                                                (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0"))
                                                (rule "polySimp_elimOne" (formula "18") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "18") (term "0"))
                                                (rule "polySimp_rightDist" (formula "18") (term "0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "18") (term "0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "18") (term "1,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0"))
                                                (rule "add_literals" (formula "18") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "18") (term "1,0,0"))
                                                (rule "add_literals" (formula "18") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                                                (rule "mul_literals" (formula "18") (term "1"))
                                                (rule "equiv_left" (formula "6"))
                                                (branch " Case 1"
                                                   (rule "replace_known_left" (formula "10") (term "1") (ifseqformula "7"))
                                                   (rule "concrete_eq_3" (formula "10"))
                                                   (rule "applyEq" (formula "45") (term "1") (ifseqformula "6"))
                                                   (rule "close" (formula "45") (ifseqformula "10"))
                                                )
                                                (branch " Case 2"
                                                   (rule "replace_known_right" (formula "8") (term "1") (ifseqformula "40"))
                                                   (rule "concrete_eq_4" (formula "8"))
                                                   (rule "notLeft" (formula "8"))
                                                   (rule "apply_eq_boolean_rigid" (formula "4") (term "1") (ifseqformula "39"))
                                                   (rule "false_to_not_true" (formula "4"))
                                                   (rule "notLeft" (formula "4"))
                                                   (rule "apply_eq_boolean_rigid" (formula "5") (term "1") (ifseqformula "39"))
                                                   (rule "false_to_not_true" (formula "5"))
                                                   (rule "notLeft" (formula "5"))
                                                   (rule "apply_eq_boolean_rigid" (formula "45") (term "1") (ifseqformula "39"))
                                                   (rule "false_to_not_true" (formula "45"))
                                                   (rule "notRight" (formula "45"))
                                                   (rule "close" (formula "39") (ifseqformula "1"))
                                                )
                                             )
                                             (branch " Exceptional Post"
                                                (builtin "Update Simplification" (formula "42"))
                                                (rule "impRight" (formula "42"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "2"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "close" (formula "45") (ifseqformula "3"))
                                             )
                                          )
                                          (branch " Exceptional Post"
                                             (builtin "Update Simplification" (formula "39"))
                                             (rule "impRight" (formula "39"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "andLeft" (formula "2"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "notLeft" (formula "2"))
                                             (rule "close" (formula "42") (ifseqformula "3"))
                                          )
                                       )
                                       (branch " Null Reference (queryReceiver_25 = null)"
                                          (builtin "Update Simplification" (formula "3"))
                                          (builtin "Update Simplification" (formula "2"))
                                          (rule "close" (formula "44") (ifseqformula "2"))
                                       )
                                    )
                                    (branch " Exceptional Post"
                                       (builtin "Update Simplification" (formula "42"))
                                       (rule "impRight" (formula "42"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "andLeft" (formula "2"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "notLeft" (formula "2"))
                                       (rule "close" (formula "39") (ifseqformula "3"))
                                    )
                                 )
                                 (branch " Null Reference (v_String_1 = null)"
                                    (builtin "Update Simplification" (formula "43"))
                                    (builtin "Update Simplification" (formula "1"))
                                    (rule "jmod_axiom" (formula "1") (term "1,0"))
                                    (rule "polySimp_mulComm1" (formula "1") (term "1,1,0"))
                                    (rule "close" (formula "42") (ifseqformula "1"))
                                 )
                              )
                              (branch " Null Reference (var_2 = null)"
                                 (builtin "Update Simplification" (formula "43"))
                                 (builtin "Update Simplification" (formula "1"))
                                 (rule "close" (formula "38") (ifseqformula "1"))
                              )
                              (branch " Index Out of Bounds (var_2 != null, but j_7 Out of Bounds!)"
                                 (builtin "Update Simplification" (formula "43"))
                                 (builtin "Update Simplification" (formula "1"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "notLeft" (formula "1"))
                                 (rule "castDelInt" (formula "1") (term "0,1"))
                                 (rule "castDelInt" (formula "1") (term "1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                                 (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "1") (term "0,0,1"))
                                 (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "33"))
                                 (rule "inEqSimp_commuteLeq" (formula "1") (term "0"))
                                 (rule "jmod_axiom" (formula "1") (term "1,0,1"))
                                 (rule "polySimp_mulComm1" (formula "1") (term "1,1,0,1"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
                                 (rule "jmod_axiom" (formula "1") (term "0,0"))
                                 (rule "polySimp_mulComm1" (formula "1") (term "1,0,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "1") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "1") (term "0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "0,1"))
                                 (rule "polySimp_elimOne" (formula "1") (term "0,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                 (rule "polySimp_mulAssoc" (formula "1") (term "0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "0,1,0"))
                                 (rule "inEqSimp_contradInEq0" (formula "1") (term "1") (ifseqformula "6"))
                                 (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1"))
                                 (rule "add_literals" (formula "1") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "1") (term "0,0,1"))
                                 (rule "leq_literals" (formula "1") (term "0,1"))
                                 (rule "concrete_and_2" (formula "1") (term "1"))
                                 (rule "concrete_or_4" (formula "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "9"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "inEqSimp_homoInEq1" (formula "1"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0"))
                                 (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
                                 (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                                 (rule "add_zero_right" (formula "1") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor2b" (formula "1") (term "0"))
                                 (rule "add_literals" (formula "1") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "1") (term "1,0"))
                                 (rule "add_literals" (formula "1") (term "0"))
                                 (rule "leq_literals" (formula "1"))
                                 (rule "closeFalse" (formula "1"))
                              )
                           )
                           (branch " Exceptional Post"
                              (builtin "Update Simplification" (formula "40"))
                              (rule "impRight" (formula "40"))
                              (rule "andLeft" (formula "1"))
                              (rule "andLeft" (formula "2"))
                              (rule "andLeft" (formula "1"))
                              (rule "andLeft" (formula "1"))
                              (rule "notLeft" (formula "2"))
                              (rule "close" (formula "37") (ifseqformula "3"))
                           )
                        )
                        (branch " Null Reference (queryReceiver_22 = null)"
                           (builtin "Update Simplification" (formula "35"))
                           (builtin "Update Simplification" (formula "1"))
                           (rule "close" (formula "39") (ifseqformula "1"))
                        )
                     )
                     (branch " Null Reference (_s = null)"
                        (builtin "Update Simplification" (formula "1"))
                        (rule "close" (formula "35") (ifseqformula "1"))
                     )
                  )
               )
               (branch " Null Reference (var = null)"
                  (builtin "Update Simplification" (formula "35"))
                  (builtin "Update Simplification" (formula "1"))
                  (rule "close" (formula "31") (ifseqformula "1"))
               )
               (branch " Index Out of Bounds (var != null, but j_3 Out of Bounds!)"
                  (builtin "Update Simplification" (formula "35"))
                  (builtin "Update Simplification" (formula "1"))
                  (rule "andLeft" (formula "1"))
                  (rule "notLeft" (formula "1"))
                  (rule "castDelInt" (formula "1") (term "1,0"))
                  (rule "castDelInt" (formula "1") (term "0,1"))
                  (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                  (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                  (rule "add_zero_right" (formula "1") (term "0,0,1"))
                  (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "27"))
                  (rule "inEqSimp_commuteLeq" (formula "1") (term "0"))
                  (rule "jmod_axiom" (formula "1") (term "1,0,1"))
                  (rule "polySimp_mulComm1" (formula "1") (term "1,1,0,1"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
                  (rule "jmod_axiom" (formula "1") (term "0,0"))
                  (rule "polySimp_mulComm1" (formula "1") (term "1,0,0"))
                  (rule "inEqSimp_homoInEq1" (formula "1") (term "0"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                  (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                  (rule "polySimp_addComm0" (formula "1") (term "0,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "1") (term "0,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                  (rule "polySimp_mulAssoc" (formula "1") (term "0,1,0"))
                  (rule "polySimp_mulComm0" (formula "1") (term "0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0"))
                  (rule "polySimp_elimOne" (formula "1") (term "0,1,0"))
                  (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "4"))
                  (rule "inEqSimp_homoInEq1" (formula "1") (term "0,0"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "1") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "1") (term "1,1,0,0,0,0,0"))
                  (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
                  (rule "polySimp_pullOutFactor2b" (formula "1") (term "0,0,0"))
                  (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
                  (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                  (rule "add_zero_right" (formula "1") (term "0,0,0"))
                  (rule "leq_literals" (formula "1") (term "0,0"))
                  (rule "concrete_and_2" (formula "1") (term "0"))
                  (rule "concrete_or_2" (formula "1"))
                  (rule "throwUnfold" (formula "35") (term "2") (inst "#v0=v_ArrayIndexOutOfBoundsException"))
                  (rule "variableDeclarationAssign" (formula "35") (term "2"))
                  (rule "variableDeclaration" (formula "35") (term "2") (newnames "v_ArrayIndexOutOfBoundsException"))
                  (rule "instanceCreationAssignment" (formula "35") (term "2") (inst "#v0=v_ArrayIndexOutOfBoundsException_1"))
                  (rule "variableDeclarationAssign" (formula "35") (term "2"))
                  (rule "variableDeclaration" (formula "35") (term "2") (newnames "v_ArrayIndexOutOfBoundsException_1"))
                  (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "35") (term "2") (inst "#v0=v_ArrayIndexOutOfBoundsException_2"))
                  (rule "variableDeclaration" (formula "35") (term "2") (newnames "v_ArrayIndexOutOfBoundsException_2"))
                  (rule "methodBodyExpand" (formula "35") (term "2"))
                  (rule "variableDeclaration" (formula "35") (term "2") (newnames "__NEW__"))
                  (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "35") (term "2") (inst "#v0=v_ArrayIndexOutOfBoundsException_3"))
                  (rule "variableDeclaration" (formula "35") (term "2") (newnames "v_ArrayIndexOutOfBoundsException_3"))
                  (rule "allocateInstance" (formula "35") (term "2"))
                  (builtin "Update Simplification" (formula "35"))
                  (rule "polySimp_addComm0" (formula "35") (term "3"))
                  (rule "blockEmpty" (formula "35") (term "6"))
                  (rule "assignment" (formula "35") (term "6"))
                  (builtin "Update Simplification" (formula "35"))
                  (rule "methodBodyExpand" (formula "35") (term "6"))
                  (rule "assignment" (formula "35") (term "6"))
                  (builtin "Update Simplification" (formula "35"))
                  (rule "assignment" (formula "35") (term "8"))
                  (builtin "Update Simplification" (formula "35"))
                  (rule "methodCallWithinClass" (formula "35") (term "10"))
                  (rule "methodBodyExpand" (formula "35") (term "10"))
                  (rule "methodCallSuper" (formula "35") (term "10"))
                  (rule "nextToCreate_non_negative" (formula "35") (term "0,4") (ifseqformula "21"))
                  (rule "methodBodyExpand" (formula "36") (term "10"))
                  (rule "methodCallSuper" (formula "36") (term "10"))
                  (rule "methodBodyExpand" (formula "36") (term "10"))
                  (rule "methodCallSuper" (formula "36") (term "10"))
                  (rule "methodBodyExpand" (formula "36") (term "10"))
                  (rule "methodCallSuper" (formula "36") (term "10"))
                  (rule "methodBodyExpand" (formula "36") (term "10"))
                  (rule "methodCallSuper" (formula "36") (term "10"))
                  (rule "methodBodyExpand" (formula "36") (term "10"))
                  (rule "methodCallEmpty" (formula "36") (term "10"))
                  (rule "blockEmpty" (formula "36") (term "10"))
                  (rule "assignment" (formula "36") (term "10"))
                  (builtin "Update Simplification" (formula "36"))
                  (rule "assignment" (formula "36") (term "12"))
                  (builtin "Update Simplification" (formula "36"))
                  (rule "methodCallEmpty" (formula "36") (term "14"))
                  (rule "methodCallEmpty" (formula "36") (term "14"))
                  (rule "methodCallEmpty" (formula "36") (term "14"))
                  (rule "methodCallEmpty" (formula "36") (term "14"))
                  (rule "methodCallEmpty" (formula "36") (term "14"))
                  (rule "blockEmpty" (formula "36") (term "14"))
                  (rule "methodCallReturnIgnoreResult" (formula "36") (term "14"))
                  (rule "methodCallReturn" (formula "36") (term "14"))
                  (rule "assignment" (formula "36") (term "14"))
                  (builtin "Update Simplification" (formula "36"))
                  (rule "methodCallEmpty" (formula "36") (term "14"))
                  (rule "blockEmpty" (formula "36") (term "14"))
                  (rule "assignment" (formula "36") (term "14"))
                  (builtin "Update Simplification" (formula "36"))
                  (rule "methodBodyExpand" (formula "36") (term "14"))
                  (rule "methodCallSuper" (formula "36") (term "14"))
                  (rule "methodBodyExpand" (formula "36") (term "14"))
                  (rule "methodCallSuper" (formula "36") (term "14"))
                  (rule "methodBodyExpand" (formula "36") (term "14"))
                  (rule "methodCallSuper" (formula "36") (term "14"))
                  (rule "methodBodyExpand" (formula "36") (term "14"))
                  (rule "methodCallSuper" (formula "36") (term "14"))
                  (rule "methodBodyExpand" (formula "36") (term "14"))
                  (rule "methodCallSuper" (formula "36") (term "14"))
                  (rule "methodBodyExpand" (formula "36") (term "14"))
                  (rule "methodCallEmpty" (formula "36") (term "14"))
                  (rule "blockEmpty" (formula "36") (term "14"))
                  (rule "assignment" (formula "36") (term "14"))
                  (builtin "Update Simplification" (formula "36"))
                  (rule "assignment" (formula "36") (term "14"))
                  (builtin "Update Simplification" (formula "36"))
                  (rule "methodCallEmpty" (formula "36") (term "14"))
                  (rule "methodCallEmpty" (formula "36") (term "14"))
                  (rule "methodCallEmpty" (formula "36") (term "14"))
                  (rule "methodCallEmpty" (formula "36") (term "14"))
                  (rule "methodCallEmpty" (formula "36") (term "14"))
                  (rule "blockEmpty" (formula "36") (term "14"))
                  (rule "assignment_write_attribute" (formula "36") (term "14"))
                  (branch " Normal Execution (v_ArrayIndexOutOfBoundsException_1 != null)"
                     (builtin "Update Simplification" (formula "37"))
                     (builtin "Update Simplification" (formula "36"))
                     (rule "repository_object_non_null" (formula "36"))
                     (rule "false_right" (formula "36"))
                     (rule "assignment" (formula "36") (term "14"))
                     (builtin "Update Simplification" (formula "36"))
                     (rule "methodCallParamThrow" (formula "36") (term "14"))
                     (builtin "Update Simplification" (formula "36"))
                     (rule "tryCatchThrow" (formula "36") (term "13"))
                     (rule "ifElseUnfold" (formula "36") (term "13") (inst "#boolv=b"))
                     (rule "variableDeclaration" (formula "36") (term "13") (newnames "b_4"))
                     (rule "equality_comparison_new" (formula "36") (term "13"))
                     (builtin "Update Simplification" (formula "36"))
                     (rule "repository_object_non_null" (formula "36") (term "0,0"))
                     (rule "concrete_not_2" (formula "36") (term "0"))
                     (rule "ifthenelse_true_for" (formula "36"))
                     (rule "ifElseSkipThen" (formula "36") (term "13"))
                     (rule "assignment" (formula "36") (term "13"))
                     (builtin "Update Simplification" (formula "36"))
                     (rule "ifElseSplit" (formula "36"))
                     (branch " if v_ArrayIndexOutOfBoundsException instanceof  java.lang.Throwable true"
                        (builtin "Update Simplification" (formula "1"))
                        (rule "repository_object_non_null" (formula "1") (term "0,0"))
                        (rule "ifthenelse_false" (formula "1") (term "0"))
                        (rule "instanceof_static_type" (formula "1") (term "0"))
                        (rule "boolean_equal" (formula "1"))
                        (rule "true_left" (formula "1"))
                        (rule "variableDeclaration" (formula "36") (term "13") (newnames "e"))
                        (rule "assignment" (formula "36") (term "13"))
                        (builtin "Update Simplification" (formula "36"))
                        (rule "assignment" (formula "36") (term "13"))
                        (builtin "Update Simplification" (formula "36"))
                        (rule "emptyModality" (formula "36") (term "12"))
                        (builtin "Update Simplification" (formula "36"))
                        (rule "repository_object_non_null" (formula "36") (term "1"))
                        (rule "concrete_and_4" (formula "36"))
                        (rule "false_right" (formula "36"))
                        (rule "ifthenelse_split" (formula "12") (term "0"))
                        (branch " result_0 >= 0 TRUE"
                           (rule "eqSymm" (formula "13"))
                           (rule "applyEq" (formula "5") (term "0,0") (ifseqformula "13"))
                           (rule "polySimp_mulComm0" (formula "5") (term "0"))
                           (rule "applyEq" (formula "2") (term "0,0") (ifseqformula "12"))
                           (rule "polySimp_mulComm0" (formula "2") (term "0"))
                           (rule "inEqSimp_contradInEq1" (formula "9") (ifseqformula "2"))
                           (rule "andLeft" (formula "9"))
                           (rule "inEqSimp_homoInEq1" (formula "9"))
                           (rule "polySimp_pullOutFactor1b" (formula "9") (term "0"))
                           (rule "add_literals" (formula "9") (term "1,1,0"))
                           (rule "times_zero_1" (formula "9") (term "1,0"))
                           (rule "add_zero_right" (formula "9") (term "0"))
                           (rule "leq_literals" (formula "9"))
                           (rule "closeFalse" (formula "9"))
                        )
                        (branch " result_0 >= 0 FALSE"
                           (rule "eqSymm" (formula "12"))
                           (rule "inEqSimp_geqRight" (formula "32"))
                           (rule "times_zero_1" (formula "1") (term "1,0,0"))
                           (rule "add_literals" (formula "1") (term "0,0"))
                           (rule "applyEq" (formula "6") (term "0,0") (ifseqformula "13"))
                           (rule "polySimp_mulComm1" (formula "6") (term "0"))
                           (rule "polySimp_mulComm0" (formula "6") (term "0,0"))
                           (rule "inEqSimp_homoInEq1" (formula "6"))
                           (rule "polySimp_mulLiterals" (formula "6") (term "1,0"))
                           (rule "polySimp_elimOne" (formula "6") (term "1,0"))
                           (rule "applyEq" (formula "3") (term "0,0") (ifseqformula "13"))
                           (rule "polySimp_mulComm1" (formula "3") (term "0"))
                           (rule "polySimp_mulComm0" (formula "3") (term "0,0"))
                           (rule "inEqSimp_homoInEq1" (formula "3"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                           (rule "polySimp_elimOne" (formula "3") (term "1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                           (rule "mul_literals" (formula "1") (term "1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                           (rule "polySimp_mulComm0" (formula "6") (term "1"))
                           (rule "polySimp_rightDist" (formula "6") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                           (rule "polySimp_rightDist" (formula "6") (term "0,1"))
                           (rule "mul_literals" (formula "6") (term "0,0,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                           (rule "polySimp_mulComm0" (formula "3") (term "1"))
                           (rule "polySimp_rightDist" (formula "3") (term "1"))
                           (rule "mul_literals" (formula "3") (term "0,1"))
                           (rule "inEqSimp_subsumption0" (formula "8") (ifseqformula "3"))
                           (rule "inEqSimp_homoInEq0" (formula "8") (term "0"))
                           (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "8") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0"))
                           (rule "mul_literals" (formula "8") (term "0,1,0,0"))
                           (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "8") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor2b" (formula "8") (term "0,0"))
                           (rule "add_literals" (formula "8") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "8") (term "1,0,0"))
                           (rule "add_zero_right" (formula "8") (term "0,0"))
                           (rule "qeq_literals" (formula "8") (term "0"))
                           (rule "concrete_or_1" (formula "8"))
                           (rule "true_left" (formula "8"))
                           (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "6"))
                           (rule "polySimp_rightDist" (formula "8") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0"))
                           (rule "polySimp_elimOne" (formula "8") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "8") (term "0,0,0"))
                           (rule "mul_literals" (formula "8") (term "0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "8") (term "1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "8") (term "0"))
                           (rule "polySimp_addComm1" (formula "8") (term "0,0"))
                           (rule "polySimp_pullOutFactor3b" (formula "8") (term "0"))
                           (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "8") (term "0,0,0"))
                           (rule "add_literals" (formula "8") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0"))
                           (rule "add_literals" (formula "8") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "8") (term "1,0,0"))
                           (rule "add_zero_right" (formula "8") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                           (rule "mul_literals" (formula "8") (term "1"))
                           (rule "inEqSimp_subsumption6" (formula "8") (ifseqformula "26"))
                           (rule "greater_literals" (formula "8") (term "0,0"))
                           (rule "concrete_and_1" (formula "8") (term "0"))
                           (rule "mul_literals" (formula "8") (term "1,0"))
                           (rule "leq_literals" (formula "8") (term "0"))
                           (rule "concrete_or_1" (formula "8"))
                           (rule "true_left" (formula "8"))
                           (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "3"))
                           (rule "polySimp_rightDist" (formula "8") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0"))
                           (rule "polySimp_elimOne" (formula "8") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "8") (term "0"))
                           (rule "polySimp_rightDist" (formula "8") (term "0,0,0"))
                           (rule "mul_literals" (formula "8") (term "0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "8") (term "1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "8") (term "0,0,0"))
                           (rule "add_literals" (formula "8") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0"))
                           (rule "add_literals" (formula "8") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "8") (term "1,0,0"))
                           (rule "add_zero_right" (formula "8") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                           (rule "mul_literals" (formula "8") (term "1"))
                           (rule "inEqSimp_subsumption1" (formula "26") (ifseqformula "8"))
                           (rule "leq_literals" (formula "26") (term "0"))
                           (rule "concrete_or_1" (formula "26"))
                           (rule "true_left" (formula "26"))
                           (rule "resolvequery" (formula "21") (term "1,0,1") (inst "queryValue=java_lang_StringhashCode_17"))
                           (rule "eqSymm" (formula "22") (term "0,1,0"))
                           (rule "applyEq" (formula "24") (term "0,0") (ifseqformula "21"))
                           (rule "applyEq" (formula "19") (term "0,0") (ifseqformula "21"))
                           (rule "applyEq" (formula "20") (term "1") (ifseqformula "21"))
                           (rule "applyEq" (formula "26") (term "0") (ifseqformula "21"))
                           (rule "applyEq" (formula "36") (term "0,1,0") (ifseqformula "21"))
                           (rule "applyEq" (formula "17") (term "0,1,0,0") (ifseqformula "21"))
                           (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "20"))
                           (rule "polySimp_rightDist" (formula "23") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0"))
                           (rule "polySimp_elimOne" (formula "23") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "23") (term "0"))
                           (rule "polySimp_rightDist" (formula "23") (term "0,0,0"))
                           (rule "mul_literals" (formula "23") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor2b" (formula "23") (term "0,0"))
                           (rule "add_literals" (formula "23") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "23") (term "1,0,0"))
                           (rule "add_literals" (formula "23") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "23"))
                           (rule "mul_literals" (formula "23") (term "1"))
                           (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "8"))
                           (rule "leq_literals" (formula "23") (term "0"))
                           (rule "concrete_or_1" (formula "23"))
                           (rule "true_left" (formula "23"))
                           (rule "variableDeclaration" (formula "22") (newnames "hcode_17"))
                           (rule "variableDeclaration" (formula "22") (newnames "queryReceiver_21"))
                           (rule "emptyModality" (formula "22"))
                           (rule "jdiv_axiom" (formula "24") (term "0"))
                           (rule "eqSymm" (formula "24"))
                           (rule "replace_known_left" (formula "24") (term "0,0") (ifseqformula "27"))
                           (rule "ifthenelse_true" (formula "24") (term "0"))
                           (rule "eqSymm" (formula "24"))
                           (rule "applyEq" (formula "24") (term "0") (ifseqformula "25"))
                           (rule "eqSymm" (formula "24"))
                           (rule "div_axiom" (formula "19") (term "0") (inst "quotient=quotient_16"))
                           (rule "polySimp_mulComm0" (formula "19") (term "0,1,0,1"))
                           (rule "polySimp_mulComm0" (formula "19") (term "0,2,1,1"))
                           (rule "polySimp_mulComm0" (formula "19") (term "1,1,1,1,1"))
                           (rule "polySimp_mulComm0" (formula "19") (term "0,1,1,1"))
                           (rule "applyEq" (formula "19") (term "0,0,0,1") (ifseqformula "20"))
                           (rule "inEqSimp_contradEq7" (formula "19") (term "0") (ifseqformula "8"))
                           (rule "times_zero_1" (formula "19") (term "1,0,0,0"))
                           (rule "add_literals" (formula "19") (term "0,0,0"))
                           (rule "leq_literals" (formula "19") (term "0,0"))
                           (rule "concrete_and_2" (formula "19") (term "0"))
                           (rule "concrete_or_2" (formula "19"))
                           (rule "andLeft" (formula "19"))
                           (rule "andLeft" (formula "19"))
                           (rule "applyEqRigid" (formula "39") (term "1,0,1,1,0") (ifseqformula "19"))
                           (rule "applyEq" (formula "17") (term "1,0,1,1,0,0") (ifseqformula "19"))
                           (rule "applyEqRigid" (formula "26") (term "1,0") (ifseqformula "19"))
                           (rule "replace_known_left" (formula "21") (term "1") (ifseqformula "26"))
                           (rule "applyEq" (formula "23") (term "1,0") (ifseqformula "19"))
                           (rule "applyEqRigid" (formula "26") (term "1") (ifseqformula "19"))
                           (rule "applyEq" (formula "22") (term "1") (ifseqformula "19"))
                           (rule "inEqSimp_subsumption1" (formula "21") (term "0") (ifseqformula "8"))
                           (rule "leq_literals" (formula "21") (term "0,0"))
                           (rule "concrete_or_1" (formula "21") (term "0"))
                           (rule "ifthenelse_true_for" (formula "21"))
                           (rule "true_left" (formula "21"))
                           (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "20"))
                           (rule "polySimp_rightDist" (formula "24") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "24") (term "1,0,0"))
                           (rule "polySimp_elimOne" (formula "24") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "24") (term "0"))
                           (rule "polySimp_rightDist" (formula "24") (term "0,0,0"))
                           (rule "mul_literals" (formula "24") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor2b" (formula "24") (term "0,0"))
                           (rule "add_literals" (formula "24") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "24") (term "1,0,0"))
                           (rule "add_literals" (formula "24") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "24"))
                           (rule "mul_literals" (formula "24") (term "1"))
                           (rule "inEqSimp_subsumption1" (formula "24") (ifseqformula "8"))
                           (rule "leq_literals" (formula "24") (term "0"))
                           (rule "concrete_or_1" (formula "24"))
                           (rule "true_left" (formula "24"))
                           (rule "boxToDiamond" (formula "23") (term "1"))
                           (builtin "Update Simplification" (formula "23"))
                           (rule "notLeft" (formula "23"))
                           (rule "methodCallWithAssignment" (formula "34") (term "1") (inst "#v0=j"))
                           (branch " Normal Execution (queryReceiver_21 != null)"
                              (builtin "Update Simplification" (formula "34"))
                              (rule "variableDeclaration" (formula "34") (term "1") (newnames "j_18"))
                              (rule "only_created_object_are_referenced_by_arrays_non_null" (formula "37") (term "0") (ifseqformula "18") (ifseqformula "25") (ifseqformula "37"))
                              (builtin "Use Operation Contract" (formula "34") (term "1") (newnames "result_41") (contract "hashCode;;"))
                              (branch " Pre"
                                 (builtin "Update Simplification" (formula "34"))
                                 (rule "replace_known_left" (formula "34") (term "0,1") (ifseqformula "33"))
                                 (rule "concrete_and_1" (formula "34") (term "1"))
                                 (rule "replace_known_right" (formula "34") (term "0,1") (ifseqformula "38"))
                                 (rule "concrete_not_2" (formula "34") (term "1"))
                                 (rule "concrete_and_3" (formula "34"))
                                 (rule "close" (formula "34") (ifseqformula "25"))
                              )
                              (branch " Post"
                                 (builtin "Update Simplification" (formula "34"))
                                 (rule "inInt" (formula "34") (term "1,1,0,0"))
                                 (rule "concrete_and_3" (formula "34") (term "1,0,0"))
                                 (rule "impRight" (formula "34"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "andLeft" (formula "2"))
                                 (rule "eqSymm" (formula "2"))
                                 (rule "applyEq" (formula "2") (term "0") (ifseqformula "17"))
                                 (rule "eqSymm" (formula "2"))
                                 (rule "applyEq" (formula "36") (term "0") (ifseqformula "2"))
                                 (rule "blockEmpty" (formula "36") (term "1"))
                                 (rule "assignment" (formula "36") (term "1"))
                                 (builtin "Update Simplification" (formula "36"))
                                 (rule "methodCallEmpty" (formula "36") (term "1"))
                                 (rule "emptyModality" (formula "36") (term "1"))
                                 (builtin "Update Simplification" (formula "36"))
                                 (rule "notRight" (formula "36"))
                                 (rule "eqSymm" (formula "1"))
                                 (rule "applyEq" (formula "4") (term "0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "6") (term "0,1,1") (ifseqformula "1"))
                                 (rule "applyEq" (formula "14") (term "1") (ifseqformula "1"))
                                 (rule "applyEq" (formula "16") (term "0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "13") (term "0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "10") (term "0,0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "15") (term "1,0,1") (ifseqformula "1"))
                                 (rule "applyEq" (formula "8") (term "1") (ifseqformula "1"))
                                 (rule "applyEq" (formula "12") (term "0,1,0,1") (ifseqformula "1"))
                                 (rule "applyEq" (formula "9") (term "0,1,0,1") (ifseqformula "1"))
                                 (rule "applyEq" (formula "3") (term "1") (ifseqformula "1"))
                                 (rule "applyEq" (formula "18") (term "1") (ifseqformula "1"))
                                 (rule "applyEq" (formula "13") (term "0") (ifseqformula "24"))
                                 (rule "eqSymm" (formula "13"))
                                 (rule "applyEq" (formula "27") (term "0") (ifseqformula "16"))
                                 (rule "polySimp_homoEq" (formula "27"))
                                 (rule "polySimp_mulLiterals" (formula "27") (term "1,0"))
                                 (rule "polySimp_elimOne" (formula "27") (term "1,0"))
                                 (rule "applyEqRigid" (formula "14") (term "1,0") (ifseqformula "13"))
                                 (rule "applyEqRigid" (formula "14") (term "1,0") (ifseqformula "13"))
                                 (rule "polySimp_sepPosMonomial" (formula "25"))
                                 (rule "applyEq" (formula "12") (term "1,0") (ifseqformula "25"))
                                 (rule "polySimp_mulAssoc" (formula "12") (term "0"))
                                 (rule "inEqSimp_homoInEq1" (formula "12"))
                                 (rule "polySimp_mulLiterals" (formula "12") (term "1,0"))
                                 (rule "polySimp_elimOne" (formula "12") (term "1,0"))
                                 (rule "applyEq" (formula "6") (term "1,0") (ifseqformula "25"))
                                 (rule "polySimp_mulAssoc" (formula "6") (term "0"))
                                 (rule "inEqSimp_homoInEq0" (formula "6"))
                                 (rule "polySimp_mulLiterals" (formula "6") (term "1,0"))
                                 (rule "polySimp_elimOne" (formula "6") (term "1,0"))
                                 (rule "applyEq" (formula "9") (term "1,0") (ifseqformula "25"))
                                 (rule "polySimp_mulAssoc" (formula "9") (term "0"))
                                 (rule "inEqSimp_homoInEq0" (formula "9"))
                                 (rule "polySimp_mulLiterals" (formula "9") (term "1,0"))
                                 (rule "polySimp_elimOne" (formula "9") (term "1,0"))
                                 (rule "applyEqRigid" (formula "10") (term "1") (ifseqformula "25"))
                                 (rule "applyEqRigid" (formula "14") (term "0,1") (ifseqformula "25"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "1"))
                                 (rule "polySimp_elimOne" (formula "14") (term "1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "12"))
                                 (rule "polySimp_mulComm0" (formula "12") (term "1"))
                                 (rule "polySimp_rightDist" (formula "12") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "12") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "12") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "12") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1"))
                                 (rule "mul_literals" (formula "12") (term "0,0,1"))
                                 (rule "polySimp_elimOne" (formula "12") (term "1,0,1"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                 (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                 (rule "polySimp_rightDist" (formula "6") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                 (rule "mul_literals" (formula "6") (term "0,1"))
                                 (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                                 (rule "polySimp_mulComm0" (formula "9") (term "1"))
                                 (rule "polySimp_rightDist" (formula "9") (term "1"))
                                 (rule "polySimp_rightDist" (formula "9") (term "0,1"))
                                 (rule "mul_literals" (formula "9") (term "0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "9") (term "1,0,1"))
                                 (rule "polySimp_elimOne" (formula "9") (term "1,0,1"))
                                 (rule "inEqSimp_contradInEq0" (formula "6") (ifseqformula "20"))
                                 (rule "andLeft" (formula "6"))
                                 (rule "inEqSimp_homoInEq1" (formula "6"))
                                 (rule "polySimp_pullOutFactor1b" (formula "6") (term "0"))
                                 (rule "add_literals" (formula "6") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "6") (term "1,0"))
                                 (rule "add_zero_right" (formula "6") (term "0"))
                                 (rule "leq_literals" (formula "6"))
                                 (rule "closeFalse" (formula "6"))
                              )
                              (branch " Exceptional Post"
                                 (builtin "Update Simplification" (formula "34"))
                                 (rule "impRight" (formula "34"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "andLeft" (formula "2"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "notLeft" (formula "2"))
                                 (rule "close" (formula "37") (ifseqformula "3"))
                              )
                           )
                           (branch " Null Reference (queryReceiver_21 = null)"
                              (builtin "Update Simplification" (formula "35"))
                              (builtin "Update Simplification" (formula "1"))
                              (rule "close" (formula "39") (ifseqformula "1"))
                           )
                        )
                     )
                     (branch " if v_ArrayIndexOutOfBoundsException instanceof  java.lang.Throwable false"
                        (rule "false_to_not_true" (formula "1") (term "13"))
                        (builtin "Update Simplification" (formula "1"))
                        (rule "notLeft" (formula "1"))
                        (rule "repository_object_non_null" (formula "32") (term "0,0"))
                        (rule "ifthenelse_false" (formula "32") (term "0"))
                        (rule "instanceof_static_type" (formula "32") (term "0"))
                        (rule "boolean_equal" (formula "32"))
                        (rule "closeTrue" (formula "32"))
                     )
                  )
                  (branch " Null Reference (v_ArrayIndexOutOfBoundsException_1 = null)"
                     (builtin "Update Simplification" (formula "1"))
                     (rule "repository_object_non_null" (formula "1"))
                     (rule "closeFalse" (formula "1"))
                  )
               )
            )
            (branch " Exceptional Post"
               (builtin "Update Simplification" (formula "32"))
               (rule "impRight" (formula "32"))
               (rule "andLeft" (formula "1"))
               (rule "andLeft" (formula "2"))
               (rule "andLeft" (formula "1"))
               (rule "andLeft" (formula "1"))
               (rule "notLeft" (formula "2"))
               (rule "close" (formula "31") (ifseqformula "3"))
            )
         )
         (branch " Null Reference (_s = null)"
            (builtin "Update Simplification" (formula "1"))
            (rule "close" (formula "26") (ifseqformula "1"))
         )
      )
   )
   (branch " Exceptional Post"
      (builtin "Update Simplification" (formula "22"))
      (rule "impRight" (formula "22"))
      (rule "andLeft" (formula "1"))
      (rule "andLeft" (formula "2"))
      (rule "andLeft" (formula "1"))
      (rule "andLeft" (formula "1"))
      (rule "notLeft" (formula "2"))
      (rule "close" (formula "21") (ifseqformula "3"))
   )
)
(branch " Null Reference (_s = null)"
   (builtin "Update Simplification" (formula "1"))
   (rule "close" (formula "19") (ifseqformula "1"))
)
)

}
