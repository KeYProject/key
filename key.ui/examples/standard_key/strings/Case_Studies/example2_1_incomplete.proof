\settings {
"#Proof-Settings-Config-File
#Tue Aug 25 14:35:59 CEST 2009
[General]SoundNotification=false
[View]FontIndex=2
[StrategyProperty]GOALCHOOSER_OPTIONS_KEY=GOALCHOOSER_DEFAULT
[General]UseOCL=false
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_HIGH
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_NONE
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_LOW
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_LOW
[SimultaneousUpdateSimplifier]DeleteEffectLessLocations=true
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_NONE
[DecisionProcedure]Timeout=60
[View]ShowWholeTaclet=false
[General]ProofAssistant=false
[View]MaxTooltipLines=40
[General]DnDDirectionSensitive=true
[SimultaneousUpdateSimplifier]EagerSimplification=true
[General]StupidMode=true
[Strategy]Timeout=-1
[Strategy]MaximumNumberOfAutomaticApplications=500
[Libraries]Default=acc.key-false, stringRules.key-false, /Users/geilmann/.key/libraries/deprecatedRules.key-false, /Users/geilmann/.key/libraries/acc.key-false, /Users/geilmann/.key/libraries/stringRules.key-false, deprecatedRules.key-false
[StrategyProperty]QUERY_OPTIONS_KEY=QUERY_NONE
[Choice]DefaultChoices=transactions-transactions\:transactionsOn , throughout-throughout\:toutOn , assertions-assertions\:on , programRules-programRules\:Java , intRules-intRules\:arithmeticSemanticsIgnoringOF , initialisation-initialisation\:disableStaticInitialisation , transactionAbort-transactionAbort\:abortOn , nullPointerPolicy-nullPointerPolicy\:nullCheck , stringRules-stringRules\:withoutStringPool , javacard-javacard\:jcOff
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[DecisionProcedure]ActiveRule=_noname_
[General]UseJML=false
[View]HideClosedSubtrees=false
[Choice]Choices=transactions-transactions\:transactionsOn-transactions\:transactionsOff , throughout-throughout\:toutOn-throughout\:toutOff , assertions-assertions\:on-assertions\:off-assertions\:safe , programRules-programRules\:Java-programRules\:ODL , intRules-intRules\:javaSemantics-intRules\:arithmeticSemanticsIgnoringOF-intRules\:arithmeticSemanticsCheckingOF , initialisation-initialisation\:enableStaticInitialisation-initialisation\:disableStaticInitialisation , transactionAbort-transactionAbort\:abortOn-transactionAbort\:abortOff , nullPointerPolicy-nullPointerPolicy\:noNullCheck-nullPointerPolicy\:nullCheck , stringRules-stringRules\:withStringPool-stringRules\:withoutStringPool-stringRules\:platformIndependent , javacard-javacard\:jcOff-javacard\:jcOn
[View]HideIntermediateProofsteps=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
"
}

\javaSource "./src";

\include "stringRules.key";

\include "contracts.key";

\problem {
   inReachableState
-> \forall java.lang.String s; 
     \forall java.lang.String t; 
       (     s.<created>@(java.lang.Object) = TRUE
           & t.<created>@(java.lang.Object) = TRUE
           & !s = null
           & !t = null
        -> (    StringDistance.distance(s, t) = 0
            <-> s.equals@(java.lang.String)(t) = TRUE))

}

\proof {
(keyLog "0" (keyUser "geilmann" ) (keyVersion "90bb886cd7b78027c8f6703803461f09e5699bb9"))

(autoModeTime "14034")

(branch "dummy ID"
(rule "impRight" (formula "1") (userinteraction))
(rule "allRight" (formula "2") (inst "sk=s_0") (userinteraction))
(rule "allRight" (formula "2") (inst "sk=t_0") (userinteraction))
(rule "impRight" (formula "2") (userinteraction))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "3"))
(rule "resolvequery" (formula "6") (term "0,0") (inst "queryValue=StringDistancedistance_0") (userinteraction))
(rule "resolvequery" (formula "8") (term "0,1") (inst "queryValue=java_lang_Stringequals_0") (userinteraction))
(rule "equiv_right" (formula "10") (userinteraction))
(branch " Case 1"
   (rule "variableDeclaration" (formula "3") (newnames "equals") (userinteraction))
   (rule "variableDeclaration" (formula "3") (newnames "arg0") (userinteraction))
   (rule "variableDeclaration" (formula "3") (newnames "queryReceiver") (userinteraction))
   (rule "emptyModality" (formula "3") (userinteraction))
   (rule "methodCallWithAssignment" (formula "3") (term "2") (inst "#v0=b") (userinteraction))
   (branch " Normal Execution (queryReceiver != null)"
      (builtin "Update Simplification" (formula "9"))
      (rule "variableDeclaration" (formula "3") (term "2") (newnames "b") (userinteraction))
      (rule "variableDeclarationAssign" (formula "3") (term "2") (userinteraction))
      (rule "variableDeclaration" (formula "3") (term "2") (newnames "arg0_1") (userinteraction))
      (rule "assignment" (formula "3") (term "2") (userinteraction))
      (builtin "Update Simplification" (formula "3"))
      (rule "boxToDiamond" (formula "3") (term "2") (userinteraction))
      (builtin "Update Simplification" (formula "3"))
      (rule "notLeft" (formula "3") (userinteraction))
      (builtin "Use Operation Contract" (formula "8") (term "2") (newnames "arg0_1_0,result_1") (contract "equalsNormal;;"))
      (branch " Pre"
         (builtin "Update Simplification" (formula "8"))
         (rule "replace_known_right" (formula "8") (term "0,1,1,0") (ifseqformula "9"))
         (rule "concrete_not_2" (formula "8") (term "1,1,0"))
         (rule "concrete_and_3" (formula "8") (term "1,0"))
         (rule "replace_known_left" (formula "8") (term "1,0") (ifseqformula "5"))
         (rule "concrete_and_3" (formula "8") (term "0"))
         (rule "replace_known_left" (formula "8") (term "0") (ifseqformula "7"))
         (rule "concrete_and_1" (formula "8"))
         (rule "orRight" (formula "8"))
         (rule "close" (formula "8") (ifseqformula "6"))
      )
      (branch " Post"
         (rule "impRight" (formula "8") (userinteraction))
         (builtin "Update Simplification" (formula "1"))
         (builtin "Update Simplification" (formula "9"))
         (rule "andLeft" (formula "1"))
         (rule "andLeft" (formula "1"))
         (rule "andLeft" (formula "2"))
         (rule "eqSymm" (formula "2") (term "1,1"))
         (rule "replace_known_right" (formula "2") (term "0,0,0,1") (ifseqformula "12"))
         (rule "concrete_not_2" (formula "2") (term "0,0,1"))
         (rule "concrete_and_1" (formula "2") (term "0,1"))
         (rule "instanceof_static_type" (formula "2") (term "0,0,1"))
         (rule "boolean_equal" (formula "2") (term "0,1"))
         (rule "concrete_and_1" (formula "2") (term "1"))
         (rule "castDel" (formula "2") (term "0,0,1"))
         (rule "blockEmpty" (formula "10") (term "1") (userinteraction))
         (rule "assignment" (formula "10") (term "1") (userinteraction))
         (builtin "Update Simplification" (formula "10"))
         (rule "methodCallEmpty" (formula "10") (term "1") (userinteraction))
         (rule "emptyModality" (formula "10") (term "1") (userinteraction))
         (builtin "Update Simplification" (formula "10"))
         (rule "notRight" (formula "10") (userinteraction))
         (rule "equiv_left" (formula "3") (userinteraction))
         (branch " Case 1"
            (rule "applyEq" (formula "3") (term "0") (ifseqformula "1") (userinteraction))
            (rule "closeAntec" (formula "3") (ifseqformula "14") (userinteraction))
         )
         (branch " Case 2"
            (rule "variableDeclaration" (formula "6") (newnames "distance") (userinteraction))
            (rule "variableDeclaration" (formula "6") (newnames "s1") (userinteraction))
            (rule "variableDeclaration" (formula "6") (newnames "s2") (userinteraction))
            (rule "emptyModality" (formula "6") (userinteraction))
            (rule "methodBodyExpand" (formula "6") (term "2") (userinteraction))
            (rule "ifUnfold" (formula "6") (term "2") (inst "#boolv=b") (userinteraction))
            (rule "variableDeclaration" (formula "6") (term "2") (newnames "b_1") (userinteraction))
            (rule "compound_assignment_5" (formula "6") (term "2") (userinteraction))
            (rule "ifElseUnfold" (formula "6") (term "2") (inst "#boolv=b_2") (userinteraction))
            (rule "variableDeclaration" (formula "6") (term "2") (newnames "b_2") (userinteraction))
            (rule "equality_comparison_new" (formula "6") (term "2") (userinteraction))
            (builtin "Update Simplification" (formula "6"))
            (rule "replace_known_right" (formula "6") (term "0,0") (ifseqformula "12") (userinteraction))
            (rule "concrete_not_2" (formula "6") (term "0") (userinteraction))
            (rule "ifthenelse_true_for" (formula "6") (userinteraction))
            (rule "ifElseSkipThen" (formula "6") (term "2") (userinteraction))
            (rule "assignment" (formula "6") (term "2") (userinteraction))
            (builtin "Update Simplification" (formula "6"))
            (rule "equality_comparison_new" (formula "6") (term "2") (userinteraction))
            (builtin "Update Simplification" (formula "6"))
            (rule "replace_known_right" (formula "6") (term "0,0") (ifseqformula "13") (userinteraction))
            (rule "concrete_not_2" (formula "6") (term "0") (userinteraction))
            (rule "ifthenelse_true_for" (formula "6") (userinteraction))
            (rule "ifSkipThenConditionInBlock" (formula "6") (term "2") (userinteraction))
            (rule "assignment" (formula "6") (term "2") (userinteraction))
            (builtin "Update Simplification" (formula "6"))
            (rule "blockEmpty" (formula "6") (term "2") (userinteraction))
            (rule "variableDeclarationAssign" (formula "6") (term "2") (userinteraction))
            (rule "variableDeclaration" (formula "6") (term "2") (newnames "d") (userinteraction))
            (rule "assignment" (formula "6") (term "2") (userinteraction))
            (builtin "Update Simplification" (formula "6"))
            (rule "variableDeclarationAssign" (formula "6") (term "3") (userinteraction))
            (rule "variableDeclaration" (formula "6") (term "3") (newnames "m") (userinteraction))
            (rule "methodCallWithAssignment" (formula "6") (term "3") (inst "#v0=j") (userinteraction))
            (branch " Normal Execution (s1 != null)"
               (builtin "Update Simplification" (formula "10"))
               (rule "variableDeclaration" (formula "6") (term "3") (newnames "j") (userinteraction))
               (rule "boxToDiamond" (formula "6") (term "3") (userinteraction))
               (builtin "Update Simplification" (formula "6"))
               (rule "notLeft" (formula "6") (userinteraction))
               (builtin "Use Operation Contract" (formula "9") (term "3") (newnames "result_3") (contract "length;;"))
               (branch " Pre"
                  (builtin "Update Simplification" (formula "9"))
                  (rule "replace_known_left" (formula "9") (term "0") (ifseqformula "8"))
                  (rule "concrete_and_1" (formula "9"))
                  (rule "replace_known_right" (formula "9") (term "0,1") (ifseqformula "12"))
                  (rule "concrete_not_2" (formula "9") (term "1"))
                  (rule "concrete_and_3" (formula "9"))
                  (rule "close" (formula "9") (ifseqformula "6"))
               )
               (branch " Post"
                  (rule "blockEmpty" (formula "9") (term "1,3,3") (userinteraction))
                  (builtin "Update Simplification" (formula "9"))
                  (rule "impRight" (formula "9") (userinteraction))
                  (rule "inInt" (formula "1") (term "1,1,0"))
                  (rule "concrete_and_3" (formula "1") (term "1,0"))
                  (rule "andLeft" (formula "1"))
                  (rule "andLeft" (formula "1"))
                  (rule "andLeft" (formula "2"))
                  (rule "eqSymm" (formula "2"))
                  (rule "assignment" (formula "11") (term "4") (userinteraction))
                  (builtin "Update Simplification" (formula "11"))
                  (rule "ifUnfold" (formula "11") (term "4") (inst "#boolv=b") (userinteraction))
                  (rule "variableDeclaration" (formula "11") (term "4") (newnames "b_3") (userinteraction))
                  (rule "compound_greater_than_comparison_2" (formula "11") (term "4") (inst "#v1=j_1") (inst "#v0=j") (userinteraction))
                  (rule "variableDeclarationAssign" (formula "11") (term "4") (userinteraction))
                  (rule "variableDeclaration" (formula "11") (term "4") (newnames "j_2") (userinteraction))
                  (rule "methodCallWithAssignment" (formula "11") (term "4") (inst "#v0=j_3") (userinteraction))
                  (branch " Normal Execution (s1 != null)"
                     (builtin "Update Simplification" (formula "11"))
                     (rule "variableDeclaration" (formula "11") (term "4") (newnames "j_3") (userinteraction))
                     (builtin "Use Operation Contract" (formula "11") (term "4") (newnames "result_5") (contract "length;;"))
                     (branch " Pre"
                        (builtin "Update Simplification" (formula "11"))
                        (rule "replace_known_left" (formula "11") (term "0") (ifseqformula "10"))
                        (rule "concrete_and_1" (formula "11"))
                        (rule "replace_known_left" (formula "11") (term "0") (ifseqformula "8"))
                        (rule "concrete_and_1" (formula "11"))
                        (rule "notRight" (formula "11"))
                        (rule "close" (formula "14") (ifseqformula "1"))
                     )
                     (branch " Post"
                        (rule "blockEmpty" (formula "11") (term "1,3,4") (userinteraction))
                        (builtin "Update Simplification" (formula "11"))
                        (rule "impRight" (formula "11") (userinteraction))
                        (rule "inInt" (formula "1") (term "1,1,0"))
                        (rule "concrete_and_3" (formula "1") (term "1,0"))
                        (rule "andLeft" (formula "1"))
                        (rule "andLeft" (formula "1"))
                        (rule "andLeft" (formula "2"))
                        (rule "eqSymm" (formula "2"))
                        (rule "applyEq" (formula "2") (term "0") (ifseqformula "4"))
                        (rule "eqSymm" (formula "2"))
                        (rule "assignment" (formula "13") (term "5") (userinteraction))
                        (builtin "Update Simplification" (formula "13"))
                        (rule "variableDeclarationAssign" (formula "13") (term "5") (userinteraction))
                        (rule "variableDeclaration" (formula "13") (term "5") (newnames "j_1") (userinteraction))
                        (rule "methodCallWithAssignment" (formula "13") (term "5") (inst "#v0=j_3") (userinteraction))
                        (branch " Normal Execution (s2 != null)"
                           (builtin "Update Simplification" (formula "13"))
                           (rule "variableDeclaration" (formula "13") (term "5") (newnames "j_4") (userinteraction))
                           (builtin "Use Operation Contract" (formula "13") (term "5") (newnames "result_7") (contract "length;;"))
                           (branch " Pre"
                              (builtin "Update Simplification" (formula "13"))
                              (rule "replace_known_left" (formula "13") (term "0") (ifseqformula "12"))
                              (rule "concrete_and_1" (formula "13"))
                              (rule "replace_known_left" (formula "13") (term "0") (ifseqformula "11"))
                              (rule "concrete_and_1" (formula "13"))
                              (rule "notRight" (formula "13"))
                              (rule "close" (formula "17") (ifseqformula "1"))
                           )
                           (branch " Post"
                              (rule "blockEmpty" (formula "13") (term "1,3,5") (userinteraction))
                              (builtin "Update Simplification" (formula "13"))
                              (rule "impRight" (formula "13") (userinteraction))
                              (rule "inInt" (formula "1") (term "1,1,0"))
                              (rule "concrete_and_3" (formula "1") (term "1,0"))
                              (rule "andLeft" (formula "1"))
                              (rule "andLeft" (formula "1"))
                              (rule "andLeft" (formula "2"))
                              (rule "eqSymm" (formula "2"))
                              (rule "assignment" (formula "15") (term "6") (userinteraction))
                              (builtin "Update Simplification" (formula "15"))
                              (rule "greater_than_comparison_new" (formula "15") (term "6") (userinteraction))
                              (builtin "Update Simplification" (formula "15"))
                              (rule "applyEq" (formula "15") (term "0,0") (ifseqformula "4") (userinteraction))
                              (rule "ifEnterThen" (formula "15") (term "4,1") (userinteraction))
                              (rule "assignment" (formula "15") (term "4,1") (userinteraction))
                              (builtin "Update Simplification" (formula "15"))
                              (rule "methodCallWithAssignment" (formula "15") (term "4,1") (inst "#v0=j") (userinteraction))
                              (branch " Normal Execution (s2 != null)"
                                 (builtin "Update Simplification" (formula "15"))
                                 (rule "ifthenelse_split_for" (formula "15") (userinteraction))
                                 (branch " result_2 >  result_6 TRUE"
                                    (rule "variableDeclaration" (formula "16") (term "4") (newnames "j_5") (userinteraction))
                                    (builtin "Use Operation Contract" (formula "16") (term "4") (newnames "result_9") (contract "length;;"))
                                    (branch " Pre"
                                       (builtin "Update Simplification" (formula "16"))
                                       (rule "replace_known_left" (formula "16") (term "0") (ifseqformula "15"))
                                       (rule "concrete_and_1" (formula "16"))
                                       (rule "replace_known_left" (formula "16") (term "0") (ifseqformula "14"))
                                       (rule "concrete_and_1" (formula "16"))
                                       (rule "notRight" (formula "16"))
                                       (rule "close" (formula "20") (ifseqformula "1"))
                                    )
                                    (branch " Post"
                                       (rule "blockEmpty" (formula "16") (term "1,3,4") (userinteraction))
                                       (builtin "Update Simplification" (formula "16"))
                                       (rule "impRight" (formula "16") (userinteraction))
                                       (rule "inInt" (formula "1") (term "1,1,0"))
                                       (rule "concrete_and_3" (formula "1") (term "1,0"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "andLeft" (formula "2"))
                                       (rule "eqSymm" (formula "2"))
                                       (rule "applyEq" (formula "2") (term "0") (ifseqformula "5"))
                                       (rule "eqSymm" (formula "2"))
                                       (rule "assignment" (formula "18") (term "5") (userinteraction))
                                       (builtin "Update Simplification" (formula "18"))
                                       (rule "blockEmpty" (formula "18") (term "4") (userinteraction))
                                       (rule "for_to_while" (formula "18") (term "4") (inst "#outerLabel=_label1") (inst "#innerLabel=_label0") (userinteraction))
                                       (rule "variableDeclarationAssign" (formula "18") (term "4") (userinteraction))
                                       (rule "variableDeclaration" (formula "18") (term "4") (newnames "i") (userinteraction))
                                       (rule "assignment" (formula "18") (term "4") (userinteraction))
                                       (builtin "Update Simplification" (formula "18"))
                                       (rule "whileInvDiamondDec2" (formula "18") (newnames "i_0,d_0,i_1,d_1,anon_0,j_6") (inst "variant=m - i") (inst "inv=d >= 0") (inst "#modifies={i,d}") (inst "#v2=j") (inst "#v1=b") (userinteraction))
                                       (branch " Invariant Initially Valid"
                                          (builtin "Update Simplification" (formula "18"))
                                          (rule "castDelInt" (formula "18") (term "0,0"))
                                          (rule "qeq_literals" (formula "18") (term "0"))
                                          (rule "concrete_and_1" (formula "18"))
                                          (rule "castDelInt" (formula "18") (term "1,0"))
                                          (rule "polySimp_elimSub" (formula "18") (term "0"))
                                          (rule "times_zero_2" (formula "18") (term "1,0"))
                                          (rule "add_zero_right" (formula "18") (term "0"))
                                          (rule "inEqSimp_geqRight" (formula "18"))
                                          (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "1") (term "0,0"))
                                          (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                          (rule "mul_literals" (formula "1") (term "1"))
                                          (rule "lengthGEq0" (inst "l=content(t_0)") (userinteraction))
                                          (rule "applyEq" (formula "1") (term "0") (ifseqformula "7") (userinteraction))
                                          (rule "inEqSimp_gtToGeq" (formula "5"))
                                          (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "5") (term "0"))
                                          (rule "apply_eq_boolean" (formula "12") (term "1") (ifseqformula "24"))
                                          (rule "false_to_not_true" (formula "12"))
                                          (rule "notLeft" (formula "12"))
                                          (rule "apply_eq_boolean_rigid" (formula "14") (term "1") (ifseqformula "23"))
                                          (rule "false_to_not_true" (formula "14"))
                                          (rule "notLeft" (formula "14"))
                                          (rule "applyEqRigid" (formula "14") (term "1") (ifseqformula "13"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                                          (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                          (rule "polySimp_elimOne" (formula "5") (term "0"))
                                          (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "2"))
                                          (rule "qeq_literals" (formula "1") (term "0"))
                                          (rule "concrete_and_2" (formula "1"))
                                          (rule "closeFalse" (formula "1"))
                                       )
                                       (branch " Body Preserves Invariant and Decreases Variant"
                                          (builtin "Update Simplification" (formula "18"))
                                          (rule "concrete_impl_1" (formula "18") (userinteraction))
                                          (rule "castDelInt" (formula "18") (term "1,0,1,1,0"))
                                          (rule "castDelInt" (formula "18") (term "1,1,0"))
                                          (rule "polySimp_elimSub" (formula "18") (term "0,1,0"))
                                          (rule "polySimp_elimSub" (formula "18") (term "1,1,0"))
                                          (rule "times_zero_2" (formula "18") (term "1,1,1,0"))
                                          (rule "add_zero_right" (formula "18") (term "1,1,0"))
                                          (rule "polySimp_addComm0" (formula "18") (term "0,1,0"))
                                          (rule "inEqSimp_homoInEq0" (formula "18") (term "1,0"))
                                          (rule "polySimp_mulComm0" (formula "18") (term "1,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "18") (term "1,0,1,0"))
                                          (rule "polySimp_mulAssoc" (formula "18") (term "0,1,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "18") (term "0,0,1,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "18") (term "0,1,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "18") (term "0,1,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "18") (term "0,1,0"))
                                          (rule "polySimp_addComm0" (formula "18") (term "0,0,1,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,1,0"))
                                          (rule "add_literals" (formula "18") (term "1,1,0,1,0"))
                                          (rule "times_zero_1" (formula "18") (term "1,0,1,0"))
                                          (rule "add_zero_right" (formula "18") (term "0,1,0"))
                                          (rule "polySimp_elimSub" (formula "18") (term "0,1,0,0"))
                                          (rule "polySimp_addComm0" (formula "18") (term "0,1,0,0"))
                                          (rule "applyEq" (formula "18") (term "1,0,1,0,0") (ifseqformula "2"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0"))
                                          (rule "impRight" (formula "18") (userinteraction))
                                          (rule "andLeft" (formula "1"))
                                          (rule "andLeft" (formula "1"))
                                          (rule "andLeft" (formula "1"))
                                          (rule "applyEq" (formula "1") (term "2") (ifseqformula "6"))
                                          (rule "variableDeclarationAssign" (formula "22") (term "2,0") (userinteraction))
                                          (rule "variableDeclaration" (formula "22") (term "2,0") (newnames "b_4") (userinteraction))
                                          (rule "less_than_comparison_new" (formula "22") (term "2,0") (userinteraction))
                                          (builtin "Update Simplification" (formula "22"))
                                          (rule "assignment" (formula "22") (term "1,0") (userinteraction))
                                          (rule "assignment" (formula "22") (term "2,0") (userinteraction))
                                          (rule "methodCallEmpty" (formula "22") (term "1,2,0") (userinteraction))
                                          (rule "emptyModality" (formula "22") (term "1,2,0") (userinteraction))
                                          (builtin "Update Simplification" (formula "22"))
                                          (rule "boolean_not_equal_2" (formula "22") (term "2,0") (userinteraction))
                                          (rule "methodCallEmpty" (formula "22") (term "1,1,0") (userinteraction))
                                          (rule "emptyModality" (formula "22") (term "1,1,0") (userinteraction))
                                          (builtin "Update Simplification" (formula "22"))
                                          (rule "boolean_equal" (formula "22") (term "1,0") (userinteraction))
                                          (rule "impRight" (formula "22") (userinteraction))
                                          (rule "ifthenelse_split_for" (formula "1") (userinteraction))
                                          (branch " i_0 <  result_8 TRUE"
                                             (rule "true_left" (formula "2") (userinteraction))
                                             (rule "variableDeclarationAssign" (formula "23") (term "6") (userinteraction))
                                             (rule "variableDeclaration" (formula "23") (term "6") (newnames "exc") (userinteraction))
                                             (rule "assignment" (formula "23") (term "6") (userinteraction))
                                             (builtin "Update Simplification" (formula "23"))
                                             (rule "variableDeclaration" (formula "23") (term "7") (newnames "thrownExc") (userinteraction))
                                             (rule "ifUnfold" (formula "23") (term "7") (inst "#boolv=b") (userinteraction))
                                             (rule "variableDeclaration" (formula "23") (term "7") (newnames "b_5") (userinteraction))
                                             (rule "less_than_comparison_new" (formula "23") (term "7") (userinteraction))
                                             (builtin "Update Simplification" (formula "23"))
                                             (rule "replace_known_left" (formula "23") (term "0") (ifseqformula "1"))
                                             (rule "ifthenelse_true_for" (formula "23") (userinteraction))
                                             (rule "ifEnterThen" (formula "23") (term "7") (userinteraction))
                                             (rule "assignment" (formula "23") (term "7") (userinteraction))
                                             (builtin "Update Simplification" (formula "23"))
                                             (rule "variableDeclarationAssign" (formula "23") (term "7") (userinteraction))
                                             (rule "variableDeclaration" (formula "23") (term "7") (newnames "f") (userinteraction))
                                             (rule "compound_subtraction_2" (formula "23") (term "7") (inst "#v1=j_1") (inst "#v0=j") (userinteraction))
                                             (rule "variableDeclarationAssign" (formula "23") (term "7") (userinteraction))
                                             (rule "variableDeclaration" (formula "23") (term "7") (newnames "j_7") (userinteraction))
                                             (rule "methodCallWithAssignment" (formula "23") (term "7") (inst "#v0=j_8") (userinteraction))
                                             (branch " Normal Execution (s1 != null)"
                                                (builtin "Update Simplification" (formula "23"))
                                                (rule "variableDeclaration" (formula "23") (term "7") (newnames "j_8") (userinteraction))
                                                (rule "variableDeclarationAssign" (formula "23") (term "7") (userinteraction))
                                                (rule "variableDeclaration" (formula "23") (term "7") (newnames "arg0_2") (userinteraction))
                                                (rule "assignment" (formula "23") (term "7") (userinteraction))
                                                (builtin "Update Simplification" (formula "23"))
                                                (builtin "Use Operation Contract" (formula "23") (term "8") (newnames "arg0_2_0,result_11") (contract "charAtExc#charAtNormal;;"))
                                                (branch " Pre"
                                                   (builtin "Update Simplification" (formula "23"))
                                                   (rule "inInt" (formula "23") (term "1,0"))
                                                   (rule "concrete_and_3" (formula "23") (term "0"))
                                                   (rule "replace_known_right" (formula "23") (term "0,1,1,0") (ifseqformula "26"))
                                                   (rule "concrete_not_2" (formula "23") (term "1,1,0"))
                                                   (rule "concrete_and_3" (formula "23") (term "1,0"))
                                                   (rule "replace_known_left" (formula "23") (term "1,0") (ifseqformula "20"))
                                                   (rule "concrete_and_3" (formula "23") (term "0"))
                                                   (rule "replace_known_left" (formula "23") (term "0") (ifseqformula "22"))
                                                   (rule "concrete_and_1" (formula "23"))
                                                   (rule "orRight" (formula "23"))
                                                   (rule "orRight" (formula "23"))
                                                   (rule "replace_known_left" (formula "25") (term "0") (ifseqformula "5"))
                                                   (rule "concrete_and_1" (formula "25"))
                                                   (rule "inEqSimp_ltToLeq" (formula "1"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                   (rule "inEqSimp_gtToGeq" (formula "8"))
                                                   (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
                                                   (rule "inEqSimp_geqRight" (formula "24"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                   (rule "inEqSimp_ltRight" (formula "24"))
                                                   (rule "times_zero_1" (formula "1") (term "0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0"))
                                                   (rule "inEqSimp_ltRight" (formula "24"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                   (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "10") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                   (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                   (rule "apply_eq_boolean" (formula "17") (term "1") (ifseqformula "29"))
                                                   (rule "false_to_not_true" (formula "17"))
                                                   (rule "notLeft" (formula "17"))
                                                   (rule "apply_eq_boolean" (formula "19") (term "1") (ifseqformula "28"))
                                                   (rule "false_to_not_true" (formula "19"))
                                                   (rule "notLeft" (formula "19"))
                                                   (rule "applyEq" (formula "3") (term "0,1,0") (ifseqformula "9"))
                                                   (rule "applyEq" (formula "2") (term "0,1,0") (ifseqformula "16"))
                                                   (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "16"))
                                                   (rule "applyEqRigid" (formula "19") (term "1") (ifseqformula "18"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "10"))
                                                   (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "10") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                                   (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                   (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                   (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "1"))
                                                   (rule "andLeft" (formula "2"))
                                                   (rule "inEqSimp_homoInEq1" (formula "2"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                                   (rule "add_literals" (formula "2") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "2") (term "1,0"))
                                                   (rule "add_zero_right" (formula "2") (term "0"))
                                                   (rule "leq_literals" (formula "2"))
                                                   (rule "closeFalse" (formula "2"))
                                                )
                                                (branch " Post"
                                                   (rule "blockEmpty" (formula "23") (term "1,8,8") (userinteraction))
                                                   (builtin "Update Simplification" (formula "23"))
                                                   (rule "impRight" (formula "23") (userinteraction))
                                                   (rule "inChar" (formula "1") (term "1,1,0"))
                                                   (rule "concrete_and_3" (formula "1") (term "1,0"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "typeEqDerived" (formula "2") (term "0,1,1,0") (ifseqformula "1"))
                                                   (rule "boolean_equal" (formula "2") (term "1,1,0"))
                                                   (rule "concrete_and_3" (formula "2") (term "1,0"))
                                                   (rule "andLeft" (formula "2"))
                                                   (rule "eqSymm" (formula "3") (term "1,1"))
                                                   (rule "replace_known_left" (formula "2") (term "0,1") (ifseqformula "1"))
                                                   (rule "concrete_not_1" (formula "2") (term "1"))
                                                   (rule "concrete_impl_3" (formula "2"))
                                                   (rule "notLeft" (formula "2"))
                                                   (rule "orRight" (formula "25"))
                                                   (rule "replace_known_left" (formula "2") (term "0,1") (ifseqformula "1"))
                                                   (rule "concrete_and_1" (formula "2") (term "1"))
                                                   (rule "replace_known_left" (formula "2") (term "0,0") (ifseqformula "7"))
                                                   (rule "concrete_and_1" (formula "2") (term "0"))
                                                   (rule "inEqSimp_ltRight" (formula "25"))
                                                   (rule "times_zero_1" (formula "1") (term "0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0"))
                                                   (rule "inEqSimp_geqRight" (formula "25"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "3") (term "0"))
                                                   (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0"))
                                                   (rule "replace_known_left" (formula "3") (term "0") (ifseqformula "1"))
                                                   (rule "concrete_impl_1" (formula "3"))
                                                   (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                   (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "17"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                   (rule "assignment" (formula "26") (term "8") (userinteraction))
                                                   (builtin "Update Simplification" (formula "26"))
                                                   (rule "variableDeclarationAssign" (formula "26") (term "8") (userinteraction))
                                                   (rule "variableDeclaration" (formula "26") (term "8") (newnames "j_9") (userinteraction))
                                                   (rule "methodCallWithAssignment" (formula "26") (term "8") (inst "#v0=j_10") (userinteraction))
                                                   (branch " Normal Execution (s2 != null)"
                                                      (builtin "Update Simplification" (formula "26"))
                                                      (rule "variableDeclaration" (formula "26") (term "8") (newnames "j_10") (userinteraction))
                                                      (rule "variableDeclarationAssign" (formula "26") (term "8") (userinteraction))
                                                      (rule "variableDeclaration" (formula "26") (term "8") (newnames "arg0_4") (userinteraction))
                                                      (rule "assignment" (formula "26") (term "8") (userinteraction))
                                                      (builtin "Update Simplification" (formula "26"))
                                                      (builtin "Use Operation Contract" (formula "26") (term "9") (newnames "arg0_4_0,result_13") (contract "charAtExc#charAtNormal;;"))
                                                      (branch " Pre"
                                                         (builtin "Update Simplification" (formula "26"))
                                                         (rule "inInt" (formula "26") (term "1,0"))
                                                         (rule "concrete_and_3" (formula "26") (term "0"))
                                                         (rule "replace_known_right" (formula "26") (term "0,1,1,0") (ifseqformula "30"))
                                                         (rule "concrete_not_2" (formula "26") (term "1,1,0"))
                                                         (rule "concrete_and_3" (formula "26") (term "1,0"))
                                                         (rule "replace_known_left" (formula "26") (term "1,0") (ifseqformula "24"))
                                                         (rule "concrete_and_3" (formula "26") (term "0"))
                                                         (rule "replace_known_left" (formula "26") (term "0") (ifseqformula "25"))
                                                         (rule "concrete_and_1" (formula "26"))
                                                         (rule "orRight" (formula "26"))
                                                         (rule "orRight" (formula "26"))
                                                         (rule "replace_known_left" (formula "28") (term "0") (ifseqformula "8"))
                                                         (rule "concrete_and_1" (formula "28"))
                                                         (rule "inEqSimp_gtToGeq" (formula "11"))
                                                         (rule "polySimp_mulComm0" (formula "11") (term "1,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "4"))
                                                         (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                                         (rule "inEqSimp_geqRight" (formula "27"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                         (rule "inEqSimp_ltRight" (formula "27"))
                                                         (rule "mul_literals" (formula "1") (term "0,0"))
                                                         (rule "add_zero_left" (formula "1") (term "0"))
                                                         (rule "inEqSimp_ltRight" (formula "27"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                         (rule "polySimp_addComm1" (formula "13") (term "0"))
                                                         (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                         (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                         (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                         (rule "applyEq" (formula "2") (term "0,1,0") (ifseqformula "15"))
                                                         (rule "applyEq" (formula "6") (term "0,1,0") (ifseqformula "12"))
                                                         (rule "applyEq" (formula "27") (term "0") (ifseqformula "19"))
                                                         (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "14"))
                                                         (rule "apply_eq_boolean" (formula "22") (term "1") (ifseqformula "30"))
                                                         (rule "false_to_not_true" (formula "22"))
                                                         (rule "notLeft" (formula "22"))
                                                         (rule "apply_eq_boolean" (formula "19") (term "1") (ifseqformula "30"))
                                                         (rule "false_to_not_true" (formula "19"))
                                                         (rule "notLeft" (formula "19"))
                                                         (rule "applyEq" (formula "21") (term "1") (ifseqformula "20"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "12"))
                                                         (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "12") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "2"))
                                                         (rule "andLeft" (formula "1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                                         (rule "add_literals" (formula "1") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "1") (term "1,0"))
                                                         (rule "add_literals" (formula "1") (term "0"))
                                                         (rule "leq_literals" (formula "1"))
                                                         (rule "closeFalse" (formula "1"))
                                                      )
                                                      (branch " Post"
                                                         (rule "blockEmpty" (formula "26") (term "1,8,9") (userinteraction))
                                                         (builtin "Update Simplification" (formula "26"))
                                                         (rule "impRight" (formula "26") (userinteraction))
                                                         (rule "inChar" (formula "1") (term "1,1,0"))
                                                         (rule "concrete_and_3" (formula "1") (term "1,0"))
                                                         (rule "andLeft" (formula "1"))
                                                         (rule "andLeft" (formula "1"))
                                                         (rule "typeEqDerived" (formula "2") (term "0,1,1,0") (ifseqformula "1"))
                                                         (rule "boolean_equal" (formula "2") (term "1,1,0"))
                                                         (rule "concrete_and_3" (formula "2") (term "1,0"))
                                                         (rule "andLeft" (formula "2"))
                                                         (rule "eqSymm" (formula "3") (term "1,1"))
                                                         (rule "replace_known_left" (formula "2") (term "0,1") (ifseqformula "1"))
                                                         (rule "concrete_not_1" (formula "2") (term "1"))
                                                         (rule "concrete_impl_3" (formula "2"))
                                                         (rule "notLeft" (formula "2"))
                                                         (rule "orRight" (formula "28"))
                                                         (rule "replace_known_left" (formula "2") (term "0,1") (ifseqformula "1"))
                                                         (rule "concrete_and_1" (formula "2") (term "1"))
                                                         (rule "replace_known_left" (formula "2") (term "0,0") (ifseqformula "10"))
                                                         (rule "concrete_and_1" (formula "2") (term "0"))
                                                         (rule "inEqSimp_geqRight" (formula "29"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                         (rule "inEqSimp_ltRight" (formula "29"))
                                                         (rule "times_zero_1" (formula "1") (term "0,0"))
                                                         (rule "add_zero_left" (formula "1") (term "0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "3") (term "0"))
                                                         (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0"))
                                                         (rule "replace_known_left" (formula "3") (term "0") (ifseqformula "1"))
                                                         (rule "concrete_impl_1" (formula "3"))
                                                         (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                         (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "16"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                         (rule "assignment" (formula "29") (term "9") (userinteraction))
                                                         (builtin "Update Simplification" (formula "29"))
                                                         (rule "assignmentSubtractionInt" (formula "29") (term "9") (userinteraction))
                                                         (builtin "Update Simplification" (formula "29"))
                                                         (rule "ifElseUnfold" (formula "29") (term "8") (inst "#boolv=b") (userinteraction))
                                                         (rule "variableDeclaration" (formula "29") (term "8") (newnames "b_6") (userinteraction))
                                                         (rule "greater_equal_than_comparison_new" (formula "29") (term "8") (userinteraction))
                                                         (builtin "Update Simplification" (formula "29"))
                                                         (rule "castDelInt" (formula "29") (term "0,0"))
                                                         (rule "translateJavaSubInt" (formula "29") (term "0,0"))
                                                         (rule "polySimp_elimSub" (formula "29") (term "0,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "29") (term "0"))
                                                         (rule "polySimp_mulLiterals" (formula "29") (term "0,0"))
                                                         (rule "polySimp_elimOne" (formula "29") (term "0,0"))
                                                         (rule "ifthenelse_split_for" (formula "29") (userinteraction))
                                                         (branch " result_12 <= result_10 TRUE"
                                                            (rule "ifElseSkipElse" (formula "30") (term "8") (userinteraction))
                                                            (rule "assignment" (formula "30") (term "8") (userinteraction))
                                                            (builtin "Update Simplification" (formula "30"))
                                                            (rule "compound_assignment_op_plus" (formula "30") (term "8") (userinteraction))
                                                            (rule "compound_int_cast_expression" (formula "30") (term "8") (inst "#v=j") (userinteraction))
                                                            (rule "variableDeclarationAssign" (formula "30") (term "8") (userinteraction))
                                                            (rule "variableDeclaration" (formula "30") (term "8") (newnames "j_11") (userinteraction))
                                                            (rule "remove_parentheses_right" (formula "30") (term "8") (userinteraction))
                                                            (rule "compound_addition_2" (formula "30") (term "8") (inst "#v1=j_13") (inst "#v0=j_12") (userinteraction))
                                                            (rule "variableDeclarationAssign" (formula "30") (term "8") (userinteraction))
                                                            (rule "variableDeclaration" (formula "30") (term "8") (newnames "j_12") (userinteraction))
                                                            (rule "assignment" (formula "30") (term "8") (userinteraction))
                                                            (builtin "Update Simplification" (formula "30"))
                                                            (rule "variableDeclarationAssign" (formula "30") (term "9") (userinteraction))
                                                            (rule "variableDeclaration" (formula "30") (term "9") (newnames "j_13") (userinteraction))
                                                            (rule "remove_parentheses_right" (formula "30") (term "9") (userinteraction))
                                                            (rule "assignment" (formula "30") (term "9") (userinteraction))
                                                            (builtin "Update Simplification" (formula "30"))
                                                            (rule "assignmentAdditionInt" (formula "30") (term "9") (userinteraction))
                                                            (builtin "Update Simplification" (formula "30"))
                                                            (rule "widening_identity_cast_5" (formula "30") (term "8") (userinteraction))
                                                            (rule "assignment" (formula "30") (term "8") (userinteraction))
                                                            (builtin "Update Simplification" (formula "30"))
                                                            (rule "blockEmpty" (formula "30") (term "7") (userinteraction))
                                                            (rule "preincrement" (formula "30") (term "7") (userinteraction))
                                                            (rule "compound_int_cast_expression" (formula "30") (term "7") (inst "#v=j") (userinteraction))
                                                            (rule "variableDeclarationAssign" (formula "30") (term "7") (userinteraction))
                                                            (rule "variableDeclaration" (formula "30") (term "7") (newnames "j_14") (userinteraction))
                                                            (rule "remove_parentheses_right" (formula "30") (term "7") (userinteraction))
                                                            (rule "assignmentAdditionInt" (formula "30") (term "7") (userinteraction))
                                                            (builtin "Update Simplification" (formula "30"))
                                                            (rule "widening_identity_cast_5" (formula "30") (term "8") (userinteraction))
                                                            (rule "assignment" (formula "30") (term "8") (userinteraction))
                                                            (builtin "Update Simplification" (formula "30"))
                                                            (rule "tryEmpty" (formula "30") (term "7") (userinteraction))
                                                            (rule "methodCallEmpty" (formula "30") (term "7") (userinteraction))
                                                            (rule "emptyModality" (formula "30") (term "7") (userinteraction))
                                                            (builtin "Update Simplification" (formula "30"))
                                                            (rule "boolean_not_equal_2" (formula "30") (term "0,0") (userinteraction))
                                                            (rule "concrete_impl_2" (formula "30") (term "0") (userinteraction))
                                                            (rule "concrete_and_1" (formula "30") (userinteraction))
                                                            (rule "boolean_not_equal_2" (formula "30") (term "0,0") (userinteraction))
                                                            (rule "concrete_not_2" (formula "30") (term "0") (userinteraction))
                                                            (rule "concrete_impl_1" (formula "30") (userinteraction))
                                                            (rule "castDelInt" (formula "30") (term "1,0,1"))
                                                            (rule "translateJavaAddInt" (formula "30") (term "1,0,1"))
                                                            (rule "polySimp_elimSub" (formula "30") (term "0,1"))
                                                            (rule "polySimp_mulComm0" (formula "30") (term "1,0,1"))
                                                            (rule "polySimp_addComm0" (formula "30") (term "1,1,0,1"))
                                                            (rule "polySimp_rightDist" (formula "30") (term "1,0,1"))
                                                            (rule "mul_literals" (formula "30") (term "0,1,0,1"))
                                                            (rule "polySimp_addComm0" (formula "30") (term "0,1"))
                                                            (rule "applyEq" (formula "30") (term "1,0,1") (ifseqformula "14"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1"))
                                                            (rule "polySimp_mulComm0" (formula "30") (term "1,1"))
                                                            (rule "polySimp_rightDist" (formula "30") (term "1,1"))
                                                            (rule "mul_literals" (formula "30") (term "0,1,1"))
                                                            (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1"))
                                                            (rule "polySimp_elimOne" (formula "30") (term "1,1,1"))
                                                            (rule "replace_known_left" (formula "30") (term "1") (ifseqformula "2"))
                                                            (rule "concrete_and_3" (formula "30") (userinteraction))
                                                            (rule "castDelInt" (formula "30") (term "1,1"))
                                                            (rule "castDelInt" (formula "30") (term "1,0,1"))
                                                            (rule "translateJavaAddInt" (formula "30") (term "1,0,1"))
                                                            (rule "polySimp_elimSub" (formula "30") (term "1,1"))
                                                            (rule "polySimp_elimSub" (formula "30") (term "0,1"))
                                                            (rule "polySimp_mulComm0" (formula "30") (term "1,0,1"))
                                                            (rule "inEqSimp_ltToLeq" (formula "30") (term "1"))
                                                            (rule "polySimp_addComm0" (formula "30") (term "1,1,0,0,1"))
                                                            (rule "polySimp_addComm0" (formula "30") (term "1,1,1,0,1"))
                                                            (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1"))
                                                            (rule "polySimp_mulAssoc" (formula "30") (term "0,1,0,0,1"))
                                                            (rule "polySimp_mulComm0" (formula "30") (term "0,0,1,0,0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "30") (term "0,1,0,0,1"))
                                                            (rule "polySimp_elimOne" (formula "30") (term "0,1,0,0,1"))
                                                            (rule "polySimp_rightDist" (formula "30") (term "1,1,0,1"))
                                                            (rule "mul_literals" (formula "30") (term "0,1,1,0,1"))
                                                            (rule "polySimp_addComm0" (formula "30") (term "1,0,1"))
                                                            (rule "polySimp_addAssoc" (formula "30") (term "0,0,1"))
                                                            (rule "polySimp_addAssoc" (formula "30") (term "0,1"))
                                                            (rule "polySimp_addComm1" (formula "30") (term "0,0,1"))
                                                            (rule "polySimp_pullOutFactor2b" (formula "30") (term "0,1"))
                                                            (rule "add_literals" (formula "30") (term "1,1,0,1"))
                                                            (rule "times_zero_1" (formula "30") (term "1,0,1"))
                                                            (rule "add_zero_right" (formula "30") (term "0,1"))
                                                            (rule "polySimp_addAssoc" (formula "30") (term "0,1"))
                                                            (rule "polySimp_addComm1" (formula "30") (term "0,0,1"))
                                                            (rule "add_literals" (formula "30") (term "0,0,0,1"))
                                                            (rule "add_zero_left" (formula "30") (term "0,0,1"))
                                                            (rule "polySimp_pullOutFactor1" (formula "30") (term "0,1"))
                                                            (rule "add_literals" (formula "30") (term "1,0,1"))
                                                            (rule "times_zero_1" (formula "30") (term "0,1"))
                                                            (rule "leq_literals" (formula "30") (term "1"))
                                                            (rule "concrete_and_3" (formula "30") (userinteraction))
                                                            (rule "castDelInt" (formula "30") (term "1,0,0,1"))
                                                            (rule "castDelInt" (formula "30") (term "0,1"))
                                                            (rule "translateJavaSubInt" (formula "30") (term "1,0,1"))
                                                            (rule "translateJavaAddInt" (formula "30") (term "0,1"))
                                                            (rule "polySimp_elimSub" (formula "30") (term "1,0,1"))
                                                            (rule "polySimp_addAssoc" (formula "30") (term "0,1"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "30") (term "1"))
                                                            (rule "polySimp_mulLiterals" (formula "30") (term "0,1"))
                                                            (rule "polySimp_elimOne" (formula "30") (term "0,1"))
                                                            (rule "cut_direct" (formula "30") (term "1"))
                                                            (branch " CUT: result_12 <= d_0 + result_10 TRUE"
                                                               (rule "concrete_and_3" (formula "31") (userinteraction))
                                                               (rule "applyEq" (formula "31") (term "2") (ifseqformula "15") (userinteraction))
                                                               (rule "close" (formula "31") (ifseqformula "10") (userinteraction))
                                                            )
                                                            (branch " CUT: result_12 <= d_0 + result_10 FALSE"
                                                               (rule "inEqSimp_leqRight" (formula "30"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "0,1"))
                                                               (rule "mul_literals" (formula "1") (term "0,0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1"))
                                                               (rule "polySimp_elimOne" (formula "1") (term "1,0,1"))
                                                               (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                               (rule "polySimp_pullOutFactor2b" (formula "1") (term "0"))
                                                               (rule "add_literals" (formula "1") (term "1,1,0"))
                                                               (rule "times_zero_1" (formula "1") (term "1,0"))
                                                               (rule "add_zero_right" (formula "1") (term "0"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "0"))
                                                               (rule "mul_literals" (formula "1") (term "0,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "12"))
                                                               (rule "qeq_literals" (formula "1") (term "0"))
                                                               (rule "concrete_and_2" (formula "1"))
                                                               (rule "closeFalse" (formula "1"))
                                                            )
                                                         )
                                                         (branch " result_12 <= result_10 FALSE"
                                                            (rule "ifElseSkipThen" (formula "30") (term "8") (userinteraction))
                                                            (rule "assignment" (formula "30") (term "8") (userinteraction))
                                                            (builtin "Update Simplification" (formula "30"))
                                                            (rule "compound_assignment_op_plus" (formula "30") (term "8") (userinteraction))
                                                            (rule "compound_int_cast_expression" (formula "30") (term "8") (inst "#v=j") (userinteraction))
                                                            (rule "variableDeclarationAssign" (formula "30") (term "8") (userinteraction))
                                                            (rule "variableDeclaration" (formula "30") (term "8") (newnames "j_15") (userinteraction))
                                                            (rule "remove_parentheses_right" (formula "30") (term "8") (userinteraction))
                                                            (rule "compound_addition_2" (formula "30") (term "8") (inst "#v1=j_17") (inst "#v0=j_16") (userinteraction))
                                                            (rule "variableDeclarationAssign" (formula "30") (term "8") (userinteraction))
                                                            (rule "variableDeclaration" (formula "30") (term "8") (newnames "j_16") (userinteraction))
                                                            (rule "assignment" (formula "30") (term "8") (userinteraction))
                                                            (builtin "Update Simplification" (formula "30"))
                                                            (rule "variableDeclarationAssign" (formula "30") (term "9") (userinteraction))
                                                            (rule "variableDeclaration" (formula "30") (term "9") (newnames "j_17") (userinteraction))
                                                            (rule "remove_parentheses_right" (formula "30") (term "9") (userinteraction))
                                                            (rule "unaryMinusInt" (formula "30") (term "9") (userinteraction))
                                                            (builtin "Update Simplification" (formula "30"))
                                                            (rule "assignmentAdditionInt" (formula "30") (term "9") (userinteraction))
                                                            (builtin "Update Simplification" (formula "30"))
                                                            (rule "widening_identity_cast_5" (formula "30") (term "8") (userinteraction))
                                                            (rule "assignment" (formula "30") (term "8") (userinteraction))
                                                            (builtin "Update Simplification" (formula "30"))
                                                            (rule "castDelInt" (formula "30") (term "0") (userinteraction))
                                                            (rule "translateJavaAddInt" (formula "30") (term "0") (userinteraction))
                                                            (rule "castDelInt" (formula "30") (term "1,0") (userinteraction))
                                                            (rule "translateJavaUnaryMinusInt" (formula "30") (term "1,0") (userinteraction))
                                                            (rule "castDelInt" (formula "30") (term "0,1,0") (userinteraction))
                                                            (rule "translateJavaSubInt" (formula "30") (term "0,1,0") (userinteraction))
                                                            (rule "blockEmpty" (formula "30") (term "7") (userinteraction))
                                                            (rule "preincrement" (formula "30") (term "7") (userinteraction))
                                                            (rule "compound_int_cast_expression" (formula "30") (term "7") (inst "#v=j") (userinteraction))
                                                            (rule "variableDeclarationAssign" (formula "30") (term "7") (userinteraction))
                                                            (rule "variableDeclaration" (formula "30") (term "7") (newnames "j_18") (userinteraction))
                                                            (rule "remove_parentheses_right" (formula "30") (term "7") (userinteraction))
                                                            (rule "assignmentAdditionInt" (formula "30") (term "7") (userinteraction))
                                                            (builtin "Update Simplification" (formula "30"))
                                                            (rule "widening_identity_cast_5" (formula "30") (term "8") (userinteraction))
                                                            (rule "assignment" (formula "30") (term "8") (userinteraction))
                                                            (builtin "Update Simplification" (formula "30"))
                                                            (rule "tryEmpty" (formula "30") (term "7") (userinteraction))
                                                            (rule "methodCallEmpty" (formula "30") (term "7") (userinteraction))
                                                            (rule "emptyModality" (formula "30") (term "7") (userinteraction))
                                                            (builtin "Update Simplification" (formula "30"))
                                                            (rule "boolean_not_equal_2" (formula "30") (term "0,0") (userinteraction))
                                                            (rule "concrete_impl_2" (formula "30") (term "0") (userinteraction))
                                                            (rule "concrete_and_1" (formula "30") (userinteraction))
                                                            (rule "boolean_not_equal_2" (formula "30") (term "0,0") (userinteraction))
                                                            (rule "concrete_not_2" (formula "30") (term "0") (userinteraction))
                                                            (rule "concrete_impl_1" (formula "30") (userinteraction))
                                                            (rule "castDelInt" (formula "30") (term "1,0,1"))
                                                            (rule "translateJavaAddInt" (formula "30") (term "1,0,1"))
                                                            (rule "polySimp_elimSub" (formula "30") (term "0,1"))
                                                            (rule "polySimp_mulComm0" (formula "30") (term "1,0,1"))
                                                            (rule "polySimp_addComm0" (formula "30") (term "1,1,0,1"))
                                                            (rule "polySimp_rightDist" (formula "30") (term "1,0,1"))
                                                            (rule "mul_literals" (formula "30") (term "0,1,0,1"))
                                                            (rule "polySimp_addComm0" (formula "30") (term "0,1"))
                                                            (rule "applyEq" (formula "30") (term "1,0,1") (ifseqformula "13"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1"))
                                                            (rule "polySimp_mulComm0" (formula "30") (term "1,1"))
                                                            (rule "polySimp_rightDist" (formula "30") (term "1,1"))
                                                            (rule "mul_literals" (formula "30") (term "0,1,1"))
                                                            (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1"))
                                                            (rule "polySimp_elimOne" (formula "30") (term "1,1,1"))
                                                            (rule "replace_known_left" (formula "30") (term "1") (ifseqformula "1"))
                                                            (rule "concrete_and_3" (formula "30") (userinteraction))
                                                            (rule "castDelInt" (formula "30") (term "1,1"))
                                                            (rule "castDelInt" (formula "30") (term "1,0,1"))
                                                            (rule "translateJavaAddInt" (formula "30") (term "1,0,1"))
                                                            (rule "polySimp_elimSub" (formula "30") (term "1,1"))
                                                            (rule "polySimp_elimSub" (formula "30") (term "0,1"))
                                                            (rule "polySimp_mulComm0" (formula "30") (term "1,0,1"))
                                                            (rule "inEqSimp_ltToLeq" (formula "30") (term "1"))
                                                            (rule "polySimp_addComm0" (formula "30") (term "1,1,0,0,1"))
                                                            (rule "polySimp_addComm0" (formula "30") (term "1,1,1,0,1"))
                                                            (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1"))
                                                            (rule "polySimp_mulAssoc" (formula "30") (term "0,1,0,0,1"))
                                                            (rule "polySimp_mulComm0" (formula "30") (term "0,0,1,0,0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "30") (term "0,1,0,0,1"))
                                                            (rule "polySimp_elimOne" (formula "30") (term "0,1,0,0,1"))
                                                            (rule "polySimp_rightDist" (formula "30") (term "1,1,0,1"))
                                                            (rule "mul_literals" (formula "30") (term "0,1,1,0,1"))
                                                            (rule "polySimp_addComm0" (formula "30") (term "1,0,1"))
                                                            (rule "polySimp_addAssoc" (formula "30") (term "0,0,1"))
                                                            (rule "polySimp_addAssoc" (formula "30") (term "0,1"))
                                                            (rule "polySimp_addComm1" (formula "30") (term "0,0,1"))
                                                            (rule "polySimp_pullOutFactor2b" (formula "30") (term "0,1"))
                                                            (rule "add_literals" (formula "30") (term "1,1,0,1"))
                                                            (rule "times_zero_1" (formula "30") (term "1,0,1"))
                                                            (rule "add_zero_right" (formula "30") (term "0,1"))
                                                            (rule "polySimp_addAssoc" (formula "30") (term "0,1"))
                                                            (rule "polySimp_addComm1" (formula "30") (term "0,0,1"))
                                                            (rule "add_literals" (formula "30") (term "0,0,0,1"))
                                                            (rule "add_zero_left" (formula "30") (term "0,0,1"))
                                                            (rule "polySimp_pullOutFactor1" (formula "30") (term "0,1"))
                                                            (rule "add_literals" (formula "30") (term "1,0,1"))
                                                            (rule "times_zero_1" (formula "30") (term "0,1"))
                                                            (rule "leq_literals" (formula "30") (term "1"))
                                                            (rule "concrete_and_3" (formula "30") (userinteraction))
                                                            (rule "castDelInt" (formula "30") (term "0,1"))
                                                            (rule "polySimp_elimSub" (formula "30") (term "0,1,0,1"))
                                                            (rule "polySimp_elimNeg" (formula "30") (term "1,0,1"))
                                                            (rule "polySimp_mulComm0" (formula "30") (term "1,0,1"))
                                                            (rule "polySimp_rightDist" (formula "30") (term "1,0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,1"))
                                                            (rule "polySimp_elimOne" (formula "30") (term "1,1,0,1"))
                                                            (rule "polySimp_mulComm0" (formula "30") (term "0,1,0,1"))
                                                            (rule "polySimp_addAssoc" (formula "30") (term "0,1"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1"))
                                                            (rule "polySimp_mulComm0" (formula "30") (term "1,1"))
                                                            (rule "polySimp_rightDist" (formula "30") (term "1,1"))
                                                            (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1"))
                                                            (rule "polySimp_elimOne" (formula "30") (term "1,1,1"))
                                                            (rule "polySimp_mulComm0" (formula "30") (term "0,1,1"))
                                                            (rule "cut_direct" (formula "30") (term "1"))
                                                            (branch " CUT: result_12 >= d_0 * -1 + result_10 TRUE"
                                                               (rule "concrete_and_3" (formula "31") (userinteraction))
                                                               (rule "applyEq" (formula "31") (term "2") (ifseqformula "14") (userinteraction))
                                                               (rule "close" (formula "31") (ifseqformula "9") (userinteraction))
                                                            )
                                                            (branch " CUT: result_12 >= d_0 * -1 + result_10 FALSE"
                                                               (rule "inEqSimp_geqRight" (formula "30"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                               (rule "polySimp_mulAssoc" (formula "1") (term "0,1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "0,0,1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0"))
                                                               (rule "polySimp_elimOne" (formula "1") (term "0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "0,1"))
                                                               (rule "mul_literals" (formula "1") (term "0,0,1"))
                                                               (rule "applyEq" (formula "31") (term "2,0") (ifseqformula "14") (userinteraction))
                                                               (rule "concrete_and_4" (formula "31") (userinteraction))
                                                               (rule "false_right" (formula "31") (userinteraction))
                                                               (rule "times_minus_one_1" (formula "1") (term "1,0,1") (userinteraction))
                                                               (rule "polySimp_elimNeg" (formula "1") (term "1,0,1"))
                                                               (rule "inEqSimp_leqRight" (formula "30"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "9"))
                                                               (rule "polySimp_mulComm0" (formula "9") (term "1,0,0"))
                                                               (rule "inEqSimp_gtToGeq" (formula "16"))
                                                               (rule "polySimp_mulComm0" (formula "16") (term "1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "9") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "16") (term "0"))
                                                               (rule "applyEq" (formula "9") (term "0,1,0") (ifseqformula "15"))
                                                               (rule "apply_eq_boolean" (formula "23") (term "0") (ifseqformula "31"))
                                                               (rule "eqSymm" (formula "23"))
                                                               (rule "false_to_not_true" (formula "23"))
                                                               (rule "notLeft" (formula "23"))
                                                               (rule "apply_eq_boolean_rigid" (formula "25") (term "1") (ifseqformula "34"))
                                                               (rule "false_to_not_true" (formula "25"))
                                                               (rule "notLeft" (formula "25"))
                                                               (rule "applyEq" (formula "25") (term "1") (ifseqformula "24"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                               (rule "mul_literals" (formula "1") (term "0,1"))
                                                               (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "16"))
                                                               (rule "polySimp_mulLiterals" (formula "16") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "16") (term "0"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "9"))
                                                               (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "9") (term "0"))
                                                               (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "3"))
                                                               (rule "inEqSimp_homoInEq0" (formula "11") (term "0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0"))
                                                               (rule "add_literals" (formula "11") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "11") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "11") (term "0,0"))
                                                               (rule "qeq_literals" (formula "11") (term "0"))
                                                               (rule "concrete_or_1" (formula "11"))
                                                               (rule "true_left" (formula "11"))
                                                               (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "14"))
                                                               (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                                               (rule "mul_literals" (formula "3") (term "0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                                               (rule "add_literals" (formula "3") (term "0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                               (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                               (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                               (rule "mul_literals" (formula "3") (term "0,1"))
                                                               (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                                               (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "3"))
                                                               (rule "inEqSimp_homoInEq0" (formula "7") (term "0"))
                                                               (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "7") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "7") (term "0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                                                               (rule "polySimp_addComm1" (formula "7") (term "0,0,0"))
                                                               (rule "add_literals" (formula "7") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0"))
                                                               (rule "add_literals" (formula "7") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "7") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "7") (term "0,0"))
                                                               (rule "qeq_literals" (formula "7") (term "0"))
                                                               (rule "concrete_or_1" (formula "7"))
                                                               (rule "true_left" (formula "7"))
                                                               (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                               (rule "mul_literals" (formula "1") (term "0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                                               (rule "polySimp_pullOutFactor2b" (formula "1") (term "0"))
                                                               (rule "add_literals" (formula "1") (term "1,1,0"))
                                                               (rule "times_zero_1" (formula "1") (term "1,0"))
                                                               (rule "add_zero_right" (formula "1") (term "0"))
                                                               (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                               (rule "add_literals" (formula "1") (term "0,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "11"))
                                                               (rule "qeq_literals" (formula "1") (term "0"))
                                                               (rule "concrete_and_2" (formula "1"))
                                                               (rule "closeFalse" (formula "1"))
                                                            )
                                                         )
                                                      )
                                                      (branch " Exceptional Post"
                                                         (builtin "Update Simplification" (formula "26"))
                                                         (rule "impRight" (formula "26"))
                                                         (rule "andLeft" (formula "1"))
                                                         (rule "andLeft" (formula "1"))
                                                         (rule "andLeft" (formula "2"))
                                                         (rule "andLeft" (formula "1"))
                                                         (rule "notLeft" (formula "2"))
                                                         (rule "eqSymm" (formula "3") (term "1,1"))
                                                         (rule "replace_known_right" (formula "2") (term "0,0,1") (ifseqformula "29"))
                                                         (rule "concrete_not_2" (formula "2") (term "0,1"))
                                                         (rule "concrete_and_1" (formula "2") (term "1"))
                                                         (rule "replace_known_left" (formula "3") (term "0,0") (ifseqformula "11"))
                                                         (rule "concrete_and_1" (formula "3") (term "0"))
                                                         (rule "replace_known_right" (formula "3") (term "0,1") (ifseqformula "29"))
                                                         (rule "concrete_and_2" (formula "3") (term "1"))
                                                         (rule "concrete_impl_3" (formula "3"))
                                                         (rule "notLeft" (formula "3"))
                                                         (rule "polySimp_elimSub" (formula "30") (term "0,1,0,1,1,0,8"))
                                                         (rule "polySimp_elimSub" (formula "30") (term "3"))
                                                         (rule "polySimp_elimSub" (formula "30") (term "0,1,1,1,0,8"))
                                                         (rule "inEqSimp_gtToGeq" (formula "13"))
                                                         (rule "inEqSimp_ltToLeq" (formula "6"))
                                                         (rule "polySimp_mulComm0" (formula "13") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "2") (term "0,0"))
                                                         (rule "mul_literals" (formula "2") (term "1,0,0,0,0"))
                                                         (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                                         (rule "inEqSimp_ltRight" (formula "28"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,1,1,0,8"))
                                                         (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,1,1,0,8"))
                                                         (rule "polySimp_addComm0" (formula "30") (term "3"))
                                                         (rule "polySimp_addComm0" (formula "30") (term "0,1,1,1,0,8"))
                                                         (rule "polySimp_addComm1" (formula "14") (term "0"))
                                                         (rule "polySimp_addComm1" (formula "7") (term "0"))
                                                         (rule "inEqSimp_commuteGeq" (formula "3") (term "1,0"))
                                                         (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                         (rule "polySimp_addComm0" (formula "30") (term "1,0,1,0,1,1,0,8"))
                                                         (rule "polySimp_addAssoc" (formula "30") (term "0,1,0,1,1,0,8"))
                                                         (rule "polySimp_addComm1" (formula "30") (term "0,0,1,0,1,1,0,8"))
                                                         (rule "applyEq" (formula "3") (term "0,1,0") (ifseqformula "16"))
                                                         (rule "apply_eq_boolean" (formula "21") (term "0") (ifseqformula "31"))
                                                         (rule "eqSymm" (formula "21"))
                                                         (rule "false_to_not_true" (formula "21"))
                                                         (rule "notLeft" (formula "21"))
                                                         (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "16"))
                                                         (rule "applyEq" (formula "29") (term "1,3") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "29") (term "5") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "7") (term "0,1,0") (ifseqformula "13"))
                                                         (rule "apply_eq_boolean_rigid" (formula "23") (term "1") (ifseqformula "34"))
                                                         (rule "false_to_not_true" (formula "23"))
                                                         (rule "notLeft" (formula "23"))
                                                         (rule "applyEqRigid" (formula "29") (term "1,0,0,1,0,0,8") (ifseqformula "22"))
                                                         (rule "applyEqRigid" (formula "23") (term "1") (ifseqformula "22"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "0,0"))
                                                         (rule "mul_literals" (formula "3") (term "1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "1,1,1,0,8"))
                                                         (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,1,0,8"))
                                                         (rule "polySimp_elimOne" (formula "29") (term "1,1,1,1,0,8"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "14"))
                                                         (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "14") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,1,1,0,8"))
                                                         (rule "polySimp_mulComm0" (formula "29") (term "1,1,0,1,1,0,8"))
                                                         (rule "polySimp_rightDist" (formula "29") (term "1,1,0,1,1,0,8"))
                                                         (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0,1,1,0,8"))
                                                         (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0,1,1,0,8"))
                                                         (rule "polySimp_rightDist" (formula "29") (term "0,1,1,0,1,1,0,8"))
                                                         (rule "mul_literals" (formula "29") (term "0,0,1,1,0,1,1,0,8"))
                                                         (rule "polySimp_mulLiterals" (formula "29") (term "1,0,1,1,0,1,1,0,8"))
                                                         (rule "polySimp_elimOne" (formula "29") (term "1,0,1,1,0,1,1,0,8"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                         (rule "replace_known_left" (formula "3") (term "1,0") (ifseqformula "1"))
                                                         (rule "concrete_or_3" (formula "3") (term "0"))
                                                         (rule "concrete_impl_1" (formula "3"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "7"))
                                                         (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "7") (term "0"))
                                                         (rule "inEqSimp_contradInEq0" (formula "7") (ifseqformula "1"))
                                                         (rule "andLeft" (formula "7"))
                                                         (rule "inEqSimp_homoInEq1" (formula "7"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "7") (term "0"))
                                                         (rule "add_literals" (formula "7") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "7") (term "1,0"))
                                                         (rule "add_literals" (formula "7") (term "0"))
                                                         (rule "leq_literals" (formula "7"))
                                                         (rule "closeFalse" (formula "7"))
                                                      )
                                                   )
                                                   (branch " Null Reference (s2 = null)"
                                                      (builtin "Update Simplification" (formula "1"))
                                                      (rule "close" (formula "31") (ifseqformula "1"))
                                                   )
                                                )
                                                (branch " Exceptional Post"
                                                   (builtin "Update Simplification" (formula "23"))
                                                   (rule "impRight" (formula "23"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "andLeft" (formula "2"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "notLeft" (formula "2"))
                                                   (rule "eqSymm" (formula "3") (term "1,1"))
                                                   (rule "replace_known_right" (formula "2") (term "0,0,1") (ifseqformula "26"))
                                                   (rule "concrete_not_2" (formula "2") (term "0,1"))
                                                   (rule "concrete_and_1" (formula "2") (term "1"))
                                                   (rule "replace_known_right" (formula "3") (term "0,1") (ifseqformula "26"))
                                                   (rule "concrete_and_2" (formula "3") (term "1"))
                                                   (rule "concrete_impl_3" (formula "3"))
                                                   (rule "notLeft" (formula "3"))
                                                   (rule "replace_known_left" (formula "25") (term "0") (ifseqformula "7"))
                                                   (rule "concrete_and_1" (formula "25"))
                                                   (rule "polySimp_elimSub" (formula "27") (term "0,1,1,1,0,7"))
                                                   (rule "polySimp_elimSub" (formula "27") (term "0,1,0,1,1,0,7"))
                                                   (rule "polySimp_elimSub" (formula "27") (term "3"))
                                                   (rule "inEqSimp_gtToGeq" (formula "10"))
                                                   (rule "inEqSimp_ltToLeq" (formula "3"))
                                                   (rule "polySimp_mulComm0" (formula "10") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "2") (term "0,0"))
                                                   (rule "mul_literals" (formula "2") (term "1,0,0,0,0"))
                                                   (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                                   (rule "inEqSimp_ltRight" (formula "25"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,1,1,0,7"))
                                                   (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,1,1,0,7"))
                                                   (rule "polySimp_addComm0" (formula "27") (term "0,1,1,1,0,7"))
                                                   (rule "polySimp_addComm0" (formula "27") (term "3"))
                                                   (rule "polySimp_addComm1" (formula "11") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                   (rule "inEqSimp_commuteGeq" (formula "3") (term "1,0"))
                                                   (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                   (rule "polySimp_addComm0" (formula "27") (term "1,0,1,0,1,1,0,7"))
                                                   (rule "polySimp_addAssoc" (formula "27") (term "0,1,0,1,1,0,7"))
                                                   (rule "polySimp_addComm1" (formula "27") (term "0,0,1,0,1,1,0,7"))
                                                   (rule "applyEq" (formula "27") (term "1,3") (ifseqformula "10"))
                                                   (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "17"))
                                                   (rule "applyEq" (formula "4") (term "0,1,0") (ifseqformula "10"))
                                                   (rule "applyEq" (formula "3") (term "0,1,0") (ifseqformula "17"))
                                                   (rule "apply_eq_boolean" (formula "21") (term "1") (ifseqformula "32"))
                                                   (rule "false_to_not_true" (formula "21"))
                                                   (rule "notLeft" (formula "21"))
                                                   (rule "applyEq" (formula "27") (term "4") (ifseqformula "10"))
                                                   (rule "apply_eq_boolean" (formula "18") (term "0") (ifseqformula "28"))
                                                   (rule "eqSymm" (formula "18"))
                                                   (rule "false_to_not_true" (formula "18"))
                                                   (rule "notLeft" (formula "18"))
                                                   (rule "applyEqRigid" (formula "26") (term "1,0,0,1,0,0,7") (ifseqformula "19"))
                                                   (rule "applyEqRigid" (formula "20") (term "1") (ifseqformula "19"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "0,0"))
                                                   (rule "mul_literals" (formula "3") (term "1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "1,1,1,0,7"))
                                                   (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,1,0,7"))
                                                   (rule "polySimp_elimOne" (formula "26") (term "1,1,1,1,0,7"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "11"))
                                                   (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "11") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,1,1,0,7"))
                                                   (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,1,1,0,7"))
                                                   (rule "polySimp_rightDist" (formula "26") (term "1,1,0,1,1,0,7"))
                                                   (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,1,1,0,7"))
                                                   (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,1,1,0,7"))
                                                   (rule "polySimp_rightDist" (formula "26") (term "0,1,1,0,1,1,0,7"))
                                                   (rule "polySimp_mulLiterals" (formula "26") (term "1,0,1,1,0,1,1,0,7"))
                                                   (rule "mul_literals" (formula "26") (term "0,0,1,1,0,1,1,0,7"))
                                                   (rule "polySimp_elimOne" (formula "26") (term "1,0,1,1,0,1,1,0,7"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                   (rule "replace_known_left" (formula "3") (term "1,0") (ifseqformula "1"))
                                                   (rule "concrete_or_3" (formula "3") (term "0"))
                                                   (rule "concrete_impl_1" (formula "3"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                                                   (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "4") (term "0"))
                                                   (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "4"))
                                                   (rule "inEqSimp_homoInEq0" (formula "7") (term "0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0"))
                                                   (rule "add_literals" (formula "7") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "7") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "7") (term "0,0"))
                                                   (rule "qeq_literals" (formula "7") (term "0"))
                                                   (rule "concrete_or_1" (formula "7"))
                                                   (rule "true_left" (formula "7"))
                                                   (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "10"))
                                                   (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                                                   (rule "mul_literals" (formula "4") (term "0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                                                   (rule "add_literals" (formula "4") (term "0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                                   (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "4") (term "1"))
                                                   (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                                   (rule "mul_literals" (formula "4") (term "0,1"))
                                                   (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                                   (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "1"))
                                                   (rule "andLeft" (formula "4"))
                                                   (rule "inEqSimp_homoInEq1" (formula "4"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                                                   (rule "add_literals" (formula "4") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "4") (term "1,0"))
                                                   (rule "add_literals" (formula "4") (term "0"))
                                                   (rule "leq_literals" (formula "4"))
                                                   (rule "closeFalse" (formula "4"))
                                                )
                                             )
                                             (branch " Null Reference (s1 = null)"
                                                (builtin "Update Simplification" (formula "1"))
                                                (rule "close" (formula "27") (ifseqformula "1"))
                                             )
                                          )
                                          (branch " i_0 <  result_8 FALSE"
                                             (rule "closeFalse" (formula "1") (userinteraction))
                                          )
                                       )
                                       (branch " Use Case"
                                          (builtin "Update Simplification" (formula "18"))
                                          (rule "impRight" (formula "18") (userinteraction))
                                          (rule "andLeft" (formula "1") (userinteraction))
                                          (rule "variableDeclarationAssign" (formula "20") (term "5") (userinteraction))
                                          (rule "variableDeclaration" (formula "20") (term "5") (newnames "b_7") (userinteraction))
                                          (rule "less_than_comparison_new" (formula "20") (term "5") (userinteraction))
                                          (builtin "Update Simplification" (formula "20"))
                                          (rule "ifthenelse_split_for" (formula "20") (userinteraction))
                                          (branch " i_1 <  result_8 TRUE"
                                             (rule "blockEmpty" (formula "21") (term "1,0,4") (userinteraction))
                                             (rule "assignment" (formula "21") (term "4") (userinteraction))
                                             (builtin "Update Simplification" (formula "21"))
                                             (rule "methodCallEmpty" (formula "21") (term "5") (userinteraction))
                                             (rule "emptyModality" (formula "21") (term "5") (userinteraction))
                                             (builtin "Update Simplification" (formula "21"))
                                             (rule "boolean_not_equal_1" (formula "21") (term "0") (userinteraction))
                                             (rule "concrete_impl_2" (formula "21") (userinteraction))
                                             (rule "closeTrue" (formula "21") (userinteraction))
                                          )
                                          (branch " i_1 <  result_8 FALSE"
                                             (rule "assignment" (formula "21") (term "4") (userinteraction))
                                             (builtin "Update Simplification" (formula "21"))
                                             (rule "methodCallEmpty" (formula "21") (term "5") (userinteraction))
                                             (rule "emptyModality" (formula "21") (term "5") (userinteraction))
                                             (builtin "Update Simplification" (formula "21"))
                                             (rule "boolean_equal" (formula "21") (term "0") (userinteraction))
                                             (rule "concrete_impl_1" (formula "21") (userinteraction))
                                             (rule "blockEmpty" (formula "21") (term "4") (userinteraction))
                                             (rule "compound_subtraction_2" (formula "21") (term "4") (inst "#v1=j_1") (inst "#v0=j") (userinteraction))
                                             (rule "variableDeclarationAssign" (formula "21") (term "4") (userinteraction))
                                             (rule "variableDeclaration" (formula "21") (term "4") (newnames "j_19") (userinteraction))
                                             (rule "methodCallWithAssignment" (formula "21") (term "4") (inst "#v0=j_20") (userinteraction))
                                             (branch " Normal Execution (s1 != null)"
                                                (builtin "Update Simplification" (formula "21"))
                                                (rule "variableDeclaration" (formula "21") (term "4") (newnames "j_20") (userinteraction))
                                                (builtin "Use Operation Contract" (formula "21") (term "4") (newnames "result_15") (contract "length;;"))
                                                (branch " Pre"
                                                   (builtin "Update Simplification" (formula "21"))
                                                   (rule "replace_known_left" (formula "21") (term "0") (ifseqformula "19"))
                                                   (rule "concrete_and_1" (formula "21"))
                                                   (rule "replace_known_right" (formula "21") (term "0,1") (ifseqformula "24"))
                                                   (rule "concrete_not_2" (formula "21") (term "1"))
                                                   (rule "concrete_and_3" (formula "21"))
                                                   (rule "close" (formula "21") (ifseqformula "17"))
                                                )
                                                (branch " Post"
                                                   (rule "blockEmpty" (formula "21") (term "1,3,4") (userinteraction))
                                                   (builtin "Update Simplification" (formula "21"))
                                                   (rule "impRight" (formula "21") (userinteraction))
                                                   (rule "inInt" (formula "1") (term "1,1,0"))
                                                   (rule "concrete_and_3" (formula "1") (term "1,0"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "andLeft" (formula "2"))
                                                   (rule "eqSymm" (formula "2"))
                                                   (rule "applyEq" (formula "2") (term "0") (ifseqformula "13"))
                                                   (rule "assignment" (formula "23") (term "4") (userinteraction))
                                                   (builtin "Update Simplification" (formula "23"))
                                                   (rule "variableDeclarationAssign" (formula "23") (term "4") (userinteraction))
                                                   (rule "variableDeclaration" (formula "23") (term "4") (newnames "j_21") (userinteraction))
                                                   (rule "methodCallWithAssignment" (formula "23") (term "4") (inst "#v0=j_22") (userinteraction))
                                                   (branch " Normal Execution (s2 != null)"
                                                      (builtin "Update Simplification" (formula "23"))
                                                      (rule "variableDeclaration" (formula "23") (term "4") (newnames "j_22") (userinteraction))
                                                      (builtin "Use Operation Contract" (formula "23") (term "4") (newnames "result_17") (contract "length;;"))
                                                      (branch " Pre"
                                                         (builtin "Update Simplification" (formula "23"))
                                                         (rule "replace_known_left" (formula "23") (term "0") (ifseqformula "21"))
                                                         (rule "concrete_and_1" (formula "23"))
                                                         (rule "replace_known_left" (formula "23") (term "0") (ifseqformula "20"))
                                                         (rule "concrete_and_1" (formula "23"))
                                                         (rule "notRight" (formula "23"))
                                                         (rule "close" (formula "27") (ifseqformula "1"))
                                                      )
                                                      (branch " Post"
                                                         (rule "blockEmpty" (formula "23") (term "1,3,4") (userinteraction))
                                                         (builtin "Update Simplification" (formula "23"))
                                                         (rule "impRight" (formula "23") (userinteraction))
                                                         (rule "inInt" (formula "1") (term "1,1,0"))
                                                         (rule "concrete_and_3" (formula "1") (term "1,0"))
                                                         (rule "andLeft" (formula "1"))
                                                         (rule "andLeft" (formula "1"))
                                                         (rule "andLeft" (formula "2"))
                                                         (rule "eqSymm" (formula "2"))
                                                         (rule "applyEq" (formula "2") (term "0") (ifseqformula "11"))
                                                         (rule "assignment" (formula "25") (term "4") (userinteraction))
                                                         (builtin "Update Simplification" (formula "25"))
                                                         (rule "assignmentSubtractionInt" (formula "25") (term "4") (userinteraction))
                                                         (builtin "Update Simplification" (formula "25"))
                                                         (rule "ifElseUnfold" (formula "25") (term "2") (inst "#boolv=b") (userinteraction))
                                                         (rule "variableDeclaration" (formula "25") (term "2") (newnames "b_8") (userinteraction))
                                                         (rule "less_than_comparison_new" (formula "25") (term "2") (userinteraction))
                                                         (builtin "Update Simplification" (formula "25"))
                                                         (rule "castDelInt" (formula "25") (term "0,0"))
                                                         (rule "translateJavaSubInt" (formula "25") (term "0,0"))
                                                         (rule "polySimp_elimSub" (formula "25") (term "0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "25") (term "0"))
                                                         (rule "times_zero_1" (formula "25") (term "1,0,0,0"))
                                                         (rule "add_zero_right" (formula "25") (term "0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "25") (term "0,0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "25") (term "0"))
                                                         (rule "polySimp_mulLiterals" (formula "25") (term "0,0"))
                                                         (rule "polySimp_elimOne" (formula "25") (term "0,0"))
                                                         (rule "ifthenelse_split_for" (formula "25") (userinteraction))
                                                         (branch " result_16 >= 1 + result_14 TRUE"
                                                            (rule "ifElseSkipElse" (formula "26") (term "2") (userinteraction))
                                                            (rule "assignment" (formula "26") (term "2") (userinteraction))
                                                            (builtin "Update Simplification" (formula "26"))
                                                            (rule "compound_assignment_op_minus" (formula "26") (term "2") (userinteraction))
                                                            (rule "compound_int_cast_expression" (formula "26") (term "2") (inst "#v=j") (userinteraction))
                                                            (rule "variableDeclarationAssign" (formula "26") (term "2") (userinteraction))
                                                            (rule "variableDeclaration" (formula "26") (term "2") (newnames "j_23") (userinteraction))
                                                            (rule "remove_parentheses_right" (formula "26") (term "2") (userinteraction))
                                                            (rule "compound_subtraction_2" (formula "26") (term "2") (inst "#v1=j_25") (inst "#v0=j_24") (userinteraction))
                                                            (rule "variableDeclarationAssign" (formula "26") (term "2") (userinteraction))
                                                            (rule "variableDeclaration" (formula "26") (term "2") (newnames "j_24") (userinteraction))
                                                            (rule "assignment" (formula "26") (term "2") (userinteraction))
                                                            (builtin "Update Simplification" (formula "26"))
                                                            (rule "variableDeclarationAssign" (formula "26") (term "3") (userinteraction))
                                                            (rule "variableDeclaration" (formula "26") (term "3") (newnames "j_25") (userinteraction))
                                                            (rule "remove_parentheses_right" (formula "26") (term "3") (userinteraction))
                                                            (rule "assignment" (formula "26") (term "3") (userinteraction))
                                                            (builtin "Update Simplification" (formula "26"))
                                                            (rule "assignmentSubtractionInt" (formula "26") (term "3") (userinteraction))
                                                            (builtin "Update Simplification" (formula "26"))
                                                            (rule "widening_identity_cast_5" (formula "26") (term "2") (userinteraction))
                                                            (rule "assignment" (formula "26") (term "2") (userinteraction))
                                                            (builtin "Update Simplification" (formula "26"))
                                                            (rule "methodCallReturn" (formula "26") (term "1") (userinteraction))
                                                            (rule "assignment" (formula "26") (term "1") (userinteraction))
                                                            (builtin "Update Simplification" (formula "26"))
                                                            (rule "methodCallEmpty" (formula "26") (term "1") (userinteraction))
                                                            (rule "emptyModality" (formula "26") (term "1") (userinteraction))
                                                            (builtin "Update Simplification" (formula "26"))
                                                            (rule "notRight" (formula "26") (userinteraction))
                                                            (rule "castDelInt" (formula "1") (term "0") (userinteraction))
                                                            (rule "translateJavaSubInt" (formula "1") (term "0") (userinteraction))
                                                            (rule "castDelInt" (formula "1") (term "1,0") (userinteraction))
                                                            (rule "translateJavaSubInt" (formula "1") (term "1,0") (userinteraction))
                                                            (rule "polySimp_elimSub" (formula "8") (term "0"))
                                                            (rule "polySimp_elimSub" (formula "1") (term "0"))
                                                            (rule "polySimp_homoEq" (formula "1"))
                                                            (rule "polySimp_elimSub" (formula "1") (term "0,1,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1,1,1,0"))
                                                            (rule "inEqSimp_ltRight" (formula "26"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                            (rule "inEqSimp_gtToGeq" (formula "12"))
                                                            (rule "polySimp_mulComm0" (formula "12") (term "1,0,0"))
                                                            (rule "polySimp_addComm0" (formula "9") (term "0"))
                                                            (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                            (rule "polySimp_addComm1" (formula "12") (term "0"))
                                                            (rule "polySimp_rightDist" (formula "2") (term "1,1,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "2") (term "1,1,1,1,0"))
                                                            (rule "polySimp_elimOne" (formula "2") (term "1,1,1,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "2") (term "0,1,1,1,0"))
                                                            (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "2") (term "0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "2") (term "1,1,0"))
                                                            (rule "polySimp_rightDist" (formula "2") (term "1,1,0"))
                                                            (rule "polySimp_mulAssoc" (formula "2") (term "0,1,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "2") (term "0,0,1,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "2") (term "0,1,1,0"))
                                                            (rule "polySimp_elimOne" (formula "2") (term "0,1,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "2") (term "1,0"))
                                                            (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                            (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                            (rule "applyEq" (formula "9") (term "1,0") (ifseqformula "11"))
                                                            (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "11"))
                                                            (rule "apply_eq_boolean" (formula "19") (term "0") (ifseqformula "27"))
                                                            (rule "eqSymm" (formula "19"))
                                                            (rule "false_to_not_true" (formula "19"))
                                                            (rule "notLeft" (formula "19"))
                                                            (rule "applyEq" (formula "12") (term "0,1,0") (ifseqformula "5"))
                                                            (rule "polySimp_addComm1" (formula "12") (term "0"))
                                                            (rule "apply_eq_boolean_rigid" (formula "21") (term "1") (ifseqformula "30"))
                                                            (rule "false_to_not_true" (formula "21"))
                                                            (rule "notLeft" (formula "21"))
                                                            (rule "applyEq" (formula "14") (term "1") (ifseqformula "5"))
                                                            (rule "applyEq" (formula "21") (term "1") (ifseqformula "20"))
                                                            (rule "applyEq" (formula "11") (term "1") (ifseqformula "5"))
                                                            (rule "applyEq" (formula "16") (term "1") (ifseqformula "7"))
                                                            (rule "applyEq" (formula "18") (term "1") (ifseqformula "7"))
                                                            (rule "applyEq" (formula "9") (term "1,0") (ifseqformula "5"))
                                                            (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "5"))
                                                            (rule "applyEq" (formula "12") (term "1,0") (ifseqformula "7"))
                                                            (rule "polySimp_addComm1" (formula "12") (term "0"))
                                                            (rule "applyEq" (formula "2") (term "0,0,0,0") (ifseqformula "20"))
                                                            (rule "add_zero_left" (formula "2") (term "0,0,0"))
                                                            (rule "polySimp_sepNegMonomial" (formula "2"))
                                                            (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                            (rule "applyEq" (formula "3") (term "0") (ifseqformula "2"))
                                                            (rule "inEqSimp_homoInEq1" (formula "3"))
                                                            (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                                            (rule "polySimp_mulAssoc" (formula "3") (term "0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "3") (term "0,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "3") (term "0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "3") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                                            (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                                            (rule "add_literals" (formula "3") (term "1,1,0"))
                                                            (rule "times_zero_1" (formula "3") (term "1,0"))
                                                            (rule "add_zero_right" (formula "3") (term "0"))
                                                            (rule "applyEq" (formula "12") (term "0,1,0") (ifseqformula "2"))
                                                            (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                                                            (rule "polySimp_mulAssoc" (formula "12") (term "0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "12") (term "0,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "12") (term "0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "12") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                                            (rule "polySimp_addComm1" (formula "12") (term "0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "12") (term "0"))
                                                            (rule "add_literals" (formula "12") (term "1,1,0"))
                                                            (rule "times_zero_1" (formula "12") (term "1,0"))
                                                            (rule "add_zero_right" (formula "12") (term "0"))
                                                            (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "2"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                                            (rule "polySimp_mulAssoc" (formula "1") (term "0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "0,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                            (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                                                            (rule "applyEq" (formula "9") (term "1,0") (ifseqformula "2"))
                                                            (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                                            (rule "polySimp_addComm0" (formula "9") (term "0,0"))
                                                            (rule "applyEq" (formula "5") (term "1") (ifseqformula "2"))
                                                            (rule "applyEq" (formula "11") (term "1") (ifseqformula "2"))
                                                            (rule "applyEq" (formula "14") (term "1") (ifseqformula "2"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                                            (rule "mul_literals" (formula "3") (term "1"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                                                            (rule "mul_literals" (formula "12") (term "1"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                                                            (rule "polySimp_mulComm0" (formula "9") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "9") (term "1"))
                                                            (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "9") (term "1,1"))
                                                            (rule "polySimp_mulAssoc" (formula "9") (term "0,1"))
                                                            (rule "polySimp_mulComm0" (formula "9") (term "0,0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "9") (term "0,1"))
                                                            (rule "polySimp_elimOne" (formula "9") (term "0,1"))
                                                            (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "12"))
                                                            (rule "leq_literals" (formula "8") (term "0"))
                                                            (rule "concrete_or_1" (formula "8"))
                                                            (rule "true_left" (formula "8"))
                                                            (rule "inEqSimp_contradInEq1" (formula "3") (ifseqformula "11"))
                                                            (rule "qeq_literals" (formula "3") (term "0"))
                                                            (rule "concrete_and_2" (formula "3"))
                                                            (rule "closeFalse" (formula "3"))
                                                         )
                                                         (branch " result_16 >= 1 + result_14 FALSE"
                                                            (rule "ifElseSkipThen" (formula "26") (term "2") (userinteraction))
                                                            (rule "assignment" (formula "26") (term "2") (userinteraction))
                                                            (builtin "Update Simplification" (formula "26"))
                                                            (rule "compound_assignment_op_plus" (formula "26") (term "2") (userinteraction))
                                                            (rule "compound_int_cast_expression" (formula "26") (term "2") (inst "#v=j") (userinteraction))
                                                            (rule "variableDeclarationAssign" (formula "26") (term "2") (userinteraction))
                                                            (rule "variableDeclaration" (formula "26") (term "2") (newnames "j_26") (userinteraction))
                                                            (rule "remove_parentheses_right" (formula "26") (term "2") (userinteraction))
                                                            (rule "compound_addition_2" (formula "26") (term "2") (inst "#v1=j_28") (inst "#v0=j_27") (userinteraction))
                                                            (rule "variableDeclarationAssign" (formula "26") (term "2") (userinteraction))
                                                            (rule "variableDeclaration" (formula "26") (term "2") (newnames "j_27") (userinteraction))
                                                            (rule "translateJavaSubInt" (formula "26") (term "1"))
                                                            (rule "polySimp_elimSub" (formula "26") (term "1"))
                                                            (rule "applyEqRigid" (formula "26") (term "1,0,0,2") (ifseqformula "18"))
                                                            (rule "assignment" (formula "26") (term "2"))
                                                            (builtin "Update Simplification" (formula "26"))
                                                            (rule "variableDeclarationAssign" (formula "26") (term "3"))
                                                            (rule "variableDeclaration" (formula "26") (term "3") (newnames "j_28"))
                                                            (rule "remove_parentheses_right" (formula "26") (term "3"))
                                                            (rule "assignment" (formula "26") (term "3"))
                                                            (builtin "Update Simplification" (formula "26"))
                                                            (rule "castDelInt" (formula "26") (term "2"))
                                                            (rule "assignmentAdditionInt" (formula "26") (term "3"))
                                                            (builtin "Update Simplification" (formula "26"))
                                                            (rule "castDelInt" (formula "26") (term "1,1"))
                                                            (rule "translateJavaAddInt" (formula "26") (term "1"))
                                                            (rule "polySimp_addAssoc" (formula "26") (term "1"))
                                                            (rule "widening_identity_cast_5" (formula "26") (term "2"))
                                                            (rule "assignment" (formula "26") (term "2"))
                                                            (builtin "Update Simplification" (formula "26"))
                                                            (rule "castDelInt" (formula "26") (term "0"))
                                                            (rule "blockEmpty" (formula "26") (term "1"))
                                                            (rule "methodCallReturn" (formula "26") (term "1"))
                                                            (rule "assignment" (formula "26") (term "1"))
                                                            (builtin "Update Simplification" (formula "26"))
                                                            (rule "castDelInt" (formula "26") (term "0"))
                                                            (rule "methodCallEmpty" (formula "26") (term "1"))
                                                            (rule "emptyModality" (formula "26") (term "1"))
                                                            (builtin "Update Simplification" (formula "26"))
                                                            (rule "notRight" (formula "26"))
                                                            (rule "castDelInt" (formula "1") (term "0"))
                                                            (rule "polySimp_sepNegMonomial" (formula "1"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                            (rule "polySimp_elimSub" (formula "7") (term "0"))
                                                            (rule "inEqSimp_geqRight" (formula "26"))
                                                            (rule "inEqSimp_ltRight" (formula "26"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                            (rule "inEqSimp_gtToGeq" (formula "12"))
                                                            (rule "polySimp_mulComm0" (formula "12") (term "1,0,0"))
                                                            (rule "polySimp_addComm0" (formula "9") (term "0"))
                                                            (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                            (rule "polySimp_addComm1" (formula "12") (term "0"))
                                                            (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                            (rule "add_literals" (formula "2") (term "0,0,0"))
                                                            (rule "add_zero_left" (formula "2") (term "0,0"))
                                                            (rule "applyEq" (formula "9") (term "1,0") (ifseqformula "11"))
                                                            (rule "apply_eq_boolean" (formula "19") (term "0") (ifseqformula "27"))
                                                            (rule "eqSymm" (formula "19"))
                                                            (rule "false_to_not_true" (formula "19"))
                                                            (rule "notLeft" (formula "19"))
                                                            (rule "apply_eq_boolean_rigid" (formula "21") (term "1") (ifseqformula "30"))
                                                            (rule "false_to_not_true" (formula "21"))
                                                            (rule "notLeft" (formula "21"))
                                                            (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "11"))
                                                            (rule "applyEq" (formula "12") (term "0,1,0") (ifseqformula "5"))
                                                            (rule "polySimp_addComm1" (formula "12") (term "0"))
                                                            (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "3"))
                                                            (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                            (rule "polySimp_addComm0" (formula "2") (term "0,0"))
                                                            (rule "polySimp_pullOutFactor2b" (formula "2") (term "0"))
                                                            (rule "add_literals" (formula "2") (term "1,1,0"))
                                                            (rule "times_zero_1" (formula "2") (term "1,0"))
                                                            (rule "add_zero_right" (formula "2") (term "0"))
                                                            (rule "applyEq" (formula "9") (term "1,0") (ifseqformula "5"))
                                                            (rule "applyEqRigid" (formula "21") (term "1") (ifseqformula "20"))
                                                            (rule "applyEq" (formula "5") (term "1") (ifseqformula "3"))
                                                            (rule "applyEq" (formula "16") (term "1") (ifseqformula "7"))
                                                            (rule "applyEq" (formula "18") (term "1") (ifseqformula "7"))
                                                            (rule "applyEq" (formula "12") (term "1,0") (ifseqformula "7"))
                                                            (rule "polySimp_addComm1" (formula "12") (term "0"))
                                                            (rule "applyEq" (formula "9") (term "1,0") (ifseqformula "3"))
                                                            (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                                            (rule "polySimp_addComm0" (formula "9") (term "0,0"))
                                                            (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "5"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                            (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                                                            (rule "applyEq" (formula "14") (term "1") (ifseqformula "5"))
                                                            (rule "applyEq" (formula "11") (term "1") (ifseqformula "5"))
                                                            (rule "applyEq" (formula "12") (term "0,1,0") (ifseqformula "3"))
                                                            (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "12") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                                            (rule "polySimp_addComm1" (formula "12") (term "0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "12") (term "0"))
                                                            (rule "add_literals" (formula "12") (term "1,1,0"))
                                                            (rule "times_zero_1" (formula "12") (term "1,0"))
                                                            (rule "add_zero_right" (formula "12") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                                                            (rule "polySimp_mulComm0" (formula "9") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "9") (term "1"))
                                                            (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "9") (term "1,1"))
                                                            (rule "polySimp_mulComm0" (formula "9") (term "0,1"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "12"))
                                                            (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "12") (term "0"))
                                                            (rule "inEqSimp_subsumption0" (formula "2") (ifseqformula "12"))
                                                            (rule "leq_literals" (formula "2") (term "0"))
                                                            (rule "concrete_or_1" (formula "2"))
                                                            (rule "true_left" (formula "2"))
                                                            (rule "inEqSimp_contradInEq1" (formula "11") (ifseqformula "7"))
                                                            (rule "qeq_literals" (formula "11") (term "0"))
                                                            (rule "concrete_and_2" (formula "11"))
                                                            (rule "closeFalse" (formula "11"))
                                                         )
                                                      )
                                                      (branch " Exceptional Post"
                                                         (builtin "Update Simplification" (formula "23"))
                                                         (rule "impRight" (formula "23"))
                                                         (rule "andLeft" (formula "1"))
                                                         (rule "andLeft" (formula "2"))
                                                         (rule "andLeft" (formula "1"))
                                                         (rule "andLeft" (formula "1"))
                                                         (rule "notLeft" (formula "2"))
                                                         (rule "close" (formula "25") (ifseqformula "3"))
                                                      )
                                                   )
                                                   (branch " Null Reference (s2 = null)"
                                                      (builtin "Update Simplification" (formula "1"))
                                                      (builtin "Update Simplification" (formula "24"))
                                                      (rule "close" (formula "28") (ifseqformula "1"))
                                                   )
                                                )
                                                (branch " Exceptional Post"
                                                   (builtin "Update Simplification" (formula "21"))
                                                   (rule "impRight" (formula "21"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "andLeft" (formula "2"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "notLeft" (formula "2"))
                                                   (rule "close" (formula "23") (ifseqformula "3"))
                                                )
                                             )
                                             (branch " Null Reference (s1 = null)"
                                                (builtin "Update Simplification" (formula "1"))
                                                (builtin "Update Simplification" (formula "22"))
                                                (rule "close" (formula "25") (ifseqformula "1"))
                                             )
                                          )
                                       )
                                    )
                                    (branch " Exceptional Post"
                                       (builtin "Update Simplification" (formula "16"))
                                       (rule "impRight" (formula "16"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "andLeft" (formula "2"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "notLeft" (formula "2"))
                                       (rule "close" (formula "19") (ifseqformula "3"))
                                    )
                                 )
                                 (branch " result_2 >  result_6 FALSE"
                                    (rule "ifSkipThen" (formula "16") (term "4") (userinteraction))
                                    (rule "assignment" (formula "16") (term "4") (userinteraction))
                                    (builtin "Update Simplification" (formula "16"))
                                    (rule "for_to_while" (formula "16") (term "4") (inst "#outerLabel=_label3") (inst "#innerLabel=_label2") (userinteraction))
                                    (rule "variableDeclarationAssign" (formula "16") (term "4") (userinteraction))
                                    (rule "variableDeclaration" (formula "16") (term "4") (newnames "i_2") (userinteraction))
                                    (rule "assignment" (formula "16") (term "4") (userinteraction))
                                    (builtin "Update Simplification" (formula "16"))
                                    (rule "cut" (inst "cutFormula=result_2 = result_6") (userinteraction))
                                    (branch " CUT: result_2 = result_6 TRUE"
                                       (rule "equality" (formula "19") (inst "iv=_var4") (userinteraction))
                                       (rule "andRight" (formula "19") (userinteraction))
                                       (branch " Case 1"
                                          (rule "applyEq" (formula "19") (term "0") (ifseqformula "3") (userinteraction))
                                          (rule "applyEq" (formula "19") (term "1") (ifseqformula "7") (userinteraction))
                                          (rule "eqSymm" (formula "19") (userinteraction))
                                          (rule "close" (formula "19") (ifseqformula "1") (userinteraction))
                                       )
                                       (branch " Case 2"
                                          (rule "allRight" (formula "19") (inst "sk=_var4_0") (userinteraction))
                                          (rule "impRight" (formula "19") (userinteraction))
                                          (rule "andLeft" (formula "1") (userinteraction))
                                          (rule "whileInvDiamondDec2" (formula "19") (newnames "i_2_4,d_6,i_2_5,d_7,anon_3,j_98") (inst "variant=m - i_2") (inst "inv=  d >= 0
& (   d = 0
   -> \\forall int k; 
        (   k >= 0 & k <  i_2
         ->   charAt(k, content(t_0))
            = charAt(k, content(s_0))))") (inst "#modifies={i_2,d}") (inst "#v2=j") (inst "#v1=b") (userinteraction))
                                          (branch " Invariant Initially Valid"
                                             (builtin "Update Simplification" (formula "19"))
                                             (rule "castDelInt" (formula "19") (term "0,0,0"))
                                             (rule "qeq_literals" (formula "19") (term "0,0"))
                                             (rule "concrete_and_1" (formula "19") (term "0") (userinteraction))
                                             (rule "castDelInt" (formula "19") (term "0,0,0"))
                                             (rule "eqClose" (formula "19") (term "0,0"))
                                             (rule "concrete_impl_1" (formula "19") (term "0") (userinteraction))
                                             (rule "castDelInt" (formula "19") (term "1,1,0,0,0") (userinteraction))
                                             (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0,0"))
                                             (rule "times_zero_1" (formula "19") (term "1,0,0,1,0,0,0"))
                                             (rule "add_zero_right" (formula "19") (term "0,0,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "19") (term "1,1,0,0,0"))
                                             (rule "castDelInt" (formula "19") (term "1,0,1"))
                                             (rule "polySimp_elimSub" (formula "19") (term "0,1"))
                                             (rule "times_zero_2" (formula "19") (term "1,0,1"))
                                             (rule "add_zero_right" (formula "19") (term "0,1"))
                                             (rule "cut_direct" (formula "19") (term "1"))
                                             (branch " CUT: result_2 >= 0 TRUE"
                                                (rule "concrete_and_3" (formula "20") (userinteraction))
                                                (rule "allRight" (formula "20") (inst "sk=k_8") (userinteraction))
                                                (rule "impRight" (formula "20") (userinteraction))
                                                (rule "andLeft" (formula "1"))
                                                (rule "eqSymm" (formula "6"))
                                                (rule "inEqSimp_gtRight" (formula "21"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "6"))
                                                (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                                (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                (rule "apply_eq_boolean" (formula "17") (term "1") (ifseqformula "28"))
                                                (rule "false_to_not_true" (formula "17"))
                                                (rule "notLeft" (formula "17"))
                                                (rule "applyEq" (formula "23") (term "0") (ifseqformula "14"))
                                                (rule "apply_eq_boolean_rigid" (formula "14") (term "1") (ifseqformula "27"))
                                                (rule "false_to_not_true" (formula "14"))
                                                (rule "notLeft" (formula "14"))
                                                (rule "applyEq" (formula "6") (term "0,1,0") (ifseqformula "9"))
                                                (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "7"))
                                                (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                                                (rule "add_literals" (formula "1") (term "1,0"))
                                                (rule "times_zero_1" (formula "1") (term "0"))
                                                (rule "leq_literals" (formula "1"))
                                                (rule "true_left" (formula "1"))
                                                (rule "applyEq" (formula "15") (term "1") (ifseqformula "14"))
                                                (rule "applyEq" (formula "8") (term "1") (ifseqformula "6"))
                                                (rule "applyEq" (formula "5") (term "0,1,0,0") (ifseqformula "6"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                                                (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                                (rule "polySimp_rightDist" (formula "5") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                                (rule "mul_literals" (formula "5") (term "0,1"))
                                                (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                                (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "2"))
                                                (rule "qeq_literals" (formula "1") (term "0"))
                                                (rule "concrete_and_2" (formula "1"))
                                                (rule "closeFalse" (formula "1"))
                                             )
                                             (branch " CUT: result_2 >= 0 FALSE"
                                                (rule "inEqSimp_geqRight" (formula "19"))
                                                (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "1") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                (rule "mul_literals" (formula "1") (term "1"))
                                                (rule "concrete_and_4" (formula "20") (userinteraction))
                                                (rule "false_right" (formula "20") (userinteraction))
                                                (rule "eqSymm" (formula "4"))
                                                (rule "inEqSimp_gtRight" (formula "19"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "4"))
                                                (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                                (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                (rule "apply_eq_boolean_rigid" (formula "15") (term "1") (ifseqformula "25"))
                                                (rule "false_to_not_true" (formula "15"))
                                                (rule "notLeft" (formula "15"))
                                                (rule "apply_eq_boolean" (formula "12") (term "1") (ifseqformula "25"))
                                                (rule "false_to_not_true" (formula "12"))
                                                (rule "notLeft" (formula "12"))
                                                (rule "applyEq" (formula "4") (term "0,1,0") (ifseqformula "7"))
                                                (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "5"))
                                                (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                                                (rule "add_literals" (formula "1") (term "1,0"))
                                                (rule "times_zero_1" (formula "1") (term "0"))
                                                (rule "leq_literals" (formula "1"))
                                                (rule "true_left" (formula "1"))
                                                (rule "applyEq" (formula "13") (term "1") (ifseqformula "12"))
                                                (rule "applyEq" (formula "6") (term "1") (ifseqformula "4"))
                                                (rule "applyEq" (formula "3") (term "0,1,0,0") (ifseqformula "4"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                                (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                (rule "mul_literals" (formula "3") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                                (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "3"))
                                                (rule "mul_literals" (formula "2") (term "0,0"))
                                                (rule "add_zero_left" (formula "2") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                (rule "mul_literals" (formula "2") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "2"))
                                                (rule "qeq_literals" (formula "1") (term "0"))
                                                (rule "concrete_and_2" (formula "1"))
                                                (rule "closeFalse" (formula "1"))
                                             )
                                          )
                                          (branch " Body Preserves Invariant and Decreases Variant"
                                             (builtin "Update Simplification" (formula "19"))
                                             (rule "concrete_impl_1" (formula "19") (userinteraction))
                                             (rule "impRight" (formula "19") (userinteraction))
                                             (rule "andLeft" (formula "1"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "andLeft" (formula "2"))
                                             (rule "castDelInt" (formula "5") (term "1,0,1"))
                                             (rule "castDelInt" (formula "5") (term "1"))
                                             (rule "polySimp_elimSub" (formula "5") (term "0"))
                                             (rule "polySimp_elimSub" (formula "4") (term "0"))
                                             (rule "polySimp_elimSub" (formula "5") (term "1"))
                                             (rule "times_zero_2" (formula "5") (term "1,1"))
                                             (rule "add_zero_right" (formula "5") (term "1"))
                                             (rule "inEqSimp_ltToLeq" (formula "3") (term "1,0,0,1"))
                                             (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1,0,0,1"))
                                             (rule "polySimp_addComm0" (formula "5") (term "0"))
                                             (rule "polySimp_addComm0" (formula "4") (term "0"))
                                             (rule "inEqSimp_homoInEq0" (formula "5"))
                                             (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                                             (rule "polySimp_mulAssoc" (formula "5") (term "0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "5") (term "0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "5") (term "0,1,0"))
                                             (rule "polySimp_elimOne" (formula "5") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                             (rule "polySimp_addComm0" (formula "5") (term "0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "5") (term "0"))
                                             (rule "add_literals" (formula "5") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "5") (term "1,0"))
                                             (rule "add_zero_right" (formula "5") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "1,0,0,1"))
                                             (rule "polySimp_mulComm0" (formula "3") (term "1,1,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "3") (term "1,1,0,0,1"))
                                             (rule "mul_literals" (formula "3") (term "0,1,1,0,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "3") (term "1,1,1,0,0,1"))
                                             (rule "polySimp_elimOne" (formula "3") (term "1,1,1,0,0,1"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                             (rule "polySimp_mulLiterals" (formula "4") (term "1"))
                                             (rule "polySimp_elimOne" (formula "4") (term "1"))
                                             (rule "nnf_imp2or" (formula "3") (term "0,1"))
                                             (rule "nnf_notAnd" (formula "3") (term "0,0,1"))
                                             (rule "inEqSimp_notGeq" (formula "3") (term "0,0,0,1"))
                                             (rule "times_zero_1" (formula "3") (term "1,0,0,0,0,0,1"))
                                             (rule "add_zero_right" (formula "3") (term "0,0,0,0,0,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "0,0,0,1"))
                                             (rule "mul_literals" (formula "3") (term "1,0,0,0,1"))
                                             (rule "inEqSimp_notLeq" (formula "3") (term "1,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "3") (term "1,0,0,1,0,0,1"))
                                             (rule "mul_literals" (formula "3") (term "0,1,0,0,1,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "3") (term "0,0,1,0,0,1"))
                                             (rule "add_literals" (formula "3") (term "0,0,0,1,0,0,1"))
                                             (rule "add_zero_left" (formula "3") (term "0,0,1,0,0,1"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "3") (term "1,0,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0,1"))
                                             (rule "polySimp_elimOne" (formula "3") (term "1,1,0,0,1"))
                                             (rule "impRight" (formula "24") (userinteraction))
                                             (rule "variableDeclarationAssign" (formula "1") (term "2"))
                                             (rule "variableDeclaration" (formula "1") (term "2") (newnames "b_25"))
                                             (rule "less_than_comparison_new" (formula "1") (term "2"))
                                             (builtin "Update Simplification" (formula "1"))
                                             (rule "inEqSimp_ltToLeq" (formula "1") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "0,0"))
                                             (rule "polySimp_elimOne" (formula "1") (term "0,0"))
                                             (rule "ifthenelse_split_for" (formula "1"))
                                             (branch " result_2 >= 1 + i_2_4 TRUE"
                                                (rule "assignment" (formula "2"))
                                                (rule "methodCallEmpty" (formula "2") (term "1"))
                                                (rule "emptyModality" (formula "2") (term "1"))
                                                (builtin "Update Simplification" (formula "2"))
                                                (rule "boolean_equal" (formula "2"))
                                                (rule "true_left" (formula "2"))
                                                (rule "variableDeclarationAssign" (formula "25") (term "6") (userinteraction))
                                                (rule "variableDeclaration" (formula "25") (term "6") (newnames "exc_26") (userinteraction))
                                                (rule "assignment" (formula "25") (term "6") (userinteraction))
                                                (builtin "Update Simplification" (formula "25"))
                                                (rule "variableDeclaration" (formula "25") (term "7") (newnames "thrownExc_4") (userinteraction))
                                                (rule "ifUnfold" (formula "25") (term "7") (inst "#boolv=b") (userinteraction))
                                                (rule "variableDeclaration" (formula "25") (term "7") (newnames "b_26") (userinteraction))
                                                (rule "less_than_comparison_new" (formula "25") (term "7") (userinteraction))
                                                (builtin "Update Simplification" (formula "25"))
                                                (rule "inEqSimp_ltToLeq" (formula "25") (term "0"))
                                                (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0"))
                                                (rule "polySimp_addComm1" (formula "25") (term "0,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "25") (term "0"))
                                                (rule "polySimp_mulLiterals" (formula "25") (term "0,0"))
                                                (rule "polySimp_elimOne" (formula "25") (term "0,0"))
                                                (rule "replace_known_left" (formula "25") (term "0") (ifseqformula "1"))
                                                (rule "ifthenelse_true_for" (formula "25") (userinteraction))
                                                (rule "ifEnterThen" (formula "25") (term "7") (userinteraction))
                                                (rule "assignment" (formula "25") (term "7") (userinteraction))
                                                (builtin "Update Simplification" (formula "25"))
                                                (rule "variableDeclarationAssign" (formula "25") (term "7") (userinteraction))
                                                (rule "variableDeclaration" (formula "25") (term "7") (newnames "f_4") (userinteraction))
                                                (rule "compound_subtraction_2" (formula "25") (term "7") (inst "#v1=j_1") (inst "#v0=j") (userinteraction))
                                                (rule "variableDeclarationAssign" (formula "25") (term "7") (userinteraction))
                                                (rule "variableDeclaration" (formula "25") (term "7") (newnames "j_99") (userinteraction))
                                                (rule "methodCallWithAssignment" (formula "25") (term "7") (inst "#v0=j_100") (userinteraction))
                                                (branch " Normal Execution (s1 != null)"
                                                   (builtin "Update Simplification" (formula "25"))
                                                   (rule "variableDeclaration" (formula "25") (term "7") (newnames "j_100") (userinteraction))
                                                   (rule "variableDeclarationAssign" (formula "25") (term "7") (userinteraction))
                                                   (rule "variableDeclaration" (formula "25") (term "7") (newnames "arg0_18") (userinteraction))
                                                   (rule "assignment" (formula "25") (term "7") (userinteraction))
                                                   (builtin "Update Simplification" (formula "25"))
                                                   (builtin "Use Operation Contract" (formula "25") (term "8") (newnames "arg0_18_0,result_47") (contract "charAtExc#charAtNormal;;"))
                                                   (branch " Pre"
                                                      (builtin "Update Simplification" (formula "25"))
                                                      (rule "inInt" (formula "25") (term "1,0"))
                                                      (rule "concrete_and_3" (formula "25") (term "0"))
                                                      (rule "eqSymm" (formula "9"))
                                                      (rule "replace_known_left" (formula "25") (term "0,1,0") (ifseqformula "21"))
                                                      (rule "concrete_and_1" (formula "25") (term "1,0"))
                                                      (rule "replace_known_right" (formula "25") (term "0,1,0") (ifseqformula "29"))
                                                      (rule "concrete_not_2" (formula "25") (term "1,0"))
                                                      (rule "concrete_and_3" (formula "25") (term "0"))
                                                      (rule "replace_known_left" (formula "25") (term "0") (ifseqformula "23"))
                                                      (rule "concrete_and_1" (formula "25"))
                                                      (rule "orRight" (formula "25"))
                                                      (rule "orRight" (formula "25"))
                                                      (rule "replace_known_left" (formula "27") (term "0") (ifseqformula "6"))
                                                      (rule "concrete_and_1" (formula "27"))
                                                      (rule "inEqSimp_gtRight" (formula "24"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "9"))
                                                      (rule "polySimp_mulComm0" (formula "9") (term "1,0,0"))
                                                      (rule "inEqSimp_ltRight" (formula "25"))
                                                      (rule "times_zero_1" (formula "1") (term "0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0"))
                                                      (rule "inEqSimp_geqRight" (formula "25"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                      (rule "inEqSimp_ltRight" (formula "26"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "3") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "11") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                      (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                      (rule "applyEq" (formula "3") (term "0,1,0") (ifseqformula "12"))
                                                      (rule "polySimp_pullOutFactor1" (formula "3") (term "0"))
                                                      (rule "add_literals" (formula "3") (term "1,0"))
                                                      (rule "times_zero_1" (formula "3") (term "0"))
                                                      (rule "leq_literals" (formula "3"))
                                                      (rule "true_left" (formula "3"))
                                                      (rule "applyEq" (formula "10") (term "0,1,0") (ifseqformula "13"))
                                                      (rule "polySimp_addComm1" (formula "10") (term "0"))
                                                      (rule "applyEq" (formula "2") (term "0,1,0") (ifseqformula "17"))
                                                      (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "17"))
                                                      (rule "applyEq" (formula "26") (term "0") (ifseqformula "18"))
                                                      (rule "apply_eq_boolean" (formula "18") (term "1") (ifseqformula "30"))
                                                      (rule "false_to_not_true" (formula "18"))
                                                      (rule "notLeft" (formula "18"))
                                                      (rule "apply_eq_boolean" (formula "20") (term "1") (ifseqformula "30"))
                                                      (rule "false_to_not_true" (formula "20"))
                                                      (rule "notLeft" (formula "20"))
                                                      (rule "applyEqRigid" (formula "20") (term "1") (ifseqformula "19"))
                                                      (rule "applyEq" (formula "13") (term "1") (ifseqformula "11"))
                                                      (rule "applyEq" (formula "10") (term "0,1,0,0") (ifseqformula "11"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "9"))
                                                      (rule "polySimp_mulComm0" (formula "9") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "9") (term "1"))
                                                      (rule "mul_literals" (formula "9") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "9") (term "1,1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "2"))
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "inEqSimp_homoInEq1" (formula "1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                                      (rule "add_literals" (formula "1") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "1") (term "1,0"))
                                                      (rule "add_zero_right" (formula "1") (term "0"))
                                                      (rule "leq_literals" (formula "1"))
                                                      (rule "closeFalse" (formula "1"))
                                                   )
                                                   (branch " Post"
                                                      (rule "blockEmpty" (formula "25") (term "1,8,8") (userinteraction))
                                                      (builtin "Update Simplification" (formula "25"))
                                                      (rule "impRight" (formula "25") (userinteraction))
                                                      (rule "inChar" (formula "1") (term "1,1,0"))
                                                      (rule "concrete_and_3" (formula "1") (term "1,0"))
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "typeEqDerived" (formula "2") (term "0,1,1,0") (ifseqformula "1"))
                                                      (rule "boolean_equal" (formula "2") (term "1,1,0"))
                                                      (rule "concrete_and_3" (formula "2") (term "1,0"))
                                                      (rule "andLeft" (formula "2"))
                                                      (rule "eqSymm" (formula "3") (term "1,1"))
                                                      (rule "replace_known_left" (formula "2") (term "0,1") (ifseqformula "1"))
                                                      (rule "concrete_not_1" (formula "2") (term "1"))
                                                      (rule "concrete_impl_3" (formula "2"))
                                                      (rule "notLeft" (formula "2"))
                                                      (rule "orRight" (formula "26"))
                                                      (rule "replace_known_left" (formula "2") (term "0,0") (ifseqformula "8"))
                                                      (rule "concrete_and_1" (formula "2") (term "0"))
                                                      (rule "replace_known_left" (formula "2") (term "0,1") (ifseqformula "1"))
                                                      (rule "concrete_and_1" (formula "2") (term "1"))
                                                      (rule "inEqSimp_ltRight" (formula "26"))
                                                      (rule "times_zero_1" (formula "1") (term "0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0"))
                                                      (rule "inEqSimp_geqRight" (formula "26"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "3") (term "0"))
                                                      (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0"))
                                                      (rule "replace_known_left" (formula "3") (term "0") (ifseqformula "1"))
                                                      (rule "concrete_impl_1" (formula "3"))
                                                      (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                      (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "18"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                      (rule "assignment" (formula "27") (term "8") (userinteraction))
                                                      (builtin "Update Simplification" (formula "27"))
                                                      (rule "variableDeclarationAssign" (formula "27") (term "8") (userinteraction))
                                                      (rule "variableDeclaration" (formula "27") (term "8") (newnames "j_101") (userinteraction))
                                                      (rule "methodCallWithAssignment" (formula "27") (term "8") (inst "#v0=j_102") (userinteraction))
                                                      (branch " Normal Execution (s2 != null)"
                                                         (builtin "Update Simplification" (formula "27"))
                                                         (rule "variableDeclaration" (formula "27") (term "8") (newnames "j_102") (userinteraction))
                                                         (rule "variableDeclarationAssign" (formula "27") (term "8") (userinteraction))
                                                         (rule "variableDeclaration" (formula "27") (term "8") (newnames "arg0_20") (userinteraction))
                                                         (rule "assignment" (formula "27") (term "8") (userinteraction))
                                                         (builtin "Update Simplification" (formula "27"))
                                                         (builtin "Use Operation Contract" (formula "27") (term "9") (newnames "arg0_20_0,result_49") (contract "charAtExc#charAtNormal;;"))
                                                         (branch " Pre"
                                                            (builtin "Update Simplification" (formula "27"))
                                                            (rule "inInt" (formula "27") (term "1,0"))
                                                            (rule "concrete_and_3" (formula "27") (term "0"))
                                                            (rule "eqSymm" (formula "11"))
                                                            (rule "replace_known_left" (formula "27") (term "0,1,0") (ifseqformula "24"))
                                                            (rule "concrete_and_1" (formula "27") (term "1,0"))
                                                            (rule "replace_known_right" (formula "27") (term "0,1,0") (ifseqformula "32"))
                                                            (rule "concrete_not_2" (formula "27") (term "1,0"))
                                                            (rule "concrete_and_3" (formula "27") (term "0"))
                                                            (rule "replace_known_left" (formula "27") (term "0") (ifseqformula "25"))
                                                            (rule "concrete_and_1" (formula "27"))
                                                            (rule "orRight" (formula "27"))
                                                            (rule "orRight" (formula "27"))
                                                            (rule "replace_known_left" (formula "29") (term "0") (ifseqformula "8"))
                                                            (rule "concrete_and_1" (formula "29"))
                                                            (rule "inEqSimp_gtRight" (formula "26"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "11"))
                                                            (rule "polySimp_mulComm0" (formula "11") (term "1,0,0"))
                                                            (rule "inEqSimp_ltRight" (formula "27"))
                                                            (rule "times_zero_1" (formula "1") (term "0,0"))
                                                            (rule "add_zero_left" (formula "1") (term "0"))
                                                            (rule "inEqSimp_geqRight" (formula "27"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                            (rule "inEqSimp_ltRight" (formula "28"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                            (rule "polySimp_addComm0" (formula "3") (term "0"))
                                                            (rule "polySimp_addComm1" (formula "13") (term "0"))
                                                            (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                            (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                            (rule "apply_eq_boolean" (formula "21") (term "1") (ifseqformula "34"))
                                                            (rule "false_to_not_true" (formula "21"))
                                                            (rule "notLeft" (formula "21"))
                                                            (rule "apply_eq_boolean" (formula "23") (term "1") (ifseqformula "33"))
                                                            (rule "false_to_not_true" (formula "23"))
                                                            (rule "notLeft" (formula "23"))
                                                            (rule "applyEq" (formula "3") (term "0,1,0") (ifseqformula "14"))
                                                            (rule "polySimp_pullOutFactor1" (formula "3") (term "0"))
                                                            (rule "add_literals" (formula "3") (term "1,0"))
                                                            (rule "times_zero_1" (formula "3") (term "0"))
                                                            (rule "leq_literals" (formula "3"))
                                                            (rule "true_left" (formula "3"))
                                                            (rule "applyEq" (formula "12") (term "0,1,0") (ifseqformula "15"))
                                                            (rule "polySimp_addComm1" (formula "12") (term "0"))
                                                            (rule "applyEq" (formula "2") (term "0,1,0") (ifseqformula "15"))
                                                            (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "15"))
                                                            (rule "applyEqRigid" (formula "22") (term "1") (ifseqformula "21"))
                                                            (rule "applyEq" (formula "15") (term "1") (ifseqformula "13"))
                                                            (rule "applyEq" (formula "2") (term "0,1,0") (ifseqformula "13"))
                                                            (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "13"))
                                                            (rule "applyEq" (formula "12") (term "0,1,0,0") (ifseqformula "13"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                            (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "11"))
                                                            (rule "polySimp_mulComm0" (formula "11") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "11") (term "1"))
                                                            (rule "mul_literals" (formula "11") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "11") (term "1,1"))
                                                            (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "4"))
                                                            (rule "inEqSimp_homoInEq0" (formula "8") (term "0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0"))
                                                            (rule "add_literals" (formula "8") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "8") (term "1,0,0"))
                                                            (rule "add_literals" (formula "8") (term "0,0"))
                                                            (rule "qeq_literals" (formula "8") (term "0"))
                                                            (rule "concrete_or_1" (formula "8"))
                                                            (rule "true_left" (formula "8"))
                                                            (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "1"))
                                                            (rule "andLeft" (formula "4"))
                                                            (rule "inEqSimp_homoInEq1" (formula "4"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                                                            (rule "add_literals" (formula "4") (term "1,1,0"))
                                                            (rule "times_zero_1" (formula "4") (term "1,0"))
                                                            (rule "add_literals" (formula "4") (term "0"))
                                                            (rule "leq_literals" (formula "4"))
                                                            (rule "closeFalse" (formula "4"))
                                                         )
                                                         (branch " Post"
                                                            (rule "blockEmpty" (formula "27") (term "1,8,9") (userinteraction))
                                                            (builtin "Update Simplification" (formula "27"))
                                                            (rule "impRight" (formula "27") (userinteraction))
                                                            (rule "inChar" (formula "1") (term "1,1,0"))
                                                            (rule "concrete_and_3" (formula "1") (term "1,0"))
                                                            (rule "andLeft" (formula "1"))
                                                            (rule "andLeft" (formula "1"))
                                                            (rule "typeEqDerived" (formula "2") (term "0,1,1,0") (ifseqformula "1"))
                                                            (rule "boolean_equal" (formula "2") (term "1,1,0"))
                                                            (rule "concrete_and_3" (formula "2") (term "1,0"))
                                                            (rule "andLeft" (formula "2"))
                                                            (rule "eqSymm" (formula "3") (term "1,1"))
                                                            (rule "replace_known_left" (formula "2") (term "0,1") (ifseqformula "1"))
                                                            (rule "concrete_not_1" (formula "2") (term "1"))
                                                            (rule "concrete_impl_3" (formula "2"))
                                                            (rule "notLeft" (formula "2"))
                                                            (rule "orRight" (formula "28"))
                                                            (rule "replace_known_left" (formula "2") (term "0,0") (ifseqformula "10"))
                                                            (rule "concrete_and_1" (formula "2") (term "0"))
                                                            (rule "replace_known_left" (formula "2") (term "0,1") (ifseqformula "1"))
                                                            (rule "concrete_and_1" (formula "2") (term "1"))
                                                            (rule "inEqSimp_ltRight" (formula "28"))
                                                            (rule "times_zero_1" (formula "1") (term "0,0"))
                                                            (rule "add_zero_left" (formula "1") (term "0"))
                                                            (rule "inEqSimp_geqRight" (formula "28"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "3") (term "0"))
                                                            (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0"))
                                                            (rule "replace_known_left" (formula "3") (term "0") (ifseqformula "1"))
                                                            (rule "concrete_impl_1" (formula "3"))
                                                            (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                            (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "16"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                            (rule "assignment" (formula "30") (term "9") (userinteraction))
                                                            (builtin "Update Simplification" (formula "30"))
                                                            (rule "assignmentSubtractionInt" (formula "30") (term "9") (userinteraction))
                                                            (builtin "Update Simplification" (formula "30"))
                                                            (rule "ifElseUnfold" (formula "30") (term "8") (inst "#boolv=b") (userinteraction))
                                                            (rule "variableDeclaration" (formula "30") (term "8") (newnames "b_27") (userinteraction))
                                                            (rule "greater_equal_than_comparison_new" (formula "30") (term "8") (userinteraction))
                                                            (builtin "Update Simplification" (formula "30"))
                                                            (rule "castDelInt" (formula "30") (term "0,0"))
                                                            (rule "translateJavaSubInt" (formula "30") (term "0,0"))
                                                            (rule "polySimp_elimSub" (formula "30") (term "0,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "30") (term "0"))
                                                            (rule "polySimp_mulLiterals" (formula "30") (term "0,0"))
                                                            (rule "polySimp_elimOne" (formula "30") (term "0,0"))
                                                            (rule "ifthenelse_split_for" (formula "30") (userinteraction))
                                                            (branch " result_48 <= result_46 TRUE"
                                                               (rule "ifElseSkipElse" (formula "31") (term "8") (userinteraction))
                                                               (rule "assignment" (formula "31") (term "8") (userinteraction))
                                                               (builtin "Update Simplification" (formula "31"))
                                                               (rule "compound_assignment_op_plus" (formula "31") (term "8") (userinteraction))
                                                               (rule "compound_int_cast_expression" (formula "31") (term "8") (inst "#v=j") (userinteraction))
                                                               (rule "variableDeclarationAssign" (formula "31") (term "8") (userinteraction))
                                                               (rule "variableDeclaration" (formula "31") (term "8") (newnames "j_103") (userinteraction))
                                                               (rule "remove_parentheses_right" (formula "31") (term "8") (userinteraction))
                                                               (rule "compound_addition_2" (formula "31") (term "8") (inst "#v1=j_105") (inst "#v0=j_104") (userinteraction))
                                                               (rule "variableDeclarationAssign" (formula "31") (term "8") (userinteraction))
                                                               (rule "variableDeclaration" (formula "31") (term "8") (newnames "j_104") (userinteraction))
                                                               (rule "assignment" (formula "31") (term "8") (userinteraction))
                                                               (builtin "Update Simplification" (formula "31"))
                                                               (rule "variableDeclarationAssign" (formula "31") (term "9") (userinteraction))
                                                               (rule "variableDeclaration" (formula "31") (term "9") (newnames "j_105") (userinteraction))
                                                               (rule "remove_parentheses_right" (formula "31") (term "9") (userinteraction))
                                                               (rule "assignment" (formula "31") (term "9") (userinteraction))
                                                               (builtin "Update Simplification" (formula "31"))
                                                               (rule "assignmentAdditionInt" (formula "31") (term "9") (userinteraction))
                                                               (builtin "Update Simplification" (formula "31"))
                                                               (rule "widening_identity_cast_5" (formula "31") (term "8") (userinteraction))
                                                               (rule "assignment" (formula "31") (term "8") (userinteraction))
                                                               (builtin "Update Simplification" (formula "31"))
                                                               (rule "blockEmpty" (formula "31") (term "7") (userinteraction))
                                                               (rule "preincrement" (formula "31") (term "7") (userinteraction))
                                                               (rule "compound_int_cast_expression" (formula "31") (term "7") (inst "#v=j") (userinteraction))
                                                               (rule "variableDeclarationAssign" (formula "31") (term "7") (userinteraction))
                                                               (rule "variableDeclaration" (formula "31") (term "7") (newnames "j_106") (userinteraction))
                                                               (rule "remove_parentheses_right" (formula "31") (term "7") (userinteraction))
                                                               (rule "assignmentAdditionInt" (formula "31") (term "7") (userinteraction))
                                                               (builtin "Update Simplification" (formula "31"))
                                                               (rule "widening_identity_cast_5" (formula "31") (term "8") (userinteraction))
                                                               (rule "assignment" (formula "31") (term "8") (userinteraction))
                                                               (builtin "Update Simplification" (formula "31"))
                                                               (rule "tryEmpty" (formula "31") (term "7") (userinteraction))
                                                               (rule "methodCallEmpty" (formula "31") (term "7") (userinteraction))
                                                               (rule "emptyModality" (formula "31") (term "7") (userinteraction))
                                                               (builtin "Update Simplification" (formula "31"))
                                                               (rule "boolean_not_equal_2" (formula "31") (term "0,0") (userinteraction))
                                                               (rule "concrete_impl_2" (formula "31") (term "0") (userinteraction))
                                                               (rule "concrete_and_1" (formula "31") (userinteraction))
                                                               (rule "boolean_not_equal_2" (formula "31") (term "0,0") (userinteraction))
                                                               (rule "concrete_not_2" (formula "31") (term "0") (userinteraction))
                                                               (rule "concrete_impl_1" (formula "31") (userinteraction))
                                                               (rule "castDelInt" (formula "31") (term "1,0,1"))
                                                               (rule "translateJavaAddInt" (formula "31") (term "1,0,1"))
                                                               (rule "polySimp_elimSub" (formula "31") (term "0,1"))
                                                               (rule "polySimp_mulComm0" (formula "31") (term "1,0,1"))
                                                               (rule "polySimp_addComm0" (formula "31") (term "1,1,0,1"))
                                                               (rule "polySimp_rightDist" (formula "31") (term "1,0,1"))
                                                               (rule "mul_literals" (formula "31") (term "0,1,0,1"))
                                                               (rule "polySimp_addComm0" (formula "31") (term "0,1"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "1"))
                                                               (rule "polySimp_mulComm0" (formula "31") (term "1,1"))
                                                               (rule "polySimp_rightDist" (formula "31") (term "1,1"))
                                                               (rule "mul_literals" (formula "31") (term "0,1,1"))
                                                               (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1"))
                                                               (rule "polySimp_elimOne" (formula "31") (term "1,1,1"))
                                                               (rule "replace_known_left" (formula "31") (term "1") (ifseqformula "7"))
                                                               (rule "concrete_and_3" (formula "31") (userinteraction))
                                                               (rule "castDelInt" (formula "31") (term "1,1"))
                                                               (rule "castDelInt" (formula "31") (term "1,0,1"))
                                                               (rule "translateJavaAddInt" (formula "31") (term "1,0,1"))
                                                               (rule "polySimp_elimSub" (formula "31") (term "1,1"))
                                                               (rule "polySimp_elimSub" (formula "31") (term "0,1"))
                                                               (rule "polySimp_mulComm0" (formula "31") (term "1,0,1"))
                                                               (rule "inEqSimp_ltToLeq" (formula "31") (term "1"))
                                                               (rule "polySimp_addComm0" (formula "31") (term "1,1,0,0,1"))
                                                               (rule "polySimp_addComm0" (formula "31") (term "1,1,1,0,1"))
                                                               (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1"))
                                                               (rule "polySimp_mulAssoc" (formula "31") (term "0,1,0,0,1"))
                                                               (rule "polySimp_mulComm0" (formula "31") (term "0,0,1,0,0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "31") (term "0,1,0,0,1"))
                                                               (rule "polySimp_elimOne" (formula "31") (term "0,1,0,0,1"))
                                                               (rule "polySimp_rightDist" (formula "31") (term "1,1,0,1"))
                                                               (rule "mul_literals" (formula "31") (term "0,1,1,0,1"))
                                                               (rule "polySimp_addComm0" (formula "31") (term "1,0,1"))
                                                               (rule "polySimp_addAssoc" (formula "31") (term "0,0,1"))
                                                               (rule "polySimp_addAssoc" (formula "31") (term "0,1"))
                                                               (rule "polySimp_addComm1" (formula "31") (term "0,0,1"))
                                                               (rule "polySimp_pullOutFactor2b" (formula "31") (term "0,1"))
                                                               (rule "add_literals" (formula "31") (term "1,1,0,1"))
                                                               (rule "times_zero_1" (formula "31") (term "1,0,1"))
                                                               (rule "add_zero_right" (formula "31") (term "0,1"))
                                                               (rule "polySimp_addAssoc" (formula "31") (term "0,1"))
                                                               (rule "polySimp_addComm1" (formula "31") (term "0,0,1"))
                                                               (rule "add_literals" (formula "31") (term "0,0,0,1"))
                                                               (rule "add_zero_left" (formula "31") (term "0,0,1"))
                                                               (rule "polySimp_pullOutFactor1" (formula "31") (term "0,1"))
                                                               (rule "add_literals" (formula "31") (term "1,0,1"))
                                                               (rule "times_zero_1" (formula "31") (term "0,1"))
                                                               (rule "leq_literals" (formula "31") (term "1"))
                                                               (rule "concrete_and_3" (formula "31") (userinteraction))
                                                               (rule "castDelInt" (formula "31") (term "1,0,0,0,1"))
                                                               (rule "castDelInt" (formula "31") (term "0,0,1"))
                                                               (rule "translateJavaSubInt" (formula "31") (term "1,0,0,1"))
                                                               (rule "translateJavaAddInt" (formula "31") (term "0,0,1"))
                                                               (rule "polySimp_elimSub" (formula "31") (term "1,0,0,1"))
                                                               (rule "polySimp_addAssoc" (formula "31") (term "0,0,1"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "31") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "31") (term "0,0,1"))
                                                               (rule "polySimp_elimOne" (formula "31") (term "0,0,1"))
                                                               (rule "cut_direct" (formula "31") (term "0,1"))
                                                               (branch " CUT: result_48 <= d_6 + result_46 TRUE"
                                                                  (rule "castDelInt" (formula "32") (term "1,0,0,0,1,1"))
                                                                  (rule "castDelInt" (formula "32") (term "0,0,1,1"))
                                                                  (rule "translateJavaSubInt" (formula "32") (term "1,0,0,1,1"))
                                                                  (rule "translateJavaAddInt" (formula "32") (term "0,0,1,1"))
                                                                  (rule "polySimp_elimSub" (formula "32") (term "1,0,0,1,1"))
                                                                  (rule "polySimp_addAssoc" (formula "32") (term "0,0,1,1"))
                                                                  (rule "polySimp_sepNegMonomial" (formula "32") (term "0,1,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "32") (term "0,0,1,1"))
                                                                  (rule "polySimp_elimOne" (formula "32") (term "0,0,1,1"))
                                                                  (rule "concrete_and_1" (formula "32") (term "1") (userinteraction))
                                                                  (rule "replace_known_left" (formula "32") (term "0") (ifseqformula "9") (userinteraction))
                                                                  (rule "concrete_and_1" (formula "32") (userinteraction))
                                                                  (rule "impRight" (formula "32") (userinteraction))
                                                                  (rule "impLeft" (formula "12") (userinteraction))
                                                                  (branch " Case 1"
                                                                     (rule "allRight" (formula "33") (inst "sk=k_3"))
                                                                     (rule "impRight" (formula "33"))
                                                                     (rule "andLeft" (formula "1"))
                                                                     (rule "castDelInt" (formula "2") (term "1"))
                                                                     (rule "eqSymm" (formula "18"))
                                                                     (rule "translateJavaAddInt" (formula "2") (term "1"))
                                                                     (rule "inEqSimp_gtRight" (formula "34"))
                                                                     (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "18"))
                                                                     (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "3"))
                                                                     (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                                     (rule "polySimp_addComm1" (formula "18") (term "0"))
                                                                     (rule "polySimp_addComm0" (formula "3") (term "1,1,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                                                     (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                                                     (rule "add_literals" (formula "3") (term "0,0,0"))
                                                                     (rule "add_zero_left" (formula "3") (term "0,0"))
                                                                     (rule "applyEq" (formula "5") (term "0") (ifseqformula "4"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "5"))
                                                                     (rule "polySimp_pullOutFactor1" (formula "5") (term "0"))
                                                                     (rule "add_literals" (formula "5") (term "1,0"))
                                                                     (rule "times_zero_1" (formula "5") (term "0"))
                                                                     (rule "qeq_literals" (formula "5"))
                                                                     (rule "true_left" (formula "5"))
                                                                     (rule "apply_eq_boolean" (formula "25") (term "0") (ifseqformula "35"))
                                                                     (rule "eqSymm" (formula "25"))
                                                                     (rule "false_to_not_true" (formula "25"))
                                                                     (rule "notLeft" (formula "25"))
                                                                     (rule "apply_eq_boolean" (formula "27") (term "1") (ifseqformula "39"))
                                                                     (rule "false_to_not_true" (formula "27"))
                                                                     (rule "notLeft" (formula "27"))
                                                                     (rule "applyEq" (formula "6") (term "0") (ifseqformula "18"))
                                                                     (rule "applyEq" (formula "5") (term "0") (ifseqformula "4"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "5"))
                                                                     (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                                                                     (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "5") (term "0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                                                     (rule "polySimp_addComm0" (formula "5") (term "0,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "5") (term "0"))
                                                                     (rule "add_literals" (formula "5") (term "1,1,0"))
                                                                     (rule "times_zero_1" (formula "5") (term "1,0"))
                                                                     (rule "add_zero_right" (formula "5") (term "0"))
                                                                     (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "17"))
                                                                     (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                                                                     (rule "add_literals" (formula "1") (term "1,0"))
                                                                     (rule "times_zero_1" (formula "1") (term "0"))
                                                                     (rule "leq_literals" (formula "1"))
                                                                     (rule "true_left" (formula "1"))
                                                                     (rule "applyEq" (formula "15") (term "0,1,0") (ifseqformula "18"))
                                                                     (rule "polySimp_addComm1" (formula "15") (term "0"))
                                                                     (rule "applyEq" (formula "6") (term "1") (ifseqformula "3"))
                                                                     (rule "applyEq" (formula "25") (term "1") (ifseqformula "24"))
                                                                     (rule "applyEq" (formula "18") (term "1") (ifseqformula "16"))
                                                                     (rule "applyEq" (formula "15") (term "0,1,0,0") (ifseqformula "16"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                                                     (rule "polySimp_mulLiterals" (formula "2") (term "1"))
                                                                     (rule "polySimp_elimOne" (formula "2") (term "1"))
                                                                     (rule "inEqSimp_invertInEq1" (formula "4"))
                                                                     (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                                                     (rule "mul_literals" (formula "4") (term "1"))
                                                                     (rule "polySimp_elimOne" (formula "4") (term "0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "15"))
                                                                     (rule "polySimp_mulComm0" (formula "15") (term "1"))
                                                                     (rule "polySimp_rightDist" (formula "15") (term "1"))
                                                                     (rule "mul_literals" (formula "15") (term "0,1"))
                                                                     (rule "polySimp_mulLiterals" (formula "15") (term "1,1"))
                                                                     (rule "polySimp_elimOne" (formula "15") (term "1,1"))
                                                                     (rule "inEqSimp_strengthen0" (formula "4") (ifseqformula "30"))
                                                                     (rule "add_zero_right" (formula "4") (term "1"))
                                                                     (rule "inEqSimp_contradEq3" (formula "30") (ifseqformula "4"))
                                                                     (rule "times_zero_1" (formula "30") (term "1,0,0"))
                                                                     (rule "add_literals" (formula "30") (term "0,0"))
                                                                     (rule "qeq_literals" (formula "30") (term "0"))
                                                                     (rule "concrete_and_2" (formula "30"))
                                                                     (rule "false_right" (formula "30"))
                                                                     (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "9"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "12") (term "0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0"))
                                                                     (rule "add_literals" (formula "12") (term "1,1,0,0"))
                                                                     (rule "times_zero_1" (formula "12") (term "1,0,0"))
                                                                     (rule "add_zero_right" (formula "12") (term "0,0"))
                                                                     (rule "qeq_literals" (formula "12") (term "0"))
                                                                     (rule "concrete_or_1" (formula "12"))
                                                                     (rule "true_left" (formula "12"))
                                                                     (rule "inEqSimp_contradInEq0" (formula "11") (ifseqformula "4"))
                                                                     (rule "qeq_literals" (formula "11") (term "0"))
                                                                     (rule "concrete_and_2" (formula "11"))
                                                                     (rule "closeFalse" (formula "11"))
                                                                  )
                                                                  (branch " Case 2"
                                                                     (rule "castDelInt" (formula "33") (term "1,1,0,0") (userinteraction))
                                                                     (rule "translateJavaAddInt" (formula "33") (term "1,1,0,0") (userinteraction))
                                                                     (rule "allRight" (formula "33") (inst "sk=k_4") (userinteraction))
                                                                     (rule "instAll" (formula "33") (term "0,0,0") (ifseqformula "12") (userinteraction))
                                                                     (rule "orLeft" (formula "1") (userinteraction))
                                                                     (branch " k_4 <= -1 | k_4 >= i_2_4"
                                                                        (rule "orLeft" (formula "1") (userinteraction))
                                                                        (branch " k_4 <= -1"
                                                                           (rule "inEqSimp_contradInEq0" (formula "34") (term "0,0") (ifseqformula "1"))
                                                                           (rule "qeq_literals" (formula "34") (term "0,0,0"))
                                                                           (rule "concrete_and_2" (formula "34") (term "0,0"))
                                                                           (rule "concrete_and_2" (formula "34") (term "0") (userinteraction))
                                                                           (rule "concrete_impl_2" (formula "34") (userinteraction))
                                                                           (rule "closeTrue" (formula "34") (userinteraction))
                                                                        )
                                                                        (branch " k_4 >= i_2_4"
                                                                           (rule "inEqSimp_ltToLeq" (formula "34") (term "1,0"))
                                                                           (rule "polySimp_addComm0" (formula "34") (term "1,1,0,0,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1,0"))
                                                                           (rule "mul_literals" (formula "34") (term "0,1,0,0,1,0"))
                                                                           (rule "polySimp_addAssoc" (formula "34") (term "0,0,1,0"))
                                                                           (rule "add_literals" (formula "34") (term "0,0,0,1,0"))
                                                                           (rule "add_zero_left" (formula "34") (term "0,0,1,0"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0"))
                                                                           (rule "polySimp_elimOne" (formula "34") (term "1,1,0"))
                                                                           (rule "impRight" (formula "34") (userinteraction))
                                                                           (rule "andLeft" (formula "1") (userinteraction))
                                                                           (rule "cut" (inst "cutFormula=k_4 = i_2_4") (userinteraction))
                                                                           (branch " CUT: k_4 = i_2_4 TRUE"
                                                                              (rule "applyEqRigid" (formula "37") (term "0,0") (ifseqformula "1") (userinteraction))
                                                                              (rule "applyEqRigid" (formula "37") (term "0,1") (ifseqformula "1") (userinteraction))
                                                                              (rule "applyEq" (formula "37") (term "0") (ifseqformula "10") (userinteraction))
                                                                              (rule "applyEq" (formula "37") (term "1") (ifseqformula "12") (userinteraction))
                                                                              (rule "eqSymm" (formula "21"))
                                                                              (rule "inEqSimp_gtRight" (formula "36"))
                                                                              (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "21"))
                                                                              (rule "polySimp_mulComm0" (formula "21") (term "1,0,0"))
                                                                              (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                                              (rule "polySimp_addComm1" (formula "21") (term "0"))
                                                                              (rule "apply_eq_boolean" (formula "29") (term "0") (ifseqformula "38"))
                                                                              (rule "eqSymm" (formula "29"))
                                                                              (rule "false_to_not_true" (formula "29"))
                                                                              (rule "notLeft" (formula "29"))
                                                                              (rule "applyEqRigid" (formula "3") (term "0") (ifseqformula "2"))
                                                                              (rule "apply_eq_boolean_rigid" (formula "30") (term "1") (ifseqformula "41"))
                                                                              (rule "false_to_not_true" (formula "30"))
                                                                              (rule "notLeft" (formula "30"))
                                                                              (rule "applyEq" (formula "20") (term "0,1,0") (ifseqformula "23"))
                                                                              (rule "polySimp_addComm1" (formula "20") (term "0"))
                                                                              (rule "applyEqRigid" (formula "3") (term "0") (ifseqformula "2"))
                                                                              (rule "inEqSimp_homoInEq0" (formula "3"))
                                                                              (rule "polySimp_pullOutFactor1" (formula "3") (term "0"))
                                                                              (rule "add_literals" (formula "3") (term "1,0"))
                                                                              (rule "times_zero_1" (formula "3") (term "0"))
                                                                              (rule "qeq_literals" (formula "3"))
                                                                              (rule "true_left" (formula "3"))
                                                                              (rule "applyEq" (formula "6") (term "0") (ifseqformula "4"))
                                                                              (rule "inEqSimp_homoInEq0" (formula "6"))
                                                                              (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
                                                                              (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                                                                              (rule "polySimp_mulComm0" (formula "6") (term "0,1,0"))
                                                                              (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                                                              (rule "polySimp_addComm0" (formula "6") (term "0,0"))
                                                                              (rule "polySimp_pullOutFactor1b" (formula "6") (term "0"))
                                                                              (rule "add_literals" (formula "6") (term "1,1,0"))
                                                                              (rule "times_zero_1" (formula "6") (term "1,0"))
                                                                              (rule "add_zero_right" (formula "6") (term "0"))
                                                                              (rule "applyEqRigid" (formula "3") (term "0") (ifseqformula "2"))
                                                                              (rule "inEqSimp_homoInEq1" (formula "3"))
                                                                              (rule "polySimp_pullOutFactor1" (formula "3") (term "0"))
                                                                              (rule "add_literals" (formula "3") (term "1,0"))
                                                                              (rule "times_zero_1" (formula "3") (term "0"))
                                                                              (rule "leq_literals" (formula "3"))
                                                                              (rule "true_left" (formula "3"))
                                                                              (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "19"))
                                                                              (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                                                                              (rule "add_literals" (formula "1") (term "1,0"))
                                                                              (rule "times_zero_1" (formula "1") (term "0"))
                                                                              (rule "leq_literals" (formula "1"))
                                                                              (rule "true_left" (formula "1"))
                                                                              (rule "applyEq" (formula "32") (term "0") (ifseqformula "2"))
                                                                              (rule "polySimp_homoEq" (formula "32"))
                                                                              (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                                                                              (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                                                                              (rule "polySimp_mulComm0" (formula "32") (term "0,1,0"))
                                                                              (rule "polySimp_addAssoc" (formula "32") (term "0"))
                                                                              (rule "polySimp_addComm0" (formula "32") (term "0,0"))
                                                                              (rule "polySimp_pullOutFactor1b" (formula "32") (term "0"))
                                                                              (rule "add_literals" (formula "32") (term "1,1,0"))
                                                                              (rule "times_zero_1" (formula "32") (term "1,0"))
                                                                              (rule "add_zero_right" (formula "32") (term "0"))
                                                                              (rule "applyEq" (formula "5") (term "0") (ifseqformula "18"))
                                                                              (rule "applyEq" (formula "3") (term "0") (ifseqformula "2"))
                                                                              (rule "inEqSimp_homoInEq0" (formula "3"))
                                                                              (rule "polySimp_pullOutFactor1" (formula "3") (term "0"))
                                                                              (rule "add_literals" (formula "3") (term "1,0"))
                                                                              (rule "times_zero_1" (formula "3") (term "0"))
                                                                              (rule "qeq_literals" (formula "3"))
                                                                              (rule "true_left" (formula "3"))
                                                                              (rule "applyEqRigid" (formula "25") (term "1") (ifseqformula "24"))
                                                                              (rule "applyEq" (formula "18") (term "1") (ifseqformula "16"))
                                                                              (rule "applyEq" (formula "5") (term "1") (ifseqformula "2"))
                                                                              (rule "applyEq" (formula "15") (term "0,1,0,0") (ifseqformula "16"))
                                                                              (rule "polySimp_invertEq" (formula "30"))
                                                                              (rule "mul_literals" (formula "30") (term "1"))
                                                                              (rule "polySimp_mulLiterals" (formula "30") (term "0"))
                                                                              (rule "polySimp_elimOne" (formula "30") (term "0"))
                                                                              (rule "inEqSimp_invertInEq1" (formula "3"))
                                                                              (rule "times_zero_2" (formula "3") (term "1"))
                                                                              (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                                              (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                                              (rule "inEqSimp_sepPosMonomial0" (formula "15"))
                                                                              (rule "polySimp_mulComm0" (formula "15") (term "1"))
                                                                              (rule "polySimp_rightDist" (formula "15") (term "1"))
                                                                              (rule "polySimp_mulLiterals" (formula "15") (term "1,1"))
                                                                              (rule "mul_literals" (formula "15") (term "0,1"))
                                                                              (rule "polySimp_elimOne" (formula "15") (term "1,1"))
                                                                              (rule "inEqSimp_strengthen1" (formula "10") (ifseqformula "30"))
                                                                              (rule "add_zero_right" (formula "10") (term "1"))
                                                                              (rule "inEqSimp_contradEq7" (formula "30") (ifseqformula "10"))
                                                                              (rule "times_zero_1" (formula "30") (term "1,0,0"))
                                                                              (rule "add_literals" (formula "30") (term "0,0"))
                                                                              (rule "leq_literals" (formula "30") (term "0"))
                                                                              (rule "concrete_and_2" (formula "30"))
                                                                              (rule "false_right" (formula "30"))
                                                                              (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "8"))
                                                                              (rule "inEqSimp_homoInEq0" (formula "12") (term "0"))
                                                                              (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0"))
                                                                              (rule "add_literals" (formula "12") (term "1,1,0,0"))
                                                                              (rule "times_zero_1" (formula "12") (term "1,0,0"))
                                                                              (rule "add_literals" (formula "12") (term "0,0"))
                                                                              (rule "qeq_literals" (formula "12") (term "0"))
                                                                              (rule "concrete_or_1" (formula "12"))
                                                                              (rule "true_left" (formula "12"))
                                                                              (rule "inEqSimp_contradInEq1" (formula "3") (ifseqformula "10"))
                                                                              (rule "qeq_literals" (formula "3") (term "0"))
                                                                              (rule "concrete_and_2" (formula "3"))
                                                                              (rule "closeFalse" (formula "3"))
                                                                           )
                                                                           (branch " CUT: k_4 = i_2_4 FALSE"
                                                                              (rule "eqSymm" (formula "20"))
                                                                              (rule "inEqSimp_gtRight" (formula "36"))
                                                                              (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "20"))
                                                                              (rule "polySimp_mulComm0" (formula "20") (term "1,0,0"))
                                                                              (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                                              (rule "polySimp_addComm1" (formula "20") (term "0"))
                                                                              (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "21"))
                                                                              (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                                                                              (rule "add_literals" (formula "1") (term "1,0"))
                                                                              (rule "times_zero_1" (formula "1") (term "0"))
                                                                              (rule "leq_literals" (formula "1"))
                                                                              (rule "true_left" (formula "1"))
                                                                              (rule "applyEq" (formula "19") (term "0,1,0") (ifseqformula "22"))
                                                                              (rule "polySimp_addComm1" (formula "19") (term "0"))
                                                                              (rule "applyEq" (formula "5") (term "0") (ifseqformula "4"))
                                                                              (rule "inEqSimp_homoInEq0" (formula "5"))
                                                                              (rule "polySimp_pullOutFactor1" (formula "5") (term "0"))
                                                                              (rule "add_literals" (formula "5") (term "1,0"))
                                                                              (rule "times_zero_1" (formula "5") (term "0"))
                                                                              (rule "qeq_literals" (formula "5"))
                                                                              (rule "true_left" (formula "5"))
                                                                              (rule "applyEq" (formula "6") (term "0") (ifseqformula "19"))
                                                                              (rule "apply_eq_boolean" (formula "25") (term "1") (ifseqformula "40"))
                                                                              (rule "false_to_not_true" (formula "25"))
                                                                              (rule "notLeft" (formula "25"))
                                                                              (rule "apply_eq_boolean" (formula "27") (term "1") (ifseqformula "39"))
                                                                              (rule "false_to_not_true" (formula "27"))
                                                                              (rule "notLeft" (formula "27"))
                                                                              (rule "applyEq" (formula "5") (term "0") (ifseqformula "4"))
                                                                              (rule "inEqSimp_homoInEq0" (formula "5"))
                                                                              (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                                                                              (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                                                                              (rule "polySimp_mulComm0" (formula "5") (term "0,1,0"))
                                                                              (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                                                              (rule "polySimp_addComm0" (formula "5") (term "0,0"))
                                                                              (rule "polySimp_pullOutFactor1b" (formula "5") (term "0"))
                                                                              (rule "add_literals" (formula "5") (term "1,1,0"))
                                                                              (rule "times_zero_1" (formula "5") (term "1,0"))
                                                                              (rule "add_zero_right" (formula "5") (term "0"))
                                                                              (rule "applyEq" (formula "20") (term "1") (ifseqformula "18"))
                                                                              (rule "applyEqRigid" (formula "27") (term "1") (ifseqformula "26"))
                                                                              (rule "applyEq" (formula "7") (term "1") (ifseqformula "4"))
                                                                              (rule "applyEq" (formula "17") (term "0,1,0,0") (ifseqformula "18"))
                                                                              (rule "inEqSimp_invertInEq1" (formula "5"))
                                                                              (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                                                              (rule "mul_literals" (formula "5") (term "1"))
                                                                              (rule "polySimp_elimOne" (formula "5") (term "0"))
                                                                              (rule "inEqSimp_sepPosMonomial0" (formula "17"))
                                                                              (rule "polySimp_mulComm0" (formula "17") (term "1"))
                                                                              (rule "polySimp_rightDist" (formula "17") (term "1"))
                                                                              (rule "polySimp_mulLiterals" (formula "17") (term "1,1"))
                                                                              (rule "mul_literals" (formula "17") (term "0,1"))
                                                                              (rule "polySimp_elimOne" (formula "17") (term "1,1"))
                                                                              (rule "inEqSimp_strengthen1" (formula "3") (ifseqformula "32"))
                                                                              (rule "inEqSimp_contradEq7" (formula "32") (ifseqformula "3"))
                                                                              (rule "polySimp_mulComm0" (formula "32") (term "1,0,0"))
                                                                              (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,0"))
                                                                              (rule "add_literals" (formula "32") (term "1,1,0,0"))
                                                                              (rule "times_zero_1" (formula "32") (term "1,0,0"))
                                                                              (rule "add_zero_right" (formula "32") (term "0,0"))
                                                                              (rule "leq_literals" (formula "32") (term "0"))
                                                                              (rule "concrete_and_2" (formula "32"))
                                                                              (rule "false_right" (formula "32"))
                                                                              (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "10"))
                                                                              (rule "inEqSimp_homoInEq0" (formula "14") (term "0"))
                                                                              (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0"))
                                                                              (rule "add_literals" (formula "14") (term "1,1,0,0"))
                                                                              (rule "times_zero_1" (formula "14") (term "1,0,0"))
                                                                              (rule "add_zero_right" (formula "14") (term "0,0"))
                                                                              (rule "qeq_literals" (formula "14") (term "0"))
                                                                              (rule "concrete_or_1" (formula "14"))
                                                                              (rule "true_left" (formula "14"))
                                                                              (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "3"))
                                                                              (rule "andLeft" (formula "2"))
                                                                              (rule "inEqSimp_homoInEq1" (formula "2"))
                                                                              (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                                                              (rule "add_literals" (formula "2") (term "1,1,0"))
                                                                              (rule "times_zero_1" (formula "2") (term "1,0"))
                                                                              (rule "add_literals" (formula "2") (term "0"))
                                                                              (rule "leq_literals" (formula "2"))
                                                                              (rule "closeFalse" (formula "2"))
                                                                           )
                                                                        )
                                                                     )
                                                                     (branch " charAt(k_4, content(t_0)) = charAt(k_4, content(s_0))"
                                                                        (rule "impRight" (formula "34") (userinteraction))
                                                                        (rule "close" (formula "35") (ifseqformula "2") (userinteraction))
                                                                     )
                                                                  )
                                                               )
                                                               (branch " CUT: result_48 <= d_6 + result_46 FALSE"
                                                                  (rule "inEqSimp_leqRight" (formula "31"))
                                                                  (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                                  (rule "polySimp_rightDist" (formula "1") (term "0,1"))
                                                                  (rule "mul_literals" (formula "1") (term "0,0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1"))
                                                                  (rule "polySimp_elimOne" (formula "1") (term "1,0,1"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                                                                  (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                                  (rule "polySimp_pullOutFactor2b" (formula "1") (term "0"))
                                                                  (rule "add_literals" (formula "1") (term "1,1,0"))
                                                                  (rule "times_zero_1" (formula "1") (term "1,0"))
                                                                  (rule "add_zero_right" (formula "1") (term "0"))
                                                                  (rule "polySimp_rightDist" (formula "1") (term "0"))
                                                                  (rule "mul_literals" (formula "1") (term "0,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "11"))
                                                                  (rule "qeq_literals" (formula "1") (term "0"))
                                                                  (rule "concrete_and_2" (formula "1"))
                                                                  (rule "closeFalse" (formula "1"))
                                                               )
                                                            )
                                                            (branch " result_48 <= result_46 FALSE"
                                                               (rule "ifElseSkipThen" (formula "31") (term "8") (userinteraction))
                                                               (rule "assignment" (formula "31") (term "8") (userinteraction))
                                                               (builtin "Update Simplification" (formula "31"))
                                                               (rule "compound_assignment_op_plus" (formula "31") (term "8") (userinteraction))
                                                               (rule "compound_int_cast_expression" (formula "31") (term "8") (inst "#v=j") (userinteraction))
                                                               (rule "variableDeclarationAssign" (formula "31") (term "8") (userinteraction))
                                                               (rule "variableDeclaration" (formula "31") (term "8") (newnames "j_107") (userinteraction))
                                                               (rule "remove_parentheses_right" (formula "31") (term "8") (userinteraction))
                                                               (rule "compound_addition_2" (formula "31") (term "8") (inst "#v1=j_109") (inst "#v0=j_108") (userinteraction))
                                                               (rule "variableDeclarationAssign" (formula "31") (term "8") (userinteraction))
                                                               (rule "variableDeclaration" (formula "31") (term "8") (newnames "j_108") (userinteraction))
                                                               (rule "assignment" (formula "31") (term "8") (userinteraction))
                                                               (builtin "Update Simplification" (formula "31"))
                                                               (rule "variableDeclarationAssign" (formula "31") (term "9") (userinteraction))
                                                               (rule "variableDeclaration" (formula "31") (term "9") (newnames "j_109") (userinteraction))
                                                               (rule "remove_parentheses_right" (formula "31") (term "9") (userinteraction))
                                                               (rule "unaryMinusInt" (formula "31") (term "9") (userinteraction))
                                                               (builtin "Update Simplification" (formula "31"))
                                                               (rule "assignmentAdditionInt" (formula "31") (term "9") (userinteraction))
                                                               (builtin "Update Simplification" (formula "31"))
                                                               (rule "widening_identity_cast_5" (formula "31") (term "8") (userinteraction))
                                                               (rule "assignment" (formula "31") (term "8") (userinteraction))
                                                               (builtin "Update Simplification" (formula "31"))
                                                               (rule "blockEmpty" (formula "31") (term "7") (userinteraction))
                                                               (rule "preincrement" (formula "31") (term "7") (userinteraction))
                                                               (rule "compound_int_cast_expression" (formula "31") (term "7") (inst "#v=j") (userinteraction))
                                                               (rule "variableDeclarationAssign" (formula "31") (term "7") (userinteraction))
                                                               (rule "variableDeclaration" (formula "31") (term "7") (newnames "j_110") (userinteraction))
                                                               (rule "remove_parentheses_right" (formula "31") (term "7") (userinteraction))
                                                               (rule "assignmentAdditionInt" (formula "31") (term "7") (userinteraction))
                                                               (builtin "Update Simplification" (formula "31"))
                                                               (rule "widening_identity_cast_5" (formula "31") (term "8") (userinteraction))
                                                               (rule "assignment" (formula "31") (term "8") (userinteraction))
                                                               (builtin "Update Simplification" (formula "31"))
                                                               (rule "tryEmpty" (formula "31") (term "7") (userinteraction))
                                                               (rule "methodCallEmpty" (formula "31") (term "7") (userinteraction))
                                                               (rule "emptyModality" (formula "31") (term "7") (userinteraction))
                                                               (builtin "Update Simplification" (formula "31"))
                                                               (rule "boolean_not_equal_2" (formula "31") (term "0,0") (userinteraction))
                                                               (rule "concrete_impl_2" (formula "31") (term "0") (userinteraction))
                                                               (rule "concrete_and_1" (formula "31") (userinteraction))
                                                               (rule "boolean_not_equal_2" (formula "31") (term "0,0") (userinteraction))
                                                               (rule "concrete_not_2" (formula "31") (term "0") (userinteraction))
                                                               (rule "concrete_impl_1" (formula "31") (userinteraction))
                                                               (rule "castDelInt" (formula "31") (term "1,0,1"))
                                                               (rule "translateJavaAddInt" (formula "31") (term "1,0,1"))
                                                               (rule "polySimp_elimSub" (formula "31") (term "0,1"))
                                                               (rule "polySimp_mulComm0" (formula "31") (term "1,0,1"))
                                                               (rule "polySimp_addComm0" (formula "31") (term "1,1,0,1"))
                                                               (rule "polySimp_rightDist" (formula "31") (term "1,0,1"))
                                                               (rule "mul_literals" (formula "31") (term "0,1,0,1"))
                                                               (rule "polySimp_addComm0" (formula "31") (term "0,1"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "1"))
                                                               (rule "polySimp_mulComm0" (formula "31") (term "1,1"))
                                                               (rule "polySimp_rightDist" (formula "31") (term "1,1"))
                                                               (rule "mul_literals" (formula "31") (term "0,1,1"))
                                                               (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1"))
                                                               (rule "polySimp_elimOne" (formula "31") (term "1,1,1"))
                                                               (rule "replace_known_left" (formula "31") (term "1") (ifseqformula "6"))
                                                               (rule "andRight" (formula "31") (userinteraction))
                                                               (branch " Case 1"
                                                                  (rule "castDelInt" (formula "31") (term "1,1"))
                                                                  (rule "castDelInt" (formula "31") (term "1,0,1"))
                                                                  (rule "translateJavaAddInt" (formula "31") (term "1,0,1"))
                                                                  (rule "polySimp_elimSub" (formula "31") (term "1,1"))
                                                                  (rule "polySimp_elimSub" (formula "31") (term "0,1"))
                                                                  (rule "polySimp_mulComm0" (formula "31") (term "1,0,1"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "31") (term "1"))
                                                                  (rule "polySimp_addComm0" (formula "31") (term "1,1,0,0,1"))
                                                                  (rule "polySimp_addComm0" (formula "31") (term "1,1,1,0,1"))
                                                                  (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1"))
                                                                  (rule "polySimp_mulAssoc" (formula "31") (term "0,1,0,0,1"))
                                                                  (rule "polySimp_mulComm0" (formula "31") (term "0,0,1,0,0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "31") (term "0,1,0,0,1"))
                                                                  (rule "polySimp_elimOne" (formula "31") (term "0,1,0,0,1"))
                                                                  (rule "polySimp_rightDist" (formula "31") (term "1,1,0,1"))
                                                                  (rule "mul_literals" (formula "31") (term "0,1,1,0,1"))
                                                                  (rule "polySimp_addComm0" (formula "31") (term "1,0,1"))
                                                                  (rule "polySimp_addAssoc" (formula "31") (term "0,0,1"))
                                                                  (rule "polySimp_addAssoc" (formula "31") (term "0,1"))
                                                                  (rule "polySimp_addComm1" (formula "31") (term "0,0,1"))
                                                                  (rule "polySimp_pullOutFactor2b" (formula "31") (term "0,1"))
                                                                  (rule "add_literals" (formula "31") (term "1,1,0,1"))
                                                                  (rule "times_zero_1" (formula "31") (term "1,0,1"))
                                                                  (rule "add_zero_right" (formula "31") (term "0,1"))
                                                                  (rule "polySimp_addAssoc" (formula "31") (term "0,1"))
                                                                  (rule "polySimp_addComm1" (formula "31") (term "0,0,1"))
                                                                  (rule "add_literals" (formula "31") (term "0,0,0,1"))
                                                                  (rule "add_zero_left" (formula "31") (term "0,0,1"))
                                                                  (rule "polySimp_pullOutFactor1" (formula "31") (term "0,1"))
                                                                  (rule "add_literals" (formula "31") (term "1,0,1"))
                                                                  (rule "times_zero_1" (formula "31") (term "0,1"))
                                                                  (rule "leq_literals" (formula "31") (term "1"))
                                                                  (rule "andRight" (formula "31") (userinteraction))
                                                                  (branch " Case 1"
                                                                     (rule "replace_known_left" (formula "31") (term "0") (ifseqformula "7") (userinteraction))
                                                                     (rule "shift_paren_and" (formula "31") (userinteraction))
                                                                     (rule "concrete_and_1" (formula "31") (term "0") (userinteraction))
                                                                     (rule "castDelInt" (formula "31") (term "0,0,1,0,0,0"))
                                                                     (rule "castDelInt" (formula "31") (term "0,0"))
                                                                     (rule "castDelInt" (formula "31") (term "1,0,0"))
                                                                     (rule "translateJavaSubInt" (formula "31") (term "0,1,0,0"))
                                                                     (rule "translateJavaAddInt" (formula "31") (term "0,0"))
                                                                     (rule "translateJavaUnaryMinusInt" (formula "31") (term "1,0,0"))
                                                                     (rule "polySimp_elimNeg" (formula "31") (term "1,0,0"))
                                                                     (rule "polySimp_elimSub" (formula "31") (term "0,1,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "31") (term "1,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "31") (term "1,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "31") (term "0,1,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "31") (term "0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "0"))
                                                                     (rule "polySimp_mulComm0" (formula "31") (term "1,0"))
                                                                     (rule "polySimp_rightDist" (formula "31") (term "1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "31") (term "1,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "31") (term "0,1,0"))
                                                                     (rule "andRight" (formula "31") (userinteraction))
                                                                     (branch " Case 1"
                                                                        (rule "eqSymm" (formula "14"))
                                                                        (rule "inEqSimp_leqRight" (formula "30"))
                                                                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                                        (rule "inEqSimp_gtRight" (formula "30"))
                                                                        (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                                        (rule "inEqSimp_geqRight" (formula "31"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "16"))
                                                                        (rule "polySimp_mulComm0" (formula "16") (term "1,0,0"))
                                                                        (rule "polySimp_addComm0" (formula "2") (term "0"))
                                                                        (rule "polySimp_addComm1" (formula "16") (term "0"))
                                                                        (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                                        (rule "polySimp_mulAssoc" (formula "1") (term "0,1,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "1") (term "0,0,1,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "1") (term "0,1,0,0"))
                                                                        (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                                        (rule "applyEq" (formula "2") (term "0,1,0") (ifseqformula "17"))
                                                                        (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                                                                        (rule "add_literals" (formula "2") (term "1,0"))
                                                                        (rule "times_zero_1" (formula "2") (term "0"))
                                                                        (rule "leq_literals" (formula "2"))
                                                                        (rule "true_left" (formula "2"))
                                                                        (rule "apply_eq_boolean" (formula "23") (term "0") (ifseqformula "31"))
                                                                        (rule "eqSymm" (formula "23"))
                                                                        (rule "false_to_not_true" (formula "23"))
                                                                        (rule "notLeft" (formula "23"))
                                                                        (rule "applyEq" (formula "3") (term "0") (ifseqformula "16"))
                                                                        (rule "apply_eq_boolean" (formula "24") (term "1") (ifseqformula "34"))
                                                                        (rule "false_to_not_true" (formula "24"))
                                                                        (rule "notLeft" (formula "24"))
                                                                        (rule "applyEq" (formula "14") (term "0,1,0") (ifseqformula "17"))
                                                                        (rule "polySimp_addComm1" (formula "14") (term "0"))
                                                                        (rule "applyEq" (formula "24") (term "1") (ifseqformula "23"))
                                                                        (rule "applyEq" (formula "17") (term "1") (ifseqformula "15"))
                                                                        (rule "applyEq" (formula "14") (term "0,1,0,0") (ifseqformula "15"))
                                                                        (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                                        (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                                        (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                                        (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                                        (rule "mul_literals" (formula "2") (term "0,1"))
                                                                        (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                                        (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                                        (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                                        (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                                        (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                                        (rule "polySimp_rightDist" (formula "1") (term "0,1"))
                                                                        (rule "mul_literals" (formula "1") (term "0,0,1"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "14"))
                                                                        (rule "polySimp_mulComm0" (formula "14") (term "1"))
                                                                        (rule "polySimp_rightDist" (formula "14") (term "1"))
                                                                        (rule "polySimp_mulLiterals" (formula "14") (term "1,1"))
                                                                        (rule "mul_literals" (formula "14") (term "0,1"))
                                                                        (rule "polySimp_elimOne" (formula "14") (term "1,1"))
                                                                        (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "7"))
                                                                        (rule "inEqSimp_homoInEq0" (formula "11") (term "0"))
                                                                        (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0"))
                                                                        (rule "add_literals" (formula "11") (term "1,1,0,0"))
                                                                        (rule "times_zero_1" (formula "11") (term "1,0,0"))
                                                                        (rule "add_literals" (formula "11") (term "0,0"))
                                                                        (rule "qeq_literals" (formula "11") (term "0"))
                                                                        (rule "concrete_or_1" (formula "11"))
                                                                        (rule "true_left" (formula "11"))
                                                                        (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "13"))
                                                                        (rule "times_zero_1" (formula "12") (term "0,0"))
                                                                        (rule "add_zero_left" (formula "12") (term "0"))
                                                                        (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                                                                        (rule "mul_literals" (formula "12") (term "1"))
                                                                        (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "1"))
                                                                        (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                                        (rule "mul_literals" (formula "2") (term "0,0,0"))
                                                                        (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                                        (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                                                        (rule "polySimp_pullOutFactor2b" (formula "2") (term "0"))
                                                                        (rule "add_literals" (formula "2") (term "1,1,0"))
                                                                        (rule "times_zero_1" (formula "2") (term "1,0"))
                                                                        (rule "add_zero_right" (formula "2") (term "0"))
                                                                        (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                                        (rule "add_literals" (formula "2") (term "0,0"))
                                                                        (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                                        (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                                        (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                                        (rule "inEqSimp_contradEq3" (formula "11") (term "0") (ifseqformula "2"))
                                                                        (rule "times_zero_1" (formula "11") (term "1,0,0,0"))
                                                                        (rule "add_zero_right" (formula "11") (term "0,0,0"))
                                                                        (rule "qeq_literals" (formula "11") (term "0,0"))
                                                                        (rule "concrete_and_2" (formula "11") (term "0"))
                                                                        (rule "concrete_impl_2" (formula "11"))
                                                                        (rule "true_left" (formula "11"))
                                                                        (rule "inEqSimp_contradInEq0" (formula "10") (ifseqformula "2"))
                                                                        (rule "qeq_literals" (formula "10") (term "0"))
                                                                        (rule "concrete_and_2" (formula "10"))
                                                                        (rule "closeFalse" (formula "10"))
                                                                     )
                                                                     (branch " Case 2"
                                                                        (rule "impRight" (formula "31") (userinteraction))
                                                                        (rule "castDelInt" (formula "1") (term "0,0,1,0,0"))
                                                                        (rule "castDelInt" (formula "1") (term "0"))
                                                                        (rule "castDelInt" (formula "1") (term "1,0"))
                                                                        (rule "translateJavaAddInt" (formula "1") (term "0"))
                                                                        (rule "translateJavaUnaryMinusInt" (formula "1") (term "1,0"))
                                                                        (rule "translateJavaSubInt" (formula "1") (term "0,1,0"))
                                                                        (rule "polySimp_elimNeg" (formula "1") (term "1,0"))
                                                                        (rule "polySimp_elimSub" (formula "1") (term "0,1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                                                        (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                                                                        (rule "polySimp_elimOne" (formula "1") (term "1,1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "1") (term "0,1,0"))
                                                                        (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                                        (rule "polySimp_sepPosMonomial" (formula "1"))
                                                                        (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                                        (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                                        (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                                        (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                                        (rule "polySimp_mulComm0" (formula "1") (term "0,1"))
                                                                        (rule "times_minus_one_1" (formula "1") (term "0,1") (userinteraction))
                                                                        (rule "impLeft" (formula "10") (userinteraction))
                                                                        (branch " Case 1"
                                                                           (rule "allRight" (formula "32") (inst "sk=k_6"))
                                                                           (rule "impRight" (formula "32"))
                                                                           (rule "andLeft" (formula "1"))
                                                                           (rule "castDelInt" (formula "2") (term "1"))
                                                                           (rule "eqSymm" (formula "16"))
                                                                           (rule "translateJavaAddInt" (formula "2") (term "1"))
                                                                           (rule "polySimp_elimNeg" (formula "3") (term "0,1"))
                                                                           (rule "inEqSimp_gtRight" (formula "32"))
                                                                           (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                                           (rule "inEqSimp_leqRight" (formula "33"))
                                                                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "17"))
                                                                           (rule "polySimp_mulComm0" (formula "17") (term "1,0,0"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "4"))
                                                                           (rule "polySimp_addComm0" (formula "2") (term "0"))
                                                                           (rule "polySimp_addComm1" (formula "17") (term "0"))
                                                                           (rule "polySimp_addComm0" (formula "4") (term "1,1,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                                                                           (rule "mul_literals" (formula "4") (term "0,1,0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                                                           (rule "add_literals" (formula "4") (term "0,0,0"))
                                                                           (rule "add_zero_left" (formula "4") (term "0,0"))
                                                                           (rule "applyEq" (formula "17") (term "0,1,0") (ifseqformula "20"))
                                                                           (rule "polySimp_addComm1" (formula "17") (term "0"))
                                                                           (rule "apply_eq_boolean" (formula "25") (term "0") (ifseqformula "35"))
                                                                           (rule "eqSymm" (formula "25"))
                                                                           (rule "false_to_not_true" (formula "25"))
                                                                           (rule "notLeft" (formula "25"))
                                                                           (rule "applyEq" (formula "6") (term "0") (ifseqformula "18"))
                                                                           (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "5"))
                                                                           (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                                           (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                                                           (rule "polySimp_pullOutFactor2b" (formula "1") (term "0"))
                                                                           (rule "add_literals" (formula "1") (term "1,1,0"))
                                                                           (rule "times_zero_1" (formula "1") (term "1,0"))
                                                                           (rule "add_zero_right" (formula "1") (term "0"))
                                                                           (rule "apply_eq_boolean_rigid" (formula "26") (term "1") (ifseqformula "38"))
                                                                           (rule "false_to_not_true" (formula "26"))
                                                                           (rule "notLeft" (formula "26"))
                                                                           (rule "applyEq" (formula "2") (term "0,1,0") (ifseqformula "17"))
                                                                           (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                                                                           (rule "add_literals" (formula "2") (term "1,0"))
                                                                           (rule "times_zero_1" (formula "2") (term "0"))
                                                                           (rule "leq_literals" (formula "2"))
                                                                           (rule "true_left" (formula "2"))
                                                                           (rule "applyEq" (formula "18") (term "1") (ifseqformula "16"))
                                                                           (rule "applyEq" (formula "25") (term "1") (ifseqformula "24"))
                                                                           (rule "applyEq" (formula "6") (term "1") (ifseqformula "4"))
                                                                           (rule "applyEq" (formula "15") (term "0,1,0,0") (ifseqformula "16"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                                                           (rule "polySimp_mulLiterals" (formula "3") (term "1"))
                                                                           (rule "polySimp_elimOne" (formula "3") (term "1"))
                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                                           (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                                           (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "15"))
                                                                           (rule "polySimp_mulComm0" (formula "15") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "15") (term "1"))
                                                                           (rule "mul_literals" (formula "15") (term "0,1"))
                                                                           (rule "polySimp_mulLiterals" (formula "15") (term "1,1"))
                                                                           (rule "polySimp_elimOne" (formula "15") (term "1,1"))
                                                                           (rule "inEqSimp_contradEq3" (formula "30") (ifseqformula "1"))
                                                                           (rule "times_zero_1" (formula "30") (term "1,0,0"))
                                                                           (rule "add_literals" (formula "30") (term "0,0"))
                                                                           (rule "qeq_literals" (formula "30") (term "0"))
                                                                           (rule "concrete_and_2" (formula "30"))
                                                                           (rule "false_right" (formula "30"))
                                                                           (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "9"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "12") (term "0"))
                                                                           (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0"))
                                                                           (rule "add_literals" (formula "12") (term "1,1,0,0"))
                                                                           (rule "times_zero_1" (formula "12") (term "1,0,0"))
                                                                           (rule "add_zero_right" (formula "12") (term "0,0"))
                                                                           (rule "qeq_literals" (formula "12") (term "0"))
                                                                           (rule "concrete_or_1" (formula "12"))
                                                                           (rule "true_left" (formula "12"))
                                                                           (rule "inEqSimp_contradInEq0" (formula "11") (ifseqformula "1"))
                                                                           (rule "qeq_literals" (formula "11") (term "0"))
                                                                           (rule "concrete_and_2" (formula "11"))
                                                                           (rule "closeFalse" (formula "11"))
                                                                        )
                                                                        (branch " Case 2"
                                                                           (rule "allRight" (formula "32") (inst "sk=k_7") (userinteraction))
                                                                           (rule "instAll" (formula "32") (term "0,0,0") (ifseqformula "10") (userinteraction))
                                                                           (rule "impRight" (formula "33") (userinteraction))
                                                                           (rule "castDelInt" (formula "1") (term "1,1") (userinteraction))
                                                                           (rule "translateJavaAddInt" (formula "1") (term "1,1") (userinteraction))
                                                                           (rule "andLeft" (formula "1") (userinteraction))
                                                                           (rule "orLeft" (formula "3") (userinteraction))
                                                                           (branch " k_7 <= -1 | k_7 >= i_2_4"
                                                                              (rule "eqSymm" (formula "18"))
                                                                              (rule "polySimp_elimNeg" (formula "4") (term "0,1"))
                                                                              (rule "inEqSimp_gtRight" (formula "33"))
                                                                              (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                                              (rule "inEqSimp_leqRight" (formula "34"))
                                                                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "19"))
                                                                              (rule "polySimp_mulComm0" (formula "19") (term "1,0,0"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "4"))
                                                                              (rule "polySimp_addComm0" (formula "2") (term "0"))
                                                                              (rule "polySimp_addComm1" (formula "19") (term "0"))
                                                                              (rule "polySimp_addComm0" (formula "4") (term "1,1,0,0"))
                                                                              (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                                                                              (rule "mul_literals" (formula "4") (term "0,1,0,0"))
                                                                              (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                                                              (rule "add_literals" (formula "4") (term "0,0,0"))
                                                                              (rule "add_zero_left" (formula "4") (term "0,0"))
                                                                              (rule "applyEq" (formula "19") (term "0,1,0") (ifseqformula "22"))
                                                                              (rule "polySimp_addComm1" (formula "19") (term "0"))
                                                                              (rule "apply_eq_boolean" (formula "27") (term "0") (ifseqformula "36"))
                                                                              (rule "eqSymm" (formula "27"))
                                                                              (rule "false_to_not_true" (formula "27"))
                                                                              (rule "notLeft" (formula "27"))
                                                                              (rule "applyEq" (formula "7") (term "0") (ifseqformula "20"))
                                                                              (rule "applyEq" (formula "2") (term "0,1,0") (ifseqformula "19"))
                                                                              (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                                                                              (rule "add_literals" (formula "2") (term "1,0"))
                                                                              (rule "times_zero_1" (formula "2") (term "0"))
                                                                              (rule "leq_literals" (formula "2"))
                                                                              (rule "true_left" (formula "2"))
                                                                              (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "5"))
                                                                              (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                                              (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                                                              (rule "polySimp_pullOutFactor2b" (formula "1") (term "0"))
                                                                              (rule "add_literals" (formula "1") (term "1,1,0"))
                                                                              (rule "times_zero_1" (formula "1") (term "1,0"))
                                                                              (rule "add_zero_right" (formula "1") (term "0"))
                                                                              (rule "apply_eq_boolean" (formula "27") (term "1") (ifseqformula "38"))
                                                                              (rule "false_to_not_true" (formula "27"))
                                                                              (rule "notLeft" (formula "27"))
                                                                              (rule "applyEqRigid" (formula "27") (term "1") (ifseqformula "26"))
                                                                              (rule "applyEq" (formula "7") (term "1") (ifseqformula "5"))
                                                                              (rule "applyEq" (formula "20") (term "1") (ifseqformula "18"))
                                                                              (rule "applyEq" (formula "17") (term "0,1,0,0") (ifseqformula "18"))
                                                                              (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                                                              (rule "polySimp_mulLiterals" (formula "3") (term "1"))
                                                                              (rule "polySimp_elimOne" (formula "3") (term "1"))
                                                                              (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                                              (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                                              (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                                              (rule "inEqSimp_sepPosMonomial0" (formula "17"))
                                                                              (rule "polySimp_mulComm0" (formula "17") (term "1"))
                                                                              (rule "polySimp_rightDist" (formula "17") (term "1"))
                                                                              (rule "polySimp_mulLiterals" (formula "17") (term "1,1"))
                                                                              (rule "mul_literals" (formula "17") (term "0,1"))
                                                                              (rule "polySimp_elimOne" (formula "17") (term "1,1"))
                                                                              (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "12"))
                                                                              (rule "qeq_literals" (formula "1") (term "0"))
                                                                              (rule "concrete_and_2" (formula "1"))
                                                                              (rule "closeFalse" (formula "1"))
                                                                           )
                                                                           (branch " charAt(k_7, content(t_0)) = charAt(k_7, content(s_0))"
                                                                              (rule "close" (formula "35") (ifseqformula "3") (userinteraction))
                                                                           )
                                                                        )
                                                                     )
                                                                  )
                                                                  (branch " Case 2"
                                                                     (rule "closeTrue" (formula "31") (userinteraction))
                                                                  )
                                                               )
                                                               (branch " Case 2"
                                                                  (rule "closeTrue" (formula "31") (userinteraction))
                                                               )
                                                            )
                                                         )
                                                         (branch " Exceptional Post"
                                                            (builtin "Update Simplification" (formula "27"))
                                                            (rule "impRight" (formula "27"))
                                                            (rule "andLeft" (formula "1"))
                                                            (rule "andLeft" (formula "2"))
                                                            (rule "andLeft" (formula "1"))
                                                            (rule "andLeft" (formula "1"))
                                                            (rule "notLeft" (formula "2"))
                                                            (rule "eqSymm" (formula "14"))
                                                            (rule "eqSymm" (formula "3") (term "1,1"))
                                                            (rule "replace_known_right" (formula "2") (term "0,0,1") (ifseqformula "29"))
                                                            (rule "concrete_not_2" (formula "2") (term "0,1"))
                                                            (rule "concrete_and_1" (formula "2") (term "1"))
                                                            (rule "replace_known_right" (formula "3") (term "0,1") (ifseqformula "29"))
                                                            (rule "concrete_and_2" (formula "3") (term "1"))
                                                            (rule "concrete_impl_3" (formula "3"))
                                                            (rule "notLeft" (formula "3"))
                                                            (rule "replace_known_left" (formula "28") (term "0") (ifseqformula "10"))
                                                            (rule "concrete_and_1" (formula "28"))
                                                            (rule "polySimp_elimSub" (formula "31") (term "0,1,1,1,0,8"))
                                                            (rule "polySimp_elimSub" (formula "31") (term "0,1,0,1,1,0,8"))
                                                            (rule "polySimp_elimSub" (formula "31") (term "3"))
                                                            (rule "inEqSimp_gtRight" (formula "30"))
                                                            (rule "inEqSimp_ltToLeq" (formula "13"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,0,1,1,1,0,0,1,1,0,8"))
                                                            (rule "polySimp_mulComm0" (formula "13") (term "1,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "3") (term "0,0"))
                                                            (rule "mul_literals" (formula "3") (term "1,0,0,0,0"))
                                                            (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0,1,1,1,0,0,1,1,0,8"))
                                                            (rule "inEqSimp_ltRight" (formula "29"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,1,1,0,8"))
                                                            (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,1,1,0,8"))
                                                            (rule "polySimp_addComm0" (formula "31") (term "0,1,1,1,0,8"))
                                                            (rule "polySimp_addComm0" (formula "31") (term "3"))
                                                            (rule "polySimp_addComm0" (formula "2") (term "0"))
                                                            (rule "inEqSimp_commuteGeq" (formula "4") (term "1,0"))
                                                            (rule "polySimp_addComm1" (formula "14") (term "0"))
                                                            (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                            (rule "polySimp_addComm0" (formula "31") (term "1,0,1,0,1,1,0,8"))
                                                            (rule "polySimp_addAssoc" (formula "31") (term "0,1,0,1,1,0,8"))
                                                            (rule "polySimp_addComm1" (formula "31") (term "0,0,1,0,1,1,0,8"))
                                                            (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "2") (term "0,1,0") (ifseqformula "15"))
                                                            (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                                                            (rule "add_literals" (formula "2") (term "1,0"))
                                                            (rule "times_zero_1" (formula "2") (term "0"))
                                                            (rule "leq_literals" (formula "2"))
                                                            (rule "true_left" (formula "2"))
                                                            (rule "applyEq" (formula "3") (term "0,1,0") (ifseqformula "16"))
                                                            (rule "applyEq" (formula "13") (term "0,1,0") (ifseqformula "16"))
                                                            (rule "polySimp_addComm1" (formula "13") (term "0"))
                                                            (rule "apply_eq_boolean" (formula "21") (term "0") (ifseqformula "31"))
                                                            (rule "eqSymm" (formula "21"))
                                                            (rule "false_to_not_true" (formula "21"))
                                                            (rule "notLeft" (formula "21"))
                                                            (rule "apply_eq_boolean" (formula "23") (term "1") (ifseqformula "35"))
                                                            (rule "false_to_not_true" (formula "23"))
                                                            (rule "notLeft" (formula "23"))
                                                            (rule "applyEqRigid" (formula "29") (term "1,0,0,1,0,0,8") (ifseqformula "22"))
                                                            (rule "applyEqRigid" (formula "23") (term "1") (ifseqformula "22"))
                                                            (rule "applyEq" (formula "16") (term "1") (ifseqformula "14"))
                                                            (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "14"))
                                                            (rule "applyEq" (formula "3") (term "0,1,0") (ifseqformula "14"))
                                                            (rule "applyEq" (formula "13") (term "0,1,0,0") (ifseqformula "14"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "0,0"))
                                                            (rule "mul_literals" (formula "3") (term "1,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0,1,1,1,0,0,1,1,0,8"))
                                                            (rule "polySimp_mulComm0" (formula "29") (term "1,1,0,0,1,1,1,0,0,1,1,0,8"))
                                                            (rule "polySimp_rightDist" (formula "29") (term "1,1,0,0,1,1,1,0,0,1,1,0,8"))
                                                            (rule "mul_literals" (formula "29") (term "0,1,1,0,0,1,1,1,0,0,1,1,0,8"))
                                                            (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0,0,1,1,1,0,0,1,1,0,8"))
                                                            (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0,0,1,1,1,0,0,1,1,0,8"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "1,1,1,0,8"))
                                                            (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,1,0,8"))
                                                            (rule "polySimp_elimOne" (formula "29") (term "1,1,1,1,0,8"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,1,1,0,8"))
                                                            (rule "polySimp_mulComm0" (formula "29") (term "1,1,0,1,1,0,8"))
                                                            (rule "polySimp_rightDist" (formula "29") (term "1,1,0,1,1,0,8"))
                                                            (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0,1,1,0,8"))
                                                            (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0,1,1,0,8"))
                                                            (rule "polySimp_rightDist" (formula "29") (term "0,1,1,0,1,1,0,8"))
                                                            (rule "mul_literals" (formula "29") (term "0,0,1,1,0,1,1,0,8"))
                                                            (rule "polySimp_mulLiterals" (formula "29") (term "1,0,1,1,0,1,1,0,8"))
                                                            (rule "polySimp_elimOne" (formula "29") (term "1,0,1,1,0,1,1,0,8"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                            (rule "replace_known_left" (formula "3") (term "1,0") (ifseqformula "1"))
                                                            (rule "concrete_or_3" (formula "3") (term "0"))
                                                            (rule "concrete_impl_1" (formula "3"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "13"))
                                                            (rule "polySimp_mulComm0" (formula "13") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "13") (term "1"))
                                                            (rule "polySimp_mulLiterals" (formula "13") (term "1,1"))
                                                            (rule "mul_literals" (formula "13") (term "0,1"))
                                                            (rule "polySimp_elimOne" (formula "13") (term "1,1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "6"))
                                                            (rule "andLeft" (formula "1"))
                                                            (rule "inEqSimp_homoInEq1" (formula "1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                                            (rule "add_literals" (formula "1") (term "1,1,0"))
                                                            (rule "times_zero_1" (formula "1") (term "1,0"))
                                                            (rule "add_literals" (formula "1") (term "0"))
                                                            (rule "leq_literals" (formula "1"))
                                                            (rule "closeFalse" (formula "1"))
                                                         )
                                                      )
                                                      (branch " Null Reference (s2 = null)"
                                                         (builtin "Update Simplification" (formula "1"))
                                                         (rule "close" (formula "33") (ifseqformula "1"))
                                                      )
                                                   )
                                                   (branch " Exceptional Post"
                                                      (builtin "Update Simplification" (formula "25"))
                                                      (rule "impRight" (formula "25"))
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "andLeft" (formula "2"))
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "notLeft" (formula "2"))
                                                      (rule "eqSymm" (formula "12"))
                                                      (rule "eqSymm" (formula "3") (term "1,1"))
                                                      (rule "replace_known_right" (formula "2") (term "0,0,1") (ifseqformula "27"))
                                                      (rule "concrete_not_2" (formula "2") (term "0,1"))
                                                      (rule "concrete_and_1" (formula "2") (term "1"))
                                                      (rule "replace_known_left" (formula "3") (term "0,0") (ifseqformula "9"))
                                                      (rule "concrete_and_1" (formula "3") (term "0"))
                                                      (rule "replace_known_right" (formula "3") (term "0,1") (ifseqformula "27"))
                                                      (rule "concrete_and_2" (formula "3") (term "1"))
                                                      (rule "concrete_impl_3" (formula "3"))
                                                      (rule "notLeft" (formula "3"))
                                                      (rule "polySimp_elimSub" (formula "29") (term "3"))
                                                      (rule "polySimp_elimSub" (formula "29") (term "0,1,0,1,1,0,7"))
                                                      (rule "polySimp_elimSub" (formula "29") (term "0,1,1,1,0,7"))
                                                      (rule "inEqSimp_gtRight" (formula "28"))
                                                      (rule "inEqSimp_ltToLeq" (formula "11"))
                                                      (rule "inEqSimp_ltToLeq" (formula "29") (term "1,0,0,1,1,1,0,0,1,1,0,7"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "11") (term "1,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "3") (term "0,0"))
                                                      (rule "mul_literals" (formula "3") (term "1,0,0,0,0"))
                                                      (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0,1,1,1,0,0,1,1,0,7"))
                                                      (rule "inEqSimp_ltRight" (formula "27"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "29") (term "1,0,1,1,0,7"))
                                                      (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,1,1,0,7"))
                                                      (rule "polySimp_addComm0" (formula "29") (term "3"))
                                                      (rule "polySimp_addComm0" (formula "29") (term "0,1,1,1,0,7"))
                                                      (rule "inEqSimp_commuteGeq" (formula "4") (term "1,0"))
                                                      (rule "polySimp_addComm0" (formula "2") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "12") (term "0"))
                                                      (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                      (rule "polySimp_addComm0" (formula "29") (term "1,0,1,0,1,1,0,7"))
                                                      (rule "polySimp_addAssoc" (formula "29") (term "0,1,0,1,1,0,7"))
                                                      (rule "polySimp_addComm1" (formula "29") (term "0,0,1,0,1,1,0,7"))
                                                      (rule "applyEq" (formula "12") (term "0,1,0") (ifseqformula "15"))
                                                      (rule "polySimp_addComm1" (formula "12") (term "0"))
                                                      (rule "applyEq" (formula "2") (term "0,1,0") (ifseqformula "13"))
                                                      (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                                                      (rule "add_literals" (formula "2") (term "1,0"))
                                                      (rule "times_zero_1" (formula "2") (term "0"))
                                                      (rule "leq_literals" (formula "2"))
                                                      (rule "true_left" (formula "2"))
                                                      (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "18"))
                                                      (rule "applyEq" (formula "3") (term "0,1,0") (ifseqformula "18"))
                                                      (rule "apply_eq_boolean_rigid" (formula "22") (term "1") (ifseqformula "34"))
                                                      (rule "false_to_not_true" (formula "22"))
                                                      (rule "notLeft" (formula "22"))
                                                      (rule "apply_eq_boolean" (formula "19") (term "1") (ifseqformula "34"))
                                                      (rule "false_to_not_true" (formula "19"))
                                                      (rule "notLeft" (formula "19"))
                                                      (rule "applyEqRigid" (formula "21") (term "1") (ifseqformula "20"))
                                                      (rule "applyEqRigid" (formula "27") (term "1,0,0,1,0,0,7") (ifseqformula "20"))
                                                      (rule "applyEq" (formula "14") (term "1") (ifseqformula "12"))
                                                      (rule "applyEq" (formula "11") (term "0,1,0,0") (ifseqformula "12"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "0,0"))
                                                      (rule "mul_literals" (formula "3") (term "1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0,1,1,1,0,0,1,1,0,7"))
                                                      (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0,1,1,1,0,0,1,1,0,7"))
                                                      (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0,1,1,1,0,0,1,1,0,7"))
                                                      (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0,1,1,1,0,0,1,1,0,7"))
                                                      (rule "mul_literals" (formula "27") (term "0,1,1,0,0,1,1,1,0,0,1,1,0,7"))
                                                      (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0,1,1,1,0,0,1,1,0,7"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "1,1,1,0,7"))
                                                      (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,1,0,7"))
                                                      (rule "polySimp_elimOne" (formula "27") (term "1,1,1,1,0,7"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,1,1,0,7"))
                                                      (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,1,1,0,7"))
                                                      (rule "polySimp_rightDist" (formula "27") (term "1,1,0,1,1,0,7"))
                                                      (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,1,1,0,7"))
                                                      (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,1,1,0,7"))
                                                      (rule "polySimp_rightDist" (formula "27") (term "0,1,1,0,1,1,0,7"))
                                                      (rule "polySimp_mulLiterals" (formula "27") (term "1,0,1,1,0,1,1,0,7"))
                                                      (rule "mul_literals" (formula "27") (term "0,0,1,1,0,1,1,0,7"))
                                                      (rule "polySimp_elimOne" (formula "27") (term "1,0,1,1,0,1,1,0,7"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                      (rule "replace_known_left" (formula "3") (term "1,0") (ifseqformula "1"))
                                                      (rule "concrete_or_3" (formula "3") (term "0"))
                                                      (rule "concrete_impl_1" (formula "3"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "11"))
                                                      (rule "polySimp_mulComm0" (formula "11") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "11") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
                                                      (rule "mul_literals" (formula "11") (term "0,1"))
                                                      (rule "polySimp_elimOne" (formula "11") (term "1,1"))
                                                      (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "4"))
                                                      (rule "inEqSimp_homoInEq0" (formula "8") (term "0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0"))
                                                      (rule "add_literals" (formula "8") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "8") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "8") (term "0,0"))
                                                      (rule "qeq_literals" (formula "8") (term "0"))
                                                      (rule "concrete_or_1" (formula "8"))
                                                      (rule "true_left" (formula "8"))
                                                      (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "4"))
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "inEqSimp_homoInEq1" (formula "1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                                      (rule "add_literals" (formula "1") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "1") (term "1,0"))
                                                      (rule "add_zero_right" (formula "1") (term "0"))
                                                      (rule "leq_literals" (formula "1"))
                                                      (rule "closeFalse" (formula "1"))
                                                   )
                                                )
                                                (branch " Null Reference (s1 = null)"
                                                   (builtin "Update Simplification" (formula "1"))
                                                   (rule "close" (formula "30") (ifseqformula "1"))
                                                )
                                             )
                                             (branch " result_2 >= 1 + i_2_4 FALSE"
                                                (rule "inEqSimp_geqRight" (formula "24"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                (rule "assignment" (formula "2"))
                                                (rule "methodCallEmpty" (formula "2") (term "1"))
                                                (rule "emptyModality" (formula "2") (term "1"))
                                                (builtin "Update Simplification" (formula "2"))
                                                (rule "boolean_not_equal_2" (formula "2"))
                                                (rule "closeFalse" (formula "2"))
                                             )
                                          )
                                          (branch " Use Case"
                                             (builtin "Update Simplification" (formula "19"))
                                             (rule "impRight" (formula "19") (userinteraction))
                                             (rule "andLeft" (formula "1"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "polySimp_elimSub" (formula "3") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "2") (term "1,0,0,1"))
                                             (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1,0,0,1"))
                                             (rule "polySimp_addComm0" (formula "3") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "2") (term "1,0,0,1"))
                                             (rule "polySimp_mulComm0" (formula "2") (term "1,1,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "2") (term "1,1,0,0,1"))
                                             (rule "mul_literals" (formula "2") (term "0,1,1,0,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "1,1,1,0,0,1"))
                                             (rule "polySimp_elimOne" (formula "2") (term "1,1,1,0,0,1"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                             (rule "polySimp_mulLiterals" (formula "3") (term "1"))
                                             (rule "polySimp_elimOne" (formula "3") (term "1"))
                                             (rule "nnf_imp2or" (formula "2") (term "0,1"))
                                             (rule "nnf_notAnd" (formula "2") (term "0,0,1"))
                                             (rule "inEqSimp_notGeq" (formula "2") (term "0,0,0,1"))
                                             (rule "times_zero_1" (formula "2") (term "1,0,0,0,0,0,1"))
                                             (rule "add_zero_right" (formula "2") (term "0,0,0,0,0,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "2") (term "0,0,0,1"))
                                             (rule "mul_literals" (formula "2") (term "1,0,0,0,1"))
                                             (rule "inEqSimp_notLeq" (formula "2") (term "1,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "2") (term "1,0,0,1,0,0,1"))
                                             (rule "mul_literals" (formula "2") (term "0,1,0,0,1,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,0,0,1"))
                                             (rule "add_literals" (formula "2") (term "0,0,0,1,0,0,1"))
                                             (rule "add_zero_left" (formula "2") (term "0,0,1,0,0,1"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "1,0,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0,1"))
                                             (rule "polySimp_elimOne" (formula "2") (term "1,1,0,0,1"))
                                             (rule "variableDeclarationAssign" (formula "22") (term "5") (userinteraction))
                                             (rule "variableDeclaration" (formula "22") (term "5") (newnames "b_28") (userinteraction))
                                             (rule "less_than_comparison_new" (formula "22") (term "5") (userinteraction))
                                             (rule "ifthenelse_split_for" (formula "22") (term "5") (userinteraction))
                                             (branch " i_2 <  m TRUE"
                                                (builtin "Update Simplification" (formula "1"))
                                                (builtin "Update Simplification" (formula "23"))
                                                (rule "assignment" (formula "23") (term "4") (userinteraction))
                                                (builtin "Update Simplification" (formula "23"))
                                                (rule "methodCallEmpty" (formula "23") (term "5") (userinteraction))
                                                (rule "emptyModality" (formula "23") (term "5") (userinteraction))
                                                (builtin "Update Simplification" (formula "23"))
                                                (rule "boolean_not_equal_1" (formula "23") (term "0") (userinteraction))
                                                (rule "impRight" (formula "23") (userinteraction))
                                                (rule "closeFalse" (formula "1") (userinteraction))
                                             )
                                             (branch " i_2 <  m FALSE"
                                                (builtin "Update Simplification" (formula "22"))
                                                (builtin "Update Simplification" (formula "23"))
                                                (rule "assignment" (formula "23") (term "4") (userinteraction))
                                                (builtin "Update Simplification" (formula "23"))
                                                (rule "methodCallEmpty" (formula "23") (term "5") (userinteraction))
                                                (rule "emptyModality" (formula "23") (term "5") (userinteraction))
                                                (builtin "Update Simplification" (formula "23"))
                                                (rule "false_to_not_true" (formula "23") (term "0") (userinteraction))
                                                (rule "boolean_not_equal_2" (formula "23") (term "0,0") (userinteraction))
                                                (rule "concrete_not_2" (formula "23") (term "0") (userinteraction))
                                                (rule "concrete_impl_1" (formula "23") (userinteraction))
                                                (rule "blockEmpty" (formula "23") (term "4") (userinteraction))
                                                (rule "compound_subtraction_2" (formula "23") (term "4") (inst "#v1=j_1") (inst "#v0=j") (userinteraction))
                                                (rule "variableDeclarationAssign" (formula "23") (term "4") (userinteraction))
                                                (rule "variableDeclaration" (formula "23") (term "4") (newnames "j_111") (userinteraction))
                                                (rule "methodCallWithAssignment" (formula "23") (term "4") (inst "#v0=j_112") (userinteraction))
                                                (branch " Normal Execution (s1 != null)"
                                                   (builtin "Update Simplification" (formula "23"))
                                                   (rule "variableDeclaration" (formula "23") (term "4") (newnames "j_112") (userinteraction))
                                                   (builtin "Use Operation Contract" (formula "23") (term "4") (newnames "result_51") (contract "length;;"))
                                                   (branch " Pre"
                                                      (builtin "Update Simplification" (formula "23"))
                                                      (rule "eqSymm" (formula "6"))
                                                      (rule "replace_known_left" (formula "23") (term "0") (ifseqformula "20"))
                                                      (rule "concrete_and_1" (formula "23"))
                                                      (rule "replace_known_right" (formula "23") (term "0,1") (ifseqformula "27"))
                                                      (rule "concrete_not_2" (formula "23") (term "1"))
                                                      (rule "concrete_and_3" (formula "23"))
                                                      (rule "close" (formula "23") (ifseqformula "18"))
                                                   )
                                                   (branch " Post"
                                                      (rule "blockEmpty" (formula "23") (term "1,3,4") (userinteraction))
                                                      (builtin "Update Simplification" (formula "23"))
                                                      (rule "impRight" (formula "23") (userinteraction))
                                                      (rule "inInt" (formula "1") (term "1,1,0"))
                                                      (rule "concrete_and_3" (formula "1") (term "1,0"))
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "andLeft" (formula "2"))
                                                      (rule "eqSymm" (formula "2"))
                                                      (rule "applyEq" (formula "2") (term "0") (ifseqformula "14"))
                                                      (rule "eqSymm" (formula "2"))
                                                      (rule "assignment" (formula "25") (term "4") (userinteraction))
                                                      (builtin "Update Simplification" (formula "25"))
                                                      (rule "variableDeclarationAssign" (formula "25") (term "4") (userinteraction))
                                                      (rule "variableDeclaration" (formula "25") (term "4") (newnames "j_113") (userinteraction))
                                                      (rule "methodCallWithAssignment" (formula "25") (term "4") (inst "#v0=j_114") (userinteraction))
                                                      (branch " Normal Execution (s2 != null)"
                                                         (builtin "Update Simplification" (formula "25"))
                                                         (rule "variableDeclaration" (formula "25") (term "4") (newnames "j_114") (userinteraction))
                                                         (builtin "Use Operation Contract" (formula "25") (term "4") (newnames "result_53") (contract "length;;"))
                                                         (branch " Pre"
                                                            (builtin "Update Simplification" (formula "25"))
                                                            (rule "eqSymm" (formula "8"))
                                                            (rule "replace_known_left" (formula "25") (term "0,1") (ifseqformula "21"))
                                                            (rule "concrete_and_1" (formula "25") (term "1"))
                                                            (rule "replace_known_right" (formula "25") (term "0,1") (ifseqformula "30"))
                                                            (rule "concrete_not_2" (formula "25") (term "1"))
                                                            (rule "concrete_and_3" (formula "25"))
                                                            (rule "close" (formula "25") (ifseqformula "22"))
                                                         )
                                                         (branch " Post"
                                                            (rule "blockEmpty" (formula "25") (term "1,3,4") (userinteraction))
                                                            (builtin "Update Simplification" (formula "25"))
                                                            (rule "impRight" (formula "25") (userinteraction))
                                                            (rule "inInt" (formula "1") (term "1,1,0"))
                                                            (rule "concrete_and_3" (formula "1") (term "1,0"))
                                                            (rule "andLeft" (formula "1"))
                                                            (rule "andLeft" (formula "1"))
                                                            (rule "andLeft" (formula "2"))
                                                            (rule "eqSymm" (formula "2"))
                                                            (rule "applyEq" (formula "2") (term "0") (ifseqformula "12"))
                                                            (rule "assignment" (formula "27") (term "4") (userinteraction))
                                                            (builtin "Update Simplification" (formula "27"))
                                                            (rule "assignmentSubtractionInt" (formula "27") (term "4") (userinteraction))
                                                            (builtin "Update Simplification" (formula "27"))
                                                            (rule "ifElseUnfold" (formula "27") (term "2") (inst "#boolv=b") (userinteraction))
                                                            (rule "variableDeclaration" (formula "27") (term "2") (newnames "b_29") (userinteraction))
                                                            (rule "less_than_comparison_new" (formula "27") (term "2") (userinteraction))
                                                            (builtin "Update Simplification" (formula "27"))
                                                            (rule "castDelInt" (formula "27") (term "0,0"))
                                                            (rule "translateJavaSubInt" (formula "27") (term "0,0"))
                                                            (rule "polySimp_elimSub" (formula "27") (term "0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "27") (term "0"))
                                                            (rule "times_zero_1" (formula "27") (term "1,0,0,0"))
                                                            (rule "add_zero_right" (formula "27") (term "0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "27") (term "0,0"))
                                                            (rule "applyEq" (formula "27") (term "1,0,0,0") (ifseqformula "4"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "27") (term "0"))
                                                            (rule "polySimp_mulLiterals" (formula "27") (term "0,0"))
                                                            (rule "polySimp_elimOne" (formula "27") (term "0,0"))
                                                            (rule "ifthenelse_split_for" (formula "27") (userinteraction))
                                                            (branch " result_52 >= 1 + result_2 TRUE"
                                                               (rule "ifElseSkipElse" (formula "28") (term "2") (userinteraction))
                                                               (rule "assignment" (formula "28") (term "2") (userinteraction))
                                                               (builtin "Update Simplification" (formula "28"))
                                                               (rule "compound_assignment_op_minus" (formula "28") (term "2") (userinteraction))
                                                               (rule "compound_int_cast_expression" (formula "28") (term "2") (inst "#v=j") (userinteraction))
                                                               (rule "variableDeclarationAssign" (formula "28") (term "2") (userinteraction))
                                                               (rule "variableDeclaration" (formula "28") (term "2") (newnames "j_115") (userinteraction))
                                                               (rule "remove_parentheses_right" (formula "28") (term "2") (userinteraction))
                                                               (rule "compound_subtraction_2" (formula "28") (term "2") (inst "#v1=j_117") (inst "#v0=j_116") (userinteraction))
                                                               (rule "variableDeclarationAssign" (formula "28") (term "2") (userinteraction))
                                                               (rule "variableDeclaration" (formula "28") (term "2") (newnames "j_116") (userinteraction))
                                                               (rule "assignment" (formula "28") (term "2") (userinteraction))
                                                               (builtin "Update Simplification" (formula "28"))
                                                               (rule "variableDeclarationAssign" (formula "28") (term "3") (userinteraction))
                                                               (rule "variableDeclaration" (formula "28") (term "3") (newnames "j_117") (userinteraction))
                                                               (rule "remove_parentheses_right" (formula "28") (term "3") (userinteraction))
                                                               (rule "assignment" (formula "28") (term "3") (userinteraction))
                                                               (builtin "Update Simplification" (formula "28"))
                                                               (rule "assignmentSubtractionInt" (formula "28") (term "3") (userinteraction))
                                                               (builtin "Update Simplification" (formula "28"))
                                                               (rule "widening_identity_cast_5" (formula "28") (term "2") (userinteraction))
                                                               (rule "assignment" (formula "28") (term "2") (userinteraction))
                                                               (builtin "Update Simplification" (formula "28"))
                                                               (rule "methodCallReturn" (formula "28") (term "1") (userinteraction))
                                                               (rule "assignment" (formula "28") (term "1") (userinteraction))
                                                               (builtin "Update Simplification" (formula "28"))
                                                               (rule "methodCallEmpty" (formula "28") (term "1") (userinteraction))
                                                               (rule "emptyModality" (formula "28") (term "1") (userinteraction))
                                                               (builtin "Update Simplification" (formula "28"))
                                                               (rule "castDelInt" (formula "28") (term "0,0") (userinteraction))
                                                               (rule "translateJavaSubInt" (formula "28") (term "0,0") (userinteraction))
                                                               (rule "castDelInt" (formula "28") (term "1,0,0") (userinteraction))
                                                               (rule "translateJavaSubInt" (formula "28") (term "1,0,0") (userinteraction))
                                                               (rule "notRight" (formula "28") (userinteraction))
                                                               (rule "eqSymm" (formula "12"))
                                                               (rule "polySimp_elimSub" (formula "1") (term "0"))
                                                               (rule "polySimp_homoEq" (formula "1"))
                                                               (rule "polySimp_elimSub" (formula "1") (term "0,1,0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1,0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                                               (rule "inEqSimp_ltRight" (formula "28"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                               (rule "inEqSimp_gtRight" (formula "28"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "13"))
                                                               (rule "polySimp_mulComm0" (formula "13") (term "1,0,0"))
                                                               (rule "polySimp_addComm0" (formula "2") (term "0"))
                                                               (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "13") (term "0"))
                                                               (rule "polySimp_rightDist" (formula "3") (term "1,1,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "3") (term "1,1,1,1,0"))
                                                               (rule "polySimp_elimOne" (formula "3") (term "1,1,1,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "3") (term "0,1,1,1,0"))
                                                               (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "3") (term "1,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "3") (term "0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "3") (term "1,1,0"))
                                                               (rule "polySimp_mulAssoc" (formula "3") (term "0,1,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "3") (term "0,0,1,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "3") (term "0,1,1,0"))
                                                               (rule "polySimp_elimOne" (formula "3") (term "0,1,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "3") (term "1,0"))
                                                               (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                                               (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                                               (rule "applyEq" (formula "13") (term "0,1,0") (ifseqformula "16"))
                                                               (rule "polySimp_addComm1" (formula "13") (term "0"))
                                                               (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "6"))
                                                               (rule "applyEq" (formula "14") (term "0") (ifseqformula "6"))
                                                               (rule "applyEq" (formula "29") (term "0") (ifseqformula "21"))
                                                               (rule "apply_eq_boolean" (formula "21") (term "1") (ifseqformula "33"))
                                                               (rule "false_to_not_true" (formula "21"))
                                                               (rule "notLeft" (formula "21"))
                                                               (rule "apply_eq_boolean_rigid" (formula "23") (term "1") (ifseqformula "33"))
                                                               (rule "false_to_not_true" (formula "23"))
                                                               (rule "notLeft" (formula "23"))
                                                               (rule "applyEq" (formula "16") (term "1") (ifseqformula "6"))
                                                               (rule "applyEqRigid" (formula "23") (term "1") (ifseqformula "22"))
                                                               (rule "apply_eq_monomials" (formula "3") (term "1,0") (ifseqformula "14"))
                                                               (rule "polySimp_rightDist" (formula "3") (term "0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,0"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "3") (term "1,0"))
                                                               (rule "add_literals" (formula "3") (term "1,1,1,0"))
                                                               (rule "times_zero_1" (formula "3") (term "1,1,0"))
                                                               (rule "add_zero_right" (formula "3") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                                               (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                               (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "14"))
                                                               (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                                                               (rule "add_literals" (formula "1") (term "1,0"))
                                                               (rule "times_zero_1" (formula "1") (term "0"))
                                                               (rule "leq_literals" (formula "1"))
                                                               (rule "true_left" (formula "1"))
                                                               (rule "applyEq" (formula "3") (term "0") (ifseqformula "13"))
                                                               (rule "inEqSimp_homoInEq1" (formula "3"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                                               (rule "add_literals" (formula "3") (term "1,1,0"))
                                                               (rule "times_zero_1" (formula "3") (term "1,0"))
                                                               (rule "add_literals" (formula "3") (term "0"))
                                                               (rule "leq_literals" (formula "3"))
                                                               (rule "closeFalse" (formula "3"))
                                                            )
                                                            (branch " result_52 >= 1 + result_2 FALSE"
                                                               (rule "ifElseSkipThen" (formula "28") (term "2") (userinteraction))
                                                               (rule "assignment" (formula "28") (term "2") (userinteraction))
                                                               (builtin "Update Simplification" (formula "28"))
                                                               (rule "compound_assignment_op_plus" (formula "28") (term "2") (userinteraction))
                                                               (rule "compound_int_cast_expression" (formula "28") (term "2") (inst "#v=j") (userinteraction))
                                                               (rule "variableDeclarationAssign" (formula "28") (term "2") (userinteraction))
                                                               (rule "variableDeclaration" (formula "28") (term "2") (newnames "j_118") (userinteraction))
                                                               (rule "remove_parentheses_right" (formula "28") (term "2") (userinteraction))
                                                               (rule "compound_addition_2" (formula "28") (term "2") (inst "#v1=j_120") (inst "#v0=j_119") (userinteraction))
                                                               (rule "variableDeclarationAssign" (formula "28") (term "2") (userinteraction))
                                                               (rule "variableDeclaration" (formula "28") (term "2") (newnames "j_119") (userinteraction))
                                                               (rule "assignment" (formula "28") (term "2") (userinteraction))
                                                               (builtin "Update Simplification" (formula "28"))
                                                               (rule "variableDeclarationAssign" (formula "28") (term "3") (userinteraction))
                                                               (rule "variableDeclaration" (formula "28") (term "3") (newnames "j_120") (userinteraction))
                                                               (rule "remove_parentheses_right" (formula "28") (term "3") (userinteraction))
                                                               (rule "assignment" (formula "28") (term "3") (userinteraction))
                                                               (builtin "Update Simplification" (formula "28"))
                                                               (rule "assignmentAdditionInt" (formula "28") (term "3") (userinteraction))
                                                               (builtin "Update Simplification" (formula "28"))
                                                               (rule "widening_identity_cast_5" (formula "28") (term "2") (userinteraction))
                                                               (rule "assignment" (formula "28") (term "2") (userinteraction))
                                                               (builtin "Update Simplification" (formula "28"))
                                                               (rule "blockEmpty" (formula "28") (term "1") (userinteraction))
                                                               (rule "methodCallReturn" (formula "28") (term "1") (userinteraction))
                                                               (rule "assignment" (formula "28") (term "1") (userinteraction))
                                                               (builtin "Update Simplification" (formula "28"))
                                                               (rule "methodCallEmpty" (formula "28") (term "1") (userinteraction))
                                                               (rule "emptyModality" (formula "28") (term "1") (userinteraction))
                                                               (builtin "Update Simplification" (formula "28"))
                                                               (rule "castDelInt" (formula "28") (term "0,0") (userinteraction))
                                                               (rule "translateJavaAddInt" (formula "28") (term "0,0") (userinteraction))
                                                               (rule "translateJavaSubInt" (formula "28") (term "0,1,0,0") (userinteraction))
                                                               (rule "castDelInt" (formula "28") (term "1,0,0") (userinteraction))
                                                               (rule "notRight" (formula "28") (userinteraction))
                                                               (rule "eqSymm" (formula "11"))
                                                               (rule "polySimp_elimSub" (formula "1") (term "1,0"))
                                                               (rule "polySimp_homoEq" (formula "1"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                                               (rule "inEqSimp_geqRight" (formula "28"))
                                                               (rule "inEqSimp_ltRight" (formula "28"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                               (rule "inEqSimp_gtRight" (formula "28"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "13"))
                                                               (rule "polySimp_mulComm0" (formula "13") (term "1,0,0"))
                                                               (rule "polySimp_addComm0" (formula "2") (term "0"))
                                                               (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "13") (term "0"))
                                                               (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "4") (term "0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "4") (term "1,1,0"))
                                                               (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "4") (term "1,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "4") (term "1,1,1,0"))
                                                               (rule "polySimp_elimOne" (formula "4") (term "1,1,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "4") (term "0,1,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                                               (rule "add_literals" (formula "3") (term "0,0,0"))
                                                               (rule "add_zero_left" (formula "3") (term "0,0"))
                                                               (rule "polySimp_addAssoc" (formula "4") (term "1,0"))
                                                               (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                                               (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                                               (rule "applyEq" (formula "13") (term "0,1,0") (ifseqformula "16"))
                                                               (rule "polySimp_addComm1" (formula "13") (term "0"))
                                                               (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "14"))
                                                               (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                                                               (rule "add_literals" (formula "1") (term "1,0"))
                                                               (rule "times_zero_1" (formula "1") (term "0"))
                                                               (rule "leq_literals" (formula "1"))
                                                               (rule "true_left" (formula "1"))
                                                               (rule "applyEq" (formula "5") (term "0") (ifseqformula "13"))
                                                               (rule "eqSymm" (formula "5"))
                                                               (rule "apply_eq_boolean" (formula "23") (term "1") (ifseqformula "33"))
                                                               (rule "false_to_not_true" (formula "23"))
                                                               (rule "notLeft" (formula "23"))
                                                               (rule "applyEq" (formula "28") (term "0") (ifseqformula "20"))
                                                               (rule "apply_eq_boolean_rigid" (formula "20") (term "1") (ifseqformula "32"))
                                                               (rule "false_to_not_true" (formula "20"))
                                                               (rule "notLeft" (formula "20"))
                                                               (rule "applyEqRigid" (formula "22") (term "1") (ifseqformula "21"))
                                                               (rule "applyEq" (formula "15") (term "1") (ifseqformula "13"))
                                                               (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "5"))
                                                               (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                               (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "5"))
                                                               (rule "polySimp_pullOutFactor2" (formula "2") (term "0"))
                                                               (rule "add_literals" (formula "2") (term "1,0"))
                                                               (rule "times_zero_1" (formula "2") (term "0"))
                                                               (rule "leq_literals" (formula "2"))
                                                               (rule "true_left" (formula "2"))
                                                               (rule "applyEq" (formula "11") (term "0,1,0,0") (ifseqformula "12"))
                                                               (rule "applyEq" (formula "2") (term "0,1,0") (ifseqformula "6"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                                               (rule "add_literals" (formula "2") (term "1,1,0"))
                                                               (rule "times_zero_1" (formula "2") (term "1,0"))
                                                               (rule "add_zero_right" (formula "2") (term "0"))
                                                               (rule "applyEq" (formula "2") (term "0,0") (ifseqformula "20"))
                                                               (rule "add_zero_left" (formula "2") (term "0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                               (rule "polySimp_invertEq" (formula "2"))
                                                               (rule "times_zero_2" (formula "2") (term "1"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                               (rule "replace_known_left" (formula "8") (term "0") (ifseqformula "2"))
                                                               (rule "concrete_impl_1" (formula "8"))
                                                               (rule "applyEq" (formula "7") (term "0") (ifseqformula "2"))
                                                               (rule "qeq_literals" (formula "7"))
                                                               (rule "true_left" (formula "7"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "10"))
                                                               (rule "polySimp_mulComm0" (formula "10") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "10") (term "1"))
                                                               (rule "mul_literals" (formula "10") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "10") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "10") (term "1,1"))
                                                               (rule "inEqSimp_antiSymm" (formula "8") (ifseqformula "1"))
                                                               (rule "applyEq" (formula "1") (term "0") (ifseqformula "8"))
                                                               (rule "inEqSimp_homoInEq0" (formula "1"))
                                                               (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                                                               (rule "add_literals" (formula "1") (term "1,0"))
                                                               (rule "times_zero_1" (formula "1") (term "0"))
                                                               (rule "qeq_literals" (formula "1"))
                                                               (rule "true_left" (formula "1"))
                                                               (rule "applyEq" (formula "10") (term "1,1") (ifseqformula "7"))
                                                               (rule "applyEq" (formula "8") (term "0") (ifseqformula "7"))
                                                               (rule "inEqSimp_homoInEq1" (formula "8"))
                                                               (rule "polySimp_pullOutFactor1" (formula "8") (term "0"))
                                                               (rule "add_literals" (formula "8") (term "1,0"))
                                                               (rule "times_zero_1" (formula "8") (term "0"))
                                                               (rule "leq_literals" (formula "8"))
                                                               (rule "true_left" (formula "8"))
                                                               (rule "applyEq" (formula "12") (term "1") (ifseqformula "7"))
                                                               (rule "applyEq" (formula "10") (term "1") (ifseqformula "7"))
                                                               (rule "applyEq" (formula "14") (term "1") (ifseqformula "7"))
                                                               (rule "applyEq" (formula "3") (term "1") (ifseqformula "7"))
                                                               (rule "applyEq" (formula "16") (term "1") (ifseqformula "7"))
                                                               (rule "applyEq" (formula "5") (term "1") (ifseqformula "7"))
                                                               (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "9"))
                                                               (rule "times_zero_1" (formula "8") (term "0,0"))
                                                               (rule "add_zero_left" (formula "8") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                                               (rule "mul_literals" (formula "8") (term "1"))
                                                               (rule "allLeft" (formula "6") (inst "t=_var4_0"))
                                                               (rule "replace_known_right" (formula "6") (term "1") (ifseqformula "27"))
                                                               (rule "concrete_or_4" (formula "6"))
                                                               (rule "inEqSimp_contradInEq0" (formula "6") (term "1") (ifseqformula "11"))
                                                               (rule "inEqSimp_homoInEq1" (formula "6") (term "0,1"))
                                                               (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1"))
                                                               (rule "polySimp_rightDist" (formula "6") (term "1,0,0,1"))
                                                               (rule "mul_literals" (formula "6") (term "0,1,0,0,1"))
                                                               (rule "polySimp_addAssoc" (formula "6") (term "0,0,1"))
                                                               (rule "polySimp_addComm0" (formula "6") (term "0,0,0,1"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,1"))
                                                               (rule "add_literals" (formula "6") (term "1,1,0,0,1"))
                                                               (rule "times_zero_1" (formula "6") (term "1,0,0,1"))
                                                               (rule "add_zero_right" (formula "6") (term "0,0,1"))
                                                               (rule "leq_literals" (formula "6") (term "0,1"))
                                                               (rule "concrete_and_2" (formula "6") (term "1"))
                                                               (rule "concrete_or_4" (formula "6"))
                                                               (rule "inEqSimp_contradInEq1" (formula "6") (ifseqformula "10"))
                                                               (rule "qeq_literals" (formula "6") (term "0"))
                                                               (rule "concrete_and_2" (formula "6"))
                                                               (rule "closeFalse" (formula "6"))
                                                            )
                                                         )
                                                         (branch " Exceptional Post"
                                                            (builtin "Update Simplification" (formula "25"))
                                                            (rule "impRight" (formula "25"))
                                                            (rule "andLeft" (formula "1"))
                                                            (rule "andLeft" (formula "1"))
                                                            (rule "andLeft" (formula "2"))
                                                            (rule "andLeft" (formula "1"))
                                                            (rule "notLeft" (formula "2"))
                                                            (rule "close" (formula "26") (ifseqformula "3"))
                                                         )
                                                      )
                                                      (branch " Null Reference (s2 = null)"
                                                         (builtin "Update Simplification" (formula "1"))
                                                         (builtin "Update Simplification" (formula "26"))
                                                         (rule "close" (formula "31") (ifseqformula "1"))
                                                      )
                                                   )
                                                   (branch " Exceptional Post"
                                                      (builtin "Update Simplification" (formula "23"))
                                                      (rule "impRight" (formula "23"))
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "andLeft" (formula "2"))
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "notLeft" (formula "2"))
                                                      (rule "close" (formula "24") (ifseqformula "3"))
                                                   )
                                                )
                                                (branch " Null Reference (s1 = null)"
                                                   (builtin "Update Simplification" (formula "1"))
                                                   (builtin "Update Simplification" (formula "24"))
                                                   (rule "close" (formula "28") (ifseqformula "1"))
                                                )
                                             )
                                          )
                                       )
                                    )
                                    (branch " CUT: result_2 = result_6 FALSE"
                                       (rule "whileInvDiamondDec2" (formula "17") (newnames "i_2_0,d_2,i_2_1,d_3,anon_1,j_29") (inst "variant=m - i_2") (inst "inv=d >= 0") (inst "#modifies={i_2,d}") (inst "#v2=j") (inst "#v1=b") (userinteraction))
                                       (branch " Invariant Initially Valid"
                                          (builtin "Update Simplification" (formula "17"))
                                          (rule "andRight" (formula "17") (userinteraction))
                                          (branch " Case 1"
                                             (rule "castDelInt" (formula "17") (term "0"))
                                             (rule "qeq_literals" (formula "17"))
                                             (rule "closeTrue" (formula "17"))
                                          )
                                          (branch " Case 2"
                                             (rule "castDelInt" (formula "17") (term "1,0") (userinteraction))
                                             (rule "sub_zero_2" (formula "17") (term "0") (userinteraction))
                                             (rule "lengthGEq0" (inst "l=content(s_0)") (userinteraction))
                                             (rule "applyEq" (formula "1") (term "0") (ifseqformula "7") (userinteraction))
                                             (rule "close" (formula "18") (ifseqformula "1") (userinteraction))
                                          )
                                       )
                                       (branch " Body Preserves Invariant and Decreases Variant"
                                          (builtin "Update Simplification" (formula "17"))
                                          (rule "concrete_impl_1" (formula "17") (userinteraction))
                                          (rule "impRight" (formula "17") (userinteraction))
                                          (rule "andLeft" (formula "1"))
                                          (rule "andLeft" (formula "1"))
                                          (rule "andLeft" (formula "1"))
                                          (rule "castDelInt" (formula "4") (term "1,0,1"))
                                          (rule "castDelInt" (formula "4") (term "1"))
                                          (rule "polySimp_elimSub" (formula "4") (term "0"))
                                          (rule "polySimp_elimSub" (formula "3") (term "0"))
                                          (rule "polySimp_elimSub" (formula "4") (term "1"))
                                          (rule "times_zero_2" (formula "4") (term "1,1"))
                                          (rule "add_zero_right" (formula "4") (term "1"))
                                          (rule "polySimp_addComm0" (formula "4") (term "0"))
                                          (rule "polySimp_addComm0" (formula "3") (term "0"))
                                          (rule "inEqSimp_homoInEq0" (formula "4"))
                                          (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                                          (rule "polySimp_mulAssoc" (formula "4") (term "0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "4") (term "0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "4") (term "0,1,0"))
                                          (rule "polySimp_elimOne" (formula "4") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                          (rule "polySimp_addComm0" (formula "4") (term "0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                                          (rule "add_literals" (formula "4") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "4") (term "1,0"))
                                          (rule "add_zero_right" (formula "4") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                          (rule "polySimp_mulLiterals" (formula "3") (term "1"))
                                          (rule "polySimp_elimOne" (formula "3") (term "1"))
                                          (rule "impRight" (formula "21") (userinteraction))
                                          (rule "variableDeclarationAssign" (formula "1") (term "2"))
                                          (rule "variableDeclaration" (formula "1") (term "2") (newnames "b_9"))
                                          (rule "less_than_comparison_new" (formula "1") (term "2"))
                                          (builtin "Update Simplification" (formula "1"))
                                          (rule "inEqSimp_ltToLeq" (formula "1") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "0,0"))
                                          (rule "polySimp_elimOne" (formula "1") (term "0,0"))
                                          (rule "ifthenelse_split_for" (formula "1"))
                                          (branch " result_2 >= 1 + i_2_0 TRUE"
                                             (rule "assignment" (formula "2"))
                                             (rule "methodCallEmpty" (formula "2") (term "1"))
                                             (rule "emptyModality" (formula "2") (term "1"))
                                             (builtin "Update Simplification" (formula "2"))
                                             (rule "boolean_equal" (formula "2"))
                                             (rule "true_left" (formula "2"))
                                             (rule "variableDeclarationAssign" (formula "22") (term "6") (userinteraction))
                                             (rule "variableDeclaration" (formula "22") (term "6") (newnames "exc_9") (userinteraction))
                                             (rule "assignment" (formula "22") (term "6") (userinteraction))
                                             (builtin "Update Simplification" (formula "22"))
                                             (rule "variableDeclaration" (formula "22") (term "7") (newnames "thrownExc_1") (userinteraction))
                                             (rule "ifUnfold" (formula "22") (term "7") (inst "#boolv=b") (userinteraction))
                                             (rule "variableDeclaration" (formula "22") (term "7") (newnames "b_10") (userinteraction))
                                             (rule "less_than_comparison_new" (formula "22") (term "7") (userinteraction))
                                             (builtin "Update Simplification" (formula "22"))
                                             (rule "inEqSimp_ltToLeq" (formula "22") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "22") (term "0,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "22") (term "0"))
                                             (rule "polySimp_mulLiterals" (formula "22") (term "0,0"))
                                             (rule "polySimp_elimOne" (formula "22") (term "0,0"))
                                             (rule "replace_known_left" (formula "22") (term "0") (ifseqformula "1"))
                                             (rule "ifthenelse_true_for" (formula "22") (userinteraction))
                                             (rule "ifEnterThen" (formula "22") (term "7") (userinteraction))
                                             (rule "assignment" (formula "22") (term "7") (userinteraction))
                                             (builtin "Update Simplification" (formula "22"))
                                             (rule "variableDeclarationAssign" (formula "22") (term "7") (userinteraction))
                                             (rule "variableDeclaration" (formula "22") (term "7") (newnames "f_1") (userinteraction))
                                             (rule "compound_subtraction_2" (formula "22") (term "7") (inst "#v1=j_1") (inst "#v0=j") (userinteraction))
                                             (rule "variableDeclarationAssign" (formula "22") (term "7") (userinteraction))
                                             (rule "variableDeclaration" (formula "22") (term "7") (newnames "j_30") (userinteraction))
                                             (rule "methodCallWithAssignment" (formula "22") (term "7") (inst "#v0=j_31") (userinteraction))
                                             (branch " Normal Execution (s1 != null)"
                                                (builtin "Update Simplification" (formula "22"))
                                                (rule "variableDeclaration" (formula "22") (term "7") (newnames "j_31") (userinteraction))
                                                (rule "variableDeclarationAssign" (formula "22") (term "7") (userinteraction))
                                                (rule "variableDeclaration" (formula "22") (term "7") (newnames "arg0_6") (userinteraction))
                                                (rule "assignment" (formula "22") (term "7") (userinteraction))
                                                (builtin "Update Simplification" (formula "22"))
                                                (builtin "Use Operation Contract" (formula "22") (term "8") (newnames "arg0_6_0,result_19") (contract "charAtExc#charAtNormal;;"))
                                                (branch " Pre"
                                                   (builtin "Update Simplification" (formula "22"))
                                                   (rule "inInt" (formula "22") (term "1,0"))
                                                   (rule "concrete_and_3" (formula "22") (term "0"))
                                                   (rule "eqSymm" (formula "20"))
                                                   (rule "replace_known_right" (formula "22") (term "0,1,1,0") (ifseqformula "25"))
                                                   (rule "concrete_not_2" (formula "22") (term "1,1,0"))
                                                   (rule "concrete_and_3" (formula "22") (term "1,0"))
                                                   (rule "replace_known_left" (formula "22") (term "1,0") (ifseqformula "17"))
                                                   (rule "concrete_and_3" (formula "22") (term "0"))
                                                   (rule "replace_known_left" (formula "22") (term "0") (ifseqformula "19"))
                                                   (rule "concrete_and_1" (formula "22"))
                                                   (rule "orRight" (formula "22"))
                                                   (rule "orRight" (formula "22"))
                                                   (rule "replace_known_left" (formula "24") (term "0") (ifseqformula "5"))
                                                   (rule "concrete_and_1" (formula "24"))
                                                   (rule "inEqSimp_gtRight" (formula "21"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                   (rule "inEqSimp_ltRight" (formula "22"))
                                                   (rule "times_zero_1" (formula "1") (term "0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0"))
                                                   (rule "inEqSimp_geqRight" (formula "22"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                   (rule "inEqSimp_ltRight" (formula "23"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                   (rule "polySimp_addComm0" (formula "3") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                   (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                   (rule "applyEq" (formula "24") (term "0") (ifseqformula "15"))
                                                   (rule "apply_eq_boolean_rigid" (formula "15") (term "1") (ifseqformula "27"))
                                                   (rule "false_to_not_true" (formula "15"))
                                                   (rule "notLeft" (formula "15"))
                                                   (rule "apply_eq_boolean_rigid" (formula "17") (term "1") (ifseqformula "27"))
                                                   (rule "false_to_not_true" (formula "17"))
                                                   (rule "notLeft" (formula "17"))
                                                   (rule "applyEq" (formula "2") (term "0,1,0") (ifseqformula "14"))
                                                   (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "14"))
                                                   (rule "applyEqRigid" (formula "17") (term "1") (ifseqformula "16"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                                   (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                   (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                   (rule "inEqSimp_strengthen1" (formula "2") (ifseqformula "22"))
                                                   (rule "inEqSimp_contradEq7" (formula "22") (ifseqformula "2"))
                                                   (rule "polySimp_mulComm0" (formula "22") (term "1,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0"))
                                                   (rule "add_literals" (formula "22") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "22") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "22") (term "0,0"))
                                                   (rule "leq_literals" (formula "22") (term "0"))
                                                   (rule "concrete_and_2" (formula "22"))
                                                   (rule "false_right" (formula "22"))
                                                   (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "3"))
                                                   (rule "inEqSimp_homoInEq0" (formula "6") (term "0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0"))
                                                   (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                                   (rule "add_literals" (formula "6") (term "0,0"))
                                                   (rule "qeq_literals" (formula "6") (term "0"))
                                                   (rule "concrete_or_1" (formula "6"))
                                                   (rule "true_left" (formula "6"))
                                                   (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "1"))
                                                   (rule "andLeft" (formula "3"))
                                                   (rule "inEqSimp_homoInEq1" (formula "3"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                                   (rule "add_literals" (formula "3") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "3") (term "1,0"))
                                                   (rule "add_zero_right" (formula "3") (term "0"))
                                                   (rule "leq_literals" (formula "3"))
                                                   (rule "closeFalse" (formula "3"))
                                                )
                                                (branch " Post"
                                                   (rule "blockEmpty" (formula "22") (term "1,8,8") (userinteraction))
                                                   (builtin "Update Simplification" (formula "22"))
                                                   (rule "impRight" (formula "22") (userinteraction))
                                                   (rule "inChar" (formula "1") (term "1,1,0"))
                                                   (rule "concrete_and_3" (formula "1") (term "1,0"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "typeEqDerived" (formula "2") (term "0,1,1,0") (ifseqformula "1"))
                                                   (rule "boolean_equal" (formula "2") (term "1,1,0"))
                                                   (rule "concrete_and_3" (formula "2") (term "1,0"))
                                                   (rule "andLeft" (formula "2"))
                                                   (rule "eqSymm" (formula "3") (term "1,1"))
                                                   (rule "replace_known_left" (formula "2") (term "0,1") (ifseqformula "1"))
                                                   (rule "concrete_not_1" (formula "2") (term "1"))
                                                   (rule "concrete_impl_3" (formula "2"))
                                                   (rule "notLeft" (formula "2"))
                                                   (rule "orRight" (formula "22"))
                                                   (rule "replace_known_left" (formula "2") (term "0,0") (ifseqformula "7"))
                                                   (rule "concrete_and_1" (formula "2") (term "0"))
                                                   (rule "replace_known_left" (formula "2") (term "0,1") (ifseqformula "1"))
                                                   (rule "concrete_and_1" (formula "2") (term "1"))
                                                   (rule "inEqSimp_ltRight" (formula "22"))
                                                   (rule "times_zero_1" (formula "1") (term "0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0"))
                                                   (rule "inEqSimp_geqRight" (formula "22"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "3") (term "0"))
                                                   (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0"))
                                                   (rule "replace_known_left" (formula "3") (term "0") (ifseqformula "1"))
                                                   (rule "concrete_impl_1" (formula "3"))
                                                   (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                   (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "14"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                   (rule "assignment" (formula "24") (term "8") (userinteraction))
                                                   (builtin "Update Simplification" (formula "24"))
                                                   (rule "variableDeclarationAssign" (formula "24") (term "8") (userinteraction))
                                                   (rule "variableDeclaration" (formula "24") (term "8") (newnames "j_32") (userinteraction))
                                                   (rule "methodCallWithAssignment" (formula "24") (term "8") (inst "#v0=j_33") (userinteraction))
                                                   (branch " Normal Execution (s2 != null)"
                                                      (builtin "Update Simplification" (formula "24"))
                                                      (rule "variableDeclaration" (formula "24") (term "8") (newnames "j_33") (userinteraction))
                                                      (rule "variableDeclarationAssign" (formula "24") (term "8") (userinteraction))
                                                      (rule "variableDeclaration" (formula "24") (term "8") (newnames "arg0_8") (userinteraction))
                                                      (rule "assignment" (formula "24") (term "8") (userinteraction))
                                                      (builtin "Update Simplification" (formula "24"))
                                                      (builtin "Use Operation Contract" (formula "24") (term "9") (newnames "arg0_8_0,result_21") (contract "charAtExc#charAtNormal;;"))
                                                      (branch " Pre"
                                                         (builtin "Update Simplification" (formula "24"))
                                                         (rule "inInt" (formula "24") (term "1,0"))
                                                         (rule "concrete_and_3" (formula "24") (term "0"))
                                                         (rule "eqSymm" (formula "22"))
                                                         (rule "replace_known_left" (formula "24") (term "0,1,0") (ifseqformula "20"))
                                                         (rule "concrete_and_1" (formula "24") (term "1,0"))
                                                         (rule "replace_known_right" (formula "24") (term "0,1,0") (ifseqformula "28"))
                                                         (rule "concrete_not_2" (formula "24") (term "1,0"))
                                                         (rule "concrete_and_3" (formula "24") (term "0"))
                                                         (rule "replace_known_left" (formula "24") (term "0") (ifseqformula "21"))
                                                         (rule "concrete_and_1" (formula "24"))
                                                         (rule "orRight" (formula "24"))
                                                         (rule "orRight" (formula "24"))
                                                         (rule "replace_known_left" (formula "26") (term "0") (ifseqformula "7"))
                                                         (rule "concrete_and_1" (formula "26"))
                                                         (rule "inEqSimp_gtRight" (formula "23"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                         (rule "inEqSimp_geqRight" (formula "25"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                         (rule "inEqSimp_ltRight" (formula "25"))
                                                         (rule "times_zero_1" (formula "1") (term "0,0"))
                                                         (rule "add_zero_left" (formula "1") (term "0"))
                                                         (rule "inEqSimp_ltRight" (formula "25"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                         (rule "polySimp_addComm0" (formula "3") (term "0"))
                                                         (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                         (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                         (rule "applyEq" (formula "2") (term "0,1,0") (ifseqformula "12"))
                                                         (rule "apply_eq_boolean" (formula "17") (term "0") (ifseqformula "26"))
                                                         (rule "eqSymm" (formula "17"))
                                                         (rule "false_to_not_true" (formula "17"))
                                                         (rule "notLeft" (formula "17"))
                                                         (rule "apply_eq_boolean_rigid" (formula "19") (term "1") (ifseqformula "29"))
                                                         (rule "false_to_not_true" (formula "19"))
                                                         (rule "notLeft" (formula "19"))
                                                         (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "12"))
                                                         (rule "applyEq" (formula "19") (term "1") (ifseqformula "18"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                                         (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                         (rule "inEqSimp_strengthen1" (formula "3") (ifseqformula "24"))
                                                         (rule "inEqSimp_contradEq7" (formula "24") (ifseqformula "3"))
                                                         (rule "polySimp_mulComm0" (formula "24") (term "1,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0"))
                                                         (rule "add_literals" (formula "24") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "24") (term "1,0,0"))
                                                         (rule "add_literals" (formula "24") (term "0,0"))
                                                         (rule "leq_literals" (formula "24") (term "0"))
                                                         (rule "concrete_and_2" (formula "24"))
                                                         (rule "false_right" (formula "24"))
                                                         (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "6"))
                                                         (rule "inEqSimp_homoInEq0" (formula "9") (term "0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0"))
                                                         (rule "add_literals" (formula "9") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "9") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "9") (term "0,0"))
                                                         (rule "qeq_literals" (formula "9") (term "0"))
                                                         (rule "concrete_or_1" (formula "9"))
                                                         (rule "true_left" (formula "9"))
                                                         (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "1"))
                                                         (rule "andLeft" (formula "2"))
                                                         (rule "inEqSimp_homoInEq1" (formula "2"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                                         (rule "add_literals" (formula "2") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "2") (term "1,0"))
                                                         (rule "add_literals" (formula "2") (term "0"))
                                                         (rule "leq_literals" (formula "2"))
                                                         (rule "closeFalse" (formula "2"))
                                                      )
                                                      (branch " Post"
                                                         (rule "blockEmpty" (formula "24") (term "1,8,9") (userinteraction))
                                                         (builtin "Update Simplification" (formula "24"))
                                                         (rule "impRight" (formula "24") (userinteraction))
                                                         (rule "inChar" (formula "1") (term "1,1,0"))
                                                         (rule "concrete_and_3" (formula "1") (term "1,0"))
                                                         (rule "andLeft" (formula "1"))
                                                         (rule "andLeft" (formula "1"))
                                                         (rule "typeEqDerived" (formula "2") (term "0,1,1,0") (ifseqformula "1"))
                                                         (rule "boolean_equal" (formula "2") (term "1,1,0"))
                                                         (rule "concrete_and_3" (formula "2") (term "1,0"))
                                                         (rule "andLeft" (formula "2"))
                                                         (rule "eqSymm" (formula "3") (term "1,1"))
                                                         (rule "replace_known_left" (formula "2") (term "0,1") (ifseqformula "1"))
                                                         (rule "concrete_not_1" (formula "2") (term "1"))
                                                         (rule "concrete_impl_3" (formula "2"))
                                                         (rule "notLeft" (formula "2"))
                                                         (rule "orRight" (formula "24"))
                                                         (rule "replace_known_left" (formula "2") (term "0,0") (ifseqformula "9"))
                                                         (rule "concrete_and_1" (formula "2") (term "0"))
                                                         (rule "replace_known_left" (formula "2") (term "0,1") (ifseqformula "1"))
                                                         (rule "concrete_and_1" (formula "2") (term "1"))
                                                         (rule "inEqSimp_ltRight" (formula "24"))
                                                         (rule "times_zero_1" (formula "1") (term "0,0"))
                                                         (rule "add_zero_left" (formula "1") (term "0"))
                                                         (rule "inEqSimp_geqRight" (formula "24"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "3") (term "0"))
                                                         (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0"))
                                                         (rule "replace_known_left" (formula "3") (term "0") (ifseqformula "1"))
                                                         (rule "concrete_impl_1" (formula "3"))
                                                         (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                         (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "12"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                         (rule "assignment" (formula "27") (term "9") (userinteraction))
                                                         (builtin "Update Simplification" (formula "27"))
                                                         (rule "assignmentSubtractionInt" (formula "27") (term "9") (userinteraction))
                                                         (builtin "Update Simplification" (formula "27"))
                                                         (rule "ifElseUnfold" (formula "27") (term "8") (inst "#boolv=b") (userinteraction))
                                                         (rule "variableDeclaration" (formula "27") (term "8") (newnames "b_11") (userinteraction))
                                                         (rule "greater_equal_than_comparison_new" (formula "27") (term "8") (userinteraction))
                                                         (builtin "Update Simplification" (formula "27"))
                                                         (rule "castDelInt" (formula "27") (term "0,0"))
                                                         (rule "translateJavaSubInt" (formula "27") (term "0,0"))
                                                         (rule "polySimp_elimSub" (formula "27") (term "0,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "27") (term "0"))
                                                         (rule "polySimp_mulLiterals" (formula "27") (term "0,0"))
                                                         (rule "polySimp_elimOne" (formula "27") (term "0,0"))
                                                         (rule "ifthenelse_split_for" (formula "27") (userinteraction))
                                                         (branch " result_20 <= result_18 TRUE"
                                                            (rule "ifElseSkipElse" (formula "28") (term "8") (userinteraction))
                                                            (rule "assignment" (formula "28") (term "8") (userinteraction))
                                                            (builtin "Update Simplification" (formula "28"))
                                                            (rule "compound_assignment_op_plus" (formula "28") (term "8") (userinteraction))
                                                            (rule "compound_int_cast_expression" (formula "28") (term "8") (inst "#v=j") (userinteraction))
                                                            (rule "variableDeclarationAssign" (formula "28") (term "8") (userinteraction))
                                                            (rule "variableDeclaration" (formula "28") (term "8") (newnames "j_34") (userinteraction))
                                                            (rule "remove_parentheses_right" (formula "28") (term "8") (userinteraction))
                                                            (rule "compound_addition_2" (formula "28") (term "8") (inst "#v1=j_36") (inst "#v0=j_35") (userinteraction))
                                                            (rule "variableDeclarationAssign" (formula "28") (term "8") (userinteraction))
                                                            (rule "variableDeclaration" (formula "28") (term "8") (newnames "j_35") (userinteraction))
                                                            (rule "assignment" (formula "28") (term "8") (userinteraction))
                                                            (builtin "Update Simplification" (formula "28"))
                                                            (rule "variableDeclarationAssign" (formula "28") (term "9") (userinteraction))
                                                            (rule "variableDeclaration" (formula "28") (term "9") (newnames "j_36") (userinteraction))
                                                            (rule "remove_parentheses_right" (formula "28") (term "9") (userinteraction))
                                                            (rule "assignment" (formula "28") (term "9") (userinteraction))
                                                            (builtin "Update Simplification" (formula "28"))
                                                            (rule "assignmentAdditionInt" (formula "28") (term "9") (userinteraction))
                                                            (builtin "Update Simplification" (formula "28"))
                                                            (rule "widening_identity_cast_5" (formula "28") (term "8") (userinteraction))
                                                            (rule "assignment" (formula "28") (term "8") (userinteraction))
                                                            (builtin "Update Simplification" (formula "28"))
                                                            (rule "blockEmpty" (formula "28") (term "7") (userinteraction))
                                                            (rule "preincrement" (formula "28") (term "7") (userinteraction))
                                                            (rule "compound_int_cast_expression" (formula "28") (term "7") (inst "#v=j") (userinteraction))
                                                            (rule "variableDeclarationAssign" (formula "28") (term "7") (userinteraction))
                                                            (rule "variableDeclaration" (formula "28") (term "7") (newnames "j_37") (userinteraction))
                                                            (rule "remove_parentheses_right" (formula "28") (term "7") (userinteraction))
                                                            (rule "assignmentAdditionInt" (formula "28") (term "7") (userinteraction))
                                                            (builtin "Update Simplification" (formula "28"))
                                                            (rule "widening_identity_cast_5" (formula "28") (term "8") (userinteraction))
                                                            (rule "assignment" (formula "28") (term "8") (userinteraction))
                                                            (builtin "Update Simplification" (formula "28"))
                                                            (rule "tryEmpty" (formula "28") (term "7") (userinteraction))
                                                            (rule "methodCallEmpty" (formula "28") (term "7") (userinteraction))
                                                            (rule "emptyModality" (formula "28") (term "7") (userinteraction))
                                                            (builtin "Update Simplification" (formula "28"))
                                                            (rule "boolean_not_equal_2" (formula "28") (term "0,0") (userinteraction))
                                                            (rule "concrete_impl_2" (formula "28") (term "0") (userinteraction))
                                                            (rule "concrete_and_1" (formula "28") (userinteraction))
                                                            (rule "boolean_not_equal_2" (formula "28") (term "0,0") (userinteraction))
                                                            (rule "concrete_not_2" (formula "28") (term "0") (userinteraction))
                                                            (rule "concrete_impl_1" (formula "28") (userinteraction))
                                                            (rule "castDelInt" (formula "28") (term "1,0,0,1,0,0"))
                                                            (rule "castDelInt" (formula "28") (term "1,0,1"))
                                                            (rule "castDelInt" (formula "28") (term "1,1,0"))
                                                            (rule "castDelInt" (formula "28") (term "1,0,1,0"))
                                                            (rule "castDelInt" (formula "28") (term "0,1,0,0"))
                                                            (rule "translateJavaAddInt" (formula "28") (term "1,0,1"))
                                                            (rule "translateJavaAddInt" (formula "28") (term "1,0,1,0"))
                                                            (rule "translateJavaSubInt" (formula "28") (term "1,0,1,0,0"))
                                                            (rule "translateJavaAddInt" (formula "28") (term "0,1,0,0"))
                                                            (rule "replace_known_left" (formula "28") (term "0,0,0") (ifseqformula "8"))
                                                            (rule "concrete_and_1" (formula "28") (term "0,0"))
                                                            (rule "polySimp_elimSub" (formula "28") (term "1,1,0"))
                                                            (rule "polySimp_elimSub" (formula "28") (term "0,1"))
                                                            (rule "polySimp_elimSub" (formula "28") (term "0,1,0"))
                                                            (rule "polySimp_elimSub" (formula "28") (term "1,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "28") (term "1,0,1"))
                                                            (rule "polySimp_mulComm0" (formula "28") (term "1,0,1,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0"))
                                                            (rule "polySimp_addComm0" (formula "28") (term "1,1,0,1"))
                                                            (rule "polySimp_addComm0" (formula "28") (term "1,1,0,0,1,0"))
                                                            (rule "polySimp_addComm0" (formula "28") (term "1,1,1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "28") (term "1,0,1"))
                                                            (rule "mul_literals" (formula "28") (term "0,1,0,1"))
                                                            (rule "polySimp_addComm0" (formula "28") (term "0,1"))
                                                            (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0"))
                                                            (rule "polySimp_mulAssoc" (formula "28") (term "0,1,0,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "28") (term "0,0,1,0,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "28") (term "0,1,0,0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "28") (term "0,1,0,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "28") (term "1,1,0,1,0"))
                                                            (rule "mul_literals" (formula "28") (term "0,1,1,0,1,0"))
                                                            (rule "polySimp_addComm0" (formula "28") (term "1,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "28") (term "0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "28") (term "0,1,0"))
                                                            (rule "polySimp_addComm1" (formula "28") (term "0,0,1,0"))
                                                            (rule "polySimp_pullOutFactor2b" (formula "28") (term "0,1,0"))
                                                            (rule "add_literals" (formula "28") (term "1,1,0,1,0"))
                                                            (rule "times_zero_1" (formula "28") (term "1,0,1,0"))
                                                            (rule "add_zero_right" (formula "28") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "28") (term "0,1,0"))
                                                            (rule "polySimp_addComm1" (formula "28") (term "0,0,1,0"))
                                                            (rule "add_literals" (formula "28") (term "0,0,0,1,0"))
                                                            (rule "add_zero_left" (formula "28") (term "0,0,1,0"))
                                                            (rule "polySimp_pullOutFactor1" (formula "28") (term "0,1,0"))
                                                            (rule "add_literals" (formula "28") (term "1,0,1,0"))
                                                            (rule "times_zero_1" (formula "28") (term "0,1,0"))
                                                            (rule "leq_literals" (formula "28") (term "1,0"))
                                                            (rule "concrete_and_3" (formula "28") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "1"))
                                                            (rule "polySimp_mulComm0" (formula "28") (term "1,1"))
                                                            (rule "polySimp_rightDist" (formula "28") (term "1,1"))
                                                            (rule "mul_literals" (formula "28") (term "0,1,1"))
                                                            (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1"))
                                                            (rule "polySimp_elimOne" (formula "28") (term "1,1,1"))
                                                            (rule "replace_known_left" (formula "28") (term "1") (ifseqformula "7"))
                                                            (rule "concrete_and_3" (formula "28"))
                                                            (rule "inEqSimp_geqRight" (formula "28"))
                                                            (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                            (rule "add_zero_right" (formula "1") (term "0,0"))
                                                            (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                            (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                            (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                            (rule "polySimp_pullOutFactor2b" (formula "1") (term "0"))
                                                            (rule "add_literals" (formula "1") (term "1,1,0"))
                                                            (rule "times_zero_1" (formula "1") (term "1,0"))
                                                            (rule "add_zero_right" (formula "1") (term "0"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "0"))
                                                            (rule "mul_literals" (formula "1") (term "0,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "11"))
                                                            (rule "qeq_literals" (formula "1") (term "0"))
                                                            (rule "concrete_and_2" (formula "1"))
                                                            (rule "closeFalse" (formula "1"))
                                                         )
                                                         (branch " result_20 <= result_18 FALSE"
                                                            (rule "ifElseSkipThen" (formula "28") (term "8") (userinteraction))
                                                            (rule "assignment" (formula "28") (term "8") (userinteraction))
                                                            (builtin "Update Simplification" (formula "28"))
                                                            (rule "compound_assignment_op_plus" (formula "28") (term "8") (userinteraction))
                                                            (rule "compound_int_cast_expression" (formula "28") (term "8") (inst "#v=j") (userinteraction))
                                                            (rule "variableDeclarationAssign" (formula "28") (term "8") (userinteraction))
                                                            (rule "variableDeclaration" (formula "28") (term "8") (newnames "j_38") (userinteraction))
                                                            (rule "remove_parentheses_right" (formula "28") (term "8") (userinteraction))
                                                            (rule "compound_addition_2" (formula "28") (term "8") (inst "#v1=j_40") (inst "#v0=j_39") (userinteraction))
                                                            (rule "variableDeclarationAssign" (formula "28") (term "8") (userinteraction))
                                                            (rule "variableDeclaration" (formula "28") (term "8") (newnames "j_39") (userinteraction))
                                                            (rule "assignment" (formula "28") (term "8") (userinteraction))
                                                            (builtin "Update Simplification" (formula "28"))
                                                            (rule "variableDeclarationAssign" (formula "28") (term "9") (userinteraction))
                                                            (rule "variableDeclaration" (formula "28") (term "9") (newnames "j_40") (userinteraction))
                                                            (rule "remove_parentheses_right" (formula "28") (term "9") (userinteraction))
                                                            (rule "unaryMinusInt" (formula "28") (term "9") (userinteraction))
                                                            (builtin "Update Simplification" (formula "28"))
                                                            (rule "assignmentAdditionInt" (formula "28") (term "9") (userinteraction))
                                                            (builtin "Update Simplification" (formula "28"))
                                                            (rule "widening_identity_cast_5" (formula "28") (term "8") (userinteraction))
                                                            (rule "assignment" (formula "28") (term "8") (userinteraction))
                                                            (builtin "Update Simplification" (formula "28"))
                                                            (rule "blockEmpty" (formula "28") (term "7") (userinteraction))
                                                            (rule "preincrement" (formula "28") (term "7") (userinteraction))
                                                            (rule "compound_int_cast_expression" (formula "28") (term "7") (inst "#v=j") (userinteraction))
                                                            (rule "variableDeclarationAssign" (formula "28") (term "7") (userinteraction))
                                                            (rule "variableDeclaration" (formula "28") (term "7") (newnames "j_41") (userinteraction))
                                                            (rule "remove_parentheses_right" (formula "28") (term "7") (userinteraction))
                                                            (rule "assignmentAdditionInt" (formula "28") (term "7") (userinteraction))
                                                            (builtin "Update Simplification" (formula "28"))
                                                            (rule "widening_identity_cast_5" (formula "28") (term "8") (userinteraction))
                                                            (rule "assignment" (formula "28") (term "8") (userinteraction))
                                                            (builtin "Update Simplification" (formula "28"))
                                                            (rule "tryEmpty" (formula "28") (term "7") (userinteraction))
                                                            (rule "methodCallEmpty" (formula "28") (term "7") (userinteraction))
                                                            (rule "emptyModality" (formula "28") (term "7") (userinteraction))
                                                            (builtin "Update Simplification" (formula "28"))
                                                            (rule "boolean_not_equal_2" (formula "28") (term "0,0") (userinteraction))
                                                            (rule "concrete_impl_2" (formula "28") (term "0") (userinteraction))
                                                            (rule "concrete_and_1" (formula "28") (userinteraction))
                                                            (rule "boolean_not_equal_2" (formula "28") (term "0,0") (userinteraction))
                                                            (rule "concrete_not_2" (formula "28") (term "0") (userinteraction))
                                                            (rule "concrete_impl_1" (formula "28") (userinteraction))
                                                            (rule "castDelInt" (formula "28") (term "1,0,1"))
                                                            (rule "castDelInt" (formula "28") (term "1,0,1,0"))
                                                            (rule "castDelInt" (formula "28") (term "1,1,0"))
                                                            (rule "castDelInt" (formula "28") (term "0,0,1,0,0,1,0,0"))
                                                            (rule "castDelInt" (formula "28") (term "0,1,0,0"))
                                                            (rule "castDelInt" (formula "28") (term "1,0,1,0,0"))
                                                            (rule "translateJavaAddInt" (formula "28") (term "1,0,1"))
                                                            (rule "translateJavaAddInt" (formula "28") (term "1,0,1,0"))
                                                            (rule "translateJavaAddInt" (formula "28") (term "0,1,0,0"))
                                                            (rule "translateJavaSubInt" (formula "28") (term "0,1,0,1,0,0"))
                                                            (rule "translateJavaUnaryMinusInt" (formula "28") (term "1,0,1,0,0"))
                                                            (rule "replace_known_left" (formula "28") (term "0,0,0") (ifseqformula "7"))
                                                            (rule "concrete_and_1" (formula "28") (term "0,0"))
                                                            (rule "polySimp_elimSub" (formula "28") (term "1,1,0"))
                                                            (rule "polySimp_elimSub" (formula "28") (term "0,1"))
                                                            (rule "polySimp_elimSub" (formula "28") (term "0,1,0"))
                                                            (rule "polySimp_elimSub" (formula "28") (term "0,1,0,0,0"))
                                                            (rule "polySimp_elimNeg" (formula "28") (term "1,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "28") (term "1,0,1"))
                                                            (rule "polySimp_mulComm0" (formula "28") (term "1,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0"))
                                                            (rule "polySimp_addComm0" (formula "28") (term "1,1,0,1"))
                                                            (rule "polySimp_addComm0" (formula "28") (term "1,1,1,0,1,0"))
                                                            (rule "polySimp_addComm0" (formula "28") (term "1,1,0,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "28") (term "0,1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "28") (term "1,0,1"))
                                                            (rule "mul_literals" (formula "28") (term "0,1,0,1"))
                                                            (rule "polySimp_addComm0" (formula "28") (term "0,1"))
                                                            (rule "polySimp_rightDist" (formula "28") (term "1,1,0,1,0"))
                                                            (rule "mul_literals" (formula "28") (term "0,1,1,0,1,0"))
                                                            (rule "polySimp_addComm0" (formula "28") (term "1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0"))
                                                            (rule "polySimp_mulAssoc" (formula "28") (term "0,1,0,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "28") (term "0,0,1,0,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "28") (term "0,1,0,0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "28") (term "0,1,0,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "28") (term "0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "28") (term "0,1,0"))
                                                            (rule "polySimp_addComm1" (formula "28") (term "0,0,1,0"))
                                                            (rule "polySimp_pullOutFactor2b" (formula "28") (term "0,1,0"))
                                                            (rule "add_literals" (formula "28") (term "1,1,0,1,0"))
                                                            (rule "times_zero_1" (formula "28") (term "1,0,1,0"))
                                                            (rule "add_zero_right" (formula "28") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "28") (term "0,1,0"))
                                                            (rule "polySimp_addComm1" (formula "28") (term "0,0,1,0"))
                                                            (rule "add_literals" (formula "28") (term "0,0,0,1,0"))
                                                            (rule "add_zero_left" (formula "28") (term "0,0,1,0"))
                                                            (rule "polySimp_pullOutFactor1" (formula "28") (term "0,1,0"))
                                                            (rule "add_literals" (formula "28") (term "1,0,1,0"))
                                                            (rule "times_zero_1" (formula "28") (term "0,1,0"))
                                                            (rule "leq_literals" (formula "28") (term "1,0"))
                                                            (rule "concrete_and_3" (formula "28") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "1"))
                                                            (rule "polySimp_mulComm0" (formula "28") (term "1,1"))
                                                            (rule "polySimp_rightDist" (formula "28") (term "1,1"))
                                                            (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1"))
                                                            (rule "mul_literals" (formula "28") (term "0,1,1"))
                                                            (rule "polySimp_elimOne" (formula "28") (term "1,1,1"))
                                                            (rule "replace_known_left" (formula "28") (term "1") (ifseqformula "6"))
                                                            (rule "concrete_and_3" (formula "28"))
                                                            (rule "inEqSimp_geqRight" (formula "28"))
                                                            (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                            (rule "add_zero_right" (formula "1") (term "0,0"))
                                                            (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                            (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "0,1"))
                                                            (rule "mul_literals" (formula "1") (term "0,0,1"))
                                                            (rule "eqSymm" (formula "26"))
                                                            (rule "inEqSimp_leqRight" (formula "28"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                            (rule "inEqSimp_gtRight" (formula "28"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                            (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                            (rule "apply_eq_boolean" (formula "20") (term "0") (ifseqformula "29"))
                                                            (rule "eqSymm" (formula "20"))
                                                            (rule "false_to_not_true" (formula "20"))
                                                            (rule "notLeft" (formula "20"))
                                                            (rule "apply_eq_boolean_rigid" (formula "22") (term "1") (ifseqformula "32"))
                                                            (rule "false_to_not_true" (formula "22"))
                                                            (rule "notLeft" (formula "22"))
                                                            (rule "applyEqRigid" (formula "22") (term "1") (ifseqformula "21"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                            (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                            (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                            (rule "mul_literals" (formula "2") (term "0,1"))
                                                            (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                            (rule "inEqSimp_strengthen1" (formula "1") (ifseqformula "27"))
                                                            (rule "inEqSimp_contradEq7" (formula "27") (ifseqformula "1"))
                                                            (rule "polySimp_mulComm0" (formula "27") (term "1,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0"))
                                                            (rule "add_literals" (formula "27") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "27") (term "1,0,0"))
                                                            (rule "add_literals" (formula "27") (term "0,0"))
                                                            (rule "leq_literals" (formula "27") (term "0"))
                                                            (rule "concrete_and_2" (formula "27"))
                                                            (rule "false_right" (formula "27"))
                                                            (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "9"))
                                                            (rule "inEqSimp_homoInEq0" (formula "12") (term "0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0"))
                                                            (rule "add_literals" (formula "12") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "12") (term "1,0,0"))
                                                            (rule "add_zero_right" (formula "12") (term "0,0"))
                                                            (rule "qeq_literals" (formula "12") (term "0"))
                                                            (rule "concrete_or_1" (formula "12"))
                                                            (rule "true_left" (formula "12"))
                                                            (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "3"))
                                                            (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                            (rule "mul_literals" (formula "2") (term "0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                            (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                                            (rule "polySimp_pullOutFactor2b" (formula "2") (term "0"))
                                                            (rule "add_literals" (formula "2") (term "1,1,0"))
                                                            (rule "times_zero_1" (formula "2") (term "1,0"))
                                                            (rule "add_zero_right" (formula "2") (term "0"))
                                                            (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                            (rule "add_literals" (formula "2") (term "0,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                            (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "12"))
                                                            (rule "qeq_literals" (formula "2") (term "0"))
                                                            (rule "concrete_and_2" (formula "2"))
                                                            (rule "closeFalse" (formula "2"))
                                                         )
                                                      )
                                                      (branch " Exceptional Post"
                                                         (builtin "Update Simplification" (formula "24"))
                                                         (rule "impRight" (formula "24"))
                                                         (rule "andLeft" (formula "1"))
                                                         (rule "andLeft" (formula "2"))
                                                         (rule "andLeft" (formula "1"))
                                                         (rule "andLeft" (formula "1"))
                                                         (rule "notLeft" (formula "2"))
                                                         (rule "eqSymm" (formula "26"))
                                                         (rule "eqSymm" (formula "3") (term "1,1"))
                                                         (rule "replace_known_right" (formula "2") (term "0,0,1") (ifseqformula "25"))
                                                         (rule "concrete_not_2" (formula "2") (term "0,1"))
                                                         (rule "concrete_and_1" (formula "2") (term "1"))
                                                         (rule "replace_known_left" (formula "3") (term "0,0") (ifseqformula "10"))
                                                         (rule "concrete_and_1" (formula "3") (term "0"))
                                                         (rule "replace_known_right" (formula "3") (term "0,1") (ifseqformula "25"))
                                                         (rule "concrete_and_2" (formula "3") (term "1"))
                                                         (rule "concrete_impl_3" (formula "3"))
                                                         (rule "notLeft" (formula "3"))
                                                         (rule "polySimp_elimSub" (formula "28") (term "0,1,0,1,1,0,8"))
                                                         (rule "polySimp_elimSub" (formula "28") (term "3"))
                                                         (rule "polySimp_elimSub" (formula "28") (term "0,1,1,1,0,8"))
                                                         (rule "inEqSimp_gtRight" (formula "27"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "3") (term "0,0"))
                                                         (rule "times_zero_1" (formula "3") (term "1,0,0,0,0"))
                                                         (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                                         (rule "inEqSimp_ltRight" (formula "25"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,1,1,0,8"))
                                                         (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,1,1,0,8"))
                                                         (rule "polySimp_addComm0" (formula "28") (term "3"))
                                                         (rule "polySimp_addComm0" (formula "28") (term "0,1,1,1,0,8"))
                                                         (rule "polySimp_addComm0" (formula "2") (term "0"))
                                                         (rule "inEqSimp_commuteGeq" (formula "4") (term "1,0"))
                                                         (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                         (rule "polySimp_addComm0" (formula "28") (term "1,0,1,0,1,1,0,8"))
                                                         (rule "polySimp_addAssoc" (formula "28") (term "0,1,0,1,1,0,8"))
                                                         (rule "polySimp_addComm1" (formula "28") (term "0,0,1,0,1,1,0,8"))
                                                         (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "13"))
                                                         (rule "apply_eq_boolean" (formula "18") (term "0") (ifseqformula "29"))
                                                         (rule "eqSymm" (formula "18"))
                                                         (rule "false_to_not_true" (formula "18"))
                                                         (rule "notLeft" (formula "18"))
                                                         (rule "applyEq" (formula "4") (term "0,1,0") (ifseqformula "13"))
                                                         (rule "apply_eq_boolean_rigid" (formula "20") (term "1") (ifseqformula "32"))
                                                         (rule "false_to_not_true" (formula "20"))
                                                         (rule "notLeft" (formula "20"))
                                                         (rule "applyEq" (formula "20") (term "1") (ifseqformula "19"))
                                                         (rule "applyEqRigid" (formula "27") (term "1,0,0,1,0,0,8") (ifseqformula "19"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "4") (term "0,0"))
                                                         (rule "mul_literals" (formula "4") (term "1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "1,1,1,0,8"))
                                                         (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,1,0,8"))
                                                         (rule "polySimp_elimOne" (formula "27") (term "1,1,1,1,0,8"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,1,1,0,8"))
                                                         (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,1,1,0,8"))
                                                         (rule "polySimp_rightDist" (formula "27") (term "1,1,0,1,1,0,8"))
                                                         (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,1,1,0,8"))
                                                         (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,1,1,0,8"))
                                                         (rule "polySimp_rightDist" (formula "27") (term "0,1,1,0,1,1,0,8"))
                                                         (rule "mul_literals" (formula "27") (term "0,0,1,1,0,1,1,0,8"))
                                                         (rule "polySimp_mulLiterals" (formula "27") (term "1,0,1,1,0,1,1,0,8"))
                                                         (rule "polySimp_elimOne" (formula "27") (term "1,0,1,1,0,1,1,0,8"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                         (rule "replace_known_left" (formula "4") (term "1,0") (ifseqformula "1"))
                                                         (rule "concrete_or_3" (formula "4") (term "0"))
                                                         (rule "concrete_impl_1" (formula "4"))
                                                         (rule "inEqSimp_strengthen1" (formula "2") (ifseqformula "26"))
                                                         (rule "inEqSimp_contradEq7" (formula "26") (ifseqformula "2"))
                                                         (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0"))
                                                         (rule "add_literals" (formula "26") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "26") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "26") (term "0,0"))
                                                         (rule "leq_literals" (formula "26") (term "0"))
                                                         (rule "concrete_and_2" (formula "26"))
                                                         (rule "false_right" (formula "26"))
                                                         (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "7"))
                                                         (rule "inEqSimp_homoInEq0" (formula "10") (term "0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0"))
                                                         (rule "add_literals" (formula "10") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "10") (term "1,0,0"))
                                                         (rule "add_literals" (formula "10") (term "0,0"))
                                                         (rule "qeq_literals" (formula "10") (term "0"))
                                                         (rule "concrete_or_1" (formula "10"))
                                                         (rule "true_left" (formula "10"))
                                                         (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "1"))
                                                         (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                         (rule "mul_literals" (formula "2") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "8"))
                                                         (rule "andLeft" (formula "2"))
                                                         (rule "inEqSimp_homoInEq1" (formula "2"))
                                                         (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                         (rule "mul_literals" (formula "2") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                         (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                                         (rule "add_literals" (formula "2") (term "0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                                         (rule "add_literals" (formula "2") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "2") (term "1,0"))
                                                         (rule "add_literals" (formula "2") (term "0"))
                                                         (rule "leq_literals" (formula "2"))
                                                         (rule "closeFalse" (formula "2"))
                                                      )
                                                   )
                                                   (branch " Null Reference (s2 = null)"
                                                      (builtin "Update Simplification" (formula "1"))
                                                      (rule "close" (formula "29") (ifseqformula "1"))
                                                   )
                                                )
                                                (branch " Exceptional Post"
                                                   (builtin "Update Simplification" (formula "22"))
                                                   (rule "impRight" (formula "22"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "andLeft" (formula "2"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "notLeft" (formula "2"))
                                                   (rule "eqSymm" (formula "24"))
                                                   (rule "eqSymm" (formula "3") (term "1,1"))
                                                   (rule "replace_known_right" (formula "2") (term "0,0,1") (ifseqformula "23"))
                                                   (rule "concrete_not_2" (formula "2") (term "0,1"))
                                                   (rule "concrete_and_1" (formula "2") (term "1"))
                                                   (rule "replace_known_right" (formula "3") (term "0,1") (ifseqformula "23"))
                                                   (rule "concrete_and_2" (formula "3") (term "1"))
                                                   (rule "concrete_impl_3" (formula "3"))
                                                   (rule "notLeft" (formula "3"))
                                                   (rule "replace_known_left" (formula "22") (term "0") (ifseqformula "7"))
                                                   (rule "concrete_and_1" (formula "22"))
                                                   (rule "polySimp_elimSub" (formula "26") (term "0,1,0,1,1,0,7"))
                                                   (rule "polySimp_elimSub" (formula "26") (term "0,1,1,1,0,7"))
                                                   (rule "polySimp_elimSub" (formula "26") (term "3"))
                                                   (rule "inEqSimp_gtRight" (formula "25"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "3") (term "0,0"))
                                                   (rule "times_zero_1" (formula "3") (term "1,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "3") (term "0,0,0,0"))
                                                   (rule "inEqSimp_ltRight" (formula "23"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,1,1,0,7"))
                                                   (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,1,1,0,7"))
                                                   (rule "polySimp_addComm0" (formula "26") (term "0,1,1,1,0,7"))
                                                   (rule "polySimp_addComm0" (formula "26") (term "3"))
                                                   (rule "polySimp_addComm0" (formula "2") (term "0"))
                                                   (rule "inEqSimp_commuteGeq" (formula "4") (term "1,0"))
                                                   (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                   (rule "polySimp_addComm0" (formula "26") (term "1,0,1,0,1,1,0,7"))
                                                   (rule "polySimp_addAssoc" (formula "26") (term "0,1,0,1,1,0,7"))
                                                   (rule "polySimp_addComm1" (formula "26") (term "0,0,1,0,1,1,0,7"))
                                                   (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "15"))
                                                   (rule "applyEq" (formula "4") (term "0,1,0") (ifseqformula "15"))
                                                   (rule "apply_eq_boolean" (formula "16") (term "0") (ifseqformula "27"))
                                                   (rule "eqSymm" (formula "16"))
                                                   (rule "false_to_not_true" (formula "16"))
                                                   (rule "notLeft" (formula "16"))
                                                   (rule "apply_eq_boolean_rigid" (formula "18") (term "1") (ifseqformula "30"))
                                                   (rule "false_to_not_true" (formula "18"))
                                                   (rule "notLeft" (formula "18"))
                                                   (rule "applyEq" (formula "18") (term "1") (ifseqformula "17"))
                                                   (rule "applyEqRigid" (formula "25") (term "1,0,0,1,0,0,7") (ifseqformula "17"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "4") (term "0,0"))
                                                   (rule "mul_literals" (formula "4") (term "1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "1,1,1,0,7"))
                                                   (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,1,0,7"))
                                                   (rule "polySimp_elimOne" (formula "25") (term "1,1,1,1,0,7"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                   (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,1,1,0,7"))
                                                   (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,1,1,0,7"))
                                                   (rule "polySimp_rightDist" (formula "25") (term "1,1,0,1,1,0,7"))
                                                   (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,1,1,0,7"))
                                                   (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,1,1,0,7"))
                                                   (rule "polySimp_rightDist" (formula "25") (term "0,1,1,0,1,1,0,7"))
                                                   (rule "mul_literals" (formula "25") (term "0,0,1,1,0,1,1,0,7"))
                                                   (rule "polySimp_mulLiterals" (formula "25") (term "1,0,1,1,0,1,1,0,7"))
                                                   (rule "polySimp_elimOne" (formula "25") (term "1,0,1,1,0,1,1,0,7"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                   (rule "replace_known_left" (formula "4") (term "1,0") (ifseqformula "1"))
                                                   (rule "concrete_or_3" (formula "4") (term "0"))
                                                   (rule "concrete_impl_1" (formula "4"))
                                                   (rule "inEqSimp_strengthen1" (formula "2") (ifseqformula "24"))
                                                   (rule "inEqSimp_contradEq7" (formula "24") (ifseqformula "2"))
                                                   (rule "polySimp_mulComm0" (formula "24") (term "1,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0"))
                                                   (rule "add_literals" (formula "24") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "24") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "24") (term "0,0"))
                                                   (rule "leq_literals" (formula "24") (term "0"))
                                                   (rule "concrete_and_2" (formula "24"))
                                                   (rule "false_right" (formula "24"))
                                                   (rule "inEqSimp_contradInEq0" (formula "5") (ifseqformula "1"))
                                                   (rule "andLeft" (formula "5"))
                                                   (rule "inEqSimp_homoInEq1" (formula "5"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "5") (term "0"))
                                                   (rule "add_literals" (formula "5") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "5") (term "1,0"))
                                                   (rule "add_literals" (formula "5") (term "0"))
                                                   (rule "leq_literals" (formula "5"))
                                                   (rule "closeFalse" (formula "5"))
                                                )
                                             )
                                             (branch " Null Reference (s1 = null)"
                                                (builtin "Update Simplification" (formula "1"))
                                                (rule "close" (formula "26") (ifseqformula "1"))
                                             )
                                          )
                                          (branch " result_2 >= 1 + i_2_0 FALSE"
                                             (rule "inEqSimp_geqRight" (formula "20"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                             (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1"))
                                             (rule "assignment" (formula "2"))
                                             (rule "methodCallEmpty" (formula "2") (term "1"))
                                             (rule "emptyModality" (formula "2") (term "1"))
                                             (builtin "Update Simplification" (formula "2"))
                                             (rule "boolean_not_equal_2" (formula "2"))
                                             (rule "closeFalse" (formula "2"))
                                          )
                                       )
                                       (branch " Use Case"
                                          (builtin "Update Simplification" (formula "17"))
                                          (rule "impRight" (formula "17") (userinteraction))
                                          (rule "andLeft" (formula "1") (userinteraction))
                                          (rule "variableDeclarationAssign" (formula "19") (term "5") (userinteraction))
                                          (rule "variableDeclaration" (formula "19") (term "5") (newnames "b_12") (userinteraction))
                                          (rule "less_than_comparison_new" (formula "19") (term "5") (userinteraction))
                                          (builtin "Update Simplification" (formula "19"))
                                          (rule "assignment" (formula "19") (term "4,1") (userinteraction))
                                          (builtin "Update Simplification" (formula "19"))
                                          (rule "inEqSimp_ltToLeq" (formula "19") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "19") (term "0,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "19") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "19") (term "0,0"))
                                          (rule "polySimp_elimOne" (formula "19") (term "0,0"))
                                          (rule "blockEmpty" (formula "19") (term "1,0,5,1") (userinteraction))
                                          (rule "methodCallEmpty" (formula "19") (term "5,1") (userinteraction))
                                          (rule "emptyModality" (formula "19") (term "5,1") (userinteraction))
                                          (builtin "Update Simplification" (formula "19"))
                                          (rule "boolean_not_equal_1" (formula "19") (term "0,1") (userinteraction))
                                          (rule "concrete_impl_2" (formula "19") (term "1") (userinteraction))
                                          (rule "ifthenelse_split_for" (formula "19") (userinteraction))
                                          (branch " result_2 >= 1 + i_2_1 TRUE"
                                             (rule "closeTrue" (formula "20") (userinteraction))
                                          )
                                          (branch " result_2 >= 1 + i_2_1 FALSE"
                                             (rule "assignment" (formula "20") (term "4") (userinteraction))
                                             (builtin "Update Simplification" (formula "20"))
                                             (rule "methodCallEmpty" (formula "20") (term "5") (userinteraction))
                                             (rule "emptyModality" (formula "20") (term "5") (userinteraction))
                                             (builtin "Update Simplification" (formula "20"))
                                             (rule "false_to_not_true" (formula "20") (term "0") (userinteraction))
                                             (rule "boolean_not_equal_2" (formula "20") (term "0,0") (userinteraction))
                                             (rule "concrete_not_2" (formula "20") (term "0") (userinteraction))
                                             (rule "concrete_impl_1" (formula "20") (userinteraction))
                                             (rule "blockEmpty" (formula "20") (term "4") (userinteraction))
                                             (rule "compound_subtraction_2" (formula "20") (term "4") (inst "#v1=j_1") (inst "#v0=j") (userinteraction))
                                             (rule "variableDeclarationAssign" (formula "20") (term "4") (userinteraction))
                                             (rule "variableDeclaration" (formula "20") (term "4") (newnames "j_42") (userinteraction))
                                             (rule "methodCallWithAssignment" (formula "20") (term "4") (inst "#v0=j_43") (userinteraction))
                                             (branch " Normal Execution (s1 != null)"
                                                (builtin "Update Simplification" (formula "20"))
                                                (rule "variableDeclaration" (formula "20") (term "4") (newnames "j_43") (userinteraction))
                                                (builtin "Use Operation Contract" (formula "20") (term "4") (newnames "result_23") (contract "length;;"))
                                                (branch " Pre"
                                                   (builtin "Update Simplification" (formula "20"))
                                                   (rule "eqSymm" (formula "17"))
                                                   (rule "replace_known_right" (formula "20") (term "0,1,1") (ifseqformula "23"))
                                                   (rule "concrete_not_2" (formula "20") (term "1,1"))
                                                   (rule "concrete_and_3" (formula "20") (term "1"))
                                                   (rule "replace_known_left" (formula "20") (term "1") (ifseqformula "14"))
                                                   (rule "concrete_and_3" (formula "20"))
                                                   (rule "close" (formula "20") (ifseqformula "16"))
                                                )
                                                (branch " Post"
                                                   (rule "blockEmpty" (formula "20") (term "1,3,4") (userinteraction))
                                                   (builtin "Update Simplification" (formula "20"))
                                                   (rule "impRight" (formula "20") (userinteraction))
                                                   (rule "inInt" (formula "1") (term "1,1,0"))
                                                   (rule "concrete_and_3" (formula "1") (term "1,0"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "andLeft" (formula "2"))
                                                   (rule "eqSymm" (formula "2"))
                                                   (rule "applyEq" (formula "2") (term "0") (ifseqformula "10"))
                                                   (rule "eqSymm" (formula "2"))
                                                   (rule "assignment" (formula "22") (term "4") (userinteraction))
                                                   (builtin "Update Simplification" (formula "22"))
                                                   (rule "variableDeclarationAssign" (formula "22") (term "4") (userinteraction))
                                                   (rule "variableDeclaration" (formula "22") (term "4") (newnames "j_44") (userinteraction))
                                                   (rule "methodCallWithAssignment" (formula "22") (term "4") (inst "#v0=j_45") (userinteraction))
                                                   (branch " Normal Execution (s2 != null)"
                                                      (builtin "Update Simplification" (formula "22"))
                                                      (rule "variableDeclaration" (formula "22") (term "4") (newnames "j_45") (userinteraction))
                                                      (builtin "Use Operation Contract" (formula "22") (term "4") (newnames "result_25") (contract "length;;"))
                                                      (branch " Pre"
                                                         (builtin "Update Simplification" (formula "22"))
                                                         (rule "eqSymm" (formula "19"))
                                                         (rule "replace_known_left" (formula "22") (term "0") (ifseqformula "18"))
                                                         (rule "concrete_and_1" (formula "22"))
                                                         (rule "replace_known_right" (formula "22") (term "0,1") (ifseqformula "26"))
                                                         (rule "concrete_not_2" (formula "22") (term "1"))
                                                         (rule "concrete_and_3" (formula "22"))
                                                         (rule "close" (formula "22") (ifseqformula "17"))
                                                      )
                                                      (branch " Post"
                                                         (rule "blockEmpty" (formula "22") (term "1,3,4") (userinteraction))
                                                         (builtin "Update Simplification" (formula "22"))
                                                         (rule "impRight" (formula "22") (userinteraction))
                                                         (rule "inInt" (formula "1") (term "1,1,0"))
                                                         (rule "concrete_and_3" (formula "1") (term "1,0"))
                                                         (rule "andLeft" (formula "1"))
                                                         (rule "andLeft" (formula "1"))
                                                         (rule "andLeft" (formula "2"))
                                                         (rule "eqSymm" (formula "2"))
                                                         (rule "applyEq" (formula "2") (term "0") (ifseqformula "8"))
                                                         (rule "assignment" (formula "24") (term "4") (userinteraction))
                                                         (builtin "Update Simplification" (formula "24"))
                                                         (rule "assignmentSubtractionInt" (formula "24") (term "4") (userinteraction))
                                                         (builtin "Update Simplification" (formula "24"))
                                                         (rule "ifElseUnfold" (formula "24") (term "2") (inst "#boolv=b") (userinteraction))
                                                         (rule "variableDeclaration" (formula "24") (term "2") (newnames "b_13") (userinteraction))
                                                         (rule "less_than_comparison_new" (formula "24") (term "2") (userinteraction))
                                                         (builtin "Update Simplification" (formula "24"))
                                                         (rule "castDelInt" (formula "24") (term "0,0"))
                                                         (rule "translateJavaSubInt" (formula "24") (term "0,0"))
                                                         (rule "polySimp_elimSub" (formula "24") (term "0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "24") (term "0"))
                                                         (rule "times_zero_1" (formula "24") (term "1,0,0,0"))
                                                         (rule "add_zero_right" (formula "24") (term "0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "24") (term "0,0"))
                                                         (rule "applyEq" (formula "24") (term "1,0,0,0") (ifseqformula "4"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "24") (term "0"))
                                                         (rule "polySimp_mulLiterals" (formula "24") (term "0,0"))
                                                         (rule "polySimp_elimOne" (formula "24") (term "0,0"))
                                                         (rule "ifElseSkipElse" (formula "24") (term "2,1") (userinteraction))
                                                         (rule "assignment" (formula "24") (term "2,1") (userinteraction))
                                                         (builtin "Update Simplification" (formula "24"))
                                                         (rule "compound_assignment_op_minus" (formula "24") (term "2,1") (userinteraction))
                                                         (rule "compound_int_cast_expression" (formula "24") (term "2,1") (inst "#v=j") (userinteraction))
                                                         (rule "variableDeclarationAssign" (formula "24") (term "2,1") (userinteraction))
                                                         (rule "variableDeclaration" (formula "24") (term "2,1") (newnames "j_46") (userinteraction))
                                                         (rule "ifthenelse_split_for" (formula "24") (userinteraction))
                                                         (branch " result_24 >= 1 + result_2 TRUE"
                                                            (rule "remove_parentheses_right" (formula "25") (term "2") (userinteraction))
                                                            (rule "compound_subtraction_2" (formula "25") (term "2") (inst "#v1=j_48") (inst "#v0=j_47") (userinteraction))
                                                            (rule "variableDeclarationAssign" (formula "25") (term "2") (userinteraction))
                                                            (rule "variableDeclaration" (formula "25") (term "2") (newnames "j_47") (userinteraction))
                                                            (rule "assignment" (formula "25") (term "2") (userinteraction))
                                                            (builtin "Update Simplification" (formula "25"))
                                                            (rule "variableDeclarationAssign" (formula "25") (term "3") (userinteraction))
                                                            (rule "variableDeclaration" (formula "25") (term "3") (newnames "j_48") (userinteraction))
                                                            (rule "remove_parentheses_right" (formula "25") (term "3") (userinteraction))
                                                            (rule "assignment" (formula "25") (term "3") (userinteraction))
                                                            (builtin "Update Simplification" (formula "25"))
                                                            (rule "assignmentSubtractionInt" (formula "25") (term "3") (userinteraction))
                                                            (builtin "Update Simplification" (formula "25"))
                                                            (rule "widening_identity_cast_5" (formula "25") (term "2") (userinteraction))
                                                            (rule "assignment" (formula "25") (term "2") (userinteraction))
                                                            (builtin "Update Simplification" (formula "25"))
                                                            (rule "methodCallReturn" (formula "25") (term "1") (userinteraction))
                                                            (rule "assignment" (formula "25") (term "1") (userinteraction))
                                                            (builtin "Update Simplification" (formula "25"))
                                                            (rule "methodCallEmpty" (formula "25") (term "1") (userinteraction))
                                                            (rule "emptyModality" (formula "25") (term "1") (userinteraction))
                                                            (builtin "Update Simplification" (formula "25"))
                                                            (rule "castDelInt" (formula "25") (term "0,0") (userinteraction))
                                                            (rule "translateJavaSubInt" (formula "25") (term "0,0") (userinteraction))
                                                            (rule "notRight" (formula "25") (userinteraction))
                                                            (rule "castDelInt" (formula "1") (term "1,0"))
                                                            (rule "translateJavaSubInt" (formula "1") (term "1,0"))
                                                            (rule "polySimp_elimSub" (formula "1") (term "0"))
                                                            (rule "polySimp_homoEq" (formula "1"))
                                                            (rule "polySimp_elimSub" (formula "1") (term "0,1,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1,1,1,0"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1,1,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,1,0"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "1,1,1,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "0,1,1,1,0"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1,1,0"))
                                                            (rule "polySimp_mulAssoc" (formula "1") (term "0,1,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "0,0,1,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "0,1,1,0"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "0,1,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "1") (term "1,0"))
                                                            (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                            (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                            (rule "applyEq" (formula "1") (term "1,0,0") (ifseqformula "6"))
                                                            (rule "applyEqRigid" (formula "1") (term "0,0,0,0") (ifseqformula "17"))
                                                            (rule "add_zero_left" (formula "1") (term "0,0,0"))
                                                            (rule "polySimp_sepNegMonomial" (formula "1"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                            (rule "eqSymm" (formula "23"))
                                                            (rule "polySimp_elimSub" (formula "8") (term "0"))
                                                            (rule "inEqSimp_geqRight" (formula "25"))
                                                            (rule "inEqSimp_gtRight" (formula "25"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                            (rule "polySimp_addComm0" (formula "10") (term "0"))
                                                            (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                            (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                            (rule "add_literals" (formula "2") (term "0,0,0"))
                                                            (rule "add_zero_left" (formula "2") (term "0,0"))
                                                            (rule "apply_eq_boolean" (formula "17") (term "1") (ifseqformula "30"))
                                                            (rule "false_to_not_true" (formula "17"))
                                                            (rule "notLeft" (formula "17"))
                                                            (rule "apply_eq_boolean_rigid" (formula "19") (term "1") (ifseqformula "29"))
                                                            (rule "false_to_not_true" (formula "19"))
                                                            (rule "notLeft" (formula "19"))
                                                            (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "6"))
                                                            (rule "applyEq" (formula "24") (term "0") (ifseqformula "6"))
                                                            (rule "applyEq" (formula "4") (term "0") (ifseqformula "3"))
                                                            (rule "inEqSimp_homoInEq1" (formula "4"))
                                                            (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                                                            (rule "polySimp_mulAssoc" (formula "4") (term "0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "4") (term "0,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "4") (term "0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "4") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                                            (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                                                            (rule "add_literals" (formula "4") (term "1,1,0"))
                                                            (rule "times_zero_1" (formula "4") (term "1,0"))
                                                            (rule "add_zero_right" (formula "4") (term "0"))
                                                            (rule "applyEq" (formula "12") (term "1") (ifseqformula "6"))
                                                            (rule "applyEq" (formula "6") (term "1") (ifseqformula "3"))
                                                            (rule "applyEq" (formula "19") (term "1") (ifseqformula "18"))
                                                            (rule "applyEq" (formula "24") (term "0") (ifseqformula "3"))
                                                            (rule "polySimp_homoEq" (formula "24"))
                                                            (rule "polySimp_mulComm0" (formula "24") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "24") (term "1,0"))
                                                            (rule "polySimp_mulAssoc" (formula "24") (term "0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "24") (term "0,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "24") (term "0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "24") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "24") (term "0"))
                                                            (rule "polySimp_addComm0" (formula "24") (term "0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "24") (term "0"))
                                                            (rule "add_literals" (formula "24") (term "1,1,0"))
                                                            (rule "times_zero_1" (formula "24") (term "1,0"))
                                                            (rule "add_zero_right" (formula "24") (term "0"))
                                                            (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "3"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                                            (rule "polySimp_mulAssoc" (formula "1") (term "0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "0,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                            (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                                            (rule "add_literals" (formula "1") (term "1,1,0"))
                                                            (rule "times_zero_1" (formula "1") (term "1,0"))
                                                            (rule "add_zero_right" (formula "1") (term "0"))
                                                            (rule "applyEq" (formula "12") (term "1") (ifseqformula "3"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                                                            (rule "polySimp_mulLiterals" (formula "10") (term "1"))
                                                            (rule "polySimp_elimOne" (formula "10") (term "1"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                                            (rule "polySimp_mulLiterals" (formula "2") (term "1"))
                                                            (rule "polySimp_elimOne" (formula "2") (term "1"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                                            (rule "mul_literals" (formula "4") (term "1"))
                                                            (rule "inEqSimp_contradEq3" (formula "24") (ifseqformula "4"))
                                                            (rule "times_zero_1" (formula "24") (term "1,0,0"))
                                                            (rule "add_zero_right" (formula "24") (term "0,0"))
                                                            (rule "qeq_literals" (formula "24") (term "0"))
                                                            (rule "concrete_and_2" (formula "24"))
                                                            (rule "false_right" (formula "24"))
                                                            (rule "inEqSimp_contradInEq0" (formula "9") (ifseqformula "4"))
                                                            (rule "qeq_literals" (formula "9") (term "0"))
                                                            (rule "concrete_and_2" (formula "9"))
                                                            (rule "closeFalse" (formula "9"))
                                                         )
                                                         (branch " result_24 >= 1 + result_2 FALSE"
                                                            (rule "translateJavaSubInt" (formula "25") (term "1"))
                                                            (rule "polySimp_elimSub" (formula "25") (term "1"))
                                                            (rule "applyEq" (formula "25") (term "0,1") (ifseqformula "4"))
                                                            (rule "applyEqRigid" (formula "25") (term "1,0,0,2") (ifseqformula "15"))
                                                            (rule "ifElseSkipThen" (formula "25") (term "2"))
                                                            (rule "assignment" (formula "25") (term "2"))
                                                            (builtin "Update Simplification" (formula "25"))
                                                            (rule "compound_assignment_op_plus" (formula "25") (term "2"))
                                                            (rule "compound_int_cast_expression" (formula "25") (term "2") (inst "#v=j"))
                                                            (rule "variableDeclarationAssign" (formula "25") (term "2"))
                                                            (rule "variableDeclaration" (formula "25") (term "2") (newnames "j_49"))
                                                            (rule "remove_parentheses_right" (formula "25") (term "2"))
                                                            (rule "compound_addition_2" (formula "25") (term "2") (inst "#v1=j_51") (inst "#v0=j_50"))
                                                            (rule "variableDeclarationAssign" (formula "25") (term "2"))
                                                            (rule "variableDeclaration" (formula "25") (term "2") (newnames "j_50"))
                                                            (rule "assignment" (formula "25") (term "2"))
                                                            (builtin "Update Simplification" (formula "25"))
                                                            (rule "variableDeclarationAssign" (formula "25") (term "3"))
                                                            (rule "variableDeclaration" (formula "25") (term "3") (newnames "j_51"))
                                                            (rule "remove_parentheses_right" (formula "25") (term "3"))
                                                            (rule "assignment" (formula "25") (term "3"))
                                                            (builtin "Update Simplification" (formula "25"))
                                                            (rule "castDelInt" (formula "25") (term "2"))
                                                            (rule "assignmentAdditionInt" (formula "25") (term "3"))
                                                            (builtin "Update Simplification" (formula "25"))
                                                            (rule "castDelInt" (formula "25") (term "1,1"))
                                                            (rule "translateJavaAddInt" (formula "25") (term "1"))
                                                            (rule "polySimp_addAssoc" (formula "25") (term "1"))
                                                            (rule "widening_identity_cast_5" (formula "25") (term "2"))
                                                            (rule "assignment" (formula "25") (term "2"))
                                                            (builtin "Update Simplification" (formula "25"))
                                                            (rule "castDelInt" (formula "25") (term "0"))
                                                            (rule "blockEmpty" (formula "25") (term "1"))
                                                            (rule "methodCallReturn" (formula "25") (term "1"))
                                                            (rule "assignment" (formula "25") (term "1"))
                                                            (builtin "Update Simplification" (formula "25"))
                                                            (rule "castDelInt" (formula "25") (term "0"))
                                                            (rule "methodCallEmpty" (formula "25") (term "1"))
                                                            (rule "emptyModality" (formula "25") (term "1"))
                                                            (builtin "Update Simplification" (formula "25"))
                                                            (rule "notRight" (formula "25"))
                                                            (rule "castDelInt" (formula "1") (term "0"))
                                                            (rule "polySimp_sepNegMonomial" (formula "1"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                            (rule "eqSymm" (formula "22"))
                                                            (rule "polySimp_elimSub" (formula "7") (term "0"))
                                                            (rule "inEqSimp_geqRight" (formula "24"))
                                                            (rule "inEqSimp_geqRight" (formula "25"))
                                                            (rule "inEqSimp_gtRight" (formula "25"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                            (rule "polySimp_addComm0" (formula "10") (term "0"))
                                                            (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                            (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                                            (rule "add_literals" (formula "3") (term "0,0,0"))
                                                            (rule "add_zero_left" (formula "3") (term "0,0"))
                                                            (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                            (rule "add_literals" (formula "2") (term "0,0,0"))
                                                            (rule "add_zero_left" (formula "2") (term "0,0"))
                                                            (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "6"))
                                                            (rule "apply_eq_boolean" (formula "20") (term "1") (ifseqformula "30"))
                                                            (rule "false_to_not_true" (formula "20"))
                                                            (rule "notLeft" (formula "20"))
                                                            (rule "applyEq" (formula "26") (term "0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "4"))
                                                            (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                            (rule "polySimp_addComm0" (formula "2") (term "0,0"))
                                                            (rule "polySimp_pullOutFactor2b" (formula "2") (term "0"))
                                                            (rule "add_literals" (formula "2") (term "1,1,0"))
                                                            (rule "times_zero_1" (formula "2") (term "1,0"))
                                                            (rule "add_zero_right" (formula "2") (term "0"))
                                                            (rule "apply_eq_boolean_rigid" (formula "17") (term "1") (ifseqformula "29"))
                                                            (rule "false_to_not_true" (formula "17"))
                                                            (rule "notLeft" (formula "17"))
                                                            (rule "applyEq" (formula "25") (term "0") (ifseqformula "6"))
                                                            (rule "applyEqRigid" (formula "19") (term "1") (ifseqformula "18"))
                                                            (rule "applyEq" (formula "12") (term "1") (ifseqformula "6"))
                                                            (rule "applyEq" (formula "6") (term "1") (ifseqformula "4"))
                                                            (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "4"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                            (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                                            (rule "add_literals" (formula "1") (term "1,1,0"))
                                                            (rule "times_zero_1" (formula "1") (term "1,0"))
                                                            (rule "add_zero_right" (formula "1") (term "0"))
                                                            (rule "applyEq" (formula "25") (term "0") (ifseqformula "4"))
                                                            (rule "polySimp_homoEq" (formula "25"))
                                                            (rule "polySimp_mulComm0" (formula "25") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "25") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "25") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "25") (term "0"))
                                                            (rule "polySimp_addComm0" (formula "25") (term "0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "25") (term "0"))
                                                            (rule "add_literals" (formula "25") (term "1,1,0"))
                                                            (rule "times_zero_1" (formula "25") (term "1,0"))
                                                            (rule "add_zero_right" (formula "25") (term "0"))
                                                            (rule "applyEq" (formula "12") (term "1") (ifseqformula "4"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                                                            (rule "polySimp_mulLiterals" (formula "10") (term "1"))
                                                            (rule "polySimp_elimOne" (formula "10") (term "1"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                                            (rule "polySimp_mulLiterals" (formula "3") (term "1"))
                                                            (rule "polySimp_elimOne" (formula "3") (term "1"))
                                                            (rule "polySimp_invertEq" (formula "25"))
                                                            (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                                                            (rule "times_zero_2" (formula "25") (term "1"))
                                                            (rule "polySimp_elimOne" (formula "25") (term "0"))
                                                            (rule "inEqSimp_invertInEq0" (formula "1"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                            (rule "times_zero_2" (formula "1") (term "1"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                            (rule "inEqSimp_strengthen0" (formula "1") (ifseqformula "24"))
                                                            (rule "add_zero_right" (formula "1") (term "1"))
                                                            (rule "inEqSimp_contradEq3" (formula "24") (ifseqformula "1"))
                                                            (rule "times_zero_1" (formula "24") (term "1,0,0"))
                                                            (rule "add_literals" (formula "24") (term "0,0"))
                                                            (rule "qeq_literals" (formula "24") (term "0"))
                                                            (rule "concrete_and_2" (formula "24"))
                                                            (rule "false_right" (formula "24"))
                                                            (rule "inEqSimp_contradInEq0" (formula "8") (ifseqformula "1"))
                                                            (rule "qeq_literals" (formula "8") (term "0"))
                                                            (rule "concrete_and_2" (formula "8"))
                                                            (rule "closeFalse" (formula "8"))
                                                         )
                                                      )
                                                      (branch " Exceptional Post"
                                                         (builtin "Update Simplification" (formula "22"))
                                                         (rule "impRight" (formula "22"))
                                                         (rule "andLeft" (formula "1"))
                                                         (rule "andLeft" (formula "1"))
                                                         (rule "andLeft" (formula "2"))
                                                         (rule "andLeft" (formula "1"))
                                                         (rule "notLeft" (formula "2"))
                                                         (rule "close" (formula "22") (ifseqformula "3"))
                                                      )
                                                   )
                                                   (branch " Null Reference (s2 = null)"
                                                      (builtin "Update Simplification" (formula "1"))
                                                      (builtin "Update Simplification" (formula "23"))
                                                      (rule "close" (formula "27") (ifseqformula "1"))
                                                   )
                                                )
                                                (branch " Exceptional Post"
                                                   (builtin "Update Simplification" (formula "20"))
                                                   (rule "impRight" (formula "20"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "andLeft" (formula "2"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "notLeft" (formula "2"))
                                                   (rule "close" (formula "20") (ifseqformula "3"))
                                                )
                                             )
                                             (branch " Null Reference (s1 = null)"
                                                (builtin "Update Simplification" (formula "1"))
                                                (builtin "Update Simplification" (formula "21"))
                                                (rule "close" (formula "24") (ifseqformula "1"))
                                             )
                                          )
                                       )
                                    )
                                 )
                              )
                              (branch " Null Reference (s2 = null)"
                                 (builtin "Update Simplification" (formula "1"))
                                 (rule "close" (formula "20") (ifseqformula "1"))
                              )
                           )
                           (branch " Exceptional Post"
                              (builtin "Update Simplification" (formula "13"))
                              (rule "impRight" (formula "13"))
                              (rule "andLeft" (formula "1"))
                              (rule "andLeft" (formula "1"))
                              (rule "andLeft" (formula "2"))
                              (rule "andLeft" (formula "1"))
                              (rule "notLeft" (formula "2"))
                              (rule "close" (formula "16") (ifseqformula "3"))
                           )
                        )
                        (branch " Null Reference (s2 = null)"
                           (builtin "Update Simplification" (formula "1"))
                           (rule "close" (formula "18") (ifseqformula "1"))
                        )
                     )
                     (branch " Exceptional Post"
                        (builtin "Update Simplification" (formula "11"))
                        (rule "impRight" (formula "11"))
                        (rule "andLeft" (formula "1"))
                        (rule "andLeft" (formula "1"))
                        (rule "andLeft" (formula "2"))
                        (rule "andLeft" (formula "1"))
                        (rule "notLeft" (formula "2"))
                        (rule "close" (formula "14") (ifseqformula "3"))
                     )
                  )
                  (branch " Null Reference (s1 = null)"
                     (builtin "Update Simplification" (formula "1"))
                     (rule "close" (formula "15") (ifseqformula "1"))
                  )
               )
               (branch " Exceptional Post"
                  (builtin "Update Simplification" (formula "9"))
                  (rule "impRight" (formula "9"))
                  (rule "andLeft" (formula "1"))
                  (rule "andLeft" (formula "1"))
                  (rule "andLeft" (formula "2"))
                  (rule "andLeft" (formula "1"))
                  (rule "notLeft" (formula "2"))
                  (rule "close" (formula "12") (ifseqformula "3"))
               )
            )
            (branch " Null Reference (s1 = null)"
               (builtin "Update Simplification" (formula "6"))
               (rule "close" (formula "13") (ifseqformula "6"))
            )
         )
      )
      (branch " Exceptional Post"
         (builtin "Update Simplification" (formula "8"))
         (rule "impRight" (formula "8"))
         (rule "andLeft" (formula "1"))
         (rule "andLeft" (formula "2"))
         (rule "andLeft" (formula "1"))
         (rule "andLeft" (formula "1"))
         (rule "notLeft" (formula "2"))
         (rule "close" (formula "11") (ifseqformula "3"))
      )
   )
   (branch " Null Reference (queryReceiver = null)"
      (builtin "Update Simplification" (formula "3"))
      (builtin "Update Simplification" (formula "4"))
      (rule "close" (formula "10") (ifseqformula "3"))
   )
)
(branch " Case 2"
   (opengoal "   inReachableState -> \\forall java.lang.String s;       \\forall java.lang.String t;         (     s.<created>@(java.lang.Object) = TRUE            & t.<created>@(java.lang.Object) = TRUE            & !s = null            & !t = null         -> (    StringDistance.distance(s, t) = 0             <-> s.equals@(java.lang.String)(t) = TRUE)) ")
)
)

}
