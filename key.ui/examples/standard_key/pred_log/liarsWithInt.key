/**
  The solution given in liars.key is long due to the fact that we have to express that
  the five constants relate to different persons. KeYs logic supports integer numbers as 
  built in theory. This means there is a sort "int" which is predefined and which is interpreted 
  by all models as the set of integers. Furthermore all first order models evaluate teh function 
   +(int, int) as the usual arithmetic addition (same for -, /, %)  

  In this soution we define a function 'int id(Person)' and define a unique id for each person.
*/

\sorts {
  Person;
}

\functions {
  Person Mr_Applebee;
  Person Mrs_Beatle;
  Person Ms_Casey;
  Person Dr_Doodle;
  Person Mr_Eastwood;

  int id(Person);
}


\predicates {
   lies(Person);
}


\problem {
(
   // all five persons are different
   id(Mr_Applebee) = 0 & id(Mrs_Beatle) = 1 & id(Ms_Casey) = 2 & id(Dr_Doodle) = 3 & id(Mr_Eastwood) = 4 
 &
    // there are no more than the named persons
  \forall Person p;(id(p)>=0 & id(p) <=4)
 &
   // there is exactly one truth teller (control question: can you explain why the formula below expresses this?)
  \exists Person truthTeller;(!lies(truthTeller) & \forall Person x;(!lies(x) -> x = truthTeller))
)
-> 
(
  (  // Formalisation of the statements 
    	(lies(Mr_Applebee) -> lies(Mr_Applebee))
    &
	(lies(Mrs_Beatle) -> lies(Dr_Doodle))
    &
	(lies(Ms_Casey) -> !lies(Ms_Casey))
    &
	(lies(Dr_Doodle) -> lies(Mrs_Beatle))
    &
	(lies(Mr_Eastwood) -> lies(Mr_Eastwood))
  ) 
-> // the solution
      !lies(Ms_Casey)
)
}