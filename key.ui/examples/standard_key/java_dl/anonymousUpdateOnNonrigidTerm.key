// This file is part of KeY - Integrated Deductive Software Design 
//
// Copyright (C) 2001-2011 Universitaet Karlsruhe (TH), Germany 
//                         Universitaet Koblenz-Landau, Germany
//                         Chalmers University of Technology, Sweden
// Copyright (C) 2011-2013 Karlsruhe Institute of Technology, Germany 
//                         Technical University Darmstadt, Germany
//                         Chalmers University of Technology, Sweden
//
// The KeY system is protected by the GNU General 
// Public License. See LICENSE.TXT for details.
// 

/**
@provable automatic
@statistic nodes 11
@statistic branches 1
@author Sebastian Wirkert (doc)

Proof example showing how anonymous updates work.<br> An anonymous update, in
case of the example <tt>{*:=*1}</tt>, assignes all locations (that is program
variables, array elements and attributes) an unknown, but fixed value.  For
the term <tt>c={*:=*1}d</tt> to be true, the value assigned by the update must
be <tt>c</tt>. Due to that, the implication is true, because
<tt>a[c]=a[c]</tt>, which is the term after the anonymous updates are
performed, is true, too.  If the value of the update isn't <tt>c</tt>, the
implication is true, because false->anything evaluates true.

*/

\javaSource "payCardJML";

\functions {
  int c;
}

\programVariables {
   int d;
   int[] a;
}

\problem {
	c={*:=*1}d -> {*:=*1}a[d] = {*:=*1}a[c]
}
