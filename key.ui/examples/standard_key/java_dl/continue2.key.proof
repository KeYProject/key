\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Wed Jul 26 14:02:44 CEST 2023
[Choice]DefaultChoices=JavaCard-JavaCard\\:on, Strings-Strings\\:on, assertions-assertions\\:on, bigint-bigint\\:on, floatRules-floatRules\\:strictfpOnly, initialisation-initialisation\\:disableStaticInitialisation, intRules-intRules\\:arithmeticSemanticsIgnoringOF, integerSimplificationRules-integerSimplificationRules\\:full, javaLoopTreatment-javaLoopTreatment\\:efficient, mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off, methodExpansion-methodExpansion\\:modularOnly, modelFields-modelFields\\:showSatisfiability, moreSeqRules-moreSeqRules\\:off, nullPointerPolicy-nullPointerPolicy\\:nullCheck, permissions-permissions\\:off, programRules-programRules\\:Java, reach-reach\\:on, runtimeExceptions-runtimeExceptions\\:ban, sequences-sequences\\:on, throughout-throughout\\:toutOn, transactionAbort-transactionAbort\\:abortOn, transactions-transactions\\:transactionsOn, wdChecks-wdChecks\\:off, wdOperator-wdOperator\\:L
[Labels]UseOriginLabels=true
[SMTSettings]SelectedTaclets=
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[SMTSettings]integersMaximum=2147483645
[SMTSettings]integersMinimum=-2147483645
[SMTSettings]invariantForall=false
[SMTSettings]maxGenericSorts=2
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[SMTSettings]useUninterpretedMultiplication=true
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_EXPAND
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_EXPAND
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_NONE
[StrategyProperty]OSS_OPTIONS_KEY=OSS_ON
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NONE
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_NORMAL
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[Strategy]ActiveStrategy=JavaCardDLStrategy
[Strategy]MaximumNumberOfAutomaticApplications=10000
[Strategy]Timeout=-1
"
}

\classpath "classpath";
\javaSource "testcontext_java";

\programVariables {
  int i;
}
\problem {
\<{
  i = ContinueLabel.test2();
}\> i = Z(6(#))
}

\proof {
(keyLog "0" (keyUser "bubel" ) (keyVersion "0ac6d7f2f89621db5bcd223c76470fdcc857ac4d"))
(keyLog "1" (keyUser "bubel" ) (keyVersion "0ac6d7f2f89621db5bcd223c76470fdcc857ac4d"))

(autoModeTime "49")

(branch "dummy ID"
(rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "1") (inst "#v0=i_1"))
(rule "variableDeclaration" (formula "1") (newnames "i_1"))
(rule "methodBodyExpand" (formula "1") (newnames "heapBefore_test2,savedHeapBefore_test2"))
 (builtin "One Step Simplification" (formula "1"))
(rule "variableDeclarationMult" (formula "1"))
(rule "variableDeclarationAssign" (formula "1"))
(rule "variableDeclaration" (formula "1") (newnames "x"))
(rule "assignment" (formula "1"))
(rule "variableDeclarationMult" (formula "1") (term "1"))
(rule "variableDeclarationAssign" (formula "1") (term "1"))
(rule "variableDeclaration" (formula "1") (term "1") (newnames "y"))
(rule "assignment" (formula "1") (term "1"))
 (builtin "One Step Simplification" (formula "1"))
(rule "variableDeclarationAssign" (formula "1") (term "1"))
(rule "variableDeclaration" (formula "1") (term "1") (newnames "z"))
(rule "assignment" (formula "1") (term "1"))
 (builtin "One Step Simplification" (formula "1"))
(rule "blockEmpty" (formula "1") (term "1"))
(rule "loopUnwind" (formula "1") (term "1") (inst "#outerLabel=_label1") (inst "#innerLabel=_label0"))
(rule "ifUnfold" (formula "1") (term "1") (inst "#boolv=b"))
(rule "variableDeclaration" (formula "1") (term "1") (newnames "b"))
(rule "greater_than_comparison_simple" (formula "1") (term "1"))
 (builtin "One Step Simplification" (formula "1"))
(rule "greater_literals" (formula "1") (term "0,0,1,0"))
 (builtin "One Step Simplification" (formula "1"))
(rule "ifSplit" (formula "1"))
(branch "if b true"
    (builtin "One Step Simplification" (formula "2"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "true_left" (formula "1"))
   (rule "postincrement" (formula "1") (term "1"))
   (rule "compound_reference_cast_expression_primitive" (formula "1") (term "1") (inst "#v=i_2"))
   (rule "variableDeclarationAssign" (formula "1") (term "1"))
   (rule "variableDeclaration" (formula "1") (term "1") (newnames "i_2"))
   (rule "remove_parentheses_right" (formula "1") (term "1"))
   (rule "assignmentAdditionInt" (formula "1") (term "1"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "translateJavaAddInt" (formula "1") (term "0,1,0"))
   (rule "add_zero_left" (formula "1") (term "0,1,0"))
   (rule "widening_identity_cast_5" (formula "1") (term "1"))
   (rule "assignment" (formula "1") (term "1"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "unusedLabel" (formula "1") (term "1"))
   (rule "loopUnwind" (formula "1") (term "1") (inst "#outerLabel=_label3") (inst "#innerLabel=_label2"))
   (rule "ifUnfold" (formula "1") (term "1") (inst "#boolv=b_1"))
   (rule "variableDeclaration" (formula "1") (term "1") (newnames "b_1"))
   (rule "greater_than_comparison_simple" (formula "1") (term "1"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "greater_literals" (formula "1") (term "0,0,1,0"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "ifSplit" (formula "1"))
   (branch "if b_1 true"
       (builtin "One Step Simplification" (formula "2"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "true_left" (formula "1"))
      (rule "postdecrement" (formula "1") (term "1"))
      (rule "compound_subtraction_1" (formula "1") (term "1") (inst "#v=i_3"))
      (rule "variableDeclarationAssign" (formula "1") (term "1"))
      (rule "variableDeclaration" (formula "1") (term "1") (newnames "i_3"))
      (rule "widening_identity_cast_5" (formula "1") (term "1"))
      (rule "assignment" (formula "1") (term "1"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "assignmentSubtractionInt" (formula "1") (term "1"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "translateJavaSubInt" (formula "1") (term "0,1,0"))
      (rule "sub_literals" (formula "1") (term "0,1,0"))
      (rule "unusedLabel" (formula "1") (term "1"))
      (rule "loopUnwind" (formula "1") (term "1") (inst "#outerLabel=_label5") (inst "#innerLabel=_label4"))
      (rule "ifUnfold" (formula "1") (term "1") (inst "#boolv=b_2"))
      (rule "variableDeclaration" (formula "1") (term "1") (newnames "b_2"))
      (rule "equality_comparison_simple" (formula "1") (term "1"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "ifSplit" (formula "1"))
      (branch "if b_2 true"
          (builtin "One Step Simplification" (formula "2"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "true_left" (formula "1"))
         (rule "blockBreakNoLabel" (formula "1") (term "1"))
         (rule "tryFinallyBreakLabel" (formula "1") (term "1"))
         (rule "postincrement" (formula "1") (term "1"))
         (rule "compound_reference_cast_expression_primitive" (formula "1") (term "1") (inst "#v=i_4"))
         (rule "variableDeclarationAssign" (formula "1") (term "1"))
         (rule "variableDeclaration" (formula "1") (term "1") (newnames "i_4"))
         (rule "remove_parentheses_right" (formula "1") (term "1"))
         (rule "assignmentAdditionInt" (formula "1") (term "1"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "translateJavaAddInt" (formula "1") (term "0,1,0"))
         (rule "add_literals" (formula "1") (term "0,1,0"))
         (rule "widening_identity_cast_5" (formula "1") (term "1"))
         (rule "assignment" (formula "1") (term "1"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "blockEmpty" (formula "1") (term "1"))
         (rule "blockBreakNoLabel" (formula "1") (term "1"))
         (rule "tryFinallyBreakLabel" (formula "1") (term "1"))
         (rule "postincrement" (formula "1") (term "1"))
         (rule "compound_reference_cast_expression_primitive" (formula "1") (term "1") (inst "#v=i_5"))
         (rule "variableDeclarationAssign" (formula "1") (term "1"))
         (rule "variableDeclaration" (formula "1") (term "1") (newnames "i_5"))
         (rule "remove_parentheses_right" (formula "1") (term "1"))
         (rule "assignmentAdditionInt" (formula "1") (term "1"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "translateJavaAddInt" (formula "1") (term "0,1,0"))
         (rule "add_literals" (formula "1") (term "0,1,0"))
         (rule "widening_identity_cast_5" (formula "1") (term "1"))
         (rule "assignment" (formula "1") (term "1"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "blockEmpty" (formula "1") (term "1"))
         (rule "blockBreakLabel" (formula "1") (term "1"))
         (rule "blockEmpty" (formula "1") (term "1"))
         (rule "loopUnwind" (formula "1") (term "1") (inst "#outerLabel=_label7") (inst "#innerLabel=_label6"))
         (rule "ifUnfold" (formula "1") (term "1") (inst "#boolv=b_3"))
         (rule "variableDeclaration" (formula "1") (term "1") (newnames "b_3"))
         (rule "greater_than_comparison_simple" (formula "1") (term "1"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "greater_literals" (formula "1") (term "0,0,1,0"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "ifSplit" (formula "1"))
         (branch "if b_3 true"
             (builtin "One Step Simplification" (formula "2"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "true_left" (formula "1"))
            (rule "postincrement" (formula "1") (term "1"))
            (rule "compound_reference_cast_expression_primitive" (formula "1") (term "1") (inst "#v=i_6"))
            (rule "variableDeclarationAssign" (formula "1") (term "1"))
            (rule "variableDeclaration" (formula "1") (term "1") (newnames "i_6"))
            (rule "remove_parentheses_right" (formula "1") (term "1"))
            (rule "assignmentAdditionInt" (formula "1") (term "1"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "translateJavaAddInt" (formula "1") (term "0,1,0"))
            (rule "add_literals" (formula "1") (term "0,1,0"))
            (rule "widening_identity_cast_5" (formula "1") (term "1"))
            (rule "assignment" (formula "1") (term "1"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "unusedLabel" (formula "1") (term "1"))
            (rule "loopUnwind" (formula "1") (term "1") (inst "#outerLabel=_label9") (inst "#innerLabel=_label8"))
            (rule "ifUnfold" (formula "1") (term "1") (inst "#boolv=b_4"))
            (rule "variableDeclaration" (formula "1") (term "1") (newnames "b_4"))
            (rule "greater_than_comparison_simple" (formula "1") (term "1"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "greater_literals" (formula "1") (term "0,0,1,0"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "ifSplit" (formula "1"))
            (branch "if b_4 true"
                (builtin "One Step Simplification" (formula "2"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "closeFalse" (formula "1"))
            )
            (branch "if b_4 false"
                (builtin "One Step Simplification" (formula "2"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "true_left" (formula "1"))
               (rule "tryFinallyEmpty" (formula "1") (term "1"))
               (rule "postincrement" (formula "1") (term "1"))
               (rule "compound_reference_cast_expression_primitive" (formula "1") (term "1") (inst "#v=i_7"))
               (rule "variableDeclarationAssign" (formula "1") (term "1"))
               (rule "variableDeclaration" (formula "1") (term "1") (newnames "i_7"))
               (rule "remove_parentheses_right" (formula "1") (term "1"))
               (rule "assignmentAdditionInt" (formula "1") (term "1"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "translateJavaAddInt" (formula "1") (term "0,1,0"))
               (rule "add_literals" (formula "1") (term "0,1,0"))
               (rule "widening_identity_cast_5" (formula "1") (term "1"))
               (rule "assignment" (formula "1") (term "1"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "blockEmpty" (formula "1") (term "1"))
               (rule "unusedLabel" (formula "1") (term "1"))
               (rule "postdecrement" (formula "1") (term "1"))
               (rule "compound_subtraction_1" (formula "1") (term "1") (inst "#v=i_8"))
               (rule "variableDeclarationAssign" (formula "1") (term "1"))
               (rule "variableDeclaration" (formula "1") (term "1") (newnames "i_8"))
               (rule "widening_identity_cast_5" (formula "1") (term "1"))
               (rule "assignment" (formula "1") (term "1"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "assignmentSubtractionInt" (formula "1") (term "1"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "translateJavaSubInt" (formula "1") (term "0,1,0"))
               (rule "sub_literals" (formula "1") (term "0,1,0"))
               (rule "postincrement" (formula "1") (term "1"))
               (rule "compound_reference_cast_expression_primitive" (formula "1") (term "1") (inst "#v=i_9"))
               (rule "variableDeclarationAssign" (formula "1") (term "1"))
               (rule "variableDeclaration" (formula "1") (term "1") (newnames "i_9"))
               (rule "remove_parentheses_right" (formula "1") (term "1"))
               (rule "assignmentAdditionInt" (formula "1") (term "1"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "translateJavaAddInt" (formula "1") (term "0,1,0"))
               (rule "add_literals" (formula "1") (term "0,1,0"))
               (rule "widening_identity_cast_5" (formula "1") (term "1"))
               (rule "assignment" (formula "1") (term "1"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "blockEmpty" (formula "1") (term "1"))
               (rule "loopUnwind" (formula "1") (term "1") (inst "#outerLabel=_label11") (inst "#innerLabel=_label10"))
               (rule "ifUnfold" (formula "1") (term "1") (inst "#boolv=b_5"))
               (rule "variableDeclaration" (formula "1") (term "1") (newnames "b_5"))
               (rule "greater_than_comparison_simple" (formula "1") (term "1"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "greater_literals" (formula "1") (term "0,0,1,0"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "ifSplit" (formula "1"))
               (branch "if b_5 true"
                   (builtin "One Step Simplification" (formula "2"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "closeFalse" (formula "1"))
               )
               (branch "if b_5 false"
                   (builtin "One Step Simplification" (formula "2"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "true_left" (formula "1"))
                  (rule "blockEmptyLabel" (formula "1") (term "1"))
                  (rule "blockEmpty" (formula "1") (term "1"))
                  (rule "methodCallReturn" (formula "1") (term "1"))
                  (rule "assignment" (formula "1") (term "1"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "methodCallEmpty" (formula "1") (term "1"))
                  (rule "blockEmpty" (formula "1") (term "1"))
                  (rule "assignment" (formula "1") (term "1"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "emptyModality" (formula "1") (term "1"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "closeTrue" (formula "1"))
               )
            )
         )
         (branch "if b_3 false"
             (builtin "One Step Simplification" (formula "2"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "closeFalse" (formula "1"))
         )
      )
      (branch "if b_2 false"
          (builtin "One Step Simplification" (formula "2"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "closeFalse" (formula "1"))
      )
   )
   (branch "if b_1 false"
       (builtin "One Step Simplification" (formula "2"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "closeFalse" (formula "1"))
   )
)
(branch "if b false"
    (builtin "One Step Simplification" (formula "2"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "closeFalse" (formula "1"))
)
)
}
