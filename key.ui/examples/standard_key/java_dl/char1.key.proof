\settings {
"#Proof-Settings-Config-File
#Tue Jul 19 11:45:11 CEST 2005
[General]SoundNotification=false
[View]FontIndex=2
[SimultaneousUpdateSimplifier]DeleteEffectLessLocations=true
[General]SuggestiveVarNames=false
[General]ProofAssistant=false
[View]ShowWholeTaclet=false
[View]MaxTooltipLines=40
[General]StupidMode=true
[Strategy]MaximumNumberOfAutomaticApplications=6000
[Choice]DefaultChoices=programRules-programRules\\:Java , transactionsPolicy-transactionsPolicy\\:abortTransaction , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , nullPointerPolicy-nullPointerPolicy\\:nullCheck
[OCLRef]Null=false
[OCLRef]ExcThrown=false
[Model]Source=1
[Choice]Choices=transactionsPolicy-transactionsPolicy\\:abortTransaction-transactionsPolicy\\:noAbortTransaction , programRules-programRules\\:ODL-programRules\\:Java , initialisation-initialisation\\:disableStaticInitialisation-initialisation\\:enableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsCheckingOF-intRules\\:javaSemantics-intRules\\:arithmeticSemanticsIgnoringOF , nullPointerPolicy-nullPointerPolicy\\:noNullCheck-nullPointerPolicy\\:nullCheck
[OCLRef]Array=false
[DecisionProcedure]=SIMPLIFY
[General]OuterRenaming=true
[Strategy]ActiveStrategy=Simple JavaCardDL Using Method Contracts without unwinding loops
"
}

// Input file for KeY standalone prover version 0.598

\problem {
\<{
    char ch;
  }\> \forall int i; 
        (   i >= 0 & i <= 255
         -> {ch:=i}
              \<{
                  if (ch>='a'&&ch<='z')
                    ch=ch-32;
                }\> (ch <  'a' | ch >  'z'))

}

\proof {
(keyLog "0" (keyUser "schlager" ) (keyVersion "0.1725"))

(branch "dummy ID"
(rule "greater" (formula "1") (term "1,0,1,1,0,0"))
(rule "leq_to_gt" (formula "1") (term "1,0,0,0"))
(rule "geq_to_lt" (formula "1") (term "0,0,0,0"))
(rule "charLiteral_to_int" (formula "1") (term "1,0,0,1,1,0,0"))
(rule "charLiteral_to_int" (formula "1") (term "0,1,0,1,1,0,0"))
(rule "greater" (formula "1") (term "0,1,0,0,0"))
(rule "if_eval" (formula "1") (term "1,1,0,0") (inst "#boolv=b"))
(rule "eliminate_variable_declaration" (formula "1") (term "1,1,0,0"))
(rule "evaluate_lazy_and" (formula "1") (term "1,1,0,0"))
(rule "if_else_eval" (formula "1") (term "1,1,0,0") (inst "#boolv=b_1"))
(rule "eliminate_variable_declaration" (formula "1") (term "1,1,0,0"))
(rule "compound_assignment_2" (formula "1") (term "1,1,0,0") (inst "#v=b_2"))
(rule "variable_declaration_allmodal" (formula "1") (term "1,1,0,0"))
(rule "eliminate_variable_declaration" (formula "1") (term "1,1,0,0"))
(rule "remove_parentheses_right" (formula "1") (term "1,1,0,0"))
(rule "greater_equal_than_comparison_new" (formula "1") (term "1,1,0,0"))
(builtin "Update Simplification" (formula "1"))
(rule "eliminate_variable_declaration" (formula "1"))
(rule "geq_to_lt" (formula "1") (term "0,1,0,0"))
(rule "ifthenelse_negated_for" (formula "1") (term "1,0,0"))
(rule "assignment_normalassign" (formula "1") (term "1,2,1,0,0"))
(builtin "Update Simplification" (formula "1"))
(rule "assignment_normalassign" (formula "1") (term "1,1,1,0,0"))
(builtin "Update Simplification" (formula "1"))
(rule "empty_modality" (formula "1"))
(rule "all_right" (formula "1") (inst "sk=i_0"))
(rule "imp_right" (formula "1"))
(rule "and_left" (formula "1"))
(rule "not_left" (formula "1"))
(rule "not_left" (formula "1"))
(rule "ifthenelse_split_for" (formula "3"))
(branch "i_0 <  'a' TRUE"
   (rule "charLiteral_to_int" (formula "1") (term "1"))
   (rule "compound_assignment_1" (formula "4") (term "2"))
   (rule "if_else_split" (formula "4"))
   (branch "if b_2 true"
      (builtin "Update Simplification" (formula "5"))
      (builtin "Update Simplification" (formula "1"))
      (rule "boolean_not_equal_2" (formula "1"))
      (rule "close_by_false" (formula "1"))
   )
   (branch "if b_2 false"
      (rule "false_to_not_true" (formula "1") (term "2"))
      (builtin "Update Simplification" (formula "5"))
      (builtin "Update Simplification" (formula "1"))
      (rule "boolean_not_equal_2" (formula "1") (term "0"))
      (rule "concrete_not_2" (formula "1"))
      (rule "true_left" (formula "1"))
      (rule "if_else_enter_then" (formula "4") (term "1"))
      (rule "assignment_normalassign" (formula "4") (term "1"))
      (builtin "Update Simplification" (formula "4"))
      (rule "if_skip_then_block" (formula "4") (term "1"))
      (rule "assignment_normalassign" (formula "4") (term "1"))
      (builtin "Update Simplification" (formula "4"))
      (rule "empty_modality" (formula "4") (term "1"))
      (builtin "Update Simplification" (formula "4"))
      (rule "or_right" (formula "4"))
      (rule "close_goal" (formula "4") (ifseqformula "1"))
   )
)
(branch "i_0 <  'a' FALSE"
   (rule "charLiteral_to_int" (formula "3") (term "1"))
   (rule "compound_assignment_1" (formula "4") (term "2"))
   (rule "if_else_split" (formula "4"))
   (branch "if b_2 true"
      (builtin "Update Simplification" (formula "5"))
      (builtin "Update Simplification" (formula "1"))
      (rule "boolean_equal" (formula "1"))
      (rule "true_left" (formula "1"))
      (rule "if_else_enter_else" (formula "4") (term "1"))
      (rule "assignment_normalassign" (formula "4") (term "1"))
      (builtin "Update Simplification" (formula "4"))
      (rule "less_equal_than_comparison_new" (formula "4") (term "1"))
      (builtin "Update Simplification" (formula "4"))
      (rule "if_enter_then_block" (formula "4") (term "1,1"))
      (rule "if_skip_then_block" (formula "4") (term "1,2"))
      (rule "ifthenelse_split_for" (formula "4"))
      (branch "i_0 <= 'z' TRUE"
         (rule "charLiteral_to_int" (formula "1") (term "1"))
         (rule "assignment_normalassign" (formula "5") (term "1"))
         (builtin "Update Simplification" (formula "5"))
         (rule "leq_to_gt" (formula "1"))
         (rule "not_left" (formula "1"))
         (rule "empty_block" (formula "5") (term "1"))
         (rule "greater" (formula "1"))
         (rule "assignment_subtraction" (formula "5") (term "1"))
         (builtin "Update Simplification" (formula "5"))
         (rule "sub" (formula "5") (term "0"))
         (rule "neg_literal" (formula "5") (term "1,0"))
         (rule "empty_modality" (formula "5") (term "1"))
         (builtin "Update Simplification" (formula "5"))
         (rule "or_right" (formula "5"))
         (builtin "Decision Procedure Simplify")
      )
      (branch "i_0 <= 'z' FALSE"
         (rule "assignment_normalassign" (formula "5") (term "1"))
         (builtin "Update Simplification" (formula "5"))
         (rule "charLiteral_to_int" (formula "4") (term "1"))
         (rule "empty_modality" (formula "5") (term "1"))
         (builtin "Update Simplification" (formula "5"))
         (rule "or_right" (formula "5"))
         (rule "leq_to_gt" (formula "4"))
         (rule "not_right" (formula "4"))
         (rule "greater" (formula "1"))
         (rule "close_goal" (formula "5") (ifseqformula "1"))
      )
   )
   (branch "if b_2 false"
      (rule "false_to_not_true" (formula "1") (term "2"))
      (builtin "Update Simplification" (formula "5"))
      (builtin "Update Simplification" (formula "1"))
      (rule "boolean_equal" (formula "1") (term "0"))
      (rule "concrete_not_1" (formula "1"))
      (rule "close_by_false" (formula "1"))
   )
)
)

}
