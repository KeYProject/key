// This file is part of KeY - Integrated Deductive Software Design 
//
// Copyright (C) 2001-2011 Universitaet Karlsruhe (TH), Germany 
//                         Universitaet Koblenz-Landau, Germany
//                         Chalmers University of Technology, Sweden
// Copyright (C) 2011-2013 Karlsruhe Institute of Technology, Germany 
//                         Technical University Darmstadt, Germany
//                         Chalmers University of Technology, Sweden
//
// The KeY system is protected by the GNU General 
// Public License. See LICENSE.TXT for details.
// 

/**
@provable automatic
@statistic nodes 143
@statistic branches 3
@see <a href="http://java.sun.com/docs/books/jls/third_edition/html/exceptions.html#11.3">Handling of an Exception (JLS, Sect. 11.3)</a>
@author Sebastian Wirkert (doc)

Proof example showing how exceptions are handled.  

When executing method <tt>m</tt> of <tt>MyClass</tt> an exception is thrown.
Java stops the execution of the try block abruptly and tries to find a
matching catch clause (the object thrown has to be an instanceof the declared
parameter type). If there is none, like in this example, the control is
transfered to the finally clause. 
*/

\classpath "classpath";
\javaSource "exceptions_java/";

\programVariables {
   int j;
}

\problem {
\<{
   j =MyClass.m ();
 }\> j = 2

}
