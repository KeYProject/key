\settings {
"#Proof-Settings-Config-File
#Thu Mar 23 13:13:49 CET 2006
[General]SoundNotification=false
[View]FontIndex=2
[SimultaneousUpdateSimplifier]DeleteEffectLessLocations=true
[General]SuggestiveVarNames=false
[View]ShowWholeTaclet=false
[General]ProofAssistant=false
[View]MaxTooltipLines=40
[SimultaneousUpdateSimplifier]EagerSimplification=false
[General]StupidMode=true
[Strategy]MaximumNumberOfAutomaticApplications=6000

[Choice]DefaultChoices=programRules-programRules\\:Java , transactionsPolicy-transactionsPolicy\\:abortTransaction , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , nullPointerPolicy-nullPointerPolicy\\:nullCheck
[OCLRef]Null=false
[OCLRef]ExcThrown=false
[Model]Source=1
[Choice]Choices=transactionsPolicy-transactionsPolicy\\:abortTransaction-transactionsPolicy\\:noAbortTransaction , programRules-programRules\\:ODL-programRules\\:Java , initialisation-initialisation\\:disableStaticInitialisation-initialisation\\:enableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsCheckingOF-intRules\\:javaSemantics-intRules\\:arithmeticSemanticsIgnoringOF , nullPointerPolicy-nullPointerPolicy\\:noNullCheck-nullPointerPolicy\\:nullCheck
[OCLRef]Array=false
[DecisionProcedure]=SIMPLIFY
[General]OuterRenaming=true
[Strategy]ActiveStrategy=Simple JavaCardDL Using Method Contracts without unwinding loops
"
}











\javaSource "while_demo/";

\problem {
\<{
    int i;
  }\> \forall int x; 
        (   x >  0
         -> {i:=x}
              \[{
                  int res =While.loop(i);
                }\] (res = 0 | res = 3))

}

\proof {
(keyLog "0" (keyUser "schlager" ) (keyVersion "0.1725"))
(keyLog "1" (keyUser "schlager" ) (keyVersion "0.1829"))
(keyLog "2" (keyUser "schlager" ) (keyVersion "0.1841"))
(keyLog "3" (keyUser "schlager" ) (keyVersion "0.1849"))
(keyLog "4" (keyUser "richard" ) (keyVersion "0.2004"))
(keyLog "5" (keyUser "richard" ) (keyVersion "0.2004"))

(branch "dummy ID"
(rule "variable_declaration_allmodal" (formula "1") (term "1,1,0,0"))
(rule "greater" (formula "1") (term "0,0,0"))
(rule "eliminate_variable_declaration" (formula "1") (term "1,1,0,0"))
(rule "static_method_call_static_with_assignment_via_typereference" (formula "1") (term "1,1,0,0") (inst "#v0=i_1"))
(rule "eliminate_variable_declaration" (formula "1"))
(rule "empty_modality" (formula "1"))
(rule "all_right" (formula "1") (inst "sk=x_0"))
(rule "imp_right" (formula "1"))
(rule "eliminate_variable_declaration" (formula "2") (term "1"))
(rule "variable_declaration_allmodal" (formula "2") (term "1"))
(rule "eliminate_variable_declaration" (formula "2") (term "1"))
(rule "assignment_normalassign" (formula "2") (term "1"))
(builtin "Update Simplification" (formula "2"))
(rule "method_body_expand" (formula "2") (term "1"))
(rule "eval_return_not_simple" (formula "2") (term "1") (inst "#v0=i_2"))
(rule "variable_declaration_allmodal" (formula "2") (term "1"))
(rule "eliminate_variable_declaration" (formula "2") (term "1"))
(rule "method_call_with_assignment_eval" (formula "2") (term "1"))
(rule "variable_declaration_allmodal" (formula "2") (term "1"))
(rule "eliminate_variable_declaration" (formula "2") (term "1"))
(rule "cast_1" (formula "2") (term "1"))
(rule "assignment_normalassign" (formula "2") (term "1"))
(builtin "Update Simplification" (formula "2"))
(rule "method_call_with_assignment_within_class" (formula "2") (term "1") (inst "#v0=i_3"))
(rule "eliminate_variable_declaration" (formula "2") (term "1"))
(rule "variable_declaration_allmodal" (formula "2") (term "1"))
(rule "eliminate_variable_declaration" (formula "2") (term "1"))
(rule "assignment_normalassign" (formula "2") (term "1"))
(builtin "Update Simplification" (formula "2"))
(rule "method_body_expand" (formula "2") (term "1"))
(rule "eliminate_variable_declaration" (formula "2") (term "1"))
(rule "while_inv_box" (formula "2") (inst "inv=i_4 >= 0") (inst "inner_label=_label0") (inst "#v1=b") (inst "#modifies={*}"))
(branch " Invariant Initially Valid"
   (builtin "Update Simplification" (formula "2"))
   (rule "geq_to_lt" (formula "2"))
   (rule "not_right" (formula "2"))
   (rule "less_is_alternative_1" (ifseqformula "2") (ifseqformula "1"))
)
(branch " Body Preserves Invariant"
   (builtin "Update Simplification" (formula "2"))
   (rule "imp_right" (formula "2"))
   (rule "imp_right" (formula "3"))
   (rule "geq_to_lt" (formula "2"))
   (rule "not_left" (formula "2"))
   (rule "geq_to_lt" (formula "4") (term "1,1,1,0,0"))
   (rule "shift_paren_and" (formula "4") (term "0,0"))
   (rule "variable_declaration_allmodal" (formula "1") (term "0"))
   (rule "throw_in_block_ignore_trail" (formula "4") (term "1,0,0,0,0"))
   (rule "return_in_block_simple_ignore_trail" (formula "4") (term "1,1,0,0,0"))
   (rule "eliminate_variable_declaration" (formula "1") (term "0"))
   (rule "try_throw_single_ignore_trail" (formula "4") (term "1,0,0,0,0"))
   (rule "try_return_1" (formula "4") (term "1,1,0,0,0"))
   (rule "greater_than_comparison_new" (formula "1") (term "0"))
   (builtin "Update Simplification" (formula "1"))
   (rule "greater" (formula "1") (term "0"))
   (rule "ifthenelse_split_for" (formula "1"))
   (branch " 0 <  {*:=*4} i_4 TRUE"
      (rule "if_else_eval" (formula "5") (term "1,0,0,0,0") (inst "#boolv=b"))
      (rule "method_call_return_ignore_trail" (formula "5") (term "1,1,0,0,0"))
      (rule "assignment_normalassign" (formula "2") (term "0"))
      (rule "eliminate_variable_declaration" (formula "5") (term "1,0,0,0,0"))
      (rule "method_call_empty" (formula "2") (term "1,0"))
      (rule "variable_declaration_allmodal" (formula "5") (term "0"))
      (rule "empty_modality" (formula "2") (term "1,0"))
      (builtin "Update Simplification" (formula "2"))
      (rule "boolean_equal" (formula "2"))
      (rule "true_left" (formula "2"))
      (rule "eliminate_variable_declaration" (formula "4") (term "0"))
      (rule "assignment_normalassign" (formula "4") (term "0"))
      (rule "assignment_normalassign" (formula "4") (term "1,1,0,0,1,0"))
      (rule "equality_comparison_new" (formula "4") (term "1,0,0,0,1,0"))
      (rule "if_else_enter_else" (formula "4") (term "1,1,0,0,0,1,0"))
      (rule "if_else_enter_then" (formula "4") (term "2,1,0,0,0,1,0"))
      (rule "ifthenelse_negated_for" (formula "4") (term "1,0,0,0,1,0"))
      (rule "method_call_empty" (formula "4") (term "1,1,1,0,0,1,0"))
      (rule "assignment_normalassign" (formula "4") (term "1,1,0,0,0,1,0"))
      (rule "assignment_normalassign" (formula "4") (term "2,1,0,0,0,1,0"))
      (rule "empty_block" (formula "4") (term "1,1,1,0,0,1,0"))
      (rule "throw_evaluate_non_simple" (formula "4") (term "1,1,1,0,0,0,1,0") (inst "#v0=nullPointerException"))
      (rule "if_else_split_imp_new" (formula "4") (term "1,2,1,0,0,0,1,0"))
      (rule "assignment_normalassign" (formula "4") (term "1,1,1,0,0,1,0"))
      (rule "variable_declaration_allmodal" (formula "4") (term "1,1,1,0,0,0,1,0"))
      (rule "throw_in_block_ignore_trail" (formula "4") (term "2,1,2,1,0,0,0,1,0"))
      (rule "eliminate_variable_declaration" (formula "4") (term "1,1,2,1,0,0,0,1,0"))
      (rule "throw_in_block_ignore_trail" (formula "4") (term "2,1,2,1,0,0,0,1,0"))
      (rule "assignment_normalassign" (formula "4") (term "1,1,2,1,0,0,0,1,0"))
      (rule "empty_block" (formula "4") (term "1,1,1,1,0,0,1,0"))
      (rule "eliminate_variable_declaration" (formula "4") (term "1,1,1,0,0,0,1,0"))
      (rule "method_call_throw_with_param_ignore_trail" (formula "4") (term "2,1,2,1,0,0,0,1,0"))
      (rule "empty_block" (formula "4") (term "1,1,1,2,1,0,0,0,1,0"))
      (rule "method_call_return_ignore_trail" (formula "4") (term "1,1,1,1,0,0,1,0"))
      (rule "object_creation_assignment" (formula "4") (term "1,1,1,0,0,0,1,0") (inst "#v0=nullPointerException_1"))
      (rule "throw_in_block_ignore_trail" (formula "4") (term "2,1,2,1,0,0,0,1,0"))
      (rule "method_call_return_ignore_trail" (formula "4") (term "1,1,1,2,1,0,0,0,1,0"))
      (rule "assignment_normalassign" (formula "4") (term "1,1,1,1,0,0,1,0"))
      (rule "variable_declaration_allmodal" (formula "4") (term "1,1,1,0,0,0,1,0"))
      (rule "throw_in_block_ignore_trail" (formula "4") (term "2,1,2,1,0,0,0,1,0"))
      (rule "assignment_normalassign" (formula "4") (term "1,1,1,2,1,0,0,0,1,0"))
      (rule "method_call_empty" (formula "4") (term "1,1,1,1,1,0,0,1,0"))
      (rule "eliminate_variable_declaration" (formula "4") (term "1,1,1,0,0,0,1,0"))
      (rule "method_call_throw_with_param_ignore_trail" (formula "4") (term "2,1,2,1,0,0,0,1,0"))
      (rule "method_call_empty" (formula "4") (term "1,1,1,1,2,1,0,0,0,1,0"))
      (rule "empty_block" (formula "4") (term "1,1,1,1,1,0,0,1,0"))
      (rule "static_method_call_static_with_assignment_via_typereference" (formula "4") (term "1,1,1,0,0,0,1,0") (inst "#v0=nullPointerException_2"))
      (rule "throw_in_block_ignore_trail" (formula "4") (term "2,1,2,1,0,0,0,1,0"))
      (rule "empty_block" (formula "4") (term "1,1,1,1,2,1,0,0,0,1,0"))
      (rule "assignment_normalassign" (formula "4") (term "1,1,1,1,1,0,0,1,0"))
      (rule "eliminate_variable_declaration" (formula "4") (term "1,1,1,0,0,0,1,0"))
      (rule "throw_single_partial" (formula "4") (term "2,1,2,1,0,0,0,1,0"))
      (rule "assignment_normalassign" (formula "4") (term "1,1,1,1,2,1,0,0,0,1,0"))
      (rule "empty_modality" (formula "4") (term "1,1,1,1,1,1,0,0,1,0"))
      (rule "empty_block" (formula "4") (term "1,1,1,1,1,2,1,0,0,0,1,0"))
      (rule "variable_declaration_allmodal" (formula "4") (term "1,0"))
      (rule "method_call_return_ignore_trail" (formula "4") (term "1,1,1,1,1,2,1,0,0,0,1,0"))
      (rule "eliminate_variable_declaration" (formula "4") (term "1,0"))
      (rule "assignment_normalassign" (formula "4") (term "1,0"))
      (builtin "Update Simplification" (formula "4"))
      (rule "assignment_normalassign" (formula "4") (term "1,1,1,1,1,2,1,0,0,0,2,0"))
      (rule "eliminate_variable_declaration" (formula "4") (term "2,0"))
      (rule "variable_declaration_allmodal" (formula "4") (term "2,0"))
      (rule "method_call_empty" (formula "4") (term "1,1,1,1,1,1,2,1,0,0,0,2,0"))
      (rule "empty_block" (formula "4") (term "1,1,1,1,1,1,2,1,0,0,0,2,0"))
      (rule "assignment_normalassign" (formula "4") (term "1,1,1,1,1,1,2,1,0,0,0,2,0"))
      (rule "empty_modality" (formula "4") (term "1,1,1,1,1,1,1,2,1,0,0,0,2,0"))
      (rule "eliminate_variable_declaration" (formula "4") (term "2,0"))
      (rule "assignment_normalassign" (formula "4") (term "2,0"))
      (builtin "Update Simplification" (formula "4"))
      (rule "eliminate_variable_declaration" (formula "4") (term "3,0"))
      (rule "if_eval" (formula "4") (term "3,0") (inst "#boolv=b"))
      (rule "eliminate_variable_declaration" (formula "4") (term "3,0"))
      (rule "greater_than_comparison_new" (formula "4") (term "3,0"))
      (builtin "Update Simplification" (formula "4"))
      (rule "if_enter_then" (formula "4") (term "3,0,1"))
      (rule "if_skip_then" (formula "4") (term "3,0,2"))
      (rule "greater" (formula "4") (term "0"))
      (rule "replace_known_left" (formula "4") (term "0") (ifseqformula "1"))
      (rule "ifthenelse_true_for" (formula "4"))
      (rule "assignment_normalassign" (formula "4") (term "3,0"))
      (builtin "Update Simplification" (formula "4"))
      (rule "if_eval" (formula "4") (term "3,0") (inst "#boolv=b"))
      (rule "eliminate_variable_declaration" (formula "4") (term "3,0"))
      (rule "equality_comparison_new" (formula "4") (term "3,0"))
      (builtin "Update Simplification" (formula "4"))
      (rule "if_enter_then" (formula "4") (term "3,0,2"))
      (rule "if_skip_then" (formula "4") (term "3,0,1"))
      (rule "ifthenelse_negated_for" (formula "4"))
      (rule "ifthenelse_split_for" (formula "4"))
      (branch " {*:=*4} i_4 = 3 TRUE"
         (rule "apply_eq" (formula "4") (term "0") (ifseqformula "1"))
         (rule "less_literals" (formula "4"))
         (rule "false_right" (formula "4"))
         (rule "apply_eq" (formula "2") (term "1") (ifseqformula "1"))
         (rule "less_literals" (formula "2"))
         (rule "true_left" (formula "2"))
         (rule "make_insert_eq_nonrigid" (formula "1"))
         (rule "make_insert_eq" (formula "1"))
         (rule "assignment_normalassign" (formula "3") (term "3,0"))
         (builtin "Update Simplification" (formula "3"))
         (rule "postdecrement" (formula "3") (term "3,0"))
         (rule "compound_subtraction_1" (formula "3") (term "3,0") (inst "#v=i_5"))
         (rule "variable_declaration_allmodal" (formula "3") (term "3,0"))
         (rule "eliminate_variable_declaration" (formula "3") (term "3,0"))
         (rule "cast_1" (formula "3") (term "3,0"))
         (rule "assignment_normalassign" (formula "3") (term "3,0"))
         (builtin "Update Simplification" (formula "3"))
         (rule "assignment_subtraction" (formula "3") (term "4,0"))
         (builtin "Update Simplification" (formula "3"))
         (rule "sub" (formula "3") (term "2,0"))
         (rule "neg_literal" (formula "3") (term "1,2,0"))
         (rule "switch_params" (formula "3") (term "2,0"))
         (rule "assignment_normalassign" (formula "3") (term "4,0"))
         (builtin "Update Simplification" (formula "3"))
         (rule "break_in_block_ignore_trail" (formula "3") (term "4,0"))
         (rule "break_in_labelled_block_ignore_trail" (formula "3") (term "4,0"))
         (rule "empty_block" (formula "3") (term "4,0"))
         (rule "try_empty" (formula "3") (term "4,0"))
         (rule "method_call_empty" (formula "3") (term "4,0"))
         (rule "empty_modality" (formula "3") (term "4,0"))
         (builtin "Update Simplification" (formula "3"))
         (rule "boolean_not_equal_2" (formula "3") (term "0,0,0"))
         (rule "boolean_not_equal_2" (formula "3") (term "0,1,0"))
         (rule "boolean_equal" (formula "3") (term "0,0,1"))
         (rule "boolean_not_equal_2" (formula "3") (term "0,0,1,0,1"))
         (rule "boolean_not_equal_2" (formula "3") (term "1,0,1,0,1"))
         (rule "concrete_impl_2" (formula "3") (term "0,0"))
         (rule "concrete_impl_2" (formula "3") (term "1,0"))
         (rule "concrete_or_1" (formula "3") (term "0,1"))
         (rule "concrete_and_1" (formula "3") (term "0"))
         (rule "concrete_impl_1" (formula "3") (term "1"))
         (rule "concrete_and_1" (formula "3"))
         (rule "not_right" (formula "3"))
         (rule "apply_eq" (formula "1") (term "1,0") (ifseqformula "2"))
         (rule "switch_params" (formula "1") (term "0"))
         (rule "add_literals" (formula "1") (term "0"))
         (rule "less_literals" (formula "1"))
         (rule "close_by_false" (formula "1"))
      )
      (branch " {*:=*4} i_4 = 3 FALSE"
         (rule "assignment_normalassign" (formula "5") (term "3,0"))
         (builtin "Update Simplification" (formula "5"))
         (rule "if_eval" (formula "5") (term "3,0") (inst "#boolv=b"))
         (rule "eliminate_variable_declaration" (formula "5") (term "3,0"))
         (rule "equality_comparison_new" (formula "5") (term "3,0"))
         (builtin "Update Simplification" (formula "5"))
         (rule "if_skip_then" (formula "5") (term "3,0,1"))
         (rule "if_enter_then" (formula "5") (term "3,0,2"))
         (rule "ifthenelse_negated_for" (formula "5"))
         (rule "ifthenelse_split_for" (formula "5"))
         (branch " {*:=*4} i_4 = 4 TRUE"
            (rule "apply_eq_rigid" (formula "2") (term "1") (ifseqformula "1"))
            (rule "less_literals" (formula "2"))
            (rule "true_left" (formula "2"))
            (rule "apply_eq_rigid" (formula "4") (term "0") (ifseqformula "1"))
            (rule "equal_literals" (formula "4"))
            (rule "false_right" (formula "4"))
            (rule "apply_eq" (formula "3") (term "0") (ifseqformula "1"))
            (rule "less_literals" (formula "3"))
            (rule "false_right" (formula "3"))
            (rule "make_insert_eq_nonrigid" (formula "1"))
            (rule "make_insert_eq" (formula "1"))
            (rule "assignment_normalassign" (formula "3") (term "3,0"))
            (builtin "Update Simplification" (formula "3"))
            (rule "postdecrement" (formula "3") (term "3,0"))
            (rule "compound_subtraction_1" (formula "3") (term "3,0") (inst "#v=i_5"))
            (rule "variable_declaration_allmodal" (formula "3") (term "3,0"))
            (rule "eliminate_variable_declaration" (formula "3") (term "3,0"))
            (rule "cast_1" (formula "3") (term "3,0"))
            (rule "assignment_normalassign" (formula "3") (term "3,0"))
            (builtin "Update Simplification" (formula "3"))
            (rule "assignment_subtraction" (formula "3") (term "4,0"))
            (builtin "Update Simplification" (formula "3"))
            (rule "sub" (formula "3") (term "2,0"))
            (rule "neg_literal" (formula "3") (term "1,2,0"))
            (rule "switch_params" (formula "3") (term "2,0"))
            (rule "assignment_normalassign" (formula "3") (term "4,0"))
            (builtin "Update Simplification" (formula "3"))
            (rule "cast_1" (formula "3") (term "4,0"))
            (rule "assignment_normalassign" (formula "3") (term "4,0"))
            (builtin "Update Simplification" (formula "3"))
            (rule "break_in_block_ignore_trail" (formula "3") (term "5,0"))
            (rule "break_in_labelled_block_ignore_trail" (formula "3") (term "5,0"))
            (rule "empty_block" (formula "3") (term "5,0"))
            (rule "try_empty" (formula "3") (term "5,0"))
            (rule "method_call_empty" (formula "3") (term "5,0"))
            (rule "empty_modality" (formula "3") (term "5,0"))
            (builtin "Update Simplification" (formula "3"))
            (rule "boolean_not_equal_2" (formula "3") (term "0,0,0"))
            (rule "boolean_equal" (formula "3") (term "0,1,0"))
            (rule "boolean_not_equal_2" (formula "3") (term "0,0,1"))
            (rule "boolean_equal" (formula "3") (term "0,0,1,0,1"))
            (rule "boolean_not_equal_2" (formula "3") (term "1,0,1,0,1"))
            (rule "concrete_impl_2" (formula "3") (term "0,0"))
            (rule "concrete_impl_1" (formula "3") (term "1,0"))
            (rule "concrete_or_2" (formula "3") (term "0,1"))
            (rule "concrete_and_1" (formula "3") (term "0"))
            (rule "concrete_or_1" (formula "3") (term "0,0,1"))
            (rule "concrete_not_1" (formula "3") (term "0,1"))
            (rule "concrete_impl_2" (formula "3") (term "1"))
            (rule "concrete_and_3" (formula "3"))
            (rule "or_right" (formula "3"))
            (rule "apply_eq_rigid" (formula "4") (term "1,0") (ifseqformula "1"))
            (rule "switch_params" (formula "4") (term "0"))
            (rule "add_literals" (formula "4") (term "0"))
            (rule "close_eq" (formula "4"))
            (rule "close_by_true" (formula "4"))
         )
         (branch " {*:=*4} i_4 = 4 FALSE"
            (rule "assignment_normalassign" (formula "6") (term "3,0"))
            (builtin "Update Simplification" (formula "6"))
            (rule "postdecrement" (formula "6") (term "3,0"))
            (rule "compound_subtraction_1" (formula "6") (term "3,0") (inst "#v=i_5"))
            (rule "variable_declaration_allmodal" (formula "6") (term "3,0"))
            (rule "eliminate_variable_declaration" (formula "6") (term "3,0"))
            (rule "cast_1" (formula "6") (term "3,0"))
            (rule "assignment_normalassign" (formula "6") (term "3,0"))
            (builtin "Update Simplification" (formula "6"))
            (rule "assignment_subtraction" (formula "6") (term "4,0"))
            (builtin "Update Simplification" (formula "6"))
            (rule "sub" (formula "6") (term "2,0"))
            (rule "neg_literal" (formula "6") (term "1,2,0"))
            (rule "switch_params" (formula "6") (term "2,0"))
            (rule "empty_label" (formula "6") (term "4,0"))
            (rule "empty_block" (formula "6") (term "4,0"))
            (rule "try_empty" (formula "6") (term "4,0"))
            (rule "method_call_empty" (formula "6") (term "4,0"))
            (rule "empty_modality" (formula "6") (term "4,0"))
            (builtin "Update Simplification" (formula "6"))
            (rule "boolean_not_equal_2" (formula "6") (term "0,0,0"))
            (rule "boolean_not_equal_2" (formula "6") (term "0,1,0"))
            (rule "boolean_not_equal_2" (formula "6") (term "0,0,1"))
            (rule "boolean_not_equal_2" (formula "6") (term "0,0,1,0,1"))
            (rule "boolean_not_equal_2" (formula "6") (term "1,0,1,0,1"))
            (rule "concrete_impl_2" (formula "6") (term "0,0"))
            (rule "concrete_impl_2" (formula "6") (term "1,0"))
            (rule "concrete_or_2" (formula "6") (term "0,1"))
            (rule "concrete_and_1" (formula "6") (term "0"))
            (rule "concrete_or_2" (formula "6") (term "0,0,1"))
            (rule "concrete_and_1" (formula "6"))
            (rule "concrete_not_2" (formula "6") (term "0"))
            (rule "concrete_impl_1" (formula "6"))
            (rule "not_right" (formula "6"))
            (rule "less_trans" (formula "3") (ifseqformula "1"))
            (rule "less_trans" (formula "2") (ifseqformula "1"))
            (rule "add_less_back_zero_2_comm" (formula "2"))
            (rule "less_literals" (formula "2"))
            (rule "true_left" (formula "2"))
            (builtin "Decision Procedure Simplify")
         )
      )
   )
   (branch " 0 <  {*:=*4} i_4 FALSE"
      (rule "less_is_alternative_2" (formula "3") (ifseqformula "4"))
      (rule "apply_eq_rigid" (formula "5") (term "0") (ifseqformula "1"))
      (rule "less_literals" (formula "5"))
      (rule "false_right" (formula "5"))
      (rule "apply_eq_rigid" (formula "4") (term "1") (ifseqformula "1"))
      (rule "less_literals" (formula "4"))
      (rule "false_right" (formula "4"))
      (rule "make_insert_eq_nonrigid" (formula "1"))
      (rule "make_insert_eq" (formula "1"))
      (rule "if_else_eval" (formula "4") (term "1,0,0,0,0") (inst "#boolv=b"))
      (rule "method_call_return_ignore_trail" (formula "4") (term "1,1,0,0,0"))
      (rule "assignment_normalassign" (formula "2") (term "0"))
      (rule "eliminate_variable_declaration" (formula "4") (term "1,0,0,0,0"))
      (rule "method_call_empty" (formula "2") (term "1,0"))
      (rule "variable_declaration_allmodal" (formula "4") (term "0"))
      (rule "empty_modality" (formula "2") (term "1,0"))
      (builtin "Update Simplification" (formula "2"))
      (rule "boolean_not_equal_2" (formula "2"))
      (rule "close_by_false" (formula "2"))
   )
)
(branch " Use Case"
   (builtin "Update Simplification" (formula "2"))
   (rule "false_to_not_true" (formula "2") (term "0,0,0,1"))
   (rule "imp_right" (formula "2"))
   (rule "geq_to_lt" (formula "1"))
   (rule "not_left" (formula "1"))
   (rule "variable_declaration_allmodal" (formula "3") (term "0"))
   (rule "try_empty" (formula "3") (term "1,0,0"))
   (rule "eliminate_variable_declaration" (formula "3") (term "0"))
   (rule "greater_than_comparison_new" (formula "3") (term "0"))
   (builtin "Update Simplification" (formula "3"))
   (rule "greater" (formula "3") (term "0"))
   (rule "ifthenelse_split_for" (formula "3"))
   (branch " 0 <  {*:=*3} i_4 TRUE"
      (rule "assignment_normalassign" (formula "4") (term "0"))
      (rule "method_call_return_ignore_trail" (formula "4") (term "1,0,1,0"))
      (rule "assignment_normalassign" (formula "4") (term "1,0,1,0"))
      (rule "method_call_empty" (formula "4") (term "1,1,0,1,0"))
      (rule "empty_block" (formula "4") (term "1,1,0,1,0"))
      (rule "assignment_normalassign" (formula "4") (term "1,1,0,1,0"))
      (rule "empty_block" (formula "4") (term "1,1,1,0,1,0"))
      (rule "method_call_return_ignore_trail" (formula "4") (term "1,1,1,0,1,0"))
      (rule "assignment_normalassign" (formula "4") (term "1,1,1,0,1,0"))
      (rule "method_call_empty" (formula "4") (term "1,1,1,1,0,1,0"))
      (rule "empty_block" (formula "4") (term "1,1,1,1,0,1,0"))
      (rule "assignment_normalassign" (formula "4") (term "1,1,1,1,0,1,0"))
      (rule "empty_modality" (formula "4") (term "1,1,1,1,1,0,1,0"))
      (rule "method_call_empty" (formula "4") (term "1,0"))
      (rule "empty_modality" (formula "4") (term "1,0"))
      (builtin "Update Simplification" (formula "4"))
      (rule "boolean_equal" (formula "4") (term "0,0"))
      (rule "concrete_not_1" (formula "4") (term "0"))
      (rule "concrete_impl_2" (formula "4"))
      (rule "close_by_true" (formula "4"))
   )
   (branch " 0 <  {*:=*3} i_4 FALSE"
      (rule "less_is_alternative_2" (formula "3") (ifseqformula "2"))
      (rule "apply_eq" (formula "4") (term "1") (ifseqformula "1"))
      (rule "less_literals" (formula "4"))
      (rule "false_right" (formula "4"))
      (rule "apply_eq" (formula "3") (term "0") (ifseqformula "1"))
      (rule "less_literals" (formula "3"))
      (rule "false_right" (formula "3"))
      (rule "make_insert_eq_nonrigid" (formula "1"))
      (rule "make_insert_eq" (formula "1"))
      (rule "method_call_return_ignore_trail" (formula "3") (term "1,0,0"))
      (rule "assignment_normalassign" (formula "3") (term "1,0,0"))
      (rule "method_call_empty" (formula "3") (term "1,1,0,0"))
      (rule "empty_block" (formula "3") (term "1,1,0,0"))
      (rule "assignment_normalassign" (formula "3") (term "1,1,0,0"))
      (builtin "Update Simplification" (formula "3"))
      (rule "empty_block" (formula "3") (term "1,1,0,0"))
      (rule "method_call_return_ignore_trail" (formula "3") (term "1,1,0,0"))
      (rule "assignment_normalassign" (formula "3") (term "1,1,0,0"))
      (builtin "Update Simplification" (formula "3"))
      (rule "method_call_empty" (formula "3") (term "1,1,0,0"))
      (rule "empty_block" (formula "3") (term "1,1,0,0"))
      (rule "assignment_normalassign" (formula "3") (term "1,1,0,0"))
      (builtin "Update Simplification" (formula "3"))
      (rule "empty_modality" (formula "3") (term "1,1,0,0"))
      (builtin "Update Simplification" (formula "3"))
      (rule "assignment_normalassign" (formula "3") (term "0"))
      (rule "method_call_empty" (formula "3") (term "1,0"))
      (rule "empty_modality" (formula "3") (term "1,0"))
      (builtin "Update Simplification" (formula "3"))
      (rule "boolean_not_equal_2" (formula "3") (term "0,0"))
      (rule "concrete_not_2" (formula "3") (term "0"))
      (rule "concrete_impl_1" (formula "3"))
      (rule "or_right" (formula "3"))
      (rule "close_goal" (formula "3") (ifseqformula "1"))
   )
)
)

}
