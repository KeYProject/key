// This file is part of KeY - Integrated Deductive Software Design 
//
// Copyright (C) 2001-2011 Universitaet Karlsruhe (TH), Germany 
//                         Universitaet Koblenz-Landau, Germany
//                         Chalmers University of Technology, Sweden
// Copyright (C) 2011-2013 Karlsruhe Institute of Technology, Germany 
//                         Technical University Darmstadt, Germany
//                         Chalmers University of Technology, Sweden
//
// The KeY system is protected by the GNU General 
// Public License. See LICENSE.TXT for details.
// 

/**
@provable automatic
@statistic nodes 94
@statistic branches 4

Example showing how a methodcall is evaluated by key, using the diamond modality.
A diamond modality <p> phi evaluates true, if and only if the program p 
terminates in a state that holds the condition phi. If the program 
doesn't terminate or terminates not normally (i.e. through an uncaught 
exception), the formula will evaluate false.
*/

\javaSource "methodcall_java/";

// Input file for KeY standalone prover version 0.703

\programVariables {
  int j;
}


\problem {
\<{
   ConcreteDerived o =new ConcreteDerived ();
   j =o.m ();
 }\> j = 2

}


