\settings {
"#Proof-Settings-Config-File
#Thu Mar 23 13:02:35 CET 2006
[General]SoundNotification=false
[View]FontIndex=2
[SimultaneousUpdateSimplifier]DeleteEffectLessLocations=true
[General]SuggestiveVarNames=false
[View]ShowWholeTaclet=false
[General]ProofAssistant=false
[View]MaxTooltipLines=40
[SimultaneousUpdateSimplifier]EagerSimplification=false
[General]StupidMode=true
[Strategy]MaximumNumberOfAutomaticApplications=6000

[Choice]DefaultChoices=transactionsPolicy-transactionsPolicy\\:abortTransaction , programRules-programRules\\:Java , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , nullPointerPolicy-nullPointerPolicy\\:nullCheck
[OCLRef]Null=false
[OCLRef]ExcThrown=false
[Model]Source=1
[Choice]Choices=programRules-programRules\\:ODL-programRules\\:Java , transactionsPolicy-transactionsPolicy\\:abortTransaction-transactionsPolicy\\:noAbortTransaction , initialisation-initialisation\\:disableStaticInitialisation-initialisation\\:enableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsCheckingOF-intRules\\:javaSemantics-intRules\\:arithmeticSemanticsIgnoringOF , nullPointerPolicy-nullPointerPolicy\\:noNullCheck-nullPointerPolicy\\:nullCheck
[OCLRef]Array=false
[DecisionProcedure]=SIMPLIFY
[General]OuterRenaming=true
[Strategy]ActiveStrategy=Simple JavaCardDL Using Method Contracts without unwinding loops
"
}







\javaSource "while_demo/";

\problem {
\<{
    int i;
  }\> \forall int x; 
        (   x >  0
         -> {i:=x}
              \[{
                  While.loop2(i);
                }\] true)

}

\proof {
(keyLog "0" (keyUser "schlager" ) (keyVersion "0.1725"))
(keyLog "1" (keyUser "schlager" ) (keyVersion "0.1829"))
(keyLog "2" (keyUser "schlager" ) (keyVersion "0.1841"))
(keyLog "3" (keyUser "richard" ) (keyVersion "0.2004"))

(branch "dummy ID"
(rule "eliminate_variable_declaration" (formula "1"))
(rule "empty_modality" (formula "1"))
(rule "all_right" (formula "1") (inst "sk=x_0"))
(rule "imp_right" (formula "1"))
(rule "static_method_call_static_via_typereference" (formula "2") (term "1"))
(rule "variable_declaration_allmodal" (formula "2") (term "1"))
(rule "eliminate_variable_declaration" (formula "2") (term "1"))
(rule "assignment_normalassign" (formula "2") (term "1"))
(builtin "Update Simplification" (formula "2"))
(rule "method_body_expand" (formula "2") (term "1"))
(rule "eliminate_variable_declaration" (formula "2") (term "1"))
(rule "while_inv_box" (formula "2") (inst "inv=true") (inst "inner_label=_label0") (inst "#v1=b") (inst "#modifies={*}"))
(branch " Invariant Initially Valid"
   (builtin "Update Simplification" (formula "2"))
   (rule "close_by_true" (formula "2"))
)
(branch " Body Preserves Invariant"
   (builtin "Update Simplification" (formula "2"))
   (rule "concrete_impl_4" (formula "2") (term "1,1,0,0,1,1"))
   (rule "concrete_impl_1" (formula "2"))
   (rule "concrete_and_3" (formula "2") (term "1,0,0,1"))
   (rule "imp_right" (formula "2"))
   (rule "greater" (formula "2"))
   (rule "variable_declaration_allmodal" (formula "3") (term "0"))
   (rule "variable_declaration_allmodal" (formula "1") (term "0"))
   (rule "eliminate_variable_declaration" (formula "3") (term "0"))
   (rule "eliminate_variable_declaration" (formula "1") (term "0"))
   (rule "assignment_normalassign" (formula "3") (term "0"))
   (rule "greater_than_comparison_new" (formula "1") (term "0"))
   (builtin "Update Simplification" (formula "1"))
   (rule "greater" (formula "1") (term "0"))
   (rule "ifthenelse_split_for" (formula "1"))
   (branch " 0 <  {*:=*2} i_1 TRUE"
      (rule "box_true" (formula "4") (term "1,0,0,1,0"))
      (rule "concrete_impl_4" (formula "4") (term "0,0,1,0"))
      (rule "concrete_and_1" (formula "4") (term "0,1,0"))
      (rule "assignment_normalassign" (formula "2") (term "0"))
      (rule "variable_declaration_allmodal" (formula "4") (term "1,0"))
      (rule "method_call_empty" (formula "2") (term "1,0"))
      (rule "return_in_block_ignore_trail" (formula "4") (term "1,0,1,0"))
      (rule "empty_modality" (formula "2") (term "1,0"))
      (builtin "Update Simplification" (formula "2"))
      (rule "boolean_equal" (formula "2"))
      (rule "true_left" (formula "2"))
      (rule "eliminate_variable_declaration" (formula "3") (term "1,0"))
      (rule "method_call_return_void_ignore_trail" (formula "3") (term "1,0,1,0"))
      (rule "assignment_normalassign" (formula "3") (term "1,0"))
      (builtin "Update Simplification" (formula "3"))
      (rule "eliminate_variable_declaration" (formula "3") (term "2,0"))
      (rule "if_eval" (formula "3") (term "2,0") (inst "#boolv=b"))
      (rule "eliminate_variable_declaration" (formula "3") (term "2,0"))
      (rule "greater_than_comparison_new" (formula "3") (term "2,0"))
      (builtin "Update Simplification" (formula "3"))
      (rule "if_skip_then" (formula "3") (term "2,0,2"))
      (rule "greater" (formula "3") (term "0"))
      (rule "replace_known_left" (formula "3") (term "0") (ifseqformula "1"))
      (rule "ifthenelse_true_for" (formula "3"))
      (rule "if_enter_then" (formula "3") (term "2,0"))
      (rule "assignment_normalassign" (formula "3") (term "2,0"))
      (builtin "Update Simplification" (formula "3"))
      (rule "if_eval" (formula "3") (term "2,0") (inst "#boolv=b"))
      (rule "eliminate_variable_declaration" (formula "3") (term "2,0"))
      (rule "equality_comparison_new" (formula "3") (term "2,0"))
      (builtin "Update Simplification" (formula "3"))
      (rule "if_skip_then" (formula "3") (term "2,0,1"))
      (rule "if_enter_then" (formula "3") (term "2,0,2"))
      (rule "ifthenelse_negated_for" (formula "3"))
      (rule "ifthenelse_split_for" (formula "3"))
      (branch " {*:=*2} i_1 = 3 TRUE"
         (rule "apply_eq" (formula "2") (term "1") (ifseqformula "1"))
         (rule "less_literals" (formula "2"))
         (rule "true_left" (formula "2"))
         (rule "make_insert_eq" (formula "1"))
         (rule "make_insert_eq_nonrigid" (formula "1"))
         (rule "empty_modality" (formula "3") (term "1,0,2,0"))
         (rule "concrete_impl_4" (formula "3") (term "0,2,0"))
         (rule "assignment_normalassign" (formula "3") (term "2,0"))
         (builtin "Update Simplification" (formula "3"))
         (rule "box_true" (formula "3") (term "2,0"))
         (builtin "Update Simplification" (formula "3"))
         (rule "close_by_true" (formula "3"))
      )
      (branch " {*:=*2} i_1 = 3 FALSE"
         (rule "assignment_normalassign" (formula "4") (term "2,0"))
         (builtin "Update Simplification" (formula "4"))
         (rule "empty_label" (formula "4") (term "2,0"))
         (rule "empty_block" (formula "4") (term "2,0"))
         (rule "try_empty" (formula "4") (term "2,0"))
         (builtin "Update Simplification" (formula "4"))
         (rule "empty_modality" (formula "4") (term "1,0,1,0"))
         (rule "concrete_impl_4" (formula "4") (term "0,1,0"))
         (builtin "Update Simplification" (formula "4"))
         (rule "box_true" (formula "4") (term "0"))
         (builtin "Update Simplification" (formula "4"))
         (rule "close_by_true" (formula "4"))
      )
   )
   (branch " 0 <  {*:=*2} i_1 FALSE"
      (rule "box_true" (formula "4") (term "1,0,0,1,0"))
      (rule "concrete_impl_4" (formula "4") (term "0,0,1,0"))
      (rule "concrete_and_1" (formula "4") (term "0,1,0"))
      (rule "assignment_normalassign" (formula "1") (term "0"))
      (rule "variable_declaration_allmodal" (formula "4") (term "1,0"))
      (rule "method_call_empty" (formula "1") (term "1,0"))
      (rule "eliminate_variable_declaration" (formula "4") (term "1,0"))
      (rule "empty_modality" (formula "1") (term "1,0"))
      (builtin "Update Simplification" (formula "1"))
      (rule "boolean_not_equal_2" (formula "1"))
      (rule "close_by_false" (formula "1"))
   )
)
(branch " Use Case"
   (rule "false_to_not_true" (formula "2") (term "0,0,1,0,1"))
   (builtin "Update Simplification" (formula "2"))
   (rule "concrete_impl_1" (formula "2"))
   (rule "greater" (formula "1"))
   (rule "method_call_empty" (formula "2") (term "1,0,0"))
   (rule "variable_declaration_allmodal" (formula "2") (term "0"))
   (rule "eliminate_variable_declaration" (formula "2") (term "0"))
   (rule "greater_than_comparison_new" (formula "2") (term "0"))
   (builtin "Update Simplification" (formula "2"))
   (rule "greater" (formula "2") (term "0"))
   (rule "ifthenelse_split_for" (formula "2"))
   (branch " 0 <  {*:=*1} i_1 TRUE"
      (rule "empty_modality" (formula "3") (term "1,0,0"))
      (rule "concrete_impl_4" (formula "3") (term "0,0"))
      (rule "assignment_normalassign" (formula "3") (term "0"))
      (builtin "Update Simplification" (formula "3"))
      (rule "method_call_empty" (formula "3") (term "0"))
      (rule "empty_modality" (formula "3") (term "0"))
      (builtin "Update Simplification" (formula "3"))
      (rule "close_by_true" (formula "3"))
   )
   (branch " 0 <  {*:=*1} i_1 FALSE"
      (rule "assignment_normalassign" (formula "3") (term "0"))
      (rule "empty_modality" (formula "3") (term "1,0,1,0"))
      (rule "concrete_impl_4" (formula "3") (term "0,1,0"))
      (builtin "Update Simplification" (formula "3"))
      (rule "method_call_empty" (formula "3") (term "0"))
      (rule "empty_modality" (formula "3") (term "0"))
      (builtin "Update Simplification" (formula "3"))
      (rule "close_by_true" (formula "3"))
   )
)
)

}
