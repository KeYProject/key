// This file is part of KeY - Integrated Deductive Software Design 
//
// Copyright (C) 2001-2011 Universitaet Karlsruhe (TH), Germany 
//                         Universitaet Koblenz-Landau, Germany
//                         Chalmers University of Technology, Sweden
// Copyright (C) 2011-2013 Karlsruhe Institute of Technology, Germany 
//                         Technical University Darmstadt, Germany
//                         Chalmers University of Technology, Sweden
//
// The KeY system is protected by the GNU General 
// Public License. See LICENSE.TXT for details.
// 


/**

  @provable interactive
  @author Mattias Ulbrich
  @statistic nodes 347
  @statistic branches 8
  @statistic manualInstantiations 2
  
  The enhanced for loop has got a invariant rule on its own.
  This problem can be proven - two gamma terms have to be instantiated manually.
  
  This is a maximum search that returns the maximum element in an non-empty array.
  

 */  


\problem {

\<{int[] array; }\>((!array = null & array.length > 0)-> 
                             \<{ int m = array[0]; 
                                 for(int j : array) 
                                    if(j > m) 
                                       m = j; 
                             }\>\forall int i; ((0<=i & i<array.length)->m>=array[i]))

/* invariant: \forall int k; ((0 <= k & k < I) -> m >= array[k]) */
/* modifies: m */

}
