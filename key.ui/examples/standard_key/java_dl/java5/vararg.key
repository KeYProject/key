// This file is part of KeY - Integrated Deductive Software Design 
//
// Copyright (C) 2001-2011 Universitaet Karlsruhe (TH), Germany 
//                         Universitaet Koblenz-Landau, Germany
//                         Chalmers University of Technology, Sweden
// Copyright (C) 2011-2013 Karlsruhe Institute of Technology, Germany 
//                         Technical University Darmstadt, Germany
//                         Chalmers University of Technology, Sweden
//
// The KeY system is protected by the GNU General 
// Public License. See LICENSE.TXT for details.
// 

\javaSource "src";

\withOptions runtimeExceptions:allow;


\programVariables {
  boolean exc;
  java.lang.Object o, d1,d2;
}

\problem {

  wellFormed(heap) & exc = FALSE ->
  (
    (\<{ o = VarArg.varArg(0, d1, d2); }\> o = d1)
   & 
    (\<{ o = VarArg.varArg(1, d1, d2); }\> o = d2)
   &
    (\<{ o = VarArg.varArg(1, new Object[] { d1, d2 }); }\> o = d2)
   &
    (\<{ try { VarArg.varArg(0, null); }
         catch(java.lang.NullPointerException ex) { exc = true; }
       }\> exc=TRUE)
   &
    (\<{ o = VarArg.varArg(0, null, null); }\> o = null)
   &
    (\<{ o = VarArg.varArg(0, (java.lang.Object)null); }\> o = null)
   &
    (\<{ o = VarArg.varArg(1, new VarArg[3]); }\> o = null)
   &
    (\<{ try { VarArg.varArg(0); }
         catch(java.lang.IndexOutOfBoundsException ex) { exc = true; }
       }\> exc=TRUE)
  
  )

}
