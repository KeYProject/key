// This file is part of KeY - Integrated Deductive Software Design 
//
// Copyright (C) 2001-2011 Universitaet Karlsruhe (TH), Germany 
//                         Universitaet Koblenz-Landau, Germany
//                         Chalmers University of Technology, Sweden
// Copyright (C) 2011-2013 Karlsruhe Institute of Technology, Germany 
//                         Technical University Darmstadt, Germany
//                         Chalmers University of Technology, Sweden
//
// The KeY system is protected by the GNU General 
// Public License. See LICENSE.TXT for details.
// 

\settings {
"#Proof-Settings-Config-File
#Mon Apr 11 17:32:09 CEST 2005
[General]SoundNotification=false
[View]FontIndex=0
[SimultaneousUpdateSimplifier]DeleteEffectLessLocations=true
[General]SuggestiveVarNames=false
[General]ProofAssistant=false
[View]ShowWholeTaclet=false
[View]MaxTooltipLines=40
[General]StupidMode=true
[Strategy]MaximumNumberOfAutomaticApplications=10000
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_NONE
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_NORMAL
[Choice]DefaultChoices=transactionsPolicy-transactionsPolicy\\:abortTransaction , programRules-programRules\\:Java , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , nullPointerPolicy-nullPointerPolicy\\:nullCheck
[OCLRef]Null=true
[OCLRef]ExcThrown=true
[Model]Source=1
[Choice]Choices=programRules-programRules\\:ODL-programRules\\:Java , transactionsPolicy-transactionsPolicy\\:abortTransaction-transactionsPolicy\\:noAbortTransaction , initialisation-initialisation\\:disableStaticInitialisation-initialisation\\:enableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsCheckingOF-intRules\\:javaSemantics-intRules\\:arithmeticSemanticsIgnoringOF , nullPointerPolicy-nullPointerPolicy\\:noNullCheck-nullPointerPolicy\\:nullCheck
[OCLRef]Array=true
[DecisionProcedure]=SIMPLIFY
[General]OuterRenaming=true
[Strategy]ActiveStrategy=JavaCardDLStrategy
"
}


\functions {
	int a;
}

\predicates {
	p(int);
}

\problem {
	\[{ while ( true ); }\] \forall int i; (p(i+1) | i < 14 | i >= 13 | p(i))
}
