// This file is part of KeY - Integrated Deductive Software Design 
//
// Copyright (C) 2001-2011 Universitaet Karlsruhe (TH), Germany 
//                         Universitaet Koblenz-Landau, Germany
//                         Chalmers University of Technology, Sweden
// Copyright (C) 2011-2013 Karlsruhe Institute of Technology, Germany 
//                         Technical University Darmstadt, Germany
//                         Chalmers University of Technology, Sweden
//
// The KeY system is protected by the GNU General 
// Public License. See LICENSE.TXT for details.
// 

\javaSource "./classes";

\withOptions initialisation:enableStaticInitialisation;

\problem {

    (wellFormed(heap) &
    java.lang.NoClassDefFoundError.<classInitialized> = TRUE &
    java.lang.LinkageError.<classInitialized> = TRUE &
    java.lang.ArithmeticException.<classInitialized> = TRUE &
    java.lang.NullPointerException.<classInitialized> = TRUE )
->
    {C.<classInitialized> := FALSE ||
     C.<classPrepared>    := FALSE ||
     C.<classInitializationInProgress> := FALSE ||
     C.<classErroneous> := FALSE ||

    C1.<classInitialized> := FALSE ||
    C1.<classPrepared>    := FALSE ||
    C1.<classInitializationInProgress> := FALSE ||
    C1.<classErroneous> := FALSE ||

    C2.<classInitialized> := FALSE ||
    C2.<classPrepared>    := FALSE ||
    C2.<classInitializationInProgress> := FALSE ||
    C2.<classErroneous> := FALSE}
    \<{ C.m(); }\> (C.result1 = TRUE & C.result2 = FALSE & C.result3 = TRUE & C.result4 = TRUE)
}
