// Input file for KeY standalone prover version 0.497


\programVariables {
  int[] a;
  int i;
  int j;
  int j2;
  int j_10;
  int j_12;
  int j_13;
  int minIndex;
  int minIndex2;
  boolean b_1;
  boolean sk_4;
  boolean sk_5;
  boolean condOuter;
  boolean condInner;
  boolean condInner2;
}

\problem {
     (    

//DAS HIER Lï¿½SCHEN-------------------------------------->
	  \forall int x;
            \forall int y;
              (   leq(i, x) & lt(x, y) & leq(y, 0)
               -> leq(a[x], a[y]))
        & 
//<--------------------------------------------------ENDE


	  \forall int x;
            \forall int y;
              (     leq(minIndex2, x)
                  & lt(x, y)
                  & lt(y, j2)
               -> leq(a[x], a[y]))
        & \forall int x;
            \forall int y;
              (   leq(0, x) & lt(x, y) & leq(y, i)
               -> leq(a[x], a[y]))
        & \forall int x;
            \forall int y;
              (     leq(0, x)
                  & lt(x, y)
                  & lt(y, minIndex2)
               -> leq(a[x], a[y]))
        & \forall int x;
            \forall int y;
              (   lt(0, x) & lt(x, y) & lt(y, j2)
               -> leq(a[x], a[y]))
        & \forall int x;
            \forall int y;
              (     leq(a[i], x)
                  & lt(x, y)
                  & leq(y, a[0])
               -> leq(a[x], a[y]))
        & \forall int x;
            \forall int y;
              (     leq(a[0], x)
                  & lt(x, y)
                  & leq(y, a[i])
               -> leq(a[x], a[y]))
        & \forall int x;
            (   leq(i, x) & leq(x, minIndex2)
             -> leq(a[minIndex2], a[x]))
        & \forall int x;
            (   leq(i, x) & lt(x, j2)
             -> leq(a[minIndex2], a[x]))
        & \forall int x;
            (   leq(i, x) & leq(x, 0)
             -> leq(a[minIndex2], a[x]))
        & \forall int x;
            (   leq(minIndex2, x) & lt(x, j2)
             -> leq(a[minIndex2], a[x]))
        & \forall int x;
            (   leq(0, x) & leq(x, i)
             -> leq(a[minIndex2], a[x]))
        & \forall int x;
            (   leq(0, x) & leq(x, minIndex2)
             -> leq(a[minIndex2], a[x]))
        & \forall int x;
            (   leq(0, x) & lt(x, j2)
             -> leq(a[minIndex2], a[x]))
        & \forall int x;
            (   leq(a[i], x) & lt(x, a[0])
             -> leq(a[minIndex2], a[x]))
        & \forall int x;
            (   leq(a[0], x) & lt(x, a[i])
             -> leq(a[minIndex2], a[x]))
        & leq(a[minIndex2], a[0])
        & a[i] = a[0]
        & leq(a[minIndex2], a[i])
        & lt(0, a.length)
        & leq(j2, a.length)
        & lt(0, j2)
        & lt(minIndex2, a.length)
        & leq(0, minIndex2)
        & lt(minIndex2, j2)
        & lt(i, a.length)
        & i = 0
        & lt(i, j2)
        & leq(i, minIndex2)
        & \forall int x;
            \forall int y;
              (     leq(a[minIndex2], x)
                  & leq(x, a[0])
                  & leq(a[0], y)
                  & lt(y, a[i])
               -> leq(a[x], a[y]))
        & \forall int x;
            \forall int y;
              (     leq(a[minIndex2], x)
                  & leq(x, a[i])
                  & leq(a[i], y)
                  & lt(y, a[0])
               -> leq(a[x], a[y]))
        & \forall int x;
            \forall int y;
              (     lt(0, x)
                  & lt(x, minIndex2)
                  & leq(minIndex2, y)
                  & leq(y, a.length)
               -> leq(a[x], a[y]))
        & \forall int x;
            \forall int y;
              (     leq(0, x)
                  & leq(x, minIndex2)
                  & lt(minIndex2, y)
                  & lt(y, j2)
               -> leq(a[x], a[y]))
        & \forall int x;
            \forall int y;
              (     leq(0, x)
                  & lt(x, i)
                  & leq(i, y)
                  & leq(y, a.length)
               -> leq(a[x], a[y]))
        & \forall int x;
            \forall int y;
              (     leq(0, x)
                  & lt(x, i)
                  & leq(i, y)
                  & leq(y, j2)
               -> leq(a[x], a[y]))
        & \forall int x;
            \forall int y;
              (     leq(0, x)
                  & leq(x, i)
                  & leq(i, y)
                  & lt(y, minIndex2)
               -> leq(a[x], a[y]))
        & \forall int x;
            \forall int y;
              (     leq(i, x)
                  & lt(x, 0)
                  & leq(0, y)
                  & leq(y, a.length)
               -> leq(a[x], a[y]))
        & \forall int x;
            \forall int y;
              (     leq(i, x)
                  & lt(x, 0)
                  & leq(0, y)
                  & leq(y, j2)
               -> leq(a[x], a[y]))
        & \forall int x;
            \forall int y;
              (     leq(i, x)
                  & leq(x, 0)
                  & leq(0, y)
                  & lt(y, minIndex2)
               -> leq(a[x], a[y]))
        & \forall int x;
            \forall int y;
              (     lt(i, x)
                  & lt(x, minIndex2)
                  & leq(minIndex2, y)
                  & leq(y, a.length)
               -> leq(a[x], a[y]))
        & \forall int x;
            \forall int y;
              (     leq(i, x)
                  & leq(x, minIndex2)
                  & lt(minIndex2, y)
                  & lt(y, j2)
               -> leq(a[x], a[y]))
        & !null = a
        & condOuter = TRUE
        & (condOuter = TRUE <-> lt(i, a.length))
        & (condInner2 = TRUE <-> lt(j2, a.length))
        & condInner2 = TRUE
        & j_10 = a[j2]
        & (sk_4 = TRUE <-> lt(j_10, a[minIndex2]))
        & b_1 = sk_4
        & b_1 = TRUE
        & minIndex = j2
      | \forall int x;
          (   leq(i, x) & leq(x, minIndex)
           -> leq(a[minIndex], a[x]))
      & \forall int x;
          (   leq(i, x) & lt(x, j2)
           -> leq(a[minIndex], a[x]))
      & \forall int x;
          (   leq(i, x) & leq(x, 0)
           -> leq(a[minIndex], a[x]))
      & \forall int x;
          (   leq(minIndex, x) & lt(x, j2)
           -> leq(a[minIndex], a[x]))
      & \forall int x;
          (   leq(0, x) & leq(x, i)
           -> leq(a[minIndex], a[x]))
      & \forall int x;
          (   leq(0, x) & leq(x, minIndex)
           -> leq(a[minIndex], a[x]))
      & \forall int x;
          (   leq(0, x) & lt(x, j2)
           -> leq(a[minIndex], a[x]))
      & \forall int x;
          (   leq(a[i], x) & lt(x, a[0])
           -> leq(a[minIndex], a[x]))
      & \forall int x;
          (   leq(a[0], x) & lt(x, a[i])
           -> leq(a[minIndex], a[x]))
      & !null = a
      & condOuter = TRUE
      & (condOuter = TRUE <-> lt(i, a.length))
      & (condInner2 = TRUE <-> lt(j2, a.length))
      & condInner2 = TRUE
      & j_10 = a[j2]
      & (sk_4 = TRUE <-> lt(j_10, a[minIndex]))
      & b_1 = sk_4
      & !b_1 = TRUE)
   & j_12 = add(j2, 1)
   & j = j_12
   & j_13 = j
   & (sk_5 = TRUE <-> lt(j_13, a.length))
   & condInner = sk_5
 | \forall int x;
     (leq(0, x) & lt(x, j) -> leq(a[minIndex], a[x]))
 & \forall int x;
     (   leq(a[i], x) & lt(x, a[0])
      -> leq(a[minIndex], a[x]))
 & \forall int x;
     (   leq(a[0], x) & lt(x, a[i])
      -> leq(a[minIndex], a[x]))
 & !null = a
 & condOuter = TRUE
 & (condOuter = TRUE <-> lt(i, a.length))
 & (condInner = TRUE <-> lt(j, a.length))
-> \forall int x;
     (lt(0, x) & lt(x, j) -> leq(a[minIndex], a[x]))
}
