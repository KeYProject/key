// This file is part of KeY - Integrated Deductive Software Design 
//
// Copyright (C) 2001-2011 Universitaet Karlsruhe (TH), Germany 
//                         Universitaet Koblenz-Landau, Germany
//                         Chalmers University of Technology, Sweden
// Copyright (C) 2011-2013 Karlsruhe Institute of Technology, Germany 
//                         Technical University Darmstadt, Germany
//                         Chalmers University of Technology, Sweden
//
// The KeY system is protected by the GNU General 
// Public License. See LICENSE.TXT for details.
// 



\sorts {
	S;
}


\predicates {
	p(S);
}


\schemaVariables {
	\term S sv;
	\formula phi, post;
	\program Statement #s, #t, #u;

	\program[list] Statement #slist;
	\program Expression #e;
}


\rules {
	testTaclet0 { \find ( \<{ #u if ( 0 == 1 ) #s else #t }\> ( p ( sv ) |
	phi ) ) \sameUpdateLevel
                      \replacewith ( \<{ #u if ( 0 == 0 ) #t else #s }\> ( phi | p ( sv ) ) ) };




 break_in_block_nolabel { \find(\<{.. { break; } ...}\>post) 
	\replacewith (\<{..  break;  ...}\>post) \heuristics(simplify_prog) };

 break_empty { \find(\<{ break; #slist }\>post) 
	\replacewith (false) \heuristics(simplify_prog) };

  throw_ignore_trail { \find (\<{ throw #e; #slist }\>post)
	\replacewith (false) \heuristics(simplify_prog) };

}


\problem {
false

}

\proof {
(log "0" (user "daniels" ) (keyVersion "danielsRunAllTests.10"))
(branch "dummy ID"
(rule "false_right" (formula "1"))
(opengoal "false ")
)

}
