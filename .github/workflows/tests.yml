name: Tests

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: write
  issues: write
  pull-requests: write
  id-token: write
  checks: write

jobs:  
  unit-tests:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest ] # currently buggy, windows-latest]
        java: [11]
    continue-on-error: true
    runs-on: ${{ matrix.os }}
    env:
      GH_TOKEN: ${{ github.token }}
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: ${{ matrix.java }}
          distribution: 'temurin'

      - name: Build with Gradle
        uses: gradle/gradle-build-action@v2.3.3
        with:
          arguments: --continue -x :key.core.symbolic_execution:test -x :key.core.proof_references:test test

      - name: Upload test results
        uses: actions/upload-artifact@v3.1.1
        if: success() || failure()
        with:
          name: test-results
          path: |
            **/build/test-results/*/*.xml
            **/build/reports/

  integration-tests:
    env:
      GH_TOKEN: ${{ github.token }}
    continue-on-error: true
    strategy:
      fail-fast: false
      matrix:
        test: [testProveRules, testRunAllFunProofs, testRunAllInfProofs]
        os: [ubuntu-latest]
        java: [11]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: ${{ matrix.java }}
          distribution: 'temurin'

      - name: Cache SMT-Solvers
        id: smt-solvers
        uses: actions/cache@v3
        with:
          path: smt-solvers
          key: ${{ runner.os }}-smt-solvers

      - name: Install SMT-Solvers
        run: .github/dlsmt.sh

      - name: "Running tests: ${{ matrix.test }}"
        uses: gradle/gradle-build-action@v2.3.3
        with:
          arguments: --continue ${{ matrix.test }}

      - name: Upload test results
        uses: actions/upload-artifact@v3.1.1
        if: success() || failure()        # run this step even if previous step failed
        with:
          name: test-results
          path: |
            **/build/test-results/*/*.xml
            **/build/reports/
            
  optional-tests:
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: Build with Gradle
        uses: gradle/gradle-build-action@v2.3.3
        with:
          arguments: --continue :key.core.proof_references:test :key.core.symbolic_execution:test

      - name: Upload test results
        uses: actions/upload-artifact@v3.1.1
        # if: success() || failure()        # run this step even if previous step failed
        with:
          name: test-results
          path: |
            **/build/test-results/*/*.xml
            **/build/reports/
            
  # report:
  #   runs-on: ubuntu-latest
  #   needs: [optional-tests, unit-tests, integration-tests]
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Download a Test Reports (JUnit XML)
  #       uses: actions/download-artifact@v3.0.2
  #       with:
  #         name: test-results
  # 
  #     - name: Test reporting
  #       uses: dorny/test-reporter@v1
  #       if: success() || failure()
  #       with:
  #         name: Test Report
  #         path: "**/build/test-results/*/*.xml"
  #         reporter: java-junit
