\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Thu Dec 08 18:02:35 CET 2022
[Labels]UseOriginLabels=true
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=JavaCard-JavaCard\\:on , Strings-Strings\\:on , assertions-assertions\\:safe , bigint-bigint\\:on , floatRules-floatRules\\:strictfpOnly , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , integerSimplificationRules-integerSimplificationRules\\:full , javaLoopTreatment-javaLoopTreatment\\:efficient , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off , methodExpansion-methodExpansion\\:modularOnly , modelFields-modelFields\\:treatAsAxiom , moreSeqRules-moreSeqRules\\:off , permissions-permissions\\:off , programRules-programRules\\:Java , reach-reach\\:on , runtimeExceptions-runtimeExceptions\\:ban , sequences-sequences\\:on , wdChecks-wdChecks\\:off , wdOperator-wdOperator\\:L
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_NONE
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[Strategy]MaximumNumberOfAutomaticApplications=50000
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[Strategy]Timeout=-1
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[SMTSettings]useUninterpretedMultiplication=true
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_EXPAND
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[SMTSettings]maxGenericSorts=2
[StrategyProperty]OSS_OPTIONS_KEY=OSS_ON
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\javaSource ".";

\proofObligation {
	"contract": "Gcd[Gcd::gcd(int,int)].JML normal_behavior operation contract.0",
	"name": "Gcd[Gcd::gcd(int,int)].JML normal_behavior operation contract.0",
	"class": "de.uka.ilkd.key.proof.init.FunctionalOperationContractPO",
 }

\proof {
(keyLog "0" (keyUser "dscheurer" ) (keyVersion "90bb886cd7b78027c8f6703803461f09e5699bb9"))
(keyLog "1" (keyUser "Julian" ) (keyVersion "008f011f15"))

(autoModeTime "22279")

(branch "dummy ID"
 (builtin "One Step Simplification" (formula "1") (newnames "heapAtPre,o,f"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "assignment" (formula "3") (term "1"))
 (builtin "One Step Simplification" (formula "3"))
(rule "methodBodyExpand" (formula "3") (term "1") (newnames "heapBefore_gcd,savedHeapBefore_gcd"))
 (builtin "One Step Simplification" (formula "3"))
(rule "ifUnfold" (formula "3") (term "1") (inst "#boolv=x"))
(rule "variableDeclaration" (formula "3") (term "1") (newnames "x"))
(rule "less_than_comparison_simple" (formula "3") (term "1"))
 (builtin "One Step Simplification" (formula "3"))
(rule "ifSplit" (formula "3"))
(branch "if x true"
    (builtin "One Step Simplification" (formula "4"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "unaryMinusInt" (formula "4") (term "1"))
    (builtin "One Step Simplification" (formula "4"))
   (rule "translateJavaUnaryMinusInt" (formula "4") (term "0,1,0"))
   (rule "polySimp_elimNeg" (formula "4") (term "0,1,0"))
   (rule "ifUnfold" (formula "4") (term "1") (inst "#boolv=x"))
   (rule "variableDeclaration" (formula "4") (term "1") (newnames "x_1"))
   (rule "less_than_comparison_simple" (formula "4") (term "1"))
    (builtin "One Step Simplification" (formula "4"))
   (rule "ifSplit" (formula "4"))
   (branch "if x_1 true"
       (builtin "One Step Simplification" (formula "5"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "unaryMinusInt" (formula "5") (term "1"))
       (builtin "One Step Simplification" (formula "5"))
      (rule "translateJavaUnaryMinusInt" (formula "5") (term "0,1,0"))
      (rule "polySimp_elimNeg" (formula "5") (term "0,1,0"))
      (rule "variableDeclarationMult" (formula "5") (term "1"))
      (rule "variableDeclaration" (formula "5") (term "1") (newnames "big"))
      (rule "variableDeclaration" (formula "5") (term "1") (newnames "small"))
      (rule "blockEmpty" (formula "5") (term "1"))
      (rule "ifElseUnfold" (formula "5") (term "1") (inst "#boolv=x"))
      (rule "variableDeclaration" (formula "5") (term "1") (newnames "x_2"))
      (rule "greater_than_comparison_simple" (formula "5") (term "1"))
       (builtin "One Step Simplification" (formula "5"))
      (rule "ifElseSplit" (formula "5"))
      (branch "if x_2 true"
          (builtin "One Step Simplification" (formula "6"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "assignment" (formula "6") (term "1"))
          (builtin "One Step Simplification" (formula "6"))
         (rule "assignment" (formula "6") (term "1"))
          (builtin "One Step Simplification" (formula "6"))
         (rule "blockEmpty" (formula "6") (term "1"))
         (rule "returnUnfold" (formula "6") (term "1") (inst "#v0=x"))
         (rule "variableDeclarationAssign" (formula "6") (term "1"))
         (rule "variableDeclaration" (formula "6") (term "1") (newnames "x_3"))
          (builtin "Use Operation Contract" (formula "6") (newnames "heapBefore_gcdHelp,result_gcdHelp,exc_0,heapAfter_gcdHelp,anon_heap_gcdHelp") (contract "Gcd[Gcd::gcdHelp(int,int)].JML normal_behavior operation contract.0"))
         (branch "Post (gcdHelp)"
             (builtin "One Step Simplification" (formula "8"))
             (builtin "One Step Simplification" (formula "7"))
            (rule "andLeft" (formula "7"))
            (rule "andLeft" (formula "8"))
            (rule "andLeft" (formula "9"))
            (rule "assignment" (formula "10") (term "1"))
             (builtin "One Step Simplification" (formula "10"))
            (rule "polySimp_invertEq" (formula "9") (term "0,0"))
            (rule "polySimp_mulLiterals" (formula "9") (term "0,0,0"))
            (rule "times_zero_2" (formula "9") (term "1,0,0"))
            (rule "polySimp_elimOne" (formula "9") (term "0,0,0"))
            (rule "methodCallReturn" (formula "10") (term "1"))
            (rule "assignment" (formula "10") (term "1"))
             (builtin "One Step Simplification" (formula "10"))
            (rule "methodCallEmpty" (formula "10") (term "1"))
            (rule "tryEmpty" (formula "10") (term "1"))
             (builtin "One Step Simplification" (formula "10"))
            (rule "emptyModality" (formula "10") (term "1"))
            (rule "andRight" (formula "10"))
            (branch "Case 1"
               (rule "impRight" (formula "10"))
               (rule "andRight" (formula "11"))
               (branch "Case 1"
                  (rule "andRight" (formula "11"))
                  (branch "Case 1"
                      (builtin "One Step Simplification" (formula "1"))
                      (builtin "One Step Simplification" (formula "11"))
                     (rule "inEqSimp_ltToLeq" (formula "3"))
                     (rule "times_zero_1" (formula "3") (term "1,0,0"))
                     (rule "add_zero_right" (formula "3") (term "0,0"))
                     (rule "inEqSimp_gtToGeq" (formula "10") (term "0,0,0,0,1,1"))
                     (rule "times_zero_1" (formula "10") (term "1,0,0,0,0,0,0,1,1"))
                     (rule "add_zero_right" (formula "10") (term "0,0,0,0,0,0,1,1"))
                     (rule "inEqSimp_ltToLeq" (formula "4"))
                     (rule "times_zero_1" (formula "4") (term "1,0,0"))
                     (rule "add_zero_right" (formula "4") (term "0,0"))
                     (rule "inEqSimp_gtToGeq" (formula "2"))
                     (rule "polySimp_mulAssoc" (formula "2") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "2") (term "0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                     (rule "polySimp_elimOne" (formula "2") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "2") (term "0"))
                     (rule "jmod_axiom" (formula "10") (term "0,0,0,1"))
                     (rule "polySimp_mulComm1" (formula "10") (term "1,0,0,0,1"))
                     (rule "jmod_axiom" (formula "10") (term "0,1,0,0,0,1,1"))
                     (rule "polySimp_mulComm1" (formula "10") (term "1,0,1,0,0,0,1,1"))
                     (rule "jmod_axiom" (formula "10") (term "0,1,0,0,1,1"))
                     (rule "polySimp_mulComm1" (formula "10") (term "1,0,1,0,0,1,1"))
                     (rule "jmod_axiom" (formula "10") (term "0,1,0,1,1"))
                     (rule "polySimp_mulComm1" (formula "10") (term "1,0,1,0,1,1"))
                     (rule "jmod_axiom" (formula "10") (term "0,1,0,1"))
                     (rule "polySimp_mulComm1" (formula "10") (term "1,0,1,0,1"))
                     (rule "jmod_axiom" (formula "11") (term "0"))
                     (rule "polySimp_mulComm1" (formula "11") (term "1,0"))
                     (rule "polySimp_sepNegMonomial" (formula "10") (term "0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "0,0,0,1"))
                     (rule "polySimp_elimOne" (formula "10") (term "0,0,0,1"))
                     (rule "polySimp_sepNegMonomial" (formula "10") (term "1,0,0,0,1,1"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "0,1,0,0,0,1,1"))
                     (rule "polySimp_elimOne" (formula "10") (term "0,1,0,0,0,1,1"))
                     (rule "polySimp_sepNegMonomial" (formula "10") (term "1,0,0,1,1"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "0,1,0,0,1,1"))
                     (rule "polySimp_elimOne" (formula "10") (term "0,1,0,0,1,1"))
                     (rule "polySimp_sepNegMonomial" (formula "10") (term "1,0,1,1"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "0,1,0,1,1"))
                     (rule "polySimp_elimOne" (formula "10") (term "0,1,0,1,1"))
                     (rule "polySimp_sepNegMonomial" (formula "10") (term "1,0,1"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "0,1,0,1"))
                     (rule "polySimp_elimOne" (formula "10") (term "0,1,0,1"))
                     (rule "polySimp_sepNegMonomial" (formula "11"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                     (rule "polySimp_elimOne" (formula "11") (term "0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                     (rule "mul_literals" (formula "3") (term "1"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "0,0,0,0,1,1"))
                     (rule "mul_literals" (formula "10") (term "1,0,0,0,0,1,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                     (rule "mul_literals" (formula "4") (term "1"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                     (rule "polySimp_mulComm0" (formula "2") (term "1"))
                     (rule "polySimp_rightDist" (formula "2") (term "1"))
                     (rule "mul_literals" (formula "2") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                     (rule "inEqSimp_contradEq3" (formula "10") (term "0,0") (ifseqformula "4"))
                     (rule "times_zero_1" (formula "10") (term "1,0,0,0,0"))
                     (rule "add_zero_right" (formula "10") (term "0,0,0,0"))
                     (rule "qeq_literals" (formula "10") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "10"))
                     (rule "andLeft" (formula "10"))
                     (rule "andLeft" (formula "10"))
                     (rule "inEqSimp_contradEq3" (formula "1") (term "0,0") (ifseqformula "4"))
                     (rule "times_zero_1" (formula "1") (term "1,0,0,0,0"))
                     (rule "add_zero_right" (formula "1") (term "0,0,0,0"))
                     (rule "qeq_literals" (formula "1") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "true_left" (formula "1"))
                     (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                     (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                     (rule "mul_literals" (formula "1") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0"))
                     (rule "add_literals" (formula "1") (term "0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                     (rule "polySimp_elimOne" (formula "1") (term "0"))
                     (rule "inEqSimp_subsumption0" (formula "4") (ifseqformula "1"))
                     (rule "leq_literals" (formula "4") (term "0"))
                      (builtin "One Step Simplification" (formula "4"))
                     (rule "true_left" (formula "4"))
                     (rule "nnf_imp2or" (formula "11") (term "0"))
                     (rule "nnf_notAnd" (formula "11") (term "0,0"))
                     (rule "nnf_notAnd" (formula "11") (term "0,0,0"))
                     (rule "inEqSimp_notGeq" (formula "11") (term "0,0,0,0"))
                     (rule "mul_literals" (formula "11") (term "1,0,0,0,0,0,0"))
                     (rule "add_literals" (formula "11") (term "0,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "11") (term "0,0,0,0,0"))
                     (rule "jdiv_axiom" (formula "12") (term "0,0"))
                     (rule "eqSymm" (formula "1"))
                     (rule "inEqSimp_contradInEq0" (formula "1") (term "0,0") (ifseqformula "2"))
                     (rule "qeq_literals" (formula "1") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "eqSymm" (formula "1"))
                     (rule "applyEq" (formula "13") (term "0,0") (ifseqformula "1"))
                     (rule "polySimp_mulComm1" (formula "13") (term "0"))
                     (rule "polySimp_homoEq" (formula "13"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "1,0"))
                     (rule "polySimp_elimOne" (formula "13") (term "1,0"))
                     (rule "polySimp_sepPosMonomial" (formula "13"))
                     (rule "polyDiv_pullOut" (formula "13") (term "0,0") (inst "polyDivCoeff=jdiv(mul(a, Z(neglit(1(#)))), result_gcdHelp)"))
                     (rule "polySimp_mulComm1" (formula "13") (term "1,0,0,2,0,0"))
                     (rule "polySimp_addComm0" (formula "13") (term "2,0,0"))
                     (rule "applyEq" (formula "13") (term "0,1,0,1,2,0,0") (ifseqformula "10"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1,2,0,0"))
                     (rule "polySimp_pullOutFactor0" (formula "13") (term "0,1,2,0,0"))
                     (rule "add_literals" (formula "13") (term "1,0,1,2,0,0"))
                     (rule "times_zero_1" (formula "13") (term "0,1,2,0,0"))
                     (rule "polySimp_addComm0" (formula "13") (term "2,0,0"))
                     (rule "polyDiv_zero" (formula "13") (term "0,2,0,0"))
                     (rule "div_literals" (formula "13") (term "1,0,2,0,0"))
                     (rule "polySimp_addComm0" (formula "13") (term "2,0,0"))
                     (rule "polyDiv_pullOut" (formula "1") (term "0,1") (inst "polyDivCoeff=jdiv(mul(a, Z(neglit(1(#)))), result_gcdHelp)"))
                     (rule "eqSymm" (formula "1"))
                     (rule "polySimp_homoEq" (formula "1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,0"))
                     (rule "polySimp_elimOne" (formula "1") (term "1,0"))
                     (rule "polySimp_mulComm1" (formula "1") (term "1,0,0,2,1,0"))
                     (rule "polySimp_addComm0" (formula "1") (term "2,1,0"))
                     (rule "applyEq" (formula "1") (term "0,1,0,1,2,1,0") (ifseqformula "10"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,2,1,0"))
                     (rule "polySimp_pullOutFactor0" (formula "1") (term "0,1,2,1,0"))
                     (rule "add_literals" (formula "1") (term "1,0,1,2,1,0"))
                     (rule "times_zero_1" (formula "1") (term "0,1,2,1,0"))
                     (rule "polySimp_addComm0" (formula "1") (term "2,1,0"))
                     (rule "polySimp_sepPosMonomial" (formula "1"))
                     (rule "polyDiv_zero" (formula "1") (term "0,2,0"))
                     (rule "div_literals" (formula "1") (term "1,0,2,0"))
                     (rule "polySimp_addComm0" (formula "1") (term "2,0"))
                     (rule "applyEq" (formula "13") (term "0,0") (ifseqformula "1"))
                     (rule "polySimp_mulComm1" (formula "13") (term "0"))
                     (rule "polySimp_homoEq" (formula "13"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "1,0"))
                     (rule "polySimp_elimOne" (formula "13") (term "1,0"))
                     (rule "polySimp_sepPosMonomial" (formula "13"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "1"))
                     (rule "polySimp_elimOne" (formula "13") (term "1"))
                     (rule "jdiv_axiom" (formula "10") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "0,0,2,1"))
                     (rule "eqSymm" (formula "10"))
                     (rule "polySimp_elimOne" (formula "10") (term "0,0,2,0"))
                     (rule "inEqSimp_invertInEq1" (formula "10") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "0,0,0"))
                     (rule "times_zero_2" (formula "10") (term "1,0,0"))
                     (rule "polySimp_elimOne" (formula "10") (term "0,0,0"))
                     (rule "inEqSimp_subsumption0" (formula "10") (term "0,0") (ifseqformula "2"))
                     (rule "leq_literals" (formula "10") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "10"))
                     (rule "eqSymm" (formula "10"))
                     (rule "applyEq" (formula "11") (term "0,0") (ifseqformula "10"))
                     (rule "applyEq" (formula "1") (term "0,2,0") (ifseqformula "10"))
                     (rule "jdiv_axiom" (formula "12") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "12") (term "0,0,2,1"))
                     (rule "eqSymm" (formula "12"))
                     (rule "polySimp_elimOne" (formula "12") (term "0,0,2,0"))
                     (rule "inEqSimp_invertInEq1" (formula "12") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "12") (term "0,0,0"))
                     (rule "times_zero_2" (formula "12") (term "1,0,0"))
                     (rule "polySimp_elimOne" (formula "12") (term "0,0,0"))
                     (rule "inEqSimp_subsumption0" (formula "12") (term "0,0") (ifseqformula "4"))
                     (rule "leq_literals" (formula "12") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "12"))
                     (rule "eqSymm" (formula "12"))
                     (rule "applyEq" (formula "13") (term "0,0") (ifseqformula "12"))
                     (rule "div_axiom" (formula "1") (term "1,0") (inst "quotient=quotient_0"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "true_left" (formula "1"))
                     (rule "ifthenelse_split" (formula "1") (term "1,2,0"))
                     (branch "result_gcdHelp = 0 TRUE"
                        (rule "replace_known_left" (formula "2") (term "0,0") (ifseqformula "1"))
                         (builtin "One Step Simplification" (formula "2"))
                        (rule "eqSymm" (formula "2"))
                        (rule "polySimp_homoEq" (formula "2"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                        (rule "polySimp_elimOne" (formula "2") (term "1,0"))
                        (rule "applyEq" (formula "12") (term "1,0") (ifseqformula "1"))
                        (rule "times_zero_1" (formula "12") (term "0"))
                        (rule "eqSymm" (formula "12"))
                        (rule "applyEq" (formula "15") (term "0,0,0,1,0") (ifseqformula "1"))
                        (rule "jdiv_axiom_inline" (formula "15") (term "0,0,1,0"))
                        (rule "qeq_literals" (formula "15") (term "0,0,0,1,0"))
                         (builtin "One Step Simplification" (formula "15"))
                        (rule "applyEq" (formula "2") (term "1,1,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "16") (term "1,0") (ifseqformula "1"))
                        (rule "times_zero_1" (formula "16") (term "0"))
                        (rule "eqSymm" (formula "16"))
                        (rule "applyEq" (formula "14") (term "1,0") (ifseqformula "1"))
                        (rule "times_zero_1" (formula "14") (term "0"))
                        (rule "eqSymm" (formula "14"))
                        (rule "applyEq" (formula "13") (term "1,0") (ifseqformula "1"))
                        (rule "eqSymm" (formula "13"))
                        (rule "applyEq" (formula "11") (term "1,0") (ifseqformula "1"))
                        (rule "eqSymm" (formula "11"))
                        (rule "applyEq" (formula "11") (term "1,0") (ifseqformula "1"))
                        (rule "eqSymm" (formula "11"))
                        (rule "applyEq" (formula "13") (term "1,0") (ifseqformula "1"))
                        (rule "eqSymm" (formula "13"))
                        (rule "applyEq" (formula "15") (term "1,1,0") (ifseqformula "1"))
                        (rule "polySimp_invertEq" (formula "12"))
                        (rule "times_zero_2" (formula "12") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                        (rule "polySimp_elimOne" (formula "12") (term "0"))
                        (rule "close" (formula "16") (ifseqformula "12"))
                     )
                     (branch "result_gcdHelp = 0 FALSE"
                        (rule "add_zero_right" (formula "1") (term "2,0"))
                        (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "15"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "eqSymm" (formula "1"))
                        (rule "polySimp_homoEq" (formula "1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,0"))
                        (rule "polySimp_elimOne" (formula "1") (term "1,0"))
                        (rule "polySimp_sepPosMonomial" (formula "1"))
                        (rule "applyEq" (formula "16") (term "0,0") (ifseqformula "1"))
                        (rule "polySimp_mulComm1" (formula "16") (term "0"))
                        (rule "polySimp_homoEq" (formula "16"))
                        (rule "polySimp_mulLiterals" (formula "16") (term "1,0"))
                        (rule "polySimp_elimOne" (formula "16") (term "1,0"))
                        (rule "applyEq" (formula "16") (term "1,0") (ifseqformula "11"))
                        (rule "polySimp_pullOutFactor1" (formula "16") (term "0"))
                        (rule "add_literals" (formula "16") (term "1,0"))
                        (rule "times_zero_1" (formula "16") (term "0"))
                         (builtin "One Step Simplification" (formula "16"))
                        (rule "closeTrue" (formula "16"))
                     )
                  )
                  (branch "Case 2"
                      (builtin "One Step Simplification" (formula "1"))
                      (builtin "One Step Simplification" (formula "11"))
                     (rule "inEqSimp_ltToLeq" (formula "3"))
                     (rule "times_zero_1" (formula "3") (term "1,0,0"))
                     (rule "add_zero_right" (formula "3") (term "0,0"))
                     (rule "inEqSimp_gtToGeq" (formula "10") (term "0,0,0,0,1,1"))
                     (rule "times_zero_1" (formula "10") (term "1,0,0,0,0,0,0,1,1"))
                     (rule "add_zero_right" (formula "10") (term "0,0,0,0,0,0,1,1"))
                     (rule "inEqSimp_ltToLeq" (formula "4"))
                     (rule "times_zero_1" (formula "4") (term "1,0,0"))
                     (rule "add_zero_right" (formula "4") (term "0,0"))
                     (rule "inEqSimp_gtToGeq" (formula "2"))
                     (rule "polySimp_mulAssoc" (formula "2") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "2") (term "0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                     (rule "polySimp_elimOne" (formula "2") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "2") (term "0"))
                     (rule "jmod_axiom" (formula "10") (term "0,0,0,1"))
                     (rule "polySimp_mulComm1" (formula "10") (term "1,0,0,0,1"))
                     (rule "jmod_axiom" (formula "10") (term "0,1,0,0,0,1,1"))
                     (rule "polySimp_mulComm1" (formula "10") (term "1,0,1,0,0,0,1,1"))
                     (rule "jmod_axiom" (formula "10") (term "0,1,0,1,1"))
                     (rule "polySimp_mulComm1" (formula "10") (term "1,0,1,0,1,1"))
                     (rule "jmod_axiom" (formula "10") (term "0,1,0,1"))
                     (rule "polySimp_mulComm1" (formula "10") (term "1,0,1,0,1"))
                     (rule "jmod_axiom" (formula "10") (term "0,1,0,0,1,1"))
                     (rule "polySimp_mulComm1" (formula "10") (term "1,0,1,0,0,1,1"))
                     (rule "jmod_axiom" (formula "11") (term "0"))
                     (rule "polySimp_mulComm1" (formula "11") (term "1,0"))
                     (rule "polySimp_sepNegMonomial" (formula "10") (term "0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "0,0,0,1"))
                     (rule "polySimp_elimOne" (formula "10") (term "0,0,0,1"))
                     (rule "polySimp_sepNegMonomial" (formula "10") (term "1,0,0,0,1,1"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "0,1,0,0,0,1,1"))
                     (rule "polySimp_elimOne" (formula "10") (term "0,1,0,0,0,1,1"))
                     (rule "polySimp_sepNegMonomial" (formula "10") (term "1,0,1,1"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "0,1,0,1,1"))
                     (rule "polySimp_elimOne" (formula "10") (term "0,1,0,1,1"))
                     (rule "polySimp_sepNegMonomial" (formula "10") (term "1,0,1"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "0,1,0,1"))
                     (rule "polySimp_elimOne" (formula "10") (term "0,1,0,1"))
                     (rule "polySimp_sepNegMonomial" (formula "10") (term "1,0,0,1,1"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "0,1,0,0,1,1"))
                     (rule "polySimp_elimOne" (formula "10") (term "0,1,0,0,1,1"))
                     (rule "polySimp_sepNegMonomial" (formula "11"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                     (rule "polySimp_elimOne" (formula "11") (term "0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                     (rule "mul_literals" (formula "3") (term "1"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "0,0,0,0,1,1"))
                     (rule "mul_literals" (formula "10") (term "1,0,0,0,0,1,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                     (rule "mul_literals" (formula "4") (term "1"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                     (rule "polySimp_mulComm0" (formula "2") (term "1"))
                     (rule "polySimp_rightDist" (formula "2") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                     (rule "mul_literals" (formula "2") (term "0,1"))
                     (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                     (rule "inEqSimp_contradEq3" (formula "10") (term "0,0") (ifseqformula "4"))
                     (rule "times_zero_1" (formula "10") (term "1,0,0,0,0"))
                     (rule "add_zero_right" (formula "10") (term "0,0,0,0"))
                     (rule "qeq_literals" (formula "10") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "10"))
                     (rule "andLeft" (formula "10"))
                     (rule "andLeft" (formula "10"))
                     (rule "inEqSimp_contradEq3" (formula "1") (term "0,1") (ifseqformula "3"))
                     (rule "times_zero_1" (formula "1") (term "1,0,0,0,1"))
                     (rule "add_zero_right" (formula "1") (term "0,0,0,1"))
                     (rule "qeq_literals" (formula "1") (term "0,0,1"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "true_left" (formula "1"))
                     (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                     (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                     (rule "mul_literals" (formula "1") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0"))
                     (rule "add_literals" (formula "1") (term "0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                     (rule "polySimp_elimOne" (formula "1") (term "0"))
                     (rule "inEqSimp_subsumption0" (formula "4") (ifseqformula "1"))
                     (rule "leq_literals" (formula "4") (term "0"))
                      (builtin "One Step Simplification" (formula "4"))
                     (rule "true_left" (formula "4"))
                     (rule "nnf_imp2or" (formula "11") (term "0"))
                     (rule "nnf_notAnd" (formula "11") (term "0,0"))
                     (rule "nnf_notAnd" (formula "11") (term "0,0,0"))
                     (rule "inEqSimp_notGeq" (formula "11") (term "0,0,0,0"))
                     (rule "mul_literals" (formula "11") (term "1,0,0,0,0,0,0"))
                     (rule "add_literals" (formula "11") (term "0,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "11") (term "0,0,0,0,0"))
                     (rule "jdiv_axiom" (formula "12") (term "0,0"))
                     (rule "eqSymm" (formula "1"))
                     (rule "inEqSimp_contradInEq0" (formula "1") (term "0,0") (ifseqformula "4"))
                     (rule "qeq_literals" (formula "1") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "eqSymm" (formula "1"))
                     (rule "applyEq" (formula "13") (term "0,0") (ifseqformula "1"))
                     (rule "polySimp_mulComm1" (formula "13") (term "0"))
                     (rule "polySimp_homoEq" (formula "13"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "1,0"))
                     (rule "polySimp_elimOne" (formula "13") (term "1,0"))
                     (rule "polySimp_sepPosMonomial" (formula "13"))
                     (rule "polyDiv_pullOut" (formula "13") (term "0,0") (inst "polyDivCoeff=jdiv(mul(b, Z(neglit(1(#)))), result_gcdHelp)"))
                     (rule "polySimp_mulComm1" (formula "13") (term "1,0,0,2,0,0"))
                     (rule "polySimp_addComm0" (formula "13") (term "2,0,0"))
                     (rule "applyEq" (formula "13") (term "0,1,0,1,2,0,0") (ifseqformula "11"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1,2,0,0"))
                     (rule "polySimp_pullOutFactor0" (formula "13") (term "0,1,2,0,0"))
                     (rule "add_literals" (formula "13") (term "1,0,1,2,0,0"))
                     (rule "times_zero_1" (formula "13") (term "0,1,2,0,0"))
                     (rule "polySimp_addComm0" (formula "13") (term "2,0,0"))
                     (rule "polyDiv_zero" (formula "13") (term "0,2,0,0"))
                     (rule "div_literals" (formula "13") (term "1,0,2,0,0"))
                     (rule "polySimp_addComm0" (formula "13") (term "2,0,0"))
                     (rule "polyDiv_pullOut" (formula "1") (term "0,1") (inst "polyDivCoeff=jdiv(mul(b, Z(neglit(1(#)))), result_gcdHelp)"))
                     (rule "eqSymm" (formula "1"))
                     (rule "polySimp_homoEq" (formula "1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,0"))
                     (rule "polySimp_elimOne" (formula "1") (term "1,0"))
                     (rule "polySimp_mulComm1" (formula "1") (term "1,0,0,2,1,0"))
                     (rule "polySimp_addComm0" (formula "1") (term "2,1,0"))
                     (rule "applyEq" (formula "1") (term "0,1,0,1,2,1,0") (ifseqformula "11"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,2,1,0"))
                     (rule "polySimp_pullOutFactor0" (formula "1") (term "0,1,2,1,0"))
                     (rule "add_literals" (formula "1") (term "1,0,1,2,1,0"))
                     (rule "times_zero_1" (formula "1") (term "0,1,2,1,0"))
                     (rule "polySimp_addComm0" (formula "1") (term "2,1,0"))
                     (rule "polySimp_sepPosMonomial" (formula "1"))
                     (rule "polyDiv_zero" (formula "1") (term "0,2,0"))
                     (rule "div_literals" (formula "1") (term "1,0,2,0"))
                     (rule "polySimp_addComm0" (formula "1") (term "2,0"))
                     (rule "applyEq" (formula "13") (term "0,0") (ifseqformula "1"))
                     (rule "polySimp_mulComm1" (formula "13") (term "0"))
                     (rule "polySimp_homoEq" (formula "13"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "1,0"))
                     (rule "polySimp_elimOne" (formula "13") (term "1,0"))
                     (rule "polySimp_sepPosMonomial" (formula "13"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "1"))
                     (rule "polySimp_elimOne" (formula "13") (term "1"))
                     (rule "jdiv_axiom" (formula "10") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "0,0,2,1"))
                     (rule "eqSymm" (formula "10"))
                     (rule "polySimp_elimOne" (formula "10") (term "0,0,2,0"))
                     (rule "inEqSimp_invertInEq1" (formula "10") (term "0,0"))
                     (rule "times_zero_2" (formula "10") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "0,0,0"))
                     (rule "polySimp_elimOne" (formula "10") (term "0,0,0"))
                     (rule "inEqSimp_subsumption0" (formula "10") (term "0,0") (ifseqformula "2"))
                     (rule "leq_literals" (formula "10") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "10"))
                     (rule "eqSymm" (formula "10"))
                     (rule "applyEq" (formula "11") (term "0,0") (ifseqformula "10"))
                     (rule "jdiv_axiom" (formula "12") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "12") (term "0,0,2,1"))
                     (rule "eqSymm" (formula "12"))
                     (rule "polySimp_elimOne" (formula "12") (term "0,0,2,0"))
                     (rule "inEqSimp_invertInEq1" (formula "12") (term "0,0"))
                     (rule "times_zero_2" (formula "12") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "12") (term "0,0,0"))
                     (rule "polySimp_elimOne" (formula "12") (term "0,0,0"))
                     (rule "inEqSimp_subsumption0" (formula "12") (term "0,0") (ifseqformula "4"))
                     (rule "leq_literals" (formula "12") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "12"))
                     (rule "eqSymm" (formula "12"))
                     (rule "applyEq" (formula "13") (term "0,0") (ifseqformula "12"))
                     (rule "applyEq" (formula "1") (term "0,2,0") (ifseqformula "12"))
                     (rule "div_axiom" (formula "1") (term "1,0") (inst "quotient=quotient_0"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "true_left" (formula "1"))
                     (rule "ifthenelse_split" (formula "1") (term "1,2,0"))
                     (branch "result_gcdHelp = 0 TRUE"
                        (rule "replace_known_left" (formula "2") (term "0,0") (ifseqformula "1"))
                         (builtin "One Step Simplification" (formula "2"))
                        (rule "eqSymm" (formula "2"))
                        (rule "polySimp_homoEq" (formula "2"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                        (rule "polySimp_elimOne" (formula "2") (term "1,0"))
                        (rule "applyEq" (formula "2") (term "1,1,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "14") (term "1,0") (ifseqformula "1"))
                        (rule "times_zero_1" (formula "14") (term "0"))
                        (rule "eqSymm" (formula "14"))
                        (rule "applyEq" (formula "16") (term "1,0,0") (ifseqformula "1"))
                        (rule "polySimp_mulComm0" (formula "16") (term "0"))
                        (rule "applyEq" (formula "12") (term "1,0,0") (ifseqformula "1"))
                        (rule "polySimp_mulComm0" (formula "12") (term "0"))
                        (rule "applyEq" (formula "11") (term "1,0") (ifseqformula "1"))
                        (rule "eqSymm" (formula "11"))
                        (rule "applyEq" (formula "15") (term "0,0,0,1,0") (ifseqformula "1"))
                        (rule "jdiv_axiom_inline" (formula "15") (term "0,0,1,0"))
                        (rule "times_zero_2" (formula "15") (term "0,0,2,0,0,1,0"))
                        (rule "qeq_literals" (formula "15") (term "0,0,0,1,0"))
                         (builtin "One Step Simplification" (formula "15"))
                        (rule "applyEq" (formula "13") (term "1,0") (ifseqformula "1"))
                        (rule "eqSymm" (formula "13"))
                        (rule "applyEq" (formula "13") (term "1,0") (ifseqformula "1"))
                        (rule "eqSymm" (formula "13"))
                        (rule "applyEq" (formula "12") (term "0,0") (ifseqformula "1"))
                        (rule "times_zero_2" (formula "12") (term "0"))
                        (rule "eqSymm" (formula "12"))
                        (rule "applyEq" (formula "11") (term "1,0") (ifseqformula "1"))
                        (rule "eqSymm" (formula "11"))
                        (rule "applyEq" (formula "16") (term "0,0") (ifseqformula "1"))
                        (rule "times_zero_2" (formula "16") (term "0"))
                        (rule "eqSymm" (formula "16"))
                        (rule "applyEq" (formula "15") (term "1,1,0") (ifseqformula "1"))
                        (rule "polySimp_sepPosMonomial" (formula "2"))
                        (rule "polySimp_invertEq" (formula "14"))
                        (rule "times_zero_2" (formula "14") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                        (rule "polySimp_elimOne" (formula "14") (term "0"))
                        (rule "close" (formula "16") (ifseqformula "14"))
                     )
                     (branch "result_gcdHelp = 0 FALSE"
                        (rule "add_zero_right" (formula "1") (term "2,0"))
                        (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "15"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "eqSymm" (formula "1"))
                        (rule "polySimp_homoEq" (formula "1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,0"))
                        (rule "polySimp_elimOne" (formula "1") (term "1,0"))
                        (rule "polySimp_sepPosMonomial" (formula "1"))
                        (rule "applyEq" (formula "16") (term "0,0") (ifseqformula "1"))
                        (rule "polySimp_mulComm1" (formula "16") (term "0"))
                        (rule "polySimp_homoEq" (formula "16"))
                        (rule "polySimp_mulLiterals" (formula "16") (term "1,0"))
                        (rule "polySimp_elimOne" (formula "16") (term "1,0"))
                        (rule "applyEq" (formula "16") (term "1,0") (ifseqformula "13"))
                        (rule "polySimp_pullOutFactor1" (formula "16") (term "0"))
                        (rule "add_literals" (formula "16") (term "1,0"))
                        (rule "times_zero_1" (formula "16") (term "0"))
                         (builtin "One Step Simplification" (formula "16"))
                        (rule "closeTrue" (formula "16"))
                     )
                  )
               )
               (branch "Case 2"
                   (builtin "One Step Simplification" (formula "1"))
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "allRight" (formula "11") (inst "sk=x_0"))
                  (rule "impRight" (formula "11"))
                  (rule "andLeft" (formula "1"))
                  (rule "andLeft" (formula "1"))
                  (rule "inEqSimp_ltToLeq" (formula "7"))
                  (rule "times_zero_1" (formula "7") (term "1,0,0"))
                  (rule "add_zero_right" (formula "7") (term "0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "6"))
                  (rule "times_zero_1" (formula "6") (term "1,0,0"))
                  (rule "add_zero_right" (formula "6") (term "0,0"))
                  (rule "inEqSimp_gtToGeq" (formula "5"))
                  (rule "polySimp_mulAssoc" (formula "5") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "5") (term "0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0"))
                  (rule "polySimp_elimOne" (formula "5") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "5") (term "0"))
                  (rule "inEqSimp_gtToGeq" (formula "13") (term "0,0,0,0,1,1"))
                  (rule "times_zero_1" (formula "13") (term "1,0,0,0,0,0,0,1,1"))
                  (rule "add_zero_right" (formula "13") (term "0,0,0,0,0,0,1,1"))
                  (rule "inEqSimp_gtToGeq" (formula "1"))
                  (rule "times_zero_1" (formula "1") (term "1,0,0"))
                  (rule "add_zero_right" (formula "1") (term "0,0"))
                  (rule "jmod_axiom" (formula "13") (term "0,1,0,0,0,1,1"))
                  (rule "polySimp_mulComm1" (formula "13") (term "1,0,1,0,0,0,1,1"))
                  (rule "jmod_axiom" (formula "13") (term "0,0,0,1"))
                  (rule "polySimp_mulComm1" (formula "13") (term "1,0,0,0,1"))
                  (rule "jmod_axiom" (formula "13") (term "0,1,0,1,1"))
                  (rule "polySimp_mulComm1" (formula "13") (term "1,0,1,0,1,1"))
                  (rule "jmod_axiom" (formula "13") (term "0,1,0,1"))
                  (rule "polySimp_mulComm1" (formula "13") (term "1,0,1,0,1"))
                  (rule "jmod_axiom" (formula "13") (term "0,1,0,0,1,1"))
                  (rule "polySimp_mulComm1" (formula "13") (term "1,0,1,0,0,1,1"))
                  (rule "jmod_axiom" (formula "14") (term "0"))
                  (rule "polySimp_mulComm1" (formula "14") (term "1,0"))
                  (rule "jmod_axiom" (formula "3") (term "0"))
                  (rule "polySimp_mulComm1" (formula "3") (term "1,0"))
                  (rule "jmod_axiom" (formula "2") (term "0"))
                  (rule "polySimp_mulComm1" (formula "2") (term "1,0"))
                  (rule "polySimp_sepNegMonomial" (formula "13") (term "1,0,0,0,1,1"))
                  (rule "polySimp_mulLiterals" (formula "13") (term "0,1,0,0,0,1,1"))
                  (rule "polySimp_elimOne" (formula "13") (term "0,1,0,0,0,1,1"))
                  (rule "polySimp_sepNegMonomial" (formula "13") (term "0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "13") (term "0,0,0,1"))
                  (rule "polySimp_elimOne" (formula "13") (term "0,0,0,1"))
                  (rule "polySimp_sepNegMonomial" (formula "13") (term "1,0,1,1"))
                  (rule "polySimp_mulLiterals" (formula "13") (term "0,1,0,1,1"))
                  (rule "polySimp_elimOne" (formula "13") (term "0,1,0,1,1"))
                  (rule "polySimp_sepNegMonomial" (formula "13") (term "1,0,1"))
                  (rule "polySimp_mulLiterals" (formula "13") (term "0,1,0,1"))
                  (rule "polySimp_elimOne" (formula "13") (term "0,1,0,1"))
                  (rule "polySimp_sepNegMonomial" (formula "13") (term "1,0,0,1,1"))
                  (rule "polySimp_mulLiterals" (formula "13") (term "0,1,0,0,1,1"))
                  (rule "polySimp_elimOne" (formula "13") (term "0,1,0,0,1,1"))
                  (rule "polySimp_sepNegMonomial" (formula "14"))
                  (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                  (rule "polySimp_elimOne" (formula "14") (term "0"))
                  (rule "polySimp_sepNegMonomial" (formula "3"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                  (rule "polySimp_elimOne" (formula "3") (term "0"))
                  (rule "polySimp_sepNegMonomial" (formula "2"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                  (rule "polySimp_elimOne" (formula "2") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "7"))
                  (rule "mul_literals" (formula "7") (term "1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                  (rule "mul_literals" (formula "6") (term "1"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                  (rule "polySimp_mulComm0" (formula "5") (term "1"))
                  (rule "polySimp_rightDist" (formula "5") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                  (rule "mul_literals" (formula "5") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "0,0,0,0,1,1"))
                  (rule "mul_literals" (formula "13") (term "1,0,0,0,0,1,1"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                  (rule "mul_literals" (formula "1") (term "1"))
                  (rule "inEqSimp_contradEq3" (formula "13") (term "0,0") (ifseqformula "7"))
                  (rule "times_zero_1" (formula "13") (term "1,0,0,0,0"))
                  (rule "add_zero_right" (formula "13") (term "0,0,0,0"))
                  (rule "qeq_literals" (formula "13") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "13"))
                  (rule "andLeft" (formula "13"))
                  (rule "andLeft" (formula "13"))
                  (rule "inEqSimp_contradEq3" (formula "4") (term "0,0") (ifseqformula "7"))
                  (rule "times_zero_1" (formula "4") (term "1,0,0,0,0"))
                  (rule "add_zero_right" (formula "4") (term "0,0,0,0"))
                  (rule "qeq_literals" (formula "4") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "4"))
                  (rule "true_left" (formula "4"))
                  (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "5"))
                  (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                  (rule "mul_literals" (formula "4") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "4") (term "0"))
                  (rule "add_literals" (formula "4") (term "0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                  (rule "polySimp_elimOne" (formula "4") (term "0"))
                  (rule "inEqSimp_subsumption0" (formula "7") (ifseqformula "4"))
                  (rule "leq_literals" (formula "7") (term "0"))
                   (builtin "One Step Simplification" (formula "7"))
                  (rule "true_left" (formula "7"))
                  (rule "nnf_imp2or" (formula "14") (term "0"))
                  (rule "nnf_notAnd" (formula "14") (term "0,0"))
                  (rule "nnf_notAnd" (formula "14") (term "0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "14") (term "0,0,0,0"))
                  (rule "mul_literals" (formula "14") (term "1,0,0,0,0,0,0"))
                  (rule "add_literals" (formula "14") (term "0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "14") (term "0,0,0,0,0"))
                  (rule "jdiv_axiom" (formula "15") (term "0,0"))
                  (rule "eqSymm" (formula "1"))
                  (rule "jdiv_axiom" (formula "4") (term "0,0"))
                  (rule "eqSymm" (formula "4"))
                  (rule "inEqSimp_contradInEq0" (formula "4") (term "0,0") (ifseqformula "8"))
                  (rule "qeq_literals" (formula "4") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "4"))
                  (rule "eqSymm" (formula "4"))
                  (rule "applyEq" (formula "5") (term "0,0") (ifseqformula "4"))
                  (rule "polySimp_mulComm1" (formula "5") (term "0"))
                  (rule "polySimp_homoEq" (formula "5"))
                  (rule "polySimp_mulLiterals" (formula "5") (term "1,0"))
                  (rule "polySimp_elimOne" (formula "5") (term "1,0"))
                  (rule "polySimp_sepPosMonomial" (formula "5"))
                  (rule "jdiv_axiom" (formula "3") (term "0,0"))
                  (rule "eqSymm" (formula "3"))
                  (rule "inEqSimp_contradInEq0" (formula "3") (term "0,0") (ifseqformula "7"))
                  (rule "qeq_literals" (formula "3") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "3"))
                  (rule "eqSymm" (formula "3"))
                  (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "3"))
                  (rule "polySimp_mulComm1" (formula "4") (term "0"))
                  (rule "polySimp_homoEq" (formula "4"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
                  (rule "polySimp_elimOne" (formula "4") (term "1,0"))
                  (rule "polySimp_sepPosMonomial" (formula "4"))
                  (rule "jdiv_axiom" (formula "16") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "16") (term "0,0,2,1"))
                  (rule "eqSymm" (formula "16"))
                  (rule "polySimp_elimOne" (formula "16") (term "0,0,2,0"))
                  (rule "inEqSimp_invertInEq1" (formula "16") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "16") (term "0,0,0"))
                  (rule "times_zero_2" (formula "16") (term "1,0,0"))
                  (rule "polySimp_elimOne" (formula "16") (term "0,0,0"))
                  (rule "inEqSimp_subsumption0" (formula "16") (term "0,0") (ifseqformula "9"))
                  (rule "leq_literals" (formula "16") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "16"))
                  (rule "eqSymm" (formula "16"))
                  (rule "applyEq" (formula "17") (term "0,0") (ifseqformula "16"))
                  (rule "jdiv_axiom" (formula "15") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "15") (term "0,0,2,1"))
                  (rule "eqSymm" (formula "15"))
                  (rule "polySimp_elimOne" (formula "15") (term "0,0,2,0"))
                  (rule "inEqSimp_invertInEq1" (formula "15") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "15") (term "0,0,0"))
                  (rule "times_zero_2" (formula "15") (term "1,0,0"))
                  (rule "polySimp_elimOne" (formula "15") (term "0,0,0"))
                  (rule "inEqSimp_subsumption0" (formula "15") (term "0,0") (ifseqformula "7"))
                  (rule "leq_literals" (formula "15") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "15"))
                  (rule "eqSymm" (formula "15"))
                  (rule "applyEq" (formula "16") (term "0,0") (ifseqformula "15"))
                  (rule "div_axiom" (formula "1") (term "0,2,0") (inst "quotient=quotient_0"))
                  (rule "polySimp_mulComm0" (formula "1") (term "0,1,1,1"))
                  (rule "polySimp_mulComm0" (formula "1") (term "0,2,1,1"))
                  (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,1"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,1,1,1,1"))
                  (rule "inEqSimp_contradEq7" (formula "1") (term "0") (ifseqformula "3"))
                  (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                  (rule "add_zero_right" (formula "1") (term "0,0,0"))
                  (rule "leq_literals" (formula "1") (term "0,0"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "andLeft" (formula "1"))
                  (rule "andLeft" (formula "1"))
                  (rule "applyEq" (formula "4") (term "0,2,0") (ifseqformula "1"))
                  (rule "inEqSimp_subsumption1" (formula "3") (term "0") (ifseqformula "5"))
                  (rule "leq_literals" (formula "3") (term "0,0"))
                   (builtin "One Step Simplification" (formula "3"))
                  (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "2"))
                  (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                  (rule "polySimp_elimOne" (formula "3") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "3") (term "0"))
                  (rule "polySimp_rightDist" (formula "3") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "3") (term "0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "3") (term "1,0,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0"))
                  (rule "add_literals" (formula "3") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "3") (term "1,0,0"))
                  (rule "add_zero_right" (formula "3") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                  (rule "mul_literals" (formula "3") (term "1"))
                  (rule "div_axiom" (formula "4") (term "1,0") (inst "quotient=quotient_1"))
                  (rule "polySimp_mulComm0" (formula "4") (term "0,2,1,1"))
                  (rule "polySimp_mulComm0" (formula "4") (term "0,1,0,1"))
                  (rule "polySimp_mulComm0" (formula "4") (term "1,1,1,1,1"))
                  (rule "polySimp_mulComm0" (formula "4") (term "0,1,1,1"))
                  (rule "inEqSimp_contradEq7" (formula "4") (term "0") (ifseqformula "6"))
                  (rule "times_zero_1" (formula "4") (term "1,0,0,0"))
                  (rule "add_zero_right" (formula "4") (term "0,0,0"))
                  (rule "leq_literals" (formula "4") (term "0,0"))
                   (builtin "One Step Simplification" (formula "4"))
                  (rule "andLeft" (formula "4"))
                  (rule "andLeft" (formula "4"))
                  (rule "applyEq" (formula "7") (term "1,0") (ifseqformula "4"))
                  (rule "inEqSimp_subsumption1" (formula "6") (term "0") (ifseqformula "8"))
                  (rule "leq_literals" (formula "6") (term "0,0"))
                   (builtin "One Step Simplification" (formula "6"))
                  (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "5"))
                  (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0"))
                  (rule "polySimp_elimOne" (formula "6") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "6") (term "0"))
                  (rule "polySimp_rightDist" (formula "6") (term "0,0,0"))
                  (rule "mul_literals" (formula "6") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor2b" (formula "6") (term "0,0"))
                  (rule "add_literals" (formula "6") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "6") (term "1,0,0"))
                  (rule "add_zero_right" (formula "6") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                  (rule "mul_literals" (formula "6") (term "1"))
                  (rule "div_axiom" (formula "11") (term "0,1") (inst "quotient=quotient_2"))
                  (rule "polySimp_mulComm0" (formula "11") (term "0,1,0,1"))
                  (rule "polySimp_mulComm0" (formula "11") (term "0,2,1,1"))
                  (rule "polySimp_mulComm0" (formula "11") (term "1,1,1,1,1"))
                  (rule "polySimp_mulComm0" (formula "11") (term "0,1,1,1"))
                  (rule "inEqSimp_contradEq7" (formula "11") (term "0") (ifseqformula "8"))
                  (rule "times_zero_1" (formula "11") (term "1,0,0,0"))
                  (rule "add_zero_right" (formula "11") (term "0,0,0"))
                  (rule "leq_literals" (formula "11") (term "0,0"))
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "andLeft" (formula "11"))
                  (rule "andLeft" (formula "11"))
                  (rule "applyEq" (formula "15") (term "0,0") (ifseqformula "11"))
                  (rule "polySimp_mulComm0" (formula "15") (term "0"))
                  (rule "applyEq" (formula "13") (term "0,2") (ifseqformula "15"))
                  (rule "inEqSimp_homoInEq1" (formula "13") (term "2"))
                  (rule "polySimp_mulLiterals" (formula "13") (term "1,0,2"))
                  (rule "polySimp_elimOne" (formula "13") (term "1,0,2"))
                  (rule "polySimp_addComm1" (formula "13") (term "0,2"))
                  (rule "polySimp_pullOutFactor2b" (formula "13") (term "0,0,2"))
                  (rule "add_literals" (formula "13") (term "1,1,0,0,2"))
                  (rule "times_zero_1" (formula "13") (term "1,0,0,2"))
                  (rule "add_zero_right" (formula "13") (term "0,0,2"))
                  (rule "applyEq" (formula "13") (term "0,1") (ifseqformula "15"))
                  (rule "inEqSimp_homoInEq1" (formula "13") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1"))
                  (rule "polySimp_elimOne" (formula "13") (term "1,0,1"))
                  (rule "polySimp_addComm1" (formula "13") (term "0,1"))
                  (rule "polySimp_pullOutFactor2b" (formula "13") (term "0,0,1"))
                  (rule "add_literals" (formula "13") (term "1,1,0,0,1"))
                  (rule "times_zero_1" (formula "13") (term "1,0,0,1"))
                  (rule "add_zero_right" (formula "13") (term "0,0,1"))
                  (rule "applyEq" (formula "12") (term "0") (ifseqformula "15"))
                  (rule "inEqSimp_homoInEq0" (formula "12"))
                  (rule "polySimp_mulLiterals" (formula "12") (term "1,0"))
                  (rule "polySimp_pullOutFactor0" (formula "12") (term "0"))
                  (rule "add_literals" (formula "12") (term "1,0"))
                  (rule "times_zero_1" (formula "12") (term "0"))
                  (rule "qeq_literals" (formula "12"))
                  (rule "true_left" (formula "12"))
                  (rule "applyEq" (formula "13") (term "0,1") (ifseqformula "11"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "2"))
                  (rule "mul_literals" (formula "12") (term "1,2"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "12") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "12") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "12") (term "0,1"))
                  (rule "replace_known_left" (formula "12") (term "1") (ifseqformula "8"))
                  (rule "inEqSimp_contradInEq1" (formula "12") (term "2") (ifseqformula "8"))
                  (rule "qeq_literals" (formula "12") (term "0,2"))
                   (builtin "One Step Simplification" (formula "12"))
                  (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "8"))
                  (rule "leq_literals" (formula "12") (term "0"))
                   (builtin "One Step Simplification" (formula "12"))
                  (rule "true_left" (formula "12"))
                  (rule "div_axiom" (formula "9") (term "0,1") (inst "quotient=quotient_3"))
                  (rule "polySimp_mulComm0" (formula "9") (term "0,2,1,1"))
                  (rule "polySimp_mulComm0" (formula "9") (term "1,1,1,1,1"))
                  (rule "polySimp_mulComm0" (formula "9") (term "0,1,1,1"))
                  (rule "polySimp_mulComm0" (formula "9") (term "0,1,0,1"))
                  (rule "inEqSimp_contradEq7" (formula "9") (term "0") (ifseqformula "8"))
                  (rule "times_zero_1" (formula "9") (term "1,0,0,0"))
                  (rule "add_zero_right" (formula "9") (term "0,0,0"))
                  (rule "leq_literals" (formula "9") (term "0,0"))
                   (builtin "One Step Simplification" (formula "9"))
                  (rule "andLeft" (formula "9"))
                  (rule "andLeft" (formula "9"))
                  (rule "applyEq" (formula "13") (term "0,0") (ifseqformula "9"))
                  (rule "polySimp_mulComm0" (formula "13") (term "0"))
                  (rule "applyEq" (formula "11") (term "0,2") (ifseqformula "13"))
                  (rule "inEqSimp_homoInEq1" (formula "11") (term "2"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "1,0,2"))
                  (rule "polySimp_elimOne" (formula "11") (term "1,0,2"))
                  (rule "polySimp_addComm1" (formula "11") (term "0,2"))
                  (rule "polySimp_pullOutFactor2b" (formula "11") (term "0,0,2"))
                  (rule "add_literals" (formula "11") (term "1,1,0,0,2"))
                  (rule "times_zero_1" (formula "11") (term "1,0,0,2"))
                  (rule "add_zero_right" (formula "11") (term "0,0,2"))
                  (rule "applyEq" (formula "11") (term "0,1") (ifseqformula "13"))
                  (rule "inEqSimp_homoInEq1" (formula "11") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1"))
                  (rule "polySimp_elimOne" (formula "11") (term "1,0,1"))
                  (rule "polySimp_addComm1" (formula "11") (term "0,1"))
                  (rule "polySimp_pullOutFactor2b" (formula "11") (term "0,0,1"))
                  (rule "add_literals" (formula "11") (term "1,1,0,0,1"))
                  (rule "times_zero_1" (formula "11") (term "1,0,0,1"))
                  (rule "add_zero_right" (formula "11") (term "0,0,1"))
                  (rule "applyEq" (formula "10") (term "0") (ifseqformula "13"))
                  (rule "inEqSimp_homoInEq0" (formula "10"))
                  (rule "polySimp_mulLiterals" (formula "10") (term "1,0"))
                  (rule "polySimp_pullOutFactor0" (formula "10") (term "0"))
                  (rule "add_literals" (formula "10") (term "1,0"))
                  (rule "times_zero_1" (formula "10") (term "0"))
                  (rule "qeq_literals" (formula "10"))
                  (rule "true_left" (formula "10"))
                  (rule "applyEq" (formula "11") (term "0,1") (ifseqformula "9"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "2"))
                  (rule "mul_literals" (formula "10") (term "1,2"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "10") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "10") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "10") (term "0,1"))
                  (rule "replace_known_left" (formula "10") (term "1") (ifseqformula "8"))
                  (rule "inEqSimp_subsumption1" (formula "10") (term "0") (ifseqformula "8"))
                  (rule "leq_literals" (formula "10") (term "0,0"))
                   (builtin "One Step Simplification" (formula "10"))
                  (rule "true_left" (formula "10"))
                  (rule "div_axiom" (formula "25") (term "1") (inst "quotient=quotient_4"))
                  (rule "polySimp_mulComm0" (formula "25") (term "0,1,0,1"))
                  (rule "polySimp_mulComm0" (formula "25") (term "1,1,1,1,1"))
                  (rule "polySimp_mulComm0" (formula "25") (term "0,2,1,1"))
                  (rule "polySimp_mulComm0" (formula "25") (term "0,1,1,1"))
                  (rule "commute_and" (formula "25") (term "0,1"))
                  (rule "div_axiom" (formula "23") (term "1") (inst "quotient=quotient_5"))
                  (rule "polySimp_mulComm0" (formula "23") (term "0,1,0,1"))
                  (rule "polySimp_mulComm0" (formula "23") (term "1,1,1,1,1"))
                  (rule "polySimp_mulComm0" (formula "23") (term "0,2,1,1"))
                  (rule "polySimp_mulComm0" (formula "23") (term "0,1,1,1"))
                  (rule "commute_and" (formula "23") (term "0,1"))
                  (rule "ifthenelse_split" (formula "7") (term "0"))
                  (branch "result_gcdHelp >= 0 TRUE"
                     (rule "eqSymm" (formula "8"))
                     (rule "replace_known_left" (formula "24") (term "0,1,1") (ifseqformula "7"))
                      (builtin "One Step Simplification" (formula "24"))
                     (rule "replace_known_left" (formula "27") (term "0,1,1") (ifseqformula "7"))
                      (builtin "One Step Simplification" (formula "27"))
                     (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "8"))
                     (rule "polySimp_mulComm0" (formula "31") (term "0"))
                     (rule "inEqSimp_strengthen0" (formula "5") (ifseqformula "31"))
                     (rule "inEqSimp_contradEq3" (formula "31") (ifseqformula "5"))
                     (rule "polySimp_mulComm0" (formula "31") (term "1,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0"))
                     (rule "add_literals" (formula "31") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "31") (term "1,0,0"))
                     (rule "add_zero_right" (formula "31") (term "0,0"))
                     (rule "qeq_literals" (formula "31") (term "0"))
                      (builtin "One Step Simplification" (formula "31"))
                     (rule "false_right" (formula "31"))
                     (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "5"))
                     (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0"))
                     (rule "polySimp_elimOne" (formula "6") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "6") (term "0"))
                     (rule "polySimp_rightDist" (formula "6") (term "0,0,0"))
                     (rule "mul_literals" (formula "6") (term "0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
                     (rule "add_literals" (formula "6") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor2b" (formula "6") (term "0,0"))
                     (rule "add_literals" (formula "6") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "6") (term "1,0,0"))
                     (rule "add_zero_right" (formula "6") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                     (rule "mul_literals" (formula "6") (term "1"))
                     (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "6"))
                     (rule "leq_literals" (formula "10") (term "0"))
                      (builtin "One Step Simplification" (formula "10"))
                     (rule "true_left" (formula "10"))
                     (rule "cnf_rightDist" (formula "24"))
                     (rule "andLeft" (formula "24"))
                     (rule "commute_or" (formula "25"))
                     (rule "cnf_rightDist" (formula "28"))
                     (rule "andLeft" (formula "28"))
                     (rule "commute_or" (formula "29"))
                     (rule "cnf_rightDist" (formula "24"))
                     (rule "andLeft" (formula "24"))
                     (rule "commute_or" (formula "25"))
                     (rule "cnf_rightDist" (formula "29"))
                     (rule "andLeft" (formula "29"))
                     (rule "commute_or" (formula "30"))
                     (rule "polySimp_critPair" (formula "33") (ifseqformula "28"))
                     (rule "polySimp_mulComm0" (formula "33") (term "1,1,1,0"))
                     (rule "polySimp_mulAssoc" (formula "33") (term "0,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "33") (term "0,0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "33") (term "0,1,0,0"))
                     (rule "polySimp_elimOne" (formula "33") (term "0,1,0,0"))
                     (rule "polySimp_rightDist" (formula "33") (term "1,0"))
                     (rule "polySimp_mulComm1" (formula "33") (term "1,1,0"))
                     (rule "polySimp_mulComm1" (formula "33") (term "0,1,1,0"))
                     (rule "polySimp_mulAssoc" (formula "33") (term "0,1,0"))
                     (rule "polySimp_rightDist" (formula "33") (term "0,0"))
                     (rule "polySimp_mulComm1" (formula "33") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "33") (term "0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "33") (term "0"))
                     (rule "polySimp_addComm1" (formula "33") (term "0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "33") (term "0"))
                     (rule "add_literals" (formula "33") (term "1,1,0"))
                     (rule "times_zero_1" (formula "33") (term "1,0"))
                     (rule "add_zero_right" (formula "33") (term "0"))
                     (rule "polySimp_addComm0" (formula "33") (term "0"))
                     (rule "polySimp_sepPosMonomial" (formula "33"))
                     (rule "polySimp_mulLiterals" (formula "33") (term "1"))
                     (rule "polySimp_elimOne" (formula "33") (term "1"))
                     (rule "polyDiv_pullOut" (formula "13") (term "0") (inst "polyDivCoeff=quotient_2"))
                     (rule "polySimp_mulComm1" (formula "13") (term "1,0,0,2,0"))
                     (rule "polySimp_mulComm0" (formula "13") (term "0,1,0,0,2,0"))
                     (rule "polySimp_addComm0" (formula "13") (term "2,0"))
                     (rule "applyEq" (formula "13") (term "0,1,0,1,2,0") (ifseqformula "15"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1,2,0"))
                     (rule "polySimp_elimOne" (formula "13") (term "1,0,1,2,0"))
                     (rule "polySimp_pullOutFactor2" (formula "13") (term "0,1,2,0"))
                     (rule "add_literals" (formula "13") (term "1,0,1,2,0"))
                     (rule "times_zero_1" (formula "13") (term "0,1,2,0"))
                     (rule "inEqSimp_contradEq7" (formula "13") (term "0,0") (ifseqformula "6"))
                     (rule "times_zero_1" (formula "13") (term "1,0,0,0,0"))
                     (rule "add_zero_right" (formula "13") (term "0,0,0,0"))
                     (rule "leq_literals" (formula "13") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "13"))
                     (rule "polySimp_homoEq" (formula "13"))
                     (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "13") (term "1,0"))
                     (rule "polySimp_mulComm0" (formula "13") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "13") (term "0"))
                     (rule "polySimp_pullOutFactor1" (formula "13") (term "0,0"))
                     (rule "add_literals" (formula "13") (term "1,0,0"))
                     (rule "times_zero_1" (formula "13") (term "0,0"))
                     (rule "add_zero_left" (formula "13") (term "0"))
                     (rule "polySimp_invertEq" (formula "13"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                     (rule "times_zero_2" (formula "13") (term "1"))
                     (rule "polySimp_elimOne" (formula "13") (term "0"))
                     (rule "polyDiv_zero" (formula "13") (term "0"))
                      (builtin "One Step Simplification" (formula "13"))
                     (rule "div_literals" (formula "13") (term "0,1"))
                     (rule "inEqSimp_contradEq7" (formula "13") (term "0,0") (ifseqformula "6"))
                     (rule "times_zero_1" (formula "13") (term "1,0,0,0,0"))
                     (rule "add_zero_right" (formula "13") (term "0,0,0,0"))
                     (rule "leq_literals" (formula "13") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "13"))
                     (rule "true_left" (formula "13"))
                     (rule "allLeft" (formula "34") (inst "t=x_0"))
                     (rule "applyEq" (formula "34") (term "0,0,1") (ifseqformula "9"))
                     (rule "polySimp_mulComm0" (formula "34") (term "0,1"))
                     (rule "inEqSimp_contradEq3" (formula "34") (term "1") (ifseqformula "5"))
                     (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,1"))
                     (rule "add_literals" (formula "34") (term "1,1,0,0,1"))
                     (rule "times_zero_1" (formula "34") (term "1,0,0,1"))
                     (rule "add_zero_right" (formula "34") (term "0,0,1"))
                     (rule "qeq_literals" (formula "34") (term "0,1"))
                      (builtin "One Step Simplification" (formula "34"))
                     (rule "inEqSimp_contradInEq1" (formula "34") (term "0,0") (ifseqformula "6"))
                     (rule "qeq_literals" (formula "34") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "34"))
                     (rule "allLeft" (formula "35") (inst "t=result_gcdHelp"))
                     (rule "applyEq" (formula "35") (term "0,0,0,1,0") (ifseqformula "31"))
                     (rule "replace_known_left" (formula "35") (term "0,1,0") (ifseqformula "33"))
                      (builtin "One Step Simplification" (formula "35"))
                     (rule "applyEq" (formula "35") (term "0,0,0,1,0") (ifseqformula "26"))
                     (rule "replace_known_left" (formula "35") (term "0,1,0") (ifseqformula "27"))
                      (builtin "One Step Simplification" (formula "35"))
                     (rule "polyDiv_pullOut" (formula "10") (term "0") (inst "polyDivCoeff=quotient_3"))
                     (rule "polySimp_mulComm1" (formula "10") (term "1,0,0,2,0"))
                     (rule "polySimp_mulComm0" (formula "10") (term "0,1,0,0,2,0"))
                     (rule "polySimp_addComm0" (formula "10") (term "2,0"))
                     (rule "applyEq" (formula "10") (term "0,1,0,1,2,0") (ifseqformula "12"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,2,0"))
                     (rule "polySimp_pullOutFactor0" (formula "10") (term "0,1,2,0"))
                     (rule "add_literals" (formula "10") (term "1,0,1,2,0"))
                     (rule "times_zero_1" (formula "10") (term "0,1,2,0"))
                     (rule "inEqSimp_contradEq7" (formula "10") (term "0,0") (ifseqformula "6"))
                     (rule "times_zero_1" (formula "10") (term "1,0,0,0,0"))
                     (rule "add_zero_right" (formula "10") (term "0,0,0,0"))
                     (rule "leq_literals" (formula "10") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "10"))
                     (rule "polySimp_homoEq" (formula "10"))
                     (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "10") (term "1,0"))
                     (rule "polySimp_mulComm0" (formula "10") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "10") (term "0"))
                     (rule "polySimp_pullOutFactor1" (formula "10") (term "0,0"))
                     (rule "add_literals" (formula "10") (term "1,0,0"))
                     (rule "times_zero_1" (formula "10") (term "0,0"))
                     (rule "add_zero_left" (formula "10") (term "0"))
                     (rule "polySimp_invertEq" (formula "10"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                     (rule "times_zero_2" (formula "10") (term "1"))
                     (rule "polySimp_elimOne" (formula "10") (term "0"))
                     (rule "polyDiv_zero" (formula "10") (term "0"))
                      (builtin "One Step Simplification" (formula "10"))
                     (rule "div_literals" (formula "10") (term "0,1"))
                     (rule "inEqSimp_contradEq7" (formula "10") (term "0,0") (ifseqformula "6"))
                     (rule "times_zero_1" (formula "10") (term "1,0,0,0,0"))
                     (rule "add_zero_right" (formula "10") (term "0,0,0,0"))
                     (rule "leq_literals" (formula "10") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "10"))
                     (rule "true_left" (formula "10"))
                     (rule "polySimp_critPair" (formula "13") (ifseqformula "11"))
                     (rule "polySimp_mulComm0" (formula "13") (term "1,1,1,0"))
                     (rule "polySimp_mulAssoc" (formula "13") (term "0,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "13") (term "0,0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "0,1,0,0"))
                     (rule "polySimp_elimOne" (formula "13") (term "0,1,0,0"))
                     (rule "polySimp_rightDist" (formula "13") (term "1,0"))
                     (rule "polySimp_mulComm1" (formula "13") (term "1,1,0"))
                     (rule "polySimp_mulAssoc" (formula "13") (term "0,1,0"))
                     (rule "polySimp_mulComm0" (formula "13") (term "0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "13") (term "0,0"))
                     (rule "polySimp_mulComm1" (formula "13") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "13") (term "0,0,0"))
                     (rule "polySimp_addAssoc" (formula "13") (term "0"))
                     (rule "polySimp_addComm1" (formula "13") (term "0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "13") (term "0"))
                     (rule "add_literals" (formula "13") (term "1,1,0"))
                     (rule "times_zero_1" (formula "13") (term "1,0"))
                     (rule "add_zero_right" (formula "13") (term "0"))
                     (rule "polySimp_addComm0" (formula "13") (term "0"))
                     (rule "polySimp_sepPosMonomial" (formula "13"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "1"))
                     (rule "polySimp_elimOne" (formula "13") (term "1"))
                     (rule "cut_direct" (formula "28") (term "0"))
                     (branch "CUT: result_gcdHelp = 0 TRUE"
                         (builtin "One Step Simplification" (formula "29"))
                        (rule "true_left" (formula "29"))
                        (rule "replace_known_left" (formula "30") (term "0") (ifseqformula "28"))
                         (builtin "One Step Simplification" (formula "30"))
                        (rule "true_left" (formula "30"))
                        (rule "replace_known_left" (formula "29") (term "0") (ifseqformula "28"))
                         (builtin "One Step Simplification" (formula "29"))
                        (rule "true_left" (formula "29"))
                        (rule "replace_known_left" (formula "25") (term "0") (ifseqformula "28"))
                         (builtin "One Step Simplification" (formula "25"))
                        (rule "true_left" (formula "25"))
                        (rule "replace_known_left" (formula "24") (term "0") (ifseqformula "27"))
                         (builtin "One Step Simplification" (formula "24"))
                        (rule "true_left" (formula "24"))
                        (rule "replace_known_left" (formula "23") (term "0") (ifseqformula "26"))
                         (builtin "One Step Simplification" (formula "23"))
                        (rule "true_left" (formula "23"))
                        (rule "applyEq" (formula "27") (term "1,0,0") (ifseqformula "25"))
                        (rule "eqSymm" (formula "27"))
                        (rule "applyEq" (formula "2") (term "0,1") (ifseqformula "25"))
                        (rule "times_zero_2" (formula "2") (term "1"))
                        (rule "applyEq" (formula "28") (term "1,0") (ifseqformula "25"))
                        (rule "times_zero_1" (formula "28") (term "0"))
                        (rule "eqSymm" (formula "28"))
                        (rule "applyEq" (formula "24") (term "1,0") (ifseqformula "25"))
                        (rule "times_zero_1" (formula "24") (term "0"))
                        (rule "eqSymm" (formula "24"))
                        (rule "applyEq" (formula "30") (term "0,0,0,1") (ifseqformula "25"))
                        (rule "jdiv_axiom_inline" (formula "30") (term "0,0,1"))
                        (rule "times_zero_2" (formula "30") (term "0,0,2,0,0,1"))
                        (rule "qeq_literals" (formula "30") (term "0,0,0,1"))
                         (builtin "One Step Simplification" (formula "30"))
                        (rule "applyEq" (formula "26") (term "1,0") (ifseqformula "25"))
                        (rule "eqSymm" (formula "26"))
                        (rule "applyEq" (formula "31") (term "0,0,0,1,0") (ifseqformula "25"))
                        (rule "jdiv_axiom_inline" (formula "31") (term "0,0,1,0"))
                        (rule "qeq_literals" (formula "31") (term "0,0,0,1,0"))
                         (builtin "One Step Simplification" (formula "31"))
                        (rule "applyEq" (formula "23") (term "1,0") (ifseqformula "25"))
                        (rule "eqSymm" (formula "23"))
                        (rule "applyEq" (formula "5") (term "1,1") (ifseqformula "25"))
                        (rule "add_zero_right" (formula "5") (term "1"))
                        (rule "applyEq" (formula "8") (term "0") (ifseqformula "25"))
                        (rule "qeq_literals" (formula "8"))
                        (rule "true_left" (formula "8"))
                        (rule "applyEq" (formula "8") (term "0,0") (ifseqformula "24"))
                        (rule "jdiv_axiom_inline" (formula "8") (term "0"))
                        (rule "times_zero_2" (formula "8") (term "0,0,2,0"))
                        (rule "qeq_literals" (formula "8") (term "0,0"))
                         (builtin "One Step Simplification" (formula "8"))
                        (rule "applyEq" (formula "1") (term "0,0,0") (ifseqformula "24"))
                        (rule "times_zero_2" (formula "1") (term "0,0"))
                        (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "24"))
                        (rule "applyEq" (formula "6") (term "1,0,1") (ifseqformula "23"))
                        (rule "add_zero_right" (formula "6") (term "0,1"))
                        (rule "applyEq" (formula "3") (term "0,1,0,1") (ifseqformula "23"))
                        (rule "times_zero_2" (formula "3") (term "1,0,1"))
                        (rule "add_zero_right" (formula "3") (term "0,1"))
                        (rule "applyEq" (formula "25") (term "0,0") (ifseqformula "21"))
                        (rule "eqSymm" (formula "25"))
                        (rule "polySimp_mulComm0" (formula "25") (term "1"))
                        (rule "applyEq" (formula "21") (term "1,0") (ifseqformula "23"))
                        (rule "eqSymm" (formula "21"))
                        (rule "applyEq" (formula "7") (term "0") (ifseqformula "1"))
                        (rule "applyEq" (formula "28") (term "0,0") (ifseqformula "23"))
                        (rule "leq_literals" (formula "28") (term "0"))
                         (builtin "One Step Simplification" (formula "28"))
                        (rule "true_left" (formula "28"))
                        (rule "applyEq" (formula "24") (term "1,0") (ifseqformula "23"))
                        (rule "eqSymm" (formula "24"))
                        (rule "applyEq" (formula "28") (term "1,1,0") (ifseqformula "23"))
                        (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "7"))
                        (rule "applyEqRigid" (formula "3") (term "1,0") (ifseqformula "7"))
                        (rule "applyEq" (formula "1") (term "1") (ifseqformula "6"))
                        (rule "applyEq" (formula "24") (term "1,1") (ifseqformula "20"))
                        (rule "polySimp_invertEq" (formula "25"))
                        (rule "times_zero_2" (formula "25") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                        (rule "polySimp_elimOne" (formula "25") (term "0"))
                        (rule "applyEq" (formula "27") (term "0,0,0,0,0,1,0,0") (ifseqformula "25"))
                        (rule "times_zero_2" (formula "27") (term "0,0,0,0,1,0,0"))
                        (rule "jdiv_axiom_inline" (formula "27") (term "0,0,0,1,0,0"))
                        (rule "qeq_literals" (formula "27") (term "0,0,0,0,1,0,0"))
                         (builtin "One Step Simplification" (formula "27"))
                        (rule "applyEq" (formula "23") (term "0,0,0") (ifseqformula "25"))
                        (rule "times_zero_2" (formula "23") (term "0,0"))
                        (rule "eqSymm" (formula "23"))
                        (rule "jdiv_axiom_inline" (formula "23") (term "1"))
                        (rule "qeq_literals" (formula "23") (term "0,1"))
                         (builtin "One Step Simplification" (formula "23"))
                        (rule "div_literals" (formula "23") (term "1"))
                        (rule "eqSymm" (formula "23"))
                        (rule "applyEq" (formula "9") (term "0,0") (ifseqformula "25"))
                        (rule "jdiv_axiom_inline" (formula "9") (term "0"))
                        (rule "qeq_literals" (formula "9") (term "0,0"))
                         (builtin "One Step Simplification" (formula "9"))
                        (rule "applyEq" (formula "26") (term "0,0,0,0,0,1") (ifseqformula "25"))
                        (rule "times_zero_2" (formula "26") (term "0,0,0,0,1"))
                        (rule "jdiv_axiom_inline" (formula "26") (term "0,0,0,1"))
                        (rule "qeq_literals" (formula "26") (term "0,0,0,0,1"))
                         (builtin "One Step Simplification" (formula "26"))
                        (rule "applyEq" (formula "13") (term "0") (ifseqformula "25"))
                        (rule "inEqSimp_homoInEq1" (formula "13"))
                        (rule "times_zero_2" (formula "13") (term "1,0"))
                        (rule "add_zero_right" (formula "13") (term "0"))
                        (rule "applyEq" (formula "14") (term "0") (ifseqformula "25"))
                        (rule "leq_literals" (formula "14"))
                        (rule "closeFalse" (formula "14"))
                     )
                     (branch "CUT: result_gcdHelp = 0 FALSE"
                         (builtin "One Step Simplification" (formula "28"))
                        (rule "replace_known_right" (formula "29") (term "0") (ifseqformula "37"))
                         (builtin "One Step Simplification" (formula "29"))
                        (rule "replace_known_right" (formula "23") (term "0") (ifseqformula "37"))
                         (builtin "One Step Simplification" (formula "23"))
                        (rule "replace_known_right" (formula "24") (term "0") (ifseqformula "37"))
                         (builtin "One Step Simplification" (formula "24"))
                        (rule "replace_known_right" (formula "25") (term "0") (ifseqformula "37"))
                         (builtin "One Step Simplification" (formula "25"))
                        (rule "replace_known_right" (formula "30") (term "0") (ifseqformula "37"))
                         (builtin "One Step Simplification" (formula "30"))
                        (rule "applyEq" (formula "27") (term "0,0") (ifseqformula "24"))
                        (rule "polySimp_mulComm0" (formula "27") (term "0"))
                        (rule "applyEq" (formula "33") (term "0,0") (ifseqformula "29"))
                        (rule "polySimp_mulComm0" (formula "33") (term "0"))
                        (rule "applyEq" (formula "32") (term "0,0") (ifseqformula "29"))
                        (rule "eqSymm" (formula "32"))
                        (rule "polySimp_mulComm0" (formula "32") (term "1"))
                        (rule "applyEq" (formula "25") (term "0") (ifseqformula "27"))
                        (rule "inEqSimp_homoInEq1" (formula "25"))
                        (rule "polySimp_mulLiterals" (formula "25") (term "1,0"))
                        (rule "polySimp_elimOne" (formula "25") (term "1,0"))
                        (rule "polySimp_addComm1" (formula "25") (term "0"))
                        (rule "polySimp_pullOutFactor2b" (formula "25") (term "0,0"))
                        (rule "add_literals" (formula "25") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "25") (term "1,0,0"))
                        (rule "add_zero_right" (formula "25") (term "0,0"))
                        (rule "applyEq" (formula "23") (term "0") (ifseqformula "27"))
                        (rule "inEqSimp_homoInEq0" (formula "23"))
                        (rule "polySimp_mulLiterals" (formula "23") (term "1,0"))
                        (rule "polySimp_pullOutFactor0" (formula "23") (term "0"))
                        (rule "add_literals" (formula "23") (term "1,0"))
                        (rule "times_zero_1" (formula "23") (term "0"))
                        (rule "qeq_literals" (formula "23"))
                        (rule "true_left" (formula "23"))
                        (rule "applyEq" (formula "25") (term "1") (ifseqformula "23"))
                        (rule "applyEq" (formula "30") (term "1") (ifseqformula "28"))
                        (rule "applyEq" (formula "29") (term "0") (ifseqformula "32"))
                        (rule "inEqSimp_homoInEq1" (formula "29"))
                        (rule "polySimp_mulLiterals" (formula "29") (term "1,0"))
                        (rule "polySimp_elimOne" (formula "29") (term "1,0"))
                        (rule "polySimp_addComm1" (formula "29") (term "0"))
                        (rule "polySimp_pullOutFactor2b" (formula "29") (term "0,0"))
                        (rule "add_literals" (formula "29") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "29") (term "1,0,0"))
                        (rule "add_zero_right" (formula "29") (term "0,0"))
                        (rule "applyEq" (formula "27") (term "0") (ifseqformula "31"))
                        (rule "inEqSimp_homoInEq0" (formula "27"))
                        (rule "polySimp_mulLiterals" (formula "27") (term "1,0"))
                        (rule "polySimp_pullOutFactor0" (formula "27") (term "0"))
                        (rule "add_literals" (formula "27") (term "1,0"))
                        (rule "times_zero_1" (formula "27") (term "0"))
                        (rule "qeq_literals" (formula "27"))
                        (rule "true_left" (formula "27"))
                        (rule "applyEq" (formula "29") (term "0,0") (ifseqformula "23"))
                        (rule "polySimp_mulComm0" (formula "29") (term "0"))
                        (rule "eqSymm" (formula "29"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "24"))
                        (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                        (rule "polySimp_elimOne" (formula "24") (term "0"))
                        (rule "inEqSimp_contradEq7" (formula "34") (ifseqformula "24"))
                        (rule "times_zero_1" (formula "34") (term "1,0,0"))
                        (rule "add_zero_right" (formula "34") (term "0,0"))
                        (rule "leq_literals" (formula "34") (term "0"))
                         (builtin "One Step Simplification" (formula "34"))
                        (rule "false_right" (formula "34"))
                        (rule "inEqSimp_contradInEq1" (formula "32") (term "0") (ifseqformula "24"))
                        (rule "qeq_literals" (formula "32") (term "0,0"))
                         (builtin "One Step Simplification" (formula "32"))
                        (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "24"))
                        (rule "leq_literals" (formula "8") (term "0"))
                         (builtin "One Step Simplification" (formula "8"))
                        (rule "true_left" (formula "8"))
                        (rule "jdiv_axiom" (formula "30") (term "0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "30") (term "0,0,2,1"))
                        (rule "eqSymm" (formula "30"))
                        (rule "polySimp_elimOne" (formula "30") (term "0,0,2,0"))
                        (rule "inEqSimp_invertInEq1" (formula "30") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "30") (term "0,0,0"))
                        (rule "times_zero_2" (formula "30") (term "1,0,0"))
                        (rule "polySimp_elimOne" (formula "30") (term "0,0,0"))
                        (rule "inEqSimp_subsumption0" (formula "30") (term "0,0") (ifseqformula "14"))
                        (rule "leq_literals" (formula "30") (term "0,0,0"))
                         (builtin "One Step Simplification" (formula "30"))
                        (rule "eqSymm" (formula "30"))
                        (rule "applyEq" (formula "31") (term "0,0,0,0") (ifseqformula "30"))
                        (rule "polyDiv_pullOut" (formula "31") (term "0,0,0,0") (inst "polyDivCoeff=quotient_3"))
                        (rule "polySimp_mulComm1" (formula "31") (term "1,0,0,2,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "31") (term "0,1,0,0,2,0,0,0,0"))
                        (rule "polySimp_addComm0" (formula "31") (term "2,0,0,0,0"))
                        (rule "applyEq" (formula "31") (term "0,1,0,1,2,0,0,0,0") (ifseqformula "10"))
                        (rule "polySimp_mulLiterals" (formula "31") (term "1,0,1,2,0,0,0,0"))
                        (rule "polySimp_pullOutFactor0" (formula "31") (term "0,1,2,0,0,0,0"))
                        (rule "add_literals" (formula "31") (term "1,0,1,2,0,0,0,0"))
                        (rule "times_zero_1" (formula "31") (term "0,1,2,0,0,0,0"))
                        (rule "inEqSimp_contradEq7" (formula "31") (term "0,0,0,0,0") (ifseqformula "6"))
                        (rule "times_zero_1" (formula "31") (term "1,0,0,0,0,0,0,0"))
                        (rule "add_zero_right" (formula "31") (term "0,0,0,0,0,0,0"))
                        (rule "leq_literals" (formula "31") (term "0,0,0,0,0,0"))
                         (builtin "One Step Simplification" (formula "31"))
                        (rule "polySimp_mulComm0" (formula "31") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "31") (term "0,0,0"))
                        (rule "polySimp_homoEq" (formula "31") (term "0,0"))
                        (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "31") (term "1,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "31") (term "0,1,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "31") (term "0,0,0"))
                        (rule "applyEq" (formula "31") (term "0,1,0,0,0,0") (ifseqformula "10"))
                        (rule "polySimp_mulLiterals" (formula "31") (term "1,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "31") (term "1,0,0,0,0"))
                        (rule "polySimp_pullOutFactor2" (formula "31") (term "0,0,0,0"))
                        (rule "add_literals" (formula "31") (term "1,0,0,0,0"))
                        (rule "times_zero_1" (formula "31") (term "0,0,0,0"))
                        (rule "add_zero_left" (formula "31") (term "0,0,0"))
                        (rule "polySimp_invertEq" (formula "31") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "31") (term "0,0,0"))
                        (rule "times_zero_2" (formula "31") (term "1,0,0"))
                        (rule "polySimp_elimOne" (formula "31") (term "0,0,0"))
                        (rule "polyDiv_zero" (formula "31") (term "0,0,0,0"))
                        (rule "div_literals" (formula "31") (term "1,0,0,0,0"))
                        (rule "inEqSimp_contradEq7" (formula "31") (term "0,0,0,0,0") (ifseqformula "6"))
                        (rule "times_zero_1" (formula "31") (term "1,0,0,0,0,0,0,0"))
                        (rule "add_zero_right" (formula "31") (term "0,0,0,0,0,0,0"))
                        (rule "leq_literals" (formula "31") (term "0,0,0,0,0,0"))
                         (builtin "One Step Simplification" (formula "31"))
                        (rule "times_zero_2" (formula "31") (term "0,0,0"))
                         (builtin "One Step Simplification" (formula "31"))
                        (rule "notLeft" (formula "31"))
                        (rule "polyDiv_pullOut" (formula "30") (term "1") (inst "polyDivCoeff=quotient_3"))
                        (rule "eqSymm" (formula "30"))
                        (rule "polySimp_mulComm1" (formula "30") (term "1,0,0,2,0"))
                        (rule "polySimp_mulComm0" (formula "30") (term "0,1,0,0,2,0"))
                        (rule "polySimp_addComm0" (formula "30") (term "2,0"))
                        (rule "applyEq" (formula "30") (term "0,1,0,1,2,0") (ifseqformula "10"))
                        (rule "polySimp_mulLiterals" (formula "30") (term "1,0,1,2,0"))
                        (rule "polySimp_pullOutFactor0" (formula "30") (term "0,1,2,0"))
                        (rule "add_literals" (formula "30") (term "1,0,1,2,0"))
                        (rule "times_zero_1" (formula "30") (term "0,1,2,0"))
                        (rule "inEqSimp_contradEq7" (formula "30") (term "0,0") (ifseqformula "6"))
                        (rule "times_zero_1" (formula "30") (term "1,0,0,0,0"))
                        (rule "add_zero_right" (formula "30") (term "0,0,0,0"))
                        (rule "leq_literals" (formula "30") (term "0,0,0"))
                         (builtin "One Step Simplification" (formula "30"))
                        (rule "eqSymm" (formula "30"))
                        (rule "polyDiv_zero" (formula "30") (term "1,1"))
                        (rule "div_literals" (formula "30") (term "1,1,1"))
                        (rule "polySimp_homoEq" (formula "30"))
                        (rule "polySimp_addComm1" (formula "30") (term "0"))
                        (rule "polySimp_sepPosMonomial" (formula "30"))
                        (rule "polySimp_mulComm0" (formula "30") (term "1"))
                        (rule "polySimp_rightDist" (formula "30") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "30") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "30") (term "1,1"))
                        (rule "polySimp_mulComm0" (formula "30") (term "0,1"))
                        (rule "inEqSimp_contradEq7" (formula "30") (term "0,0") (ifseqformula "6"))
                        (rule "times_zero_1" (formula "30") (term "1,0,0,0,0"))
                        (rule "add_zero_right" (formula "30") (term "0,0,0,0"))
                        (rule "leq_literals" (formula "30") (term "0,0,0"))
                         (builtin "One Step Simplification" (formula "30"))
                        (rule "polySimp_homoEq" (formula "30"))
                        (rule "times_zero_2" (formula "30") (term "1,0"))
                        (rule "add_zero_right" (formula "30") (term "0"))
                        (rule "polySimp_sepPosMonomial" (formula "30"))
                        (rule "polySimp_mulLiterals" (formula "30") (term "1"))
                        (rule "polySimp_elimOne" (formula "30") (term "1"))
                        (rule "jdiv_axiom" (formula "31") (term "0,0"))
                        (rule "eqSymm" (formula "31"))
                        (rule "inEqSimp_subsumption1" (formula "31") (term "0,0") (ifseqformula "23"))
                        (rule "leq_literals" (formula "31") (term "0,0,0"))
                         (builtin "One Step Simplification" (formula "31"))
                        (rule "eqSymm" (formula "31"))
                        (rule "applyEq" (formula "32") (term "0,0") (ifseqformula "31"))
                        (rule "polyDiv_pullOut" (formula "32") (term "0,0") (inst "polyDivCoeff=Z(1(#))"))
                        (rule "mul_literals" (formula "32") (term "0,1,0,0,2,0,0"))
                        (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,2,0,0"))
                        (rule "polySimp_pullOutFactor1" (formula "32") (term "0,0,2,0,0"))
                        (rule "add_literals" (formula "32") (term "1,0,0,2,0,0"))
                        (rule "times_zero_1" (formula "32") (term "0,0,2,0,0"))
                        (rule "polySimp_addComm0" (formula "32") (term "2,0,0"))
                        (rule "inEqSimp_contradEq7" (formula "32") (term "0,0,0") (ifseqformula "23"))
                        (rule "times_zero_1" (formula "32") (term "1,0,0,0,0,0"))
                        (rule "add_zero_right" (formula "32") (term "0,0,0,0,0"))
                        (rule "leq_literals" (formula "32") (term "0,0,0,0"))
                         (builtin "One Step Simplification" (formula "32"))
                        (rule "polySimp_mulComm0" (formula "32") (term "0"))
                        (rule "polySimp_rightDist" (formula "32") (term "0"))
                        (rule "polySimp_homoEq" (formula "32"))
                        (rule "polySimp_elimOne" (formula "32") (term "0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                        (rule "polySimp_mulComm0" (formula "32") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "32") (term "0"))
                        (rule "polySimp_pullOutFactor1" (formula "32") (term "0,0"))
                        (rule "add_literals" (formula "32") (term "1,0,0"))
                        (rule "times_zero_1" (formula "32") (term "0,0"))
                        (rule "add_zero_left" (formula "32") (term "0"))
                        (rule "polySimp_invertEq" (formula "32"))
                        (rule "times_zero_2" (formula "32") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "32") (term "0"))
                        (rule "polySimp_elimOne" (formula "32") (term "0"))
                        (rule "polyDiv_zero" (formula "32") (term "0,0"))
                        (rule "div_literals" (formula "32") (term "1,0,0"))
                        (rule "inEqSimp_contradEq7" (formula "32") (term "0,0,0") (ifseqformula "23"))
                        (rule "times_zero_1" (formula "32") (term "1,0,0,0,0,0"))
                        (rule "add_zero_right" (formula "32") (term "0,0,0,0,0"))
                        (rule "leq_literals" (formula "32") (term "0,0,0,0"))
                         (builtin "One Step Simplification" (formula "32"))
                        (rule "times_zero_2" (formula "32") (term "0"))
                         (builtin "One Step Simplification" (formula "32"))
                        (rule "true_left" (formula "32"))
                        (rule "polyDiv_pullOut" (formula "31") (term "1") (inst "polyDivCoeff=Z(1(#))"))
                        (rule "mul_literals" (formula "31") (term "0,1,0,0,2,1"))
                        (rule "eqSymm" (formula "31"))
                        (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,2,0"))
                        (rule "polySimp_pullOutFactor1" (formula "31") (term "0,0,2,0"))
                        (rule "add_literals" (formula "31") (term "1,0,0,2,0"))
                        (rule "times_zero_1" (formula "31") (term "0,0,2,0"))
                        (rule "polySimp_addComm0" (formula "31") (term "2,0"))
                        (rule "inEqSimp_contradEq7" (formula "31") (term "0,0") (ifseqformula "23"))
                        (rule "times_zero_1" (formula "31") (term "1,0,0,0,0"))
                        (rule "add_zero_right" (formula "31") (term "0,0,0,0"))
                        (rule "leq_literals" (formula "31") (term "0,0,0"))
                         (builtin "One Step Simplification" (formula "31"))
                        (rule "eqSymm" (formula "31"))
                        (rule "polyDiv_zero" (formula "31") (term "1,1"))
                        (rule "div_literals" (formula "31") (term "1,1,1"))
                        (rule "polySimp_homoEq" (formula "31"))
                        (rule "polySimp_addComm1" (formula "31") (term "0"))
                        (rule "polySimp_sepPosMonomial" (formula "31"))
                        (rule "polySimp_mulComm0" (formula "31") (term "1"))
                        (rule "polySimp_rightDist" (formula "31") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "31") (term "1,1"))
                        (rule "mul_literals" (formula "31") (term "0,1"))
                        (rule "polySimp_elimOne" (formula "31") (term "1,1"))
                        (rule "inEqSimp_contradEq7" (formula "31") (term "0,0") (ifseqformula "23"))
                        (rule "times_zero_1" (formula "31") (term "1,0,0,0,0"))
                        (rule "add_zero_right" (formula "31") (term "0,0,0,0"))
                        (rule "leq_literals" (formula "31") (term "0,0,0"))
                         (builtin "One Step Simplification" (formula "31"))
                        (rule "polySimp_homoEq" (formula "31"))
                        (rule "times_zero_2" (formula "31") (term "1,0"))
                        (rule "add_zero_right" (formula "31") (term "0"))
                        (rule "polySimp_sepPosMonomial" (formula "31"))
                        (rule "mul_literals" (formula "31") (term "1"))
                        (rule "polyDiv_pullOut" (formula "26") (term "0") (inst "polyDivCoeff=quotient_4"))
                        (rule "polySimp_mulComm1" (formula "26") (term "1,0,0,2,0"))
                        (rule "polySimp_mulComm0" (formula "26") (term "0,1,0,0,2,0"))
                        (rule "polySimp_addComm0" (formula "26") (term "2,0"))
                        (rule "applyEq" (formula "26") (term "0,1,0,1,2,0") (ifseqformula "29"))
                        (rule "polySimp_mulLiterals" (formula "26") (term "1,0,1,2,0"))
                        (rule "polySimp_pullOutFactor0" (formula "26") (term "0,1,2,0"))
                        (rule "add_literals" (formula "26") (term "1,0,1,2,0"))
                        (rule "times_zero_1" (formula "26") (term "0,1,2,0"))
                        (rule "inEqSimp_contradEq7" (formula "26") (term "0,0") (ifseqformula "23"))
                        (rule "times_zero_1" (formula "26") (term "1,0,0,0,0"))
                        (rule "add_zero_right" (formula "26") (term "0,0,0,0"))
                        (rule "leq_literals" (formula "26") (term "0,0,0"))
                         (builtin "One Step Simplification" (formula "26"))
                        (rule "polySimp_homoEq" (formula "26"))
                        (rule "polySimp_mulComm0" (formula "26") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "26") (term "1,0"))
                        (rule "polySimp_mulComm0" (formula "26") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "26") (term "0"))
                        (rule "polySimp_pullOutFactor1" (formula "26") (term "0,0"))
                        (rule "add_literals" (formula "26") (term "1,0,0"))
                        (rule "times_zero_1" (formula "26") (term "0,0"))
                        (rule "add_zero_left" (formula "26") (term "0"))
                        (rule "polySimp_invertEq" (formula "26"))
                        (rule "polySimp_mulLiterals" (formula "26") (term "0"))
                        (rule "times_zero_2" (formula "26") (term "1"))
                        (rule "polySimp_elimOne" (formula "26") (term "0"))
                        (rule "polyDiv_zero" (formula "26") (term "0"))
                         (builtin "One Step Simplification" (formula "26"))
                        (rule "div_literals" (formula "26") (term "0,1"))
                        (rule "inEqSimp_contradEq7" (formula "26") (term "0,0") (ifseqformula "23"))
                        (rule "times_zero_1" (formula "26") (term "1,0,0,0,0"))
                        (rule "add_zero_right" (formula "26") (term "0,0,0,0"))
                        (rule "leq_literals" (formula "26") (term "0,0,0"))
                         (builtin "One Step Simplification" (formula "26"))
                        (rule "true_left" (formula "26"))
                        (rule "polyDiv_pullOut" (formula "22") (term "0") (inst "polyDivCoeff=quotient_5"))
                        (rule "polySimp_mulComm1" (formula "22") (term "1,0,0,2,0"))
                        (rule "polySimp_mulComm0" (formula "22") (term "0,1,0,0,2,0"))
                        (rule "polySimp_addComm0" (formula "22") (term "2,0"))
                        (rule "applyEq" (formula "22") (term "0,1,0,1,2,0") (ifseqformula "25"))
                        (rule "polySimp_mulLiterals" (formula "22") (term "1,0,1,2,0"))
                        (rule "polySimp_pullOutFactor0" (formula "22") (term "0,1,2,0"))
                        (rule "add_literals" (formula "22") (term "1,0,1,2,0"))
                        (rule "times_zero_1" (formula "22") (term "0,1,2,0"))
                        (rule "inEqSimp_contradEq7" (formula "22") (term "0,0") (ifseqformula "23"))
                        (rule "times_zero_1" (formula "22") (term "1,0,0,0,0"))
                        (rule "add_zero_right" (formula "22") (term "0,0,0,0"))
                        (rule "leq_literals" (formula "22") (term "0,0,0"))
                         (builtin "One Step Simplification" (formula "22"))
                        (rule "polySimp_homoEq" (formula "22"))
                        (rule "polySimp_mulComm0" (formula "22") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "22") (term "1,0"))
                        (rule "polySimp_mulComm0" (formula "22") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "22") (term "0"))
                        (rule "polySimp_pullOutFactor1" (formula "22") (term "0,0"))
                        (rule "add_literals" (formula "22") (term "1,0,0"))
                        (rule "times_zero_1" (formula "22") (term "0,0"))
                        (rule "add_zero_left" (formula "22") (term "0"))
                        (rule "polySimp_invertEq" (formula "22"))
                        (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                        (rule "times_zero_2" (formula "22") (term "1"))
                        (rule "polySimp_elimOne" (formula "22") (term "0"))
                        (rule "polyDiv_zero" (formula "22") (term "0"))
                         (builtin "One Step Simplification" (formula "22"))
                        (rule "div_literals" (formula "22") (term "0,1"))
                        (rule "inEqSimp_contradEq7" (formula "22") (term "0,0") (ifseqformula "23"))
                        (rule "times_zero_1" (formula "22") (term "1,0,0,0,0"))
                        (rule "add_zero_right" (formula "22") (term "0,0,0,0"))
                        (rule "leq_literals" (formula "22") (term "0,0,0"))
                         (builtin "One Step Simplification" (formula "22"))
                        (rule "true_left" (formula "22"))
                        (rule "jdiv_axiom" (formula "31") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "0,0,2,1"))
                        (rule "eqSymm" (formula "1"))
                        (rule "polySimp_elimOne" (formula "1") (term "0,0,2,0"))
                        (rule "inEqSimp_invertInEq1" (formula "1") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0"))
                        (rule "times_zero_2" (formula "1") (term "1,0,0"))
                        (rule "polySimp_elimOne" (formula "1") (term "0,0,0"))
                        (rule "inEqSimp_subsumption0" (formula "1") (term "0,0") (ifseqformula "17"))
                        (rule "leq_literals" (formula "1") (term "0,0,0"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "eqSymm" (formula "1"))
                        (rule "applyEq" (formula "32") (term "0,0") (ifseqformula "1"))
                        (rule "polyDiv_pullOut" (formula "32") (term "0,0") (inst "polyDivCoeff=quotient_2"))
                        (rule "polySimp_mulComm1" (formula "32") (term "1,0,0,2,0,0"))
                        (rule "polySimp_mulComm0" (formula "32") (term "0,1,0,0,2,0,0"))
                        (rule "polySimp_addComm0" (formula "32") (term "2,0,0"))
                        (rule "applyEq" (formula "32") (term "0,1,0,1,2,0,0") (ifseqformula "14"))
                        (rule "polySimp_mulLiterals" (formula "32") (term "1,0,1,2,0,0"))
                        (rule "polySimp_pullOutFactor0" (formula "32") (term "0,1,2,0,0"))
                        (rule "add_literals" (formula "32") (term "1,0,1,2,0,0"))
                        (rule "times_zero_1" (formula "32") (term "0,1,2,0,0"))
                        (rule "inEqSimp_contradEq7" (formula "32") (term "0,0,0") (ifseqformula "7"))
                        (rule "times_zero_1" (formula "32") (term "1,0,0,0,0,0"))
                        (rule "add_zero_right" (formula "32") (term "0,0,0,0,0"))
                        (rule "leq_literals" (formula "32") (term "0,0,0,0"))
                         (builtin "One Step Simplification" (formula "32"))
                        (rule "polySimp_mulComm0" (formula "32") (term "0"))
                        (rule "polySimp_rightDist" (formula "32") (term "0"))
                        (rule "polySimp_homoEq" (formula "32"))
                        (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                        (rule "polySimp_mulComm0" (formula "32") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "32") (term "0"))
                        (rule "applyEq" (formula "32") (term "0,1,0,0") (ifseqformula "14"))
                        (rule "polySimp_mulLiterals" (formula "32") (term "1,0,0"))
                        (rule "polySimp_pullOutFactor0" (formula "32") (term "0,0"))
                        (rule "add_literals" (formula "32") (term "1,0,0"))
                        (rule "times_zero_1" (formula "32") (term "0,0"))
                        (rule "add_zero_left" (formula "32") (term "0"))
                        (rule "polySimp_invertEq" (formula "32"))
                        (rule "polySimp_mulLiterals" (formula "32") (term "0"))
                        (rule "times_zero_2" (formula "32") (term "1"))
                        (rule "polySimp_elimOne" (formula "32") (term "0"))
                        (rule "polyDiv_zero" (formula "32") (term "0,0"))
                        (rule "div_literals" (formula "32") (term "1,0,0"))
                        (rule "inEqSimp_contradEq7" (formula "32") (term "0,0,0") (ifseqformula "7"))
                        (rule "times_zero_1" (formula "32") (term "1,0,0,0,0,0"))
                        (rule "add_zero_right" (formula "32") (term "0,0,0,0,0"))
                        (rule "leq_literals" (formula "32") (term "0,0,0,0"))
                         (builtin "One Step Simplification" (formula "32"))
                        (rule "times_zero_2" (formula "32") (term "0"))
                         (builtin "One Step Simplification" (formula "32"))
                        (rule "closeTrue" (formula "32"))
                     )
                  )
                  (branch "result_gcdHelp >= 0 FALSE"
                     (rule "eqSymm" (formula "7"))
                     (rule "replace_known_right" (formula "26") (term "0,1,1") (ifseqformula "30"))
                      (builtin "One Step Simplification" (formula "26"))
                     (rule "replace_known_right" (formula "23") (term "0,1,1") (ifseqformula "30"))
                      (builtin "One Step Simplification" (formula "23"))
                     (rule "inEqSimp_geqRight" (formula "30"))
                     (rule "times_zero_1" (formula "1") (term "1,0,0"))
                     (rule "add_zero_right" (formula "1") (term "0,0"))
                     (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "8"))
                     (rule "polySimp_mulComm1" (formula "31") (term "0"))
                     (rule "polySimp_homoEq" (formula "31"))
                     (rule "polySimp_mulLiterals" (formula "31") (term "1,0"))
                     (rule "polySimp_elimOne" (formula "31") (term "1,0"))
                     (rule "polySimp_mulComm0" (formula "31") (term "1,0"))
                     (rule "polySimp_sepPosMonomial" (formula "31"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                     (rule "mul_literals" (formula "1") (term "1"))
                     (rule "inEqSimp_contradEq3" (formula "27") (term "0") (ifseqformula "1"))
                     (rule "times_zero_1" (formula "27") (term "1,0,0,0"))
                     (rule "add_zero_right" (formula "27") (term "0,0,0"))
                     (rule "qeq_literals" (formula "27") (term "0,0"))
                      (builtin "One Step Simplification" (formula "27"))
                     (rule "andLeft" (formula "27"))
                     (rule "andLeft" (formula "27"))
                     (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "28"))
                     (rule "polySimp_mulComm0" (formula "31") (term "0"))
                     (rule "applyEq" (formula "29") (term "0") (ifseqformula "31"))
                     (rule "inEqSimp_homoInEq1" (formula "29"))
                     (rule "polySimp_mulLiterals" (formula "29") (term "1,0"))
                     (rule "polySimp_elimOne" (formula "29") (term "1,0"))
                     (rule "polySimp_addComm1" (formula "29") (term "0"))
                     (rule "polySimp_pullOutFactor2b" (formula "29") (term "0,0"))
                     (rule "add_literals" (formula "29") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "29") (term "1,0,0"))
                     (rule "add_zero_right" (formula "29") (term "0,0"))
                     (rule "applyEq" (formula "27") (term "0") (ifseqformula "31"))
                     (rule "inEqSimp_homoInEq0" (formula "27"))
                     (rule "polySimp_mulLiterals" (formula "27") (term "1,0"))
                     (rule "polySimp_pullOutFactor0" (formula "27") (term "0"))
                     (rule "add_literals" (formula "27") (term "1,0"))
                     (rule "times_zero_1" (formula "27") (term "0"))
                     (rule "qeq_literals" (formula "27"))
                     (rule "true_left" (formula "27"))
                     (rule "applyEq" (formula "29") (term "1") (ifseqformula "27"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "28"))
                     (rule "mul_literals" (formula "28") (term "1"))
                     (rule "inEqSimp_contradEq3" (formula "24") (term "0") (ifseqformula "1"))
                     (rule "times_zero_1" (formula "24") (term "1,0,0,0"))
                     (rule "add_zero_right" (formula "24") (term "0,0,0"))
                     (rule "qeq_literals" (formula "24") (term "0,0"))
                      (builtin "One Step Simplification" (formula "24"))
                     (rule "andLeft" (formula "24"))
                     (rule "andLeft" (formula "24"))
                     (rule "applyEq" (formula "28") (term "0,0") (ifseqformula "25"))
                     (rule "polySimp_mulComm0" (formula "28") (term "0"))
                     (rule "applyEq" (formula "24") (term "0") (ifseqformula "28"))
                     (rule "inEqSimp_homoInEq0" (formula "24"))
                     (rule "polySimp_mulLiterals" (formula "24") (term "1,0"))
                     (rule "polySimp_pullOutFactor0" (formula "24") (term "0"))
                     (rule "add_literals" (formula "24") (term "1,0"))
                     (rule "times_zero_1" (formula "24") (term "0"))
                     (rule "qeq_literals" (formula "24"))
                     (rule "true_left" (formula "24"))
                     (rule "applyEq" (formula "25") (term "0") (ifseqformula "27"))
                     (rule "inEqSimp_homoInEq1" (formula "25"))
                     (rule "polySimp_mulLiterals" (formula "25") (term "1,0"))
                     (rule "polySimp_elimOne" (formula "25") (term "1,0"))
                     (rule "polySimp_addComm1" (formula "25") (term "0"))
                     (rule "polySimp_pullOutFactor2b" (formula "25") (term "0,0"))
                     (rule "add_literals" (formula "25") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "25") (term "1,0,0"))
                     (rule "add_zero_right" (formula "25") (term "0,0"))
                     (rule "applyEq" (formula "26") (term "1") (ifseqformula "24"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "25"))
                     (rule "mul_literals" (formula "25") (term "1"))
                     (rule "inEqSimp_strengthen0" (formula "3") (ifseqformula "31"))
                     (rule "inEqSimp_contradEq3" (formula "31") (ifseqformula "3"))
                     (rule "polySimp_mulAssoc" (formula "31") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "31") (term "0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "31") (term "1,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "31") (term "0,0"))
                     (rule "add_literals" (formula "31") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "31") (term "1,0,0"))
                     (rule "add_zero_right" (formula "31") (term "0,0"))
                     (rule "qeq_literals" (formula "31") (term "0"))
                      (builtin "One Step Simplification" (formula "31"))
                     (rule "false_right" (formula "31"))
                     (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "3"))
                     (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0"))
                     (rule "polySimp_elimOne" (formula "4") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "4") (term "0"))
                     (rule "polySimp_rightDist" (formula "4") (term "0,0,0"))
                     (rule "mul_literals" (formula "4") (term "0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "4") (term "1,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                     (rule "add_literals" (formula "4") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0"))
                     (rule "add_literals" (formula "4") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "4") (term "1,0,0"))
                     (rule "add_zero_right" (formula "4") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                     (rule "mul_literals" (formula "4") (term "1"))
                     (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "4"))
                     (rule "leq_literals" (formula "10") (term "0"))
                      (builtin "One Step Simplification" (formula "10"))
                     (rule "true_left" (formula "10"))
                     (rule "polyDiv_pullOut" (formula "13") (term "0") (inst "polyDivCoeff=quotient_2"))
                     (rule "polySimp_mulComm1" (formula "13") (term "1,0,0,2,0"))
                     (rule "polySimp_mulComm0" (formula "13") (term "0,1,0,0,2,0"))
                     (rule "polySimp_addComm0" (formula "13") (term "2,0"))
                     (rule "applyEq" (formula "13") (term "0,1,0,1,2,0") (ifseqformula "15"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1,2,0"))
                     (rule "polySimp_pullOutFactor0" (formula "13") (term "0,1,2,0"))
                     (rule "add_literals" (formula "13") (term "1,0,1,2,0"))
                     (rule "times_zero_1" (formula "13") (term "0,1,2,0"))
                     (rule "inEqSimp_contradEq7" (formula "13") (term "0,0") (ifseqformula "4"))
                     (rule "times_zero_1" (formula "13") (term "1,0,0,0,0"))
                     (rule "add_zero_right" (formula "13") (term "0,0,0,0"))
                     (rule "leq_literals" (formula "13") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "13"))
                     (rule "polySimp_homoEq" (formula "13"))
                     (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "13") (term "1,0"))
                     (rule "polySimp_mulComm0" (formula "13") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "13") (term "0"))
                     (rule "polySimp_pullOutFactor1" (formula "13") (term "0,0"))
                     (rule "add_literals" (formula "13") (term "1,0,0"))
                     (rule "times_zero_1" (formula "13") (term "0,0"))
                     (rule "add_zero_left" (formula "13") (term "0"))
                     (rule "polySimp_invertEq" (formula "13"))
                     (rule "times_zero_2" (formula "13") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                     (rule "polySimp_elimOne" (formula "13") (term "0"))
                     (rule "polyDiv_zero" (formula "13") (term "0"))
                      (builtin "One Step Simplification" (formula "13"))
                     (rule "div_literals" (formula "13") (term "0,1"))
                     (rule "inEqSimp_contradEq7" (formula "13") (term "0,0") (ifseqformula "4"))
                     (rule "times_zero_1" (formula "13") (term "1,0,0,0,0"))
                     (rule "add_zero_right" (formula "13") (term "0,0,0,0"))
                     (rule "leq_literals" (formula "13") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "13"))
                     (rule "true_left" (formula "13"))
                     (rule "allLeft" (formula "29") (inst "t=x_0"))
                     (rule "applyEq" (formula "29") (term "0,0,1") (ifseqformula "9"))
                     (rule "polySimp_mulComm1" (formula "29") (term "0,1"))
                     (rule "polySimp_homoEq" (formula "29") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "29") (term "1,0,1"))
                     (rule "polySimp_elimOne" (formula "29") (term "1,0,1"))
                     (rule "polySimp_mulComm0" (formula "29") (term "1,0,1"))
                     (rule "polySimp_sepPosMonomial" (formula "29") (term "1"))
                     (rule "inEqSimp_contradEq3" (formula "29") (term "1") (ifseqformula "3"))
                     (rule "polySimp_mulAssoc" (formula "29") (term "1,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "29") (term "0,1,0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0,1"))
                     (rule "polySimp_pullOutFactor0b" (formula "29") (term "0,0,1"))
                     (rule "add_literals" (formula "29") (term "1,1,0,0,1"))
                     (rule "times_zero_1" (formula "29") (term "1,0,0,1"))
                     (rule "add_zero_right" (formula "29") (term "0,0,1"))
                     (rule "qeq_literals" (formula "29") (term "0,1"))
                      (builtin "One Step Simplification" (formula "29"))
                     (rule "inEqSimp_contradInEq1" (formula "29") (term "0,0") (ifseqformula "4"))
                     (rule "qeq_literals" (formula "29") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "29"))
                     (rule "polyDiv_pullOut" (formula "10") (term "0") (inst "polyDivCoeff=quotient_3"))
                     (rule "polySimp_mulComm1" (formula "10") (term "1,0,0,2,0"))
                     (rule "polySimp_mulComm0" (formula "10") (term "0,1,0,0,2,0"))
                     (rule "polySimp_addComm0" (formula "10") (term "2,0"))
                     (rule "applyEq" (formula "10") (term "0,1,0,1,2,0") (ifseqformula "12"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,2,0"))
                     (rule "polySimp_pullOutFactor0" (formula "10") (term "0,1,2,0"))
                     (rule "add_literals" (formula "10") (term "1,0,1,2,0"))
                     (rule "times_zero_1" (formula "10") (term "0,1,2,0"))
                     (rule "inEqSimp_contradEq7" (formula "10") (term "0,0") (ifseqformula "4"))
                     (rule "times_zero_1" (formula "10") (term "1,0,0,0,0"))
                     (rule "add_zero_right" (formula "10") (term "0,0,0,0"))
                     (rule "leq_literals" (formula "10") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "10"))
                     (rule "polySimp_homoEq" (formula "10"))
                     (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "10") (term "1,0"))
                     (rule "polySimp_mulComm0" (formula "10") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "10") (term "0"))
                     (rule "polySimp_pullOutFactor1" (formula "10") (term "0,0"))
                     (rule "add_literals" (formula "10") (term "1,0,0"))
                     (rule "times_zero_1" (formula "10") (term "0,0"))
                     (rule "add_zero_left" (formula "10") (term "0"))
                     (rule "polySimp_invertEq" (formula "10"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                     (rule "times_zero_2" (formula "10") (term "1"))
                     (rule "polySimp_elimOne" (formula "10") (term "0"))
                     (rule "polyDiv_zero" (formula "10") (term "0"))
                      (builtin "One Step Simplification" (formula "10"))
                     (rule "div_literals" (formula "10") (term "0,1"))
                     (rule "inEqSimp_contradEq7" (formula "10") (term "0,0") (ifseqformula "4"))
                     (rule "times_zero_1" (formula "10") (term "1,0,0,0,0"))
                     (rule "add_zero_right" (formula "10") (term "0,0,0,0"))
                     (rule "leq_literals" (formula "10") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "10"))
                     (rule "true_left" (formula "10"))
                     (rule "polySimp_critPair" (formula "13") (ifseqformula "11"))
                     (rule "polySimp_mulComm0" (formula "13") (term "1,1,1,0"))
                     (rule "polySimp_mulAssoc" (formula "13") (term "0,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "13") (term "0,0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "0,1,0,0"))
                     (rule "polySimp_elimOne" (formula "13") (term "0,1,0,0"))
                     (rule "polySimp_rightDist" (formula "13") (term "1,0"))
                     (rule "polySimp_mulComm1" (formula "13") (term "1,1,0"))
                     (rule "polySimp_mulAssoc" (formula "13") (term "0,1,0"))
                     (rule "polySimp_mulComm0" (formula "13") (term "0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "13") (term "0,0"))
                     (rule "polySimp_mulComm0" (formula "13") (term "0,0,0"))
                     (rule "polySimp_mulComm1" (formula "13") (term "1,0,0"))
                     (rule "polySimp_addAssoc" (formula "13") (term "0"))
                     (rule "polySimp_addComm1" (formula "13") (term "0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "13") (term "0"))
                     (rule "add_literals" (formula "13") (term "1,1,0"))
                     (rule "times_zero_1" (formula "13") (term "1,0"))
                     (rule "add_zero_right" (formula "13") (term "0"))
                     (rule "polySimp_addComm0" (formula "13") (term "0"))
                     (rule "polySimp_sepPosMonomial" (formula "13"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "1"))
                     (rule "polySimp_elimOne" (formula "13") (term "1"))
                     (rule "polyDiv_pullOut" (formula "26") (term "0") (inst "polyDivCoeff=quotient_4"))
                     (rule "polySimp_mulComm1" (formula "26") (term "1,0,0,2,0"))
                     (rule "polySimp_mulComm0" (formula "26") (term "0,1,0,0,2,0"))
                     (rule "polySimp_addComm0" (formula "26") (term "2,0"))
                     (rule "applyEq" (formula "26") (term "0,1,0,1,2,0") (ifseqformula "28"))
                     (rule "polySimp_mulLiterals" (formula "26") (term "1,0,1,2,0"))
                     (rule "polySimp_elimOne" (formula "26") (term "1,0,1,2,0"))
                     (rule "polySimp_pullOutFactor2" (formula "26") (term "0,1,2,0"))
                     (rule "add_literals" (formula "26") (term "1,0,1,2,0"))
                     (rule "times_zero_1" (formula "26") (term "0,1,2,0"))
                     (rule "inEqSimp_contradEq3" (formula "26") (term "0,0") (ifseqformula "1"))
                     (rule "times_zero_1" (formula "26") (term "1,0,0,0,0"))
                     (rule "add_zero_right" (formula "26") (term "0,0,0,0"))
                     (rule "qeq_literals" (formula "26") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "26"))
                     (rule "polySimp_homoEq" (formula "26"))
                     (rule "polySimp_mulComm0" (formula "26") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "26") (term "1,0"))
                     (rule "polySimp_mulComm0" (formula "26") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "26") (term "0"))
                     (rule "polySimp_pullOutFactor1" (formula "26") (term "0,0"))
                     (rule "add_literals" (formula "26") (term "1,0,0"))
                     (rule "times_zero_1" (formula "26") (term "0,0"))
                     (rule "add_zero_left" (formula "26") (term "0"))
                     (rule "polySimp_invertEq" (formula "26"))
                     (rule "times_zero_2" (formula "26") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "26") (term "0"))
                     (rule "polySimp_elimOne" (formula "26") (term "0"))
                     (rule "polyDiv_zero" (formula "26") (term "0"))
                      (builtin "One Step Simplification" (formula "26"))
                     (rule "div_literals" (formula "26") (term "0,1"))
                     (rule "inEqSimp_contradEq3" (formula "26") (term "0,0") (ifseqformula "1"))
                     (rule "times_zero_1" (formula "26") (term "1,0,0,0,0"))
                     (rule "add_zero_right" (formula "26") (term "0,0,0,0"))
                     (rule "qeq_literals" (formula "26") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "26"))
                     (rule "true_left" (formula "26"))
                     (rule "polySimp_critPair" (formula "27") (ifseqformula "25"))
                     (rule "polySimp_mulComm0" (formula "27") (term "1,1,1,0"))
                     (rule "polySimp_mulAssoc" (formula "27") (term "0,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "27") (term "0,0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "27") (term "0,1,0,0"))
                     (rule "polySimp_elimOne" (formula "27") (term "0,1,0,0"))
                     (rule "polySimp_rightDist" (formula "27") (term "1,0"))
                     (rule "polySimp_mulComm1" (formula "27") (term "1,1,0"))
                     (rule "polySimp_mulAssoc" (formula "27") (term "0,1,0"))
                     (rule "polySimp_mulComm0" (formula "27") (term "0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "27") (term "0,0"))
                     (rule "polySimp_mulComm0" (formula "27") (term "0,0,0"))
                     (rule "polySimp_mulComm1" (formula "27") (term "1,0,0"))
                     (rule "polySimp_addAssoc" (formula "27") (term "0"))
                     (rule "polySimp_addComm1" (formula "27") (term "0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "27") (term "0"))
                     (rule "add_literals" (formula "27") (term "1,1,0"))
                     (rule "times_zero_1" (formula "27") (term "1,0"))
                     (rule "add_zero_right" (formula "27") (term "0"))
                     (rule "polySimp_addComm0" (formula "27") (term "0"))
                     (rule "polySimp_sepPosMonomial" (formula "27"))
                     (rule "polySimp_mulLiterals" (formula "27") (term "1"))
                     (rule "polySimp_elimOne" (formula "27") (term "1"))
                     (rule "polyDiv_pullOut" (formula "23") (term "0") (inst "polyDivCoeff=quotient_5"))
                     (rule "polySimp_mulComm1" (formula "23") (term "1,0,0,2,0"))
                     (rule "polySimp_mulComm0" (formula "23") (term "0,1,0,0,2,0"))
                     (rule "polySimp_addComm0" (formula "23") (term "2,0"))
                     (rule "applyEq" (formula "23") (term "0,1,0,1,2,0") (ifseqformula "25"))
                     (rule "polySimp_mulLiterals" (formula "23") (term "1,0,1,2,0"))
                     (rule "polySimp_elimOne" (formula "23") (term "1,0,1,2,0"))
                     (rule "polySimp_pullOutFactor2" (formula "23") (term "0,1,2,0"))
                     (rule "add_literals" (formula "23") (term "1,0,1,2,0"))
                     (rule "times_zero_1" (formula "23") (term "0,1,2,0"))
                     (rule "inEqSimp_contradEq3" (formula "23") (term "0,0") (ifseqformula "1"))
                     (rule "times_zero_1" (formula "23") (term "1,0,0,0,0"))
                     (rule "add_zero_right" (formula "23") (term "0,0,0,0"))
                     (rule "qeq_literals" (formula "23") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "23"))
                     (rule "polySimp_homoEq" (formula "23"))
                     (rule "polySimp_mulComm0" (formula "23") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "23") (term "1,0"))
                     (rule "polySimp_mulComm0" (formula "23") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "23") (term "0"))
                     (rule "polySimp_pullOutFactor1" (formula "23") (term "0,0"))
                     (rule "add_literals" (formula "23") (term "1,0,0"))
                     (rule "times_zero_1" (formula "23") (term "0,0"))
                     (rule "add_zero_left" (formula "23") (term "0"))
                     (rule "polySimp_invertEq" (formula "23"))
                     (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                     (rule "times_zero_2" (formula "23") (term "1"))
                     (rule "polySimp_elimOne" (formula "23") (term "0"))
                     (rule "polyDiv_zero" (formula "23") (term "0"))
                      (builtin "One Step Simplification" (formula "23"))
                     (rule "div_literals" (formula "23") (term "0,1"))
                     (rule "inEqSimp_contradEq3" (formula "23") (term "0,0") (ifseqformula "1"))
                     (rule "times_zero_1" (formula "23") (term "1,0,0,0,0"))
                     (rule "add_zero_right" (formula "23") (term "0,0,0,0"))
                     (rule "qeq_literals" (formula "23") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "23"))
                     (rule "true_left" (formula "23"))
                     (rule "jdiv_axiom" (formula "28") (term "0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "28") (term "0,0,2,1"))
                     (rule "eqSymm" (formula "28"))
                     (rule "polySimp_elimOne" (formula "28") (term "0,0,2,0"))
                     (rule "inEqSimp_invertInEq1" (formula "28") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "28") (term "0,0,0"))
                     (rule "times_zero_2" (formula "28") (term "1,0,0"))
                     (rule "polySimp_elimOne" (formula "28") (term "0,0,0"))
                     (rule "inEqSimp_subsumption0" (formula "28") (term "0,0") (ifseqformula "15"))
                     (rule "leq_literals" (formula "28") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "28"))
                     (rule "eqSymm" (formula "28"))
                     (rule "applyEq" (formula "29") (term "0,0,0,0") (ifseqformula "28"))
                     (rule "polyDiv_pullOut" (formula "29") (term "0,0,0,0") (inst "polyDivCoeff=quotient_3"))
                     (rule "polySimp_mulComm1" (formula "29") (term "1,0,0,2,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "29") (term "0,1,0,0,2,0,0,0,0"))
                     (rule "polySimp_addComm0" (formula "29") (term "2,0,0,0,0"))
                     (rule "applyEq" (formula "29") (term "0,1,0,1,2,0,0,0,0") (ifseqformula "11"))
                     (rule "polySimp_mulLiterals" (formula "29") (term "1,0,1,2,0,0,0,0"))
                     (rule "polySimp_pullOutFactor0" (formula "29") (term "0,1,2,0,0,0,0"))
                     (rule "add_literals" (formula "29") (term "1,0,1,2,0,0,0,0"))
                     (rule "times_zero_1" (formula "29") (term "0,1,2,0,0,0,0"))
                     (rule "inEqSimp_contradEq7" (formula "29") (term "0,0,0,0,0") (ifseqformula "4"))
                     (rule "times_zero_1" (formula "29") (term "1,0,0,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "29") (term "0,0,0,0,0,0,0"))
                     (rule "leq_literals" (formula "29") (term "0,0,0,0,0,0"))
                      (builtin "One Step Simplification" (formula "29"))
                     (rule "polySimp_mulComm0" (formula "29") (term "0,0,0"))
                     (rule "polySimp_rightDist" (formula "29") (term "0,0,0"))
                     (rule "polySimp_homoEq" (formula "29") (term "0,0"))
                     (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "29") (term "0,1,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "29") (term "0,0,0"))
                     (rule "applyEq" (formula "29") (term "0,1,0,0,0,0") (ifseqformula "11"))
                     (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "29") (term "1,0,0,0,0"))
                     (rule "polySimp_pullOutFactor2" (formula "29") (term "0,0,0,0"))
                     (rule "add_literals" (formula "29") (term "1,0,0,0,0"))
                     (rule "times_zero_1" (formula "29") (term "0,0,0,0"))
                     (rule "add_zero_left" (formula "29") (term "0,0,0"))
                     (rule "polySimp_invertEq" (formula "29") (term "0,0"))
                     (rule "times_zero_2" (formula "29") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "29") (term "0,0,0"))
                     (rule "polySimp_elimOne" (formula "29") (term "0,0,0"))
                     (rule "polyDiv_zero" (formula "29") (term "0,0,0,0"))
                     (rule "div_literals" (formula "29") (term "1,0,0,0,0"))
                     (rule "inEqSimp_contradEq7" (formula "29") (term "0,0,0,0,0") (ifseqformula "4"))
                     (rule "times_zero_1" (formula "29") (term "1,0,0,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "29") (term "0,0,0,0,0,0,0"))
                     (rule "leq_literals" (formula "29") (term "0,0,0,0,0,0"))
                      (builtin "One Step Simplification" (formula "29"))
                     (rule "times_zero_2" (formula "29") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "29"))
                     (rule "notLeft" (formula "29"))
                     (rule "polyDiv_pullOut" (formula "28") (term "1") (inst "polyDivCoeff=quotient_3"))
                     (rule "eqSymm" (formula "28"))
                     (rule "polySimp_mulComm1" (formula "28") (term "1,0,0,2,0"))
                     (rule "polySimp_mulComm0" (formula "28") (term "0,1,0,0,2,0"))
                     (rule "polySimp_addComm0" (formula "28") (term "2,0"))
                     (rule "applyEq" (formula "28") (term "0,1,0,1,2,0") (ifseqformula "11"))
                     (rule "polySimp_mulLiterals" (formula "28") (term "1,0,1,2,0"))
                     (rule "polySimp_pullOutFactor0" (formula "28") (term "0,1,2,0"))
                     (rule "add_literals" (formula "28") (term "1,0,1,2,0"))
                     (rule "times_zero_1" (formula "28") (term "0,1,2,0"))
                     (rule "inEqSimp_contradEq7" (formula "28") (term "0,0") (ifseqformula "4"))
                     (rule "times_zero_1" (formula "28") (term "1,0,0,0,0"))
                     (rule "add_zero_right" (formula "28") (term "0,0,0,0"))
                     (rule "leq_literals" (formula "28") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "28"))
                     (rule "eqSymm" (formula "28"))
                     (rule "polyDiv_zero" (formula "28") (term "1,1"))
                     (rule "div_literals" (formula "28") (term "1,1,1"))
                     (rule "polySimp_homoEq" (formula "28"))
                     (rule "polySimp_addComm1" (formula "28") (term "0"))
                     (rule "polySimp_sepPosMonomial" (formula "28"))
                     (rule "polySimp_mulComm0" (formula "28") (term "1"))
                     (rule "polySimp_rightDist" (formula "28") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "28") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "28") (term "1,1"))
                     (rule "polySimp_mulComm0" (formula "28") (term "0,1"))
                     (rule "inEqSimp_contradEq7" (formula "28") (term "0,0") (ifseqformula "4"))
                     (rule "times_zero_1" (formula "28") (term "1,0,0,0,0"))
                     (rule "add_zero_right" (formula "28") (term "0,0,0,0"))
                     (rule "leq_literals" (formula "28") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "28"))
                     (rule "polySimp_homoEq" (formula "28"))
                     (rule "times_zero_2" (formula "28") (term "1,0"))
                     (rule "add_zero_right" (formula "28") (term "0"))
                     (rule "polySimp_sepPosMonomial" (formula "28"))
                     (rule "polySimp_mulLiterals" (formula "28") (term "1"))
                     (rule "polySimp_elimOne" (formula "28") (term "1"))
                     (rule "jdiv_axiom" (formula "30") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "0,0,2,1"))
                     (rule "eqSymm" (formula "1"))
                     (rule "polySimp_elimOne" (formula "1") (term "0,0,2,0"))
                     (rule "inEqSimp_invertInEq1" (formula "1") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0"))
                     (rule "times_zero_2" (formula "1") (term "1,0,0"))
                     (rule "polySimp_elimOne" (formula "1") (term "0,0,0"))
                     (rule "inEqSimp_subsumption0" (formula "1") (term "0,0") (ifseqformula "18"))
                     (rule "leq_literals" (formula "1") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "eqSymm" (formula "1"))
                     (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "1"))
                     (rule "polyDiv_pullOut" (formula "31") (term "0,0") (inst "polyDivCoeff=quotient_2"))
                     (rule "polySimp_mulComm1" (formula "31") (term "1,0,0,2,0,0"))
                     (rule "polySimp_mulComm0" (formula "31") (term "0,1,0,0,2,0,0"))
                     (rule "polySimp_addComm0" (formula "31") (term "2,0,0"))
                     (rule "applyEq" (formula "31") (term "0,1,0,1,2,0,0") (ifseqformula "15"))
                     (rule "polySimp_mulLiterals" (formula "31") (term "1,0,1,2,0,0"))
                     (rule "polySimp_pullOutFactor0" (formula "31") (term "0,1,2,0,0"))
                     (rule "add_literals" (formula "31") (term "1,0,1,2,0,0"))
                     (rule "times_zero_1" (formula "31") (term "0,1,2,0,0"))
                     (rule "inEqSimp_contradEq7" (formula "31") (term "0,0,0") (ifseqformula "5"))
                     (rule "times_zero_1" (formula "31") (term "1,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "31") (term "0,0,0,0,0"))
                     (rule "leq_literals" (formula "31") (term "0,0,0,0"))
                      (builtin "One Step Simplification" (formula "31"))
                     (rule "polySimp_mulComm0" (formula "31") (term "0"))
                     (rule "polySimp_rightDist" (formula "31") (term "0"))
                     (rule "polySimp_homoEq" (formula "31"))
                     (rule "polySimp_mulComm0" (formula "31") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "31") (term "1,0"))
                     (rule "polySimp_mulComm0" (formula "31") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "31") (term "0"))
                     (rule "applyEq" (formula "31") (term "0,1,0,0") (ifseqformula "15"))
                     (rule "polySimp_mulLiterals" (formula "31") (term "1,0,0"))
                     (rule "polySimp_pullOutFactor0" (formula "31") (term "0,0"))
                     (rule "add_literals" (formula "31") (term "1,0,0"))
                     (rule "times_zero_1" (formula "31") (term "0,0"))
                     (rule "add_zero_left" (formula "31") (term "0"))
                     (rule "polySimp_invertEq" (formula "31"))
                     (rule "times_zero_2" (formula "31") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "31") (term "0"))
                     (rule "polySimp_elimOne" (formula "31") (term "0"))
                     (rule "polyDiv_zero" (formula "31") (term "0,0"))
                     (rule "div_literals" (formula "31") (term "1,0,0"))
                     (rule "inEqSimp_contradEq7" (formula "31") (term "0,0,0") (ifseqformula "5"))
                     (rule "times_zero_1" (formula "31") (term "1,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "31") (term "0,0,0,0,0"))
                     (rule "leq_literals" (formula "31") (term "0,0,0,0"))
                      (builtin "One Step Simplification" (formula "31"))
                     (rule "times_zero_2" (formula "31") (term "0"))
                      (builtin "One Step Simplification" (formula "31"))
                     (rule "closeTrue" (formula "31"))
                  )
               )
            )
            (branch "Case 2"
                (builtin "One Step Simplification" (formula "10"))
               (rule "closeTrue" (formula "10"))
            )
         )
         (branch "Exceptional Post (gcdHelp)"
             (builtin "One Step Simplification" (formula "8"))
             (builtin "One Step Simplification" (formula "7"))
            (rule "andLeft" (formula "7"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "8") (term "1,0") (ifseqformula "7"))
            (rule "andLeft" (formula "8"))
            (rule "andLeft" (formula "8"))
            (rule "andLeft" (formula "10"))
            (rule "notLeft" (formula "8"))
            (rule "close" (formula "11") (ifseqformula "10"))
         )
         (branch "Pre (gcdHelp)"
             (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "4")))
            (rule "inEqSimp_ltToLeq" (formula "2"))
            (rule "times_zero_1" (formula "2") (term "1,0,0"))
            (rule "add_zero_right" (formula "2") (term "0,0"))
            (rule "inEqSimp_gtToGeq" (formula "1"))
            (rule "polySimp_mulAssoc" (formula "1") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
            (rule "polySimp_elimOne" (formula "1") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "1") (term "0"))
            (rule "inEqSimp_ltToLeq" (formula "3"))
            (rule "times_zero_1" (formula "3") (term "1,0,0"))
            (rule "add_zero_right" (formula "3") (term "0,0"))
            (rule "inEqSimp_commuteGeq" (formula "6") (term "1"))
            (rule "inEqSimp_homoInEq0" (formula "6") (term "1"))
            (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1"))
            (rule "polySimp_elimOne" (formula "6") (term "1,0,1"))
            (rule "inEqSimp_invertInEq1" (formula "6") (term "0"))
            (rule "polySimp_mulLiterals" (formula "6") (term "0,0"))
            (rule "times_zero_2" (formula "6") (term "1,0"))
            (rule "polySimp_elimOne" (formula "6") (term "0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "2"))
            (rule "mul_literals" (formula "2") (term "1"))
            (rule "inEqSimp_sepPosMonomial1" (formula "1"))
            (rule "polySimp_mulComm0" (formula "1") (term "1"))
            (rule "polySimp_rightDist" (formula "1") (term "1"))
            (rule "mul_literals" (formula "1") (term "0,1"))
            (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
            (rule "polySimp_elimOne" (formula "1") (term "1,1"))
            (rule "inEqSimp_sepPosMonomial0" (formula "3"))
            (rule "mul_literals" (formula "3") (term "1"))
            (rule "inEqSimp_sepPosMonomial1" (formula "6") (term "1"))
            (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
            (rule "polySimp_elimOne" (formula "6") (term "1,1"))
            (rule "inEqSimp_subsumption1" (formula "6") (term "1") (ifseqformula "1"))
            (rule "inEqSimp_homoInEq0" (formula "6") (term "0,1"))
            (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,1"))
            (rule "add_literals" (formula "6") (term "1,1,0,0,1"))
            (rule "times_zero_1" (formula "6") (term "1,0,0,1"))
            (rule "add_zero_right" (formula "6") (term "0,0,1"))
            (rule "qeq_literals" (formula "6") (term "0,1"))
             (builtin "One Step Simplification" (formula "6"))
            (rule "inEqSimp_leqRight" (formula "6"))
            (rule "times_zero_1" (formula "1") (term "1,0,0"))
            (rule "add_zero_right" (formula "1") (term "0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "1"))
            (rule "mul_literals" (formula "1") (term "1"))
            (rule "inEqSimp_contradInEq1" (formula "3") (ifseqformula "1"))
            (rule "qeq_literals" (formula "3") (term "0"))
             (builtin "One Step Simplification" (formula "3"))
            (rule "closeFalse" (formula "3"))
         )
      )
      (branch "if x_2 false"
          (builtin "One Step Simplification" (formula "6"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "notLeft" (formula "1"))
         (rule "assignment" (formula "6") (term "1"))
          (builtin "One Step Simplification" (formula "6"))
         (rule "assignment" (formula "6") (term "1"))
          (builtin "One Step Simplification" (formula "6"))
         (rule "blockEmpty" (formula "6") (term "1"))
         (rule "returnUnfold" (formula "6") (term "1") (inst "#v0=x"))
         (rule "variableDeclarationAssign" (formula "6") (term "1"))
         (rule "variableDeclaration" (formula "6") (term "1") (newnames "x_3"))
          (builtin "Use Operation Contract" (formula "6") (newnames "heapBefore_gcdHelp,result_gcdHelp,exc_0,heapAfter_gcdHelp,anon_heap_gcdHelp") (contract "Gcd[Gcd::gcdHelp(int,int)].JML normal_behavior operation contract.0"))
         (branch "Post (gcdHelp)"
             (builtin "One Step Simplification" (formula "6"))
             (builtin "One Step Simplification" (formula "8"))
            (rule "andLeft" (formula "6"))
            (rule "andLeft" (formula "7"))
            (rule "andLeft" (formula "8"))
            (rule "assignment" (formula "10") (term "1"))
             (builtin "One Step Simplification" (formula "10"))
            (rule "polySimp_invertEq" (formula "8") (term "0,0"))
            (rule "polySimp_mulLiterals" (formula "8") (term "0,0,0"))
            (rule "times_zero_2" (formula "8") (term "1,0,0"))
            (rule "polySimp_elimOne" (formula "8") (term "0,0,0"))
            (rule "commute_and" (formula "8") (term "0,1"))
            (rule "commute_and_2" (formula "8") (term "0,0,1,1"))
            (rule "methodCallReturn" (formula "10") (term "1"))
            (rule "assignment" (formula "10") (term "1"))
             (builtin "One Step Simplification" (formula "10"))
            (rule "methodCallEmpty" (formula "10") (term "1"))
            (rule "tryEmpty" (formula "10") (term "1"))
             (builtin "One Step Simplification" (formula "10"))
            (rule "emptyModality" (formula "10") (term "1"))
            (rule "andRight" (formula "10"))
            (branch "Case 1"
               (rule "impRight" (formula "10"))
               (rule "andRight" (formula "11"))
               (branch "Case 1"
                  (rule "andRight" (formula "11"))
                  (branch "Case 1"
                      (builtin "One Step Simplification" (formula "1"))
                      (builtin "One Step Simplification" (formula "11"))
                     (rule "inEqSimp_gtRight" (formula "10"))
                     (rule "polySimp_mulAssoc" (formula "1") (term "0,0"))
                     (rule "polySimp_mulComm0" (formula "1") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "0,0"))
                     (rule "polySimp_elimOne" (formula "1") (term "0,0"))
                     (rule "polySimp_addComm0" (formula "1") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "4"))
                     (rule "times_zero_1" (formula "4") (term "1,0,0"))
                     (rule "add_zero_right" (formula "4") (term "0,0"))
                     (rule "inEqSimp_gtToGeq" (formula "10") (term "0,0,0,0,1,1"))
                     (rule "times_zero_1" (formula "10") (term "1,0,0,0,0,0,0,1,1"))
                     (rule "add_zero_right" (formula "10") (term "0,0,0,0,0,0,1,1"))
                     (rule "inEqSimp_ltToLeq" (formula "3"))
                     (rule "times_zero_1" (formula "3") (term "1,0,0"))
                     (rule "add_zero_right" (formula "3") (term "0,0"))
                     (rule "jmod_axiom" (formula "10") (term "0,0,0,1"))
                     (rule "polySimp_mulComm1" (formula "10") (term "1,0,0,0,1"))
                     (rule "jmod_axiom" (formula "10") (term "0,1,0,1,1"))
                     (rule "polySimp_mulComm1" (formula "10") (term "1,0,1,0,1,1"))
                     (rule "jmod_axiom" (formula "10") (term "0,1,0,1"))
                     (rule "polySimp_mulComm1" (formula "10") (term "1,0,1,0,1"))
                     (rule "jmod_axiom" (formula "10") (term "0,1,0,0,1,1"))
                     (rule "polySimp_mulComm1" (formula "10") (term "1,0,1,0,0,1,1"))
                     (rule "jmod_axiom" (formula "10") (term "0,1,0,0,0,1,1"))
                     (rule "polySimp_mulComm1" (formula "10") (term "1,0,1,0,0,0,1,1"))
                     (rule "jmod_axiom" (formula "11") (term "0"))
                     (rule "polySimp_mulComm1" (formula "11") (term "1,0"))
                     (rule "polySimp_sepNegMonomial" (formula "10") (term "0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "0,0,0,1"))
                     (rule "polySimp_elimOne" (formula "10") (term "0,0,0,1"))
                     (rule "polySimp_sepNegMonomial" (formula "10") (term "1,0,1,1"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "0,1,0,1,1"))
                     (rule "polySimp_elimOne" (formula "10") (term "0,1,0,1,1"))
                     (rule "polySimp_sepNegMonomial" (formula "10") (term "1,0,1"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "0,1,0,1"))
                     (rule "polySimp_elimOne" (formula "10") (term "0,1,0,1"))
                     (rule "polySimp_sepNegMonomial" (formula "10") (term "1,0,0,1,1"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "0,1,0,0,1,1"))
                     (rule "polySimp_elimOne" (formula "10") (term "0,1,0,0,1,1"))
                     (rule "polySimp_sepNegMonomial" (formula "10") (term "1,0,0,0,1,1"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "0,1,0,0,0,1,1"))
                     (rule "polySimp_elimOne" (formula "10") (term "0,1,0,0,0,1,1"))
                     (rule "polySimp_sepNegMonomial" (formula "11"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                     (rule "polySimp_elimOne" (formula "11") (term "0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                     (rule "polySimp_elimOne" (formula "1") (term "1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                     (rule "mul_literals" (formula "4") (term "1"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "0,0,0,0,1,1"))
                     (rule "mul_literals" (formula "10") (term "1,0,0,0,0,1,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                     (rule "mul_literals" (formula "3") (term "1"))
                     (rule "inEqSimp_contradEq3" (formula "10") (term "0,0") (ifseqformula "3"))
                     (rule "times_zero_1" (formula "10") (term "1,0,0,0,0"))
                     (rule "add_zero_right" (formula "10") (term "0,0,0,0"))
                     (rule "qeq_literals" (formula "10") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "10"))
                     (rule "andLeft" (formula "10"))
                     (rule "andLeft" (formula "10"))
                     (rule "inEqSimp_contradEq3" (formula "2") (term "0,0") (ifseqformula "4"))
                     (rule "times_zero_1" (formula "2") (term "1,0,0,0,0"))
                     (rule "add_zero_right" (formula "2") (term "0,0,0,0"))
                     (rule "qeq_literals" (formula "2") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "2"))
                     (rule "true_left" (formula "2"))
                     (rule "nnf_imp2or" (formula "11") (term "0"))
                     (rule "nnf_notAnd" (formula "11") (term "0,0"))
                     (rule "nnf_notAnd" (formula "11") (term "0,0,0"))
                     (rule "inEqSimp_notGeq" (formula "11") (term "0,0,0,0"))
                     (rule "mul_literals" (formula "11") (term "1,0,0,0,0,0,0"))
                     (rule "add_literals" (formula "11") (term "0,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "11") (term "0,0,0,0,0"))
                     (rule "jdiv_axiom" (formula "12") (term "0,0"))
                     (rule "eqSymm" (formula "1"))
                     (rule "inEqSimp_contradInEq0" (formula "1") (term "0,0") (ifseqformula "4"))
                     (rule "qeq_literals" (formula "1") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "eqSymm" (formula "1"))
                     (rule "applyEq" (formula "13") (term "0,0") (ifseqformula "1"))
                     (rule "polySimp_mulComm1" (formula "13") (term "0"))
                     (rule "polySimp_homoEq" (formula "13"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "1,0"))
                     (rule "polySimp_elimOne" (formula "13") (term "1,0"))
                     (rule "polySimp_sepPosMonomial" (formula "13"))
                     (rule "polyDiv_pullOut" (formula "13") (term "0,0") (inst "polyDivCoeff=jdiv(mul(a, Z(neglit(1(#)))), result_gcdHelp)"))
                     (rule "polySimp_mulComm1" (formula "13") (term "1,0,0,2,0,0"))
                     (rule "polySimp_addComm0" (formula "13") (term "2,0,0"))
                     (rule "applyEq" (formula "13") (term "0,1,0,1,2,0,0") (ifseqformula "10"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1,2,0,0"))
                     (rule "polySimp_pullOutFactor0" (formula "13") (term "0,1,2,0,0"))
                     (rule "add_literals" (formula "13") (term "1,0,1,2,0,0"))
                     (rule "times_zero_1" (formula "13") (term "0,1,2,0,0"))
                     (rule "polySimp_addComm0" (formula "13") (term "2,0,0"))
                     (rule "polyDiv_zero" (formula "13") (term "0,2,0,0"))
                     (rule "div_literals" (formula "13") (term "1,0,2,0,0"))
                     (rule "polySimp_addComm0" (formula "13") (term "2,0,0"))
                     (rule "polyDiv_pullOut" (formula "1") (term "0,1") (inst "polyDivCoeff=jdiv(mul(a, Z(neglit(1(#)))), result_gcdHelp)"))
                     (rule "eqSymm" (formula "1"))
                     (rule "polySimp_homoEq" (formula "1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,0"))
                     (rule "polySimp_elimOne" (formula "1") (term "1,0"))
                     (rule "polySimp_mulComm1" (formula "1") (term "1,0,0,2,1,0"))
                     (rule "polySimp_addComm0" (formula "1") (term "2,1,0"))
                     (rule "applyEq" (formula "1") (term "0,1,0,1,2,1,0") (ifseqformula "10"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,2,1,0"))
                     (rule "polySimp_pullOutFactor0" (formula "1") (term "0,1,2,1,0"))
                     (rule "add_literals" (formula "1") (term "1,0,1,2,1,0"))
                     (rule "times_zero_1" (formula "1") (term "0,1,2,1,0"))
                     (rule "polySimp_addComm0" (formula "1") (term "2,1,0"))
                     (rule "polySimp_sepPosMonomial" (formula "1"))
                     (rule "polyDiv_zero" (formula "1") (term "0,2,0"))
                     (rule "div_literals" (formula "1") (term "1,0,2,0"))
                     (rule "polySimp_addComm0" (formula "1") (term "2,0"))
                     (rule "applyEq" (formula "13") (term "0,0") (ifseqformula "1"))
                     (rule "polySimp_mulComm1" (formula "13") (term "0"))
                     (rule "polySimp_homoEq" (formula "13"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "1,0"))
                     (rule "polySimp_elimOne" (formula "13") (term "1,0"))
                     (rule "polySimp_sepPosMonomial" (formula "13"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "1"))
                     (rule "polySimp_elimOne" (formula "13") (term "1"))
                     (rule "jdiv_axiom" (formula "11") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "0,0,2,1"))
                     (rule "eqSymm" (formula "11"))
                     (rule "polySimp_elimOne" (formula "11") (term "0,0,2,0"))
                     (rule "inEqSimp_invertInEq1" (formula "11") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "0,0,0"))
                     (rule "times_zero_2" (formula "11") (term "1,0,0"))
                     (rule "polySimp_elimOne" (formula "11") (term "0,0,0"))
                     (rule "inEqSimp_subsumption0" (formula "11") (term "0,0") (ifseqformula "3"))
                     (rule "leq_literals" (formula "11") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "11"))
                     (rule "eqSymm" (formula "11"))
                     (rule "applyEq" (formula "12") (term "0,0") (ifseqformula "11"))
                     (rule "jdiv_axiom" (formula "10") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "0,0,2,1"))
                     (rule "eqSymm" (formula "10"))
                     (rule "polySimp_elimOne" (formula "10") (term "0,0,2,0"))
                     (rule "inEqSimp_invertInEq1" (formula "10") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "0,0,0"))
                     (rule "times_zero_2" (formula "10") (term "1,0,0"))
                     (rule "polySimp_elimOne" (formula "10") (term "0,0,0"))
                     (rule "inEqSimp_subsumption0" (formula "10") (term "0,0") (ifseqformula "4"))
                     (rule "leq_literals" (formula "10") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "10"))
                     (rule "eqSymm" (formula "10"))
                     (rule "applyEq" (formula "11") (term "0,0") (ifseqformula "10"))
                     (rule "applyEq" (formula "1") (term "0,2,0") (ifseqformula "10"))
                     (rule "div_axiom" (formula "1") (term "1,0") (inst "quotient=quotient_0"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "true_left" (formula "1"))
                     (rule "ifthenelse_split" (formula "1") (term "1,2,0"))
                     (branch "result_gcdHelp = 0 TRUE"
                        (rule "replace_known_left" (formula "2") (term "0,0") (ifseqformula "1"))
                         (builtin "One Step Simplification" (formula "2"))
                        (rule "eqSymm" (formula "2"))
                        (rule "polySimp_homoEq" (formula "2"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                        (rule "polySimp_elimOne" (formula "2") (term "1,0"))
                        (rule "applyEq" (formula "13") (term "1,0") (ifseqformula "1"))
                        (rule "eqSymm" (formula "13"))
                        (rule "applyEq" (formula "11") (term "1,0") (ifseqformula "1"))
                        (rule "eqSymm" (formula "11"))
                        (rule "applyEq" (formula "16") (term "1,0,0") (ifseqformula "1"))
                        (rule "polySimp_mulComm0" (formula "16") (term "0"))
                        (rule "applyEq" (formula "14") (term "1,0") (ifseqformula "1"))
                        (rule "times_zero_1" (formula "14") (term "0"))
                        (rule "eqSymm" (formula "14"))
                        (rule "applyEq" (formula "2") (term "1,1,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "12") (term "1,0") (ifseqformula "1"))
                        (rule "times_zero_1" (formula "12") (term "0"))
                        (rule "eqSymm" (formula "12"))
                        (rule "applyEq" (formula "15") (term "0,0,0,1,0") (ifseqformula "1"))
                        (rule "jdiv_axiom_inline" (formula "15") (term "0,0,1,0"))
                        (rule "qeq_literals" (formula "15") (term "0,0,0,1,0"))
                         (builtin "One Step Simplification" (formula "15"))
                        (rule "applyEq" (formula "11") (term "1,0") (ifseqformula "1"))
                        (rule "eqSymm" (formula "11"))
                        (rule "applyEq" (formula "13") (term "1,0") (ifseqformula "1"))
                        (rule "eqSymm" (formula "13"))
                        (rule "applyEq" (formula "16") (term "0,0") (ifseqformula "1"))
                        (rule "times_zero_2" (formula "16") (term "0"))
                        (rule "eqSymm" (formula "16"))
                        (rule "applyEq" (formula "15") (term "1,1,0") (ifseqformula "1"))
                        (rule "polySimp_invertEq" (formula "14"))
                        (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                        (rule "times_zero_2" (formula "14") (term "1"))
                        (rule "polySimp_elimOne" (formula "14") (term "0"))
                        (rule "applyEq" (formula "4") (term "0") (ifseqformula "14"))
                        (rule "leq_literals" (formula "4"))
                        (rule "closeFalse" (formula "4"))
                     )
                     (branch "result_gcdHelp = 0 FALSE"
                        (rule "add_zero_right" (formula "1") (term "2,0"))
                        (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "15"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "eqSymm" (formula "1"))
                        (rule "polySimp_homoEq" (formula "1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,0"))
                        (rule "polySimp_elimOne" (formula "1") (term "1,0"))
                        (rule "polySimp_sepPosMonomial" (formula "1"))
                        (rule "applyEq" (formula "16") (term "0,0") (ifseqformula "1"))
                        (rule "polySimp_mulComm1" (formula "16") (term "0"))
                        (rule "polySimp_homoEq" (formula "16"))
                        (rule "polySimp_mulLiterals" (formula "16") (term "1,0"))
                        (rule "polySimp_elimOne" (formula "16") (term "1,0"))
                        (rule "applyEq" (formula "16") (term "1,0") (ifseqformula "11"))
                        (rule "polySimp_pullOutFactor1" (formula "16") (term "0"))
                        (rule "add_literals" (formula "16") (term "1,0"))
                        (rule "times_zero_1" (formula "16") (term "0"))
                         (builtin "One Step Simplification" (formula "16"))
                        (rule "closeTrue" (formula "16"))
                     )
                  )
                  (branch "Case 2"
                      (builtin "One Step Simplification" (formula "1"))
                      (builtin "One Step Simplification" (formula "11"))
                     (rule "inEqSimp_gtRight" (formula "10"))
                     (rule "polySimp_mulAssoc" (formula "1") (term "0,0"))
                     (rule "polySimp_mulComm0" (formula "1") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "0,0"))
                     (rule "polySimp_elimOne" (formula "1") (term "0,0"))
                     (rule "polySimp_addComm0" (formula "1") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "4"))
                     (rule "times_zero_1" (formula "4") (term "1,0,0"))
                     (rule "add_zero_right" (formula "4") (term "0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "3"))
                     (rule "times_zero_1" (formula "3") (term "1,0,0"))
                     (rule "add_zero_right" (formula "3") (term "0,0"))
                     (rule "inEqSimp_gtToGeq" (formula "10") (term "0,0,0,0,1,1"))
                     (rule "times_zero_1" (formula "10") (term "1,0,0,0,0,0,0,1,1"))
                     (rule "add_zero_right" (formula "10") (term "0,0,0,0,0,0,1,1"))
                     (rule "jmod_axiom" (formula "10") (term "0,0,0,1"))
                     (rule "polySimp_mulComm1" (formula "10") (term "1,0,0,0,1"))
                     (rule "jmod_axiom" (formula "10") (term "0,1,0,1"))
                     (rule "polySimp_mulComm1" (formula "10") (term "1,0,1,0,1"))
                     (rule "jmod_axiom" (formula "10") (term "0,1,0,0,0,1,1"))
                     (rule "polySimp_mulComm1" (formula "10") (term "1,0,1,0,0,0,1,1"))
                     (rule "jmod_axiom" (formula "10") (term "0,1,0,0,1,1"))
                     (rule "polySimp_mulComm1" (formula "10") (term "1,0,1,0,0,1,1"))
                     (rule "jmod_axiom" (formula "10") (term "0,1,0,1,1"))
                     (rule "polySimp_mulComm1" (formula "10") (term "1,0,1,0,1,1"))
                     (rule "jmod_axiom" (formula "11") (term "0"))
                     (rule "polySimp_mulComm1" (formula "11") (term "1,0"))
                     (rule "polySimp_sepNegMonomial" (formula "10") (term "0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "0,0,0,1"))
                     (rule "polySimp_elimOne" (formula "10") (term "0,0,0,1"))
                     (rule "polySimp_sepNegMonomial" (formula "10") (term "1,0,1"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "0,1,0,1"))
                     (rule "polySimp_elimOne" (formula "10") (term "0,1,0,1"))
                     (rule "polySimp_sepNegMonomial" (formula "10") (term "1,0,0,0,1,1"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "0,1,0,0,0,1,1"))
                     (rule "polySimp_elimOne" (formula "10") (term "0,1,0,0,0,1,1"))
                     (rule "polySimp_sepNegMonomial" (formula "10") (term "1,0,0,1,1"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "0,1,0,0,1,1"))
                     (rule "polySimp_elimOne" (formula "10") (term "0,1,0,0,1,1"))
                     (rule "polySimp_sepNegMonomial" (formula "10") (term "1,0,1,1"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "0,1,0,1,1"))
                     (rule "polySimp_elimOne" (formula "10") (term "0,1,0,1,1"))
                     (rule "polySimp_sepNegMonomial" (formula "11"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                     (rule "polySimp_elimOne" (formula "11") (term "0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                     (rule "polySimp_elimOne" (formula "1") (term "1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                     (rule "mul_literals" (formula "4") (term "1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                     (rule "mul_literals" (formula "3") (term "1"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "0,0,0,0,1,1"))
                     (rule "mul_literals" (formula "10") (term "1,0,0,0,0,1,1"))
                     (rule "inEqSimp_contradEq3" (formula "10") (term "0,0") (ifseqformula "3"))
                     (rule "times_zero_1" (formula "10") (term "1,0,0,0,0"))
                     (rule "add_zero_right" (formula "10") (term "0,0,0,0"))
                     (rule "qeq_literals" (formula "10") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "10"))
                     (rule "andLeft" (formula "10"))
                     (rule "andLeft" (formula "10"))
                     (rule "inEqSimp_contradEq3" (formula "2") (term "0,0") (ifseqformula "4"))
                     (rule "times_zero_1" (formula "2") (term "1,0,0,0,0"))
                     (rule "add_zero_right" (formula "2") (term "0,0,0,0"))
                     (rule "qeq_literals" (formula "2") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "2"))
                     (rule "true_left" (formula "2"))
                     (rule "nnf_imp2or" (formula "11") (term "0"))
                     (rule "nnf_notAnd" (formula "11") (term "0,0"))
                     (rule "nnf_notAnd" (formula "11") (term "0,0,0"))
                     (rule "inEqSimp_notGeq" (formula "11") (term "0,0,0,0"))
                     (rule "mul_literals" (formula "11") (term "1,0,0,0,0,0,0"))
                     (rule "add_literals" (formula "11") (term "0,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "11") (term "0,0,0,0,0"))
                     (rule "jdiv_axiom" (formula "12") (term "0,0"))
                     (rule "eqSymm" (formula "1"))
                     (rule "inEqSimp_contradInEq0" (formula "1") (term "0,0") (ifseqformula "3"))
                     (rule "qeq_literals" (formula "1") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "eqSymm" (formula "1"))
                     (rule "applyEq" (formula "13") (term "0,0") (ifseqformula "1"))
                     (rule "polySimp_mulComm1" (formula "13") (term "0"))
                     (rule "polySimp_homoEq" (formula "13"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "1,0"))
                     (rule "polySimp_elimOne" (formula "13") (term "1,0"))
                     (rule "polySimp_sepPosMonomial" (formula "13"))
                     (rule "polyDiv_pullOut" (formula "13") (term "0,0") (inst "polyDivCoeff=jdiv(mul(b, Z(neglit(1(#)))), result_gcdHelp)"))
                     (rule "polySimp_mulComm1" (formula "13") (term "1,0,0,2,0,0"))
                     (rule "polySimp_addComm0" (formula "13") (term "2,0,0"))
                     (rule "applyEq" (formula "13") (term "0,1,0,1,2,0,0") (ifseqformula "11"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1,2,0,0"))
                     (rule "polySimp_pullOutFactor0" (formula "13") (term "0,1,2,0,0"))
                     (rule "add_literals" (formula "13") (term "1,0,1,2,0,0"))
                     (rule "times_zero_1" (formula "13") (term "0,1,2,0,0"))
                     (rule "polySimp_addComm0" (formula "13") (term "2,0,0"))
                     (rule "polyDiv_zero" (formula "13") (term "0,2,0,0"))
                     (rule "div_literals" (formula "13") (term "1,0,2,0,0"))
                     (rule "polySimp_addComm0" (formula "13") (term "2,0,0"))
                     (rule "polyDiv_pullOut" (formula "1") (term "0,1") (inst "polyDivCoeff=jdiv(mul(b, Z(neglit(1(#)))), result_gcdHelp)"))
                     (rule "eqSymm" (formula "1"))
                     (rule "polySimp_homoEq" (formula "1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,0"))
                     (rule "polySimp_elimOne" (formula "1") (term "1,0"))
                     (rule "polySimp_mulComm1" (formula "1") (term "1,0,0,2,1,0"))
                     (rule "polySimp_addComm0" (formula "1") (term "2,1,0"))
                     (rule "applyEq" (formula "1") (term "0,1,0,1,2,1,0") (ifseqformula "11"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,2,1,0"))
                     (rule "polySimp_pullOutFactor0" (formula "1") (term "0,1,2,1,0"))
                     (rule "add_literals" (formula "1") (term "1,0,1,2,1,0"))
                     (rule "times_zero_1" (formula "1") (term "0,1,2,1,0"))
                     (rule "polySimp_addComm0" (formula "1") (term "2,1,0"))
                     (rule "polySimp_sepPosMonomial" (formula "1"))
                     (rule "polyDiv_zero" (formula "1") (term "0,2,0"))
                     (rule "div_literals" (formula "1") (term "1,0,2,0"))
                     (rule "polySimp_addComm0" (formula "1") (term "2,0"))
                     (rule "applyEq" (formula "13") (term "0,0") (ifseqformula "1"))
                     (rule "polySimp_mulComm1" (formula "13") (term "0"))
                     (rule "polySimp_homoEq" (formula "13"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "1,0"))
                     (rule "polySimp_elimOne" (formula "13") (term "1,0"))
                     (rule "polySimp_sepPosMonomial" (formula "13"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "1"))
                     (rule "polySimp_elimOne" (formula "13") (term "1"))
                     (rule "jdiv_axiom" (formula "11") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "0,0,2,1"))
                     (rule "eqSymm" (formula "11"))
                     (rule "polySimp_elimOne" (formula "11") (term "0,0,2,0"))
                     (rule "inEqSimp_invertInEq1" (formula "11") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "0,0,0"))
                     (rule "times_zero_2" (formula "11") (term "1,0,0"))
                     (rule "polySimp_elimOne" (formula "11") (term "0,0,0"))
                     (rule "inEqSimp_subsumption0" (formula "11") (term "0,0") (ifseqformula "3"))
                     (rule "leq_literals" (formula "11") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "11"))
                     (rule "eqSymm" (formula "11"))
                     (rule "applyEq" (formula "12") (term "0,0") (ifseqformula "11"))
                     (rule "applyEq" (formula "1") (term "0,2,0") (ifseqformula "11"))
                     (rule "jdiv_axiom" (formula "10") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "0,0,2,1"))
                     (rule "eqSymm" (formula "10"))
                     (rule "polySimp_elimOne" (formula "10") (term "0,0,2,0"))
                     (rule "inEqSimp_invertInEq1" (formula "10") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "0,0,0"))
                     (rule "times_zero_2" (formula "10") (term "1,0,0"))
                     (rule "polySimp_elimOne" (formula "10") (term "0,0,0"))
                     (rule "inEqSimp_subsumption0" (formula "10") (term "0,0") (ifseqformula "4"))
                     (rule "leq_literals" (formula "10") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "10"))
                     (rule "eqSymm" (formula "10"))
                     (rule "applyEq" (formula "11") (term "0,0") (ifseqformula "10"))
                     (rule "div_axiom" (formula "1") (term "1,0") (inst "quotient=quotient_0"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "true_left" (formula "1"))
                     (rule "ifthenelse_split" (formula "1") (term "1,2,0"))
                     (branch "result_gcdHelp = 0 TRUE"
                        (rule "replace_known_left" (formula "2") (term "0,0") (ifseqformula "1"))
                         (builtin "One Step Simplification" (formula "2"))
                        (rule "eqSymm" (formula "2"))
                        (rule "polySimp_homoEq" (formula "2"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                        (rule "polySimp_elimOne" (formula "2") (term "1,0"))
                        (rule "applyEq" (formula "14") (term "1,0") (ifseqformula "1"))
                        (rule "times_zero_1" (formula "14") (term "0"))
                        (rule "eqSymm" (formula "14"))
                        (rule "applyEq" (formula "15") (term "0,0,0,1,0") (ifseqformula "1"))
                        (rule "jdiv_axiom_inline" (formula "15") (term "0,0,1,0"))
                        (rule "qeq_literals" (formula "15") (term "0,0,0,1,0"))
                         (builtin "One Step Simplification" (formula "15"))
                        (rule "applyEq" (formula "16") (term "1,0,0") (ifseqformula "1"))
                        (rule "polySimp_mulComm0" (formula "16") (term "0"))
                        (rule "applyEq" (formula "2") (term "1,1,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "13") (term "1,0") (ifseqformula "1"))
                        (rule "eqSymm" (formula "13"))
                        (rule "applyEq" (formula "12") (term "1,0") (ifseqformula "1"))
                        (rule "times_zero_1" (formula "12") (term "0"))
                        (rule "eqSymm" (formula "12"))
                        (rule "applyEq" (formula "11") (term "1,0") (ifseqformula "1"))
                        (rule "eqSymm" (formula "11"))
                        (rule "applyEq" (formula "16") (term "0,0") (ifseqformula "1"))
                        (rule "times_zero_2" (formula "16") (term "0"))
                        (rule "eqSymm" (formula "16"))
                        (rule "applyEq" (formula "13") (term "1,0") (ifseqformula "1"))
                        (rule "eqSymm" (formula "13"))
                        (rule "applyEq" (formula "11") (term "1,0") (ifseqformula "1"))
                        (rule "eqSymm" (formula "11"))
                        (rule "applyEq" (formula "15") (term "1,1,0") (ifseqformula "1"))
                        (rule "polySimp_invertEq" (formula "14"))
                        (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                        (rule "times_zero_2" (formula "14") (term "1"))
                        (rule "polySimp_elimOne" (formula "14") (term "0"))
                        (rule "close" (formula "16") (ifseqformula "14"))
                     )
                     (branch "result_gcdHelp = 0 FALSE"
                        (rule "add_zero_right" (formula "1") (term "2,0"))
                        (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "15"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "eqSymm" (formula "1"))
                        (rule "polySimp_homoEq" (formula "1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,0"))
                        (rule "polySimp_elimOne" (formula "1") (term "1,0"))
                        (rule "polySimp_sepPosMonomial" (formula "1"))
                        (rule "applyEq" (formula "16") (term "0,0") (ifseqformula "1"))
                        (rule "polySimp_mulComm1" (formula "16") (term "0"))
                        (rule "polySimp_homoEq" (formula "16"))
                        (rule "polySimp_mulLiterals" (formula "16") (term "1,0"))
                        (rule "polySimp_elimOne" (formula "16") (term "1,0"))
                        (rule "applyEq" (formula "16") (term "1,0") (ifseqformula "13"))
                        (rule "polySimp_pullOutFactor1" (formula "16") (term "0"))
                        (rule "add_literals" (formula "16") (term "1,0"))
                        (rule "times_zero_1" (formula "16") (term "0"))
                         (builtin "One Step Simplification" (formula "16"))
                        (rule "closeTrue" (formula "16"))
                     )
                  )
               )
               (branch "Case 2"
                   (builtin "One Step Simplification" (formula "1"))
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "allRight" (formula "11") (inst "sk=x_0"))
                  (rule "impRight" (formula "11"))
                  (rule "andLeft" (formula "1"))
                  (rule "andLeft" (formula "1"))
                  (rule "inEqSimp_gtRight" (formula "13"))
                  (rule "polySimp_mulAssoc" (formula "1") (term "0,0"))
                  (rule "polySimp_mulComm0" (formula "1") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "0,0"))
                  (rule "polySimp_elimOne" (formula "1") (term "0,0"))
                  (rule "polySimp_addComm0" (formula "1") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "6"))
                  (rule "times_zero_1" (formula "6") (term "1,0,0"))
                  (rule "add_zero_right" (formula "6") (term "0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "7"))
                  (rule "times_zero_1" (formula "7") (term "1,0,0"))
                  (rule "add_zero_right" (formula "7") (term "0,0"))
                  (rule "inEqSimp_gtToGeq" (formula "13") (term "0,0,0,0,1,1"))
                  (rule "times_zero_1" (formula "13") (term "1,0,0,0,0,0,0,1,1"))
                  (rule "add_zero_right" (formula "13") (term "0,0,0,0,0,0,1,1"))
                  (rule "inEqSimp_gtToGeq" (formula "2"))
                  (rule "times_zero_1" (formula "2") (term "1,0,0"))
                  (rule "add_zero_right" (formula "2") (term "0,0"))
                  (rule "jmod_axiom" (formula "13") (term "0,1,0,0,0,1,1"))
                  (rule "polySimp_mulComm1" (formula "13") (term "1,0,1,0,0,0,1,1"))
                  (rule "jmod_axiom" (formula "13") (term "0,1,0,1"))
                  (rule "polySimp_mulComm1" (formula "13") (term "1,0,1,0,1"))
                  (rule "jmod_axiom" (formula "13") (term "0,1,0,0,1,1"))
                  (rule "polySimp_mulComm1" (formula "13") (term "1,0,1,0,0,1,1"))
                  (rule "jmod_axiom" (formula "13") (term "0,0,0,1"))
                  (rule "polySimp_mulComm1" (formula "13") (term "1,0,0,0,1"))
                  (rule "jmod_axiom" (formula "13") (term "0,1,0,1,1"))
                  (rule "polySimp_mulComm1" (formula "13") (term "1,0,1,0,1,1"))
                  (rule "jmod_axiom" (formula "14") (term "0"))
                  (rule "polySimp_mulComm1" (formula "14") (term "1,0"))
                  (rule "jmod_axiom" (formula "4") (term "0"))
                  (rule "polySimp_mulComm1" (formula "4") (term "1,0"))
                  (rule "jmod_axiom" (formula "3") (term "0"))
                  (rule "polySimp_mulComm1" (formula "3") (term "1,0"))
                  (rule "polySimp_sepNegMonomial" (formula "13") (term "1,0,0,0,1,1"))
                  (rule "polySimp_mulLiterals" (formula "13") (term "0,1,0,0,0,1,1"))
                  (rule "polySimp_elimOne" (formula "13") (term "0,1,0,0,0,1,1"))
                  (rule "polySimp_sepNegMonomial" (formula "13") (term "1,0,1"))
                  (rule "polySimp_mulLiterals" (formula "13") (term "0,1,0,1"))
                  (rule "polySimp_elimOne" (formula "13") (term "0,1,0,1"))
                  (rule "polySimp_sepNegMonomial" (formula "13") (term "1,0,0,1,1"))
                  (rule "polySimp_mulLiterals" (formula "13") (term "0,1,0,0,1,1"))
                  (rule "polySimp_elimOne" (formula "13") (term "0,1,0,0,1,1"))
                  (rule "polySimp_sepNegMonomial" (formula "13") (term "0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "13") (term "0,0,0,1"))
                  (rule "polySimp_elimOne" (formula "13") (term "0,0,0,1"))
                  (rule "polySimp_sepNegMonomial" (formula "13") (term "1,0,1,1"))
                  (rule "polySimp_mulLiterals" (formula "13") (term "0,1,0,1,1"))
                  (rule "polySimp_elimOne" (formula "13") (term "0,1,0,1,1"))
                  (rule "polySimp_sepNegMonomial" (formula "14"))
                  (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                  (rule "polySimp_elimOne" (formula "14") (term "0"))
                  (rule "polySimp_sepNegMonomial" (formula "4"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                  (rule "polySimp_elimOne" (formula "4") (term "0"))
                  (rule "polySimp_sepNegMonomial" (formula "3"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                  (rule "polySimp_elimOne" (formula "3") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                  (rule "polySimp_elimOne" (formula "1") (term "1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                  (rule "mul_literals" (formula "6") (term "1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "7"))
                  (rule "mul_literals" (formula "7") (term "1"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "0,0,0,0,1,1"))
                  (rule "mul_literals" (formula "13") (term "1,0,0,0,0,1,1"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                  (rule "mul_literals" (formula "2") (term "1"))
                  (rule "inEqSimp_contradEq3" (formula "13") (term "0,0") (ifseqformula "6"))
                  (rule "times_zero_1" (formula "13") (term "1,0,0,0,0"))
                  (rule "add_zero_right" (formula "13") (term "0,0,0,0"))
                  (rule "qeq_literals" (formula "13") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "13"))
                  (rule "andLeft" (formula "13"))
                  (rule "andLeft" (formula "13"))
                  (rule "inEqSimp_contradEq3" (formula "5") (term "0,0") (ifseqformula "7"))
                  (rule "times_zero_1" (formula "5") (term "1,0,0,0,0"))
                  (rule "add_zero_right" (formula "5") (term "0,0,0,0"))
                  (rule "qeq_literals" (formula "5") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "5"))
                  (rule "true_left" (formula "5"))
                  (rule "nnf_imp2or" (formula "14") (term "0"))
                  (rule "nnf_notAnd" (formula "14") (term "0,0"))
                  (rule "nnf_notAnd" (formula "14") (term "0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "14") (term "0,0,0,0"))
                  (rule "mul_literals" (formula "14") (term "1,0,0,0,0,0,0"))
                  (rule "add_literals" (formula "14") (term "0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "14") (term "0,0,0,0,0"))
                  (rule "jdiv_axiom" (formula "15") (term "0,0"))
                  (rule "eqSymm" (formula "1"))
                  (rule "jdiv_axiom" (formula "5") (term "0,0"))
                  (rule "eqSymm" (formula "5"))
                  (rule "inEqSimp_contradInEq0" (formula "5") (term "0,0") (ifseqformula "7"))
                  (rule "qeq_literals" (formula "5") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "5"))
                  (rule "eqSymm" (formula "5"))
                  (rule "applyEq" (formula "6") (term "0,0") (ifseqformula "5"))
                  (rule "polySimp_mulComm1" (formula "6") (term "0"))
                  (rule "polySimp_homoEq" (formula "6"))
                  (rule "polySimp_mulLiterals" (formula "6") (term "1,0"))
                  (rule "polySimp_elimOne" (formula "6") (term "1,0"))
                  (rule "polySimp_sepPosMonomial" (formula "6"))
                  (rule "jdiv_axiom" (formula "4") (term "0,0"))
                  (rule "eqSymm" (formula "4"))
                  (rule "inEqSimp_contradInEq0" (formula "4") (term "0,0") (ifseqformula "9"))
                  (rule "qeq_literals" (formula "4") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "4"))
                  (rule "eqSymm" (formula "4"))
                  (rule "applyEq" (formula "5") (term "0,0") (ifseqformula "4"))
                  (rule "polySimp_mulComm1" (formula "5") (term "0"))
                  (rule "polySimp_homoEq" (formula "5"))
                  (rule "polySimp_mulLiterals" (formula "5") (term "1,0"))
                  (rule "polySimp_elimOne" (formula "5") (term "1,0"))
                  (rule "polySimp_sepPosMonomial" (formula "5"))
                  (rule "jdiv_axiom" (formula "15") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "15") (term "0,0,2,1"))
                  (rule "eqSymm" (formula "15"))
                  (rule "polySimp_elimOne" (formula "15") (term "0,0,2,0"))
                  (rule "inEqSimp_invertInEq1" (formula "15") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "15") (term "0,0,0"))
                  (rule "times_zero_2" (formula "15") (term "1,0,0"))
                  (rule "polySimp_elimOne" (formula "15") (term "0,0,0"))
                  (rule "inEqSimp_subsumption0" (formula "15") (term "0,0") (ifseqformula "9"))
                  (rule "leq_literals" (formula "15") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "15"))
                  (rule "eqSymm" (formula "15"))
                  (rule "applyEq" (formula "16") (term "0,0") (ifseqformula "15"))
                  (rule "jdiv_axiom" (formula "17") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "17") (term "0,0,2,1"))
                  (rule "eqSymm" (formula "17"))
                  (rule "polySimp_elimOne" (formula "17") (term "0,0,2,0"))
                  (rule "inEqSimp_invertInEq1" (formula "17") (term "0,0"))
                  (rule "times_zero_2" (formula "17") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "17") (term "0,0,0"))
                  (rule "polySimp_elimOne" (formula "17") (term "0,0,0"))
                  (rule "inEqSimp_subsumption0" (formula "17") (term "0,0") (ifseqformula "8"))
                  (rule "leq_literals" (formula "17") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "17"))
                  (rule "eqSymm" (formula "17"))
                  (rule "applyEq" (formula "18") (term "0,0") (ifseqformula "17"))
                  (rule "div_axiom" (formula "1") (term "0,2,0") (inst "quotient=quotient_0"))
                  (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,1"))
                  (rule "polySimp_mulComm0" (formula "1") (term "0,1,1,1"))
                  (rule "polySimp_mulComm0" (formula "1") (term "0,2,1,1"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,1,1,1,1"))
                  (rule "inEqSimp_contradEq7" (formula "1") (term "0") (ifseqformula "4"))
                  (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                  (rule "add_zero_right" (formula "1") (term "0,0,0"))
                  (rule "leq_literals" (formula "1") (term "0,0"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "andLeft" (formula "1"))
                  (rule "andLeft" (formula "1"))
                  (rule "applyEq" (formula "4") (term "0,2,0") (ifseqformula "1"))
                  (rule "inEqSimp_subsumption1" (formula "3") (term "0") (ifseqformula "6"))
                  (rule "leq_literals" (formula "3") (term "0,0"))
                   (builtin "One Step Simplification" (formula "3"))
                  (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "2"))
                  (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                  (rule "polySimp_elimOne" (formula "3") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "3") (term "0"))
                  (rule "polySimp_rightDist" (formula "3") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "3") (term "0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "3") (term "1,0,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0"))
                  (rule "add_literals" (formula "3") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "3") (term "1,0,0"))
                  (rule "add_zero_right" (formula "3") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                  (rule "mul_literals" (formula "3") (term "1"))
                  (rule "div_axiom" (formula "4") (term "1,0") (inst "quotient=quotient_1"))
                  (rule "polySimp_mulComm0" (formula "4") (term "0,1,1,1"))
                  (rule "polySimp_mulComm0" (formula "4") (term "0,2,1,1"))
                  (rule "polySimp_mulComm0" (formula "4") (term "0,1,0,1"))
                  (rule "polySimp_mulComm0" (formula "4") (term "1,1,1,1,1"))
                  (rule "inEqSimp_contradEq7" (formula "4") (term "0") (ifseqformula "7"))
                  (rule "times_zero_1" (formula "4") (term "1,0,0,0"))
                  (rule "add_zero_right" (formula "4") (term "0,0,0"))
                  (rule "leq_literals" (formula "4") (term "0,0"))
                   (builtin "One Step Simplification" (formula "4"))
                  (rule "andLeft" (formula "4"))
                  (rule "andLeft" (formula "4"))
                  (rule "applyEq" (formula "7") (term "1,0") (ifseqformula "4"))
                  (rule "inEqSimp_subsumption1" (formula "6") (term "0") (ifseqformula "9"))
                  (rule "leq_literals" (formula "6") (term "0,0"))
                   (builtin "One Step Simplification" (formula "6"))
                  (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "5"))
                  (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0"))
                  (rule "polySimp_elimOne" (formula "6") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "6") (term "0"))
                  (rule "polySimp_rightDist" (formula "6") (term "0,0,0"))
                  (rule "mul_literals" (formula "6") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor2b" (formula "6") (term "0,0"))
                  (rule "add_literals" (formula "6") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "6") (term "1,0,0"))
                  (rule "add_zero_right" (formula "6") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                  (rule "mul_literals" (formula "6") (term "1"))
                  (rule "div_axiom" (formula "12") (term "0,1") (inst "quotient=quotient_2"))
                  (rule "polySimp_mulComm0" (formula "12") (term "0,2,1,1"))
                  (rule "polySimp_mulComm0" (formula "12") (term "1,1,1,1,1"))
                  (rule "polySimp_mulComm0" (formula "12") (term "0,1,0,1"))
                  (rule "polySimp_mulComm0" (formula "12") (term "0,1,1,1"))
                  (rule "inEqSimp_contradEq7" (formula "12") (term "0") (ifseqformula "9"))
                  (rule "times_zero_1" (formula "12") (term "1,0,0,0"))
                  (rule "add_zero_right" (formula "12") (term "0,0,0"))
                  (rule "leq_literals" (formula "12") (term "0,0"))
                   (builtin "One Step Simplification" (formula "12"))
                  (rule "andLeft" (formula "12"))
                  (rule "andLeft" (formula "12"))
                  (rule "applyEq" (formula "16") (term "0,0") (ifseqformula "12"))
                  (rule "polySimp_mulComm0" (formula "16") (term "0"))
                  (rule "applyEq" (formula "14") (term "0,2") (ifseqformula "16"))
                  (rule "inEqSimp_homoInEq1" (formula "14") (term "2"))
                  (rule "polySimp_mulLiterals" (formula "14") (term "1,0,2"))
                  (rule "polySimp_elimOne" (formula "14") (term "1,0,2"))
                  (rule "polySimp_addComm1" (formula "14") (term "0,2"))
                  (rule "polySimp_pullOutFactor2b" (formula "14") (term "0,0,2"))
                  (rule "add_literals" (formula "14") (term "1,1,0,0,2"))
                  (rule "times_zero_1" (formula "14") (term "1,0,0,2"))
                  (rule "add_zero_right" (formula "14") (term "0,0,2"))
                  (rule "applyEq" (formula "14") (term "0,1") (ifseqformula "16"))
                  (rule "inEqSimp_homoInEq1" (formula "14") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1"))
                  (rule "polySimp_elimOne" (formula "14") (term "1,0,1"))
                  (rule "polySimp_addComm1" (formula "14") (term "0,1"))
                  (rule "polySimp_pullOutFactor2b" (formula "14") (term "0,0,1"))
                  (rule "add_literals" (formula "14") (term "1,1,0,0,1"))
                  (rule "times_zero_1" (formula "14") (term "1,0,0,1"))
                  (rule "add_zero_right" (formula "14") (term "0,0,1"))
                  (rule "applyEq" (formula "13") (term "0") (ifseqformula "16"))
                  (rule "inEqSimp_homoInEq0" (formula "13"))
                  (rule "polySimp_mulLiterals" (formula "13") (term "1,0"))
                  (rule "polySimp_pullOutFactor0" (formula "13") (term "0"))
                  (rule "add_literals" (formula "13") (term "1,0"))
                  (rule "times_zero_1" (formula "13") (term "0"))
                  (rule "qeq_literals" (formula "13"))
                  (rule "true_left" (formula "13"))
                  (rule "applyEq" (formula "14") (term "0,1") (ifseqformula "12"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "2"))
                  (rule "mul_literals" (formula "13") (term "1,2"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "13") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "13") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "13") (term "0,1"))
                  (rule "replace_known_left" (formula "13") (term "1") (ifseqformula "9"))
                  (rule "inEqSimp_subsumption1" (formula "13") (term "0") (ifseqformula "9"))
                  (rule "leq_literals" (formula "13") (term "0,0"))
                   (builtin "One Step Simplification" (formula "13"))
                  (rule "true_left" (formula "13"))
                  (rule "div_axiom" (formula "10") (term "0,1") (inst "quotient=quotient_3"))
                  (rule "polySimp_mulComm0" (formula "10") (term "1,1,1,1,1"))
                  (rule "polySimp_mulComm0" (formula "10") (term "0,1,1,1"))
                  (rule "polySimp_mulComm0" (formula "10") (term "0,2,1,1"))
                  (rule "polySimp_mulComm0" (formula "10") (term "0,1,0,1"))
                  (rule "inEqSimp_contradEq7" (formula "10") (term "0") (ifseqformula "9"))
                  (rule "times_zero_1" (formula "10") (term "1,0,0,0"))
                  (rule "add_zero_right" (formula "10") (term "0,0,0"))
                  (rule "leq_literals" (formula "10") (term "0,0"))
                   (builtin "One Step Simplification" (formula "10"))
                  (rule "andLeft" (formula "10"))
                  (rule "andLeft" (formula "10"))
                  (rule "applyEq" (formula "14") (term "0,0") (ifseqformula "10"))
                  (rule "polySimp_mulComm0" (formula "14") (term "0"))
                  (rule "applyEq" (formula "12") (term "0,1") (ifseqformula "14"))
                  (rule "inEqSimp_homoInEq1" (formula "12") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1"))
                  (rule "polySimp_elimOne" (formula "12") (term "1,0,1"))
                  (rule "polySimp_addComm1" (formula "12") (term "0,1"))
                  (rule "polySimp_pullOutFactor2b" (formula "12") (term "0,0,1"))
                  (rule "add_literals" (formula "12") (term "1,1,0,0,1"))
                  (rule "times_zero_1" (formula "12") (term "1,0,0,1"))
                  (rule "add_zero_right" (formula "12") (term "0,0,1"))
                  (rule "applyEq" (formula "12") (term "0,2") (ifseqformula "14"))
                  (rule "inEqSimp_homoInEq1" (formula "12") (term "2"))
                  (rule "polySimp_mulLiterals" (formula "12") (term "1,0,2"))
                  (rule "polySimp_elimOne" (formula "12") (term "1,0,2"))
                  (rule "polySimp_addComm1" (formula "12") (term "0,2"))
                  (rule "polySimp_pullOutFactor2b" (formula "12") (term "0,0,2"))
                  (rule "add_literals" (formula "12") (term "1,1,0,0,2"))
                  (rule "times_zero_1" (formula "12") (term "1,0,0,2"))
                  (rule "add_zero_right" (formula "12") (term "0,0,2"))
                  (rule "applyEq" (formula "11") (term "0") (ifseqformula "14"))
                  (rule "inEqSimp_homoInEq0" (formula "11"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "1,0"))
                  (rule "polySimp_pullOutFactor0" (formula "11") (term "0"))
                  (rule "add_literals" (formula "11") (term "1,0"))
                  (rule "times_zero_1" (formula "11") (term "0"))
                  (rule "qeq_literals" (formula "11"))
                  (rule "true_left" (formula "11"))
                  (rule "applyEq" (formula "12") (term "0,1") (ifseqformula "10"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "11") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "11") (term "0,1"))
                  (rule "replace_known_left" (formula "11") (term "1") (ifseqformula "9"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "2"))
                  (rule "mul_literals" (formula "11") (term "1,2"))
                  (rule "inEqSimp_subsumption1" (formula "11") (term "0") (ifseqformula "9"))
                  (rule "leq_literals" (formula "11") (term "0,0"))
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "true_left" (formula "11"))
                  (rule "div_axiom" (formula "23") (term "1") (inst "quotient=quotient_4"))
                  (rule "polySimp_mulComm0" (formula "23") (term "1,1,1,1,1"))
                  (rule "polySimp_mulComm0" (formula "23") (term "0,1,1,1"))
                  (rule "polySimp_mulComm0" (formula "23") (term "0,2,1,1"))
                  (rule "polySimp_mulComm0" (formula "23") (term "0,1,0,1"))
                  (rule "commute_and" (formula "23") (term "0,1"))
                  (rule "div_axiom" (formula "26") (term "1") (inst "quotient=quotient_5"))
                  (rule "polySimp_mulComm0" (formula "26") (term "1,1,1,1,1"))
                  (rule "polySimp_mulComm0" (formula "26") (term "0,1,0,1"))
                  (rule "polySimp_mulComm0" (formula "26") (term "0,2,1,1"))
                  (rule "polySimp_mulComm0" (formula "26") (term "0,1,1,1"))
                  (rule "commute_and" (formula "26") (term "0,1"))
                  (rule "ifthenelse_split" (formula "7") (term "0"))
                  (branch "result_gcdHelp >= 0 TRUE"
                     (rule "eqSymm" (formula "8"))
                     (rule "replace_known_left" (formula "24") (term "0,1,1") (ifseqformula "7"))
                      (builtin "One Step Simplification" (formula "24"))
                     (rule "replace_known_left" (formula "27") (term "0,1,1") (ifseqformula "7"))
                      (builtin "One Step Simplification" (formula "27"))
                     (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "8"))
                     (rule "polySimp_mulComm0" (formula "31") (term "0"))
                     (rule "inEqSimp_strengthen0" (formula "5") (ifseqformula "31"))
                     (rule "inEqSimp_contradEq3" (formula "31") (ifseqformula "5"))
                     (rule "polySimp_mulComm0" (formula "31") (term "1,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0"))
                     (rule "add_literals" (formula "31") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "31") (term "1,0,0"))
                     (rule "add_zero_right" (formula "31") (term "0,0"))
                     (rule "qeq_literals" (formula "31") (term "0"))
                      (builtin "One Step Simplification" (formula "31"))
                     (rule "false_right" (formula "31"))
                     (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "5"))
                     (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0"))
                     (rule "polySimp_elimOne" (formula "6") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "6") (term "0"))
                     (rule "polySimp_rightDist" (formula "6") (term "0,0,0"))
                     (rule "mul_literals" (formula "6") (term "0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
                     (rule "add_literals" (formula "6") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor2b" (formula "6") (term "0,0"))
                     (rule "add_literals" (formula "6") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "6") (term "1,0,0"))
                     (rule "add_zero_right" (formula "6") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                     (rule "mul_literals" (formula "6") (term "1"))
                     (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "6"))
                     (rule "leq_literals" (formula "11") (term "0"))
                      (builtin "One Step Simplification" (formula "11"))
                     (rule "true_left" (formula "11"))
                     (rule "cnf_rightDist" (formula "24"))
                     (rule "andLeft" (formula "24"))
                     (rule "commute_or" (formula "25"))
                     (rule "cnf_rightDist" (formula "28"))
                     (rule "andLeft" (formula "28"))
                     (rule "commute_or" (formula "29"))
                     (rule "cnf_rightDist" (formula "24"))
                     (rule "andLeft" (formula "24"))
                     (rule "commute_or" (formula "25"))
                     (rule "cnf_rightDist" (formula "29"))
                     (rule "andLeft" (formula "29"))
                     (rule "commute_or" (formula "30"))
                     (rule "polyDiv_pullOut" (formula "14") (term "0") (inst "polyDivCoeff=quotient_2"))
                     (rule "polySimp_mulComm1" (formula "14") (term "1,0,0,2,0"))
                     (rule "polySimp_mulComm0" (formula "14") (term "0,1,0,0,2,0"))
                     (rule "polySimp_addComm0" (formula "14") (term "2,0"))
                     (rule "applyEq" (formula "14") (term "0,1,0,1,2,0") (ifseqformula "16"))
                     (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,2,0"))
                     (rule "polySimp_elimOne" (formula "14") (term "1,0,1,2,0"))
                     (rule "polySimp_pullOutFactor2" (formula "14") (term "0,1,2,0"))
                     (rule "add_literals" (formula "14") (term "1,0,1,2,0"))
                     (rule "times_zero_1" (formula "14") (term "0,1,2,0"))
                     (rule "inEqSimp_contradEq7" (formula "14") (term "0,0") (ifseqformula "6"))
                     (rule "times_zero_1" (formula "14") (term "1,0,0,0,0"))
                     (rule "add_zero_right" (formula "14") (term "0,0,0,0"))
                     (rule "leq_literals" (formula "14") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "14"))
                     (rule "polySimp_homoEq" (formula "14"))
                     (rule "polySimp_mulComm0" (formula "14") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "14") (term "1,0"))
                     (rule "polySimp_mulComm0" (formula "14") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "14") (term "0"))
                     (rule "polySimp_pullOutFactor1" (formula "14") (term "0,0"))
                     (rule "add_literals" (formula "14") (term "1,0,0"))
                     (rule "times_zero_1" (formula "14") (term "0,0"))
                     (rule "add_zero_left" (formula "14") (term "0"))
                     (rule "polySimp_invertEq" (formula "14"))
                     (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                     (rule "times_zero_2" (formula "14") (term "1"))
                     (rule "polySimp_elimOne" (formula "14") (term "0"))
                     (rule "polyDiv_zero" (formula "14") (term "0"))
                      (builtin "One Step Simplification" (formula "14"))
                     (rule "div_literals" (formula "14") (term "0,1"))
                     (rule "inEqSimp_contradEq7" (formula "14") (term "0,0") (ifseqformula "6"))
                     (rule "times_zero_1" (formula "14") (term "1,0,0,0,0"))
                     (rule "add_zero_right" (formula "14") (term "0,0,0,0"))
                     (rule "leq_literals" (formula "14") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "14"))
                     (rule "true_left" (formula "14"))
                     (rule "polySimp_critPair" (formula "32") (ifseqformula "27"))
                     (rule "polySimp_mulComm0" (formula "32") (term "1,1,1,0"))
                     (rule "polySimp_mulAssoc" (formula "32") (term "0,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "32") (term "0,0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "32") (term "0,1,0,0"))
                     (rule "polySimp_elimOne" (formula "32") (term "0,1,0,0"))
                     (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                     (rule "polySimp_mulComm1" (formula "32") (term "1,1,0"))
                     (rule "polySimp_mulComm1" (formula "32") (term "0,1,1,0"))
                     (rule "polySimp_mulAssoc" (formula "32") (term "0,1,0"))
                     (rule "polySimp_rightDist" (formula "32") (term "0,0"))
                     (rule "polySimp_mulComm1" (formula "32") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "32") (term "0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "32") (term "0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "32") (term "0"))
                     (rule "add_literals" (formula "32") (term "1,1,0"))
                     (rule "times_zero_1" (formula "32") (term "1,0"))
                     (rule "add_zero_right" (formula "32") (term "0"))
                     (rule "polySimp_addComm0" (formula "32") (term "0"))
                     (rule "polySimp_sepPosMonomial" (formula "32"))
                     (rule "polySimp_mulLiterals" (formula "32") (term "1"))
                     (rule "polySimp_elimOne" (formula "32") (term "1"))
                     (rule "allLeft" (formula "34") (inst "t=x_0"))
                     (rule "applyEq" (formula "34") (term "0,0,1") (ifseqformula "9"))
                     (rule "polySimp_mulComm0" (formula "34") (term "0,1"))
                     (rule "inEqSimp_contradEq3" (formula "34") (term "1") (ifseqformula "5"))
                     (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,1"))
                     (rule "add_literals" (formula "34") (term "1,1,0,0,1"))
                     (rule "times_zero_1" (formula "34") (term "1,0,0,1"))
                     (rule "add_zero_right" (formula "34") (term "0,0,1"))
                     (rule "qeq_literals" (formula "34") (term "0,1"))
                      (builtin "One Step Simplification" (formula "34"))
                     (rule "inEqSimp_contradInEq1" (formula "34") (term "0,0") (ifseqformula "6"))
                     (rule "qeq_literals" (formula "34") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "34"))
                     (rule "allLeft" (formula "35") (inst "t=result_gcdHelp"))
                     (rule "applyEq" (formula "35") (term "0,0,0,1,0") (ifseqformula "31"))
                     (rule "replace_known_left" (formula "35") (term "0,1,0") (ifseqformula "33"))
                      (builtin "One Step Simplification" (formula "35"))
                     (rule "applyEq" (formula "35") (term "0,0,0,1,0") (ifseqformula "26"))
                     (rule "replace_known_left" (formula "35") (term "0,1,0") (ifseqformula "27"))
                      (builtin "One Step Simplification" (formula "35"))
                     (rule "polyDiv_pullOut" (formula "11") (term "0") (inst "polyDivCoeff=quotient_3"))
                     (rule "polySimp_mulComm1" (formula "11") (term "1,0,0,2,0"))
                     (rule "polySimp_mulComm0" (formula "11") (term "0,1,0,0,2,0"))
                     (rule "polySimp_addComm0" (formula "11") (term "2,0"))
                     (rule "applyEq" (formula "11") (term "0,1,0,1,2,0") (ifseqformula "13"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,2,0"))
                     (rule "polySimp_elimOne" (formula "11") (term "1,0,1,2,0"))
                     (rule "polySimp_pullOutFactor2" (formula "11") (term "0,1,2,0"))
                     (rule "add_literals" (formula "11") (term "1,0,1,2,0"))
                     (rule "times_zero_1" (formula "11") (term "0,1,2,0"))
                     (rule "inEqSimp_contradEq7" (formula "11") (term "0,0") (ifseqformula "6"))
                     (rule "times_zero_1" (formula "11") (term "1,0,0,0,0"))
                     (rule "add_zero_right" (formula "11") (term "0,0,0,0"))
                     (rule "leq_literals" (formula "11") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "11"))
                     (rule "polySimp_homoEq" (formula "11"))
                     (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "11") (term "1,0"))
                     (rule "polySimp_mulComm0" (formula "11") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "11") (term "0"))
                     (rule "polySimp_pullOutFactor1" (formula "11") (term "0,0"))
                     (rule "add_literals" (formula "11") (term "1,0,0"))
                     (rule "times_zero_1" (formula "11") (term "0,0"))
                     (rule "add_zero_left" (formula "11") (term "0"))
                     (rule "polySimp_invertEq" (formula "11"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                     (rule "times_zero_2" (formula "11") (term "1"))
                     (rule "polySimp_elimOne" (formula "11") (term "0"))
                     (rule "polyDiv_zero" (formula "11") (term "0"))
                      (builtin "One Step Simplification" (formula "11"))
                     (rule "div_literals" (formula "11") (term "0,1"))
                     (rule "inEqSimp_contradEq7" (formula "11") (term "0,0") (ifseqformula "6"))
                     (rule "times_zero_1" (formula "11") (term "1,0,0,0,0"))
                     (rule "add_zero_right" (formula "11") (term "0,0,0,0"))
                     (rule "leq_literals" (formula "11") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "11"))
                     (rule "true_left" (formula "11"))
                     (rule "polySimp_critPair" (formula "14") (ifseqformula "12"))
                     (rule "polySimp_mulComm0" (formula "14") (term "1,1,1,0"))
                     (rule "polySimp_mulAssoc" (formula "14") (term "0,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "14") (term "0,0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "14") (term "0,1,0,0"))
                     (rule "polySimp_elimOne" (formula "14") (term "0,1,0,0"))
                     (rule "polySimp_rightDist" (formula "14") (term "1,0"))
                     (rule "polySimp_mulComm1" (formula "14") (term "1,1,0"))
                     (rule "polySimp_mulAssoc" (formula "14") (term "0,1,0"))
                     (rule "polySimp_mulComm0" (formula "14") (term "0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "14") (term "0,0"))
                     (rule "polySimp_mulComm1" (formula "14") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "14") (term "0,0,0"))
                     (rule "polySimp_addAssoc" (formula "14") (term "0"))
                     (rule "polySimp_addComm1" (formula "14") (term "0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "14") (term "0"))
                     (rule "add_literals" (formula "14") (term "1,1,0"))
                     (rule "times_zero_1" (formula "14") (term "1,0"))
                     (rule "add_zero_right" (formula "14") (term "0"))
                     (rule "polySimp_addComm0" (formula "14") (term "0"))
                     (rule "polySimp_sepPosMonomial" (formula "14"))
                     (rule "polySimp_mulLiterals" (formula "14") (term "1"))
                     (rule "polySimp_elimOne" (formula "14") (term "1"))
                     (rule "cut_direct" (formula "28") (term "0"))
                     (branch "CUT: result_gcdHelp = 0 TRUE"
                         (builtin "One Step Simplification" (formula "29"))
                        (rule "true_left" (formula "29"))
                        (rule "replace_known_left" (formula "25") (term "0") (ifseqformula "28"))
                         (builtin "One Step Simplification" (formula "25"))
                        (rule "true_left" (formula "25"))
                        (rule "replace_known_left" (formula "28") (term "0") (ifseqformula "27"))
                         (builtin "One Step Simplification" (formula "28"))
                        (rule "true_left" (formula "28"))
                        (rule "replace_known_left" (formula "23") (term "0") (ifseqformula "27"))
                         (builtin "One Step Simplification" (formula "23"))
                        (rule "true_left" (formula "23"))
                        (rule "replace_known_left" (formula "27") (term "0") (ifseqformula "26"))
                         (builtin "One Step Simplification" (formula "27"))
                        (rule "true_left" (formula "27"))
                        (rule "replace_known_left" (formula "23") (term "0") (ifseqformula "26"))
                         (builtin "One Step Simplification" (formula "23"))
                        (rule "true_left" (formula "23"))
                        (rule "applyEq" (formula "30") (term "0,0") (ifseqformula "25"))
                        (rule "leq_literals" (formula "30") (term "0"))
                         (builtin "One Step Simplification" (formula "30"))
                        (rule "true_left" (formula "30"))
                        (rule "applyEq" (formula "26") (term "1,0") (ifseqformula "25"))
                        (rule "eqSymm" (formula "26"))
                        (rule "applyEq" (formula "27") (term "1,0,0") (ifseqformula "25"))
                        (rule "eqSymm" (formula "27"))
                        (rule "applyEq" (formula "30") (term "0,0,0,1,0") (ifseqformula "25"))
                        (rule "jdiv_axiom_inline" (formula "30") (term "0,0,1,0"))
                        (rule "qeq_literals" (formula "30") (term "0,0,0,1,0"))
                         (builtin "One Step Simplification" (formula "30"))
                        (rule "applyEq" (formula "5") (term "1,1") (ifseqformula "25"))
                        (rule "add_zero_right" (formula "5") (term "1"))
                        (rule "applyEq" (formula "9") (term "0,0") (ifseqformula "25"))
                        (rule "jdiv_axiom_inline" (formula "9") (term "0"))
                        (rule "times_zero_2" (formula "9") (term "0,0,2,0"))
                        (rule "qeq_literals" (formula "9") (term "0,0"))
                         (builtin "One Step Simplification" (formula "9"))
                        (rule "applyEq" (formula "8") (term "0") (ifseqformula "25"))
                        (rule "qeq_literals" (formula "8"))
                        (rule "true_left" (formula "8"))
                        (rule "applyEq" (formula "23") (term "1,0") (ifseqformula "24"))
                        (rule "times_zero_1" (formula "23") (term "0"))
                        (rule "eqSymm" (formula "23"))
                        (rule "applyEq" (formula "2") (term "0,1") (ifseqformula "24"))
                        (rule "times_zero_2" (formula "2") (term "1"))
                        (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "24"))
                        (rule "applyEq" (formula "26") (term "1,0,0") (ifseqformula "23"))
                        (rule "polySimp_mulComm0" (formula "26") (term "0"))
                        (rule "applyEq" (formula "21") (term "1,0") (ifseqformula "23"))
                        (rule "eqSymm" (formula "21"))
                        (rule "applyEq" (formula "1") (term "0,0,0") (ifseqformula "23"))
                        (rule "times_zero_2" (formula "1") (term "0,0"))
                        (rule "applyEq" (formula "6") (term "1,0,1") (ifseqformula "23"))
                        (rule "add_zero_right" (formula "6") (term "0,1"))
                        (rule "applyEq" (formula "3") (term "0,1,0,1") (ifseqformula "23"))
                        (rule "times_zero_2" (formula "3") (term "1,0,1"))
                        (rule "add_zero_right" (formula "3") (term "0,1"))
                        (rule "applyEq" (formula "24") (term "1,0") (ifseqformula "23"))
                        (rule "eqSymm" (formula "24"))
                        (rule "applyEq" (formula "26") (term "0,0") (ifseqformula "23"))
                        (rule "times_zero_2" (formula "26") (term "0"))
                        (rule "eqSymm" (formula "26"))
                        (rule "applyEqRigid" (formula "1") (term "0") (ifseqformula "7"))
                        (rule "eqSymm" (formula "1"))
                        (rule "applyEq" (formula "21") (term "1,0") (ifseqformula "23"))
                        (rule "eqSymm" (formula "21"))
                        (rule "applyEq" (formula "25") (term "1,0,0") (ifseqformula "23"))
                        (rule "eqSymm" (formula "25"))
                        (rule "polySimp_mulComm0" (formula "25") (term "1"))
                        (rule "applyEq" (formula "28") (term "1,1,0") (ifseqformula "23"))
                        (rule "applyEqRigid" (formula "3") (term "1,0") (ifseqformula "1"))
                        (rule "applyEqRigid" (formula "2") (term "1,0") (ifseqformula "1"))
                        (rule "polySimp_invertEq" (formula "21"))
                        (rule "times_zero_2" (formula "21") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                        (rule "polySimp_elimOne" (formula "21") (term "0"))
                        (rule "applyEq" (formula "24") (term "1,0") (ifseqformula "21"))
                        (rule "times_zero_1" (formula "24") (term "0"))
                        (rule "eqSymm" (formula "24"))
                        (rule "applyEq" (formula "26") (term "0,0,0,0,0,0") (ifseqformula "21"))
                        (rule "times_zero_2" (formula "26") (term "0,0,0,0,0"))
                        (rule "jdiv_axiom_inline" (formula "26") (term "0,0,0,0"))
                        (rule "qeq_literals" (formula "26") (term "0,0,0,0,0"))
                         (builtin "One Step Simplification" (formula "26"))
                        (rule "applyEq" (formula "20") (term "0,0,0") (ifseqformula "21"))
                        (rule "times_zero_2" (formula "20") (term "0,0"))
                        (rule "eqSymm" (formula "20"))
                        (rule "jdiv_axiom_inline" (formula "20") (term "1"))
                        (rule "qeq_literals" (formula "20") (term "0,1"))
                         (builtin "One Step Simplification" (formula "20"))
                        (rule "div_literals" (formula "20") (term "1"))
                        (rule "eqSymm" (formula "20"))
                        (rule "applyEq" (formula "8") (term "0,0") (ifseqformula "21"))
                        (rule "jdiv_axiom_inline" (formula "8") (term "0"))
                        (rule "qeq_literals" (formula "8") (term "0,0"))
                         (builtin "One Step Simplification" (formula "8"))
                        (rule "applyEq" (formula "7") (term "1") (ifseqformula "21"))
                        (rule "applyEq" (formula "11") (term "0,0") (ifseqformula "21"))
                        (rule "times_zero_2" (formula "11") (term "0"))
                        (rule "eqSymm" (formula "11"))
                        (rule "applyEq" (formula "14") (term "0") (ifseqformula "21"))
                        (rule "leq_literals" (formula "14"))
                        (rule "closeFalse" (formula "14"))
                     )
                     (branch "CUT: result_gcdHelp = 0 FALSE"
                         (builtin "One Step Simplification" (formula "28"))
                        (rule "replace_known_right" (formula "23") (term "0") (ifseqformula "37"))
                         (builtin "One Step Simplification" (formula "23"))
                        (rule "replace_known_right" (formula "24") (term "0") (ifseqformula "37"))
                         (builtin "One Step Simplification" (formula "24"))
                        (rule "replace_known_right" (formula "30") (term "0") (ifseqformula "37"))
                         (builtin "One Step Simplification" (formula "30"))
                        (rule "replace_known_right" (formula "25") (term "0") (ifseqformula "37"))
                         (builtin "One Step Simplification" (formula "25"))
                        (rule "replace_known_right" (formula "29") (term "0") (ifseqformula "37"))
                         (builtin "One Step Simplification" (formula "29"))
                        (rule "applyEq" (formula "33") (term "0,0") (ifseqformula "29"))
                        (rule "polySimp_mulComm0" (formula "33") (term "0"))
                        (rule "applyEq" (formula "32") (term "0,0") (ifseqformula "29"))
                        (rule "eqSymm" (formula "32"))
                        (rule "polySimp_mulComm0" (formula "32") (term "1"))
                        (rule "applyEq" (formula "27") (term "0,0") (ifseqformula "24"))
                        (rule "polySimp_mulComm0" (formula "27") (term "0"))
                        (rule "applyEq" (formula "28") (term "0") (ifseqformula "33"))
                        (rule "inEqSimp_homoInEq0" (formula "28"))
                        (rule "polySimp_mulLiterals" (formula "28") (term "1,0"))
                        (rule "polySimp_pullOutFactor0" (formula "28") (term "0"))
                        (rule "add_literals" (formula "28") (term "1,0"))
                        (rule "times_zero_1" (formula "28") (term "0"))
                        (rule "qeq_literals" (formula "28"))
                        (rule "true_left" (formula "28"))
                        (rule "applyEq" (formula "29") (term "0") (ifseqformula "32"))
                        (rule "inEqSimp_homoInEq1" (formula "29"))
                        (rule "polySimp_mulLiterals" (formula "29") (term "1,0"))
                        (rule "polySimp_elimOne" (formula "29") (term "1,0"))
                        (rule "polySimp_addComm1" (formula "29") (term "0"))
                        (rule "polySimp_pullOutFactor2b" (formula "29") (term "0,0"))
                        (rule "add_literals" (formula "29") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "29") (term "1,0,0"))
                        (rule "add_zero_right" (formula "29") (term "0,0"))
                        (rule "applyEq" (formula "26") (term "1") (ifseqformula "24"))
                        (rule "applyEq" (formula "30") (term "1") (ifseqformula "28"))
                        (rule "applyEq" (formula "23") (term "0") (ifseqformula "27"))
                        (rule "inEqSimp_homoInEq0" (formula "23"))
                        (rule "polySimp_mulLiterals" (formula "23") (term "1,0"))
                        (rule "polySimp_pullOutFactor0" (formula "23") (term "0"))
                        (rule "add_literals" (formula "23") (term "1,0"))
                        (rule "times_zero_1" (formula "23") (term "0"))
                        (rule "qeq_literals" (formula "23"))
                        (rule "true_left" (formula "23"))
                        (rule "applyEq" (formula "24") (term "0") (ifseqformula "26"))
                        (rule "inEqSimp_homoInEq1" (formula "24"))
                        (rule "polySimp_mulLiterals" (formula "24") (term "1,0"))
                        (rule "polySimp_elimOne" (formula "24") (term "1,0"))
                        (rule "polySimp_addComm1" (formula "24") (term "0"))
                        (rule "polySimp_pullOutFactor2b" (formula "24") (term "0,0"))
                        (rule "add_literals" (formula "24") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "24") (term "1,0,0"))
                        (rule "add_zero_right" (formula "24") (term "0,0"))
                        (rule "applyEq" (formula "29") (term "0,0") (ifseqformula "23"))
                        (rule "polySimp_mulComm0" (formula "29") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "27"))
                        (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                        (rule "polySimp_elimOne" (formula "27") (term "0"))
                        (rule "inEqSimp_contradEq7" (formula "34") (ifseqformula "27"))
                        (rule "times_zero_1" (formula "34") (term "1,0,0"))
                        (rule "add_zero_right" (formula "34") (term "0,0"))
                        (rule "leq_literals" (formula "34") (term "0"))
                         (builtin "One Step Simplification" (formula "34"))
                        (rule "false_right" (formula "34"))
                        (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "27"))
                        (rule "leq_literals" (formula "8") (term "0"))
                         (builtin "One Step Simplification" (formula "8"))
                        (rule "true_left" (formula "8"))
                        (rule "inEqSimp_contradInEq1" (formula "31") (term "0") (ifseqformula "26"))
                        (rule "qeq_literals" (formula "31") (term "0,0"))
                         (builtin "One Step Simplification" (formula "31"))
                        (rule "jdiv_axiom" (formula "30") (term "0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "30") (term "0,0,2,1"))
                        (rule "eqSymm" (formula "30"))
                        (rule "polySimp_elimOne" (formula "30") (term "0,0,2,0"))
                        (rule "inEqSimp_invertInEq1" (formula "30") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "30") (term "0,0,0"))
                        (rule "times_zero_2" (formula "30") (term "1,0,0"))
                        (rule "polySimp_elimOne" (formula "30") (term "0,0,0"))
                        (rule "inEqSimp_subsumption0" (formula "30") (term "0,0") (ifseqformula "16"))
                        (rule "leq_literals" (formula "30") (term "0,0,0"))
                         (builtin "One Step Simplification" (formula "30"))
                        (rule "eqSymm" (formula "30"))
                        (rule "applyEq" (formula "31") (term "0,0,0,0") (ifseqformula "30"))
                        (rule "polyDiv_pullOut" (formula "31") (term "0,0,0,0") (inst "polyDivCoeff=quotient_3"))
                        (rule "polySimp_mulComm1" (formula "31") (term "1,0,0,2,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "31") (term "0,1,0,0,2,0,0,0,0"))
                        (rule "polySimp_addComm0" (formula "31") (term "2,0,0,0,0"))
                        (rule "applyEq" (formula "31") (term "0,1,0,1,2,0,0,0,0") (ifseqformula "11"))
                        (rule "polySimp_mulLiterals" (formula "31") (term "1,0,1,2,0,0,0,0"))
                        (rule "polySimp_pullOutFactor0" (formula "31") (term "0,1,2,0,0,0,0"))
                        (rule "add_literals" (formula "31") (term "1,0,1,2,0,0,0,0"))
                        (rule "times_zero_1" (formula "31") (term "0,1,2,0,0,0,0"))
                        (rule "inEqSimp_contradEq7" (formula "31") (term "0,0,0,0,0") (ifseqformula "6"))
                        (rule "times_zero_1" (formula "31") (term "1,0,0,0,0,0,0,0"))
                        (rule "add_zero_right" (formula "31") (term "0,0,0,0,0,0,0"))
                        (rule "leq_literals" (formula "31") (term "0,0,0,0,0,0"))
                         (builtin "One Step Simplification" (formula "31"))
                        (rule "polySimp_mulComm0" (formula "31") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "31") (term "0,0,0"))
                        (rule "polySimp_homoEq" (formula "31") (term "0,0"))
                        (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "31") (term "1,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "31") (term "0,1,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "31") (term "0,0,0"))
                        (rule "applyEq" (formula "31") (term "0,1,0,0,0,0") (ifseqformula "11"))
                        (rule "polySimp_mulLiterals" (formula "31") (term "1,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "31") (term "1,0,0,0,0"))
                        (rule "polySimp_pullOutFactor2" (formula "31") (term "0,0,0,0"))
                        (rule "add_literals" (formula "31") (term "1,0,0,0,0"))
                        (rule "times_zero_1" (formula "31") (term "0,0,0,0"))
                        (rule "add_zero_left" (formula "31") (term "0,0,0"))
                        (rule "polySimp_invertEq" (formula "31") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "31") (term "0,0,0"))
                        (rule "times_zero_2" (formula "31") (term "1,0,0"))
                        (rule "polySimp_elimOne" (formula "31") (term "0,0,0"))
                        (rule "polyDiv_zero" (formula "31") (term "0,0,0,0"))
                        (rule "div_literals" (formula "31") (term "1,0,0,0,0"))
                        (rule "inEqSimp_contradEq7" (formula "31") (term "0,0,0,0,0") (ifseqformula "6"))
                        (rule "times_zero_1" (formula "31") (term "1,0,0,0,0,0,0,0"))
                        (rule "add_zero_right" (formula "31") (term "0,0,0,0,0,0,0"))
                        (rule "leq_literals" (formula "31") (term "0,0,0,0,0,0"))
                         (builtin "One Step Simplification" (formula "31"))
                        (rule "times_zero_2" (formula "31") (term "0,0,0"))
                         (builtin "One Step Simplification" (formula "31"))
                        (rule "notLeft" (formula "31"))
                        (rule "polyDiv_pullOut" (formula "30") (term "1") (inst "polyDivCoeff=quotient_3"))
                        (rule "eqSymm" (formula "30"))
                        (rule "polySimp_mulComm1" (formula "30") (term "1,0,0,2,0"))
                        (rule "polySimp_mulComm0" (formula "30") (term "0,1,0,0,2,0"))
                        (rule "polySimp_addComm0" (formula "30") (term "2,0"))
                        (rule "applyEq" (formula "30") (term "0,1,0,1,2,0") (ifseqformula "11"))
                        (rule "polySimp_mulLiterals" (formula "30") (term "1,0,1,2,0"))
                        (rule "polySimp_pullOutFactor0" (formula "30") (term "0,1,2,0"))
                        (rule "add_literals" (formula "30") (term "1,0,1,2,0"))
                        (rule "times_zero_1" (formula "30") (term "0,1,2,0"))
                        (rule "inEqSimp_contradEq7" (formula "30") (term "0,0") (ifseqformula "6"))
                        (rule "times_zero_1" (formula "30") (term "1,0,0,0,0"))
                        (rule "add_zero_right" (formula "30") (term "0,0,0,0"))
                        (rule "leq_literals" (formula "30") (term "0,0,0"))
                         (builtin "One Step Simplification" (formula "30"))
                        (rule "eqSymm" (formula "30"))
                        (rule "polyDiv_zero" (formula "30") (term "1,1"))
                        (rule "div_literals" (formula "30") (term "1,1,1"))
                        (rule "polySimp_homoEq" (formula "30"))
                        (rule "polySimp_addComm1" (formula "30") (term "0"))
                        (rule "polySimp_sepPosMonomial" (formula "30"))
                        (rule "polySimp_mulComm0" (formula "30") (term "1"))
                        (rule "polySimp_rightDist" (formula "30") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "30") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "30") (term "1,1"))
                        (rule "polySimp_mulComm0" (formula "30") (term "0,1"))
                        (rule "inEqSimp_contradEq7" (formula "30") (term "0,0") (ifseqformula "6"))
                        (rule "times_zero_1" (formula "30") (term "1,0,0,0,0"))
                        (rule "add_zero_right" (formula "30") (term "0,0,0,0"))
                        (rule "leq_literals" (formula "30") (term "0,0,0"))
                         (builtin "One Step Simplification" (formula "30"))
                        (rule "polySimp_homoEq" (formula "30"))
                        (rule "times_zero_2" (formula "30") (term "1,0"))
                        (rule "add_zero_right" (formula "30") (term "0"))
                        (rule "polySimp_sepPosMonomial" (formula "30"))
                        (rule "polySimp_mulLiterals" (formula "30") (term "1"))
                        (rule "polySimp_elimOne" (formula "30") (term "1"))
                        (rule "jdiv_axiom" (formula "31") (term "0,0"))
                        (rule "eqSymm" (formula "31"))
                        (rule "inEqSimp_subsumption1" (formula "31") (term "0,0") (ifseqformula "26"))
                        (rule "leq_literals" (formula "31") (term "0,0,0"))
                         (builtin "One Step Simplification" (formula "31"))
                        (rule "eqSymm" (formula "31"))
                        (rule "applyEq" (formula "32") (term "0,0") (ifseqformula "31"))
                        (rule "polyDiv_pullOut" (formula "32") (term "0,0") (inst "polyDivCoeff=Z(1(#))"))
                        (rule "mul_literals" (formula "32") (term "0,1,0,0,2,0,0"))
                        (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,2,0,0"))
                        (rule "polySimp_pullOutFactor1" (formula "32") (term "0,0,2,0,0"))
                        (rule "add_literals" (formula "32") (term "1,0,0,2,0,0"))
                        (rule "times_zero_1" (formula "32") (term "0,0,2,0,0"))
                        (rule "polySimp_addComm0" (formula "32") (term "2,0,0"))
                        (rule "inEqSimp_contradEq7" (formula "32") (term "0,0,0") (ifseqformula "26"))
                        (rule "times_zero_1" (formula "32") (term "1,0,0,0,0,0"))
                        (rule "add_zero_right" (formula "32") (term "0,0,0,0,0"))
                        (rule "leq_literals" (formula "32") (term "0,0,0,0"))
                         (builtin "One Step Simplification" (formula "32"))
                        (rule "polySimp_mulComm0" (formula "32") (term "0"))
                        (rule "polySimp_rightDist" (formula "32") (term "0"))
                        (rule "polySimp_homoEq" (formula "32"))
                        (rule "polySimp_elimOne" (formula "32") (term "0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                        (rule "polySimp_mulComm0" (formula "32") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "32") (term "0"))
                        (rule "polySimp_pullOutFactor1" (formula "32") (term "0,0"))
                        (rule "add_literals" (formula "32") (term "1,0,0"))
                        (rule "times_zero_1" (formula "32") (term "0,0"))
                        (rule "add_zero_left" (formula "32") (term "0"))
                        (rule "polySimp_invertEq" (formula "32"))
                        (rule "times_zero_2" (formula "32") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "32") (term "0"))
                        (rule "polySimp_elimOne" (formula "32") (term "0"))
                        (rule "polyDiv_zero" (formula "32") (term "0,0"))
                        (rule "div_literals" (formula "32") (term "1,0,0"))
                        (rule "inEqSimp_contradEq7" (formula "32") (term "0,0,0") (ifseqformula "26"))
                        (rule "times_zero_1" (formula "32") (term "1,0,0,0,0,0"))
                        (rule "add_zero_right" (formula "32") (term "0,0,0,0,0"))
                        (rule "leq_literals" (formula "32") (term "0,0,0,0"))
                         (builtin "One Step Simplification" (formula "32"))
                        (rule "times_zero_2" (formula "32") (term "0"))
                         (builtin "One Step Simplification" (formula "32"))
                        (rule "true_left" (formula "32"))
                        (rule "polyDiv_pullOut" (formula "31") (term "1") (inst "polyDivCoeff=Z(1(#))"))
                        (rule "mul_literals" (formula "31") (term "0,1,0,0,2,1"))
                        (rule "eqSymm" (formula "31"))
                        (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,2,0"))
                        (rule "polySimp_pullOutFactor1" (formula "31") (term "0,0,2,0"))
                        (rule "add_literals" (formula "31") (term "1,0,0,2,0"))
                        (rule "times_zero_1" (formula "31") (term "0,0,2,0"))
                        (rule "polySimp_addComm0" (formula "31") (term "2,0"))
                        (rule "inEqSimp_contradEq7" (formula "31") (term "0,0") (ifseqformula "26"))
                        (rule "times_zero_1" (formula "31") (term "1,0,0,0,0"))
                        (rule "add_zero_right" (formula "31") (term "0,0,0,0"))
                        (rule "leq_literals" (formula "31") (term "0,0,0"))
                         (builtin "One Step Simplification" (formula "31"))
                        (rule "eqSymm" (formula "31"))
                        (rule "polyDiv_zero" (formula "31") (term "1,1"))
                        (rule "div_literals" (formula "31") (term "1,1,1"))
                        (rule "polySimp_homoEq" (formula "31"))
                        (rule "polySimp_addComm1" (formula "31") (term "0"))
                        (rule "polySimp_sepPosMonomial" (formula "31"))
                        (rule "polySimp_mulComm0" (formula "31") (term "1"))
                        (rule "polySimp_rightDist" (formula "31") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "31") (term "1,1"))
                        (rule "mul_literals" (formula "31") (term "0,1"))
                        (rule "polySimp_elimOne" (formula "31") (term "1,1"))
                        (rule "inEqSimp_contradEq7" (formula "31") (term "0,0") (ifseqformula "26"))
                        (rule "times_zero_1" (formula "31") (term "1,0,0,0,0"))
                        (rule "add_zero_right" (formula "31") (term "0,0,0,0"))
                        (rule "leq_literals" (formula "31") (term "0,0,0"))
                         (builtin "One Step Simplification" (formula "31"))
                        (rule "polySimp_homoEq" (formula "31"))
                        (rule "times_zero_2" (formula "31") (term "1,0"))
                        (rule "add_zero_right" (formula "31") (term "0"))
                        (rule "polySimp_sepPosMonomial" (formula "31"))
                        (rule "mul_literals" (formula "31") (term "1"))
                        (rule "polyDiv_pullOut" (formula "22") (term "0") (inst "polyDivCoeff=quotient_4"))
                        (rule "polySimp_mulComm1" (formula "22") (term "1,0,0,2,0"))
                        (rule "polySimp_mulComm0" (formula "22") (term "0,1,0,0,2,0"))
                        (rule "polySimp_addComm0" (formula "22") (term "2,0"))
                        (rule "applyEq" (formula "22") (term "0,1,0,1,2,0") (ifseqformula "24"))
                        (rule "polySimp_mulLiterals" (formula "22") (term "1,0,1,2,0"))
                        (rule "polySimp_pullOutFactor0" (formula "22") (term "0,1,2,0"))
                        (rule "add_literals" (formula "22") (term "1,0,1,2,0"))
                        (rule "times_zero_1" (formula "22") (term "0,1,2,0"))
                        (rule "inEqSimp_contradEq7" (formula "22") (term "0,0") (ifseqformula "26"))
                        (rule "times_zero_1" (formula "22") (term "1,0,0,0,0"))
                        (rule "add_zero_right" (formula "22") (term "0,0,0,0"))
                        (rule "leq_literals" (formula "22") (term "0,0,0"))
                         (builtin "One Step Simplification" (formula "22"))
                        (rule "polySimp_homoEq" (formula "22"))
                        (rule "polySimp_mulComm0" (formula "22") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "22") (term "1,0"))
                        (rule "polySimp_mulComm0" (formula "22") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "22") (term "0"))
                        (rule "polySimp_pullOutFactor1" (formula "22") (term "0,0"))
                        (rule "add_literals" (formula "22") (term "1,0,0"))
                        (rule "times_zero_1" (formula "22") (term "0,0"))
                        (rule "add_zero_left" (formula "22") (term "0"))
                        (rule "polySimp_invertEq" (formula "22"))
                        (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                        (rule "times_zero_2" (formula "22") (term "1"))
                        (rule "polySimp_elimOne" (formula "22") (term "0"))
                        (rule "polyDiv_zero" (formula "22") (term "0"))
                         (builtin "One Step Simplification" (formula "22"))
                        (rule "div_literals" (formula "22") (term "0,1"))
                        (rule "inEqSimp_contradEq7" (formula "22") (term "0,0") (ifseqformula "26"))
                        (rule "times_zero_1" (formula "22") (term "1,0,0,0,0"))
                        (rule "add_zero_right" (formula "22") (term "0,0,0,0"))
                        (rule "leq_literals" (formula "22") (term "0,0,0"))
                         (builtin "One Step Simplification" (formula "22"))
                        (rule "true_left" (formula "22"))
                        (rule "polyDiv_pullOut" (formula "24") (term "0") (inst "polyDivCoeff=quotient_5"))
                        (rule "polySimp_mulComm1" (formula "24") (term "1,0,0,2,0"))
                        (rule "polySimp_mulComm0" (formula "24") (term "0,1,0,0,2,0"))
                        (rule "polySimp_addComm0" (formula "24") (term "2,0"))
                        (rule "applyEq" (formula "24") (term "0,1,0,1,2,0") (ifseqformula "28"))
                        (rule "polySimp_mulLiterals" (formula "24") (term "1,0,1,2,0"))
                        (rule "polySimp_pullOutFactor0" (formula "24") (term "0,1,2,0"))
                        (rule "add_literals" (formula "24") (term "1,0,1,2,0"))
                        (rule "times_zero_1" (formula "24") (term "0,1,2,0"))
                        (rule "inEqSimp_contradEq7" (formula "24") (term "0,0") (ifseqformula "25"))
                        (rule "times_zero_1" (formula "24") (term "1,0,0,0,0"))
                        (rule "add_zero_right" (formula "24") (term "0,0,0,0"))
                        (rule "leq_literals" (formula "24") (term "0,0,0"))
                         (builtin "One Step Simplification" (formula "24"))
                        (rule "polySimp_homoEq" (formula "24"))
                        (rule "polySimp_mulComm0" (formula "24") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "24") (term "1,0"))
                        (rule "polySimp_mulComm0" (formula "24") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "24") (term "0"))
                        (rule "polySimp_pullOutFactor1" (formula "24") (term "0,0"))
                        (rule "add_literals" (formula "24") (term "1,0,0"))
                        (rule "times_zero_1" (formula "24") (term "0,0"))
                        (rule "add_zero_left" (formula "24") (term "0"))
                        (rule "polySimp_invertEq" (formula "24"))
                        (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                        (rule "times_zero_2" (formula "24") (term "1"))
                        (rule "polySimp_elimOne" (formula "24") (term "0"))
                        (rule "polyDiv_zero" (formula "24") (term "0"))
                         (builtin "One Step Simplification" (formula "24"))
                        (rule "div_literals" (formula "24") (term "0,1"))
                        (rule "inEqSimp_contradEq7" (formula "24") (term "0,0") (ifseqformula "25"))
                        (rule "times_zero_1" (formula "24") (term "1,0,0,0,0"))
                        (rule "add_zero_right" (formula "24") (term "0,0,0,0"))
                        (rule "leq_literals" (formula "24") (term "0,0,0"))
                         (builtin "One Step Simplification" (formula "24"))
                        (rule "true_left" (formula "24"))
                        (rule "jdiv_axiom" (formula "31") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "0,0,2,1"))
                        (rule "eqSymm" (formula "1"))
                        (rule "polySimp_elimOne" (formula "1") (term "0,0,2,0"))
                        (rule "inEqSimp_invertInEq1" (formula "1") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0"))
                        (rule "times_zero_2" (formula "1") (term "1,0,0"))
                        (rule "polySimp_elimOne" (formula "1") (term "0,0,0"))
                        (rule "inEqSimp_subsumption0" (formula "1") (term "0,0") (ifseqformula "16"))
                        (rule "leq_literals" (formula "1") (term "0,0,0"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "eqSymm" (formula "1"))
                        (rule "applyEq" (formula "32") (term "0,0") (ifseqformula "1"))
                        (rule "polyDiv_pullOut" (formula "32") (term "0,0") (inst "polyDivCoeff=quotient_2"))
                        (rule "polySimp_mulComm1" (formula "32") (term "1,0,0,2,0,0"))
                        (rule "polySimp_mulComm0" (formula "32") (term "0,1,0,0,2,0,0"))
                        (rule "polySimp_addComm0" (formula "32") (term "2,0,0"))
                        (rule "applyEq" (formula "32") (term "0,1,0,1,2,0,0") (ifseqformula "15"))
                        (rule "polySimp_mulLiterals" (formula "32") (term "1,0,1,2,0,0"))
                        (rule "polySimp_pullOutFactor0" (formula "32") (term "0,1,2,0,0"))
                        (rule "add_literals" (formula "32") (term "1,0,1,2,0,0"))
                        (rule "times_zero_1" (formula "32") (term "0,1,2,0,0"))
                        (rule "inEqSimp_contradEq7" (formula "32") (term "0,0,0") (ifseqformula "7"))
                        (rule "times_zero_1" (formula "32") (term "1,0,0,0,0,0"))
                        (rule "add_zero_right" (formula "32") (term "0,0,0,0,0"))
                        (rule "leq_literals" (formula "32") (term "0,0,0,0"))
                         (builtin "One Step Simplification" (formula "32"))
                        (rule "polySimp_mulComm0" (formula "32") (term "0"))
                        (rule "polySimp_rightDist" (formula "32") (term "0"))
                        (rule "polySimp_homoEq" (formula "32"))
                        (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                        (rule "polySimp_mulComm0" (formula "32") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "32") (term "0"))
                        (rule "applyEq" (formula "32") (term "0,1,0,0") (ifseqformula "15"))
                        (rule "polySimp_mulLiterals" (formula "32") (term "1,0,0"))
                        (rule "polySimp_pullOutFactor0" (formula "32") (term "0,0"))
                        (rule "add_literals" (formula "32") (term "1,0,0"))
                        (rule "times_zero_1" (formula "32") (term "0,0"))
                        (rule "add_zero_left" (formula "32") (term "0"))
                        (rule "polySimp_invertEq" (formula "32"))
                        (rule "polySimp_mulLiterals" (formula "32") (term "0"))
                        (rule "times_zero_2" (formula "32") (term "1"))
                        (rule "polySimp_elimOne" (formula "32") (term "0"))
                        (rule "polyDiv_zero" (formula "32") (term "0,0"))
                        (rule "div_literals" (formula "32") (term "1,0,0"))
                        (rule "inEqSimp_contradEq7" (formula "32") (term "0,0,0") (ifseqformula "7"))
                        (rule "times_zero_1" (formula "32") (term "1,0,0,0,0,0"))
                        (rule "add_zero_right" (formula "32") (term "0,0,0,0,0"))
                        (rule "leq_literals" (formula "32") (term "0,0,0,0"))
                         (builtin "One Step Simplification" (formula "32"))
                        (rule "times_zero_2" (formula "32") (term "0"))
                         (builtin "One Step Simplification" (formula "32"))
                        (rule "closeTrue" (formula "32"))
                     )
                  )
                  (branch "result_gcdHelp >= 0 FALSE"
                     (rule "eqSymm" (formula "7"))
                     (rule "replace_known_right" (formula "23") (term "0,1,1") (ifseqformula "30"))
                      (builtin "One Step Simplification" (formula "23"))
                     (rule "replace_known_right" (formula "26") (term "0,1,1") (ifseqformula "30"))
                      (builtin "One Step Simplification" (formula "26"))
                     (rule "inEqSimp_geqRight" (formula "30"))
                     (rule "times_zero_1" (formula "1") (term "1,0,0"))
                     (rule "add_zero_right" (formula "1") (term "0,0"))
                     (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "8"))
                     (rule "polySimp_mulComm1" (formula "31") (term "0"))
                     (rule "polySimp_homoEq" (formula "31"))
                     (rule "polySimp_mulLiterals" (formula "31") (term "1,0"))
                     (rule "polySimp_elimOne" (formula "31") (term "1,0"))
                     (rule "polySimp_mulComm0" (formula "31") (term "1,0"))
                     (rule "polySimp_sepPosMonomial" (formula "31"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                     (rule "mul_literals" (formula "1") (term "1"))
                     (rule "inEqSimp_contradEq3" (formula "27") (term "0") (ifseqformula "1"))
                     (rule "times_zero_1" (formula "27") (term "1,0,0,0"))
                     (rule "add_zero_right" (formula "27") (term "0,0,0"))
                     (rule "qeq_literals" (formula "27") (term "0,0"))
                      (builtin "One Step Simplification" (formula "27"))
                     (rule "andLeft" (formula "27"))
                     (rule "andLeft" (formula "27"))
                     (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "28"))
                     (rule "polySimp_mulComm0" (formula "31") (term "0"))
                     (rule "applyEq" (formula "29") (term "0") (ifseqformula "31"))
                     (rule "inEqSimp_homoInEq1" (formula "29"))
                     (rule "polySimp_mulLiterals" (formula "29") (term "1,0"))
                     (rule "polySimp_elimOne" (formula "29") (term "1,0"))
                     (rule "polySimp_addComm1" (formula "29") (term "0"))
                     (rule "polySimp_pullOutFactor2b" (formula "29") (term "0,0"))
                     (rule "add_literals" (formula "29") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "29") (term "1,0,0"))
                     (rule "add_zero_right" (formula "29") (term "0,0"))
                     (rule "applyEq" (formula "27") (term "0") (ifseqformula "31"))
                     (rule "inEqSimp_homoInEq0" (formula "27"))
                     (rule "polySimp_mulLiterals" (formula "27") (term "1,0"))
                     (rule "polySimp_pullOutFactor0" (formula "27") (term "0"))
                     (rule "add_literals" (formula "27") (term "1,0"))
                     (rule "times_zero_1" (formula "27") (term "0"))
                     (rule "qeq_literals" (formula "27"))
                     (rule "true_left" (formula "27"))
                     (rule "applyEq" (formula "29") (term "1") (ifseqformula "27"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "28"))
                     (rule "mul_literals" (formula "28") (term "1"))
                     (rule "inEqSimp_contradEq3" (formula "24") (term "0") (ifseqformula "1"))
                     (rule "times_zero_1" (formula "24") (term "1,0,0,0"))
                     (rule "add_zero_right" (formula "24") (term "0,0,0"))
                     (rule "qeq_literals" (formula "24") (term "0,0"))
                      (builtin "One Step Simplification" (formula "24"))
                     (rule "andLeft" (formula "24"))
                     (rule "andLeft" (formula "24"))
                     (rule "applyEq" (formula "28") (term "0,0") (ifseqformula "25"))
                     (rule "polySimp_mulComm0" (formula "28") (term "0"))
                     (rule "applyEq" (formula "26") (term "0") (ifseqformula "28"))
                     (rule "inEqSimp_homoInEq1" (formula "26"))
                     (rule "polySimp_mulLiterals" (formula "26") (term "1,0"))
                     (rule "polySimp_elimOne" (formula "26") (term "1,0"))
                     (rule "polySimp_addComm1" (formula "26") (term "0"))
                     (rule "polySimp_pullOutFactor2b" (formula "26") (term "0,0"))
                     (rule "add_literals" (formula "26") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "26") (term "1,0,0"))
                     (rule "add_zero_right" (formula "26") (term "0,0"))
                     (rule "applyEq" (formula "24") (term "0") (ifseqformula "28"))
                     (rule "inEqSimp_homoInEq0" (formula "24"))
                     (rule "polySimp_mulLiterals" (formula "24") (term "1,0"))
                     (rule "polySimp_pullOutFactor0" (formula "24") (term "0"))
                     (rule "add_literals" (formula "24") (term "1,0"))
                     (rule "times_zero_1" (formula "24") (term "0"))
                     (rule "qeq_literals" (formula "24"))
                     (rule "true_left" (formula "24"))
                     (rule "applyEq" (formula "26") (term "1") (ifseqformula "24"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "25"))
                     (rule "mul_literals" (formula "25") (term "1"))
                     (rule "inEqSimp_strengthen0" (formula "3") (ifseqformula "31"))
                     (rule "inEqSimp_contradEq3" (formula "31") (ifseqformula "3"))
                     (rule "polySimp_mulAssoc" (formula "31") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "31") (term "0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "31") (term "1,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "31") (term "0,0"))
                     (rule "add_literals" (formula "31") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "31") (term "1,0,0"))
                     (rule "add_zero_right" (formula "31") (term "0,0"))
                     (rule "qeq_literals" (formula "31") (term "0"))
                      (builtin "One Step Simplification" (formula "31"))
                     (rule "false_right" (formula "31"))
                     (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "3"))
                     (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0"))
                     (rule "polySimp_elimOne" (formula "4") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "4") (term "0"))
                     (rule "polySimp_rightDist" (formula "4") (term "0,0,0"))
                     (rule "mul_literals" (formula "4") (term "0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "4") (term "1,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                     (rule "add_literals" (formula "4") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0"))
                     (rule "add_literals" (formula "4") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "4") (term "1,0,0"))
                     (rule "add_zero_right" (formula "4") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                     (rule "mul_literals" (formula "4") (term "1"))
                     (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "4"))
                     (rule "leq_literals" (formula "11") (term "0"))
                      (builtin "One Step Simplification" (formula "11"))
                     (rule "true_left" (formula "11"))
                     (rule "polyDiv_pullOut" (formula "14") (term "0") (inst "polyDivCoeff=quotient_2"))
                     (rule "polySimp_mulComm1" (formula "14") (term "1,0,0,2,0"))
                     (rule "polySimp_mulComm0" (formula "14") (term "0,1,0,0,2,0"))
                     (rule "polySimp_addComm0" (formula "14") (term "2,0"))
                     (rule "applyEq" (formula "14") (term "0,1,0,1,2,0") (ifseqformula "16"))
                     (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,2,0"))
                     (rule "polySimp_elimOne" (formula "14") (term "1,0,1,2,0"))
                     (rule "polySimp_pullOutFactor2" (formula "14") (term "0,1,2,0"))
                     (rule "add_literals" (formula "14") (term "1,0,1,2,0"))
                     (rule "times_zero_1" (formula "14") (term "0,1,2,0"))
                     (rule "inEqSimp_contradEq7" (formula "14") (term "0,0") (ifseqformula "4"))
                     (rule "times_zero_1" (formula "14") (term "1,0,0,0,0"))
                     (rule "add_zero_right" (formula "14") (term "0,0,0,0"))
                     (rule "leq_literals" (formula "14") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "14"))
                     (rule "polySimp_homoEq" (formula "14"))
                     (rule "polySimp_mulComm0" (formula "14") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "14") (term "1,0"))
                     (rule "polySimp_mulComm0" (formula "14") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "14") (term "0"))
                     (rule "polySimp_pullOutFactor1" (formula "14") (term "0,0"))
                     (rule "add_literals" (formula "14") (term "1,0,0"))
                     (rule "times_zero_1" (formula "14") (term "0,0"))
                     (rule "add_zero_left" (formula "14") (term "0"))
                     (rule "polySimp_invertEq" (formula "14"))
                     (rule "times_zero_2" (formula "14") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                     (rule "polySimp_elimOne" (formula "14") (term "0"))
                     (rule "polyDiv_zero" (formula "14") (term "0"))
                      (builtin "One Step Simplification" (formula "14"))
                     (rule "div_literals" (formula "14") (term "0,1"))
                     (rule "inEqSimp_contradEq7" (formula "14") (term "0,0") (ifseqformula "4"))
                     (rule "times_zero_1" (formula "14") (term "1,0,0,0,0"))
                     (rule "add_zero_right" (formula "14") (term "0,0,0,0"))
                     (rule "leq_literals" (formula "14") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "14"))
                     (rule "true_left" (formula "14"))
                     (rule "allLeft" (formula "29") (inst "t=x_0"))
                     (rule "applyEq" (formula "29") (term "0,0,1") (ifseqformula "9"))
                     (rule "polySimp_mulComm1" (formula "29") (term "0,1"))
                     (rule "polySimp_homoEq" (formula "29") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "29") (term "1,0,1"))
                     (rule "polySimp_elimOne" (formula "29") (term "1,0,1"))
                     (rule "polySimp_mulComm0" (formula "29") (term "1,0,1"))
                     (rule "polySimp_sepPosMonomial" (formula "29") (term "1"))
                     (rule "inEqSimp_contradEq3" (formula "29") (term "1") (ifseqformula "3"))
                     (rule "polySimp_mulAssoc" (formula "29") (term "1,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "29") (term "0,1,0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0,1"))
                     (rule "polySimp_pullOutFactor0b" (formula "29") (term "0,0,1"))
                     (rule "add_literals" (formula "29") (term "1,1,0,0,1"))
                     (rule "times_zero_1" (formula "29") (term "1,0,0,1"))
                     (rule "add_zero_right" (formula "29") (term "0,0,1"))
                     (rule "qeq_literals" (formula "29") (term "0,1"))
                      (builtin "One Step Simplification" (formula "29"))
                     (rule "inEqSimp_contradInEq1" (formula "29") (term "0,0") (ifseqformula "4"))
                     (rule "qeq_literals" (formula "29") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "29"))
                     (rule "polyDiv_pullOut" (formula "11") (term "0") (inst "polyDivCoeff=quotient_3"))
                     (rule "polySimp_mulComm1" (formula "11") (term "1,0,0,2,0"))
                     (rule "polySimp_mulComm0" (formula "11") (term "0,1,0,0,2,0"))
                     (rule "polySimp_addComm0" (formula "11") (term "2,0"))
                     (rule "applyEq" (formula "11") (term "0,1,0,1,2,0") (ifseqformula "13"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,2,0"))
                     (rule "polySimp_pullOutFactor0" (formula "11") (term "0,1,2,0"))
                     (rule "add_literals" (formula "11") (term "1,0,1,2,0"))
                     (rule "times_zero_1" (formula "11") (term "0,1,2,0"))
                     (rule "inEqSimp_contradEq7" (formula "11") (term "0,0") (ifseqformula "4"))
                     (rule "times_zero_1" (formula "11") (term "1,0,0,0,0"))
                     (rule "add_zero_right" (formula "11") (term "0,0,0,0"))
                     (rule "leq_literals" (formula "11") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "11"))
                     (rule "polySimp_homoEq" (formula "11"))
                     (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "11") (term "1,0"))
                     (rule "polySimp_mulComm0" (formula "11") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "11") (term "0"))
                     (rule "polySimp_pullOutFactor1" (formula "11") (term "0,0"))
                     (rule "add_literals" (formula "11") (term "1,0,0"))
                     (rule "times_zero_1" (formula "11") (term "0,0"))
                     (rule "add_zero_left" (formula "11") (term "0"))
                     (rule "polySimp_invertEq" (formula "11"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                     (rule "times_zero_2" (formula "11") (term "1"))
                     (rule "polySimp_elimOne" (formula "11") (term "0"))
                     (rule "polyDiv_zero" (formula "11") (term "0"))
                      (builtin "One Step Simplification" (formula "11"))
                     (rule "div_literals" (formula "11") (term "0,1"))
                     (rule "inEqSimp_contradEq7" (formula "11") (term "0,0") (ifseqformula "4"))
                     (rule "times_zero_1" (formula "11") (term "1,0,0,0,0"))
                     (rule "add_zero_right" (formula "11") (term "0,0,0,0"))
                     (rule "leq_literals" (formula "11") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "11"))
                     (rule "true_left" (formula "11"))
                     (rule "polySimp_critPair" (formula "14") (ifseqformula "12"))
                     (rule "polySimp_mulComm0" (formula "14") (term "1,1,1,0"))
                     (rule "polySimp_mulAssoc" (formula "14") (term "0,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "14") (term "0,0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "14") (term "0,1,0,0"))
                     (rule "polySimp_elimOne" (formula "14") (term "0,1,0,0"))
                     (rule "polySimp_rightDist" (formula "14") (term "1,0"))
                     (rule "polySimp_mulComm1" (formula "14") (term "1,1,0"))
                     (rule "polySimp_mulAssoc" (formula "14") (term "0,1,0"))
                     (rule "polySimp_mulComm0" (formula "14") (term "0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "14") (term "0,0"))
                     (rule "polySimp_mulComm0" (formula "14") (term "0,0,0"))
                     (rule "polySimp_mulComm1" (formula "14") (term "1,0,0"))
                     (rule "polySimp_addAssoc" (formula "14") (term "0"))
                     (rule "polySimp_addComm1" (formula "14") (term "0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "14") (term "0"))
                     (rule "add_literals" (formula "14") (term "1,1,0"))
                     (rule "times_zero_1" (formula "14") (term "1,0"))
                     (rule "add_zero_right" (formula "14") (term "0"))
                     (rule "polySimp_addComm0" (formula "14") (term "0"))
                     (rule "polySimp_sepPosMonomial" (formula "14"))
                     (rule "polySimp_mulLiterals" (formula "14") (term "1"))
                     (rule "polySimp_elimOne" (formula "14") (term "1"))
                     (rule "polyDiv_pullOut" (formula "26") (term "0") (inst "polyDivCoeff=quotient_5"))
                     (rule "polySimp_mulComm1" (formula "26") (term "1,0,0,2,0"))
                     (rule "polySimp_mulComm0" (formula "26") (term "0,1,0,0,2,0"))
                     (rule "polySimp_addComm0" (formula "26") (term "2,0"))
                     (rule "applyEq" (formula "26") (term "0,1,0,1,2,0") (ifseqformula "28"))
                     (rule "polySimp_mulLiterals" (formula "26") (term "1,0,1,2,0"))
                     (rule "polySimp_elimOne" (formula "26") (term "1,0,1,2,0"))
                     (rule "polySimp_pullOutFactor2" (formula "26") (term "0,1,2,0"))
                     (rule "add_literals" (formula "26") (term "1,0,1,2,0"))
                     (rule "times_zero_1" (formula "26") (term "0,1,2,0"))
                     (rule "inEqSimp_contradEq3" (formula "26") (term "0,0") (ifseqformula "1"))
                     (rule "times_zero_1" (formula "26") (term "1,0,0,0,0"))
                     (rule "add_zero_right" (formula "26") (term "0,0,0,0"))
                     (rule "qeq_literals" (formula "26") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "26"))
                     (rule "polySimp_homoEq" (formula "26"))
                     (rule "polySimp_mulComm0" (formula "26") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "26") (term "1,0"))
                     (rule "polySimp_mulComm0" (formula "26") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "26") (term "0"))
                     (rule "polySimp_pullOutFactor1" (formula "26") (term "0,0"))
                     (rule "add_literals" (formula "26") (term "1,0,0"))
                     (rule "times_zero_1" (formula "26") (term "0,0"))
                     (rule "add_zero_left" (formula "26") (term "0"))
                     (rule "polySimp_invertEq" (formula "26"))
                     (rule "times_zero_2" (formula "26") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "26") (term "0"))
                     (rule "polySimp_elimOne" (formula "26") (term "0"))
                     (rule "polyDiv_zero" (formula "26") (term "0"))
                      (builtin "One Step Simplification" (formula "26"))
                     (rule "div_literals" (formula "26") (term "0,1"))
                     (rule "inEqSimp_contradEq3" (formula "26") (term "0,0") (ifseqformula "1"))
                     (rule "times_zero_1" (formula "26") (term "1,0,0,0,0"))
                     (rule "add_zero_right" (formula "26") (term "0,0,0,0"))
                     (rule "qeq_literals" (formula "26") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "26"))
                     (rule "true_left" (formula "26"))
                     (rule "polyDiv_pullOut" (formula "23") (term "0") (inst "polyDivCoeff=quotient_4"))
                     (rule "polySimp_mulComm1" (formula "23") (term "1,0,0,2,0"))
                     (rule "polySimp_mulComm0" (formula "23") (term "0,1,0,0,2,0"))
                     (rule "polySimp_addComm0" (formula "23") (term "2,0"))
                     (rule "applyEq" (formula "23") (term "0,1,0,1,2,0") (ifseqformula "25"))
                     (rule "polySimp_mulLiterals" (formula "23") (term "1,0,1,2,0"))
                     (rule "polySimp_elimOne" (formula "23") (term "1,0,1,2,0"))
                     (rule "polySimp_pullOutFactor2" (formula "23") (term "0,1,2,0"))
                     (rule "add_literals" (formula "23") (term "1,0,1,2,0"))
                     (rule "times_zero_1" (formula "23") (term "0,1,2,0"))
                     (rule "inEqSimp_contradEq3" (formula "23") (term "0,0") (ifseqformula "1"))
                     (rule "times_zero_1" (formula "23") (term "1,0,0,0,0"))
                     (rule "add_zero_right" (formula "23") (term "0,0,0,0"))
                     (rule "qeq_literals" (formula "23") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "23"))
                     (rule "polySimp_homoEq" (formula "23"))
                     (rule "polySimp_mulComm0" (formula "23") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "23") (term "1,0"))
                     (rule "polySimp_mulComm0" (formula "23") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "23") (term "0"))
                     (rule "polySimp_pullOutFactor1" (formula "23") (term "0,0"))
                     (rule "add_literals" (formula "23") (term "1,0,0"))
                     (rule "times_zero_1" (formula "23") (term "0,0"))
                     (rule "add_zero_left" (formula "23") (term "0"))
                     (rule "polySimp_invertEq" (formula "23"))
                     (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                     (rule "times_zero_2" (formula "23") (term "1"))
                     (rule "polySimp_elimOne" (formula "23") (term "0"))
                     (rule "polyDiv_zero" (formula "23") (term "0"))
                      (builtin "One Step Simplification" (formula "23"))
                     (rule "div_literals" (formula "23") (term "0,1"))
                     (rule "inEqSimp_contradEq3" (formula "23") (term "0,0") (ifseqformula "1"))
                     (rule "times_zero_1" (formula "23") (term "1,0,0,0,0"))
                     (rule "add_zero_right" (formula "23") (term "0,0,0,0"))
                     (rule "qeq_literals" (formula "23") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "23"))
                     (rule "true_left" (formula "23"))
                     (rule "jdiv_axiom" (formula "27") (term "0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "27") (term "0,0,2,1"))
                     (rule "eqSymm" (formula "27"))
                     (rule "polySimp_elimOne" (formula "27") (term "0,0,2,0"))
                     (rule "inEqSimp_invertInEq1" (formula "27") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "27") (term "0,0,0"))
                     (rule "times_zero_2" (formula "27") (term "1,0,0"))
                     (rule "polySimp_elimOne" (formula "27") (term "0,0,0"))
                     (rule "inEqSimp_subsumption0" (formula "27") (term "0,0") (ifseqformula "17"))
                     (rule "leq_literals" (formula "27") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "27"))
                     (rule "eqSymm" (formula "27"))
                     (rule "applyEq" (formula "28") (term "0,0,0,0") (ifseqformula "27"))
                     (rule "polyDiv_pullOut" (formula "28") (term "0,0,0,0") (inst "polyDivCoeff=quotient_3"))
                     (rule "polySimp_mulComm1" (formula "28") (term "1,0,0,2,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "28") (term "0,1,0,0,2,0,0,0,0"))
                     (rule "polySimp_addComm0" (formula "28") (term "2,0,0,0,0"))
                     (rule "applyEq" (formula "28") (term "0,1,0,1,2,0,0,0,0") (ifseqformula "12"))
                     (rule "polySimp_mulLiterals" (formula "28") (term "1,0,1,2,0,0,0,0"))
                     (rule "polySimp_pullOutFactor0" (formula "28") (term "0,1,2,0,0,0,0"))
                     (rule "add_literals" (formula "28") (term "1,0,1,2,0,0,0,0"))
                     (rule "times_zero_1" (formula "28") (term "0,1,2,0,0,0,0"))
                     (rule "inEqSimp_contradEq7" (formula "28") (term "0,0,0,0,0") (ifseqformula "4"))
                     (rule "times_zero_1" (formula "28") (term "1,0,0,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "28") (term "0,0,0,0,0,0,0"))
                     (rule "leq_literals" (formula "28") (term "0,0,0,0,0,0"))
                      (builtin "One Step Simplification" (formula "28"))
                     (rule "polySimp_mulComm0" (formula "28") (term "0,0,0"))
                     (rule "polySimp_rightDist" (formula "28") (term "0,0,0"))
                     (rule "polySimp_homoEq" (formula "28") (term "0,0"))
                     (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "28") (term "0,1,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "28") (term "0,0,0"))
                     (rule "applyEq" (formula "28") (term "0,1,0,0,0,0") (ifseqformula "12"))
                     (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0,0,0"))
                     (rule "polySimp_pullOutFactor0" (formula "28") (term "0,0,0,0"))
                     (rule "add_literals" (formula "28") (term "1,0,0,0,0"))
                     (rule "times_zero_1" (formula "28") (term "0,0,0,0"))
                     (rule "add_zero_left" (formula "28") (term "0,0,0"))
                     (rule "polySimp_invertEq" (formula "28") (term "0,0"))
                     (rule "times_zero_2" (formula "28") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "28") (term "0,0,0"))
                     (rule "polySimp_elimOne" (formula "28") (term "0,0,0"))
                     (rule "polyDiv_zero" (formula "28") (term "0,0,0,0"))
                     (rule "div_literals" (formula "28") (term "1,0,0,0,0"))
                     (rule "inEqSimp_contradEq7" (formula "28") (term "0,0,0,0,0") (ifseqformula "4"))
                     (rule "times_zero_1" (formula "28") (term "1,0,0,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "28") (term "0,0,0,0,0,0,0"))
                     (rule "leq_literals" (formula "28") (term "0,0,0,0,0,0"))
                      (builtin "One Step Simplification" (formula "28"))
                     (rule "times_zero_2" (formula "28") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "28"))
                     (rule "notLeft" (formula "28"))
                     (rule "polyDiv_pullOut" (formula "27") (term "1") (inst "polyDivCoeff=quotient_3"))
                     (rule "eqSymm" (formula "27"))
                     (rule "polySimp_mulComm1" (formula "27") (term "1,0,0,2,0"))
                     (rule "polySimp_mulComm0" (formula "27") (term "0,1,0,0,2,0"))
                     (rule "polySimp_addComm0" (formula "27") (term "2,0"))
                     (rule "applyEq" (formula "27") (term "0,1,0,1,2,0") (ifseqformula "12"))
                     (rule "polySimp_mulLiterals" (formula "27") (term "1,0,1,2,0"))
                     (rule "polySimp_pullOutFactor0" (formula "27") (term "0,1,2,0"))
                     (rule "add_literals" (formula "27") (term "1,0,1,2,0"))
                     (rule "times_zero_1" (formula "27") (term "0,1,2,0"))
                     (rule "inEqSimp_contradEq7" (formula "27") (term "0,0") (ifseqformula "4"))
                     (rule "times_zero_1" (formula "27") (term "1,0,0,0,0"))
                     (rule "add_zero_right" (formula "27") (term "0,0,0,0"))
                     (rule "leq_literals" (formula "27") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "27"))
                     (rule "eqSymm" (formula "27"))
                     (rule "polyDiv_zero" (formula "27") (term "1,1"))
                     (rule "div_literals" (formula "27") (term "1,1,1"))
                     (rule "polySimp_homoEq" (formula "27"))
                     (rule "polySimp_addComm1" (formula "27") (term "0"))
                     (rule "polySimp_sepPosMonomial" (formula "27"))
                     (rule "polySimp_mulComm0" (formula "27") (term "1"))
                     (rule "polySimp_rightDist" (formula "27") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "27") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "27") (term "1,1"))
                     (rule "polySimp_mulComm0" (formula "27") (term "0,1"))
                     (rule "inEqSimp_contradEq7" (formula "27") (term "0,0") (ifseqformula "4"))
                     (rule "times_zero_1" (formula "27") (term "1,0,0,0,0"))
                     (rule "add_zero_right" (formula "27") (term "0,0,0,0"))
                     (rule "leq_literals" (formula "27") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "27"))
                     (rule "polySimp_homoEq" (formula "27"))
                     (rule "times_zero_2" (formula "27") (term "1,0"))
                     (rule "add_zero_right" (formula "27") (term "0"))
                     (rule "polySimp_sepPosMonomial" (formula "27"))
                     (rule "polySimp_mulLiterals" (formula "27") (term "1"))
                     (rule "polySimp_elimOne" (formula "27") (term "1"))
                     (rule "polySimp_critPair" (formula "24") (ifseqformula "26"))
                     (rule "polySimp_mulComm0" (formula "24") (term "1,1,1,0"))
                     (rule "polySimp_mulAssoc" (formula "24") (term "0,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "24") (term "0,0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "24") (term "0,1,0,0"))
                     (rule "polySimp_elimOne" (formula "24") (term "0,1,0,0"))
                     (rule "polySimp_rightDist" (formula "24") (term "1,0"))
                     (rule "polySimp_mulComm1" (formula "24") (term "1,1,0"))
                     (rule "polySimp_mulAssoc" (formula "24") (term "0,1,0"))
                     (rule "polySimp_mulComm0" (formula "24") (term "0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "24") (term "0,0"))
                     (rule "polySimp_mulComm1" (formula "24") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "24") (term "0,0,0"))
                     (rule "polySimp_addAssoc" (formula "24") (term "0"))
                     (rule "polySimp_addComm1" (formula "24") (term "0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "24") (term "0"))
                     (rule "add_literals" (formula "24") (term "1,1,0"))
                     (rule "times_zero_1" (formula "24") (term "1,0"))
                     (rule "add_zero_right" (formula "24") (term "0"))
                     (rule "polySimp_addComm0" (formula "24") (term "0"))
                     (rule "polySimp_sepPosMonomial" (formula "24"))
                     (rule "polySimp_mulLiterals" (formula "24") (term "1"))
                     (rule "polySimp_elimOne" (formula "24") (term "1"))
                     (rule "jdiv_axiom" (formula "30") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "0,0,2,1"))
                     (rule "eqSymm" (formula "1"))
                     (rule "polySimp_elimOne" (formula "1") (term "0,0,2,0"))
                     (rule "inEqSimp_invertInEq1" (formula "1") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0"))
                     (rule "times_zero_2" (formula "1") (term "1,0,0"))
                     (rule "polySimp_elimOne" (formula "1") (term "0,0,0"))
                     (rule "inEqSimp_subsumption0" (formula "1") (term "0,0") (ifseqformula "17"))
                     (rule "leq_literals" (formula "1") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "eqSymm" (formula "1"))
                     (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "1"))
                     (rule "polyDiv_pullOut" (formula "31") (term "0,0") (inst "polyDivCoeff=quotient_2"))
                     (rule "polySimp_mulComm1" (formula "31") (term "1,0,0,2,0,0"))
                     (rule "polySimp_mulComm0" (formula "31") (term "0,1,0,0,2,0,0"))
                     (rule "polySimp_addComm0" (formula "31") (term "2,0,0"))
                     (rule "applyEq" (formula "31") (term "0,1,0,1,2,0,0") (ifseqformula "16"))
                     (rule "polySimp_mulLiterals" (formula "31") (term "1,0,1,2,0,0"))
                     (rule "polySimp_pullOutFactor0" (formula "31") (term "0,1,2,0,0"))
                     (rule "add_literals" (formula "31") (term "1,0,1,2,0,0"))
                     (rule "times_zero_1" (formula "31") (term "0,1,2,0,0"))
                     (rule "inEqSimp_contradEq7" (formula "31") (term "0,0,0") (ifseqformula "5"))
                     (rule "times_zero_1" (formula "31") (term "1,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "31") (term "0,0,0,0,0"))
                     (rule "leq_literals" (formula "31") (term "0,0,0,0"))
                      (builtin "One Step Simplification" (formula "31"))
                     (rule "polySimp_mulComm0" (formula "31") (term "0"))
                     (rule "polySimp_rightDist" (formula "31") (term "0"))
                     (rule "polySimp_homoEq" (formula "31"))
                     (rule "polySimp_mulComm0" (formula "31") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "31") (term "1,0"))
                     (rule "polySimp_mulComm0" (formula "31") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "31") (term "0"))
                     (rule "applyEq" (formula "31") (term "0,1,0,0") (ifseqformula "16"))
                     (rule "polySimp_mulLiterals" (formula "31") (term "1,0,0"))
                     (rule "polySimp_pullOutFactor0" (formula "31") (term "0,0"))
                     (rule "add_literals" (formula "31") (term "1,0,0"))
                     (rule "times_zero_1" (formula "31") (term "0,0"))
                     (rule "add_zero_left" (formula "31") (term "0"))
                     (rule "polySimp_invertEq" (formula "31"))
                     (rule "times_zero_2" (formula "31") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "31") (term "0"))
                     (rule "polySimp_elimOne" (formula "31") (term "0"))
                     (rule "polyDiv_zero" (formula "31") (term "0,0"))
                     (rule "div_literals" (formula "31") (term "1,0,0"))
                     (rule "inEqSimp_contradEq7" (formula "31") (term "0,0,0") (ifseqformula "5"))
                     (rule "times_zero_1" (formula "31") (term "1,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "31") (term "0,0,0,0,0"))
                     (rule "leq_literals" (formula "31") (term "0,0,0,0"))
                      (builtin "One Step Simplification" (formula "31"))
                     (rule "times_zero_2" (formula "31") (term "0"))
                      (builtin "One Step Simplification" (formula "31"))
                     (rule "closeTrue" (formula "31"))
                  )
               )
            )
            (branch "Case 2"
                (builtin "One Step Simplification" (formula "10"))
               (rule "closeTrue" (formula "10"))
            )
         )
         (branch "Exceptional Post (gcdHelp)"
             (builtin "One Step Simplification" (formula "6"))
             (builtin "One Step Simplification" (formula "8"))
            (rule "andLeft" (formula "6"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "7") (term "1,0") (ifseqformula "6"))
            (rule "andLeft" (formula "7"))
            (rule "andLeft" (formula "7"))
            (rule "andLeft" (formula "9"))
            (rule "notLeft" (formula "7"))
            (rule "close" (formula "10") (ifseqformula "9"))
         )
         (branch "Pre (gcdHelp)"
             (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "3")))
            (rule "inEqSimp_gtRight" (formula "5"))
            (rule "polySimp_mulAssoc" (formula "1") (term "0,0"))
            (rule "polySimp_mulComm0" (formula "1") (term "0,0,0"))
            (rule "polySimp_mulLiterals" (formula "1") (term "0,0"))
            (rule "polySimp_elimOne" (formula "1") (term "0,0"))
            (rule "polySimp_addComm0" (formula "1") (term "0"))
            (rule "inEqSimp_ltToLeq" (formula "2"))
            (rule "times_zero_1" (formula "2") (term "1,0,0"))
            (rule "add_zero_right" (formula "2") (term "0,0"))
            (rule "inEqSimp_ltToLeq" (formula "3"))
            (rule "times_zero_1" (formula "3") (term "1,0,0"))
            (rule "add_zero_right" (formula "3") (term "0,0"))
            (rule "inEqSimp_homoInEq1" (formula "6") (term "1"))
            (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1"))
            (rule "polySimp_elimOne" (formula "6") (term "1,0,1"))
            (rule "replace_known_left" (formula "6") (term "1") (ifseqformula "1"))
             (builtin "One Step Simplification" (formula "6"))
            (rule "inEqSimp_geqRight" (formula "6"))
            (rule "times_zero_1" (formula "1") (term "1,0,0"))
            (rule "add_zero_right" (formula "1") (term "0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "2"))
            (rule "polySimp_mulLiterals" (formula "2") (term "1"))
            (rule "polySimp_elimOne" (formula "2") (term "1"))
            (rule "inEqSimp_sepPosMonomial0" (formula "3"))
            (rule "mul_literals" (formula "3") (term "1"))
            (rule "inEqSimp_sepPosMonomial0" (formula "4"))
            (rule "mul_literals" (formula "4") (term "1"))
            (rule "inEqSimp_sepNegMonomial0" (formula "1"))
            (rule "polySimp_mulLiterals" (formula "1") (term "0"))
            (rule "polySimp_elimOne" (formula "1") (term "0"))
            (rule "inEqSimp_contradInEq1" (formula "4") (ifseqformula "1"))
            (rule "qeq_literals" (formula "4") (term "0"))
             (builtin "One Step Simplification" (formula "4"))
            (rule "closeFalse" (formula "4"))
         )
      )
   )
   (branch "if x_1 false"
       (builtin "One Step Simplification" (formula "5"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "notLeft" (formula "1"))
      (rule "variableDeclarationMult" (formula "5") (term "1"))
      (rule "variableDeclaration" (formula "5") (term "1") (newnames "big"))
      (rule "variableDeclaration" (formula "5") (term "1") (newnames "small"))
      (rule "blockEmpty" (formula "5") (term "1"))
      (rule "ifElseUnfold" (formula "5") (term "1") (inst "#boolv=x"))
      (rule "variableDeclaration" (formula "5") (term "1") (newnames "x_2"))
      (rule "greater_than_comparison_simple" (formula "5") (term "1"))
       (builtin "One Step Simplification" (formula "5"))
      (rule "ifElseSplit" (formula "5"))
      (branch "if x_2 true"
          (builtin "One Step Simplification" (formula "6"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "assignment" (formula "6") (term "1"))
          (builtin "One Step Simplification" (formula "6"))
         (rule "assignment" (formula "6") (term "1"))
          (builtin "One Step Simplification" (formula "6"))
         (rule "blockEmpty" (formula "6") (term "1"))
         (rule "returnUnfold" (formula "6") (term "1") (inst "#v0=x"))
         (rule "variableDeclarationAssign" (formula "6") (term "1"))
         (rule "variableDeclaration" (formula "6") (term "1") (newnames "x_3"))
          (builtin "Use Operation Contract" (formula "6") (newnames "heapBefore_gcdHelp,result_gcdHelp,exc_0,heapAfter_gcdHelp,anon_heap_gcdHelp") (contract "Gcd[Gcd::gcdHelp(int,int)].JML normal_behavior operation contract.0"))
         (branch "Post (gcdHelp)"
             (builtin "One Step Simplification" (formula "6"))
             (builtin "One Step Simplification" (formula "8"))
            (rule "andLeft" (formula "6"))
            (rule "andLeft" (formula "7"))
            (rule "andLeft" (formula "8"))
            (rule "assignment" (formula "10") (term "1"))
             (builtin "One Step Simplification" (formula "10"))
            (rule "polySimp_invertEq" (formula "8") (term "0,0"))
            (rule "times_zero_2" (formula "8") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "8") (term "0,0,0"))
            (rule "polySimp_elimOne" (formula "8") (term "0,0,0"))
            (rule "methodCallReturn" (formula "10") (term "1"))
            (rule "assignment" (formula "10") (term "1"))
             (builtin "One Step Simplification" (formula "10"))
            (rule "methodCallEmpty" (formula "10") (term "1"))
            (rule "tryEmpty" (formula "10") (term "1"))
             (builtin "One Step Simplification" (formula "10"))
            (rule "emptyModality" (formula "10") (term "1"))
            (rule "andRight" (formula "10"))
            (branch "Case 1"
               (rule "impRight" (formula "10"))
               (rule "andRight" (formula "11"))
               (branch "Case 1"
                  (rule "andRight" (formula "11"))
                  (branch "Case 1"
                      (builtin "One Step Simplification" (formula "1"))
                      (builtin "One Step Simplification" (formula "11"))
                     (rule "inEqSimp_ltRight" (formula "10"))
                     (rule "times_zero_1" (formula "1") (term "0,0"))
                     (rule "add_zero_left" (formula "1") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "4"))
                     (rule "times_zero_1" (formula "4") (term "1,0,0"))
                     (rule "add_zero_right" (formula "4") (term "0,0"))
                     (rule "inEqSimp_gtToGeq" (formula "3"))
                     (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "3") (term "0"))
                     (rule "inEqSimp_gtToGeq" (formula "10") (term "0,0,0,0,1,1"))
                     (rule "times_zero_1" (formula "10") (term "1,0,0,0,0,0,0,1,1"))
                     (rule "add_zero_right" (formula "10") (term "0,0,0,0,0,0,1,1"))
                     (rule "jmod_axiom" (formula "10") (term "0,1,0,1,1"))
                     (rule "polySimp_mulComm1" (formula "10") (term "1,0,1,0,1,1"))
                     (rule "jmod_axiom" (formula "10") (term "0,0,0,1"))
                     (rule "polySimp_mulComm1" (formula "10") (term "1,0,0,0,1"))
                     (rule "jmod_axiom" (formula "10") (term "0,1,0,0,1,1"))
                     (rule "polySimp_mulComm1" (formula "10") (term "1,0,1,0,0,1,1"))
                     (rule "jmod_axiom" (formula "10") (term "0,1,0,1"))
                     (rule "polySimp_mulComm1" (formula "10") (term "1,0,1,0,1"))
                     (rule "jmod_axiom" (formula "10") (term "0,1,0,0,0,1,1"))
                     (rule "polySimp_mulComm1" (formula "10") (term "1,0,1,0,0,0,1,1"))
                     (rule "jmod_axiom" (formula "11") (term "0"))
                     (rule "polySimp_mulComm1" (formula "11") (term "1,0"))
                     (rule "polySimp_sepNegMonomial" (formula "10") (term "1,0,1,1"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "0,1,0,1,1"))
                     (rule "polySimp_elimOne" (formula "10") (term "0,1,0,1,1"))
                     (rule "polySimp_sepNegMonomial" (formula "10") (term "0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "0,0,0,1"))
                     (rule "polySimp_elimOne" (formula "10") (term "0,0,0,1"))
                     (rule "polySimp_sepNegMonomial" (formula "10") (term "1,0,0,1,1"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "0,1,0,0,1,1"))
                     (rule "polySimp_elimOne" (formula "10") (term "0,1,0,0,1,1"))
                     (rule "polySimp_sepNegMonomial" (formula "10") (term "1,0,1"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "0,1,0,1"))
                     (rule "polySimp_elimOne" (formula "10") (term "0,1,0,1"))
                     (rule "polySimp_sepNegMonomial" (formula "10") (term "1,0,0,0,1,1"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "0,1,0,0,0,1,1"))
                     (rule "polySimp_elimOne" (formula "10") (term "0,1,0,0,0,1,1"))
                     (rule "polySimp_sepNegMonomial" (formula "11"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                     (rule "polySimp_elimOne" (formula "11") (term "0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                     (rule "mul_literals" (formula "4") (term "1"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                     (rule "polySimp_elimOne" (formula "3") (term "0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "0,0,0,0,1,1"))
                     (rule "mul_literals" (formula "10") (term "1,0,0,0,0,1,1"))
                     (rule "inEqSimp_contradEq3" (formula "10") (term "0,0") (ifseqformula "4"))
                     (rule "times_zero_1" (formula "10") (term "1,0,0,0,0"))
                     (rule "add_zero_right" (formula "10") (term "0,0,0,0"))
                     (rule "qeq_literals" (formula "10") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "10"))
                     (rule "andLeft" (formula "10"))
                     (rule "andLeft" (formula "10"))
                     (rule "inEqSimp_contradEq3" (formula "2") (term "0,0") (ifseqformula "4"))
                     (rule "times_zero_1" (formula "2") (term "1,0,0,0,0"))
                     (rule "add_zero_right" (formula "2") (term "0,0,0,0"))
                     (rule "qeq_literals" (formula "2") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "2"))
                     (rule "true_left" (formula "2"))
                     (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                     (rule "times_zero_1" (formula "1") (term "0,0"))
                     (rule "add_zero_left" (formula "1") (term "0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                     (rule "polySimp_elimOne" (formula "1") (term "0"))
                     (rule "nnf_imp2or" (formula "11") (term "0"))
                     (rule "nnf_notAnd" (formula "11") (term "0,0"))
                     (rule "nnf_notAnd" (formula "11") (term "0,0,0"))
                     (rule "inEqSimp_notGeq" (formula "11") (term "0,0,0,0"))
                     (rule "mul_literals" (formula "11") (term "1,0,0,0,0,0,0"))
                     (rule "add_literals" (formula "11") (term "0,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "11") (term "0,0,0,0,0"))
                     (rule "jdiv_axiom" (formula "12") (term "0,0"))
                     (rule "eqSymm" (formula "1"))
                     (rule "inEqSimp_contradInEq0" (formula "1") (term "0,0") (ifseqformula "4"))
                     (rule "qeq_literals" (formula "1") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "eqSymm" (formula "1"))
                     (rule "applyEq" (formula "13") (term "0,0") (ifseqformula "1"))
                     (rule "polySimp_mulComm1" (formula "13") (term "0"))
                     (rule "polySimp_homoEq" (formula "13"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "1,0"))
                     (rule "polySimp_elimOne" (formula "13") (term "1,0"))
                     (rule "polySimp_sepPosMonomial" (formula "13"))
                     (rule "polyDiv_pullOut" (formula "13") (term "0,0") (inst "polyDivCoeff=jdiv(mul(a, Z(neglit(1(#)))), result_gcdHelp)"))
                     (rule "polySimp_mulComm1" (formula "13") (term "1,0,0,2,0,0"))
                     (rule "polySimp_addComm0" (formula "13") (term "2,0,0"))
                     (rule "applyEq" (formula "13") (term "0,1,0,1,2,0,0") (ifseqformula "10"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1,2,0,0"))
                     (rule "polySimp_pullOutFactor0" (formula "13") (term "0,1,2,0,0"))
                     (rule "add_literals" (formula "13") (term "1,0,1,2,0,0"))
                     (rule "times_zero_1" (formula "13") (term "0,1,2,0,0"))
                     (rule "polySimp_addComm0" (formula "13") (term "2,0,0"))
                     (rule "polyDiv_zero" (formula "13") (term "0,2,0,0"))
                     (rule "div_literals" (formula "13") (term "1,0,2,0,0"))
                     (rule "polySimp_addComm0" (formula "13") (term "2,0,0"))
                     (rule "polyDiv_pullOut" (formula "1") (term "0,1") (inst "polyDivCoeff=jdiv(mul(a, Z(neglit(1(#)))), result_gcdHelp)"))
                     (rule "eqSymm" (formula "1"))
                     (rule "polySimp_homoEq" (formula "1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,0"))
                     (rule "polySimp_elimOne" (formula "1") (term "1,0"))
                     (rule "polySimp_mulComm1" (formula "1") (term "1,0,0,2,1,0"))
                     (rule "polySimp_addComm0" (formula "1") (term "2,1,0"))
                     (rule "applyEq" (formula "1") (term "0,1,0,1,2,1,0") (ifseqformula "10"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,2,1,0"))
                     (rule "polySimp_pullOutFactor0" (formula "1") (term "0,1,2,1,0"))
                     (rule "add_literals" (formula "1") (term "1,0,1,2,1,0"))
                     (rule "times_zero_1" (formula "1") (term "0,1,2,1,0"))
                     (rule "polySimp_addComm0" (formula "1") (term "2,1,0"))
                     (rule "polySimp_sepPosMonomial" (formula "1"))
                     (rule "polyDiv_zero" (formula "1") (term "0,2,0"))
                     (rule "div_literals" (formula "1") (term "1,0,2,0"))
                     (rule "polySimp_addComm0" (formula "1") (term "2,0"))
                     (rule "applyEq" (formula "13") (term "0,0") (ifseqformula "1"))
                     (rule "polySimp_mulComm1" (formula "13") (term "0"))
                     (rule "polySimp_homoEq" (formula "13"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "1,0"))
                     (rule "polySimp_elimOne" (formula "13") (term "1,0"))
                     (rule "polySimp_sepPosMonomial" (formula "13"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "1"))
                     (rule "polySimp_elimOne" (formula "13") (term "1"))
                     (rule "jdiv_axiom" (formula "11") (term "0,0"))
                     (rule "eqSymm" (formula "11"))
                     (rule "replace_known_left" (formula "11") (term "0,0") (ifseqformula "2"))
                      (builtin "One Step Simplification" (formula "11"))
                     (rule "eqSymm" (formula "11"))
                     (rule "applyEq" (formula "12") (term "0,0") (ifseqformula "11"))
                     (rule "jdiv_axiom" (formula "10") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "0,0,2,1"))
                     (rule "eqSymm" (formula "10"))
                     (rule "polySimp_elimOne" (formula "10") (term "0,0,2,0"))
                     (rule "inEqSimp_invertInEq1" (formula "10") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "0,0,0"))
                     (rule "times_zero_2" (formula "10") (term "1,0,0"))
                     (rule "polySimp_elimOne" (formula "10") (term "0,0,0"))
                     (rule "inEqSimp_subsumption0" (formula "10") (term "0,0") (ifseqformula "4"))
                     (rule "leq_literals" (formula "10") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "10"))
                     (rule "eqSymm" (formula "10"))
                     (rule "applyEq" (formula "11") (term "0,0") (ifseqformula "10"))
                     (rule "applyEq" (formula "1") (term "0,2,0") (ifseqformula "10"))
                     (rule "div_axiom" (formula "1") (term "1,0") (inst "quotient=quotient_0"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "true_left" (formula "1"))
                     (rule "ifthenelse_split" (formula "1") (term "1,2,0"))
                     (branch "result_gcdHelp = 0 TRUE"
                        (rule "replace_known_left" (formula "2") (term "0,0") (ifseqformula "1"))
                         (builtin "One Step Simplification" (formula "2"))
                        (rule "eqSymm" (formula "2"))
                        (rule "polySimp_homoEq" (formula "2"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                        (rule "polySimp_elimOne" (formula "2") (term "1,0"))
                        (rule "applyEq" (formula "16") (term "1,0,0") (ifseqformula "1"))
                        (rule "polySimp_mulComm0" (formula "16") (term "0"))
                        (rule "applyEq" (formula "2") (term "1,1,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "13") (term "1,0") (ifseqformula "1"))
                        (rule "eqSymm" (formula "13"))
                        (rule "applyEq" (formula "12") (term "1,0") (ifseqformula "1"))
                        (rule "times_zero_1" (formula "12") (term "0"))
                        (rule "eqSymm" (formula "12"))
                        (rule "applyEq" (formula "11") (term "1,0") (ifseqformula "1"))
                        (rule "eqSymm" (formula "11"))
                        (rule "applyEq" (formula "14") (term "1,0,0") (ifseqformula "1"))
                        (rule "polySimp_mulComm0" (formula "14") (term "0"))
                        (rule "applyEq" (formula "15") (term "0,0,0,1,0") (ifseqformula "1"))
                        (rule "jdiv_axiom_inline" (formula "15") (term "0,0,1,0"))
                        (rule "times_zero_2" (formula "15") (term "0,0,2,0,0,1,0"))
                        (rule "qeq_literals" (formula "15") (term "0,0,0,1,0"))
                         (builtin "One Step Simplification" (formula "15"))
                        (rule "applyEq" (formula "11") (term "1,0") (ifseqformula "1"))
                        (rule "eqSymm" (formula "11"))
                        (rule "applyEq" (formula "13") (term "1,0") (ifseqformula "1"))
                        (rule "eqSymm" (formula "13"))
                        (rule "applyEq" (formula "14") (term "0,0") (ifseqformula "1"))
                        (rule "times_zero_2" (formula "14") (term "0"))
                        (rule "eqSymm" (formula "14"))
                        (rule "applyEq" (formula "16") (term "0,0") (ifseqformula "1"))
                        (rule "times_zero_2" (formula "16") (term "0"))
                        (rule "eqSymm" (formula "16"))
                        (rule "applyEq" (formula "13") (term "0,0") (ifseqformula "14"))
                        (rule "eqSymm" (formula "13"))
                        (rule "jdiv_axiom_inline" (formula "13") (term "1"))
                        (rule "times_zero_2" (formula "13") (term "0,0,2,1"))
                        (rule "div_literals" (formula "13") (term "1,1"))
                        (rule "qeq_literals" (formula "13") (term "0,1"))
                         (builtin "One Step Simplification" (formula "13"))
                        (rule "eqSymm" (formula "13"))
                        (rule "applyEq" (formula "15") (term "0,0,0,0,1,0,0") (ifseqformula "14"))
                        (rule "jdiv_axiom_inline" (formula "15") (term "0,0,0,1,0,0"))
                        (rule "qeq_literals" (formula "15") (term "0,0,0,0,1,0,0"))
                         (builtin "One Step Simplification" (formula "15"))
                        (rule "applyEq" (formula "4") (term "0") (ifseqformula "14"))
                        (rule "inEqSimp_homoInEq0" (formula "4"))
                        (rule "times_zero_2" (formula "4") (term "1,0"))
                        (rule "add_zero_right" (formula "4") (term "0"))
                        (rule "applyEq" (formula "3") (term "0") (ifseqformula "14"))
                        (rule "qeq_literals" (formula "3"))
                        (rule "true_left" (formula "3"))
                        (rule "applyEq" (formula "12") (term "0,1") (ifseqformula "13"))
                        (rule "div_literals" (formula "12") (term "1"))
                         (builtin "One Step Simplification" (formula "12"))
                        (rule "true_left" (formula "12"))
                        (rule "applyEq" (formula "13") (term "1,1,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "13") (term "1,0,1,0,0") (ifseqformula "12"))
                         (builtin "One Step Simplification" (formula "13"))
                        (rule "true_left" (formula "13"))
                        (rule "polySimp_sepPosMonomial" (formula "2"))
                        (rule "polySimp_invertEq" (formula "11"))
                        (rule "times_zero_2" (formula "11") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                        (rule "polySimp_elimOne" (formula "11") (term "0"))
                        (rule "close" (formula "13") (ifseqformula "11"))
                     )
                     (branch "result_gcdHelp = 0 FALSE"
                        (rule "add_zero_right" (formula "1") (term "2,0"))
                        (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "15"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "eqSymm" (formula "1"))
                        (rule "polySimp_homoEq" (formula "1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,0"))
                        (rule "polySimp_elimOne" (formula "1") (term "1,0"))
                        (rule "polySimp_sepPosMonomial" (formula "1"))
                        (rule "applyEq" (formula "16") (term "0,0") (ifseqformula "1"))
                        (rule "polySimp_mulComm1" (formula "16") (term "0"))
                        (rule "polySimp_homoEq" (formula "16"))
                        (rule "polySimp_mulLiterals" (formula "16") (term "1,0"))
                        (rule "polySimp_elimOne" (formula "16") (term "1,0"))
                        (rule "applyEq" (formula "16") (term "1,0") (ifseqformula "11"))
                        (rule "polySimp_pullOutFactor1" (formula "16") (term "0"))
                        (rule "add_literals" (formula "16") (term "1,0"))
                        (rule "times_zero_1" (formula "16") (term "0"))
                         (builtin "One Step Simplification" (formula "16"))
                        (rule "closeTrue" (formula "16"))
                     )
                  )
                  (branch "Case 2"
                      (builtin "One Step Simplification" (formula "1"))
                      (builtin "One Step Simplification" (formula "11"))
                     (rule "replace_known_right" (formula "9") (term "1,0,1") (ifseqformula "11"))
                      (builtin "One Step Simplification" (formula "9"))
                     (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "9"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "notLeft" (formula "1"))
                     (rule "inEqSimp_ltRight" (formula "10"))
                     (rule "times_zero_1" (formula "1") (term "0,0"))
                     (rule "add_zero_left" (formula "1") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "3"))
                     (rule "times_zero_1" (formula "3") (term "1,0,0"))
                     (rule "add_zero_right" (formula "3") (term "0,0"))
                     (rule "inEqSimp_gtToGeq" (formula "2"))
                     (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "2") (term "0"))
                     (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "9"))
                     (rule "add_zero_right" (formula "3") (term "0"))
                     (rule "leq_literals" (formula "3"))
                     (rule "closeFalse" (formula "3"))
                  )
               )
               (branch "Case 2"
                   (builtin "One Step Simplification" (formula "1"))
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "allRight" (formula "11") (inst "sk=x_0"))
                  (rule "impRight" (formula "11"))
                  (rule "andLeft" (formula "1"))
                  (rule "andLeft" (formula "1"))
                  (rule "inEqSimp_ltRight" (formula "13"))
                  (rule "times_zero_1" (formula "1") (term "0,0"))
                  (rule "add_zero_left" (formula "1") (term "0"))
                  (rule "inEqSimp_gtToGeq" (formula "13") (term "0,0,0,0,1,1"))
                  (rule "times_zero_1" (formula "13") (term "1,0,0,0,0,0,0,1,1"))
                  (rule "add_zero_right" (formula "13") (term "0,0,0,0,0,0,1,1"))
                  (rule "inEqSimp_gtToGeq" (formula "6"))
                  (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "6") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "7"))
                  (rule "times_zero_1" (formula "7") (term "1,0,0"))
                  (rule "add_zero_right" (formula "7") (term "0,0"))
                  (rule "inEqSimp_gtToGeq" (formula "2"))
                  (rule "times_zero_1" (formula "2") (term "1,0,0"))
                  (rule "add_zero_right" (formula "2") (term "0,0"))
                  (rule "jmod_axiom" (formula "13") (term "0,1,0,0,0,1,1"))
                  (rule "polySimp_mulComm1" (formula "13") (term "1,0,1,0,0,0,1,1"))
                  (rule "jmod_axiom" (formula "13") (term "0,1,0,1,1"))
                  (rule "polySimp_mulComm1" (formula "13") (term "1,0,1,0,1,1"))
                  (rule "jmod_axiom" (formula "13") (term "0,0,0,1"))
                  (rule "polySimp_mulComm1" (formula "13") (term "1,0,0,0,1"))
                  (rule "jmod_axiom" (formula "13") (term "0,1,0,0,1,1"))
                  (rule "polySimp_mulComm1" (formula "13") (term "1,0,1,0,0,1,1"))
                  (rule "jmod_axiom" (formula "13") (term "0,1,0,1"))
                  (rule "polySimp_mulComm1" (formula "13") (term "1,0,1,0,1"))
                  (rule "jmod_axiom" (formula "14") (term "0"))
                  (rule "polySimp_mulComm1" (formula "14") (term "1,0"))
                  (rule "jmod_axiom" (formula "4") (term "0"))
                  (rule "polySimp_mulComm1" (formula "4") (term "1,0"))
                  (rule "jmod_axiom" (formula "3") (term "0"))
                  (rule "polySimp_mulComm1" (formula "3") (term "1,0"))
                  (rule "polySimp_sepNegMonomial" (formula "13") (term "1,0,0,0,1,1"))
                  (rule "polySimp_mulLiterals" (formula "13") (term "0,1,0,0,0,1,1"))
                  (rule "polySimp_elimOne" (formula "13") (term "0,1,0,0,0,1,1"))
                  (rule "polySimp_sepNegMonomial" (formula "13") (term "1,0,1,1"))
                  (rule "polySimp_mulLiterals" (formula "13") (term "0,1,0,1,1"))
                  (rule "polySimp_elimOne" (formula "13") (term "0,1,0,1,1"))
                  (rule "polySimp_sepNegMonomial" (formula "13") (term "0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "13") (term "0,0,0,1"))
                  (rule "polySimp_elimOne" (formula "13") (term "0,0,0,1"))
                  (rule "polySimp_sepNegMonomial" (formula "13") (term "1,0,0,1,1"))
                  (rule "polySimp_mulLiterals" (formula "13") (term "0,1,0,0,1,1"))
                  (rule "polySimp_elimOne" (formula "13") (term "0,1,0,0,1,1"))
                  (rule "polySimp_sepNegMonomial" (formula "13") (term "1,0,1"))
                  (rule "polySimp_mulLiterals" (formula "13") (term "0,1,0,1"))
                  (rule "polySimp_elimOne" (formula "13") (term "0,1,0,1"))
                  (rule "polySimp_sepNegMonomial" (formula "14"))
                  (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                  (rule "polySimp_elimOne" (formula "14") (term "0"))
                  (rule "polySimp_sepNegMonomial" (formula "4"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                  (rule "polySimp_elimOne" (formula "4") (term "0"))
                  (rule "polySimp_sepNegMonomial" (formula "3"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                  (rule "polySimp_elimOne" (formula "3") (term "0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "0,0,0,0,1,1"))
                  (rule "mul_literals" (formula "13") (term "1,0,0,0,0,1,1"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "6"))
                  (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                  (rule "polySimp_elimOne" (formula "6") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "7"))
                  (rule "mul_literals" (formula "7") (term "1"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                  (rule "mul_literals" (formula "2") (term "1"))
                  (rule "inEqSimp_contradEq3" (formula "13") (term "0,0") (ifseqformula "7"))
                  (rule "times_zero_1" (formula "13") (term "1,0,0,0,0"))
                  (rule "add_zero_right" (formula "13") (term "0,0,0,0"))
                  (rule "qeq_literals" (formula "13") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "13"))
                  (rule "andLeft" (formula "13"))
                  (rule "andLeft" (formula "13"))
                  (rule "inEqSimp_contradEq3" (formula "5") (term "0,0") (ifseqformula "7"))
                  (rule "times_zero_1" (formula "5") (term "1,0,0,0,0"))
                  (rule "add_zero_right" (formula "5") (term "0,0,0,0"))
                  (rule "qeq_literals" (formula "5") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "5"))
                  (rule "true_left" (formula "5"))
                  (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "5"))
                  (rule "times_zero_1" (formula "1") (term "0,0"))
                  (rule "add_zero_left" (formula "1") (term "0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                  (rule "polySimp_elimOne" (formula "1") (term "0"))
                  (rule "nnf_imp2or" (formula "14") (term "0"))
                  (rule "nnf_notAnd" (formula "14") (term "0,0"))
                  (rule "nnf_notAnd" (formula "14") (term "0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "14") (term "0,0,0,0"))
                  (rule "mul_literals" (formula "14") (term "1,0,0,0,0,0,0"))
                  (rule "add_literals" (formula "14") (term "0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "14") (term "0,0,0,0,0"))
                  (rule "jdiv_axiom" (formula "15") (term "0,0"))
                  (rule "eqSymm" (formula "1"))
                  (rule "jdiv_axiom" (formula "5") (term "0,0"))
                  (rule "eqSymm" (formula "5"))
                  (rule "replace_known_left" (formula "5") (term "0,0") (ifseqformula "2"))
                   (builtin "One Step Simplification" (formula "5"))
                  (rule "eqSymm" (formula "5"))
                  (rule "applyEq" (formula "6") (term "0,0") (ifseqformula "5"))
                  (rule "jdiv_axiom" (formula "4") (term "0,0"))
                  (rule "eqSymm" (formula "4"))
                  (rule "inEqSimp_contradInEq0" (formula "4") (term "0,0") (ifseqformula "9"))
                  (rule "qeq_literals" (formula "4") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "4"))
                  (rule "eqSymm" (formula "4"))
                  (rule "applyEq" (formula "5") (term "0,0") (ifseqformula "4"))
                  (rule "polySimp_mulComm1" (formula "5") (term "0"))
                  (rule "polySimp_homoEq" (formula "5"))
                  (rule "polySimp_mulLiterals" (formula "5") (term "1,0"))
                  (rule "polySimp_elimOne" (formula "5") (term "1,0"))
                  (rule "polySimp_sepPosMonomial" (formula "5"))
                  (rule "jdiv_axiom" (formula "15") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "15") (term "0,0,2,1"))
                  (rule "eqSymm" (formula "15"))
                  (rule "polySimp_elimOne" (formula "15") (term "0,0,2,0"))
                  (rule "inEqSimp_invertInEq1" (formula "15") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "15") (term "0,0,0"))
                  (rule "times_zero_2" (formula "15") (term "1,0,0"))
                  (rule "polySimp_elimOne" (formula "15") (term "0,0,0"))
                  (rule "inEqSimp_subsumption0" (formula "15") (term "0,0") (ifseqformula "9"))
                  (rule "leq_literals" (formula "15") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "15"))
                  (rule "eqSymm" (formula "15"))
                  (rule "applyEq" (formula "16") (term "0,0") (ifseqformula "15"))
                  (rule "jdiv_axiom" (formula "17") (term "0,0"))
                  (rule "eqSymm" (formula "17"))
                  (rule "replace_known_left" (formula "17") (term "0,0") (ifseqformula "2"))
                   (builtin "One Step Simplification" (formula "17"))
                  (rule "eqSymm" (formula "17"))
                  (rule "applyEq" (formula "18") (term "0,0") (ifseqformula "17"))
                  (rule "div_axiom" (formula "1") (term "1,0") (inst "quotient=quotient_0"))
                  (rule "polySimp_mulComm0" (formula "1") (term "0,2,1,1"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,1,1,1,1"))
                  (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,1"))
                  (rule "polySimp_mulComm0" (formula "1") (term "0,1,1,1"))
                  (rule "inEqSimp_contradEq7" (formula "1") (term "0") (ifseqformula "4"))
                  (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                  (rule "add_zero_right" (formula "1") (term "0,0,0"))
                  (rule "leq_literals" (formula "1") (term "0,0"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "andLeft" (formula "1"))
                  (rule "andLeft" (formula "1"))
                  (rule "applyEq" (formula "4") (term "1,0") (ifseqformula "1"))
                  (rule "inEqSimp_subsumption1" (formula "3") (term "0") (ifseqformula "6"))
                  (rule "leq_literals" (formula "3") (term "0,0"))
                   (builtin "One Step Simplification" (formula "3"))
                  (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "2"))
                  (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                  (rule "polySimp_elimOne" (formula "3") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "3") (term "0"))
                  (rule "polySimp_rightDist" (formula "3") (term "0,0,0"))
                  (rule "mul_literals" (formula "3") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor2b" (formula "3") (term "0,0"))
                  (rule "add_literals" (formula "3") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "3") (term "1,0,0"))
                  (rule "add_zero_right" (formula "3") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                  (rule "mul_literals" (formula "3") (term "1"))
                  (rule "div_axiom" (formula "4") (term "0,2,0") (inst "quotient=quotient_1"))
                  (rule "polySimp_mulComm0" (formula "4") (term "0,1,1,1"))
                  (rule "polySimp_mulComm0" (formula "4") (term "1,1,1,1,1"))
                  (rule "polySimp_mulComm0" (formula "4") (term "0,2,1,1"))
                  (rule "polySimp_mulComm0" (formula "4") (term "0,1,0,1"))
                  (rule "inEqSimp_contradEq7" (formula "4") (term "0") (ifseqformula "7"))
                  (rule "times_zero_1" (formula "4") (term "1,0,0,0"))
                  (rule "add_zero_right" (formula "4") (term "0,0,0"))
                  (rule "leq_literals" (formula "4") (term "0,0"))
                   (builtin "One Step Simplification" (formula "4"))
                  (rule "andLeft" (formula "4"))
                  (rule "andLeft" (formula "4"))
                  (rule "applyEq" (formula "7") (term "0,2,0") (ifseqformula "4"))
                  (rule "inEqSimp_subsumption1" (formula "6") (term "0") (ifseqformula "9"))
                  (rule "leq_literals" (formula "6") (term "0,0"))
                   (builtin "One Step Simplification" (formula "6"))
                  (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "5"))
                  (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0"))
                  (rule "polySimp_elimOne" (formula "6") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "6") (term "0"))
                  (rule "polySimp_rightDist" (formula "6") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "6") (term "0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "6") (term "1,0,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0"))
                  (rule "add_literals" (formula "6") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "6") (term "1,0,0"))
                  (rule "add_zero_right" (formula "6") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                  (rule "mul_literals" (formula "6") (term "1"))
                  (rule "div_axiom" (formula "12") (term "1") (inst "quotient=quotient_2"))
                  (rule "polySimp_mulComm0" (formula "12") (term "0,1,0,1"))
                  (rule "polySimp_mulComm0" (formula "12") (term "0,2,1,1"))
                  (rule "polySimp_mulComm0" (formula "12") (term "1,1,1,1,1"))
                  (rule "polySimp_mulComm0" (formula "12") (term "0,1,1,1"))
                  (rule "inEqSimp_contradEq7" (formula "12") (term "0") (ifseqformula "9"))
                  (rule "times_zero_1" (formula "12") (term "1,0,0,0"))
                  (rule "add_zero_right" (formula "12") (term "0,0,0"))
                  (rule "leq_literals" (formula "12") (term "0,0"))
                   (builtin "One Step Simplification" (formula "12"))
                  (rule "andLeft" (formula "12"))
                  (rule "andLeft" (formula "12"))
                  (rule "applyEq" (formula "16") (term "0,0") (ifseqformula "12"))
                  (rule "polySimp_mulComm0" (formula "16") (term "0"))
                  (rule "applyEq" (formula "14") (term "0,1") (ifseqformula "16"))
                  (rule "inEqSimp_homoInEq1" (formula "14") (term "1"))
                  (rule "polySimp_addComm1" (formula "14") (term "0,1"))
                  (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0,1"))
                  (rule "add_literals" (formula "14") (term "1,1,0,0,1"))
                  (rule "times_zero_1" (formula "14") (term "1,0,0,1"))
                  (rule "add_zero_right" (formula "14") (term "0,0,1"))
                  (rule "applyEq" (formula "13") (term "0") (ifseqformula "16"))
                  (rule "inEqSimp_homoInEq0" (formula "13"))
                  (rule "polySimp_pullOutFactor1" (formula "13") (term "0"))
                  (rule "add_literals" (formula "13") (term "1,0"))
                  (rule "times_zero_1" (formula "13") (term "0"))
                  (rule "qeq_literals" (formula "13"))
                  (rule "true_left" (formula "13"))
                  (rule "applyEq" (formula "13") (term "0,2") (ifseqformula "15"))
                  (rule "inEqSimp_homoInEq1" (formula "13") (term "2"))
                  (rule "polySimp_addComm1" (formula "13") (term "0,2"))
                  (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0,2"))
                  (rule "add_literals" (formula "13") (term "1,1,0,0,2"))
                  (rule "times_zero_1" (formula "13") (term "1,0,0,2"))
                  (rule "add_zero_right" (formula "13") (term "0,0,2"))
                  (rule "applyEq" (formula "14") (term "1") (ifseqformula "12"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "13") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "13") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "13") (term "0,1"))
                  (rule "replace_known_left" (formula "13") (term "1") (ifseqformula "9"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "2"))
                  (rule "mul_literals" (formula "13") (term "1,2"))
                  (rule "inEqSimp_subsumption1" (formula "13") (term "0") (ifseqformula "9"))
                  (rule "leq_literals" (formula "13") (term "0,0"))
                   (builtin "One Step Simplification" (formula "13"))
                  (rule "true_left" (formula "13"))
                  (rule "div_axiom" (formula "10") (term "0,1") (inst "quotient=quotient_3"))
                  (rule "polySimp_mulComm0" (formula "10") (term "0,1,0,1"))
                  (rule "polySimp_mulComm0" (formula "10") (term "1,1,1,1,1"))
                  (rule "polySimp_mulComm0" (formula "10") (term "0,1,1,1"))
                  (rule "polySimp_mulComm0" (formula "10") (term "0,2,1,1"))
                  (rule "inEqSimp_contradEq7" (formula "10") (term "0") (ifseqformula "9"))
                  (rule "times_zero_1" (formula "10") (term "1,0,0,0"))
                  (rule "add_zero_right" (formula "10") (term "0,0,0"))
                  (rule "leq_literals" (formula "10") (term "0,0"))
                   (builtin "One Step Simplification" (formula "10"))
                  (rule "andLeft" (formula "10"))
                  (rule "andLeft" (formula "10"))
                  (rule "applyEq" (formula "14") (term "0,0") (ifseqformula "10"))
                  (rule "polySimp_mulComm0" (formula "14") (term "0"))
                  (rule "applyEq" (formula "12") (term "0,2") (ifseqformula "14"))
                  (rule "inEqSimp_homoInEq1" (formula "12") (term "2"))
                  (rule "polySimp_mulLiterals" (formula "12") (term "1,0,2"))
                  (rule "polySimp_elimOne" (formula "12") (term "1,0,2"))
                  (rule "polySimp_addComm1" (formula "12") (term "0,2"))
                  (rule "polySimp_pullOutFactor2b" (formula "12") (term "0,0,2"))
                  (rule "add_literals" (formula "12") (term "1,1,0,0,2"))
                  (rule "times_zero_1" (formula "12") (term "1,0,0,2"))
                  (rule "add_zero_right" (formula "12") (term "0,0,2"))
                  (rule "applyEq" (formula "11") (term "0") (ifseqformula "14"))
                  (rule "inEqSimp_homoInEq0" (formula "11"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "1,0"))
                  (rule "polySimp_pullOutFactor0" (formula "11") (term "0"))
                  (rule "add_literals" (formula "11") (term "1,0"))
                  (rule "times_zero_1" (formula "11") (term "0"))
                  (rule "qeq_literals" (formula "11"))
                  (rule "true_left" (formula "11"))
                  (rule "applyEq" (formula "11") (term "0,1") (ifseqformula "13"))
                  (rule "inEqSimp_homoInEq1" (formula "11") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1"))
                  (rule "polySimp_elimOne" (formula "11") (term "1,0,1"))
                  (rule "polySimp_addComm1" (formula "11") (term "0,1"))
                  (rule "polySimp_pullOutFactor2b" (formula "11") (term "0,0,1"))
                  (rule "add_literals" (formula "11") (term "1,1,0,0,1"))
                  (rule "times_zero_1" (formula "11") (term "1,0,0,1"))
                  (rule "add_zero_right" (formula "11") (term "0,0,1"))
                  (rule "applyEq" (formula "12") (term "0,1") (ifseqformula "10"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "2"))
                  (rule "mul_literals" (formula "11") (term "1,2"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "11") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "11") (term "0,1"))
                  (rule "replace_known_left" (formula "11") (term "1") (ifseqformula "9"))
                  (rule "inEqSimp_subsumption1" (formula "11") (term "0") (ifseqformula "9"))
                  (rule "leq_literals" (formula "11") (term "0,0"))
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "true_left" (formula "11"))
                  (rule "div_axiom" (formula "23") (term "1") (inst "quotient=quotient_4"))
                  (rule "polySimp_mulComm0" (formula "23") (term "0,2,1,1"))
                  (rule "polySimp_mulComm0" (formula "23") (term "0,1,0,1"))
                  (rule "polySimp_mulComm0" (formula "23") (term "1,1,1,1,1"))
                  (rule "polySimp_mulComm0" (formula "23") (term "0,1,1,1"))
                  (rule "commute_and" (formula "23") (term "0,1"))
                  (rule "div_axiom" (formula "26") (term "1") (inst "quotient=quotient_5"))
                  (rule "polySimp_mulComm0" (formula "26") (term "0,1,0,1"))
                  (rule "polySimp_mulComm0" (formula "26") (term "1,1,1,1,1"))
                  (rule "polySimp_mulComm0" (formula "26") (term "0,2,1,1"))
                  (rule "polySimp_mulComm0" (formula "26") (term "0,1,1,1"))
                  (rule "commute_and" (formula "26") (term "0,1"))
                  (rule "ifthenelse_split" (formula "7") (term "0"))
                  (branch "result_gcdHelp >= 0 TRUE"
                     (rule "eqSymm" (formula "8"))
                     (rule "replace_known_left" (formula "24") (term "0,1,1") (ifseqformula "7"))
                      (builtin "One Step Simplification" (formula "24"))
                     (rule "replace_known_left" (formula "27") (term "0,1,1") (ifseqformula "7"))
                      (builtin "One Step Simplification" (formula "27"))
                     (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "8"))
                     (rule "polySimp_mulComm0" (formula "31") (term "0"))
                     (rule "inEqSimp_strengthen0" (formula "2") (ifseqformula "31"))
                     (rule "inEqSimp_contradEq3" (formula "31") (ifseqformula "2"))
                     (rule "polySimp_mulComm0" (formula "31") (term "1,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0"))
                     (rule "add_literals" (formula "31") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "31") (term "1,0,0"))
                     (rule "add_zero_right" (formula "31") (term "0,0"))
                     (rule "qeq_literals" (formula "31") (term "0"))
                      (builtin "One Step Simplification" (formula "31"))
                     (rule "false_right" (formula "31"))
                     (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "2"))
                     (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                     (rule "polySimp_elimOne" (formula "3") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "3") (term "0"))
                     (rule "polySimp_rightDist" (formula "3") (term "0,0,0"))
                     (rule "mul_literals" (formula "3") (term "0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                     (rule "add_literals" (formula "3") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor2b" (formula "3") (term "0,0"))
                     (rule "add_literals" (formula "3") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "3") (term "1,0,0"))
                     (rule "add_zero_right" (formula "3") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                     (rule "mul_literals" (formula "3") (term "1"))
                     (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "3"))
                     (rule "leq_literals" (formula "11") (term "0"))
                      (builtin "One Step Simplification" (formula "11"))
                     (rule "true_left" (formula "11"))
                     (rule "cnf_rightDist" (formula "24"))
                     (rule "andLeft" (formula "24"))
                     (rule "commute_or" (formula "25"))
                     (rule "cnf_rightDist" (formula "28"))
                     (rule "andLeft" (formula "28"))
                     (rule "commute_or" (formula "29"))
                     (rule "cnf_rightDist" (formula "24"))
                     (rule "andLeft" (formula "24"))
                     (rule "commute_or" (formula "25"))
                     (rule "cnf_rightDist" (formula "29"))
                     (rule "andLeft" (formula "29"))
                     (rule "commute_or" (formula "30"))
                     (rule "polySimp_critPair" (formula "33") (ifseqformula "28"))
                     (rule "polySimp_mulComm0" (formula "33") (term "1,1,1,0"))
                     (rule "polySimp_mulAssoc" (formula "33") (term "0,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "33") (term "0,0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "33") (term "0,1,0,0"))
                     (rule "polySimp_elimOne" (formula "33") (term "0,1,0,0"))
                     (rule "polySimp_rightDist" (formula "33") (term "1,0"))
                     (rule "polySimp_mulComm1" (formula "33") (term "1,1,0"))
                     (rule "polySimp_mulComm1" (formula "33") (term "0,1,1,0"))
                     (rule "polySimp_rightDist" (formula "33") (term "0,0"))
                     (rule "polySimp_mulComm1" (formula "33") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "33") (term "0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "33") (term "0"))
                     (rule "polySimp_addComm1" (formula "33") (term "0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "33") (term "0"))
                     (rule "add_literals" (formula "33") (term "1,1,0"))
                     (rule "times_zero_1" (formula "33") (term "1,0"))
                     (rule "add_zero_right" (formula "33") (term "0"))
                     (rule "polySimp_addComm0" (formula "33") (term "0"))
                     (rule "polySimp_sepPosMonomial" (formula "33"))
                     (rule "polyDiv_pullOut" (formula "14") (term "0") (inst "polyDivCoeff=quotient_2"))
                     (rule "polySimp_mulComm1" (formula "14") (term "1,0,0,2,0"))
                     (rule "polySimp_mulComm0" (formula "14") (term "0,1,0,0,2,0"))
                     (rule "polySimp_addComm0" (formula "14") (term "2,0"))
                     (rule "applyEq" (formula "14") (term "0,1,0,1,2,0") (ifseqformula "16"))
                     (rule "polySimp_pullOutFactor1" (formula "14") (term "0,1,2,0"))
                     (rule "add_literals" (formula "14") (term "1,0,1,2,0"))
                     (rule "times_zero_1" (formula "14") (term "0,1,2,0"))
                     (rule "inEqSimp_contradEq7" (formula "14") (term "0,0") (ifseqformula "3"))
                     (rule "times_zero_1" (formula "14") (term "1,0,0,0,0"))
                     (rule "add_zero_right" (formula "14") (term "0,0,0,0"))
                     (rule "leq_literals" (formula "14") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "14"))
                     (rule "polySimp_homoEq" (formula "14"))
                     (rule "polySimp_mulComm0" (formula "14") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "14") (term "1,0"))
                     (rule "polySimp_mulComm0" (formula "14") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "14") (term "0"))
                     (rule "polySimp_pullOutFactor1" (formula "14") (term "0,0"))
                     (rule "add_literals" (formula "14") (term "1,0,0"))
                     (rule "times_zero_1" (formula "14") (term "0,0"))
                     (rule "add_zero_left" (formula "14") (term "0"))
                     (rule "polySimp_invertEq" (formula "14"))
                     (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                     (rule "times_zero_2" (formula "14") (term "1"))
                     (rule "polySimp_elimOne" (formula "14") (term "0"))
                     (rule "polyDiv_zero" (formula "14") (term "0"))
                      (builtin "One Step Simplification" (formula "14"))
                     (rule "div_literals" (formula "14") (term "0,1"))
                     (rule "inEqSimp_contradEq7" (formula "14") (term "0,0") (ifseqformula "3"))
                     (rule "times_zero_1" (formula "14") (term "1,0,0,0,0"))
                     (rule "add_zero_right" (formula "14") (term "0,0,0,0"))
                     (rule "leq_literals" (formula "14") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "14"))
                     (rule "true_left" (formula "14"))
                     (rule "allLeft" (formula "34") (inst "t=x_0"))
                     (rule "applyEq" (formula "34") (term "0,0,0,1,0") (ifseqformula "14"))
                     (rule "polySimp_mulComm0" (formula "34") (term "0,0,1,0"))
                     (rule "replace_known_left" (formula "34") (term "0,1,0") (ifseqformula "15"))
                      (builtin "One Step Simplification" (formula "34"))
                     (rule "applyEq" (formula "34") (term "0,0,1") (ifseqformula "9"))
                     (rule "polySimp_mulComm0" (formula "34") (term "0,1"))
                     (rule "inEqSimp_contradEq3" (formula "34") (term "1") (ifseqformula "2"))
                     (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,1"))
                     (rule "add_literals" (formula "34") (term "1,1,0,0,1"))
                     (rule "times_zero_1" (formula "34") (term "1,0,0,1"))
                     (rule "add_zero_right" (formula "34") (term "0,0,1"))
                     (rule "qeq_literals" (formula "34") (term "0,1"))
                      (builtin "One Step Simplification" (formula "34"))
                     (rule "inEqSimp_contradInEq1" (formula "34") (term "0") (ifseqformula "3"))
                     (rule "qeq_literals" (formula "34") (term "0,0"))
                      (builtin "One Step Simplification" (formula "34"))
                     (rule "notLeft" (formula "34"))
                     (rule "allLeft" (formula "34") (inst "t=result_gcdHelp"))
                     (rule "applyEq" (formula "34") (term "0,0,0,1,0,0") (ifseqformula "26"))
                     (rule "replace_known_left" (formula "34") (term "0,1,0,0") (ifseqformula "27"))
                      (builtin "One Step Simplification" (formula "34"))
                     (rule "applyEq" (formula "34") (term "0,0,0,1,0") (ifseqformula "31"))
                     (rule "replace_known_left" (formula "34") (term "0,1,0") (ifseqformula "33"))
                      (builtin "One Step Simplification" (formula "34"))
                     (rule "polyDiv_pullOut" (formula "11") (term "0") (inst "polyDivCoeff=quotient_3"))
                     (rule "polySimp_mulComm1" (formula "11") (term "1,0,0,2,0"))
                     (rule "polySimp_mulComm0" (formula "11") (term "0,1,0,0,2,0"))
                     (rule "polySimp_addComm0" (formula "11") (term "2,0"))
                     (rule "applyEq" (formula "11") (term "0,1,0,1,2,0") (ifseqformula "13"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,2,0"))
                     (rule "polySimp_pullOutFactor0" (formula "11") (term "0,1,2,0"))
                     (rule "add_literals" (formula "11") (term "1,0,1,2,0"))
                     (rule "times_zero_1" (formula "11") (term "0,1,2,0"))
                     (rule "inEqSimp_contradEq7" (formula "11") (term "0,0") (ifseqformula "3"))
                     (rule "times_zero_1" (formula "11") (term "1,0,0,0,0"))
                     (rule "add_zero_right" (formula "11") (term "0,0,0,0"))
                     (rule "leq_literals" (formula "11") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "11"))
                     (rule "polySimp_homoEq" (formula "11"))
                     (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "11") (term "1,0"))
                     (rule "polySimp_mulComm0" (formula "11") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "11") (term "0"))
                     (rule "polySimp_pullOutFactor1" (formula "11") (term "0,0"))
                     (rule "add_literals" (formula "11") (term "1,0,0"))
                     (rule "times_zero_1" (formula "11") (term "0,0"))
                     (rule "add_zero_left" (formula "11") (term "0"))
                     (rule "polySimp_invertEq" (formula "11"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                     (rule "times_zero_2" (formula "11") (term "1"))
                     (rule "polySimp_elimOne" (formula "11") (term "0"))
                     (rule "polyDiv_zero" (formula "11") (term "0"))
                      (builtin "One Step Simplification" (formula "11"))
                     (rule "div_literals" (formula "11") (term "0,1"))
                     (rule "inEqSimp_contradEq7" (formula "11") (term "0,0") (ifseqformula "3"))
                     (rule "times_zero_1" (formula "11") (term "1,0,0,0,0"))
                     (rule "add_zero_right" (formula "11") (term "0,0,0,0"))
                     (rule "leq_literals" (formula "11") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "11"))
                     (rule "true_left" (formula "11"))
                     (rule "polySimp_critPair" (formula "14") (ifseqformula "12"))
                     (rule "polySimp_mulComm0" (formula "14") (term "1,1,1,0"))
                     (rule "polySimp_mulAssoc" (formula "14") (term "0,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "14") (term "0,0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "14") (term "0,1,0,0"))
                     (rule "polySimp_elimOne" (formula "14") (term "0,1,0,0"))
                     (rule "polySimp_rightDist" (formula "14") (term "1,0"))
                     (rule "polySimp_mulComm0" (formula "14") (term "0,1,0"))
                     (rule "polySimp_mulComm1" (formula "14") (term "1,1,0"))
                     (rule "polySimp_rightDist" (formula "14") (term "0,0"))
                     (rule "polySimp_mulComm0" (formula "14") (term "0,0,0"))
                     (rule "polySimp_mulComm1" (formula "14") (term "1,0,0"))
                     (rule "polySimp_addAssoc" (formula "14") (term "0"))
                     (rule "polySimp_addComm1" (formula "14") (term "0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "14") (term "0"))
                     (rule "add_literals" (formula "14") (term "1,1,0"))
                     (rule "times_zero_1" (formula "14") (term "1,0"))
                     (rule "add_zero_right" (formula "14") (term "0"))
                     (rule "polySimp_addComm0" (formula "14") (term "0"))
                     (rule "polySimp_sepPosMonomial" (formula "14"))
                     (rule "cut_direct" (formula "28") (term "0"))
                     (branch "CUT: result_gcdHelp = 0 TRUE"
                         (builtin "One Step Simplification" (formula "29"))
                        (rule "true_left" (formula "29"))
                        (rule "replace_known_left" (formula "23") (term "0") (ifseqformula "28"))
                         (builtin "One Step Simplification" (formula "23"))
                        (rule "true_left" (formula "23"))
                        (rule "replace_known_left" (formula "23") (term "0") (ifseqformula "27"))
                         (builtin "One Step Simplification" (formula "23"))
                        (rule "true_left" (formula "23"))
                        (rule "replace_known_left" (formula "23") (term "0") (ifseqformula "26"))
                         (builtin "One Step Simplification" (formula "23"))
                        (rule "true_left" (formula "23"))
                        (rule "replace_known_left" (formula "26") (term "0") (ifseqformula "25"))
                         (builtin "One Step Simplification" (formula "26"))
                        (rule "true_left" (formula "26"))
                        (rule "replace_known_left" (formula "26") (term "0") (ifseqformula "25"))
                         (builtin "One Step Simplification" (formula "26"))
                        (rule "true_left" (formula "26"))
                        (rule "applyEq" (formula "26") (term "1,0") (ifseqformula "25"))
                        (rule "eqSymm" (formula "26"))
                        (rule "applyEq" (formula "28") (term "1,0,0") (ifseqformula "25"))
                        (rule "polySimp_mulComm0" (formula "28") (term "0"))
                        (rule "applyEq" (formula "29") (term "0,0") (ifseqformula "25"))
                        (rule "leq_literals" (formula "29") (term "0"))
                         (builtin "One Step Simplification" (formula "29"))
                        (rule "true_left" (formula "29"))
                        (rule "applyEq" (formula "23") (term "1,0") (ifseqformula "25"))
                        (rule "eqSymm" (formula "23"))
                        (rule "applyEq" (formula "6") (term "0,1") (ifseqformula "25"))
                        (rule "times_zero_2" (formula "6") (term "1"))
                        (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "25"))
                        (rule "times_zero_2" (formula "5") (term "0,0"))
                        (rule "applyEq" (formula "8") (term "0") (ifseqformula "25"))
                        (rule "qeq_literals" (formula "8"))
                        (rule "true_left" (formula "8"))
                        (rule "applyEq" (formula "23") (term "1,0") (ifseqformula "24"))
                        (rule "times_zero_1" (formula "23") (term "0"))
                        (rule "eqSymm" (formula "23"))
                        (rule "applyEq" (formula "2") (term "1,1") (ifseqformula "24"))
                        (rule "add_zero_right" (formula "2") (term "1"))
                        (rule "applyEq" (formula "8") (term "0,0") (ifseqformula "24"))
                        (rule "jdiv_axiom_inline" (formula "8") (term "0"))
                        (rule "times_zero_2" (formula "8") (term "0,0,2,0"))
                        (rule "qeq_literals" (formula "8") (term "0,0"))
                         (builtin "One Step Simplification" (formula "8"))
                        (rule "applyEq" (formula "28") (term "0,0,0,1,0") (ifseqformula "24"))
                        (rule "jdiv_axiom_inline" (formula "28") (term "0,0,1,0"))
                        (rule "qeq_literals" (formula "28") (term "0,0,0,1,0"))
                         (builtin "One Step Simplification" (formula "28"))
                        (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "24"))
                        (rule "applyEq" (formula "25") (term "1,0,0") (ifseqformula "23"))
                        (rule "eqSymm" (formula "25"))
                        (rule "polySimp_homoEq" (formula "25"))
                        (rule "polySimp_mulLiterals" (formula "25") (term "1,0"))
                        (rule "polySimp_elimOne" (formula "25") (term "1,0"))
                        (rule "applyEq" (formula "6") (term "0,1,0,1") (ifseqformula "23"))
                        (rule "times_zero_2" (formula "6") (term "1,0,1"))
                        (rule "add_zero_right" (formula "6") (term "0,1"))
                        (rule "applyEq" (formula "3") (term "1,0,1") (ifseqformula "23"))
                        (rule "add_zero_right" (formula "3") (term "0,1"))
                        (rule "applyEq" (formula "26") (term "0,0") (ifseqformula "23"))
                        (rule "times_zero_2" (formula "26") (term "0"))
                        (rule "eqSymm" (formula "26"))
                        (rule "applyEq" (formula "24") (term "1,0") (ifseqformula "23"))
                        (rule "eqSymm" (formula "24"))
                        (rule "applyEq" (formula "7") (term "0") (ifseqformula "4"))
                        (rule "eqSymm" (formula "7"))
                        (rule "applyEq" (formula "25") (term "1,0,1,0") (ifseqformula "23"))
                        (rule "polySimp_mulComm0" (formula "25") (term "1,0"))
                        (rule "polySimp_addComm0" (formula "25") (term "0"))
                        (rule "applyEq" (formula "21") (term "1,0") (ifseqformula "23"))
                        (rule "eqSymm" (formula "21"))
                        (rule "applyEq" (formula "27") (term "0,0,0,0,1,0,0") (ifseqformula "26"))
                        (rule "jdiv_axiom_inline" (formula "27") (term "0,0,0,1,0,0"))
                        (rule "qeq_literals" (formula "27") (term "0,0,0,0,1,0,0"))
                         (builtin "One Step Simplification" (formula "27"))
                        (rule "applyEq" (formula "11") (term "0,0") (ifseqformula "26"))
                        (rule "jdiv_axiom_inline" (formula "11") (term "0"))
                        (rule "qeq_literals" (formula "11") (term "0,0"))
                         (builtin "One Step Simplification" (formula "11"))
                        (rule "applyEq" (formula "14") (term "0") (ifseqformula "26"))
                        (rule "inEqSimp_homoInEq0" (formula "14"))
                        (rule "times_zero_2" (formula "14") (term "1,0"))
                        (rule "add_zero_right" (formula "14") (term "0"))
                        (rule "applyEq" (formula "8") (term "0") (ifseqformula "26"))
                        (rule "qeq_literals" (formula "8"))
                        (rule "true_left" (formula "8"))
                        (rule "applyEq" (formula "12") (term "1") (ifseqformula "25"))
                        (rule "applyEq" (formula "11") (term "0,0,1") (ifseqformula "25"))
                        (rule "times_zero_2" (formula "11") (term "0,1"))
                        (rule "times_zero_2" (formula "11") (term "1"))
                        (rule "applyEqRigid" (formula "3") (term "1,0") (ifseqformula "7"))
                        (rule "applyEq" (formula "22") (term "0,0") (ifseqformula "24"))
                        (rule "eqSymm" (formula "22"))
                        (rule "jdiv_axiom_inline" (formula "22") (term "1"))
                        (rule "times_zero_2" (formula "22") (term "0,0,2,1"))
                        (rule "div_literals" (formula "22") (term "1,1"))
                        (rule "qeq_literals" (formula "22") (term "0,1"))
                         (builtin "One Step Simplification" (formula "22"))
                        (rule "eqSymm" (formula "22"))
                        (rule "applyEqRigid" (formula "1") (term "1,0") (ifseqformula "6"))
                        (rule "applyEq" (formula "23") (term "0,0,1,0") (ifseqformula "24"))
                        (rule "div_literals" (formula "23") (term "0,1,0"))
                        (rule "applyEq" (formula "3") (term "0") (ifseqformula "9"))
                        (rule "eqSymm" (formula "3"))
                        (rule "applyEqRigid" (formula "5") (term "1,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "23") (term "0,1,0") (ifseqformula "22"))
                        (rule "applyEq" (formula "4") (term "1,0") (ifseqformula "3"))
                        (rule "applyEqRigid" (formula "1") (term "1,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "25") (term "1,1,0") (ifseqformula "21"))
                        (rule "applyEq" (formula "23") (term "0,0,0") (ifseqformula "24"))
                        (rule "times_zero_2" (formula "23") (term "0,0"))
                        (rule "add_zero_left" (formula "23") (term "0"))
                        (rule "applyEq" (formula "25") (term "1,0,1,0,0") (ifseqformula "24"))
                         (builtin "One Step Simplification" (formula "25"))
                        (rule "true_left" (formula "25"))
                        (rule "applyEqRigid" (formula "5") (term "0") (ifseqformula "11"))
                        (rule "inEqSimp_homoInEq1" (formula "5"))
                        (rule "times_zero_2" (formula "5") (term "1,0"))
                        (rule "add_zero_right" (formula "5") (term "0"))
                        (rule "applyEq" (formula "22") (term "0,1") (ifseqformula "24"))
                        (rule "div_literals" (formula "22") (term "1"))
                         (builtin "One Step Simplification" (formula "22"))
                        (rule "true_left" (formula "22"))
                        (rule "applyEq" (formula "6") (term "1") (ifseqformula "3"))
                        (rule "applyEq" (formula "1") (term "0") (ifseqformula "11"))
                        (rule "leq_literals" (formula "1"))
                        (rule "closeFalse" (formula "1"))
                     )
                     (branch "CUT: result_gcdHelp = 0 FALSE"
                         (builtin "One Step Simplification" (formula "28"))
                        (rule "replace_known_right" (formula "24") (term "0") (ifseqformula "36"))
                         (builtin "One Step Simplification" (formula "24"))
                        (rule "replace_known_right" (formula "23") (term "0") (ifseqformula "36"))
                         (builtin "One Step Simplification" (formula "23"))
                        (rule "replace_known_right" (formula "25") (term "0") (ifseqformula "36"))
                         (builtin "One Step Simplification" (formula "25"))
                        (rule "replace_known_right" (formula "29") (term "0") (ifseqformula "36"))
                         (builtin "One Step Simplification" (formula "29"))
                        (rule "replace_known_right" (formula "30") (term "0") (ifseqformula "36"))
                         (builtin "One Step Simplification" (formula "30"))
                        (rule "applyEq" (formula "27") (term "0,0") (ifseqformula "24"))
                        (rule "polySimp_mulComm0" (formula "27") (term "0"))
                        (rule "applyEq" (formula "33") (term "0,0") (ifseqformula "29"))
                        (rule "polySimp_mulComm0" (formula "33") (term "0"))
                        (rule "applyEq" (formula "32") (term "0,0") (ifseqformula "29"))
                        (rule "eqSymm" (formula "32"))
                        (rule "polySimp_homoEq" (formula "32"))
                        (rule "polySimp_mulLiterals" (formula "32") (term "1,0"))
                        (rule "polySimp_elimOne" (formula "32") (term "1,0"))
                        (rule "polySimp_mulComm0" (formula "32") (term "0,0"))
                        (rule "applyEq" (formula "25") (term "0") (ifseqformula "27"))
                        (rule "inEqSimp_homoInEq1" (formula "25"))
                        (rule "polySimp_mulLiterals" (formula "25") (term "1,0"))
                        (rule "polySimp_elimOne" (formula "25") (term "1,0"))
                        (rule "polySimp_addComm1" (formula "25") (term "0"))
                        (rule "polySimp_pullOutFactor2b" (formula "25") (term "0,0"))
                        (rule "add_literals" (formula "25") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "25") (term "1,0,0"))
                        (rule "add_zero_right" (formula "25") (term "0,0"))
                        (rule "applyEq" (formula "23") (term "0") (ifseqformula "27"))
                        (rule "inEqSimp_homoInEq0" (formula "23"))
                        (rule "polySimp_mulLiterals" (formula "23") (term "1,0"))
                        (rule "polySimp_pullOutFactor0" (formula "23") (term "0"))
                        (rule "add_literals" (formula "23") (term "1,0"))
                        (rule "times_zero_1" (formula "23") (term "0"))
                        (rule "qeq_literals" (formula "23"))
                        (rule "true_left" (formula "23"))
                        (rule "applyEq" (formula "25") (term "1") (ifseqformula "23"))
                        (rule "applyEq" (formula "30") (term "1") (ifseqformula "28"))
                        (rule "applyEq" (formula "29") (term "0") (ifseqformula "32"))
                        (rule "inEqSimp_homoInEq1" (formula "29"))
                        (rule "polySimp_addComm1" (formula "29") (term "0"))
                        (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0"))
                        (rule "add_literals" (formula "29") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "29") (term "1,0,0"))
                        (rule "add_zero_right" (formula "29") (term "0,0"))
                        (rule "applyEq" (formula "27") (term "0") (ifseqformula "31"))
                        (rule "inEqSimp_homoInEq0" (formula "27"))
                        (rule "polySimp_pullOutFactor1" (formula "27") (term "0"))
                        (rule "add_literals" (formula "27") (term "1,0"))
                        (rule "times_zero_1" (formula "27") (term "0"))
                        (rule "qeq_literals" (formula "27"))
                        (rule "true_left" (formula "27"))
                        (rule "applyEq" (formula "29") (term "0,1,0") (ifseqformula "23"))
                        (rule "polySimp_mulComm0" (formula "29") (term "1,0"))
                        (rule "polySimp_sepPosMonomial" (formula "29"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "24"))
                        (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                        (rule "polySimp_elimOne" (formula "24") (term "0"))
                        (rule "inEqSimp_contradEq7" (formula "33") (ifseqformula "24"))
                        (rule "times_zero_1" (formula "33") (term "1,0,0"))
                        (rule "add_zero_right" (formula "33") (term "0,0"))
                        (rule "leq_literals" (formula "33") (term "0"))
                         (builtin "One Step Simplification" (formula "33"))
                        (rule "false_right" (formula "33"))
                        (rule "inEqSimp_contradInEq1" (formula "31") (term "0") (ifseqformula "24"))
                        (rule "qeq_literals" (formula "31") (term "0,0"))
                         (builtin "One Step Simplification" (formula "31"))
                        (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "24"))
                        (rule "leq_literals" (formula "8") (term "0"))
                         (builtin "One Step Simplification" (formula "8"))
                        (rule "true_left" (formula "8"))
                        (rule "jdiv_axiom" (formula "32") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "0,0,2,1"))
                        (rule "eqSymm" (formula "1"))
                        (rule "polySimp_elimOne" (formula "1") (term "0,0,2,0"))
                        (rule "inEqSimp_invertInEq1" (formula "1") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0"))
                        (rule "times_zero_2" (formula "1") (term "1,0,0"))
                        (rule "polySimp_elimOne" (formula "1") (term "0,0,0"))
                        (rule "inEqSimp_subsumption0" (formula "1") (term "0,0") (ifseqformula "17"))
                        (rule "leq_literals" (formula "1") (term "0,0,0"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "eqSymm" (formula "1"))
                        (rule "applyEq" (formula "33") (term "0,0") (ifseqformula "1"))
                        (rule "polyDiv_pullOut" (formula "33") (term "0,0") (inst "polyDivCoeff=quotient_3"))
                        (rule "polySimp_mulComm1" (formula "33") (term "1,0,0,2,0,0"))
                        (rule "polySimp_mulComm0" (formula "33") (term "0,1,0,0,2,0,0"))
                        (rule "polySimp_addComm0" (formula "33") (term "2,0,0"))
                        (rule "applyEq" (formula "33") (term "0,1,0,1,2,0,0") (ifseqformula "12"))
                        (rule "polySimp_mulLiterals" (formula "33") (term "1,0,1,2,0,0"))
                        (rule "polySimp_pullOutFactor0" (formula "33") (term "0,1,2,0,0"))
                        (rule "add_literals" (formula "33") (term "1,0,1,2,0,0"))
                        (rule "times_zero_1" (formula "33") (term "0,1,2,0,0"))
                        (rule "inEqSimp_contradEq7" (formula "33") (term "0,0,0") (ifseqformula "4"))
                        (rule "times_zero_1" (formula "33") (term "1,0,0,0,0,0"))
                        (rule "add_zero_right" (formula "33") (term "0,0,0,0,0"))
                        (rule "leq_literals" (formula "33") (term "0,0,0,0"))
                         (builtin "One Step Simplification" (formula "33"))
                        (rule "polySimp_mulComm0" (formula "33") (term "0"))
                        (rule "polySimp_rightDist" (formula "33") (term "0"))
                        (rule "polySimp_homoEq" (formula "33"))
                        (rule "polySimp_mulComm0" (formula "33") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "33") (term "1,0"))
                        (rule "polySimp_mulComm0" (formula "33") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "33") (term "0"))
                        (rule "applyEq" (formula "33") (term "0,1,0,0") (ifseqformula "12"))
                        (rule "polySimp_mulLiterals" (formula "33") (term "1,0,0"))
                        (rule "polySimp_pullOutFactor0" (formula "33") (term "0,0"))
                        (rule "add_literals" (formula "33") (term "1,0,0"))
                        (rule "times_zero_1" (formula "33") (term "0,0"))
                        (rule "add_zero_left" (formula "33") (term "0"))
                        (rule "polySimp_invertEq" (formula "33"))
                        (rule "polySimp_mulLiterals" (formula "33") (term "0"))
                        (rule "times_zero_2" (formula "33") (term "1"))
                        (rule "polySimp_elimOne" (formula "33") (term "0"))
                        (rule "polyDiv_zero" (formula "33") (term "0,0"))
                        (rule "div_literals" (formula "33") (term "1,0,0"))
                        (rule "inEqSimp_contradEq7" (formula "33") (term "0,0,0") (ifseqformula "4"))
                        (rule "times_zero_1" (formula "33") (term "1,0,0,0,0,0"))
                        (rule "add_zero_right" (formula "33") (term "0,0,0,0,0"))
                        (rule "leq_literals" (formula "33") (term "0,0,0,0"))
                         (builtin "One Step Simplification" (formula "33"))
                        (rule "times_zero_2" (formula "33") (term "0"))
                         (builtin "One Step Simplification" (formula "33"))
                        (rule "closeTrue" (formula "33"))
                     )
                  )
                  (branch "result_gcdHelp >= 0 FALSE"
                     (rule "eqSymm" (formula "7"))
                     (rule "replace_known_right" (formula "26") (term "0,1,1") (ifseqformula "30"))
                      (builtin "One Step Simplification" (formula "26"))
                     (rule "replace_known_right" (formula "23") (term "0,1,1") (ifseqformula "30"))
                      (builtin "One Step Simplification" (formula "23"))
                     (rule "inEqSimp_geqRight" (formula "30"))
                     (rule "times_zero_1" (formula "1") (term "1,0,0"))
                     (rule "add_zero_right" (formula "1") (term "0,0"))
                     (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "8"))
                     (rule "polySimp_mulComm1" (formula "31") (term "0"))
                     (rule "polySimp_homoEq" (formula "31"))
                     (rule "polySimp_mulLiterals" (formula "31") (term "1,0"))
                     (rule "polySimp_elimOne" (formula "31") (term "1,0"))
                     (rule "polySimp_mulComm0" (formula "31") (term "1,0"))
                     (rule "polySimp_sepPosMonomial" (formula "31"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                     (rule "mul_literals" (formula "1") (term "1"))
                     (rule "inEqSimp_contradEq3" (formula "27") (term "0") (ifseqformula "1"))
                     (rule "times_zero_1" (formula "27") (term "1,0,0,0"))
                     (rule "add_zero_right" (formula "27") (term "0,0,0"))
                     (rule "qeq_literals" (formula "27") (term "0,0"))
                      (builtin "One Step Simplification" (formula "27"))
                     (rule "andLeft" (formula "27"))
                     (rule "andLeft" (formula "27"))
                     (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "28"))
                     (rule "polySimp_mulComm0" (formula "31") (term "0"))
                     (rule "applyEq" (formula "27") (term "0") (ifseqformula "31"))
                     (rule "inEqSimp_homoInEq0" (formula "27"))
                     (rule "polySimp_pullOutFactor1" (formula "27") (term "0"))
                     (rule "add_literals" (formula "27") (term "1,0"))
                     (rule "times_zero_1" (formula "27") (term "0"))
                     (rule "qeq_literals" (formula "27"))
                     (rule "true_left" (formula "27"))
                     (rule "applyEq" (formula "28") (term "0") (ifseqformula "30"))
                     (rule "inEqSimp_homoInEq1" (formula "28"))
                     (rule "polySimp_addComm1" (formula "28") (term "0"))
                     (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0"))
                     (rule "add_literals" (formula "28") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "28") (term "1,0,0"))
                     (rule "add_zero_right" (formula "28") (term "0,0"))
                     (rule "applyEq" (formula "29") (term "1") (ifseqformula "27"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "28"))
                     (rule "mul_literals" (formula "28") (term "1"))
                     (rule "inEqSimp_contradEq3" (formula "24") (term "0") (ifseqformula "1"))
                     (rule "times_zero_1" (formula "24") (term "1,0,0,0"))
                     (rule "add_zero_right" (formula "24") (term "0,0,0"))
                     (rule "qeq_literals" (formula "24") (term "0,0"))
                      (builtin "One Step Simplification" (formula "24"))
                     (rule "andLeft" (formula "24"))
                     (rule "andLeft" (formula "24"))
                     (rule "applyEq" (formula "28") (term "0,0") (ifseqformula "25"))
                     (rule "polySimp_mulComm0" (formula "28") (term "0"))
                     (rule "applyEq" (formula "24") (term "0") (ifseqformula "28"))
                     (rule "inEqSimp_homoInEq0" (formula "24"))
                     (rule "polySimp_mulLiterals" (formula "24") (term "1,0"))
                     (rule "polySimp_pullOutFactor0" (formula "24") (term "0"))
                     (rule "add_literals" (formula "24") (term "1,0"))
                     (rule "times_zero_1" (formula "24") (term "0"))
                     (rule "qeq_literals" (formula "24"))
                     (rule "true_left" (formula "24"))
                     (rule "applyEq" (formula "25") (term "0") (ifseqformula "27"))
                     (rule "inEqSimp_homoInEq1" (formula "25"))
                     (rule "polySimp_mulLiterals" (formula "25") (term "1,0"))
                     (rule "polySimp_elimOne" (formula "25") (term "1,0"))
                     (rule "polySimp_addComm1" (formula "25") (term "0"))
                     (rule "polySimp_pullOutFactor2b" (formula "25") (term "0,0"))
                     (rule "add_literals" (formula "25") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "25") (term "1,0,0"))
                     (rule "add_zero_right" (formula "25") (term "0,0"))
                     (rule "applyEq" (formula "26") (term "1") (ifseqformula "24"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "25"))
                     (rule "mul_literals" (formula "25") (term "1"))
                     (rule "inEqSimp_strengthen0" (formula "6") (ifseqformula "31"))
                     (rule "inEqSimp_contradEq3" (formula "31") (ifseqformula "6"))
                     (rule "polySimp_mulAssoc" (formula "31") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "31") (term "0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "31") (term "1,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "31") (term "0,0"))
                     (rule "add_literals" (formula "31") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "31") (term "1,0,0"))
                     (rule "add_zero_right" (formula "31") (term "0,0"))
                     (rule "qeq_literals" (formula "31") (term "0"))
                      (builtin "One Step Simplification" (formula "31"))
                     (rule "false_right" (formula "31"))
                     (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "6"))
                     (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0"))
                     (rule "polySimp_elimOne" (formula "7") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "7") (term "0"))
                     (rule "polySimp_rightDist" (formula "7") (term "0,0,0"))
                     (rule "mul_literals" (formula "7") (term "0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "7") (term "1,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "7") (term "0,0,0"))
                     (rule "add_literals" (formula "7") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0"))
                     (rule "add_literals" (formula "7") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "7") (term "1,0,0"))
                     (rule "add_zero_right" (formula "7") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                     (rule "mul_literals" (formula "7") (term "1"))
                     (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "7"))
                     (rule "leq_literals" (formula "11") (term "0"))
                      (builtin "One Step Simplification" (formula "11"))
                     (rule "true_left" (formula "11"))
                     (rule "polyDiv_pullOut" (formula "14") (term "0") (inst "polyDivCoeff=quotient_2"))
                     (rule "polySimp_mulComm1" (formula "14") (term "1,0,0,2,0"))
                     (rule "polySimp_mulComm0" (formula "14") (term "0,1,0,0,2,0"))
                     (rule "polySimp_addComm0" (formula "14") (term "2,0"))
                     (rule "applyEq" (formula "14") (term "0,1,0,1,2,0") (ifseqformula "16"))
                     (rule "polySimp_pullOutFactor1" (formula "14") (term "0,1,2,0"))
                     (rule "add_literals" (formula "14") (term "1,0,1,2,0"))
                     (rule "times_zero_1" (formula "14") (term "0,1,2,0"))
                     (rule "inEqSimp_contradEq7" (formula "14") (term "0,0") (ifseqformula "7"))
                     (rule "times_zero_1" (formula "14") (term "1,0,0,0,0"))
                     (rule "add_zero_right" (formula "14") (term "0,0,0,0"))
                     (rule "leq_literals" (formula "14") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "14"))
                     (rule "polySimp_homoEq" (formula "14"))
                     (rule "polySimp_mulComm0" (formula "14") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "14") (term "1,0"))
                     (rule "polySimp_mulComm0" (formula "14") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "14") (term "0"))
                     (rule "polySimp_pullOutFactor1" (formula "14") (term "0,0"))
                     (rule "add_literals" (formula "14") (term "1,0,0"))
                     (rule "times_zero_1" (formula "14") (term "0,0"))
                     (rule "add_zero_left" (formula "14") (term "0"))
                     (rule "polySimp_invertEq" (formula "14"))
                     (rule "times_zero_2" (formula "14") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                     (rule "polySimp_elimOne" (formula "14") (term "0"))
                     (rule "polyDiv_zero" (formula "14") (term "0"))
                      (builtin "One Step Simplification" (formula "14"))
                     (rule "div_literals" (formula "14") (term "0,1"))
                     (rule "inEqSimp_contradEq7" (formula "14") (term "0,0") (ifseqformula "7"))
                     (rule "times_zero_1" (formula "14") (term "1,0,0,0,0"))
                     (rule "add_zero_right" (formula "14") (term "0,0,0,0"))
                     (rule "leq_literals" (formula "14") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "14"))
                     (rule "true_left" (formula "14"))
                     (rule "allLeft" (formula "29") (inst "t=x_0"))
                     (rule "applyEq" (formula "29") (term "0,0,1") (ifseqformula "9"))
                     (rule "polySimp_mulComm1" (formula "29") (term "0,1"))
                     (rule "polySimp_homoEq" (formula "29") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "29") (term "1,0,1"))
                     (rule "polySimp_elimOne" (formula "29") (term "1,0,1"))
                     (rule "polySimp_mulComm0" (formula "29") (term "1,0,1"))
                     (rule "applyEq" (formula "29") (term "0,0,0,1,0") (ifseqformula "14"))
                     (rule "polySimp_mulComm0" (formula "29") (term "0,0,1,0"))
                     (rule "replace_known_left" (formula "29") (term "0,1,0") (ifseqformula "15"))
                      (builtin "One Step Simplification" (formula "29"))
                     (rule "polySimp_sepPosMonomial" (formula "29") (term "1"))
                     (rule "inEqSimp_contradEq3" (formula "29") (term "1") (ifseqformula "6"))
                     (rule "polySimp_mulAssoc" (formula "29") (term "1,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "29") (term "0,1,0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0,1"))
                     (rule "polySimp_pullOutFactor0b" (formula "29") (term "0,0,1"))
                     (rule "add_literals" (formula "29") (term "1,1,0,0,1"))
                     (rule "times_zero_1" (formula "29") (term "1,0,0,1"))
                     (rule "add_zero_right" (formula "29") (term "0,0,1"))
                     (rule "qeq_literals" (formula "29") (term "0,1"))
                      (builtin "One Step Simplification" (formula "29"))
                     (rule "inEqSimp_contradInEq1" (formula "29") (term "0") (ifseqformula "7"))
                     (rule "qeq_literals" (formula "29") (term "0,0"))
                      (builtin "One Step Simplification" (formula "29"))
                     (rule "notLeft" (formula "29"))
                     (rule "polyDiv_pullOut" (formula "11") (term "0") (inst "polyDivCoeff=quotient_3"))
                     (rule "polySimp_mulComm1" (formula "11") (term "1,0,0,2,0"))
                     (rule "polySimp_mulComm0" (formula "11") (term "0,1,0,0,2,0"))
                     (rule "polySimp_addComm0" (formula "11") (term "2,0"))
                     (rule "applyEq" (formula "11") (term "0,1,0,1,2,0") (ifseqformula "13"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,2,0"))
                     (rule "polySimp_pullOutFactor0" (formula "11") (term "0,1,2,0"))
                     (rule "add_literals" (formula "11") (term "1,0,1,2,0"))
                     (rule "times_zero_1" (formula "11") (term "0,1,2,0"))
                     (rule "inEqSimp_contradEq7" (formula "11") (term "0,0") (ifseqformula "7"))
                     (rule "times_zero_1" (formula "11") (term "1,0,0,0,0"))
                     (rule "add_zero_right" (formula "11") (term "0,0,0,0"))
                     (rule "leq_literals" (formula "11") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "11"))
                     (rule "polySimp_homoEq" (formula "11"))
                     (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "11") (term "1,0"))
                     (rule "polySimp_mulComm0" (formula "11") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "11") (term "0"))
                     (rule "polySimp_pullOutFactor1" (formula "11") (term "0,0"))
                     (rule "add_literals" (formula "11") (term "1,0,0"))
                     (rule "times_zero_1" (formula "11") (term "0,0"))
                     (rule "add_zero_left" (formula "11") (term "0"))
                     (rule "polySimp_invertEq" (formula "11"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                     (rule "times_zero_2" (formula "11") (term "1"))
                     (rule "polySimp_elimOne" (formula "11") (term "0"))
                     (rule "polyDiv_zero" (formula "11") (term "0"))
                      (builtin "One Step Simplification" (formula "11"))
                     (rule "div_literals" (formula "11") (term "0,1"))
                     (rule "inEqSimp_contradEq7" (formula "11") (term "0,0") (ifseqformula "7"))
                     (rule "times_zero_1" (formula "11") (term "1,0,0,0,0"))
                     (rule "add_zero_right" (formula "11") (term "0,0,0,0"))
                     (rule "leq_literals" (formula "11") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "11"))
                     (rule "true_left" (formula "11"))
                     (rule "polySimp_critPair" (formula "14") (ifseqformula "12"))
                     (rule "polySimp_mulComm0" (formula "14") (term "1,1,1,0"))
                     (rule "polySimp_mulAssoc" (formula "14") (term "0,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "14") (term "0,0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "14") (term "0,1,0,0"))
                     (rule "polySimp_elimOne" (formula "14") (term "0,1,0,0"))
                     (rule "polySimp_rightDist" (formula "14") (term "1,0"))
                     (rule "polySimp_mulComm1" (formula "14") (term "1,1,0"))
                     (rule "polySimp_mulComm0" (formula "14") (term "0,1,0"))
                     (rule "polySimp_rightDist" (formula "14") (term "0,0"))
                     (rule "polySimp_mulComm1" (formula "14") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "14") (term "0,0,0"))
                     (rule "polySimp_addAssoc" (formula "14") (term "0"))
                     (rule "polySimp_addComm1" (formula "14") (term "0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "14") (term "0"))
                     (rule "add_literals" (formula "14") (term "1,1,0"))
                     (rule "times_zero_1" (formula "14") (term "1,0"))
                     (rule "add_zero_right" (formula "14") (term "0"))
                     (rule "polySimp_addComm0" (formula "14") (term "0"))
                     (rule "polySimp_sepPosMonomial" (formula "14"))
                     (rule "polyDiv_pullOut" (formula "26") (term "0") (inst "polyDivCoeff=quotient_5"))
                     (rule "polySimp_mulComm1" (formula "26") (term "1,0,0,2,0"))
                     (rule "polySimp_mulComm0" (formula "26") (term "0,1,0,0,2,0"))
                     (rule "polySimp_addComm0" (formula "26") (term "2,0"))
                     (rule "applyEq" (formula "26") (term "0,1,0,1,2,0") (ifseqformula "28"))
                     (rule "polySimp_pullOutFactor1" (formula "26") (term "0,1,2,0"))
                     (rule "add_literals" (formula "26") (term "1,0,1,2,0"))
                     (rule "times_zero_1" (formula "26") (term "0,1,2,0"))
                     (rule "inEqSimp_contradEq3" (formula "26") (term "0,0") (ifseqformula "1"))
                     (rule "times_zero_1" (formula "26") (term "1,0,0,0,0"))
                     (rule "add_zero_right" (formula "26") (term "0,0,0,0"))
                     (rule "qeq_literals" (formula "26") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "26"))
                     (rule "polySimp_homoEq" (formula "26"))
                     (rule "polySimp_mulComm0" (formula "26") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "26") (term "1,0"))
                     (rule "polySimp_mulComm0" (formula "26") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "26") (term "0"))
                     (rule "polySimp_pullOutFactor1" (formula "26") (term "0,0"))
                     (rule "add_literals" (formula "26") (term "1,0,0"))
                     (rule "times_zero_1" (formula "26") (term "0,0"))
                     (rule "add_zero_left" (formula "26") (term "0"))
                     (rule "polySimp_invertEq" (formula "26"))
                     (rule "times_zero_2" (formula "26") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "26") (term "0"))
                     (rule "polySimp_elimOne" (formula "26") (term "0"))
                     (rule "polyDiv_zero" (formula "26") (term "0"))
                      (builtin "One Step Simplification" (formula "26"))
                     (rule "div_literals" (formula "26") (term "0,1"))
                     (rule "inEqSimp_contradEq3" (formula "26") (term "0,0") (ifseqformula "1"))
                     (rule "times_zero_1" (formula "26") (term "1,0,0,0,0"))
                     (rule "add_zero_right" (formula "26") (term "0,0,0,0"))
                     (rule "qeq_literals" (formula "26") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "26"))
                     (rule "true_left" (formula "26"))
                     (rule "polyDiv_pullOut" (formula "23") (term "0") (inst "polyDivCoeff=quotient_4"))
                     (rule "polySimp_mulComm1" (formula "23") (term "1,0,0,2,0"))
                     (rule "polySimp_mulComm0" (formula "23") (term "0,1,0,0,2,0"))
                     (rule "polySimp_addComm0" (formula "23") (term "2,0"))
                     (rule "applyEq" (formula "23") (term "0,1,0,1,2,0") (ifseqformula "25"))
                     (rule "polySimp_mulLiterals" (formula "23") (term "1,0,1,2,0"))
                     (rule "polySimp_pullOutFactor0" (formula "23") (term "0,1,2,0"))
                     (rule "add_literals" (formula "23") (term "1,0,1,2,0"))
                     (rule "times_zero_1" (formula "23") (term "0,1,2,0"))
                     (rule "inEqSimp_contradEq3" (formula "23") (term "0,0") (ifseqformula "1"))
                     (rule "times_zero_1" (formula "23") (term "1,0,0,0,0"))
                     (rule "add_zero_right" (formula "23") (term "0,0,0,0"))
                     (rule "qeq_literals" (formula "23") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "23"))
                     (rule "polySimp_homoEq" (formula "23"))
                     (rule "polySimp_mulComm0" (formula "23") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "23") (term "1,0"))
                     (rule "polySimp_mulComm0" (formula "23") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "23") (term "0"))
                     (rule "polySimp_pullOutFactor1" (formula "23") (term "0,0"))
                     (rule "add_literals" (formula "23") (term "1,0,0"))
                     (rule "times_zero_1" (formula "23") (term "0,0"))
                     (rule "add_zero_left" (formula "23") (term "0"))
                     (rule "polySimp_invertEq" (formula "23"))
                     (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                     (rule "times_zero_2" (formula "23") (term "1"))
                     (rule "polySimp_elimOne" (formula "23") (term "0"))
                     (rule "polyDiv_zero" (formula "23") (term "0"))
                      (builtin "One Step Simplification" (formula "23"))
                     (rule "div_literals" (formula "23") (term "0,1"))
                     (rule "inEqSimp_contradEq3" (formula "23") (term "0,0") (ifseqformula "1"))
                     (rule "times_zero_1" (formula "23") (term "1,0,0,0,0"))
                     (rule "add_zero_right" (formula "23") (term "0,0,0,0"))
                     (rule "qeq_literals" (formula "23") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "23"))
                     (rule "true_left" (formula "23"))
                     (rule "jdiv_axiom" (formula "28") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "0,0,2,1"))
                     (rule "eqSymm" (formula "1"))
                     (rule "polySimp_elimOne" (formula "1") (term "0,0,2,0"))
                     (rule "inEqSimp_invertInEq1" (formula "1") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0"))
                     (rule "times_zero_2" (formula "1") (term "1,0,0"))
                     (rule "polySimp_elimOne" (formula "1") (term "0,0,0"))
                     (rule "inEqSimp_subsumption0" (formula "1") (term "0,0") (ifseqformula "18"))
                     (rule "leq_literals" (formula "1") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "eqSymm" (formula "1"))
                     (rule "applyEq" (formula "29") (term "0,0") (ifseqformula "1"))
                     (rule "polyDiv_pullOut" (formula "29") (term "0,0") (inst "polyDivCoeff=quotient_3"))
                     (rule "polySimp_mulComm1" (formula "29") (term "1,0,0,2,0,0"))
                     (rule "polySimp_mulComm0" (formula "29") (term "0,1,0,0,2,0,0"))
                     (rule "polySimp_addComm0" (formula "29") (term "2,0,0"))
                     (rule "applyEq" (formula "29") (term "0,1,0,1,2,0,0") (ifseqformula "13"))
                     (rule "polySimp_mulLiterals" (formula "29") (term "1,0,1,2,0,0"))
                     (rule "polySimp_pullOutFactor0" (formula "29") (term "0,1,2,0,0"))
                     (rule "add_literals" (formula "29") (term "1,0,1,2,0,0"))
                     (rule "times_zero_1" (formula "29") (term "0,1,2,0,0"))
                     (rule "inEqSimp_contradEq7" (formula "29") (term "0,0,0") (ifseqformula "8"))
                     (rule "times_zero_1" (formula "29") (term "1,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "29") (term "0,0,0,0,0"))
                     (rule "leq_literals" (formula "29") (term "0,0,0,0"))
                      (builtin "One Step Simplification" (formula "29"))
                     (rule "polySimp_mulComm0" (formula "29") (term "0"))
                     (rule "polySimp_rightDist" (formula "29") (term "0"))
                     (rule "polySimp_homoEq" (formula "29"))
                     (rule "polySimp_mulComm0" (formula "29") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "29") (term "1,0"))
                     (rule "polySimp_mulComm0" (formula "29") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "29") (term "0"))
                     (rule "applyEq" (formula "29") (term "0,1,0,0") (ifseqformula "13"))
                     (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0"))
                     (rule "polySimp_pullOutFactor0" (formula "29") (term "0,0"))
                     (rule "add_literals" (formula "29") (term "1,0,0"))
                     (rule "times_zero_1" (formula "29") (term "0,0"))
                     (rule "add_zero_left" (formula "29") (term "0"))
                     (rule "polySimp_invertEq" (formula "29"))
                     (rule "times_zero_2" (formula "29") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                     (rule "polySimp_elimOne" (formula "29") (term "0"))
                     (rule "polyDiv_zero" (formula "29") (term "0,0"))
                     (rule "div_literals" (formula "29") (term "1,0,0"))
                     (rule "inEqSimp_contradEq7" (formula "29") (term "0,0,0") (ifseqformula "8"))
                     (rule "times_zero_1" (formula "29") (term "1,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "29") (term "0,0,0,0,0"))
                     (rule "leq_literals" (formula "29") (term "0,0,0,0"))
                      (builtin "One Step Simplification" (formula "29"))
                     (rule "times_zero_2" (formula "29") (term "0"))
                      (builtin "One Step Simplification" (formula "29"))
                     (rule "closeTrue" (formula "29"))
                  )
               )
            )
            (branch "Case 2"
                (builtin "One Step Simplification" (formula "10"))
               (rule "closeTrue" (formula "10"))
            )
         )
         (branch "Exceptional Post (gcdHelp)"
             (builtin "One Step Simplification" (formula "8"))
             (builtin "One Step Simplification" (formula "6"))
            (rule "andLeft" (formula "6"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "7") (term "1,0") (ifseqformula "6"))
            (rule "andLeft" (formula "7"))
            (rule "andLeft" (formula "7"))
            (rule "andLeft" (formula "9"))
            (rule "notLeft" (formula "7"))
            (rule "close" (formula "10") (ifseqformula "9"))
         )
         (branch "Pre (gcdHelp)"
             (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "3")))
            (rule "inEqSimp_ltRight" (formula "5"))
            (rule "times_zero_1" (formula "1") (term "0,0"))
            (rule "add_zero_left" (formula "1") (term "0"))
            (rule "replace_known_left" (formula "6") (term "0") (ifseqformula "1"))
             (builtin "One Step Simplification" (formula "6"))
            (rule "inEqSimp_geqRight" (formula "6"))
            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "1") (term "0"))
            (rule "inEqSimp_ltToLeq" (formula "4"))
            (rule "times_zero_1" (formula "4") (term "1,0,0"))
            (rule "add_zero_right" (formula "4") (term "0,0"))
            (rule "inEqSimp_gtToGeq" (formula "3"))
            (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "3") (term "0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "1"))
            (rule "polySimp_mulLiterals" (formula "1") (term "0"))
            (rule "polySimp_elimOne" (formula "1") (term "0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "4"))
            (rule "mul_literals" (formula "4") (term "1"))
            (rule "inEqSimp_sepNegMonomial1" (formula "3"))
            (rule "polySimp_mulLiterals" (formula "3") (term "0"))
            (rule "polySimp_elimOne" (formula "3") (term "0"))
            (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "3"))
            (rule "andLeft" (formula "1"))
            (rule "inEqSimp_homoInEq1" (formula "1"))
            (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
            (rule "polySimp_rightDist" (formula "1") (term "1,0"))
            (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
            (rule "mul_literals" (formula "1") (term "0,1,0"))
            (rule "polySimp_elimOne" (formula "1") (term "1,1,0"))
            (rule "polySimp_addAssoc" (formula "1") (term "0"))
            (rule "polySimp_addComm1" (formula "1") (term "0,0"))
            (rule "add_literals" (formula "1") (term "0,0,0"))
            (rule "polySimp_pullOutFactor2b" (formula "1") (term "0"))
            (rule "add_literals" (formula "1") (term "1,1,0"))
            (rule "times_zero_1" (formula "1") (term "1,0"))
            (rule "add_zero_right" (formula "1") (term "0"))
            (rule "leq_literals" (formula "1"))
            (rule "closeFalse" (formula "1"))
         )
      )
      (branch "if x_2 false"
          (builtin "One Step Simplification" (formula "6"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "notLeft" (formula "1"))
         (rule "assignment" (formula "6") (term "1"))
          (builtin "One Step Simplification" (formula "6"))
         (rule "assignment" (formula "6") (term "1"))
          (builtin "One Step Simplification" (formula "6"))
         (rule "blockEmpty" (formula "6") (term "1"))
         (rule "returnUnfold" (formula "6") (term "1") (inst "#v0=x"))
         (rule "variableDeclarationAssign" (formula "6") (term "1"))
         (rule "variableDeclaration" (formula "6") (term "1") (newnames "x_3"))
          (builtin "Use Operation Contract" (formula "6") (newnames "heapBefore_gcdHelp,result_gcdHelp,exc_0,heapAfter_gcdHelp,anon_heap_gcdHelp") (contract "Gcd[Gcd::gcdHelp(int,int)].JML normal_behavior operation contract.0"))
         (branch "Post (gcdHelp)"
             (builtin "One Step Simplification" (formula "8"))
             (builtin "One Step Simplification" (formula "5"))
            (rule "andLeft" (formula "5"))
            (rule "andLeft" (formula "6"))
            (rule "andLeft" (formula "7"))
            (rule "assignment" (formula "10") (term "1"))
             (builtin "One Step Simplification" (formula "10"))
            (rule "commute_and" (formula "7") (term "0,1"))
            (rule "commute_and_2" (formula "7") (term "0,0,1,1"))
            (rule "methodCallReturn" (formula "10") (term "1"))
            (rule "assignment" (formula "10") (term "1"))
             (builtin "One Step Simplification" (formula "10"))
            (rule "methodCallEmpty" (formula "10") (term "1"))
            (rule "tryEmpty" (formula "10") (term "1"))
             (builtin "One Step Simplification" (formula "10"))
            (rule "emptyModality" (formula "10") (term "1"))
            (rule "andRight" (formula "10"))
            (branch "Case 1"
               (rule "impRight" (formula "10"))
               (rule "andRight" (formula "11"))
               (branch "Case 1"
                  (rule "andRight" (formula "11"))
                  (branch "Case 1"
                      (builtin "One Step Simplification" (formula "1"))
                      (builtin "One Step Simplification" (formula "11"))
                     (rule "inEqSimp_ltRight" (formula "10"))
                     (rule "times_zero_1" (formula "1") (term "0,0"))
                     (rule "add_zero_left" (formula "1") (term "0"))
                     (rule "inEqSimp_gtRight" (formula "10"))
                     (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                     (rule "polySimp_addComm0" (formula "1") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "4"))
                     (rule "times_zero_1" (formula "4") (term "1,0,0"))
                     (rule "add_zero_right" (formula "4") (term "0,0"))
                     (rule "inEqSimp_gtToGeq" (formula "10") (term "0,0,0,0,1,1"))
                     (rule "times_zero_1" (formula "10") (term "1,0,0,0,0,0,0,1,1"))
                     (rule "add_zero_right" (formula "10") (term "0,0,0,0,0,0,1,1"))
                     (rule "jmod_axiom" (formula "10") (term "0,0,0,1"))
                     (rule "polySimp_mulComm1" (formula "10") (term "1,0,0,0,1"))
                     (rule "jmod_axiom" (formula "10") (term "0,1,0,0,1,1"))
                     (rule "polySimp_mulComm1" (formula "10") (term "1,0,1,0,0,1,1"))
                     (rule "jmod_axiom" (formula "10") (term "0,1,0,1"))
                     (rule "polySimp_mulComm1" (formula "10") (term "1,0,1,0,1"))
                     (rule "jmod_axiom" (formula "10") (term "0,1,0,1,1"))
                     (rule "polySimp_mulComm1" (formula "10") (term "1,0,1,0,1,1"))
                     (rule "jmod_axiom" (formula "10") (term "0,1,0,0,0,1,1"))
                     (rule "polySimp_mulComm1" (formula "10") (term "1,0,1,0,0,0,1,1"))
                     (rule "jmod_axiom" (formula "11") (term "0"))
                     (rule "polySimp_mulComm1" (formula "11") (term "1,0"))
                     (rule "polySimp_sepNegMonomial" (formula "10") (term "0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "0,0,0,1"))
                     (rule "polySimp_elimOne" (formula "10") (term "0,0,0,1"))
                     (rule "polySimp_sepNegMonomial" (formula "10") (term "1,0,0,1,1"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "0,1,0,0,1,1"))
                     (rule "polySimp_elimOne" (formula "10") (term "0,1,0,0,1,1"))
                     (rule "polySimp_sepNegMonomial" (formula "10") (term "1,0,1"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "0,1,0,1"))
                     (rule "polySimp_elimOne" (formula "10") (term "0,1,0,1"))
                     (rule "polySimp_sepNegMonomial" (formula "10") (term "1,0,1,1"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "0,1,0,1,1"))
                     (rule "polySimp_elimOne" (formula "10") (term "0,1,0,1,1"))
                     (rule "polySimp_sepNegMonomial" (formula "10") (term "1,0,0,0,1,1"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "0,1,0,0,0,1,1"))
                     (rule "polySimp_elimOne" (formula "10") (term "0,1,0,0,0,1,1"))
                     (rule "polySimp_sepNegMonomial" (formula "11"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                     (rule "polySimp_elimOne" (formula "11") (term "0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                     (rule "polySimp_elimOne" (formula "1") (term "0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                     (rule "mul_literals" (formula "4") (term "1"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "0,0,0,0,1,1"))
                     (rule "mul_literals" (formula "10") (term "1,0,0,0,0,1,1"))
                     (rule "inEqSimp_contradEq3" (formula "3") (term "0,0") (ifseqformula "4"))
                     (rule "times_zero_1" (formula "3") (term "1,0,0,0,0"))
                     (rule "add_zero_right" (formula "3") (term "0,0,0,0"))
                     (rule "qeq_literals" (formula "3") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "3"))
                     (rule "true_left" (formula "3"))
                     (rule "nnf_imp2or" (formula "9") (term "0,1,1"))
                     (rule "nnf_notAnd" (formula "9") (term "0,0,1,1"))
                     (rule "nnf_notAnd" (formula "9") (term "0,0,0,1,1"))
                     (rule "inEqSimp_notGeq" (formula "9") (term "0,0,0,0,1,1"))
                     (rule "mul_literals" (formula "9") (term "1,0,0,0,0,0,0,1,1"))
                     (rule "add_literals" (formula "9") (term "0,0,0,0,0,0,1,1"))
                     (rule "add_zero_left" (formula "9") (term "0,0,0,0,0,1,1"))
                     (rule "jdiv_axiom" (formula "9") (term "0,0,0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "9") (term "0,0,2,1"))
                     (rule "eqSymm" (formula "9"))
                     (rule "polySimp_elimOne" (formula "9") (term "0,0,2,0"))
                     (rule "inEqSimp_invertInEq1" (formula "9") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "9") (term "0,0,0"))
                     (rule "times_zero_2" (formula "9") (term "1,0,0"))
                     (rule "polySimp_elimOne" (formula "9") (term "0,0,0"))
                     (rule "inEqSimp_subsumption0" (formula "9") (term "0,0") (ifseqformula "3"))
                     (rule "leq_literals" (formula "9") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "9"))
                     (rule "eqSymm" (formula "9"))
                     (rule "applyEq" (formula "10") (term "0,0,0,0,1") (ifseqformula "9"))
                     (rule "jdiv_axiom" (formula "10") (term "0,0,1,0,1"))
                     (rule "eqSymm" (formula "10"))
                     (rule "replace_known_left" (formula "10") (term "0,0") (ifseqformula "2"))
                      (builtin "One Step Simplification" (formula "10"))
                     (rule "eqSymm" (formula "10"))
                     (rule "applyEq" (formula "11") (term "0,0,1,0,1") (ifseqformula "10"))
                     (rule "jdiv_axiom" (formula "12") (term "0,0"))
                     (rule "eqSymm" (formula "1"))
                     (rule "inEqSimp_contradInEq0" (formula "1") (term "0,0") (ifseqformula "4"))
                     (rule "qeq_literals" (formula "1") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "eqSymm" (formula "1"))
                     (rule "applyEq" (formula "13") (term "0,0") (ifseqformula "1"))
                     (rule "polySimp_mulComm1" (formula "13") (term "0"))
                     (rule "polySimp_homoEq" (formula "13"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "1,0"))
                     (rule "polySimp_elimOne" (formula "13") (term "1,0"))
                     (rule "polySimp_sepPosMonomial" (formula "13"))
                     (rule "replace_known_right" (formula "12") (term "0,0,1") (ifseqformula "13"))
                      (builtin "One Step Simplification" (formula "12"))
                     (rule "applyEq" (formula "11") (term "0,0") (ifseqformula "12"))
                     (rule "jdiv_axiom_inline" (formula "11") (term "0"))
                     (rule "times_zero_2" (formula "11") (term "0,0,2,0"))
                     (rule "qeq_literals" (formula "11") (term "0,0"))
                      (builtin "One Step Simplification" (formula "11"))
                     (rule "eqSymm" (formula "11"))
                     (rule "applyEq" (formula "3") (term "0") (ifseqformula "12"))
                     (rule "qeq_literals" (formula "3"))
                     (rule "true_left" (formula "3"))
                     (rule "applyEq" (formula "2") (term "0") (ifseqformula "11"))
                     (rule "inEqSimp_commuteGeq" (formula "2"))
                     (rule "applyEq" (formula "10") (term "0,0") (ifseqformula "11"))
                      (builtin "One Step Simplification" (formula "10"))
                     (rule "true_left" (formula "10"))
                     (rule "inEqSimp_invertInEq0" (formula "2"))
                     (rule "times_zero_2" (formula "2") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                     (rule "polySimp_elimOne" (formula "2") (term "0"))
                     (rule "inEqSimp_contradInEq1" (formula "3") (ifseqformula "2"))
                     (rule "qeq_literals" (formula "3") (term "0"))
                      (builtin "One Step Simplification" (formula "3"))
                     (rule "closeFalse" (formula "3"))
                  )
                  (branch "Case 2"
                      (builtin "One Step Simplification" (formula "1"))
                      (builtin "One Step Simplification" (formula "11"))
                     (rule "replace_known_right" (formula "8") (term "1,0,1") (ifseqformula "11"))
                      (builtin "One Step Simplification" (formula "8"))
                     (rule "replace_known_left" (formula "1") (term "0,1") (ifseqformula "8"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "notLeft" (formula "1"))
                     (rule "inEqSimp_ltRight" (formula "10"))
                     (rule "times_zero_1" (formula "1") (term "0,0"))
                     (rule "add_zero_left" (formula "1") (term "0"))
                     (rule "inEqSimp_gtRight" (formula "10"))
                     (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                     (rule "polySimp_addComm0" (formula "1") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "3"))
                     (rule "times_zero_1" (formula "3") (term "1,0,0"))
                     (rule "add_zero_right" (formula "3") (term "0,0"))
                     (rule "applyEq" (formula "2") (term "0") (ifseqformula "9"))
                     (rule "qeq_literals" (formula "2"))
                     (rule "true_left" (formula "2"))
                     (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "8"))
                     (rule "times_zero_2" (formula "1") (term "1,0"))
                     (rule "add_zero_right" (formula "1") (term "0"))
                     (rule "applyEq" (formula "10") (term "0,0") (ifseqformula "8"))
                      (builtin "One Step Simplification" (formula "10"))
                     (rule "closeTrue" (formula "10"))
                  )
               )
               (branch "Case 2"
                   (builtin "One Step Simplification" (formula "1"))
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "allRight" (formula "11") (inst "sk=x_0"))
                  (rule "impRight" (formula "11"))
                  (rule "andLeft" (formula "1"))
                  (rule "andLeft" (formula "1"))
                  (rule "inEqSimp_gtRight" (formula "12"))
                  (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                  (rule "polySimp_addComm0" (formula "1") (term "0"))
                  (rule "inEqSimp_ltRight" (formula "13"))
                  (rule "times_zero_1" (formula "1") (term "0,0"))
                  (rule "add_zero_left" (formula "1") (term "0"))
                  (rule "inEqSimp_gtToGeq" (formula "13") (term "0,0,0,0,1,1"))
                  (rule "times_zero_1" (formula "13") (term "1,0,0,0,0,0,0,1,1"))
                  (rule "add_zero_right" (formula "13") (term "0,0,0,0,0,0,1,1"))
                  (rule "inEqSimp_ltToLeq" (formula "7"))
                  (rule "times_zero_1" (formula "7") (term "1,0,0"))
                  (rule "add_zero_right" (formula "7") (term "0,0"))
                  (rule "inEqSimp_gtToGeq" (formula "3"))
                  (rule "times_zero_1" (formula "3") (term "1,0,0"))
                  (rule "add_zero_right" (formula "3") (term "0,0"))
                  (rule "jmod_axiom" (formula "13") (term "0,1,0,0,0,1,1"))
                  (rule "polySimp_mulComm1" (formula "13") (term "1,0,1,0,0,0,1,1"))
                  (rule "jmod_axiom" (formula "13") (term "0,1,0,0,1,1"))
                  (rule "polySimp_mulComm1" (formula "13") (term "1,0,1,0,0,1,1"))
                  (rule "jmod_axiom" (formula "13") (term "0,1,0,1"))
                  (rule "polySimp_mulComm1" (formula "13") (term "1,0,1,0,1"))
                  (rule "jmod_axiom" (formula "13") (term "0,1,0,1,1"))
                  (rule "polySimp_mulComm1" (formula "13") (term "1,0,1,0,1,1"))
                  (rule "jmod_axiom" (formula "13") (term "0,0,0,1"))
                  (rule "polySimp_mulComm1" (formula "13") (term "1,0,0,0,1"))
                  (rule "jmod_axiom" (formula "14") (term "0"))
                  (rule "polySimp_mulComm1" (formula "14") (term "1,0"))
                  (rule "jmod_axiom" (formula "5") (term "0"))
                  (rule "polySimp_mulComm1" (formula "5") (term "1,0"))
                  (rule "jmod_axiom" (formula "4") (term "0"))
                  (rule "polySimp_mulComm1" (formula "4") (term "1,0"))
                  (rule "polySimp_sepNegMonomial" (formula "13") (term "1,0,0,0,1,1"))
                  (rule "polySimp_mulLiterals" (formula "13") (term "0,1,0,0,0,1,1"))
                  (rule "polySimp_elimOne" (formula "13") (term "0,1,0,0,0,1,1"))
                  (rule "polySimp_sepNegMonomial" (formula "13") (term "1,0,0,1,1"))
                  (rule "polySimp_mulLiterals" (formula "13") (term "0,1,0,0,1,1"))
                  (rule "polySimp_elimOne" (formula "13") (term "0,1,0,0,1,1"))
                  (rule "polySimp_sepNegMonomial" (formula "13") (term "1,0,1"))
                  (rule "polySimp_mulLiterals" (formula "13") (term "0,1,0,1"))
                  (rule "polySimp_elimOne" (formula "13") (term "0,1,0,1"))
                  (rule "polySimp_sepNegMonomial" (formula "13") (term "1,0,1,1"))
                  (rule "polySimp_mulLiterals" (formula "13") (term "0,1,0,1,1"))
                  (rule "polySimp_elimOne" (formula "13") (term "0,1,0,1,1"))
                  (rule "polySimp_sepNegMonomial" (formula "13") (term "0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "13") (term "0,0,0,1"))
                  (rule "polySimp_elimOne" (formula "13") (term "0,0,0,1"))
                  (rule "polySimp_sepNegMonomial" (formula "14"))
                  (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                  (rule "polySimp_elimOne" (formula "14") (term "0"))
                  (rule "polySimp_sepNegMonomial" (formula "5"))
                  (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                  (rule "polySimp_elimOne" (formula "5") (term "0"))
                  (rule "polySimp_sepNegMonomial" (formula "4"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                  (rule "polySimp_elimOne" (formula "4") (term "0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                  (rule "polySimp_elimOne" (formula "2") (term "0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "0,0,0,0,1,1"))
                  (rule "mul_literals" (formula "13") (term "1,0,0,0,0,1,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "7"))
                  (rule "mul_literals" (formula "7") (term "1"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                  (rule "mul_literals" (formula "3") (term "1"))
                  (rule "inEqSimp_contradEq3" (formula "6") (term "0,0") (ifseqformula "7"))
                  (rule "times_zero_1" (formula "6") (term "1,0,0,0,0"))
                  (rule "add_zero_right" (formula "6") (term "0,0,0,0"))
                  (rule "qeq_literals" (formula "6") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "6"))
                  (rule "true_left" (formula "6"))
                  (rule "nnf_imp2or" (formula "12") (term "0,1,1"))
                  (rule "nnf_notAnd" (formula "12") (term "0,0,1,1"))
                  (rule "nnf_notAnd" (formula "12") (term "0,0,0,1,1"))
                  (rule "inEqSimp_notGeq" (formula "12") (term "0,0,0,0,1,1"))
                  (rule "mul_literals" (formula "12") (term "1,0,0,0,0,0,0,1,1"))
                  (rule "add_literals" (formula "12") (term "0,0,0,0,0,0,1,1"))
                  (rule "add_zero_left" (formula "12") (term "0,0,0,0,0,1,1"))
                  (rule "jdiv_axiom" (formula "12") (term "0,0,1,0,1"))
                  (rule "eqSymm" (formula "12"))
                  (rule "replace_known_left" (formula "12") (term "0,0") (ifseqformula "1"))
                   (builtin "One Step Simplification" (formula "12"))
                  (rule "eqSymm" (formula "12"))
                  (rule "applyEq" (formula "13") (term "0,0,1,0,1") (ifseqformula "12"))
                  (rule "commute_and" (formula "13") (term "0,1"))
                  (rule "jdiv_axiom" (formula "14") (term "0,0"))
                  (rule "eqSymm" (formula "1"))
                  (rule "jdiv_axiom" (formula "6") (term "0,0"))
                  (rule "eqSymm" (formula "6"))
                  (rule "replace_known_left" (formula "6") (term "0,0") (ifseqformula "2"))
                   (builtin "One Step Simplification" (formula "6"))
                  (rule "eqSymm" (formula "6"))
                  (rule "applyEq" (formula "7") (term "0,0") (ifseqformula "6"))
                  (rule "jdiv_axiom" (formula "5") (term "0,0"))
                  (rule "eqSymm" (formula "5"))
                  (rule "inEqSimp_contradInEq0" (formula "5") (term "0,0") (ifseqformula "9"))
                  (rule "qeq_literals" (formula "5") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "5"))
                  (rule "eqSymm" (formula "5"))
                  (rule "applyEq" (formula "6") (term "0,0") (ifseqformula "5"))
                  (rule "polySimp_mulComm1" (formula "6") (term "0"))
                  (rule "polySimp_homoEq" (formula "6"))
                  (rule "polySimp_mulLiterals" (formula "6") (term "1,0"))
                  (rule "polySimp_elimOne" (formula "6") (term "1,0"))
                  (rule "polySimp_sepPosMonomial" (formula "6"))
                  (rule "div_axiom" (formula "15") (term "1") (inst "quotient=quotient_0"))
                  (rule "polySimp_mulComm0" (formula "15") (term "0,1,1,1"))
                  (rule "polySimp_mulComm0" (formula "15") (term "0,2,1,1"))
                  (rule "polySimp_mulComm0" (formula "15") (term "1,1,1,1,1"))
                  (rule "polySimp_mulComm0" (formula "15") (term "0,1,0,1"))
                  (rule "commute_and" (formula "15") (term "0,1"))
                  (rule "jdiv_axiom" (formula "17") (term "0,0,1,0,1"))
                  (rule "polySimp_mulLiterals" (formula "17") (term "0,0,2,1"))
                  (rule "eqSymm" (formula "17"))
                  (rule "polySimp_elimOne" (formula "17") (term "0,0,2,0"))
                  (rule "inEqSimp_invertInEq1" (formula "17") (term "0,0"))
                  (rule "times_zero_2" (formula "17") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "17") (term "0,0,0"))
                  (rule "polySimp_elimOne" (formula "17") (term "0,0,0"))
                  (rule "inEqSimp_subsumption0" (formula "17") (term "0,0") (ifseqformula "9"))
                  (rule "leq_literals" (formula "17") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "17"))
                  (rule "eqSymm" (formula "17"))
                  (rule "applyEq" (formula "18") (term "0,0,1,0,1") (ifseqformula "17"))
                  (rule "commute_and" (formula "18") (term "0,1"))
                  (rule "cut_direct" (formula "18") (term "0,0"))
                  (branch "CUT: b = 0 TRUE"
                      (builtin "One Step Simplification" (formula "19"))
                     (rule "true_left" (formula "19"))
                     (rule "applyEq" (formula "7") (term "0,0") (ifseqformula "18"))
                     (rule "jdiv_axiom_inline" (formula "7") (term "0"))
                     (rule "qeq_literals" (formula "7") (term "0,0"))
                      (builtin "One Step Simplification" (formula "7"))
                     (rule "eqSymm" (formula "7"))
                     (rule "applyEq" (formula "15") (term "1,0,0,1") (ifseqformula "18"))
                     (rule "applyEq" (formula "16") (term "0,0") (ifseqformula "18"))
                     (rule "jdiv_axiom_inline" (formula "16") (term "0"))
                     (rule "times_zero_2" (formula "16") (term "0,0,2,0"))
                     (rule "qeq_literals" (formula "16") (term "0,0"))
                      (builtin "One Step Simplification" (formula "16"))
                     (rule "eqSymm" (formula "16"))
                     (rule "applyEq" (formula "8") (term "0,0,0") (ifseqformula "18"))
                     (rule "applyEq" (formula "15") (term "0,0,1,0,1") (ifseqformula "18"))
                     (rule "applyEq" (formula "3") (term "0") (ifseqformula "18"))
                     (rule "inEqSimp_commuteGeq" (formula "3"))
                     (rule "applyEq" (formula "2") (term "0") (ifseqformula "18"))
                     (rule "qeq_literals" (formula "2"))
                     (rule "true_left" (formula "2"))
                     (rule "applyEq" (formula "15") (term "0,0") (ifseqformula "17"))
                      (builtin "One Step Simplification" (formula "15"))
                     (rule "true_left" (formula "15"))
                     (rule "applyEq" (formula "6") (term "0,0") (ifseqformula "16"))
                      (builtin "One Step Simplification" (formula "6"))
                     (rule "true_left" (formula "6"))
                     (rule "applyEq" (formula "13") (term "1,0,1,1,1,1") (ifseqformula "15"))
                     (rule "add_zero_right" (formula "13") (term "0,1,1,1,1"))
                     (rule "applyEq" (formula "6") (term "1") (ifseqformula "15"))
                     (rule "applyEq" (formula "13") (term "1,0,1,2,1,1") (ifseqformula "15"))
                     (rule "add_zero_right" (formula "13") (term "0,1,2,1,1"))
                     (rule "inEqSimp_invertInEq0" (formula "2"))
                     (rule "times_zero_2" (formula "2") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                     (rule "polySimp_elimOne" (formula "2") (term "0"))
                     (rule "inEqSimp_contradInEq1" (formula "7") (ifseqformula "2"))
                     (rule "qeq_literals" (formula "7") (term "0"))
                      (builtin "One Step Simplification" (formula "7"))
                     (rule "closeFalse" (formula "7"))
                  )
                  (branch "CUT: b = 0 FALSE"
                      (builtin "One Step Simplification" (formula "18"))
                     (rule "andLeft" (formula "18"))
                     (rule "andLeft" (formula "18"))
                     (rule "inEqSimp_strengthen1" (formula "2") (ifseqformula "21"))
                     (rule "add_zero_right" (formula "2") (term "1"))
                     (rule "inEqSimp_contradEq7" (formula "21") (ifseqformula "2"))
                     (rule "times_zero_1" (formula "21") (term "1,0,0"))
                     (rule "add_zero_right" (formula "21") (term "0,0"))
                     (rule "leq_literals" (formula "21") (term "0"))
                      (builtin "One Step Simplification" (formula "21"))
                     (rule "false_right" (formula "21"))
                     (rule "div_axiom" (formula "1") (term "1,0") (inst "quotient=quotient_1"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,1,1,1,1"))
                     (rule "polySimp_mulComm0" (formula "1") (term "0,2,1,1"))
                     (rule "polySimp_mulComm0" (formula "1") (term "0,1,1,1"))
                     (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,1"))
                     (rule "inEqSimp_contradEq7" (formula "1") (term "0") (ifseqformula "5"))
                     (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                     (rule "add_zero_right" (formula "1") (term "0,0,0"))
                     (rule "leq_literals" (formula "1") (term "0,0"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "andLeft" (formula "1"))
                     (rule "andLeft" (formula "1"))
                     (rule "applyEq" (formula "4") (term "1,0") (ifseqformula "1"))
                     (rule "inEqSimp_subsumption1" (formula "3") (term "0") (ifseqformula "7"))
                     (rule "leq_literals" (formula "3") (term "0,0"))
                      (builtin "One Step Simplification" (formula "3"))
                     (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "2"))
                     (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                     (rule "polySimp_elimOne" (formula "3") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "3") (term "0"))
                     (rule "polySimp_rightDist" (formula "3") (term "0,0,0"))
                     (rule "mul_literals" (formula "3") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor2b" (formula "3") (term "0,0"))
                     (rule "add_literals" (formula "3") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "3") (term "1,0,0"))
                     (rule "add_zero_right" (formula "3") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                     (rule "mul_literals" (formula "3") (term "1"))
                     (rule "div_axiom" (formula "4") (term "0,2,0") (inst "quotient=quotient_2"))
                     (rule "polySimp_mulComm0" (formula "4") (term "0,1,0,1"))
                     (rule "polySimp_mulComm0" (formula "4") (term "1,1,1,1,1"))
                     (rule "polySimp_mulComm0" (formula "4") (term "0,1,1,1"))
                     (rule "polySimp_mulComm0" (formula "4") (term "0,2,1,1"))
                     (rule "inEqSimp_contradEq7" (formula "4") (term "0") (ifseqformula "8"))
                     (rule "times_zero_1" (formula "4") (term "1,0,0,0"))
                     (rule "add_zero_right" (formula "4") (term "0,0,0"))
                     (rule "leq_literals" (formula "4") (term "0,0"))
                      (builtin "One Step Simplification" (formula "4"))
                     (rule "andLeft" (formula "4"))
                     (rule "andLeft" (formula "4"))
                     (rule "applyEq" (formula "7") (term "0,2,0") (ifseqformula "4"))
                     (rule "inEqSimp_subsumption1" (formula "6") (term "0") (ifseqformula "10"))
                     (rule "leq_literals" (formula "6") (term "0,0"))
                      (builtin "One Step Simplification" (formula "6"))
                     (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "5"))
                     (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0"))
                     (rule "polySimp_elimOne" (formula "6") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "6") (term "0"))
                     (rule "polySimp_rightDist" (formula "6") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "6") (term "0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "6") (term "1,0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0"))
                     (rule "add_literals" (formula "6") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "6") (term "1,0,0"))
                     (rule "add_zero_right" (formula "6") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                     (rule "mul_literals" (formula "6") (term "1"))
                     (rule "div_axiom" (formula "13") (term "1") (inst "quotient=quotient_3"))
                     (rule "polySimp_mulComm0" (formula "13") (term "0,1,1,1"))
                     (rule "polySimp_mulComm0" (formula "13") (term "0,1,0,1"))
                     (rule "polySimp_mulComm0" (formula "13") (term "1,1,1,1,1"))
                     (rule "polySimp_mulComm0" (formula "13") (term "0,2,1,1"))
                     (rule "inEqSimp_contradEq7" (formula "13") (term "0") (ifseqformula "10"))
                     (rule "times_zero_1" (formula "13") (term "1,0,0,0"))
                     (rule "add_zero_right" (formula "13") (term "0,0,0"))
                     (rule "leq_literals" (formula "13") (term "0,0"))
                      (builtin "One Step Simplification" (formula "13"))
                     (rule "andLeft" (formula "13"))
                     (rule "andLeft" (formula "13"))
                     (rule "applyEq" (formula "17") (term "0,0") (ifseqformula "13"))
                     (rule "polySimp_mulComm0" (formula "17") (term "0"))
                     (rule "applyEq" (formula "15") (term "0,1") (ifseqformula "17"))
                     (rule "inEqSimp_homoInEq1" (formula "15") (term "1"))
                     (rule "polySimp_addComm1" (formula "15") (term "0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,1"))
                     (rule "add_literals" (formula "15") (term "1,1,0,0,1"))
                     (rule "times_zero_1" (formula "15") (term "1,0,0,1"))
                     (rule "add_zero_right" (formula "15") (term "0,0,1"))
                     (rule "applyEq" (formula "15") (term "0,2") (ifseqformula "17"))
                     (rule "inEqSimp_homoInEq1" (formula "15") (term "2"))
                     (rule "polySimp_addComm1" (formula "15") (term "0,2"))
                     (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,2"))
                     (rule "add_literals" (formula "15") (term "1,1,0,0,2"))
                     (rule "times_zero_1" (formula "15") (term "1,0,0,2"))
                     (rule "add_zero_right" (formula "15") (term "0,0,2"))
                     (rule "applyEq" (formula "14") (term "0") (ifseqformula "17"))
                     (rule "inEqSimp_homoInEq0" (formula "14"))
                     (rule "polySimp_pullOutFactor1" (formula "14") (term "0"))
                     (rule "add_literals" (formula "14") (term "1,0"))
                     (rule "times_zero_1" (formula "14") (term "0"))
                     (rule "qeq_literals" (formula "14"))
                     (rule "true_left" (formula "14"))
                     (rule "applyEq" (formula "15") (term "1") (ifseqformula "13"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "14") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "14") (term "0,1"))
                     (rule "polySimp_elimOne" (formula "14") (term "0,1"))
                     (rule "replace_known_left" (formula "14") (term "1") (ifseqformula "10"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "2"))
                     (rule "mul_literals" (formula "14") (term "1,2"))
                     (rule "inEqSimp_subsumption1" (formula "14") (term "0") (ifseqformula "10"))
                     (rule "leq_literals" (formula "14") (term "0,0"))
                      (builtin "One Step Simplification" (formula "14"))
                     (rule "true_left" (formula "14"))
                     (rule "div_axiom" (formula "11") (term "0,1") (inst "quotient=quotient_4"))
                     (rule "polySimp_mulComm0" (formula "11") (term "1,1,1,1,1"))
                     (rule "polySimp_mulComm0" (formula "11") (term "0,2,1,1"))
                     (rule "polySimp_mulComm0" (formula "11") (term "0,1,1,1"))
                     (rule "polySimp_mulComm0" (formula "11") (term "0,1,0,1"))
                     (rule "inEqSimp_contradEq7" (formula "11") (term "0") (ifseqformula "10"))
                     (rule "times_zero_1" (formula "11") (term "1,0,0,0"))
                     (rule "add_zero_right" (formula "11") (term "0,0,0"))
                     (rule "leq_literals" (formula "11") (term "0,0"))
                      (builtin "One Step Simplification" (formula "11"))
                     (rule "andLeft" (formula "11"))
                     (rule "andLeft" (formula "11"))
                     (rule "applyEq" (formula "15") (term "0,0") (ifseqformula "11"))
                     (rule "polySimp_mulComm0" (formula "15") (term "0"))
                     (rule "applyEq" (formula "12") (term "0") (ifseqformula "15"))
                     (rule "inEqSimp_homoInEq0" (formula "12"))
                     (rule "polySimp_mulLiterals" (formula "12") (term "1,0"))
                     (rule "polySimp_pullOutFactor0" (formula "12") (term "0"))
                     (rule "add_literals" (formula "12") (term "1,0"))
                     (rule "times_zero_1" (formula "12") (term "0"))
                     (rule "qeq_literals" (formula "12"))
                     (rule "true_left" (formula "12"))
                     (rule "applyEq" (formula "12") (term "0,1") (ifseqformula "14"))
                     (rule "inEqSimp_homoInEq1" (formula "12") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1"))
                     (rule "polySimp_elimOne" (formula "12") (term "1,0,1"))
                     (rule "polySimp_addComm1" (formula "12") (term "0,1"))
                     (rule "polySimp_pullOutFactor2b" (formula "12") (term "0,0,1"))
                     (rule "add_literals" (formula "12") (term "1,1,0,0,1"))
                     (rule "times_zero_1" (formula "12") (term "1,0,0,1"))
                     (rule "add_zero_right" (formula "12") (term "0,0,1"))
                     (rule "applyEq" (formula "12") (term "0,2") (ifseqformula "14"))
                     (rule "inEqSimp_homoInEq1" (formula "12") (term "2"))
                     (rule "polySimp_mulLiterals" (formula "12") (term "1,0,2"))
                     (rule "polySimp_elimOne" (formula "12") (term "1,0,2"))
                     (rule "polySimp_addComm1" (formula "12") (term "0,2"))
                     (rule "polySimp_pullOutFactor2b" (formula "12") (term "0,0,2"))
                     (rule "add_literals" (formula "12") (term "1,1,0,0,2"))
                     (rule "times_zero_1" (formula "12") (term "1,0,0,2"))
                     (rule "add_zero_right" (formula "12") (term "0,0,2"))
                     (rule "applyEq" (formula "13") (term "0,1") (ifseqformula "11"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "12") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "12") (term "0,1"))
                     (rule "polySimp_elimOne" (formula "12") (term "0,1"))
                     (rule "replace_known_left" (formula "12") (term "1") (ifseqformula "10"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "2"))
                     (rule "mul_literals" (formula "12") (term "1,2"))
                     (rule "inEqSimp_contradInEq1" (formula "12") (term "2") (ifseqformula "10"))
                     (rule "qeq_literals" (formula "12") (term "0,2"))
                      (builtin "One Step Simplification" (formula "12"))
                     (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "10"))
                     (rule "leq_literals" (formula "12") (term "0"))
                      (builtin "One Step Simplification" (formula "12"))
                     (rule "true_left" (formula "12"))
                     (rule "div_axiom" (formula "25") (term "1") (inst "quotient=quotient_5"))
                     (rule "polySimp_mulComm0" (formula "25") (term "0,1,0,1"))
                     (rule "polySimp_mulComm0" (formula "25") (term "1,1,1,1,1"))
                     (rule "polySimp_mulComm0" (formula "25") (term "0,1,1,1"))
                     (rule "polySimp_mulComm0" (formula "25") (term "0,2,1,1"))
                     (rule "ifthenelse_split_for" (formula "23") (term "1,1"))
                     (branch "result_gcdHelp >= 0 TRUE"
                        (rule "replace_known_left" (formula "7") (term "0,0") (ifseqformula "23"))
                         (builtin "One Step Simplification" (formula "7"))
                        (rule "eqSymm" (formula "7"))
                        (rule "replace_known_left" (formula "26") (term "0,1,1") (ifseqformula "23"))
                         (builtin "One Step Simplification" (formula "26"))
                        (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "7"))
                        (rule "polySimp_mulComm0" (formula "31") (term "0"))
                        (rule "inEqSimp_strengthen0" (formula "2") (ifseqformula "31"))
                        (rule "inEqSimp_contradEq3" (formula "31") (ifseqformula "2"))
                        (rule "polySimp_mulComm0" (formula "31") (term "1,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0"))
                        (rule "add_literals" (formula "31") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "31") (term "1,0,0"))
                        (rule "add_zero_right" (formula "31") (term "0,0"))
                        (rule "qeq_literals" (formula "31") (term "0"))
                         (builtin "One Step Simplification" (formula "31"))
                        (rule "false_right" (formula "31"))
                        (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "2"))
                        (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                        (rule "polySimp_elimOne" (formula "3") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "3") (term "0"))
                        (rule "polySimp_rightDist" (formula "3") (term "0,0,0"))
                        (rule "mul_literals" (formula "3") (term "0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                        (rule "add_literals" (formula "3") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor2b" (formula "3") (term "0,0"))
                        (rule "add_literals" (formula "3") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "3") (term "1,0,0"))
                        (rule "add_zero_right" (formula "3") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                        (rule "mul_literals" (formula "3") (term "1"))
                        (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "3"))
                        (rule "leq_literals" (formula "11") (term "0"))
                         (builtin "One Step Simplification" (formula "11"))
                        (rule "true_left" (formula "11"))
                        (rule "cnf_rightDist" (formula "24"))
                        (rule "andLeft" (formula "24"))
                        (rule "commute_or" (formula "25"))
                        (rule "cnf_rightDist" (formula "27"))
                        (rule "andLeft" (formula "27"))
                        (rule "commute_or" (formula "28"))
                        (rule "cnf_rightDist" (formula "24"))
                        (rule "andLeft" (formula "24"))
                        (rule "commute_or" (formula "25"))
                        (rule "cnf_rightDist" (formula "28"))
                        (rule "andLeft" (formula "28"))
                        (rule "commute_or" (formula "29"))
                        (rule "polyDiv_pullOut" (formula "14") (term "0") (inst "polyDivCoeff=quotient_3"))
                        (rule "polySimp_mulComm1" (formula "14") (term "1,0,0,2,0"))
                        (rule "polySimp_mulComm0" (formula "14") (term "0,1,0,0,2,0"))
                        (rule "polySimp_addComm0" (formula "14") (term "2,0"))
                        (rule "applyEq" (formula "14") (term "0,1,0,1,2,0") (ifseqformula "16"))
                        (rule "polySimp_pullOutFactor1" (formula "14") (term "0,1,2,0"))
                        (rule "add_literals" (formula "14") (term "1,0,1,2,0"))
                        (rule "times_zero_1" (formula "14") (term "0,1,2,0"))
                        (rule "inEqSimp_contradEq7" (formula "14") (term "0,0") (ifseqformula "3"))
                        (rule "times_zero_1" (formula "14") (term "1,0,0,0,0"))
                        (rule "add_zero_right" (formula "14") (term "0,0,0,0"))
                        (rule "leq_literals" (formula "14") (term "0,0,0"))
                         (builtin "One Step Simplification" (formula "14"))
                        (rule "polySimp_homoEq" (formula "14"))
                        (rule "polySimp_mulComm0" (formula "14") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "14") (term "1,0"))
                        (rule "polySimp_mulComm0" (formula "14") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "14") (term "0"))
                        (rule "polySimp_pullOutFactor1" (formula "14") (term "0,0"))
                        (rule "add_literals" (formula "14") (term "1,0,0"))
                        (rule "times_zero_1" (formula "14") (term "0,0"))
                        (rule "add_zero_left" (formula "14") (term "0"))
                        (rule "polySimp_invertEq" (formula "14"))
                        (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                        (rule "times_zero_2" (formula "14") (term "1"))
                        (rule "polySimp_elimOne" (formula "14") (term "0"))
                        (rule "polyDiv_zero" (formula "14") (term "0"))
                         (builtin "One Step Simplification" (formula "14"))
                        (rule "div_literals" (formula "14") (term "0,1"))
                        (rule "inEqSimp_contradEq7" (formula "14") (term "0,0") (ifseqformula "3"))
                        (rule "times_zero_1" (formula "14") (term "1,0,0,0,0"))
                        (rule "add_zero_right" (formula "14") (term "0,0,0,0"))
                        (rule "leq_literals" (formula "14") (term "0,0,0"))
                         (builtin "One Step Simplification" (formula "14"))
                        (rule "true_left" (formula "14"))
                        (rule "polySimp_critPair" (formula "32") (ifseqformula "31"))
                        (rule "polySimp_mulComm0" (formula "32") (term "1,1,1,0"))
                        (rule "polySimp_mulAssoc" (formula "32") (term "0,1,0,0"))
                        (rule "polySimp_mulComm0" (formula "32") (term "0,0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "32") (term "0,1,0,0"))
                        (rule "polySimp_elimOne" (formula "32") (term "0,1,0,0"))
                        (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                        (rule "polySimp_mulComm1" (formula "32") (term "1,1,0"))
                        (rule "polySimp_mulComm1" (formula "32") (term "0,1,1,0"))
                        (rule "polySimp_rightDist" (formula "32") (term "0,0"))
                        (rule "polySimp_mulComm1" (formula "32") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "32") (term "0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "32") (term "0"))
                        (rule "polySimp_addComm1" (formula "32") (term "0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "32") (term "0"))
                        (rule "add_literals" (formula "32") (term "1,1,0"))
                        (rule "times_zero_1" (formula "32") (term "1,0"))
                        (rule "add_zero_right" (formula "32") (term "0"))
                        (rule "polySimp_addComm0" (formula "32") (term "0"))
                        (rule "polySimp_sepPosMonomial" (formula "32"))
                        (rule "polySimp_critPair" (formula "15") (ifseqformula "13"))
                        (rule "polySimp_mulComm0" (formula "15") (term "1,1,1,0"))
                        (rule "polySimp_mulAssoc" (formula "15") (term "0,1,0,0"))
                        (rule "polySimp_mulComm0" (formula "15") (term "0,0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "15") (term "0,1,0,0"))
                        (rule "polySimp_elimOne" (formula "15") (term "0,1,0,0"))
                        (rule "polySimp_rightDist" (formula "15") (term "1,0"))
                        (rule "polySimp_mulComm1" (formula "15") (term "1,1,0"))
                        (rule "polySimp_mulComm0" (formula "15") (term "0,1,0"))
                        (rule "polySimp_rightDist" (formula "15") (term "0,0"))
                        (rule "polySimp_mulComm0" (formula "15") (term "0,0,0"))
                        (rule "polySimp_mulComm1" (formula "15") (term "1,0,0"))
                        (rule "polySimp_addAssoc" (formula "15") (term "0"))
                        (rule "polySimp_addComm1" (formula "15") (term "0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "15") (term "0"))
                        (rule "add_literals" (formula "15") (term "1,1,0"))
                        (rule "times_zero_1" (formula "15") (term "1,0"))
                        (rule "add_zero_right" (formula "15") (term "0"))
                        (rule "polySimp_addComm0" (formula "15") (term "0"))
                        (rule "polySimp_sepPosMonomial" (formula "15"))
                        (rule "polyDiv_pullOut" (formula "11") (term "0") (inst "polyDivCoeff=quotient_4"))
                        (rule "polySimp_mulComm1" (formula "11") (term "1,0,0,2,0"))
                        (rule "polySimp_mulComm0" (formula "11") (term "0,1,0,0,2,0"))
                        (rule "polySimp_addComm0" (formula "11") (term "2,0"))
                        (rule "applyEq" (formula "11") (term "0,1,0,1,2,0") (ifseqformula "13"))
                        (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,2,0"))
                        (rule "polySimp_elimOne" (formula "11") (term "1,0,1,2,0"))
                        (rule "polySimp_pullOutFactor2" (formula "11") (term "0,1,2,0"))
                        (rule "add_literals" (formula "11") (term "1,0,1,2,0"))
                        (rule "times_zero_1" (formula "11") (term "0,1,2,0"))
                        (rule "inEqSimp_contradEq7" (formula "11") (term "0,0") (ifseqformula "3"))
                        (rule "times_zero_1" (formula "11") (term "1,0,0,0,0"))
                        (rule "add_zero_right" (formula "11") (term "0,0,0,0"))
                        (rule "leq_literals" (formula "11") (term "0,0,0"))
                         (builtin "One Step Simplification" (formula "11"))
                        (rule "polySimp_homoEq" (formula "11"))
                        (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "11") (term "1,0"))
                        (rule "polySimp_mulComm0" (formula "11") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "11") (term "0"))
                        (rule "polySimp_pullOutFactor1" (formula "11") (term "0,0"))
                        (rule "add_literals" (formula "11") (term "1,0,0"))
                        (rule "times_zero_1" (formula "11") (term "0,0"))
                        (rule "add_zero_left" (formula "11") (term "0"))
                        (rule "polySimp_invertEq" (formula "11"))
                        (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                        (rule "times_zero_2" (formula "11") (term "1"))
                        (rule "polySimp_elimOne" (formula "11") (term "0"))
                        (rule "polyDiv_zero" (formula "11") (term "0"))
                         (builtin "One Step Simplification" (formula "11"))
                        (rule "div_literals" (formula "11") (term "0,1"))
                        (rule "inEqSimp_contradEq7" (formula "11") (term "0,0") (ifseqformula "3"))
                        (rule "times_zero_1" (formula "11") (term "1,0,0,0,0"))
                        (rule "add_zero_right" (formula "11") (term "0,0,0,0"))
                        (rule "leq_literals" (formula "11") (term "0,0,0"))
                         (builtin "One Step Simplification" (formula "11"))
                        (rule "true_left" (formula "11"))
                        (rule "cut_direct" (formula "27") (term "0"))
                        (branch "CUT: result_gcdHelp = 0 TRUE"
                            (builtin "One Step Simplification" (formula "28"))
                           (rule "true_left" (formula "28"))
                           (rule "replace_known_left" (formula "28") (term "0") (ifseqformula "27"))
                            (builtin "One Step Simplification" (formula "28"))
                           (rule "true_left" (formula "28"))
                           (rule "replace_known_left" (formula "23") (term "0") (ifseqformula "27"))
                            (builtin "One Step Simplification" (formula "23"))
                           (rule "true_left" (formula "23"))
                           (rule "replace_known_left" (formula "24") (term "0") (ifseqformula "26"))
                            (builtin "One Step Simplification" (formula "24"))
                           (rule "true_left" (formula "24"))
                           (rule "replace_known_left" (formula "26") (term "0") (ifseqformula "25"))
                            (builtin "One Step Simplification" (formula "26"))
                           (rule "true_left" (formula "26"))
                           (rule "replace_known_left" (formula "23") (term "0") (ifseqformula "25"))
                            (builtin "One Step Simplification" (formula "23"))
                           (rule "true_left" (formula "23"))
                           (rule "applyEq" (formula "28") (term "1,0") (ifseqformula "24"))
                           (rule "times_zero_1" (formula "28") (term "0"))
                           (rule "eqSymm" (formula "28"))
                           (rule "applyEq" (formula "6") (term "0,1") (ifseqformula "24"))
                           (rule "times_zero_2" (formula "6") (term "1"))
                           (rule "applyEq" (formula "26") (term "1,0,0") (ifseqformula "24"))
                           (rule "polySimp_mulComm0" (formula "26") (term "0"))
                           (rule "applyEq" (formula "25") (term "1,0") (ifseqformula "24"))
                           (rule "eqSymm" (formula "25"))
                           (rule "applyEq" (formula "23") (term "1,0") (ifseqformula "24"))
                           (rule "eqSymm" (formula "23"))
                           (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "24"))
                           (rule "applyEq" (formula "8") (term "0,0") (ifseqformula "24"))
                           (rule "jdiv_axiom_inline" (formula "8") (term "0"))
                           (rule "times_zero_2" (formula "8") (term "0,0,2,0"))
                           (rule "qeq_literals" (formula "8") (term "0,0"))
                            (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "1")))
                           (rule "true_left" (formula "8"))
                           (rule "applyEq" (formula "26") (term "1,0,0") (ifseqformula "23"))
                           (rule "eqSymm" (formula "26"))
                           (rule "polySimp_homoEq" (formula "26"))
                           (rule "polySimp_mulLiterals" (formula "26") (term "1,0"))
                           (rule "polySimp_elimOne" (formula "26") (term "1,0"))
                           (rule "applyEq" (formula "21") (term "0") (ifseqformula "23"))
                           (rule "qeq_literals" (formula "21"))
                           (rule "true_left" (formula "21"))
                           (rule "applyEq" (formula "2") (term "1,1") (ifseqformula "22"))
                           (rule "add_zero_right" (formula "2") (term "1"))
                           (rule "applyEq" (formula "27") (term "0,0,0,1,0") (ifseqformula "22"))
                           (rule "jdiv_axiom_inline" (formula "27") (term "0,0,1,0"))
                           (rule "qeq_literals" (formula "27") (term "0,0,0,1,0"))
                            (builtin "One Step Simplification" (formula "27"))
                           (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "22"))
                           (rule "times_zero_2" (formula "5") (term "0,0"))
                           (rule "applyEq" (formula "8") (term "0") (ifseqformula "26"))
                           (rule "qeq_literals" (formula "8"))
                           (rule "closeFalse" (formula "8"))
                        )
                        (branch "CUT: result_gcdHelp = 0 FALSE"
                            (builtin "One Step Simplification" (formula "27"))
                           (rule "replace_known_right" (formula "29") (term "0") (ifseqformula "35"))
                            (builtin "One Step Simplification" (formula "29"))
                           (rule "replace_known_right" (formula "23") (term "0") (ifseqformula "35"))
                            (builtin "One Step Simplification" (formula "23"))
                           (rule "replace_known_right" (formula "25") (term "0") (ifseqformula "35"))
                            (builtin "One Step Simplification" (formula "25"))
                           (rule "replace_known_right" (formula "24") (term "0") (ifseqformula "35"))
                            (builtin "One Step Simplification" (formula "24"))
                           (rule "replace_known_right" (formula "28") (term "0") (ifseqformula "35"))
                            (builtin "One Step Simplification" (formula "28"))
                           (rule "applyEq" (formula "32") (term "0,0") (ifseqformula "24"))
                           (rule "eqSymm" (formula "32"))
                           (rule "polySimp_homoEq" (formula "32"))
                           (rule "polySimp_mulLiterals" (formula "32") (term "1,0"))
                           (rule "polySimp_elimOne" (formula "32") (term "1,0"))
                           (rule "polySimp_mulComm0" (formula "32") (term "0,0"))
                           (rule "applyEq" (formula "33") (term "0,0") (ifseqformula "24"))
                           (rule "polySimp_mulComm0" (formula "33") (term "0"))
                           (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "27"))
                           (rule "polySimp_mulComm0" (formula "31") (term "0"))
                           (rule "applyEq" (formula "26") (term "1") (ifseqformula "24"))
                           (rule "applyEq" (formula "30") (term "1") (ifseqformula "27"))
                           (rule "applyEq" (formula "32") (term "0,1,0") (ifseqformula "27"))
                           (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                           (rule "polySimp_addComm0" (formula "32") (term "0"))
                           (rule "applyEq" (formula "29") (term "0") (ifseqformula "31"))
                           (rule "inEqSimp_homoInEq1" (formula "29"))
                           (rule "polySimp_mulLiterals" (formula "29") (term "1,0"))
                           (rule "polySimp_elimOne" (formula "29") (term "1,0"))
                           (rule "polySimp_addComm1" (formula "29") (term "0"))
                           (rule "polySimp_pullOutFactor2b" (formula "29") (term "0,0"))
                           (rule "add_literals" (formula "29") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "29") (term "1,0,0"))
                           (rule "add_zero_right" (formula "29") (term "0,0"))
                           (rule "applyEq" (formula "25") (term "0") (ifseqformula "33"))
                           (rule "inEqSimp_homoInEq1" (formula "25"))
                           (rule "polySimp_addComm1" (formula "25") (term "0"))
                           (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0"))
                           (rule "add_literals" (formula "25") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "25") (term "1,0,0"))
                           (rule "add_zero_right" (formula "25") (term "0,0"))
                           (rule "applyEq" (formula "23") (term "0") (ifseqformula "32"))
                           (rule "inEqSimp_homoInEq0" (formula "23"))
                           (rule "polySimp_pullOutFactor1" (formula "23") (term "0"))
                           (rule "add_literals" (formula "23") (term "1,0"))
                           (rule "times_zero_1" (formula "23") (term "0"))
                           (rule "qeq_literals" (formula "23"))
                           (rule "true_left" (formula "23"))
                           (rule "applyEq" (formula "26") (term "0") (ifseqformula "29"))
                           (rule "inEqSimp_homoInEq0" (formula "26"))
                           (rule "polySimp_mulLiterals" (formula "26") (term "1,0"))
                           (rule "polySimp_pullOutFactor0" (formula "26") (term "0"))
                           (rule "add_literals" (formula "26") (term "1,0"))
                           (rule "times_zero_1" (formula "26") (term "0"))
                           (rule "qeq_literals" (formula "26"))
                           (rule "true_left" (formula "26"))
                           (rule "polySimp_sepPosMonomial" (formula "29"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "26"))
                           (rule "polySimp_mulLiterals" (formula "26") (term "0"))
                           (rule "polySimp_elimOne" (formula "26") (term "0"))
                           (rule "inEqSimp_contradEq7" (formula "32") (ifseqformula "26"))
                           (rule "times_zero_1" (formula "32") (term "1,0,0"))
                           (rule "add_zero_right" (formula "32") (term "0,0"))
                           (rule "leq_literals" (formula "32") (term "0"))
                            (builtin "One Step Simplification" (formula "32"))
                           (rule "false_right" (formula "32"))
                           (rule "inEqSimp_subsumption1" (formula "22") (ifseqformula "26"))
                           (rule "leq_literals" (formula "22") (term "0"))
                            (builtin "One Step Simplification" (formula "22"))
                           (rule "true_left" (formula "22"))
                           (rule "polySimp_critPair" (formula "15") (ifseqformula "14"))
                           (rule "polySimp_mulComm0" (formula "15") (term "1,1,1,0"))
                           (rule "polySimp_mulAssoc" (formula "15") (term "0,1,0,0"))
                           (rule "polySimp_mulComm0" (formula "15") (term "0,0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "15") (term "0,1,0,0"))
                           (rule "polySimp_elimOne" (formula "15") (term "0,1,0,0"))
                           (rule "polySimp_rightDist" (formula "15") (term "1,0"))
                           (rule "polySimp_mulComm1" (formula "15") (term "1,1,0"))
                           (rule "polySimp_mulComm0" (formula "15") (term "0,1,0"))
                           (rule "polySimp_mulComm1" (formula "15") (term "0,1,1,0"))
                           (rule "polySimp_rightDist" (formula "15") (term "0,0"))
                           (rule "polySimp_mulComm1" (formula "15") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "15") (term "0,1,0,0"))
                           (rule "polySimp_mulAssoc" (formula "15") (term "0,0,0"))
                           (rule "polySimp_addAssoc" (formula "15") (term "0"))
                           (rule "polySimp_addComm1" (formula "15") (term "0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "15") (term "0"))
                           (rule "add_literals" (formula "15") (term "1,1,0"))
                           (rule "times_zero_1" (formula "15") (term "1,0"))
                           (rule "add_zero_right" (formula "15") (term "0"))
                           (rule "polySimp_addComm0" (formula "15") (term "0"))
                           (rule "apply_eq_monomials" (formula "15") (term "1,0") (ifseqformula "12"))
                           (rule "polySimp_rightDist" (formula "15") (term "0,1,0"))
                           (rule "polySimp_mulComm1" (formula "15") (term "1,0,1,0"))
                           (rule "polySimp_mulComm1" (formula "15") (term "0,1,0,1,0"))
                           (rule "polySimp_pullOutFactor2b" (formula "15") (term "1,0"))
                           (rule "add_literals" (formula "15") (term "1,1,1,0"))
                           (rule "times_zero_1" (formula "15") (term "1,1,0"))
                           (rule "add_zero_right" (formula "15") (term "1,0"))
                           (rule "polySimp_mulAssoc" (formula "15") (term "1,0"))
                           (rule "polySimp_pullOutFactor1" (formula "15") (term "0"))
                           (rule "add_literals" (formula "15") (term "1,0"))
                           (rule "times_zero_1" (formula "15") (term "0"))
                            (builtin "One Step Simplification" (formula "15"))
                           (rule "true_left" (formula "15"))
                           (rule "polySimp_critPair" (formula "29") (ifseqformula "27"))
                           (rule "polySimp_mulComm0" (formula "29") (term "1,1,1,0"))
                           (rule "polySimp_mulAssoc" (formula "29") (term "0,1,0,0"))
                           (rule "polySimp_mulComm0" (formula "29") (term "0,0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "29") (term "0,1,0,0"))
                           (rule "polySimp_elimOne" (formula "29") (term "0,1,0,0"))
                           (rule "polySimp_rightDist" (formula "29") (term "1,0"))
                           (rule "polySimp_mulComm1" (formula "29") (term "1,1,0"))
                           (rule "polySimp_mulComm0" (formula "29") (term "0,1,0"))
                           (rule "polySimp_rightDist" (formula "29") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "29") (term "0,0,0"))
                           (rule "polySimp_mulComm1" (formula "29") (term "1,0,0"))
                           (rule "polySimp_addAssoc" (formula "29") (term "0"))
                           (rule "polySimp_addComm1" (formula "29") (term "0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "29") (term "0"))
                           (rule "add_literals" (formula "29") (term "1,1,0"))
                           (rule "times_zero_1" (formula "29") (term "1,0"))
                           (rule "add_zero_right" (formula "29") (term "0"))
                           (rule "polySimp_addComm0" (formula "29") (term "0"))
                           (rule "applyEq" (formula "29") (term "1,0") (ifseqformula "28"))
                           (rule "polySimp_pullOutFactor1" (formula "29") (term "0"))
                           (rule "add_literals" (formula "29") (term "1,0"))
                           (rule "times_zero_1" (formula "29") (term "0"))
                            (builtin "One Step Simplification" (formula "29"))
                           (rule "true_left" (formula "29"))
                           (rule "polySimp_critPair" (formula "29") (ifseqformula "28"))
                           (rule "polySimp_mulComm0" (formula "29") (term "1,1,1,0"))
                           (rule "polySimp_mulAssoc" (formula "29") (term "0,1,0,0"))
                           (rule "polySimp_mulComm0" (formula "29") (term "0,0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "29") (term "0,1,0,0"))
                           (rule "polySimp_elimOne" (formula "29") (term "0,1,0,0"))
                           (rule "polySimp_rightDist" (formula "29") (term "1,0"))
                           (rule "polySimp_mulComm1" (formula "29") (term "1,1,0"))
                           (rule "polySimp_mulComm0" (formula "29") (term "0,1,0"))
                           (rule "polySimp_mulComm1" (formula "29") (term "0,1,1,0"))
                           (rule "polySimp_rightDist" (formula "29") (term "0,0"))
                           (rule "polySimp_mulComm1" (formula "29") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "29") (term "0,1,0,0"))
                           (rule "polySimp_mulAssoc" (formula "29") (term "0,0,0"))
                           (rule "polySimp_addAssoc" (formula "29") (term "0"))
                           (rule "polySimp_addComm1" (formula "29") (term "0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "29") (term "0"))
                           (rule "add_literals" (formula "29") (term "1,1,0"))
                           (rule "times_zero_1" (formula "29") (term "1,0"))
                           (rule "add_zero_right" (formula "29") (term "0"))
                           (rule "polySimp_addComm0" (formula "29") (term "0"))
                           (rule "apply_eq_monomials" (formula "29") (term "1,0") (ifseqformula "27"))
                           (rule "polySimp_rightDist" (formula "29") (term "0,1,0"))
                           (rule "polySimp_mulComm1" (formula "29") (term "1,0,1,0"))
                           (rule "polySimp_mulComm1" (formula "29") (term "0,1,0,1,0"))
                           (rule "polySimp_pullOutFactor2b" (formula "29") (term "1,0"))
                           (rule "add_literals" (formula "29") (term "1,1,1,0"))
                           (rule "times_zero_1" (formula "29") (term "1,1,0"))
                           (rule "add_zero_right" (formula "29") (term "1,0"))
                           (rule "polySimp_mulAssoc" (formula "29") (term "1,0"))
                           (rule "polySimp_pullOutFactor1" (formula "29") (term "0"))
                           (rule "add_literals" (formula "29") (term "1,0"))
                           (rule "times_zero_1" (formula "29") (term "0"))
                            (builtin "One Step Simplification" (formula "29"))
                           (rule "true_left" (formula "29"))
                           (rule "polySimp_critPair" (formula "28") (ifseqformula "14"))
                           (rule "polySimp_mulComm0" (formula "28") (term "1,1,1,0"))
                           (rule "polySimp_mulAssoc" (formula "28") (term "0,1,0,0"))
                           (rule "polySimp_mulComm0" (formula "28") (term "0,0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "28") (term "0,1,0,0"))
                           (rule "polySimp_elimOne" (formula "28") (term "0,1,0,0"))
                           (rule "polySimp_rightDist" (formula "28") (term "1,0"))
                           (rule "polySimp_mulComm1" (formula "28") (term "1,1,0"))
                           (rule "polySimp_mulAssoc" (formula "28") (term "0,1,0"))
                           (rule "polySimp_mulAssoc" (formula "28") (term "0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "28") (term "0,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "28") (term "0,0"))
                           (rule "polySimp_mulComm1" (formula "28") (term "1,0,0"))
                           (rule "polySimp_mulAssoc" (formula "28") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "28") (term "0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "28") (term "0"))
                           (rule "polySimp_addComm1" (formula "28") (term "0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "28") (term "0"))
                           (rule "add_literals" (formula "28") (term "1,1,0"))
                           (rule "times_zero_1" (formula "28") (term "1,0"))
                           (rule "add_zero_right" (formula "28") (term "0"))
                           (rule "polySimp_addComm0" (formula "28") (term "0"))
                           (rule "polySimp_sepPosMonomial" (formula "28"))
                           (rule "polySimp_mulLiterals" (formula "28") (term "1"))
                           (rule "polySimp_elimOne" (formula "28") (term "1"))
                           (rule "allLeft" (formula "31") (inst "t=x_0"))
                           (rule "applyEq" (formula "31") (term "0,0,1") (ifseqformula "8"))
                           (rule "polySimp_mulComm0" (formula "31") (term "0,1"))
                           (rule "applyEq" (formula "31") (term "0,0,0,1,0") (ifseqformula "13"))
                           (rule "polySimp_mulComm0" (formula "31") (term "0,0,1,0"))
                           (rule "replace_known_left" (formula "31") (term "0,1,0") (ifseqformula "15"))
                            (builtin "One Step Simplification" (formula "31"))
                           (rule "inEqSimp_contradEq3" (formula "31") (term "1") (ifseqformula "2"))
                           (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0,1"))
                           (rule "add_literals" (formula "31") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "31") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "31") (term "0,0,1"))
                           (rule "qeq_literals" (formula "31") (term "0,1"))
                            (builtin "One Step Simplification" (formula "31"))
                           (rule "inEqSimp_contradInEq1" (formula "31") (term "0") (ifseqformula "3"))
                           (rule "qeq_literals" (formula "31") (term "0,0"))
                            (builtin "One Step Simplification" (formula "31"))
                           (rule "notLeft" (formula "31"))
                           (rule "allLeft" (formula "31") (inst "t=result_gcdHelp"))
                           (rule "applyEq" (formula "31") (term "0,0,0,1,0") (ifseqformula "23"))
                           (rule "polySimp_mulComm0" (formula "31") (term "0,0,1,0"))
                           (rule "replace_known_left" (formula "31") (term "0,1,0") (ifseqformula "30"))
                            (builtin "One Step Simplification" (formula "31"))
                           (rule "applyEq" (formula "31") (term "0,0,0,1,0") (ifseqformula "26"))
                           (rule "polySimp_mulComm0" (formula "31") (term "0,0,1,0"))
                           (rule "replace_known_left" (formula "31") (term "0,1,0") (ifseqformula "27"))
                            (builtin "One Step Simplification" (formula "31"))
                           (rule "inEqSimp_contradInEq1" (formula "31") (term "0") (ifseqformula "25"))
                           (rule "qeq_literals" (formula "31") (term "0,0"))
                            (builtin "One Step Simplification" (formula "31"))
                           (rule "polyDiv_pullOut" (formula "24") (term "0") (inst "polyDivCoeff=quotient_5"))
                           (rule "polySimp_mulComm1" (formula "24") (term "1,0,0,2,0"))
                           (rule "polySimp_mulComm0" (formula "24") (term "0,1,0,0,2,0"))
                           (rule "polySimp_addComm0" (formula "24") (term "2,0"))
                           (rule "applyEq" (formula "24") (term "0,1,0,1,2,0") (ifseqformula "27"))
                           (rule "polySimp_mulLiterals" (formula "24") (term "1,0,1,2,0"))
                           (rule "polySimp_pullOutFactor0" (formula "24") (term "0,1,2,0"))
                           (rule "add_literals" (formula "24") (term "1,0,1,2,0"))
                           (rule "times_zero_1" (formula "24") (term "0,1,2,0"))
                           (rule "inEqSimp_contradEq7" (formula "24") (term "0,0") (ifseqformula "25"))
                           (rule "times_zero_1" (formula "24") (term "1,0,0,0,0"))
                           (rule "add_zero_right" (formula "24") (term "0,0,0,0"))
                           (rule "leq_literals" (formula "24") (term "0,0,0"))
                            (builtin "One Step Simplification" (formula "24"))
                           (rule "polySimp_homoEq" (formula "24"))
                           (rule "polySimp_mulComm0" (formula "24") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "24") (term "1,0"))
                           (rule "polySimp_mulComm0" (formula "24") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "24") (term "0"))
                           (rule "polySimp_pullOutFactor1" (formula "24") (term "0,0"))
                           (rule "add_literals" (formula "24") (term "1,0,0"))
                           (rule "times_zero_1" (formula "24") (term "0,0"))
                           (rule "add_zero_left" (formula "24") (term "0"))
                           (rule "polySimp_invertEq" (formula "24"))
                           (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                           (rule "times_zero_2" (formula "24") (term "1"))
                           (rule "polySimp_elimOne" (formula "24") (term "0"))
                           (rule "polyDiv_zero" (formula "24") (term "0"))
                            (builtin "One Step Simplification" (formula "24"))
                           (rule "div_literals" (formula "24") (term "0,1"))
                           (rule "inEqSimp_contradEq7" (formula "24") (term "0,0") (ifseqformula "25"))
                           (rule "times_zero_1" (formula "24") (term "1,0,0,0,0"))
                           (rule "add_zero_right" (formula "24") (term "0,0,0,0"))
                           (rule "leq_literals" (formula "24") (term "0,0,0"))
                            (builtin "One Step Simplification" (formula "24"))
                           (rule "true_left" (formula "24"))
                           (rule "polyDiv_pullOut" (formula "22") (term "0") (inst "polyDivCoeff=quotient_0"))
                           (rule "polySimp_mulComm1" (formula "22") (term "1,0,0,2,0"))
                           (rule "polySimp_mulComm0" (formula "22") (term "0,1,0,0,2,0"))
                           (rule "polySimp_addComm0" (formula "22") (term "2,0"))
                           (rule "applyEq" (formula "22") (term "0,1,0,1,2,0") (ifseqformula "29"))
                           (rule "polySimp_pullOutFactor1" (formula "22") (term "0,1,2,0"))
                           (rule "add_literals" (formula "22") (term "1,0,1,2,0"))
                           (rule "times_zero_1" (formula "22") (term "0,1,2,0"))
                           (rule "inEqSimp_contradEq7" (formula "22") (term "0,0") (ifseqformula "24"))
                           (rule "times_zero_1" (formula "22") (term "1,0,0,0,0"))
                           (rule "add_zero_right" (formula "22") (term "0,0,0,0"))
                           (rule "leq_literals" (formula "22") (term "0,0,0"))
                            (builtin "One Step Simplification" (formula "22"))
                           (rule "polySimp_homoEq" (formula "22"))
                           (rule "polySimp_mulComm0" (formula "22") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "22") (term "1,0"))
                           (rule "polySimp_mulComm0" (formula "22") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "22") (term "0"))
                           (rule "polySimp_pullOutFactor1" (formula "22") (term "0,0"))
                           (rule "add_literals" (formula "22") (term "1,0,0"))
                           (rule "times_zero_1" (formula "22") (term "0,0"))
                           (rule "add_zero_left" (formula "22") (term "0"))
                           (rule "polySimp_invertEq" (formula "22"))
                           (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                           (rule "times_zero_2" (formula "22") (term "1"))
                           (rule "polySimp_elimOne" (formula "22") (term "0"))
                           (rule "polyDiv_zero" (formula "22") (term "0"))
                            (builtin "One Step Simplification" (formula "22"))
                           (rule "div_literals" (formula "22") (term "0,1"))
                           (rule "inEqSimp_contradEq7" (formula "22") (term "0,0") (ifseqformula "24"))
                           (rule "times_zero_1" (formula "22") (term "1,0,0,0,0"))
                           (rule "add_zero_right" (formula "22") (term "0,0,0,0"))
                           (rule "leq_literals" (formula "22") (term "0,0,0"))
                            (builtin "One Step Simplification" (formula "22"))
                           (rule "true_left" (formula "22"))
                           (rule "jdiv_axiom" (formula "31") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "0,0,2,1"))
                           (rule "eqSymm" (formula "1"))
                           (rule "polySimp_elimOne" (formula "1") (term "0,0,2,0"))
                           (rule "inEqSimp_invertInEq1" (formula "1") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0"))
                           (rule "times_zero_2" (formula "1") (term "1,0,0"))
                           (rule "polySimp_elimOne" (formula "1") (term "0,0,0"))
                           (rule "inEqSimp_subsumption0" (formula "1") (term "0,0") (ifseqformula "17"))
                           (rule "leq_literals" (formula "1") (term "0,0,0"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "eqSymm" (formula "1"))
                           (rule "applyEq" (formula "32") (term "0,0") (ifseqformula "1"))
                           (rule "polyDiv_pullOut" (formula "32") (term "0,0") (inst "polyDivCoeff=quotient_4"))
                           (rule "polySimp_mulComm1" (formula "32") (term "1,0,0,2,0,0"))
                           (rule "polySimp_mulComm0" (formula "32") (term "0,1,0,0,2,0,0"))
                           (rule "polySimp_addComm0" (formula "32") (term "2,0,0"))
                           (rule "applyEq" (formula "32") (term "0,1,0,1,2,0,0") (ifseqformula "13"))
                           (rule "polySimp_mulLiterals" (formula "32") (term "1,0,1,2,0,0"))
                           (rule "polySimp_pullOutFactor0" (formula "32") (term "0,1,2,0,0"))
                           (rule "add_literals" (formula "32") (term "1,0,1,2,0,0"))
                           (rule "times_zero_1" (formula "32") (term "0,1,2,0,0"))
                           (rule "inEqSimp_contradEq7" (formula "32") (term "0,0,0") (ifseqformula "4"))
                           (rule "times_zero_1" (formula "32") (term "1,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "32") (term "0,0,0,0,0"))
                           (rule "leq_literals" (formula "32") (term "0,0,0,0"))
                            (builtin "One Step Simplification" (formula "32"))
                           (rule "polySimp_mulComm0" (formula "32") (term "0"))
                           (rule "polySimp_rightDist" (formula "32") (term "0"))
                           (rule "polySimp_homoEq" (formula "32"))
                           (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                           (rule "polySimp_mulComm0" (formula "32") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "32") (term "0"))
                           (rule "applyEq" (formula "32") (term "0,1,0,0") (ifseqformula "13"))
                           (rule "polySimp_mulLiterals" (formula "32") (term "1,0,0"))
                           (rule "polySimp_pullOutFactor0" (formula "32") (term "0,0"))
                           (rule "add_literals" (formula "32") (term "1,0,0"))
                           (rule "times_zero_1" (formula "32") (term "0,0"))
                           (rule "add_zero_left" (formula "32") (term "0"))
                           (rule "polySimp_invertEq" (formula "32"))
                           (rule "polySimp_mulLiterals" (formula "32") (term "0"))
                           (rule "times_zero_2" (formula "32") (term "1"))
                           (rule "polySimp_elimOne" (formula "32") (term "0"))
                           (rule "polyDiv_zero" (formula "32") (term "0,0"))
                           (rule "div_literals" (formula "32") (term "1,0,0"))
                           (rule "inEqSimp_contradEq7" (formula "32") (term "0,0,0") (ifseqformula "4"))
                           (rule "times_zero_1" (formula "32") (term "1,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "32") (term "0,0,0,0,0"))
                           (rule "leq_literals" (formula "32") (term "0,0,0,0"))
                            (builtin "One Step Simplification" (formula "32"))
                           (rule "times_zero_2" (formula "32") (term "0"))
                            (builtin "One Step Simplification" (formula "32"))
                           (rule "closeTrue" (formula "32"))
                        )
                     )
                     (branch "result_gcdHelp >= 0 FALSE"
                        (rule "replace_known_right" (formula "7") (term "0,0") (ifseqformula "30"))
                         (builtin "One Step Simplification" (formula "7"))
                        (rule "eqSymm" (formula "7"))
                        (rule "replace_known_right" (formula "25") (term "0,1,1") (ifseqformula "30"))
                         (builtin "One Step Simplification" (formula "25"))
                        (rule "inEqSimp_geqRight" (formula "30"))
                        (rule "times_zero_1" (formula "1") (term "1,0,0"))
                        (rule "add_zero_right" (formula "1") (term "0,0"))
                        (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "8"))
                        (rule "polySimp_mulComm1" (formula "31") (term "0"))
                        (rule "polySimp_homoEq" (formula "31"))
                        (rule "polySimp_mulLiterals" (formula "31") (term "1,0"))
                        (rule "polySimp_elimOne" (formula "31") (term "1,0"))
                        (rule "polySimp_mulComm0" (formula "31") (term "1,0"))
                        (rule "polySimp_sepPosMonomial" (formula "31"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                        (rule "mul_literals" (formula "1") (term "1"))
                        (rule "inEqSimp_contradEq3" (formula "24") (term "0") (ifseqformula "1"))
                        (rule "times_zero_1" (formula "24") (term "1,0,0,0"))
                        (rule "add_zero_right" (formula "24") (term "0,0,0"))
                        (rule "qeq_literals" (formula "24") (term "0,0"))
                         (builtin "One Step Simplification" (formula "24"))
                        (rule "andLeft" (formula "24"))
                        (rule "andLeft" (formula "24"))
                        (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "25"))
                        (rule "polySimp_mulComm0" (formula "31") (term "0"))
                        (rule "applyEq" (formula "26") (term "0") (ifseqformula "31"))
                        (rule "inEqSimp_homoInEq1" (formula "26"))
                        (rule "polySimp_addComm1" (formula "26") (term "0"))
                        (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0"))
                        (rule "add_literals" (formula "26") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "26") (term "1,0,0"))
                        (rule "add_zero_right" (formula "26") (term "0,0"))
                        (rule "applyEq" (formula "24") (term "0") (ifseqformula "31"))
                        (rule "inEqSimp_homoInEq0" (formula "24"))
                        (rule "polySimp_pullOutFactor1" (formula "24") (term "0"))
                        (rule "add_literals" (formula "24") (term "1,0"))
                        (rule "times_zero_1" (formula "24") (term "0"))
                        (rule "qeq_literals" (formula "24"))
                        (rule "true_left" (formula "24"))
                        (rule "applyEq" (formula "26") (term "1") (ifseqformula "24"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "25"))
                        (rule "mul_literals" (formula "25") (term "1"))
                        (rule "inEqSimp_contradEq3" (formula "26") (term "0") (ifseqformula "1"))
                        (rule "times_zero_1" (formula "26") (term "1,0,0,0"))
                        (rule "add_zero_right" (formula "26") (term "0,0,0"))
                        (rule "qeq_literals" (formula "26") (term "0,0"))
                         (builtin "One Step Simplification" (formula "26"))
                        (rule "andLeft" (formula "26"))
                        (rule "andLeft" (formula "26"))
                        (rule "applyEq" (formula "30") (term "0,0") (ifseqformula "26"))
                        (rule "polySimp_mulComm0" (formula "30") (term "0"))
                        (rule "applyEq" (formula "27") (term "0") (ifseqformula "30"))
                        (rule "inEqSimp_homoInEq0" (formula "27"))
                        (rule "polySimp_mulLiterals" (formula "27") (term "1,0"))
                        (rule "polySimp_pullOutFactor0" (formula "27") (term "0"))
                        (rule "add_literals" (formula "27") (term "1,0"))
                        (rule "times_zero_1" (formula "27") (term "0"))
                        (rule "qeq_literals" (formula "27"))
                        (rule "true_left" (formula "27"))
                        (rule "applyEq" (formula "27") (term "0") (ifseqformula "29"))
                        (rule "inEqSimp_homoInEq1" (formula "27"))
                        (rule "polySimp_mulLiterals" (formula "27") (term "1,0"))
                        (rule "polySimp_elimOne" (formula "27") (term "1,0"))
                        (rule "polySimp_addComm1" (formula "27") (term "0"))
                        (rule "polySimp_pullOutFactor2b" (formula "27") (term "0,0"))
                        (rule "add_literals" (formula "27") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "27") (term "1,0,0"))
                        (rule "add_zero_right" (formula "27") (term "0,0"))
                        (rule "applyEq" (formula "28") (term "1") (ifseqformula "26"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "27"))
                        (rule "mul_literals" (formula "27") (term "1"))
                        (rule "inEqSimp_strengthen0" (formula "6") (ifseqformula "31"))
                        (rule "inEqSimp_contradEq3" (formula "31") (ifseqformula "6"))
                        (rule "polySimp_mulAssoc" (formula "31") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "31") (term "0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "31") (term "1,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "31") (term "0,0"))
                        (rule "add_literals" (formula "31") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "31") (term "1,0,0"))
                        (rule "add_zero_right" (formula "31") (term "0,0"))
                        (rule "qeq_literals" (formula "31") (term "0"))
                         (builtin "One Step Simplification" (formula "31"))
                        (rule "false_right" (formula "31"))
                        (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "6"))
                        (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0"))
                        (rule "polySimp_elimOne" (formula "7") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "7") (term "0"))
                        (rule "polySimp_rightDist" (formula "7") (term "0,0,0"))
                        (rule "mul_literals" (formula "7") (term "0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "7") (term "1,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "7") (term "0,0,0"))
                        (rule "add_literals" (formula "7") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0"))
                        (rule "add_literals" (formula "7") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "7") (term "1,0,0"))
                        (rule "add_zero_right" (formula "7") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                        (rule "mul_literals" (formula "7") (term "1"))
                        (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "7"))
                        (rule "leq_literals" (formula "12") (term "0"))
                         (builtin "One Step Simplification" (formula "12"))
                        (rule "true_left" (formula "12"))
                        (rule "polyDiv_pullOut" (formula "15") (term "0") (inst "polyDivCoeff=quotient_3"))
                        (rule "polySimp_mulComm1" (formula "15") (term "1,0,0,2,0"))
                        (rule "polySimp_mulComm0" (formula "15") (term "0,1,0,0,2,0"))
                        (rule "polySimp_addComm0" (formula "15") (term "2,0"))
                        (rule "applyEq" (formula "15") (term "0,1,0,1,2,0") (ifseqformula "17"))
                        (rule "polySimp_pullOutFactor1" (formula "15") (term "0,1,2,0"))
                        (rule "add_literals" (formula "15") (term "1,0,1,2,0"))
                        (rule "times_zero_1" (formula "15") (term "0,1,2,0"))
                        (rule "inEqSimp_contradEq7" (formula "15") (term "0,0") (ifseqformula "7"))
                        (rule "times_zero_1" (formula "15") (term "1,0,0,0,0"))
                        (rule "add_zero_right" (formula "15") (term "0,0,0,0"))
                        (rule "leq_literals" (formula "15") (term "0,0,0"))
                         (builtin "One Step Simplification" (formula "15"))
                        (rule "polySimp_homoEq" (formula "15"))
                        (rule "polySimp_mulComm0" (formula "15") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "15") (term "1,0"))
                        (rule "polySimp_mulComm0" (formula "15") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "15") (term "0"))
                        (rule "polySimp_pullOutFactor1" (formula "15") (term "0,0"))
                        (rule "add_literals" (formula "15") (term "1,0,0"))
                        (rule "times_zero_1" (formula "15") (term "0,0"))
                        (rule "add_zero_left" (formula "15") (term "0"))
                        (rule "polySimp_invertEq" (formula "15"))
                        (rule "times_zero_2" (formula "15") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                        (rule "polySimp_elimOne" (formula "15") (term "0"))
                        (rule "polyDiv_zero" (formula "15") (term "0"))
                         (builtin "One Step Simplification" (formula "15"))
                        (rule "div_literals" (formula "15") (term "0,1"))
                        (rule "inEqSimp_contradEq7" (formula "15") (term "0,0") (ifseqformula "7"))
                        (rule "times_zero_1" (formula "15") (term "1,0,0,0,0"))
                        (rule "add_zero_right" (formula "15") (term "0,0,0,0"))
                        (rule "leq_literals" (formula "15") (term "0,0,0"))
                         (builtin "One Step Simplification" (formula "15"))
                        (rule "true_left" (formula "15"))
                        (rule "polyDiv_pullOut" (formula "12") (term "0") (inst "polyDivCoeff=quotient_4"))
                        (rule "polySimp_mulComm1" (formula "12") (term "1,0,0,2,0"))
                        (rule "polySimp_mulComm0" (formula "12") (term "0,1,0,0,2,0"))
                        (rule "polySimp_addComm0" (formula "12") (term "2,0"))
                        (rule "applyEq" (formula "12") (term "0,1,0,1,2,0") (ifseqformula "14"))
                        (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,2,0"))
                        (rule "polySimp_pullOutFactor0" (formula "12") (term "0,1,2,0"))
                        (rule "add_literals" (formula "12") (term "1,0,1,2,0"))
                        (rule "times_zero_1" (formula "12") (term "0,1,2,0"))
                        (rule "inEqSimp_contradEq7" (formula "12") (term "0,0") (ifseqformula "7"))
                        (rule "times_zero_1" (formula "12") (term "1,0,0,0,0"))
                        (rule "add_zero_right" (formula "12") (term "0,0,0,0"))
                        (rule "leq_literals" (formula "12") (term "0,0,0"))
                         (builtin "One Step Simplification" (formula "12"))
                        (rule "polySimp_homoEq" (formula "12"))
                        (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                        (rule "polySimp_mulComm0" (formula "12") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "12") (term "0"))
                        (rule "polySimp_pullOutFactor1" (formula "12") (term "0,0"))
                        (rule "add_literals" (formula "12") (term "1,0,0"))
                        (rule "times_zero_1" (formula "12") (term "0,0"))
                        (rule "add_zero_left" (formula "12") (term "0"))
                        (rule "polySimp_invertEq" (formula "12"))
                        (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                        (rule "times_zero_2" (formula "12") (term "1"))
                        (rule "polySimp_elimOne" (formula "12") (term "0"))
                        (rule "polyDiv_zero" (formula "12") (term "0"))
                         (builtin "One Step Simplification" (formula "12"))
                        (rule "div_literals" (formula "12") (term "0,1"))
                        (rule "inEqSimp_contradEq7" (formula "12") (term "0,0") (ifseqformula "7"))
                        (rule "times_zero_1" (formula "12") (term "1,0,0,0,0"))
                        (rule "add_zero_right" (formula "12") (term "0,0,0,0"))
                        (rule "leq_literals" (formula "12") (term "0,0,0"))
                         (builtin "One Step Simplification" (formula "12"))
                        (rule "true_left" (formula "12"))
                        (rule "polySimp_critPair" (formula "15") (ifseqformula "13"))
                        (rule "polySimp_mulComm0" (formula "15") (term "1,1,1,0"))
                        (rule "polySimp_mulAssoc" (formula "15") (term "0,1,0,0"))
                        (rule "polySimp_mulComm0" (formula "15") (term "0,0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "15") (term "0,1,0,0"))
                        (rule "polySimp_elimOne" (formula "15") (term "0,1,0,0"))
                        (rule "polySimp_rightDist" (formula "15") (term "1,0"))
                        (rule "polySimp_mulComm1" (formula "15") (term "1,1,0"))
                        (rule "polySimp_mulComm0" (formula "15") (term "0,1,0"))
                        (rule "polySimp_rightDist" (formula "15") (term "0,0"))
                        (rule "polySimp_mulComm0" (formula "15") (term "0,0,0"))
                        (rule "polySimp_mulComm1" (formula "15") (term "1,0,0"))
                        (rule "polySimp_addAssoc" (formula "15") (term "0"))
                        (rule "polySimp_addComm1" (formula "15") (term "0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "15") (term "0"))
                        (rule "add_literals" (formula "15") (term "1,1,0"))
                        (rule "times_zero_1" (formula "15") (term "1,0"))
                        (rule "add_zero_right" (formula "15") (term "0"))
                        (rule "polySimp_addComm0" (formula "15") (term "0"))
                        (rule "polySimp_sepPosMonomial" (formula "15"))
                        (rule "polyDiv_pullOut" (formula "23") (term "0") (inst "polyDivCoeff=quotient_0"))
                        (rule "polySimp_mulComm1" (formula "23") (term "1,0,0,2,0"))
                        (rule "polySimp_mulComm0" (formula "23") (term "0,1,0,0,2,0"))
                        (rule "polySimp_addComm0" (formula "23") (term "2,0"))
                        (rule "applyEq" (formula "23") (term "0,1,0,1,2,0") (ifseqformula "28"))
                        (rule "polySimp_pullOutFactor1" (formula "23") (term "0,1,2,0"))
                        (rule "add_literals" (formula "23") (term "1,0,1,2,0"))
                        (rule "times_zero_1" (formula "23") (term "0,1,2,0"))
                        (rule "inEqSimp_contradEq3" (formula "23") (term "0,0") (ifseqformula "1"))
                        (rule "times_zero_1" (formula "23") (term "1,0,0,0,0"))
                        (rule "add_zero_right" (formula "23") (term "0,0,0,0"))
                        (rule "qeq_literals" (formula "23") (term "0,0,0"))
                         (builtin "One Step Simplification" (formula "23"))
                        (rule "polySimp_homoEq" (formula "23"))
                        (rule "polySimp_mulComm0" (formula "23") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "23") (term "1,0"))
                        (rule "polySimp_mulComm0" (formula "23") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "23") (term "0"))
                        (rule "polySimp_pullOutFactor1" (formula "23") (term "0,0"))
                        (rule "add_literals" (formula "23") (term "1,0,0"))
                        (rule "times_zero_1" (formula "23") (term "0,0"))
                        (rule "add_zero_left" (formula "23") (term "0"))
                        (rule "polySimp_invertEq" (formula "23"))
                        (rule "times_zero_2" (formula "23") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                        (rule "polySimp_elimOne" (formula "23") (term "0"))
                        (rule "polyDiv_zero" (formula "23") (term "0"))
                         (builtin "One Step Simplification" (formula "23"))
                        (rule "div_literals" (formula "23") (term "0,1"))
                        (rule "inEqSimp_contradEq3" (formula "23") (term "0,0") (ifseqformula "1"))
                        (rule "times_zero_1" (formula "23") (term "1,0,0,0,0"))
                        (rule "add_zero_right" (formula "23") (term "0,0,0,0"))
                        (rule "qeq_literals" (formula "23") (term "0,0,0"))
                         (builtin "One Step Simplification" (formula "23"))
                        (rule "true_left" (formula "23"))
                        (rule "polySimp_critPair" (formula "27") (ifseqformula "26"))
                        (rule "polySimp_mulComm0" (formula "27") (term "1,1,1,0"))
                        (rule "polySimp_mulAssoc" (formula "27") (term "0,1,0,0"))
                        (rule "polySimp_mulComm0" (formula "27") (term "0,0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "27") (term "0,1,0,0"))
                        (rule "polySimp_elimOne" (formula "27") (term "0,1,0,0"))
                        (rule "polySimp_rightDist" (formula "27") (term "1,0"))
                        (rule "polySimp_mulComm0" (formula "27") (term "0,1,0"))
                        (rule "polySimp_mulComm1" (formula "27") (term "1,1,0"))
                        (rule "polySimp_rightDist" (formula "27") (term "0,0"))
                        (rule "polySimp_mulComm1" (formula "27") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "27") (term "0,0,0"))
                        (rule "polySimp_addAssoc" (formula "27") (term "0"))
                        (rule "polySimp_addComm1" (formula "27") (term "0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "27") (term "0"))
                        (rule "add_literals" (formula "27") (term "1,1,0"))
                        (rule "times_zero_1" (formula "27") (term "1,0"))
                        (rule "add_zero_right" (formula "27") (term "0"))
                        (rule "polySimp_addComm0" (formula "27") (term "0"))
                        (rule "polySimp_sepPosMonomial" (formula "27"))
                        (rule "polyDiv_pullOut" (formula "24") (term "0") (inst "polyDivCoeff=quotient_5"))
                        (rule "polySimp_mulComm1" (formula "24") (term "1,0,0,2,0"))
                        (rule "polySimp_mulComm0" (formula "24") (term "0,1,0,0,2,0"))
                        (rule "polySimp_addComm0" (formula "24") (term "2,0"))
                        (rule "applyEq" (formula "24") (term "0,1,0,1,2,0") (ifseqformula "26"))
                        (rule "polySimp_mulLiterals" (formula "24") (term "1,0,1,2,0"))
                        (rule "polySimp_pullOutFactor0" (formula "24") (term "0,1,2,0"))
                        (rule "add_literals" (formula "24") (term "1,0,1,2,0"))
                        (rule "times_zero_1" (formula "24") (term "0,1,2,0"))
                        (rule "inEqSimp_contradEq3" (formula "24") (term "0,0") (ifseqformula "1"))
                        (rule "times_zero_1" (formula "24") (term "1,0,0,0,0"))
                        (rule "add_zero_right" (formula "24") (term "0,0,0,0"))
                        (rule "qeq_literals" (formula "24") (term "0,0,0"))
                         (builtin "One Step Simplification" (formula "24"))
                        (rule "polySimp_homoEq" (formula "24"))
                        (rule "polySimp_mulComm0" (formula "24") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "24") (term "1,0"))
                        (rule "polySimp_mulComm0" (formula "24") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "24") (term "0"))
                        (rule "polySimp_pullOutFactor1" (formula "24") (term "0,0"))
                        (rule "add_literals" (formula "24") (term "1,0,0"))
                        (rule "times_zero_1" (formula "24") (term "0,0"))
                        (rule "add_zero_left" (formula "24") (term "0"))
                        (rule "polySimp_invertEq" (formula "24"))
                        (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                        (rule "times_zero_2" (formula "24") (term "1"))
                        (rule "polySimp_elimOne" (formula "24") (term "0"))
                        (rule "polyDiv_zero" (formula "24") (term "0"))
                         (builtin "One Step Simplification" (formula "24"))
                        (rule "div_literals" (formula "24") (term "0,1"))
                        (rule "inEqSimp_contradEq3" (formula "24") (term "0,0") (ifseqformula "1"))
                        (rule "times_zero_1" (formula "24") (term "1,0,0,0,0"))
                        (rule "add_zero_right" (formula "24") (term "0,0,0,0"))
                        (rule "qeq_literals" (formula "24") (term "0,0,0"))
                         (builtin "One Step Simplification" (formula "24"))
                        (rule "true_left" (formula "24"))
                        (rule "polySimp_critPair" (formula "27") (ifseqformula "26"))
                        (rule "polySimp_mulComm0" (formula "27") (term "1,1,1,0"))
                        (rule "polySimp_mulAssoc" (formula "27") (term "0,1,0,0"))
                        (rule "polySimp_mulComm0" (formula "27") (term "0,0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "27") (term "0,1,0,0"))
                        (rule "polySimp_elimOne" (formula "27") (term "0,1,0,0"))
                        (rule "polySimp_rightDist" (formula "27") (term "1,0"))
                        (rule "polySimp_mulComm1" (formula "27") (term "1,1,0"))
                        (rule "polySimp_mulComm0" (formula "27") (term "0,1,0"))
                        (rule "polySimp_mulComm1" (formula "27") (term "0,1,1,0"))
                        (rule "polySimp_rightDist" (formula "27") (term "0,0"))
                        (rule "polySimp_mulComm1" (formula "27") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "27") (term "0,1,0,0"))
                        (rule "polySimp_mulAssoc" (formula "27") (term "0,0,0"))
                        (rule "polySimp_addAssoc" (formula "27") (term "0"))
                        (rule "polySimp_addComm1" (formula "27") (term "0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "27") (term "0"))
                        (rule "add_literals" (formula "27") (term "1,1,0"))
                        (rule "times_zero_1" (formula "27") (term "1,0"))
                        (rule "add_zero_right" (formula "27") (term "0"))
                        (rule "polySimp_addComm0" (formula "27") (term "0"))
                        (rule "apply_eq_monomials" (formula "27") (term "1,0") (ifseqformula "25"))
                        (rule "polySimp_rightDist" (formula "27") (term "0,1,0"))
                        (rule "polySimp_mulComm1" (formula "27") (term "1,0,1,0"))
                        (rule "polySimp_mulComm1" (formula "27") (term "0,1,0,1,0"))
                        (rule "polySimp_pullOutFactor2b" (formula "27") (term "1,0"))
                        (rule "add_literals" (formula "27") (term "1,1,1,0"))
                        (rule "times_zero_1" (formula "27") (term "1,1,0"))
                        (rule "add_zero_right" (formula "27") (term "1,0"))
                        (rule "polySimp_mulAssoc" (formula "27") (term "1,0"))
                        (rule "polySimp_pullOutFactor1" (formula "27") (term "0"))
                        (rule "add_literals" (formula "27") (term "1,0"))
                        (rule "times_zero_1" (formula "27") (term "0"))
                         (builtin "One Step Simplification" (formula "27"))
                        (rule "true_left" (formula "27"))
                        (rule "polySimp_critPair" (formula "26") (ifseqformula "15"))
                        (rule "polySimp_mulComm0" (formula "26") (term "1,1,1,0"))
                        (rule "polySimp_mulAssoc" (formula "26") (term "0,1,0,0"))
                        (rule "polySimp_mulComm0" (formula "26") (term "0,0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "26") (term "0,1,0,0"))
                        (rule "polySimp_elimOne" (formula "26") (term "0,1,0,0"))
                        (rule "polySimp_rightDist" (formula "26") (term "1,0"))
                        (rule "polySimp_mulComm1" (formula "26") (term "1,1,0"))
                        (rule "polySimp_mulAssoc" (formula "26") (term "0,1,0"))
                        (rule "polySimp_mulAssoc" (formula "26") (term "0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "26") (term "0,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "26") (term "0,0"))
                        (rule "polySimp_mulComm1" (formula "26") (term "1,0,0"))
                        (rule "polySimp_mulAssoc" (formula "26") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "26") (term "0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "26") (term "0"))
                        (rule "polySimp_addComm1" (formula "26") (term "0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "26") (term "0"))
                        (rule "add_literals" (formula "26") (term "1,1,0"))
                        (rule "times_zero_1" (formula "26") (term "1,0"))
                        (rule "add_zero_right" (formula "26") (term "0"))
                        (rule "polySimp_addComm0" (formula "26") (term "0"))
                        (rule "polySimp_sepPosMonomial" (formula "26"))
                        (rule "polySimp_mulLiterals" (formula "26") (term "1"))
                        (rule "polySimp_elimOne" (formula "26") (term "1"))
                        (rule "polySimp_critPair" (formula "16") (ifseqformula "15"))
                        (rule "polySimp_mulComm0" (formula "16") (term "1,1,1,0"))
                        (rule "polySimp_mulAssoc" (formula "16") (term "0,1,0,0"))
                        (rule "polySimp_mulComm0" (formula "16") (term "0,0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "16") (term "0,1,0,0"))
                        (rule "polySimp_elimOne" (formula "16") (term "0,1,0,0"))
                        (rule "polySimp_rightDist" (formula "16") (term "1,0"))
                        (rule "polySimp_mulComm1" (formula "16") (term "1,1,0"))
                        (rule "polySimp_mulComm0" (formula "16") (term "0,1,0"))
                        (rule "polySimp_mulComm1" (formula "16") (term "0,1,1,0"))
                        (rule "polySimp_rightDist" (formula "16") (term "0,0"))
                        (rule "polySimp_mulComm1" (formula "16") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "16") (term "0,1,0,0"))
                        (rule "polySimp_mulAssoc" (formula "16") (term "0,0,0"))
                        (rule "polySimp_addAssoc" (formula "16") (term "0"))
                        (rule "polySimp_addComm1" (formula "16") (term "0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "16") (term "0"))
                        (rule "add_literals" (formula "16") (term "1,1,0"))
                        (rule "times_zero_1" (formula "16") (term "1,0"))
                        (rule "add_zero_right" (formula "16") (term "0"))
                        (rule "polySimp_addComm0" (formula "16") (term "0"))
                        (rule "apply_eq_monomials" (formula "16") (term "1,0") (ifseqformula "13"))
                        (rule "polySimp_rightDist" (formula "16") (term "0,1,0"))
                        (rule "polySimp_mulComm1" (formula "16") (term "1,0,1,0"))
                        (rule "polySimp_mulComm1" (formula "16") (term "0,1,0,1,0"))
                        (rule "polySimp_pullOutFactor2b" (formula "16") (term "1,0"))
                        (rule "add_literals" (formula "16") (term "1,1,1,0"))
                        (rule "times_zero_1" (formula "16") (term "1,1,0"))
                        (rule "add_zero_right" (formula "16") (term "1,0"))
                        (rule "polySimp_mulAssoc" (formula "16") (term "1,0"))
                        (rule "polySimp_pullOutFactor1" (formula "16") (term "0"))
                        (rule "add_literals" (formula "16") (term "1,0"))
                        (rule "times_zero_1" (formula "16") (term "0"))
                         (builtin "One Step Simplification" (formula "16"))
                        (rule "true_left" (formula "16"))
                        (rule "allLeft" (formula "29") (inst "t=x_0"))
                        (rule "applyEq" (formula "29") (term "0,0,1") (ifseqformula "9"))
                        (rule "polySimp_mulComm1" (formula "29") (term "0,1"))
                        (rule "polySimp_homoEq" (formula "29") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "29") (term "1,0,1"))
                        (rule "polySimp_elimOne" (formula "29") (term "1,0,1"))
                        (rule "polySimp_mulComm0" (formula "29") (term "1,0,1"))
                        (rule "applyEq" (formula "29") (term "0,0,0,1,0") (ifseqformula "14"))
                        (rule "polySimp_mulComm0" (formula "29") (term "0,0,1,0"))
                        (rule "replace_known_left" (formula "29") (term "0,1,0") (ifseqformula "16"))
                         (builtin "One Step Simplification" (formula "29"))
                        (rule "polySimp_sepPosMonomial" (formula "29") (term "1"))
                        (rule "inEqSimp_contradEq3" (formula "29") (term "1") (ifseqformula "6"))
                        (rule "polySimp_mulAssoc" (formula "29") (term "1,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "29") (term "0,1,0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0,1"))
                        (rule "polySimp_pullOutFactor0b" (formula "29") (term "0,0,1"))
                        (rule "add_literals" (formula "29") (term "1,1,0,0,1"))
                        (rule "times_zero_1" (formula "29") (term "1,0,0,1"))
                        (rule "add_zero_right" (formula "29") (term "0,0,1"))
                        (rule "qeq_literals" (formula "29") (term "0,1"))
                         (builtin "One Step Simplification" (formula "29"))
                        (rule "inEqSimp_contradInEq1" (formula "29") (term "0") (ifseqformula "7"))
                        (rule "qeq_literals" (formula "29") (term "0,0"))
                         (builtin "One Step Simplification" (formula "29"))
                        (rule "notLeft" (formula "29"))
                        (rule "jdiv_axiom" (formula "30") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "0,0,2,1"))
                        (rule "eqSymm" (formula "1"))
                        (rule "polySimp_elimOne" (formula "1") (term "0,0,2,0"))
                        (rule "inEqSimp_invertInEq1" (formula "1") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0"))
                        (rule "times_zero_2" (formula "1") (term "1,0,0"))
                        (rule "polySimp_elimOne" (formula "1") (term "0,0,0"))
                        (rule "inEqSimp_subsumption0" (formula "1") (term "0,0") (ifseqformula "18"))
                        (rule "leq_literals" (formula "1") (term "0,0,0"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "eqSymm" (formula "1"))
                        (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "1"))
                        (rule "polyDiv_pullOut" (formula "31") (term "0,0") (inst "polyDivCoeff=quotient_4"))
                        (rule "polySimp_mulComm1" (formula "31") (term "1,0,0,2,0,0"))
                        (rule "polySimp_mulComm0" (formula "31") (term "0,1,0,0,2,0,0"))
                        (rule "polySimp_addComm0" (formula "31") (term "2,0,0"))
                        (rule "applyEq" (formula "31") (term "0,1,0,1,2,0,0") (ifseqformula "14"))
                        (rule "polySimp_mulLiterals" (formula "31") (term "1,0,1,2,0,0"))
                        (rule "polySimp_pullOutFactor0" (formula "31") (term "0,1,2,0,0"))
                        (rule "add_literals" (formula "31") (term "1,0,1,2,0,0"))
                        (rule "times_zero_1" (formula "31") (term "0,1,2,0,0"))
                        (rule "inEqSimp_contradEq7" (formula "31") (term "0,0,0") (ifseqformula "8"))
                        (rule "times_zero_1" (formula "31") (term "1,0,0,0,0,0"))
                        (rule "add_zero_right" (formula "31") (term "0,0,0,0,0"))
                        (rule "leq_literals" (formula "31") (term "0,0,0,0"))
                         (builtin "One Step Simplification" (formula "31"))
                        (rule "polySimp_mulComm0" (formula "31") (term "0"))
                        (rule "polySimp_rightDist" (formula "31") (term "0"))
                        (rule "polySimp_homoEq" (formula "31"))
                        (rule "polySimp_mulComm0" (formula "31") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "31") (term "1,0"))
                        (rule "polySimp_mulComm0" (formula "31") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "31") (term "0"))
                        (rule "applyEq" (formula "31") (term "0,1,0,0") (ifseqformula "14"))
                        (rule "polySimp_mulLiterals" (formula "31") (term "1,0,0"))
                        (rule "polySimp_pullOutFactor0" (formula "31") (term "0,0"))
                        (rule "add_literals" (formula "31") (term "1,0,0"))
                        (rule "times_zero_1" (formula "31") (term "0,0"))
                        (rule "add_zero_left" (formula "31") (term "0"))
                        (rule "polySimp_invertEq" (formula "31"))
                        (rule "times_zero_2" (formula "31") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "31") (term "0"))
                        (rule "polySimp_elimOne" (formula "31") (term "0"))
                        (rule "polyDiv_zero" (formula "31") (term "0,0"))
                        (rule "div_literals" (formula "31") (term "1,0,0"))
                        (rule "inEqSimp_contradEq7" (formula "31") (term "0,0,0") (ifseqformula "8"))
                        (rule "times_zero_1" (formula "31") (term "1,0,0,0,0,0"))
                        (rule "add_zero_right" (formula "31") (term "0,0,0,0,0"))
                        (rule "leq_literals" (formula "31") (term "0,0,0,0"))
                         (builtin "One Step Simplification" (formula "31"))
                        (rule "times_zero_2" (formula "31") (term "0"))
                         (builtin "One Step Simplification" (formula "31"))
                        (rule "closeTrue" (formula "31"))
                     )
                  )
               )
            )
            (branch "Case 2"
                (builtin "One Step Simplification" (formula "10"))
               (rule "closeTrue" (formula "10"))
            )
         )
         (branch "Exceptional Post (gcdHelp)"
             (builtin "One Step Simplification" (formula "5"))
             (builtin "One Step Simplification" (formula "8"))
            (rule "andLeft" (formula "5"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "6") (term "1,0") (ifseqformula "5"))
            (rule "andLeft" (formula "6"))
            (rule "andLeft" (formula "7"))
            (rule "andLeft" (formula "6"))
            (rule "notLeft" (formula "6"))
            (rule "close" (formula "9") (ifseqformula "8"))
         )
         (branch "Pre (gcdHelp)"
             (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "2")))
            (rule "inEqSimp_ltRight" (formula "5"))
            (rule "times_zero_1" (formula "1") (term "0,0"))
            (rule "add_zero_left" (formula "1") (term "0"))
            (rule "inEqSimp_gtRight" (formula "5"))
            (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
            (rule "polySimp_addComm0" (formula "1") (term "0"))
            (rule "inEqSimp_ltToLeq" (formula "3"))
            (rule "times_zero_1" (formula "3") (term "1,0,0"))
            (rule "add_zero_right" (formula "3") (term "0,0"))
            (rule "inEqSimp_invertInEq1" (formula "6") (term "0"))
            (rule "polySimp_mulLiterals" (formula "6") (term "0,0"))
            (rule "times_zero_2" (formula "6") (term "1,0"))
            (rule "polySimp_elimOne" (formula "6") (term "0,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "1"))
            (rule "polySimp_mulLiterals" (formula "1") (term "0"))
            (rule "polySimp_elimOne" (formula "1") (term "0"))
            (rule "replace_known_left" (formula "6") (term "1") (ifseqformula "1"))
             (builtin "One Step Simplification" (formula "6"))
            (rule "inEqSimp_leqRight" (formula "6"))
            (rule "times_zero_1" (formula "1") (term "1,0,0"))
            (rule "add_zero_right" (formula "1") (term "0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "4"))
            (rule "mul_literals" (formula "4") (term "1"))
            (rule "inEqSimp_sepPosMonomial1" (formula "1"))
            (rule "mul_literals" (formula "1") (term "1"))
            (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "4"))
            (rule "qeq_literals" (formula "1") (term "0"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "closeFalse" (formula "1"))
         )
      )
   )
)
(branch "if x false"
    (builtin "One Step Simplification" (formula "4"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "notLeft" (formula "1"))
   (rule "ifUnfold" (formula "4") (term "1") (inst "#boolv=x"))
   (rule "variableDeclaration" (formula "4") (term "1") (newnames "x_1"))
   (rule "less_than_comparison_simple" (formula "4") (term "1"))
    (builtin "One Step Simplification" (formula "4"))
   (rule "ifSplit" (formula "4"))
   (branch "if x_1 true"
       (builtin "One Step Simplification" (formula "5"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "unaryMinusInt" (formula "5") (term "1"))
       (builtin "One Step Simplification" (formula "5"))
      (rule "translateJavaUnaryMinusInt" (formula "5") (term "0,1,0"))
      (rule "polySimp_elimNeg" (formula "5") (term "0,1,0"))
      (rule "variableDeclarationMult" (formula "5") (term "1"))
      (rule "variableDeclaration" (formula "5") (term "1") (newnames "big"))
      (rule "variableDeclaration" (formula "5") (term "1") (newnames "small"))
      (rule "blockEmpty" (formula "5") (term "1"))
      (rule "ifElseUnfold" (formula "5") (term "1") (inst "#boolv=x"))
      (rule "variableDeclaration" (formula "5") (term "1") (newnames "x_2"))
      (rule "greater_than_comparison_simple" (formula "5") (term "1"))
       (builtin "One Step Simplification" (formula "5"))
      (rule "ifElseSplit" (formula "5"))
      (branch "if x_2 true"
          (builtin "One Step Simplification" (formula "6"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "assignment" (formula "6") (term "1"))
          (builtin "One Step Simplification" (formula "6"))
         (rule "assignment" (formula "6") (term "1"))
          (builtin "One Step Simplification" (formula "6"))
         (rule "blockEmpty" (formula "6") (term "1"))
         (rule "returnUnfold" (formula "6") (term "1") (inst "#v0=x"))
         (rule "variableDeclarationAssign" (formula "6") (term "1"))
         (rule "variableDeclaration" (formula "6") (term "1") (newnames "x_3"))
          (builtin "Use Operation Contract" (formula "6") (newnames "heapBefore_gcdHelp,result_gcdHelp,exc_0,heapAfter_gcdHelp,anon_heap_gcdHelp") (contract "Gcd[Gcd::gcdHelp(int,int)].JML normal_behavior operation contract.0"))
         (branch "Post (gcdHelp)"
             (builtin "One Step Simplification" (formula "6"))
             (builtin "One Step Simplification" (formula "8"))
            (rule "andLeft" (formula "6"))
            (rule "andLeft" (formula "7"))
            (rule "andLeft" (formula "8"))
            (rule "assignment" (formula "10") (term "1"))
             (builtin "One Step Simplification" (formula "10"))
            (rule "methodCallReturn" (formula "10") (term "1"))
            (rule "assignment" (formula "10") (term "1"))
             (builtin "One Step Simplification" (formula "10"))
            (rule "methodCallEmpty" (formula "10") (term "1"))
            (rule "tryEmpty" (formula "10") (term "1"))
             (builtin "One Step Simplification" (formula "10"))
            (rule "emptyModality" (formula "10") (term "1"))
            (rule "andRight" (formula "10"))
            (branch "Case 1"
               (rule "impRight" (formula "10"))
               (rule "andRight" (formula "11"))
               (branch "Case 1"
                  (rule "andRight" (formula "11"))
                  (branch "Case 1"
                      (builtin "One Step Simplification" (formula "1"))
                      (builtin "One Step Simplification" (formula "11"))
                     (rule "replace_known_right" (formula "9") (term "0,0,1") (ifseqformula "11"))
                      (builtin "One Step Simplification" (formula "9"))
                     (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "9"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "notLeft" (formula "1"))
                     (rule "inEqSimp_ltRight" (formula "10"))
                     (rule "times_zero_1" (formula "1") (term "0,0"))
                     (rule "add_zero_left" (formula "1") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "3"))
                     (rule "times_zero_1" (formula "3") (term "1,0,0"))
                     (rule "add_zero_right" (formula "3") (term "0,0"))
                     (rule "inEqSimp_gtToGeq" (formula "2"))
                     (rule "polySimp_mulAssoc" (formula "2") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "2") (term "0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                     (rule "polySimp_elimOne" (formula "2") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "2") (term "0"))
                     (rule "applyEq" (formula "1") (term "0") (ifseqformula "9"))
                     (rule "qeq_literals" (formula "1"))
                     (rule "true_left" (formula "1"))
                     (rule "applyEq" (formula "10") (term "0,0") (ifseqformula "8"))
                      (builtin "One Step Simplification" (formula "10"))
                     (rule "closeTrue" (formula "10"))
                  )
                  (branch "Case 2"
                      (builtin "One Step Simplification" (formula "1"))
                      (builtin "One Step Simplification" (formula "11"))
                     (rule "inEqSimp_ltRight" (formula "10"))
                     (rule "times_zero_1" (formula "1") (term "0,0"))
                     (rule "add_zero_left" (formula "1") (term "0"))
                     (rule "inEqSimp_gtToGeq" (formula "10") (term "0,0,0,0,1,1"))
                     (rule "times_zero_1" (formula "10") (term "1,0,0,0,0,0,0,1,1"))
                     (rule "add_zero_right" (formula "10") (term "0,0,0,0,0,0,1,1"))
                     (rule "inEqSimp_ltToLeq" (formula "4"))
                     (rule "times_zero_1" (formula "4") (term "1,0,0"))
                     (rule "add_zero_right" (formula "4") (term "0,0"))
                     (rule "inEqSimp_gtToGeq" (formula "3"))
                     (rule "polySimp_mulAssoc" (formula "3") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "3") (term "0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                     (rule "polySimp_elimOne" (formula "3") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "3") (term "0"))
                     (rule "jmod_axiom" (formula "10") (term "0,1,0,1,1"))
                     (rule "polySimp_mulComm1" (formula "10") (term "1,0,1,0,1,1"))
                     (rule "jmod_axiom" (formula "10") (term "0,0,0,1"))
                     (rule "polySimp_mulComm1" (formula "10") (term "1,0,0,0,1"))
                     (rule "jmod_axiom" (formula "10") (term "0,1,0,0,0,1,1"))
                     (rule "polySimp_mulComm1" (formula "10") (term "1,0,1,0,0,0,1,1"))
                     (rule "jmod_axiom" (formula "10") (term "0,1,0,0,1,1"))
                     (rule "polySimp_mulComm1" (formula "10") (term "1,0,1,0,0,1,1"))
                     (rule "jmod_axiom" (formula "10") (term "0,1,0,1"))
                     (rule "polySimp_mulComm1" (formula "10") (term "1,0,1,0,1"))
                     (rule "jmod_axiom" (formula "11") (term "0"))
                     (rule "polySimp_mulComm1" (formula "11") (term "1,0"))
                     (rule "polySimp_sepNegMonomial" (formula "10") (term "1,0,1,1"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "0,1,0,1,1"))
                     (rule "polySimp_elimOne" (formula "10") (term "0,1,0,1,1"))
                     (rule "polySimp_sepNegMonomial" (formula "10") (term "0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "0,0,0,1"))
                     (rule "polySimp_elimOne" (formula "10") (term "0,0,0,1"))
                     (rule "polySimp_sepNegMonomial" (formula "10") (term "1,0,0,0,1,1"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "0,1,0,0,0,1,1"))
                     (rule "polySimp_elimOne" (formula "10") (term "0,1,0,0,0,1,1"))
                     (rule "polySimp_sepNegMonomial" (formula "10") (term "1,0,0,1,1"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "0,1,0,0,1,1"))
                     (rule "polySimp_elimOne" (formula "10") (term "0,1,0,0,1,1"))
                     (rule "polySimp_sepNegMonomial" (formula "10") (term "1,0,1"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "0,1,0,1"))
                     (rule "polySimp_elimOne" (formula "10") (term "0,1,0,1"))
                     (rule "polySimp_sepNegMonomial" (formula "11"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                     (rule "polySimp_elimOne" (formula "11") (term "0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "0,0,0,0,1,1"))
                     (rule "mul_literals" (formula "10") (term "1,0,0,0,0,1,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                     (rule "mul_literals" (formula "4") (term "1"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                     (rule "polySimp_mulComm0" (formula "3") (term "1"))
                     (rule "polySimp_rightDist" (formula "3") (term "1"))
                     (rule "mul_literals" (formula "3") (term "0,1"))
                     (rule "inEqSimp_contradEq3" (formula "2") (term "0,1") (ifseqformula "4"))
                     (rule "times_zero_1" (formula "2") (term "1,0,0,0,1"))
                     (rule "add_zero_right" (formula "2") (term "0,0,0,1"))
                     (rule "qeq_literals" (formula "2") (term "0,0,1"))
                      (builtin "One Step Simplification" (formula "2"))
                     (rule "true_left" (formula "2"))
                     (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "3"))
                     (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                     (rule "mul_literals" (formula "2") (term "0,0,0"))
                     (rule "polySimp_elimOne" (formula "2") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "2") (term "0"))
                     (rule "add_literals" (formula "2") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                     (rule "mul_literals" (formula "2") (term "1"))
                     (rule "inEqSimp_contradEq7" (formula "10") (term "0,0") (ifseqformula "2"))
                     (rule "times_zero_1" (formula "10") (term "1,0,0,0,0"))
                     (rule "add_zero_right" (formula "10") (term "0,0,0,0"))
                     (rule "leq_literals" (formula "10") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "10"))
                     (rule "andLeft" (formula "10"))
                     (rule "andLeft" (formula "10"))
                     (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "2"))
                     (rule "leq_literals" (formula "1") (term "0"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "true_left" (formula "1"))
                     (rule "nnf_imp2or" (formula "11") (term "0"))
                     (rule "nnf_notAnd" (formula "11") (term "0,0"))
                     (rule "nnf_notAnd" (formula "11") (term "0,0,0"))
                     (rule "inEqSimp_notGeq" (formula "11") (term "0,0,0,0"))
                     (rule "mul_literals" (formula "11") (term "1,0,0,0,0,0,0"))
                     (rule "add_literals" (formula "11") (term "0,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "11") (term "0,0,0,0,0"))
                     (rule "jdiv_axiom" (formula "12") (term "0,0"))
                     (rule "eqSymm" (formula "1"))
                     (rule "inEqSimp_contradInEq0" (formula "1") (term "0,0") (ifseqformula "4"))
                     (rule "qeq_literals" (formula "1") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "eqSymm" (formula "1"))
                     (rule "applyEq" (formula "13") (term "0,0") (ifseqformula "1"))
                     (rule "polySimp_mulComm1" (formula "13") (term "0"))
                     (rule "polySimp_homoEq" (formula "13"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "1,0"))
                     (rule "polySimp_elimOne" (formula "13") (term "1,0"))
                     (rule "polySimp_sepPosMonomial" (formula "13"))
                     (rule "polyDiv_pullOut" (formula "13") (term "0,0") (inst "polyDivCoeff=jdiv(mul(b, Z(neglit(1(#)))), result_gcdHelp)"))
                     (rule "polySimp_mulComm1" (formula "13") (term "1,0,0,2,0,0"))
                     (rule "polySimp_addComm0" (formula "13") (term "2,0,0"))
                     (rule "applyEq" (formula "13") (term "0,1,0,1,2,0,0") (ifseqformula "11"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1,2,0,0"))
                     (rule "polySimp_pullOutFactor0" (formula "13") (term "0,1,2,0,0"))
                     (rule "add_literals" (formula "13") (term "1,0,1,2,0,0"))
                     (rule "times_zero_1" (formula "13") (term "0,1,2,0,0"))
                     (rule "polySimp_addComm0" (formula "13") (term "2,0,0"))
                     (rule "polyDiv_zero" (formula "13") (term "0,2,0,0"))
                     (rule "div_literals" (formula "13") (term "1,0,2,0,0"))
                     (rule "polySimp_addComm0" (formula "13") (term "2,0,0"))
                     (rule "polyDiv_pullOut" (formula "1") (term "0,1") (inst "polyDivCoeff=jdiv(mul(b, Z(neglit(1(#)))), result_gcdHelp)"))
                     (rule "eqSymm" (formula "1"))
                     (rule "polySimp_homoEq" (formula "1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,0"))
                     (rule "polySimp_elimOne" (formula "1") (term "1,0"))
                     (rule "polySimp_mulComm1" (formula "1") (term "1,0,0,2,1,0"))
                     (rule "polySimp_addComm0" (formula "1") (term "2,1,0"))
                     (rule "applyEq" (formula "1") (term "0,1,0,1,2,1,0") (ifseqformula "11"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,2,1,0"))
                     (rule "polySimp_pullOutFactor0" (formula "1") (term "0,1,2,1,0"))
                     (rule "add_literals" (formula "1") (term "1,0,1,2,1,0"))
                     (rule "times_zero_1" (formula "1") (term "0,1,2,1,0"))
                     (rule "polySimp_addComm0" (formula "1") (term "2,1,0"))
                     (rule "polySimp_sepPosMonomial" (formula "1"))
                     (rule "polyDiv_zero" (formula "1") (term "0,2,0"))
                     (rule "div_literals" (formula "1") (term "1,0,2,0"))
                     (rule "polySimp_addComm0" (formula "1") (term "2,0"))
                     (rule "applyEq" (formula "13") (term "0,0") (ifseqformula "1"))
                     (rule "polySimp_mulComm1" (formula "13") (term "0"))
                     (rule "polySimp_homoEq" (formula "13"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "1,0"))
                     (rule "polySimp_elimOne" (formula "13") (term "1,0"))
                     (rule "polySimp_sepPosMonomial" (formula "13"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "1"))
                     (rule "polySimp_elimOne" (formula "13") (term "1"))
                     (rule "jdiv_axiom" (formula "11") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "0,0,2,1"))
                     (rule "eqSymm" (formula "11"))
                     (rule "polySimp_elimOne" (formula "11") (term "0,0,2,0"))
                     (rule "inEqSimp_invertInEq1" (formula "11") (term "0,0"))
                     (rule "times_zero_2" (formula "11") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "0,0,0"))
                     (rule "polySimp_elimOne" (formula "11") (term "0,0,0"))
                     (rule "inEqSimp_subsumption0" (formula "11") (term "0,0") (ifseqformula "4"))
                     (rule "leq_literals" (formula "11") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "11"))
                     (rule "eqSymm" (formula "11"))
                     (rule "applyEq" (formula "12") (term "0,0") (ifseqformula "11"))
                     (rule "applyEq" (formula "1") (term "0,2,0") (ifseqformula "11"))
                     (rule "jdiv_axiom" (formula "10") (term "0,0"))
                     (rule "eqSymm" (formula "10"))
                     (rule "inEqSimp_subsumption1" (formula "10") (term "0,0") (ifseqformula "2"))
                     (rule "leq_literals" (formula "10") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "10"))
                     (rule "eqSymm" (formula "10"))
                     (rule "applyEq" (formula "11") (term "0,0") (ifseqformula "10"))
                     (rule "div_axiom" (formula "1") (term "1,0") (inst "quotient=quotient_0"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "true_left" (formula "1"))
                     (rule "ifthenelse_split" (formula "1") (term "1,2,0"))
                     (branch "result_gcdHelp = 0 TRUE"
                        (rule "replace_known_left" (formula "2") (term "0,0") (ifseqformula "1"))
                         (builtin "One Step Simplification" (formula "2"))
                        (rule "eqSymm" (formula "2"))
                        (rule "polySimp_homoEq" (formula "2"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                        (rule "polySimp_elimOne" (formula "2") (term "1,0"))
                        (rule "applyEq" (formula "14") (term "1,0") (ifseqformula "1"))
                        (rule "times_zero_1" (formula "14") (term "0"))
                        (rule "eqSymm" (formula "14"))
                        (rule "applyEq" (formula "15") (term "0,0,0,1,0") (ifseqformula "1"))
                        (rule "jdiv_axiom_inline" (formula "15") (term "0,0,1,0"))
                        (rule "times_zero_2" (formula "15") (term "0,0,2,0,0,1,0"))
                        (rule "qeq_literals" (formula "15") (term "0,0,0,1,0"))
                         (builtin "One Step Simplification" (formula "15"))
                        (rule "applyEq" (formula "16") (term "1,0") (ifseqformula "1"))
                        (rule "times_zero_1" (formula "16") (term "0"))
                        (rule "eqSymm" (formula "16"))
                        (rule "applyEq" (formula "13") (term "1,0") (ifseqformula "1"))
                        (rule "eqSymm" (formula "13"))
                        (rule "applyEq" (formula "11") (term "1,0") (ifseqformula "1"))
                        (rule "eqSymm" (formula "11"))
                        (rule "applyEq" (formula "12") (term "1,0,0") (ifseqformula "1"))
                        (rule "polySimp_mulComm0" (formula "12") (term "0"))
                        (rule "applyEq" (formula "2") (term "1,1,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "11") (term "1,0") (ifseqformula "1"))
                        (rule "eqSymm" (formula "11"))
                        (rule "applyEq" (formula "12") (term "0,0") (ifseqformula "1"))
                        (rule "times_zero_2" (formula "12") (term "0"))
                        (rule "eqSymm" (formula "12"))
                        (rule "applyEq" (formula "13") (term "1,0") (ifseqformula "1"))
                        (rule "eqSymm" (formula "13"))
                        (rule "applyEq" (formula "15") (term "1,1,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "4") (term "0,1,1") (ifseqformula "12"))
                        (rule "times_zero_2" (formula "4") (term "1,1"))
                        (rule "add_zero_right" (formula "4") (term "1"))
                        (rule "applyEq" (formula "11") (term "0,0") (ifseqformula "12"))
                        (rule "eqSymm" (formula "11"))
                        (rule "jdiv_axiom_inline" (formula "11") (term "1"))
                        (rule "times_zero_2" (formula "11") (term "0,0,2,1"))
                        (rule "div_literals" (formula "11") (term "1,1"))
                        (rule "qeq_literals" (formula "11") (term "0,1"))
                         (builtin "One Step Simplification" (formula "11"))
                        (rule "eqSymm" (formula "11"))
                        (rule "applyEq" (formula "3") (term "0") (ifseqformula "12"))
                        (rule "qeq_literals" (formula "3"))
                        (rule "closeFalse" (formula "3"))
                     )
                     (branch "result_gcdHelp = 0 FALSE"
                        (rule "add_zero_right" (formula "1") (term "2,0"))
                        (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "15"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "eqSymm" (formula "1"))
                        (rule "polySimp_homoEq" (formula "1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,0"))
                        (rule "polySimp_elimOne" (formula "1") (term "1,0"))
                        (rule "polySimp_sepPosMonomial" (formula "1"))
                        (rule "applyEq" (formula "16") (term "0,0") (ifseqformula "1"))
                        (rule "polySimp_mulComm1" (formula "16") (term "0"))
                        (rule "polySimp_homoEq" (formula "16"))
                        (rule "polySimp_mulLiterals" (formula "16") (term "1,0"))
                        (rule "polySimp_elimOne" (formula "16") (term "1,0"))
                        (rule "applyEq" (formula "16") (term "1,0") (ifseqformula "13"))
                        (rule "polySimp_pullOutFactor1" (formula "16") (term "0"))
                        (rule "add_literals" (formula "16") (term "1,0"))
                        (rule "times_zero_1" (formula "16") (term "0"))
                         (builtin "One Step Simplification" (formula "16"))
                        (rule "closeTrue" (formula "16"))
                     )
                  )
               )
               (branch "Case 2"
                   (builtin "One Step Simplification" (formula "1"))
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "allRight" (formula "11") (inst "sk=x_0"))
                  (rule "impRight" (formula "11"))
                  (rule "andLeft" (formula "1"))
                  (rule "andLeft" (formula "1"))
                  (rule "inEqSimp_ltRight" (formula "13"))
                  (rule "times_zero_1" (formula "1") (term "0,0"))
                  (rule "add_zero_left" (formula "1") (term "0"))
                  (rule "inEqSimp_gtToGeq" (formula "13") (term "0,0,0,0,1,1"))
                  (rule "times_zero_1" (formula "13") (term "1,0,0,0,0,0,0,1,1"))
                  (rule "add_zero_right" (formula "13") (term "0,0,0,0,0,0,1,1"))
                  (rule "inEqSimp_ltToLeq" (formula "7"))
                  (rule "times_zero_1" (formula "7") (term "1,0,0"))
                  (rule "add_zero_right" (formula "7") (term "0,0"))
                  (rule "inEqSimp_gtToGeq" (formula "6"))
                  (rule "polySimp_mulAssoc" (formula "6") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "6") (term "0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0"))
                  (rule "polySimp_elimOne" (formula "6") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "6") (term "0"))
                  (rule "inEqSimp_gtToGeq" (formula "2"))
                  (rule "times_zero_1" (formula "2") (term "1,0,0"))
                  (rule "add_zero_right" (formula "2") (term "0,0"))
                  (rule "jmod_axiom" (formula "13") (term "0,1,0,1,1"))
                  (rule "polySimp_mulComm1" (formula "13") (term "1,0,1,0,1,1"))
                  (rule "jmod_axiom" (formula "13") (term "0,0,0,1"))
                  (rule "polySimp_mulComm1" (formula "13") (term "1,0,0,0,1"))
                  (rule "jmod_axiom" (formula "13") (term "0,1,0,1"))
                  (rule "polySimp_mulComm1" (formula "13") (term "1,0,1,0,1"))
                  (rule "jmod_axiom" (formula "13") (term "0,1,0,0,0,1,1"))
                  (rule "polySimp_mulComm1" (formula "13") (term "1,0,1,0,0,0,1,1"))
                  (rule "jmod_axiom" (formula "13") (term "0,1,0,0,1,1"))
                  (rule "polySimp_mulComm1" (formula "13") (term "1,0,1,0,0,1,1"))
                  (rule "jmod_axiom" (formula "14") (term "0"))
                  (rule "polySimp_mulComm1" (formula "14") (term "1,0"))
                  (rule "jmod_axiom" (formula "4") (term "0"))
                  (rule "polySimp_mulComm1" (formula "4") (term "1,0"))
                  (rule "jmod_axiom" (formula "3") (term "0"))
                  (rule "polySimp_mulComm1" (formula "3") (term "1,0"))
                  (rule "polySimp_sepNegMonomial" (formula "13") (term "1,0,1,1"))
                  (rule "polySimp_mulLiterals" (formula "13") (term "0,1,0,1,1"))
                  (rule "polySimp_elimOne" (formula "13") (term "0,1,0,1,1"))
                  (rule "polySimp_sepNegMonomial" (formula "13") (term "0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "13") (term "0,0,0,1"))
                  (rule "polySimp_elimOne" (formula "13") (term "0,0,0,1"))
                  (rule "polySimp_sepNegMonomial" (formula "13") (term "1,0,1"))
                  (rule "polySimp_mulLiterals" (formula "13") (term "0,1,0,1"))
                  (rule "polySimp_elimOne" (formula "13") (term "0,1,0,1"))
                  (rule "polySimp_sepNegMonomial" (formula "13") (term "1,0,0,0,1,1"))
                  (rule "polySimp_mulLiterals" (formula "13") (term "0,1,0,0,0,1,1"))
                  (rule "polySimp_elimOne" (formula "13") (term "0,1,0,0,0,1,1"))
                  (rule "polySimp_sepNegMonomial" (formula "13") (term "1,0,0,1,1"))
                  (rule "polySimp_mulLiterals" (formula "13") (term "0,1,0,0,1,1"))
                  (rule "polySimp_elimOne" (formula "13") (term "0,1,0,0,1,1"))
                  (rule "polySimp_sepNegMonomial" (formula "14"))
                  (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                  (rule "polySimp_elimOne" (formula "14") (term "0"))
                  (rule "polySimp_sepNegMonomial" (formula "4"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                  (rule "polySimp_elimOne" (formula "4") (term "0"))
                  (rule "polySimp_sepNegMonomial" (formula "3"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                  (rule "polySimp_elimOne" (formula "3") (term "0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "0,0,0,0,1,1"))
                  (rule "mul_literals" (formula "13") (term "1,0,0,0,0,1,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "7"))
                  (rule "mul_literals" (formula "7") (term "1"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                  (rule "polySimp_mulComm0" (formula "6") (term "1"))
                  (rule "polySimp_rightDist" (formula "6") (term "1"))
                  (rule "mul_literals" (formula "6") (term "0,1"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                  (rule "mul_literals" (formula "2") (term "1"))
                  (rule "inEqSimp_contradEq3" (formula "5") (term "0,1") (ifseqformula "7"))
                  (rule "times_zero_1" (formula "5") (term "1,0,0,0,1"))
                  (rule "add_zero_right" (formula "5") (term "0,0,0,1"))
                  (rule "qeq_literals" (formula "5") (term "0,0,1"))
                   (builtin "One Step Simplification" (formula "5"))
                  (rule "true_left" (formula "5"))
                  (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "6"))
                  (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0"))
                  (rule "mul_literals" (formula "5") (term "0,0,0"))
                  (rule "polySimp_elimOne" (formula "5") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "5") (term "0"))
                  (rule "add_literals" (formula "5") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                  (rule "mul_literals" (formula "5") (term "1"))
                  (rule "inEqSimp_contradEq7" (formula "13") (term "0,0") (ifseqformula "5"))
                  (rule "times_zero_1" (formula "13") (term "1,0,0,0,0"))
                  (rule "add_zero_right" (formula "13") (term "0,0,0,0"))
                  (rule "leq_literals" (formula "13") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "13"))
                  (rule "andLeft" (formula "13"))
                  (rule "andLeft" (formula "13"))
                  (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "5"))
                  (rule "leq_literals" (formula "1") (term "0"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "true_left" (formula "1"))
                  (rule "nnf_imp2or" (formula "14") (term "0"))
                  (rule "nnf_notAnd" (formula "14") (term "0,0"))
                  (rule "nnf_notAnd" (formula "14") (term "0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "14") (term "0,0,0,0"))
                  (rule "mul_literals" (formula "14") (term "1,0,0,0,0,0,0"))
                  (rule "add_literals" (formula "14") (term "0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "14") (term "0,0,0,0,0"))
                  (rule "jdiv_axiom" (formula "15") (term "0,0"))
                  (rule "eqSymm" (formula "1"))
                  (rule "jdiv_axiom" (formula "4") (term "0,0"))
                  (rule "eqSymm" (formula "4"))
                  (rule "inEqSimp_contradInEq0" (formula "4") (term "0,0") (ifseqformula "8"))
                  (rule "qeq_literals" (formula "4") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "4"))
                  (rule "eqSymm" (formula "4"))
                  (rule "applyEq" (formula "5") (term "0,0") (ifseqformula "4"))
                  (rule "polySimp_mulComm1" (formula "5") (term "0"))
                  (rule "polySimp_homoEq" (formula "5"))
                  (rule "polySimp_mulLiterals" (formula "5") (term "1,0"))
                  (rule "polySimp_elimOne" (formula "5") (term "1,0"))
                  (rule "polySimp_sepPosMonomial" (formula "5"))
                  (rule "jdiv_axiom" (formula "3") (term "0,0"))
                  (rule "eqSymm" (formula "3"))
                  (rule "inEqSimp_subsumption1" (formula "3") (term "0,0") (ifseqformula "7"))
                  (rule "leq_literals" (formula "3") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "3"))
                  (rule "eqSymm" (formula "3"))
                  (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "3"))
                  (rule "jdiv_axiom" (formula "16") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "16") (term "0,0,2,1"))
                  (rule "eqSymm" (formula "16"))
                  (rule "polySimp_elimOne" (formula "16") (term "0,0,2,0"))
                  (rule "inEqSimp_invertInEq1" (formula "16") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "16") (term "0,0,0"))
                  (rule "times_zero_2" (formula "16") (term "1,0,0"))
                  (rule "polySimp_elimOne" (formula "16") (term "0,0,0"))
                  (rule "inEqSimp_subsumption0" (formula "16") (term "0,0") (ifseqformula "9"))
                  (rule "leq_literals" (formula "16") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "16"))
                  (rule "eqSymm" (formula "16"))
                  (rule "applyEq" (formula "17") (term "0,0") (ifseqformula "16"))
                  (rule "jdiv_axiom" (formula "15") (term "0,0"))
                  (rule "eqSymm" (formula "15"))
                  (rule "inEqSimp_subsumption1" (formula "15") (term "0,0") (ifseqformula "7"))
                  (rule "leq_literals" (formula "15") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "15"))
                  (rule "eqSymm" (formula "15"))
                  (rule "applyEq" (formula "16") (term "0,0") (ifseqformula "15"))
                  (rule "div_axiom" (formula "1") (term "1,0") (inst "quotient=quotient_0"))
                  (rule "polySimp_mulComm0" (formula "1") (term "0,1,1,1"))
                  (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,1"))
                  (rule "polySimp_mulComm0" (formula "1") (term "0,2,1,1"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,1,1,1,1"))
                  (rule "inEqSimp_contradEq7" (formula "1") (term "0") (ifseqformula "3"))
                  (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                  (rule "add_zero_right" (formula "1") (term "0,0,0"))
                  (rule "leq_literals" (formula "1") (term "0,0"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "andLeft" (formula "1"))
                  (rule "andLeft" (formula "1"))
                  (rule "applyEq" (formula "4") (term "1,0") (ifseqformula "1"))
                  (rule "inEqSimp_subsumption1" (formula "3") (term "0") (ifseqformula "5"))
                  (rule "leq_literals" (formula "3") (term "0,0"))
                   (builtin "One Step Simplification" (formula "3"))
                  (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "2"))
                  (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                  (rule "polySimp_elimOne" (formula "3") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "3") (term "0"))
                  (rule "polySimp_rightDist" (formula "3") (term "0,0,0"))
                  (rule "mul_literals" (formula "3") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor2b" (formula "3") (term "0,0"))
                  (rule "add_literals" (formula "3") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "3") (term "1,0,0"))
                  (rule "add_zero_right" (formula "3") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                  (rule "mul_literals" (formula "3") (term "1"))
                  (rule "div_axiom" (formula "4") (term "0,2,0") (inst "quotient=quotient_1"))
                  (rule "polySimp_mulComm0" (formula "4") (term "0,1,0,1"))
                  (rule "polySimp_mulComm0" (formula "4") (term "0,1,1,1"))
                  (rule "polySimp_mulComm0" (formula "4") (term "0,2,1,1"))
                  (rule "polySimp_mulComm0" (formula "4") (term "1,1,1,1,1"))
                  (rule "inEqSimp_contradEq7" (formula "4") (term "0") (ifseqformula "6"))
                  (rule "times_zero_1" (formula "4") (term "1,0,0,0"))
                  (rule "add_zero_right" (formula "4") (term "0,0,0"))
                  (rule "leq_literals" (formula "4") (term "0,0"))
                   (builtin "One Step Simplification" (formula "4"))
                  (rule "andLeft" (formula "4"))
                  (rule "andLeft" (formula "4"))
                  (rule "applyEq" (formula "7") (term "0,2,0") (ifseqformula "4"))
                  (rule "inEqSimp_subsumption1" (formula "6") (term "0") (ifseqformula "8"))
                  (rule "leq_literals" (formula "6") (term "0,0"))
                   (builtin "One Step Simplification" (formula "6"))
                  (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "5"))
                  (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0"))
                  (rule "polySimp_elimOne" (formula "6") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "6") (term "0"))
                  (rule "polySimp_rightDist" (formula "6") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "6") (term "0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "6") (term "1,0,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0"))
                  (rule "add_literals" (formula "6") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "6") (term "1,0,0"))
                  (rule "add_zero_right" (formula "6") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                  (rule "mul_literals" (formula "6") (term "1"))
                  (rule "div_axiom" (formula "11") (term "0,1") (inst "quotient=quotient_2"))
                  (rule "polySimp_mulComm0" (formula "11") (term "0,1,1,1"))
                  (rule "polySimp_mulComm0" (formula "11") (term "0,2,1,1"))
                  (rule "polySimp_mulComm0" (formula "11") (term "1,1,1,1,1"))
                  (rule "polySimp_mulComm0" (formula "11") (term "0,1,0,1"))
                  (rule "inEqSimp_contradEq7" (formula "11") (term "0") (ifseqformula "8"))
                  (rule "times_zero_1" (formula "11") (term "1,0,0,0"))
                  (rule "add_zero_right" (formula "11") (term "0,0,0"))
                  (rule "leq_literals" (formula "11") (term "0,0"))
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "andLeft" (formula "11"))
                  (rule "andLeft" (formula "11"))
                  (rule "applyEq" (formula "15") (term "0,0") (ifseqformula "11"))
                  (rule "polySimp_mulComm0" (formula "15") (term "0"))
                  (rule "applyEq" (formula "13") (term "0,2") (ifseqformula "15"))
                  (rule "inEqSimp_homoInEq1" (formula "13") (term "2"))
                  (rule "polySimp_mulLiterals" (formula "13") (term "1,0,2"))
                  (rule "polySimp_elimOne" (formula "13") (term "1,0,2"))
                  (rule "polySimp_addComm1" (formula "13") (term "0,2"))
                  (rule "polySimp_pullOutFactor2b" (formula "13") (term "0,0,2"))
                  (rule "add_literals" (formula "13") (term "1,1,0,0,2"))
                  (rule "times_zero_1" (formula "13") (term "1,0,0,2"))
                  (rule "add_zero_right" (formula "13") (term "0,0,2"))
                  (rule "applyEq" (formula "13") (term "0,1") (ifseqformula "15"))
                  (rule "inEqSimp_homoInEq1" (formula "13") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1"))
                  (rule "polySimp_elimOne" (formula "13") (term "1,0,1"))
                  (rule "polySimp_addComm1" (formula "13") (term "0,1"))
                  (rule "polySimp_pullOutFactor2b" (formula "13") (term "0,0,1"))
                  (rule "add_literals" (formula "13") (term "1,1,0,0,1"))
                  (rule "times_zero_1" (formula "13") (term "1,0,0,1"))
                  (rule "add_zero_right" (formula "13") (term "0,0,1"))
                  (rule "applyEq" (formula "12") (term "0") (ifseqformula "15"))
                  (rule "inEqSimp_homoInEq0" (formula "12"))
                  (rule "polySimp_mulLiterals" (formula "12") (term "1,0"))
                  (rule "polySimp_pullOutFactor0" (formula "12") (term "0"))
                  (rule "add_literals" (formula "12") (term "1,0"))
                  (rule "times_zero_1" (formula "12") (term "0"))
                  (rule "qeq_literals" (formula "12"))
                  (rule "true_left" (formula "12"))
                  (rule "applyEq" (formula "13") (term "0,1") (ifseqformula "11"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "2"))
                  (rule "mul_literals" (formula "12") (term "1,2"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "12") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "12") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "12") (term "0,1"))
                  (rule "replace_known_left" (formula "12") (term "1") (ifseqformula "8"))
                  (rule "inEqSimp_subsumption1" (formula "12") (term "0") (ifseqformula "8"))
                  (rule "leq_literals" (formula "12") (term "0,0"))
                   (builtin "One Step Simplification" (formula "12"))
                  (rule "true_left" (formula "12"))
                  (rule "div_axiom" (formula "9") (term "1") (inst "quotient=quotient_3"))
                  (rule "polySimp_mulComm0" (formula "9") (term "0,2,1,1"))
                  (rule "polySimp_mulComm0" (formula "9") (term "0,1,1,1"))
                  (rule "polySimp_mulComm0" (formula "9") (term "0,1,0,1"))
                  (rule "polySimp_mulComm0" (formula "9") (term "1,1,1,1,1"))
                  (rule "inEqSimp_contradEq7" (formula "9") (term "0") (ifseqformula "8"))
                  (rule "times_zero_1" (formula "9") (term "1,0,0,0"))
                  (rule "add_zero_right" (formula "9") (term "0,0,0"))
                  (rule "leq_literals" (formula "9") (term "0,0"))
                   (builtin "One Step Simplification" (formula "9"))
                  (rule "andLeft" (formula "9"))
                  (rule "andLeft" (formula "9"))
                  (rule "applyEq" (formula "13") (term "0,0") (ifseqformula "9"))
                  (rule "polySimp_mulComm0" (formula "13") (term "0"))
                  (rule "applyEq" (formula "10") (term "0") (ifseqformula "13"))
                  (rule "inEqSimp_homoInEq0" (formula "10"))
                  (rule "polySimp_pullOutFactor1" (formula "10") (term "0"))
                  (rule "add_literals" (formula "10") (term "1,0"))
                  (rule "times_zero_1" (formula "10") (term "0"))
                  (rule "qeq_literals" (formula "10"))
                  (rule "true_left" (formula "10"))
                  (rule "applyEq" (formula "10") (term "0,1") (ifseqformula "12"))
                  (rule "inEqSimp_homoInEq1" (formula "10") (term "1"))
                  (rule "polySimp_addComm1" (formula "10") (term "0,1"))
                  (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,1"))
                  (rule "add_literals" (formula "10") (term "1,1,0,0,1"))
                  (rule "times_zero_1" (formula "10") (term "1,0,0,1"))
                  (rule "add_zero_right" (formula "10") (term "0,0,1"))
                  (rule "applyEq" (formula "10") (term "0,2") (ifseqformula "12"))
                  (rule "inEqSimp_homoInEq1" (formula "10") (term "2"))
                  (rule "polySimp_addComm1" (formula "10") (term "0,2"))
                  (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,2"))
                  (rule "add_literals" (formula "10") (term "1,1,0,0,2"))
                  (rule "times_zero_1" (formula "10") (term "1,0,0,2"))
                  (rule "add_zero_right" (formula "10") (term "0,0,2"))
                  (rule "applyEq" (formula "11") (term "1") (ifseqformula "9"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "10") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "10") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "10") (term "0,1"))
                  (rule "replace_known_left" (formula "10") (term "1") (ifseqformula "8"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "2"))
                  (rule "mul_literals" (formula "10") (term "1,2"))
                  (rule "inEqSimp_subsumption1" (formula "10") (term "0") (ifseqformula "8"))
                  (rule "leq_literals" (formula "10") (term "0,0"))
                   (builtin "One Step Simplification" (formula "10"))
                  (rule "true_left" (formula "10"))
                  (rule "div_axiom" (formula "25") (term "1") (inst "quotient=quotient_4"))
                  (rule "polySimp_mulComm0" (formula "25") (term "0,1,0,1"))
                  (rule "polySimp_mulComm0" (formula "25") (term "1,1,1,1,1"))
                  (rule "polySimp_mulComm0" (formula "25") (term "0,2,1,1"))
                  (rule "polySimp_mulComm0" (formula "25") (term "0,1,1,1"))
                  (rule "commute_and" (formula "25") (term "0,1"))
                  (rule "div_axiom" (formula "23") (term "1") (inst "quotient=quotient_5"))
                  (rule "polySimp_mulComm0" (formula "23") (term "1,1,1,1,1"))
                  (rule "polySimp_mulComm0" (formula "23") (term "0,1,1,1"))
                  (rule "polySimp_mulComm0" (formula "23") (term "0,1,0,1"))
                  (rule "polySimp_mulComm0" (formula "23") (term "0,2,1,1"))
                  (rule "commute_and" (formula "23") (term "0,1"))
                  (rule "ifthenelse_split" (formula "7") (term "0"))
                  (branch "result_gcdHelp >= 0 TRUE"
                     (rule "eqSymm" (formula "8"))
                     (rule "replace_known_left" (formula "27") (term "0,1,1") (ifseqformula "7"))
                      (builtin "One Step Simplification" (formula "27"))
                     (rule "replace_known_left" (formula "24") (term "0,1,1") (ifseqformula "7"))
                      (builtin "One Step Simplification" (formula "24"))
                     (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "8"))
                     (rule "polySimp_mulComm0" (formula "31") (term "0"))
                     (rule "inEqSimp_strengthen0" (formula "2") (ifseqformula "31"))
                     (rule "inEqSimp_contradEq3" (formula "31") (ifseqformula "2"))
                     (rule "polySimp_mulComm0" (formula "31") (term "1,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0"))
                     (rule "add_literals" (formula "31") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "31") (term "1,0,0"))
                     (rule "add_zero_right" (formula "31") (term "0,0"))
                     (rule "qeq_literals" (formula "31") (term "0"))
                      (builtin "One Step Simplification" (formula "31"))
                     (rule "false_right" (formula "31"))
                     (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "2"))
                     (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                     (rule "polySimp_elimOne" (formula "3") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "3") (term "0"))
                     (rule "polySimp_rightDist" (formula "3") (term "0,0,0"))
                     (rule "mul_literals" (formula "3") (term "0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                     (rule "add_literals" (formula "3") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor2b" (formula "3") (term "0,0"))
                     (rule "add_literals" (formula "3") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "3") (term "1,0,0"))
                     (rule "add_zero_right" (formula "3") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                     (rule "mul_literals" (formula "3") (term "1"))
                     (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "3"))
                     (rule "leq_literals" (formula "10") (term "0"))
                      (builtin "One Step Simplification" (formula "10"))
                     (rule "true_left" (formula "10"))
                     (rule "cnf_rightDist" (formula "27"))
                     (rule "andLeft" (formula "27"))
                     (rule "commute_or" (formula "28"))
                     (rule "cnf_rightDist" (formula "24"))
                     (rule "andLeft" (formula "24"))
                     (rule "commute_or" (formula "25"))
                     (rule "cnf_rightDist" (formula "28"))
                     (rule "andLeft" (formula "28"))
                     (rule "commute_or" (formula "29"))
                     (rule "cnf_rightDist" (formula "24"))
                     (rule "andLeft" (formula "24"))
                     (rule "commute_or" (formula "25"))
                     (rule "polySimp_critPair" (formula "33") (ifseqformula "28"))
                     (rule "polySimp_mulComm0" (formula "33") (term "0,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "33") (term "1,1,1,0"))
                     (rule "polySimp_rightDist" (formula "33") (term "0,0"))
                     (rule "polySimp_mulComm1" (formula "33") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "33") (term "0,1,0,0"))
                     (rule "polySimp_mulAssoc" (formula "33") (term "0,0,0"))
                     (rule "polySimp_rightDist" (formula "33") (term "1,0"))
                     (rule "polySimp_mulComm1" (formula "33") (term "1,1,0"))
                     (rule "polySimp_mulComm1" (formula "33") (term "0,1,1,0"))
                     (rule "polySimp_mulAssoc" (formula "33") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "33") (term "0"))
                     (rule "polySimp_addComm1" (formula "33") (term "0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "33") (term "0"))
                     (rule "add_literals" (formula "33") (term "1,1,0"))
                     (rule "times_zero_1" (formula "33") (term "1,0"))
                     (rule "add_zero_right" (formula "33") (term "0"))
                     (rule "polySimp_addComm0" (formula "33") (term "0"))
                     (rule "polySimp_sepNegMonomial" (formula "33"))
                     (rule "polySimp_mulLiterals" (formula "33") (term "0"))
                     (rule "polySimp_elimOne" (formula "33") (term "0"))
                     (rule "polyDiv_pullOut" (formula "13") (term "0") (inst "polyDivCoeff=quotient_2"))
                     (rule "polySimp_mulComm1" (formula "13") (term "1,0,0,2,0"))
                     (rule "polySimp_mulComm0" (formula "13") (term "0,1,0,0,2,0"))
                     (rule "polySimp_addComm0" (formula "13") (term "2,0"))
                     (rule "applyEq" (formula "13") (term "0,1,0,1,2,0") (ifseqformula "15"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1,2,0"))
                     (rule "polySimp_elimOne" (formula "13") (term "1,0,1,2,0"))
                     (rule "polySimp_pullOutFactor2" (formula "13") (term "0,1,2,0"))
                     (rule "add_literals" (formula "13") (term "1,0,1,2,0"))
                     (rule "times_zero_1" (formula "13") (term "0,1,2,0"))
                     (rule "inEqSimp_contradEq7" (formula "13") (term "0,0") (ifseqformula "3"))
                     (rule "times_zero_1" (formula "13") (term "1,0,0,0,0"))
                     (rule "add_zero_right" (formula "13") (term "0,0,0,0"))
                     (rule "leq_literals" (formula "13") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "13"))
                     (rule "polySimp_homoEq" (formula "13"))
                     (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "13") (term "1,0"))
                     (rule "polySimp_mulComm0" (formula "13") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "13") (term "0"))
                     (rule "polySimp_pullOutFactor1" (formula "13") (term "0,0"))
                     (rule "add_literals" (formula "13") (term "1,0,0"))
                     (rule "times_zero_1" (formula "13") (term "0,0"))
                     (rule "add_zero_left" (formula "13") (term "0"))
                     (rule "polySimp_invertEq" (formula "13"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                     (rule "times_zero_2" (formula "13") (term "1"))
                     (rule "polySimp_elimOne" (formula "13") (term "0"))
                     (rule "polyDiv_zero" (formula "13") (term "0"))
                      (builtin "One Step Simplification" (formula "13"))
                     (rule "div_literals" (formula "13") (term "0,1"))
                     (rule "inEqSimp_contradEq7" (formula "13") (term "0,0") (ifseqformula "3"))
                     (rule "times_zero_1" (formula "13") (term "1,0,0,0,0"))
                     (rule "add_zero_right" (formula "13") (term "0,0,0,0"))
                     (rule "leq_literals" (formula "13") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "13"))
                     (rule "true_left" (formula "13"))
                     (rule "allLeft" (formula "34") (inst "t=x_0"))
                     (rule "applyEq" (formula "34") (term "0,0,1") (ifseqformula "9"))
                     (rule "polySimp_mulComm0" (formula "34") (term "0,1"))
                     (rule "applyEq" (formula "34") (term "0,0,0,1,0,0") (ifseqformula "11"))
                     (rule "polySimp_mulComm0" (formula "34") (term "0,0,1,0,0"))
                     (rule "replace_known_left" (formula "34") (term "0,1,0,0") (ifseqformula "12"))
                      (builtin "One Step Simplification" (formula "34"))
                     (rule "inEqSimp_contradEq3" (formula "34") (term "1") (ifseqformula "2"))
                     (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,1"))
                     (rule "add_literals" (formula "34") (term "1,1,0,0,1"))
                     (rule "times_zero_1" (formula "34") (term "1,0,0,1"))
                     (rule "add_zero_right" (formula "34") (term "0,0,1"))
                     (rule "qeq_literals" (formula "34") (term "0,1"))
                      (builtin "One Step Simplification" (formula "34"))
                     (rule "inEqSimp_contradInEq1" (formula "34") (term "0") (ifseqformula "3"))
                     (rule "qeq_literals" (formula "34") (term "0,0"))
                      (builtin "One Step Simplification" (formula "34"))
                     (rule "notLeft" (formula "34"))
                     (rule "allLeft" (formula "34") (inst "t=result_gcdHelp"))
                     (rule "applyEq" (formula "34") (term "0,0,0,1,0") (ifseqformula "31"))
                     (rule "replace_known_left" (formula "34") (term "0,1,0") (ifseqformula "33"))
                      (builtin "One Step Simplification" (formula "34"))
                     (rule "applyEq" (formula "34") (term "0,0,0,1,0") (ifseqformula "26"))
                     (rule "replace_known_left" (formula "34") (term "0,1,0") (ifseqformula "27"))
                      (builtin "One Step Simplification" (formula "34"))
                     (rule "polySimp_critPair" (formula "14") (ifseqformula "12"))
                     (rule "polySimp_mulComm0" (formula "14") (term "0,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "14") (term "1,1,1,0"))
                     (rule "polySimp_rightDist" (formula "14") (term "0,0"))
                     (rule "polySimp_mulComm1" (formula "14") (term "1,0,0"))
                     (rule "polySimp_mulAssoc" (formula "14") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "14") (term "0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "14") (term "1,0"))
                     (rule "polySimp_mulComm1" (formula "14") (term "1,1,0"))
                     (rule "polySimp_mulAssoc" (formula "14") (term "0,1,0"))
                     (rule "polySimp_mulComm0" (formula "14") (term "0,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "14") (term "0"))
                     (rule "polySimp_addComm1" (formula "14") (term "0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "14") (term "0"))
                     (rule "add_literals" (formula "14") (term "1,1,0"))
                     (rule "times_zero_1" (formula "14") (term "1,0"))
                     (rule "add_zero_right" (formula "14") (term "0"))
                     (rule "polySimp_addComm0" (formula "14") (term "0"))
                     (rule "polySimp_sepNegMonomial" (formula "14"))
                     (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                     (rule "polySimp_elimOne" (formula "14") (term "0"))
                     (rule "polyDiv_pullOut" (formula "10") (term "0") (inst "polyDivCoeff=quotient_3"))
                     (rule "polySimp_mulComm1" (formula "10") (term "1,0,0,2,0"))
                     (rule "polySimp_mulComm0" (formula "10") (term "0,1,0,0,2,0"))
                     (rule "polySimp_addComm0" (formula "10") (term "2,0"))
                     (rule "applyEq" (formula "10") (term "0,1,0,1,2,0") (ifseqformula "12"))
                     (rule "polySimp_pullOutFactor1" (formula "10") (term "0,1,2,0"))
                     (rule "add_literals" (formula "10") (term "1,0,1,2,0"))
                     (rule "times_zero_1" (formula "10") (term "0,1,2,0"))
                     (rule "inEqSimp_contradEq7" (formula "10") (term "0,0") (ifseqformula "3"))
                     (rule "times_zero_1" (formula "10") (term "1,0,0,0,0"))
                     (rule "add_zero_right" (formula "10") (term "0,0,0,0"))
                     (rule "leq_literals" (formula "10") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "10"))
                     (rule "polySimp_homoEq" (formula "10"))
                     (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "10") (term "1,0"))
                     (rule "polySimp_mulComm0" (formula "10") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "10") (term "0"))
                     (rule "polySimp_pullOutFactor1" (formula "10") (term "0,0"))
                     (rule "add_literals" (formula "10") (term "1,0,0"))
                     (rule "times_zero_1" (formula "10") (term "0,0"))
                     (rule "add_zero_left" (formula "10") (term "0"))
                     (rule "polySimp_invertEq" (formula "10"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                     (rule "times_zero_2" (formula "10") (term "1"))
                     (rule "polySimp_elimOne" (formula "10") (term "0"))
                     (rule "polyDiv_zero" (formula "10") (term "0"))
                      (builtin "One Step Simplification" (formula "10"))
                     (rule "div_literals" (formula "10") (term "0,1"))
                     (rule "inEqSimp_contradEq7" (formula "10") (term "0,0") (ifseqformula "3"))
                     (rule "times_zero_1" (formula "10") (term "1,0,0,0,0"))
                     (rule "add_zero_right" (formula "10") (term "0,0,0,0"))
                     (rule "leq_literals" (formula "10") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "10"))
                     (rule "true_left" (formula "10"))
                     (rule "cut_direct" (formula "23") (term "0"))
                     (branch "CUT: result_gcdHelp = 0 TRUE"
                         (builtin "One Step Simplification" (formula "24"))
                        (rule "true_left" (formula "24"))
                        (rule "replace_known_left" (formula "25") (term "0") (ifseqformula "23"))
                         (builtin "One Step Simplification" (formula "25"))
                        (rule "true_left" (formula "25"))
                        (rule "replace_known_left" (formula "28") (term "0") (ifseqformula "23"))
                         (builtin "One Step Simplification" (formula "28"))
                        (rule "true_left" (formula "28"))
                        (rule "replace_known_left" (formula "27") (term "0") (ifseqformula "23"))
                         (builtin "One Step Simplification" (formula "27"))
                        (rule "true_left" (formula "27"))
                        (rule "replace_known_left" (formula "27") (term "0") (ifseqformula "23"))
                         (builtin "One Step Simplification" (formula "27"))
                        (rule "true_left" (formula "27"))
                        (rule "replace_known_left" (formula "24") (term "0") (ifseqformula "23"))
                         (builtin "One Step Simplification" (formula "24"))
                        (rule "true_left" (formula "24"))
                        (rule "applyEq" (formula "2") (term "1,1") (ifseqformula "23"))
                        (rule "add_zero_right" (formula "2") (term "1"))
                        (rule "applyEq" (formula "29") (term "1,0,1") (ifseqformula "23"))
                        (rule "times_zero_1" (formula "29") (term "0,1"))
                        (rule "eqSymm" (formula "29") (term "1"))
                        (rule "replace_known_left" (formula "29") (term "1") (ifseqformula "23"))
                         (builtin "One Step Simplification" (formula "29"))
                        (rule "true_left" (formula "29"))
                        (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "23"))
                        (rule "applyEq" (formula "27") (term "1,0,0") (ifseqformula "23"))
                        (rule "eqSymm" (formula "27"))
                        (rule "polySimp_homoEq" (formula "27"))
                        (rule "polySimp_mulLiterals" (formula "27") (term "1,0"))
                        (rule "polySimp_elimOne" (formula "27") (term "1,0"))
                        (rule "applyEq" (formula "28") (term "1,0") (ifseqformula "23"))
                        (rule "times_zero_1" (formula "28") (term "0"))
                        (rule "eqSymm" (formula "28"))
                        (rule "applyEq" (formula "6") (term "0,1") (ifseqformula "23"))
                        (rule "times_zero_2" (formula "6") (term "1"))
                        (rule "applyEq" (formula "26") (term "1,0") (ifseqformula "23"))
                        (rule "eqSymm" (formula "26"))
                        (rule "applyEq" (formula "8") (term "0") (ifseqformula "23"))
                        (rule "qeq_literals" (formula "8"))
                        (rule "true_left" (formula "8"))
                        (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "22"))
                        (rule "times_zero_2" (formula "5") (term "0,0"))
                        (rule "applyEq" (formula "23") (term "1,0") (ifseqformula "22"))
                        (rule "eqSymm" (formula "23"))
                        (rule "applyEq" (formula "24") (term "1,0") (ifseqformula "22"))
                        (rule "times_zero_1" (formula "24") (term "0"))
                        (rule "eqSymm" (formula "24"))
                        (rule "applyEq" (formula "28") (term "0,0,0,1,0") (ifseqformula "22"))
                        (rule "jdiv_axiom_inline" (formula "28") (term "0,0,1,0"))
                        (rule "qeq_literals" (formula "28") (term "0,0,0,1,0"))
                         (builtin "One Step Simplification" (formula "28"))
                        (rule "applyEq" (formula "8") (term "0,0") (ifseqformula "22"))
                        (rule "jdiv_axiom_inline" (formula "8") (term "0"))
                        (rule "times_zero_2" (formula "8") (term "0,0,2,0"))
                        (rule "qeq_literals" (formula "8") (term "0,0"))
                         (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "1")))
                        (rule "true_left" (formula "8"))
                        (rule "applyEq" (formula "7") (term "0,1,0,1") (ifseqformula "21"))
                        (rule "times_zero_2" (formula "7") (term "1,0,1"))
                        (rule "add_zero_right" (formula "7") (term "0,1"))
                        (rule "applyEq" (formula "4") (term "1,0,1") (ifseqformula "21"))
                        (rule "add_zero_right" (formula "4") (term "0,1"))
                        (rule "applyEq" (formula "8") (term "0,0") (ifseqformula "23"))
                        (rule "jdiv_axiom_inline" (formula "8") (term "0"))
                        (rule "qeq_literals" (formula "8") (term "0,0"))
                         (builtin "One Step Simplification" (formula "8"))
                        (rule "applyEq" (formula "13") (term "0") (ifseqformula "23"))
                        (rule "qeq_literals" (formula "13"))
                        (rule "closeFalse" (formula "13"))
                     )
                     (branch "CUT: result_gcdHelp = 0 FALSE"
                         (builtin "One Step Simplification" (formula "23"))
                        (rule "replace_known_right" (formula "28") (term "0") (ifseqformula "36"))
                         (builtin "One Step Simplification" (formula "28"))
                        (rule "replace_known_right" (formula "25") (term "0") (ifseqformula "36"))
                         (builtin "One Step Simplification" (formula "25"))
                        (rule "replace_known_right" (formula "29") (term "0") (ifseqformula "36"))
                         (builtin "One Step Simplification" (formula "29"))
                        (rule "replace_known_right" (formula "24") (term "0") (ifseqformula "36"))
                         (builtin "One Step Simplification" (formula "24"))
                        (rule "replace_known_right" (formula "30") (term "0") (ifseqformula "36"))
                         (builtin "One Step Simplification" (formula "30"))
                        (rule "applyEq" (formula "33") (term "0,0") (ifseqformula "29"))
                        (rule "polySimp_mulComm0" (formula "33") (term "0"))
                        (rule "applyEq" (formula "32") (term "0,0") (ifseqformula "29"))
                        (rule "eqSymm" (formula "32"))
                        (rule "polySimp_homoEq" (formula "32"))
                        (rule "polySimp_mulLiterals" (formula "32") (term "1,0"))
                        (rule "polySimp_elimOne" (formula "32") (term "1,0"))
                        (rule "polySimp_mulComm0" (formula "32") (term "0,0"))
                        (rule "applyEq" (formula "27") (term "0,0") (ifseqformula "24"))
                        (rule "polySimp_mulComm0" (formula "27") (term "0"))
                        (rule "applyEq" (formula "30") (term "0") (ifseqformula "33"))
                        (rule "inEqSimp_homoInEq1" (formula "30"))
                        (rule "polySimp_mulLiterals" (formula "30") (term "1,0"))
                        (rule "polySimp_elimOne" (formula "30") (term "1,0"))
                        (rule "polySimp_addComm1" (formula "30") (term "0"))
                        (rule "polySimp_pullOutFactor2b" (formula "30") (term "0,0"))
                        (rule "add_literals" (formula "30") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "30") (term "1,0,0"))
                        (rule "add_zero_right" (formula "30") (term "0,0"))
                        (rule "applyEq" (formula "28") (term "0") (ifseqformula "33"))
                        (rule "inEqSimp_homoInEq0" (formula "28"))
                        (rule "polySimp_mulLiterals" (formula "28") (term "1,0"))
                        (rule "polySimp_pullOutFactor0" (formula "28") (term "0"))
                        (rule "add_literals" (formula "28") (term "1,0"))
                        (rule "times_zero_1" (formula "28") (term "0"))
                        (rule "qeq_literals" (formula "28"))
                        (rule "true_left" (formula "28"))
                        (rule "applyEq" (formula "30") (term "1") (ifseqformula "28"))
                        (rule "applyEq" (formula "26") (term "1") (ifseqformula "24"))
                        (rule "applyEq" (formula "25") (term "0") (ifseqformula "27"))
                        (rule "inEqSimp_homoInEq1" (formula "25"))
                        (rule "polySimp_addComm1" (formula "25") (term "0"))
                        (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0"))
                        (rule "add_literals" (formula "25") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "25") (term "1,0,0"))
                        (rule "add_zero_right" (formula "25") (term "0,0"))
                        (rule "applyEq" (formula "23") (term "0") (ifseqformula "26"))
                        (rule "inEqSimp_homoInEq0" (formula "23"))
                        (rule "polySimp_pullOutFactor1" (formula "23") (term "0"))
                        (rule "add_literals" (formula "23") (term "1,0"))
                        (rule "times_zero_1" (formula "23") (term "0"))
                        (rule "qeq_literals" (formula "23"))
                        (rule "true_left" (formula "23"))
                        (rule "applyEq" (formula "29") (term "0,1,0") (ifseqformula "23"))
                        (rule "polySimp_mulComm0" (formula "29") (term "1,0"))
                        (rule "polySimp_addComm0" (formula "29") (term "0"))
                        (rule "polySimp_sepPosMonomial" (formula "29"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "27"))
                        (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                        (rule "polySimp_elimOne" (formula "27") (term "0"))
                        (rule "inEqSimp_contradEq7" (formula "33") (ifseqformula "27"))
                        (rule "times_zero_1" (formula "33") (term "1,0,0"))
                        (rule "add_zero_right" (formula "33") (term "0,0"))
                        (rule "leq_literals" (formula "33") (term "0"))
                         (builtin "One Step Simplification" (formula "33"))
                        (rule "false_right" (formula "33"))
                        (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "27"))
                        (rule "leq_literals" (formula "8") (term "0"))
                         (builtin "One Step Simplification" (formula "8"))
                        (rule "true_left" (formula "8"))
                        (rule "inEqSimp_contradInEq1" (formula "30") (term "0") (ifseqformula "26"))
                        (rule "qeq_literals" (formula "30") (term "0,0"))
                         (builtin "One Step Simplification" (formula "30"))
                        (rule "jdiv_axiom" (formula "32") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "0,0,2,1"))
                        (rule "eqSymm" (formula "1"))
                        (rule "polySimp_elimOne" (formula "1") (term "0,0,2,0"))
                        (rule "inEqSimp_invertInEq1" (formula "1") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0"))
                        (rule "times_zero_2" (formula "1") (term "1,0,0"))
                        (rule "polySimp_elimOne" (formula "1") (term "0,0,0"))
                        (rule "inEqSimp_subsumption0" (formula "1") (term "0,0") (ifseqformula "17"))
                        (rule "leq_literals" (formula "1") (term "0,0,0"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "eqSymm" (formula "1"))
                        (rule "applyEq" (formula "33") (term "0,0") (ifseqformula "1"))
                        (rule "polyDiv_pullOut" (formula "33") (term "0,0") (inst "polyDivCoeff=quotient_2"))
                        (rule "polySimp_mulComm1" (formula "33") (term "1,0,0,2,0,0"))
                        (rule "polySimp_mulComm0" (formula "33") (term "0,1,0,0,2,0,0"))
                        (rule "polySimp_addComm0" (formula "33") (term "2,0,0"))
                        (rule "applyEq" (formula "33") (term "0,1,0,1,2,0,0") (ifseqformula "14"))
                        (rule "polySimp_mulLiterals" (formula "33") (term "1,0,1,2,0,0"))
                        (rule "polySimp_pullOutFactor0" (formula "33") (term "0,1,2,0,0"))
                        (rule "add_literals" (formula "33") (term "1,0,1,2,0,0"))
                        (rule "times_zero_1" (formula "33") (term "0,1,2,0,0"))
                        (rule "inEqSimp_contradEq7" (formula "33") (term "0,0,0") (ifseqformula "4"))
                        (rule "times_zero_1" (formula "33") (term "1,0,0,0,0,0"))
                        (rule "add_zero_right" (formula "33") (term "0,0,0,0,0"))
                        (rule "leq_literals" (formula "33") (term "0,0,0,0"))
                         (builtin "One Step Simplification" (formula "33"))
                        (rule "polySimp_mulComm0" (formula "33") (term "0"))
                        (rule "polySimp_rightDist" (formula "33") (term "0"))
                        (rule "polySimp_homoEq" (formula "33"))
                        (rule "polySimp_mulComm0" (formula "33") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "33") (term "1,0"))
                        (rule "polySimp_mulComm0" (formula "33") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "33") (term "0"))
                        (rule "applyEq" (formula "33") (term "0,1,0,0") (ifseqformula "14"))
                        (rule "polySimp_mulLiterals" (formula "33") (term "1,0,0"))
                        (rule "polySimp_pullOutFactor0" (formula "33") (term "0,0"))
                        (rule "add_literals" (formula "33") (term "1,0,0"))
                        (rule "times_zero_1" (formula "33") (term "0,0"))
                        (rule "add_zero_left" (formula "33") (term "0"))
                        (rule "polySimp_invertEq" (formula "33"))
                        (rule "polySimp_mulLiterals" (formula "33") (term "0"))
                        (rule "times_zero_2" (formula "33") (term "1"))
                        (rule "polySimp_elimOne" (formula "33") (term "0"))
                        (rule "polyDiv_zero" (formula "33") (term "0,0"))
                        (rule "div_literals" (formula "33") (term "1,0,0"))
                        (rule "inEqSimp_contradEq7" (formula "33") (term "0,0,0") (ifseqformula "4"))
                        (rule "times_zero_1" (formula "33") (term "1,0,0,0,0,0"))
                        (rule "add_zero_right" (formula "33") (term "0,0,0,0,0"))
                        (rule "leq_literals" (formula "33") (term "0,0,0,0"))
                         (builtin "One Step Simplification" (formula "33"))
                        (rule "times_zero_2" (formula "33") (term "0"))
                         (builtin "One Step Simplification" (formula "33"))
                        (rule "closeTrue" (formula "33"))
                     )
                  )
                  (branch "result_gcdHelp >= 0 FALSE"
                     (rule "eqSymm" (formula "7"))
                     (rule "replace_known_right" (formula "26") (term "0,1,1") (ifseqformula "30"))
                      (builtin "One Step Simplification" (formula "26"))
                     (rule "replace_known_right" (formula "23") (term "0,1,1") (ifseqformula "30"))
                      (builtin "One Step Simplification" (formula "23"))
                     (rule "inEqSimp_geqRight" (formula "30"))
                     (rule "times_zero_1" (formula "1") (term "1,0,0"))
                     (rule "add_zero_right" (formula "1") (term "0,0"))
                     (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "8"))
                     (rule "polySimp_mulComm1" (formula "31") (term "0"))
                     (rule "polySimp_homoEq" (formula "31"))
                     (rule "polySimp_mulLiterals" (formula "31") (term "1,0"))
                     (rule "polySimp_elimOne" (formula "31") (term "1,0"))
                     (rule "polySimp_mulComm0" (formula "31") (term "1,0"))
                     (rule "polySimp_sepPosMonomial" (formula "31"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                     (rule "mul_literals" (formula "1") (term "1"))
                     (rule "inEqSimp_contradEq3" (formula "24") (term "0") (ifseqformula "1"))
                     (rule "times_zero_1" (formula "24") (term "1,0,0,0"))
                     (rule "add_zero_right" (formula "24") (term "0,0,0"))
                     (rule "qeq_literals" (formula "24") (term "0,0"))
                      (builtin "One Step Simplification" (formula "24"))
                     (rule "andLeft" (formula "24"))
                     (rule "andLeft" (formula "24"))
                     (rule "applyEq" (formula "28") (term "0,0") (ifseqformula "25"))
                     (rule "polySimp_mulComm0" (formula "28") (term "0"))
                     (rule "applyEq" (formula "24") (term "0") (ifseqformula "28"))
                     (rule "inEqSimp_homoInEq0" (formula "24"))
                     (rule "polySimp_pullOutFactor1" (formula "24") (term "0"))
                     (rule "add_literals" (formula "24") (term "1,0"))
                     (rule "times_zero_1" (formula "24") (term "0"))
                     (rule "qeq_literals" (formula "24"))
                     (rule "true_left" (formula "24"))
                     (rule "applyEq" (formula "25") (term "0") (ifseqformula "27"))
                     (rule "inEqSimp_homoInEq1" (formula "25"))
                     (rule "polySimp_addComm1" (formula "25") (term "0"))
                     (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0"))
                     (rule "add_literals" (formula "25") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "25") (term "1,0,0"))
                     (rule "add_zero_right" (formula "25") (term "0,0"))
                     (rule "applyEq" (formula "26") (term "1") (ifseqformula "24"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "25"))
                     (rule "mul_literals" (formula "25") (term "1"))
                     (rule "inEqSimp_contradEq3" (formula "27") (term "0") (ifseqformula "1"))
                     (rule "times_zero_1" (formula "27") (term "1,0,0,0"))
                     (rule "add_zero_right" (formula "27") (term "0,0,0"))
                     (rule "qeq_literals" (formula "27") (term "0,0"))
                      (builtin "One Step Simplification" (formula "27"))
                     (rule "andLeft" (formula "27"))
                     (rule "andLeft" (formula "27"))
                     (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "28"))
                     (rule "polySimp_mulComm0" (formula "31") (term "0"))
                     (rule "applyEq" (formula "27") (term "0") (ifseqformula "31"))
                     (rule "inEqSimp_homoInEq0" (formula "27"))
                     (rule "polySimp_mulLiterals" (formula "27") (term "1,0"))
                     (rule "polySimp_pullOutFactor0" (formula "27") (term "0"))
                     (rule "add_literals" (formula "27") (term "1,0"))
                     (rule "times_zero_1" (formula "27") (term "0"))
                     (rule "qeq_literals" (formula "27"))
                     (rule "true_left" (formula "27"))
                     (rule "applyEq" (formula "28") (term "0") (ifseqformula "30"))
                     (rule "inEqSimp_homoInEq1" (formula "28"))
                     (rule "polySimp_mulLiterals" (formula "28") (term "1,0"))
                     (rule "polySimp_elimOne" (formula "28") (term "1,0"))
                     (rule "polySimp_addComm1" (formula "28") (term "0"))
                     (rule "polySimp_pullOutFactor2b" (formula "28") (term "0,0"))
                     (rule "add_literals" (formula "28") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "28") (term "1,0,0"))
                     (rule "add_zero_right" (formula "28") (term "0,0"))
                     (rule "applyEq" (formula "29") (term "1") (ifseqformula "27"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "28"))
                     (rule "mul_literals" (formula "28") (term "1"))
                     (rule "inEqSimp_strengthen0" (formula "6") (ifseqformula "31"))
                     (rule "inEqSimp_contradEq3" (formula "31") (ifseqformula "6"))
                     (rule "polySimp_mulAssoc" (formula "31") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "31") (term "0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "31") (term "1,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "31") (term "0,0"))
                     (rule "add_literals" (formula "31") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "31") (term "1,0,0"))
                     (rule "add_zero_right" (formula "31") (term "0,0"))
                     (rule "qeq_literals" (formula "31") (term "0"))
                      (builtin "One Step Simplification" (formula "31"))
                     (rule "false_right" (formula "31"))
                     (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "6"))
                     (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0"))
                     (rule "polySimp_elimOne" (formula "7") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "7") (term "0"))
                     (rule "polySimp_rightDist" (formula "7") (term "0,0,0"))
                     (rule "mul_literals" (formula "7") (term "0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "7") (term "1,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "7") (term "0,0,0"))
                     (rule "add_literals" (formula "7") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0"))
                     (rule "add_literals" (formula "7") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "7") (term "1,0,0"))
                     (rule "add_zero_right" (formula "7") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                     (rule "mul_literals" (formula "7") (term "1"))
                     (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "7"))
                     (rule "leq_literals" (formula "10") (term "0"))
                      (builtin "One Step Simplification" (formula "10"))
                     (rule "true_left" (formula "10"))
                     (rule "polyDiv_pullOut" (formula "13") (term "0") (inst "polyDivCoeff=quotient_2"))
                     (rule "polySimp_mulComm1" (formula "13") (term "1,0,0,2,0"))
                     (rule "polySimp_mulComm0" (formula "13") (term "0,1,0,0,2,0"))
                     (rule "polySimp_addComm0" (formula "13") (term "2,0"))
                     (rule "applyEq" (formula "13") (term "0,1,0,1,2,0") (ifseqformula "15"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1,2,0"))
                     (rule "polySimp_pullOutFactor0" (formula "13") (term "0,1,2,0"))
                     (rule "add_literals" (formula "13") (term "1,0,1,2,0"))
                     (rule "times_zero_1" (formula "13") (term "0,1,2,0"))
                     (rule "inEqSimp_contradEq7" (formula "13") (term "0,0") (ifseqformula "7"))
                     (rule "times_zero_1" (formula "13") (term "1,0,0,0,0"))
                     (rule "add_zero_right" (formula "13") (term "0,0,0,0"))
                     (rule "leq_literals" (formula "13") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "13"))
                     (rule "polySimp_homoEq" (formula "13"))
                     (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "13") (term "1,0"))
                     (rule "polySimp_mulComm0" (formula "13") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "13") (term "0"))
                     (rule "polySimp_pullOutFactor1" (formula "13") (term "0,0"))
                     (rule "add_literals" (formula "13") (term "1,0,0"))
                     (rule "times_zero_1" (formula "13") (term "0,0"))
                     (rule "add_zero_left" (formula "13") (term "0"))
                     (rule "polySimp_invertEq" (formula "13"))
                     (rule "times_zero_2" (formula "13") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                     (rule "polySimp_elimOne" (formula "13") (term "0"))
                     (rule "polyDiv_zero" (formula "13") (term "0"))
                      (builtin "One Step Simplification" (formula "13"))
                     (rule "div_literals" (formula "13") (term "0,1"))
                     (rule "inEqSimp_contradEq7" (formula "13") (term "0,0") (ifseqformula "7"))
                     (rule "times_zero_1" (formula "13") (term "1,0,0,0,0"))
                     (rule "add_zero_right" (formula "13") (term "0,0,0,0"))
                     (rule "leq_literals" (formula "13") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "13"))
                     (rule "true_left" (formula "13"))
                     (rule "allLeft" (formula "29") (inst "t=x_0"))
                     (rule "applyEq" (formula "29") (term "0,0,0,1,0,0") (ifseqformula "11"))
                     (rule "polySimp_mulComm0" (formula "29") (term "0,0,1,0,0"))
                     (rule "replace_known_left" (formula "29") (term "0,1,0,0") (ifseqformula "12"))
                      (builtin "One Step Simplification" (formula "29"))
                     (rule "applyEq" (formula "29") (term "0,0,1") (ifseqformula "9"))
                     (rule "polySimp_mulComm1" (formula "29") (term "0,1"))
                     (rule "polySimp_homoEq" (formula "29") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "29") (term "1,0,1"))
                     (rule "polySimp_elimOne" (formula "29") (term "1,0,1"))
                     (rule "polySimp_mulComm0" (formula "29") (term "1,0,1"))
                     (rule "polySimp_sepPosMonomial" (formula "29") (term "1"))
                     (rule "inEqSimp_contradEq3" (formula "29") (term "1") (ifseqformula "6"))
                     (rule "polySimp_mulAssoc" (formula "29") (term "1,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "29") (term "0,1,0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0,1"))
                     (rule "polySimp_pullOutFactor0b" (formula "29") (term "0,0,1"))
                     (rule "add_literals" (formula "29") (term "1,1,0,0,1"))
                     (rule "times_zero_1" (formula "29") (term "1,0,0,1"))
                     (rule "add_zero_right" (formula "29") (term "0,0,1"))
                     (rule "qeq_literals" (formula "29") (term "0,1"))
                      (builtin "One Step Simplification" (formula "29"))
                     (rule "inEqSimp_contradInEq1" (formula "29") (term "0") (ifseqformula "7"))
                     (rule "qeq_literals" (formula "29") (term "0,0"))
                      (builtin "One Step Simplification" (formula "29"))
                     (rule "notLeft" (formula "29"))
                     (rule "polyDiv_pullOut" (formula "10") (term "0") (inst "polyDivCoeff=quotient_3"))
                     (rule "polySimp_mulComm1" (formula "10") (term "1,0,0,2,0"))
                     (rule "polySimp_mulComm0" (formula "10") (term "0,1,0,0,2,0"))
                     (rule "polySimp_addComm0" (formula "10") (term "2,0"))
                     (rule "applyEq" (formula "10") (term "0,1,0,1,2,0") (ifseqformula "12"))
                     (rule "polySimp_pullOutFactor1" (formula "10") (term "0,1,2,0"))
                     (rule "add_literals" (formula "10") (term "1,0,1,2,0"))
                     (rule "times_zero_1" (formula "10") (term "0,1,2,0"))
                     (rule "inEqSimp_contradEq7" (formula "10") (term "0,0") (ifseqformula "7"))
                     (rule "times_zero_1" (formula "10") (term "1,0,0,0,0"))
                     (rule "add_zero_right" (formula "10") (term "0,0,0,0"))
                     (rule "leq_literals" (formula "10") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "10"))
                     (rule "polySimp_homoEq" (formula "10"))
                     (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "10") (term "1,0"))
                     (rule "polySimp_mulComm0" (formula "10") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "10") (term "0"))
                     (rule "polySimp_pullOutFactor1" (formula "10") (term "0,0"))
                     (rule "add_literals" (formula "10") (term "1,0,0"))
                     (rule "times_zero_1" (formula "10") (term "0,0"))
                     (rule "add_zero_left" (formula "10") (term "0"))
                     (rule "polySimp_invertEq" (formula "10"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                     (rule "times_zero_2" (formula "10") (term "1"))
                     (rule "polySimp_elimOne" (formula "10") (term "0"))
                     (rule "polyDiv_zero" (formula "10") (term "0"))
                      (builtin "One Step Simplification" (formula "10"))
                     (rule "div_literals" (formula "10") (term "0,1"))
                     (rule "inEqSimp_contradEq7" (formula "10") (term "0,0") (ifseqformula "7"))
                     (rule "times_zero_1" (formula "10") (term "1,0,0,0,0"))
                     (rule "add_zero_right" (formula "10") (term "0,0,0,0"))
                     (rule "leq_literals" (formula "10") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "10"))
                     (rule "true_left" (formula "10"))
                     (rule "polySimp_critPair" (formula "13") (ifseqformula "11"))
                     (rule "polySimp_mulComm0" (formula "13") (term "0,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "13") (term "1,1,1,0"))
                     (rule "polySimp_rightDist" (formula "13") (term "0,0"))
                     (rule "polySimp_mulComm1" (formula "13") (term "1,0,0"))
                     (rule "polySimp_mulAssoc" (formula "13") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "13") (term "0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "13") (term "1,0"))
                     (rule "polySimp_mulComm1" (formula "13") (term "1,1,0"))
                     (rule "polySimp_mulAssoc" (formula "13") (term "0,1,0"))
                     (rule "polySimp_mulComm0" (formula "13") (term "0,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "13") (term "0"))
                     (rule "polySimp_addComm1" (formula "13") (term "0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "13") (term "0"))
                     (rule "add_literals" (formula "13") (term "1,1,0"))
                     (rule "times_zero_1" (formula "13") (term "1,0"))
                     (rule "add_zero_right" (formula "13") (term "0"))
                     (rule "polySimp_addComm0" (formula "13") (term "0"))
                     (rule "polySimp_sepNegMonomial" (formula "13"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                     (rule "polySimp_elimOne" (formula "13") (term "0"))
                     (rule "polyDiv_pullOut" (formula "23") (term "0") (inst "polyDivCoeff=quotient_5"))
                     (rule "polySimp_mulComm1" (formula "23") (term "1,0,0,2,0"))
                     (rule "polySimp_mulComm0" (formula "23") (term "0,1,0,0,2,0"))
                     (rule "polySimp_addComm0" (formula "23") (term "2,0"))
                     (rule "applyEq" (formula "23") (term "0,1,0,1,2,0") (ifseqformula "25"))
                     (rule "polySimp_pullOutFactor1" (formula "23") (term "0,1,2,0"))
                     (rule "add_literals" (formula "23") (term "1,0,1,2,0"))
                     (rule "times_zero_1" (formula "23") (term "0,1,2,0"))
                     (rule "inEqSimp_contradEq3" (formula "23") (term "0,0") (ifseqformula "1"))
                     (rule "times_zero_1" (formula "23") (term "1,0,0,0,0"))
                     (rule "add_zero_right" (formula "23") (term "0,0,0,0"))
                     (rule "qeq_literals" (formula "23") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "23"))
                     (rule "polySimp_homoEq" (formula "23"))
                     (rule "polySimp_mulComm0" (formula "23") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "23") (term "1,0"))
                     (rule "polySimp_mulComm0" (formula "23") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "23") (term "0"))
                     (rule "polySimp_pullOutFactor1" (formula "23") (term "0,0"))
                     (rule "add_literals" (formula "23") (term "1,0,0"))
                     (rule "times_zero_1" (formula "23") (term "0,0"))
                     (rule "add_zero_left" (formula "23") (term "0"))
                     (rule "polySimp_invertEq" (formula "23"))
                     (rule "times_zero_2" (formula "23") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                     (rule "polySimp_elimOne" (formula "23") (term "0"))
                     (rule "polyDiv_zero" (formula "23") (term "0"))
                      (builtin "One Step Simplification" (formula "23"))
                     (rule "div_literals" (formula "23") (term "0,1"))
                     (rule "inEqSimp_contradEq3" (formula "23") (term "0,0") (ifseqformula "1"))
                     (rule "times_zero_1" (formula "23") (term "1,0,0,0,0"))
                     (rule "add_zero_right" (formula "23") (term "0,0,0,0"))
                     (rule "qeq_literals" (formula "23") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "23"))
                     (rule "true_left" (formula "23"))
                     (rule "polyDiv_pullOut" (formula "25") (term "0") (inst "polyDivCoeff=quotient_4"))
                     (rule "polySimp_mulComm1" (formula "25") (term "1,0,0,2,0"))
                     (rule "polySimp_mulComm0" (formula "25") (term "0,1,0,0,2,0"))
                     (rule "polySimp_addComm0" (formula "25") (term "2,0"))
                     (rule "applyEq" (formula "25") (term "0,1,0,1,2,0") (ifseqformula "27"))
                     (rule "polySimp_mulLiterals" (formula "25") (term "1,0,1,2,0"))
                     (rule "polySimp_pullOutFactor0" (formula "25") (term "0,1,2,0"))
                     (rule "add_literals" (formula "25") (term "1,0,1,2,0"))
                     (rule "times_zero_1" (formula "25") (term "0,1,2,0"))
                     (rule "inEqSimp_contradEq3" (formula "25") (term "0,0") (ifseqformula "1"))
                     (rule "times_zero_1" (formula "25") (term "1,0,0,0,0"))
                     (rule "add_zero_right" (formula "25") (term "0,0,0,0"))
                     (rule "qeq_literals" (formula "25") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "25"))
                     (rule "polySimp_homoEq" (formula "25"))
                     (rule "polySimp_mulComm0" (formula "25") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "25") (term "1,0"))
                     (rule "polySimp_mulComm0" (formula "25") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "25") (term "0"))
                     (rule "polySimp_pullOutFactor1" (formula "25") (term "0,0"))
                     (rule "add_literals" (formula "25") (term "1,0,0"))
                     (rule "times_zero_1" (formula "25") (term "0,0"))
                     (rule "add_zero_left" (formula "25") (term "0"))
                     (rule "polySimp_invertEq" (formula "25"))
                     (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                     (rule "times_zero_2" (formula "25") (term "1"))
                     (rule "polySimp_elimOne" (formula "25") (term "0"))
                     (rule "polyDiv_zero" (formula "25") (term "0"))
                      (builtin "One Step Simplification" (formula "25"))
                     (rule "div_literals" (formula "25") (term "0,1"))
                     (rule "inEqSimp_contradEq3" (formula "25") (term "0,0") (ifseqformula "1"))
                     (rule "times_zero_1" (formula "25") (term "1,0,0,0,0"))
                     (rule "add_zero_right" (formula "25") (term "0,0,0,0"))
                     (rule "qeq_literals" (formula "25") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "25"))
                     (rule "true_left" (formula "25"))
                     (rule "jdiv_axiom" (formula "28") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "0,0,2,1"))
                     (rule "eqSymm" (formula "1"))
                     (rule "polySimp_elimOne" (formula "1") (term "0,0,2,0"))
                     (rule "inEqSimp_invertInEq1" (formula "1") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0"))
                     (rule "times_zero_2" (formula "1") (term "1,0,0"))
                     (rule "polySimp_elimOne" (formula "1") (term "0,0,0"))
                     (rule "inEqSimp_subsumption0" (formula "1") (term "0,0") (ifseqformula "18"))
                     (rule "leq_literals" (formula "1") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "eqSymm" (formula "1"))
                     (rule "applyEq" (formula "29") (term "0,0") (ifseqformula "1"))
                     (rule "polyDiv_pullOut" (formula "29") (term "0,0") (inst "polyDivCoeff=quotient_2"))
                     (rule "polySimp_mulComm1" (formula "29") (term "1,0,0,2,0,0"))
                     (rule "polySimp_mulComm0" (formula "29") (term "0,1,0,0,2,0,0"))
                     (rule "polySimp_addComm0" (formula "29") (term "2,0,0"))
                     (rule "applyEq" (formula "29") (term "0,1,0,1,2,0,0") (ifseqformula "15"))
                     (rule "polySimp_mulLiterals" (formula "29") (term "1,0,1,2,0,0"))
                     (rule "polySimp_pullOutFactor0" (formula "29") (term "0,1,2,0,0"))
                     (rule "add_literals" (formula "29") (term "1,0,1,2,0,0"))
                     (rule "times_zero_1" (formula "29") (term "0,1,2,0,0"))
                     (rule "inEqSimp_contradEq7" (formula "29") (term "0,0,0") (ifseqformula "8"))
                     (rule "times_zero_1" (formula "29") (term "1,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "29") (term "0,0,0,0,0"))
                     (rule "leq_literals" (formula "29") (term "0,0,0,0"))
                      (builtin "One Step Simplification" (formula "29"))
                     (rule "polySimp_mulComm0" (formula "29") (term "0"))
                     (rule "polySimp_rightDist" (formula "29") (term "0"))
                     (rule "polySimp_homoEq" (formula "29"))
                     (rule "polySimp_mulComm0" (formula "29") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "29") (term "1,0"))
                     (rule "polySimp_mulComm0" (formula "29") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "29") (term "0"))
                     (rule "applyEq" (formula "29") (term "0,1,0,0") (ifseqformula "15"))
                     (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0"))
                     (rule "polySimp_pullOutFactor0" (formula "29") (term "0,0"))
                     (rule "add_literals" (formula "29") (term "1,0,0"))
                     (rule "times_zero_1" (formula "29") (term "0,0"))
                     (rule "add_zero_left" (formula "29") (term "0"))
                     (rule "polySimp_invertEq" (formula "29"))
                     (rule "times_zero_2" (formula "29") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                     (rule "polySimp_elimOne" (formula "29") (term "0"))
                     (rule "polyDiv_zero" (formula "29") (term "0,0"))
                     (rule "div_literals" (formula "29") (term "1,0,0"))
                     (rule "inEqSimp_contradEq7" (formula "29") (term "0,0,0") (ifseqformula "8"))
                     (rule "times_zero_1" (formula "29") (term "1,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "29") (term "0,0,0,0,0"))
                     (rule "leq_literals" (formula "29") (term "0,0,0,0"))
                      (builtin "One Step Simplification" (formula "29"))
                     (rule "times_zero_2" (formula "29") (term "0"))
                      (builtin "One Step Simplification" (formula "29"))
                     (rule "closeTrue" (formula "29"))
                  )
               )
            )
            (branch "Case 2"
                (builtin "One Step Simplification" (formula "10"))
               (rule "closeTrue" (formula "10"))
            )
         )
         (branch "Exceptional Post (gcdHelp)"
             (builtin "One Step Simplification" (formula "8"))
             (builtin "One Step Simplification" (formula "6"))
            (rule "andLeft" (formula "6"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "7") (term "1,0") (ifseqformula "6"))
            (rule "andLeft" (formula "7"))
            (rule "andLeft" (formula "8"))
            (rule "andLeft" (formula "7"))
            (rule "notLeft" (formula "7"))
            (rule "close" (formula "10") (ifseqformula "9"))
         )
         (branch "Pre (gcdHelp)"
             (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "3")))
            (rule "inEqSimp_ltRight" (formula "5"))
            (rule "times_zero_1" (formula "1") (term "0,0"))
            (rule "add_zero_left" (formula "1") (term "0"))
            (rule "inEqSimp_gtToGeq" (formula "2"))
            (rule "polySimp_mulAssoc" (formula "2") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "2") (term "0,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
            (rule "polySimp_elimOne" (formula "2") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "2") (term "0"))
            (rule "inEqSimp_ltToLeq" (formula "3"))
            (rule "times_zero_1" (formula "3") (term "1,0,0"))
            (rule "add_zero_right" (formula "3") (term "0,0"))
            (rule "inEqSimp_commuteGeq" (formula "6") (term "1"))
            (rule "inEqSimp_homoInEq0" (formula "6") (term "1"))
            (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1"))
            (rule "polySimp_elimOne" (formula "6") (term "1,0,1"))
            (rule "inEqSimp_invertInEq1" (formula "6") (term "0"))
            (rule "polySimp_mulLiterals" (formula "6") (term "0,0"))
            (rule "times_zero_2" (formula "6") (term "1,0"))
            (rule "polySimp_elimOne" (formula "6") (term "0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "2"))
            (rule "polySimp_mulComm0" (formula "2") (term "1"))
            (rule "polySimp_rightDist" (formula "2") (term "1"))
            (rule "mul_literals" (formula "2") (term "0,1"))
            (rule "inEqSimp_sepPosMonomial0" (formula "3"))
            (rule "mul_literals" (formula "3") (term "1"))
            (rule "inEqSimp_sepPosMonomial1" (formula "6") (term "1"))
            (rule "inEqSimp_subsumption0" (formula "6") (term "0") (ifseqformula "3"))
            (rule "leq_literals" (formula "6") (term "0,0"))
             (builtin "One Step Simplification" (formula "6"))
            (rule "inEqSimp_geqRight" (formula "6"))
            (rule "polySimp_mulAssoc" (formula "1") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
            (rule "polySimp_elimOne" (formula "1") (term "1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "1"))
            (rule "polySimp_mulComm0" (formula "1") (term "1"))
            (rule "polySimp_rightDist" (formula "1") (term "1"))
            (rule "mul_literals" (formula "1") (term "0,1"))
            (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "3"))
            (rule "andLeft" (formula "1"))
            (rule "inEqSimp_homoInEq1" (formula "1"))
            (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
            (rule "polySimp_rightDist" (formula "1") (term "1,0"))
            (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
            (rule "mul_literals" (formula "1") (term "0,1,0"))
            (rule "polySimp_elimOne" (formula "1") (term "1,1,0"))
            (rule "polySimp_addAssoc" (formula "1") (term "0"))
            (rule "polySimp_addComm1" (formula "1") (term "0,0"))
            (rule "add_literals" (formula "1") (term "0,0,0"))
            (rule "polySimp_pullOutFactor2b" (formula "1") (term "0"))
            (rule "add_literals" (formula "1") (term "1,1,0"))
            (rule "times_zero_1" (formula "1") (term "1,0"))
            (rule "add_zero_right" (formula "1") (term "0"))
            (rule "leq_literals" (formula "1"))
            (rule "closeFalse" (formula "1"))
         )
      )
      (branch "if x_2 false"
          (builtin "One Step Simplification" (formula "6"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "notLeft" (formula "1"))
         (rule "assignment" (formula "6") (term "1"))
          (builtin "One Step Simplification" (formula "6"))
         (rule "assignment" (formula "6") (term "1"))
          (builtin "One Step Simplification" (formula "6"))
         (rule "blockEmpty" (formula "6") (term "1"))
         (rule "returnUnfold" (formula "6") (term "1") (inst "#v0=x"))
         (rule "variableDeclarationAssign" (formula "6") (term "1"))
         (rule "variableDeclaration" (formula "6") (term "1") (newnames "x_3"))
          (builtin "Use Operation Contract" (formula "6") (newnames "heapBefore_gcdHelp,result_gcdHelp,exc_0,heapAfter_gcdHelp,anon_heap_gcdHelp") (contract "Gcd[Gcd::gcdHelp(int,int)].JML normal_behavior operation contract.0"))
         (branch "Post (gcdHelp)"
             (builtin "One Step Simplification" (formula "8"))
             (builtin "One Step Simplification" (formula "5"))
            (rule "andLeft" (formula "5"))
            (rule "andLeft" (formula "6"))
            (rule "andLeft" (formula "7"))
            (rule "assignment" (formula "10") (term "1"))
             (builtin "One Step Simplification" (formula "10"))
            (rule "polySimp_invertEq" (formula "7") (term "0,0"))
            (rule "times_zero_2" (formula "7") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "7") (term "0,0,0"))
            (rule "polySimp_elimOne" (formula "7") (term "0,0,0"))
            (rule "commute_and" (formula "7") (term "0,1"))
            (rule "commute_and_2" (formula "7") (term "0,0,1,1"))
            (rule "methodCallReturn" (formula "10") (term "1"))
            (rule "assignment" (formula "10") (term "1"))
             (builtin "One Step Simplification" (formula "10"))
            (rule "methodCallEmpty" (formula "10") (term "1"))
            (rule "tryEmpty" (formula "10") (term "1"))
             (builtin "One Step Simplification" (formula "10"))
            (rule "emptyModality" (formula "10") (term "1"))
            (rule "andRight" (formula "10"))
            (branch "Case 1"
               (rule "impRight" (formula "10"))
               (rule "andRight" (formula "11"))
               (branch "Case 1"
                  (rule "andRight" (formula "11"))
                  (branch "Case 1"
                      (builtin "One Step Simplification" (formula "1"))
                      (builtin "One Step Simplification" (formula "11"))
                     (rule "replace_known_right" (formula "8") (term "0,0,1") (ifseqformula "11"))
                      (builtin "One Step Simplification" (formula "8"))
                     (rule "replace_known_left" (formula "1") (term "0,1") (ifseqformula "8"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "notLeft" (formula "1"))
                     (rule "inEqSimp_ltRight" (formula "10"))
                     (rule "times_zero_1" (formula "1") (term "0,0"))
                     (rule "add_zero_left" (formula "1") (term "0"))
                     (rule "inEqSimp_gtRight" (formula "10"))
                     (rule "polySimp_mulAssoc" (formula "1") (term "0,0"))
                     (rule "polySimp_mulComm0" (formula "1") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "0,0"))
                     (rule "polySimp_elimOne" (formula "1") (term "0,0"))
                     (rule "polySimp_addComm0" (formula "1") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "3"))
                     (rule "times_zero_1" (formula "3") (term "1,0,0"))
                     (rule "add_zero_right" (formula "3") (term "0,0"))
                     (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "9"))
                     (rule "add_zero_right" (formula "3") (term "0"))
                     (rule "leq_literals" (formula "3"))
                     (rule "closeFalse" (formula "3"))
                  )
                  (branch "Case 2"
                      (builtin "One Step Simplification" (formula "1"))
                      (builtin "One Step Simplification" (formula "11"))
                     (rule "inEqSimp_ltRight" (formula "10"))
                     (rule "times_zero_1" (formula "1") (term "0,0"))
                     (rule "add_zero_left" (formula "1") (term "0"))
                     (rule "inEqSimp_gtRight" (formula "10"))
                     (rule "polySimp_mulAssoc" (formula "1") (term "0,0"))
                     (rule "polySimp_mulComm0" (formula "1") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "0,0"))
                     (rule "polySimp_elimOne" (formula "1") (term "0,0"))
                     (rule "polySimp_addComm0" (formula "1") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "4"))
                     (rule "times_zero_1" (formula "4") (term "1,0,0"))
                     (rule "add_zero_right" (formula "4") (term "0,0"))
                     (rule "inEqSimp_gtToGeq" (formula "10") (term "0,0,0,0,1,1"))
                     (rule "times_zero_1" (formula "10") (term "1,0,0,0,0,0,0,1,1"))
                     (rule "add_zero_right" (formula "10") (term "0,0,0,0,0,0,1,1"))
                     (rule "jmod_axiom" (formula "10") (term "0,0,0,1"))
                     (rule "polySimp_mulComm1" (formula "10") (term "1,0,0,0,1"))
                     (rule "jmod_axiom" (formula "10") (term "0,1,0,0,1,1"))
                     (rule "polySimp_mulComm1" (formula "10") (term "1,0,1,0,0,1,1"))
                     (rule "jmod_axiom" (formula "10") (term "0,1,0,1"))
                     (rule "polySimp_mulComm1" (formula "10") (term "1,0,1,0,1"))
                     (rule "jmod_axiom" (formula "10") (term "0,1,0,0,0,1,1"))
                     (rule "polySimp_mulComm1" (formula "10") (term "1,0,1,0,0,0,1,1"))
                     (rule "jmod_axiom" (formula "10") (term "0,1,0,1,1"))
                     (rule "polySimp_mulComm1" (formula "10") (term "1,0,1,0,1,1"))
                     (rule "jmod_axiom" (formula "11") (term "0"))
                     (rule "polySimp_mulComm1" (formula "11") (term "1,0"))
                     (rule "polySimp_sepNegMonomial" (formula "10") (term "0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "0,0,0,1"))
                     (rule "polySimp_elimOne" (formula "10") (term "0,0,0,1"))
                     (rule "polySimp_sepNegMonomial" (formula "10") (term "1,0,0,1,1"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "0,1,0,0,1,1"))
                     (rule "polySimp_elimOne" (formula "10") (term "0,1,0,0,1,1"))
                     (rule "polySimp_sepNegMonomial" (formula "10") (term "1,0,1"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "0,1,0,1"))
                     (rule "polySimp_elimOne" (formula "10") (term "0,1,0,1"))
                     (rule "polySimp_sepNegMonomial" (formula "10") (term "1,0,0,0,1,1"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "0,1,0,0,0,1,1"))
                     (rule "polySimp_elimOne" (formula "10") (term "0,1,0,0,0,1,1"))
                     (rule "polySimp_sepNegMonomial" (formula "10") (term "1,0,1,1"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "0,1,0,1,1"))
                     (rule "polySimp_elimOne" (formula "10") (term "0,1,0,1,1"))
                     (rule "polySimp_sepNegMonomial" (formula "11"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                     (rule "polySimp_elimOne" (formula "11") (term "0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                     (rule "mul_literals" (formula "4") (term "1"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "0,0,0,0,1,1"))
                     (rule "mul_literals" (formula "10") (term "1,0,0,0,0,1,1"))
                     (rule "inEqSimp_contradEq3" (formula "10") (term "0,0") (ifseqformula "4"))
                     (rule "times_zero_1" (formula "10") (term "1,0,0,0,0"))
                     (rule "add_zero_right" (formula "10") (term "0,0,0,0"))
                     (rule "qeq_literals" (formula "10") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "10"))
                     (rule "andLeft" (formula "10"))
                     (rule "andLeft" (formula "10"))
                     (rule "inEqSimp_contradEq3" (formula "3") (term "0,1") (ifseqformula "4"))
                     (rule "times_zero_1" (formula "3") (term "1,0,0,0,1"))
                     (rule "add_zero_right" (formula "3") (term "0,0,0,1"))
                     (rule "qeq_literals" (formula "3") (term "0,0,1"))
                      (builtin "One Step Simplification" (formula "3"))
                     (rule "true_left" (formula "3"))
                     (rule "nnf_imp2or" (formula "11") (term "0"))
                     (rule "nnf_notAnd" (formula "11") (term "0,0"))
                     (rule "nnf_notAnd" (formula "11") (term "0,0,0"))
                     (rule "inEqSimp_notGeq" (formula "11") (term "0,0,0,0"))
                     (rule "mul_literals" (formula "11") (term "1,0,0,0,0,0,0"))
                     (rule "add_literals" (formula "11") (term "0,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "11") (term "0,0,0,0,0"))
                     (rule "jdiv_axiom" (formula "12") (term "0,0"))
                     (rule "eqSymm" (formula "1"))
                     (rule "inEqSimp_contradInEq0" (formula "1") (term "0,0") (ifseqformula "4"))
                     (rule "qeq_literals" (formula "1") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "eqSymm" (formula "1"))
                     (rule "applyEq" (formula "13") (term "0,0") (ifseqformula "1"))
                     (rule "polySimp_mulComm1" (formula "13") (term "0"))
                     (rule "polySimp_homoEq" (formula "13"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "1,0"))
                     (rule "polySimp_elimOne" (formula "13") (term "1,0"))
                     (rule "polySimp_sepPosMonomial" (formula "13"))
                     (rule "polyDiv_pullOut" (formula "13") (term "0,0") (inst "polyDivCoeff=jdiv(mul(b, Z(neglit(1(#)))), result_gcdHelp)"))
                     (rule "polySimp_mulComm1" (formula "13") (term "1,0,0,2,0,0"))
                     (rule "polySimp_addComm0" (formula "13") (term "2,0,0"))
                     (rule "applyEq" (formula "13") (term "0,1,0,1,2,0,0") (ifseqformula "11"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1,2,0,0"))
                     (rule "polySimp_pullOutFactor0" (formula "13") (term "0,1,2,0,0"))
                     (rule "add_literals" (formula "13") (term "1,0,1,2,0,0"))
                     (rule "times_zero_1" (formula "13") (term "0,1,2,0,0"))
                     (rule "polySimp_addComm0" (formula "13") (term "2,0,0"))
                     (rule "polyDiv_zero" (formula "13") (term "0,2,0,0"))
                     (rule "div_literals" (formula "13") (term "1,0,2,0,0"))
                     (rule "polySimp_addComm0" (formula "13") (term "2,0,0"))
                     (rule "polyDiv_pullOut" (formula "1") (term "0,1") (inst "polyDivCoeff=jdiv(mul(b, Z(neglit(1(#)))), result_gcdHelp)"))
                     (rule "eqSymm" (formula "1"))
                     (rule "polySimp_homoEq" (formula "1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,0"))
                     (rule "polySimp_elimOne" (formula "1") (term "1,0"))
                     (rule "polySimp_mulComm1" (formula "1") (term "1,0,0,2,1,0"))
                     (rule "polySimp_addComm0" (formula "1") (term "2,1,0"))
                     (rule "applyEq" (formula "1") (term "0,1,0,1,2,1,0") (ifseqformula "11"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,2,1,0"))
                     (rule "polySimp_pullOutFactor0" (formula "1") (term "0,1,2,1,0"))
                     (rule "add_literals" (formula "1") (term "1,0,1,2,1,0"))
                     (rule "times_zero_1" (formula "1") (term "0,1,2,1,0"))
                     (rule "polySimp_addComm0" (formula "1") (term "2,1,0"))
                     (rule "polySimp_sepPosMonomial" (formula "1"))
                     (rule "polyDiv_zero" (formula "1") (term "0,2,0"))
                     (rule "div_literals" (formula "1") (term "1,0,2,0"))
                     (rule "polySimp_addComm0" (formula "1") (term "2,0"))
                     (rule "applyEq" (formula "13") (term "0,0") (ifseqformula "1"))
                     (rule "polySimp_mulComm1" (formula "13") (term "0"))
                     (rule "polySimp_homoEq" (formula "13"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "1,0"))
                     (rule "polySimp_elimOne" (formula "13") (term "1,0"))
                     (rule "polySimp_sepPosMonomial" (formula "13"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "1"))
                     (rule "polySimp_elimOne" (formula "13") (term "1"))
                     (rule "jdiv_axiom" (formula "10") (term "0,0"))
                     (rule "eqSymm" (formula "10"))
                     (rule "replace_known_left" (formula "10") (term "0,0") (ifseqformula "3"))
                      (builtin "One Step Simplification" (formula "10"))
                     (rule "eqSymm" (formula "10"))
                     (rule "applyEq" (formula "11") (term "0,0") (ifseqformula "10"))
                     (rule "jdiv_axiom" (formula "12") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "12") (term "0,0,2,1"))
                     (rule "eqSymm" (formula "12"))
                     (rule "polySimp_elimOne" (formula "12") (term "0,0,2,0"))
                     (rule "inEqSimp_invertInEq1" (formula "12") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "12") (term "0,0,0"))
                     (rule "times_zero_2" (formula "12") (term "1,0,0"))
                     (rule "polySimp_elimOne" (formula "12") (term "0,0,0"))
                     (rule "inEqSimp_subsumption0" (formula "12") (term "0,0") (ifseqformula "4"))
                     (rule "leq_literals" (formula "12") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "12"))
                     (rule "eqSymm" (formula "12"))
                     (rule "applyEq" (formula "13") (term "0,0") (ifseqformula "12"))
                     (rule "applyEq" (formula "1") (term "0,2,0") (ifseqformula "12"))
                     (rule "div_axiom" (formula "1") (term "1,0") (inst "quotient=quotient_0"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "true_left" (formula "1"))
                     (rule "ifthenelse_split" (formula "1") (term "1,2,0"))
                     (branch "result_gcdHelp = 0 TRUE"
                        (rule "replace_known_left" (formula "2") (term "0,0") (ifseqformula "1"))
                         (builtin "One Step Simplification" (formula "2"))
                        (rule "eqSymm" (formula "2"))
                        (rule "polySimp_homoEq" (formula "2"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                        (rule "polySimp_elimOne" (formula "2") (term "1,0"))
                        (rule "applyEq" (formula "2") (term "1,1,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "16") (term "1,0,0") (ifseqformula "1"))
                        (rule "polySimp_mulComm0" (formula "16") (term "0"))
                        (rule "applyEq" (formula "12") (term "1,0") (ifseqformula "1"))
                        (rule "times_zero_1" (formula "12") (term "0"))
                        (rule "eqSymm" (formula "12"))
                        (rule "applyEq" (formula "13") (term "1,0") (ifseqformula "1"))
                        (rule "eqSymm" (formula "13"))
                        (rule "applyEq" (formula "11") (term "1,0") (ifseqformula "1"))
                        (rule "eqSymm" (formula "11"))
                        (rule "applyEq" (formula "15") (term "0,0,0,1,0") (ifseqformula "1"))
                        (rule "jdiv_axiom_inline" (formula "15") (term "0,0,1,0"))
                        (rule "times_zero_2" (formula "15") (term "0,0,2,0,0,1,0"))
                        (rule "qeq_literals" (formula "15") (term "0,0,0,1,0"))
                         (builtin "One Step Simplification" (formula "15"))
                        (rule "applyEq" (formula "14") (term "1,0") (ifseqformula "1"))
                        (rule "times_zero_1" (formula "14") (term "0"))
                        (rule "eqSymm" (formula "14"))
                        (rule "applyEq" (formula "3") (term "0,1") (ifseqformula "12"))
                        (rule "times_zero_2" (formula "3") (term "1"))
                        (rule "applyEq" (formula "16") (term "0,0") (ifseqformula "1"))
                        (rule "times_zero_2" (formula "16") (term "0"))
                        (rule "eqSymm" (formula "16"))
                        (rule "applyEq" (formula "15") (term "0,0,0,0,1,0,0,0") (ifseqformula "12"))
                        (rule "jdiv_axiom_inline" (formula "15") (term "0,0,0,1,0,0,0"))
                        (rule "qeq_literals" (formula "15") (term "0,0,0,0,1,0,0,0"))
                         (builtin "One Step Simplification" (formula "15"))
                        (rule "applyEq" (formula "4") (term "0") (ifseqformula "12"))
                        (rule "qeq_literals" (formula "4"))
                        (rule "true_left" (formula "4"))
                        (rule "applyEq" (formula "10") (term "0,0") (ifseqformula "11"))
                        (rule "applyEq" (formula "10") (term "1,0") (ifseqformula "1"))
                        (rule "div_literals" (formula "10") (term "0"))
                        (rule "applyEq" (formula "12") (term "1,0") (ifseqformula "1"))
                        (rule "eqSymm" (formula "12"))
                        (rule "applyEq" (formula "10") (term "0,1") (ifseqformula "11"))
                        (rule "jdiv_axiom_inline" (formula "10") (term "1"))
                        (rule "times_zero_2" (formula "10") (term "0,0,2,1"))
                        (rule "div_literals" (formula "10") (term "1,1"))
                        (rule "qeq_literals" (formula "10") (term "0,1"))
                         (builtin "One Step Simplification" (formula "10"))
                        (rule "true_left" (formula "10"))
                        (rule "applyEq" (formula "13") (term "1,0,1,0,0,0") (ifseqformula "10"))
                        (rule "applyEq" (formula "13") (term "1,1,0") (ifseqformula "1"))
                        (rule "polySimp_sepPosMonomial" (formula "2"))
                        (rule "polySimp_invertEq" (formula "12"))
                        (rule "times_zero_2" (formula "12") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                        (rule "polySimp_elimOne" (formula "12") (term "0"))
                        (rule "close" (formula "14") (ifseqformula "12"))
                     )
                     (branch "result_gcdHelp = 0 FALSE"
                        (rule "add_zero_right" (formula "1") (term "2,0"))
                        (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "15"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "eqSymm" (formula "1"))
                        (rule "polySimp_homoEq" (formula "1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,0"))
                        (rule "polySimp_elimOne" (formula "1") (term "1,0"))
                        (rule "polySimp_sepPosMonomial" (formula "1"))
                        (rule "applyEq" (formula "16") (term "0,0") (ifseqformula "1"))
                        (rule "polySimp_mulComm1" (formula "16") (term "0"))
                        (rule "polySimp_homoEq" (formula "16"))
                        (rule "polySimp_mulLiterals" (formula "16") (term "1,0"))
                        (rule "polySimp_elimOne" (formula "16") (term "1,0"))
                        (rule "applyEq" (formula "16") (term "1,0") (ifseqformula "13"))
                        (rule "polySimp_pullOutFactor1" (formula "16") (term "0"))
                        (rule "add_literals" (formula "16") (term "1,0"))
                        (rule "times_zero_1" (formula "16") (term "0"))
                         (builtin "One Step Simplification" (formula "16"))
                        (rule "closeTrue" (formula "16"))
                     )
                  )
               )
               (branch "Case 2"
                   (builtin "One Step Simplification" (formula "1"))
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "allRight" (formula "11") (inst "sk=x_0"))
                  (rule "impRight" (formula "11"))
                  (rule "andLeft" (formula "1"))
                  (rule "andLeft" (formula "1"))
                  (rule "inEqSimp_ltRight" (formula "13"))
                  (rule "times_zero_1" (formula "1") (term "0,0"))
                  (rule "add_zero_left" (formula "1") (term "0"))
                  (rule "inEqSimp_gtRight" (formula "13"))
                  (rule "polySimp_mulAssoc" (formula "1") (term "0,0"))
                  (rule "polySimp_mulComm0" (formula "1") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "0,0"))
                  (rule "polySimp_elimOne" (formula "1") (term "0,0"))
                  (rule "polySimp_addComm0" (formula "1") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "7"))
                  (rule "times_zero_1" (formula "7") (term "1,0,0"))
                  (rule "add_zero_right" (formula "7") (term "0,0"))
                  (rule "inEqSimp_gtToGeq" (formula "13") (term "0,0,0,0,1,1"))
                  (rule "times_zero_1" (formula "13") (term "1,0,0,0,0,0,0,1,1"))
                  (rule "add_zero_right" (formula "13") (term "0,0,0,0,0,0,1,1"))
                  (rule "inEqSimp_gtToGeq" (formula "3"))
                  (rule "times_zero_1" (formula "3") (term "1,0,0"))
                  (rule "add_zero_right" (formula "3") (term "0,0"))
                  (rule "jmod_axiom" (formula "13") (term "0,1,0,0,0,1,1"))
                  (rule "polySimp_mulComm1" (formula "13") (term "1,0,1,0,0,0,1,1"))
                  (rule "jmod_axiom" (formula "13") (term "0,1,0,0,1,1"))
                  (rule "polySimp_mulComm1" (formula "13") (term "1,0,1,0,0,1,1"))
                  (rule "jmod_axiom" (formula "13") (term "0,0,0,1"))
                  (rule "polySimp_mulComm1" (formula "13") (term "1,0,0,0,1"))
                  (rule "jmod_axiom" (formula "13") (term "0,1,0,1"))
                  (rule "polySimp_mulComm1" (formula "13") (term "1,0,1,0,1"))
                  (rule "jmod_axiom" (formula "13") (term "0,1,0,1,1"))
                  (rule "polySimp_mulComm1" (formula "13") (term "1,0,1,0,1,1"))
                  (rule "jmod_axiom" (formula "14") (term "0"))
                  (rule "polySimp_mulComm1" (formula "14") (term "1,0"))
                  (rule "jmod_axiom" (formula "5") (term "0"))
                  (rule "polySimp_mulComm1" (formula "5") (term "1,0"))
                  (rule "jmod_axiom" (formula "4") (term "0"))
                  (rule "polySimp_mulComm1" (formula "4") (term "1,0"))
                  (rule "polySimp_sepNegMonomial" (formula "13") (term "1,0,0,0,1,1"))
                  (rule "polySimp_mulLiterals" (formula "13") (term "0,1,0,0,0,1,1"))
                  (rule "polySimp_elimOne" (formula "13") (term "0,1,0,0,0,1,1"))
                  (rule "polySimp_sepNegMonomial" (formula "13") (term "1,0,0,1,1"))
                  (rule "polySimp_mulLiterals" (formula "13") (term "0,1,0,0,1,1"))
                  (rule "polySimp_elimOne" (formula "13") (term "0,1,0,0,1,1"))
                  (rule "polySimp_sepNegMonomial" (formula "13") (term "0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "13") (term "0,0,0,1"))
                  (rule "polySimp_elimOne" (formula "13") (term "0,0,0,1"))
                  (rule "polySimp_sepNegMonomial" (formula "13") (term "1,0,1"))
                  (rule "polySimp_mulLiterals" (formula "13") (term "0,1,0,1"))
                  (rule "polySimp_elimOne" (formula "13") (term "0,1,0,1"))
                  (rule "polySimp_sepNegMonomial" (formula "13") (term "1,0,1,1"))
                  (rule "polySimp_mulLiterals" (formula "13") (term "0,1,0,1,1"))
                  (rule "polySimp_elimOne" (formula "13") (term "0,1,0,1,1"))
                  (rule "polySimp_sepNegMonomial" (formula "14"))
                  (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                  (rule "polySimp_elimOne" (formula "14") (term "0"))
                  (rule "polySimp_sepNegMonomial" (formula "5"))
                  (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                  (rule "polySimp_elimOne" (formula "5") (term "0"))
                  (rule "polySimp_sepNegMonomial" (formula "4"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                  (rule "polySimp_elimOne" (formula "4") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "7"))
                  (rule "mul_literals" (formula "7") (term "1"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "0,0,0,0,1,1"))
                  (rule "mul_literals" (formula "13") (term "1,0,0,0,0,1,1"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                  (rule "mul_literals" (formula "3") (term "1"))
                  (rule "inEqSimp_contradEq3" (formula "13") (term "0,0") (ifseqformula "7"))
                  (rule "times_zero_1" (formula "13") (term "1,0,0,0,0"))
                  (rule "add_zero_right" (formula "13") (term "0,0,0,0"))
                  (rule "qeq_literals" (formula "13") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "13"))
                  (rule "andLeft" (formula "13"))
                  (rule "andLeft" (formula "13"))
                  (rule "inEqSimp_contradEq3" (formula "6") (term "0,1") (ifseqformula "7"))
                  (rule "times_zero_1" (formula "6") (term "1,0,0,0,1"))
                  (rule "add_zero_right" (formula "6") (term "0,0,0,1"))
                  (rule "qeq_literals" (formula "6") (term "0,0,1"))
                   (builtin "One Step Simplification" (formula "6"))
                  (rule "true_left" (formula "6"))
                  (rule "nnf_imp2or" (formula "14") (term "0"))
                  (rule "nnf_notAnd" (formula "14") (term "0,0"))
                  (rule "nnf_notAnd" (formula "14") (term "0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "14") (term "0,0,0,0"))
                  (rule "mul_literals" (formula "14") (term "1,0,0,0,0,0,0"))
                  (rule "add_literals" (formula "14") (term "0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "14") (term "0,0,0,0,0"))
                  (rule "jdiv_axiom" (formula "15") (term "0,0"))
                  (rule "eqSymm" (formula "1"))
                  (rule "jdiv_axiom" (formula "6") (term "0,0"))
                  (rule "eqSymm" (formula "6"))
                  (rule "inEqSimp_contradInEq0" (formula "6") (term "0,0") (ifseqformula "8"))
                  (rule "qeq_literals" (formula "6") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "6"))
                  (rule "eqSymm" (formula "6"))
                  (rule "applyEq" (formula "7") (term "0,0") (ifseqformula "6"))
                  (rule "polySimp_mulComm1" (formula "7") (term "0"))
                  (rule "polySimp_homoEq" (formula "7"))
                  (rule "polySimp_mulLiterals" (formula "7") (term "1,0"))
                  (rule "polySimp_elimOne" (formula "7") (term "1,0"))
                  (rule "polySimp_sepPosMonomial" (formula "7"))
                  (rule "jdiv_axiom" (formula "5") (term "0,0"))
                  (rule "eqSymm" (formula "5"))
                  (rule "replace_known_left" (formula "5") (term "0,0") (ifseqformula "3"))
                   (builtin "One Step Simplification" (formula "5"))
                  (rule "eqSymm" (formula "5"))
                  (rule "applyEq" (formula "6") (term "0,0") (ifseqformula "5"))
                  (rule "jdiv_axiom" (formula "16") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "16") (term "0,0,2,1"))
                  (rule "eqSymm" (formula "16"))
                  (rule "polySimp_elimOne" (formula "16") (term "0,0,2,0"))
                  (rule "inEqSimp_invertInEq1" (formula "16") (term "0,0"))
                  (rule "times_zero_2" (formula "16") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "16") (term "0,0,0"))
                  (rule "polySimp_elimOne" (formula "16") (term "0,0,0"))
                  (rule "inEqSimp_subsumption0" (formula "16") (term "0,0") (ifseqformula "9"))
                  (rule "leq_literals" (formula "16") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "16"))
                  (rule "eqSymm" (formula "16"))
                  (rule "applyEq" (formula "17") (term "0,0") (ifseqformula "16"))
                  (rule "jdiv_axiom" (formula "15") (term "0,0"))
                  (rule "eqSymm" (formula "15"))
                  (rule "replace_known_left" (formula "15") (term "0,0") (ifseqformula "3"))
                   (builtin "One Step Simplification" (formula "15"))
                  (rule "eqSymm" (formula "15"))
                  (rule "applyEq" (formula "16") (term "0,0") (ifseqformula "15"))
                  (rule "div_axiom" (formula "1") (term "0,2,0") (inst "quotient=quotient_0"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,1,1,1,1"))
                  (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,1"))
                  (rule "polySimp_mulComm0" (formula "1") (term "0,1,1,1"))
                  (rule "polySimp_mulComm0" (formula "1") (term "0,2,1,1"))
                  (rule "inEqSimp_contradEq7" (formula "1") (term "0") (ifseqformula "5"))
                  (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                  (rule "add_zero_right" (formula "1") (term "0,0,0"))
                  (rule "leq_literals" (formula "1") (term "0,0"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "andLeft" (formula "1"))
                  (rule "andLeft" (formula "1"))
                  (rule "applyEq" (formula "4") (term "0,2,0") (ifseqformula "1"))
                  (rule "inEqSimp_subsumption1" (formula "3") (term "0") (ifseqformula "7"))
                  (rule "leq_literals" (formula "3") (term "0,0"))
                   (builtin "One Step Simplification" (formula "3"))
                  (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "2"))
                  (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                  (rule "polySimp_elimOne" (formula "3") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "3") (term "0"))
                  (rule "polySimp_rightDist" (formula "3") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "3") (term "0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "3") (term "1,0,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0"))
                  (rule "add_literals" (formula "3") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "3") (term "1,0,0"))
                  (rule "add_zero_right" (formula "3") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                  (rule "mul_literals" (formula "3") (term "1"))
                  (rule "div_axiom" (formula "4") (term "1,0") (inst "quotient=quotient_1"))
                  (rule "polySimp_mulComm0" (formula "4") (term "0,1,0,1"))
                  (rule "polySimp_mulComm0" (formula "4") (term "1,1,1,1,1"))
                  (rule "polySimp_mulComm0" (formula "4") (term "0,2,1,1"))
                  (rule "polySimp_mulComm0" (formula "4") (term "0,1,1,1"))
                  (rule "inEqSimp_contradEq7" (formula "4") (term "0") (ifseqformula "8"))
                  (rule "times_zero_1" (formula "4") (term "1,0,0,0"))
                  (rule "add_zero_right" (formula "4") (term "0,0,0"))
                  (rule "leq_literals" (formula "4") (term "0,0"))
                   (builtin "One Step Simplification" (formula "4"))
                  (rule "andLeft" (formula "4"))
                  (rule "andLeft" (formula "4"))
                  (rule "applyEq" (formula "7") (term "1,0") (ifseqformula "4"))
                  (rule "inEqSimp_subsumption1" (formula "6") (term "0") (ifseqformula "10"))
                  (rule "leq_literals" (formula "6") (term "0,0"))
                   (builtin "One Step Simplification" (formula "6"))
                  (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "5"))
                  (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0"))
                  (rule "polySimp_elimOne" (formula "6") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "6") (term "0"))
                  (rule "polySimp_rightDist" (formula "6") (term "0,0,0"))
                  (rule "mul_literals" (formula "6") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor2b" (formula "6") (term "0,0"))
                  (rule "add_literals" (formula "6") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "6") (term "1,0,0"))
                  (rule "add_zero_right" (formula "6") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                  (rule "mul_literals" (formula "6") (term "1"))
                  (rule "div_axiom" (formula "13") (term "0,1") (inst "quotient=quotient_2"))
                  (rule "polySimp_mulComm0" (formula "13") (term "0,1,1,1"))
                  (rule "polySimp_mulComm0" (formula "13") (term "0,2,1,1"))
                  (rule "polySimp_mulComm0" (formula "13") (term "1,1,1,1,1"))
                  (rule "polySimp_mulComm0" (formula "13") (term "0,1,0,1"))
                  (rule "inEqSimp_contradEq7" (formula "13") (term "0") (ifseqformula "10"))
                  (rule "times_zero_1" (formula "13") (term "1,0,0,0"))
                  (rule "add_zero_right" (formula "13") (term "0,0,0"))
                  (rule "leq_literals" (formula "13") (term "0,0"))
                   (builtin "One Step Simplification" (formula "13"))
                  (rule "andLeft" (formula "13"))
                  (rule "andLeft" (formula "13"))
                  (rule "applyEq" (formula "17") (term "0,0") (ifseqformula "13"))
                  (rule "polySimp_mulComm0" (formula "17") (term "0"))
                  (rule "applyEq" (formula "15") (term "0,2") (ifseqformula "17"))
                  (rule "inEqSimp_homoInEq1" (formula "15") (term "2"))
                  (rule "polySimp_mulLiterals" (formula "15") (term "1,0,2"))
                  (rule "polySimp_elimOne" (formula "15") (term "1,0,2"))
                  (rule "polySimp_addComm1" (formula "15") (term "0,2"))
                  (rule "polySimp_pullOutFactor2b" (formula "15") (term "0,0,2"))
                  (rule "add_literals" (formula "15") (term "1,1,0,0,2"))
                  (rule "times_zero_1" (formula "15") (term "1,0,0,2"))
                  (rule "add_zero_right" (formula "15") (term "0,0,2"))
                  (rule "applyEq" (formula "14") (term "0") (ifseqformula "17"))
                  (rule "inEqSimp_homoInEq0" (formula "14"))
                  (rule "polySimp_mulLiterals" (formula "14") (term "1,0"))
                  (rule "polySimp_pullOutFactor0" (formula "14") (term "0"))
                  (rule "add_literals" (formula "14") (term "1,0"))
                  (rule "times_zero_1" (formula "14") (term "0"))
                  (rule "qeq_literals" (formula "14"))
                  (rule "true_left" (formula "14"))
                  (rule "applyEq" (formula "14") (term "0,1") (ifseqformula "16"))
                  (rule "inEqSimp_homoInEq1" (formula "14") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1"))
                  (rule "polySimp_elimOne" (formula "14") (term "1,0,1"))
                  (rule "polySimp_addComm1" (formula "14") (term "0,1"))
                  (rule "polySimp_pullOutFactor2b" (formula "14") (term "0,0,1"))
                  (rule "add_literals" (formula "14") (term "1,1,0,0,1"))
                  (rule "times_zero_1" (formula "14") (term "1,0,0,1"))
                  (rule "add_zero_right" (formula "14") (term "0,0,1"))
                  (rule "applyEq" (formula "15") (term "0,1") (ifseqformula "13"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "2"))
                  (rule "mul_literals" (formula "14") (term "1,2"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "14") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "14") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "14") (term "0,1"))
                  (rule "replace_known_left" (formula "14") (term "1") (ifseqformula "10"))
                  (rule "inEqSimp_subsumption1" (formula "14") (term "0") (ifseqformula "10"))
                  (rule "leq_literals" (formula "14") (term "0,0"))
                   (builtin "One Step Simplification" (formula "14"))
                  (rule "true_left" (formula "14"))
                  (rule "div_axiom" (formula "11") (term "1") (inst "quotient=quotient_3"))
                  (rule "polySimp_mulComm0" (formula "11") (term "0,1,0,1"))
                  (rule "polySimp_mulComm0" (formula "11") (term "0,1,1,1"))
                  (rule "polySimp_mulComm0" (formula "11") (term "1,1,1,1,1"))
                  (rule "polySimp_mulComm0" (formula "11") (term "0,2,1,1"))
                  (rule "inEqSimp_contradEq7" (formula "11") (term "0") (ifseqformula "10"))
                  (rule "times_zero_1" (formula "11") (term "1,0,0,0"))
                  (rule "add_zero_right" (formula "11") (term "0,0,0"))
                  (rule "leq_literals" (formula "11") (term "0,0"))
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "andLeft" (formula "11"))
                  (rule "andLeft" (formula "11"))
                  (rule "applyEq" (formula "15") (term "0,0") (ifseqformula "11"))
                  (rule "polySimp_mulComm0" (formula "15") (term "0"))
                  (rule "applyEq" (formula "12") (term "0") (ifseqformula "15"))
                  (rule "inEqSimp_homoInEq0" (formula "12"))
                  (rule "polySimp_pullOutFactor1" (formula "12") (term "0"))
                  (rule "add_literals" (formula "12") (term "1,0"))
                  (rule "times_zero_1" (formula "12") (term "0"))
                  (rule "qeq_literals" (formula "12"))
                  (rule "true_left" (formula "12"))
                  (rule "applyEq" (formula "12") (term "0,1") (ifseqformula "14"))
                  (rule "inEqSimp_homoInEq1" (formula "12") (term "1"))
                  (rule "polySimp_addComm1" (formula "12") (term "0,1"))
                  (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0,1"))
                  (rule "add_literals" (formula "12") (term "1,1,0,0,1"))
                  (rule "times_zero_1" (formula "12") (term "1,0,0,1"))
                  (rule "add_zero_right" (formula "12") (term "0,0,1"))
                  (rule "applyEq" (formula "12") (term "0,2") (ifseqformula "14"))
                  (rule "inEqSimp_homoInEq1" (formula "12") (term "2"))
                  (rule "polySimp_addComm1" (formula "12") (term "0,2"))
                  (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0,2"))
                  (rule "add_literals" (formula "12") (term "1,1,0,0,2"))
                  (rule "times_zero_1" (formula "12") (term "1,0,0,2"))
                  (rule "add_zero_right" (formula "12") (term "0,0,2"))
                  (rule "applyEq" (formula "13") (term "1") (ifseqformula "11"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "12") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "12") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "12") (term "0,1"))
                  (rule "replace_known_left" (formula "12") (term "1") (ifseqformula "10"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "2"))
                  (rule "mul_literals" (formula "12") (term "1,2"))
                  (rule "inEqSimp_subsumption1" (formula "12") (term "0") (ifseqformula "10"))
                  (rule "leq_literals" (formula "12") (term "0,0"))
                   (builtin "One Step Simplification" (formula "12"))
                  (rule "true_left" (formula "12"))
                  (rule "div_axiom" (formula "25") (term "1") (inst "quotient=quotient_4"))
                  (rule "polySimp_mulComm0" (formula "25") (term "0,2,1,1"))
                  (rule "polySimp_mulComm0" (formula "25") (term "1,1,1,1,1"))
                  (rule "polySimp_mulComm0" (formula "25") (term "0,1,0,1"))
                  (rule "polySimp_mulComm0" (formula "25") (term "0,1,1,1"))
                  (rule "commute_and" (formula "25") (term "0,1"))
                  (rule "div_axiom" (formula "23") (term "1") (inst "quotient=quotient_5"))
                  (rule "polySimp_mulComm0" (formula "23") (term "0,2,1,1"))
                  (rule "polySimp_mulComm0" (formula "23") (term "0,1,0,1"))
                  (rule "polySimp_mulComm0" (formula "23") (term "0,1,1,1"))
                  (rule "polySimp_mulComm0" (formula "23") (term "1,1,1,1,1"))
                  (rule "commute_and" (formula "23") (term "0,1"))
                  (rule "ifthenelse_split" (formula "7") (term "0"))
                  (branch "result_gcdHelp >= 0 TRUE"
                     (rule "eqSymm" (formula "8"))
                     (rule "replace_known_left" (formula "27") (term "0,1,1") (ifseqformula "7"))
                      (builtin "One Step Simplification" (formula "27"))
                     (rule "replace_known_left" (formula "24") (term "0,1,1") (ifseqformula "7"))
                      (builtin "One Step Simplification" (formula "24"))
                     (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "8"))
                     (rule "polySimp_mulComm0" (formula "31") (term "0"))
                     (rule "inEqSimp_strengthen0" (formula "5") (ifseqformula "31"))
                     (rule "inEqSimp_contradEq3" (formula "31") (ifseqformula "5"))
                     (rule "polySimp_mulComm0" (formula "31") (term "1,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0"))
                     (rule "add_literals" (formula "31") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "31") (term "1,0,0"))
                     (rule "add_zero_right" (formula "31") (term "0,0"))
                     (rule "qeq_literals" (formula "31") (term "0"))
                      (builtin "One Step Simplification" (formula "31"))
                     (rule "false_right" (formula "31"))
                     (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "5"))
                     (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0"))
                     (rule "polySimp_elimOne" (formula "6") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "6") (term "0"))
                     (rule "polySimp_rightDist" (formula "6") (term "0,0,0"))
                     (rule "mul_literals" (formula "6") (term "0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
                     (rule "add_literals" (formula "6") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor2b" (formula "6") (term "0,0"))
                     (rule "add_literals" (formula "6") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "6") (term "1,0,0"))
                     (rule "add_zero_right" (formula "6") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                     (rule "mul_literals" (formula "6") (term "1"))
                     (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "6"))
                     (rule "leq_literals" (formula "12") (term "0"))
                      (builtin "One Step Simplification" (formula "12"))
                     (rule "true_left" (formula "12"))
                     (rule "cnf_rightDist" (formula "27"))
                     (rule "andLeft" (formula "27"))
                     (rule "commute_or" (formula "28"))
                     (rule "cnf_rightDist" (formula "24"))
                     (rule "andLeft" (formula "24"))
                     (rule "commute_or" (formula "25"))
                     (rule "cnf_rightDist" (formula "28"))
                     (rule "andLeft" (formula "28"))
                     (rule "commute_or" (formula "29"))
                     (rule "cnf_rightDist" (formula "24"))
                     (rule "andLeft" (formula "24"))
                     (rule "commute_or" (formula "25"))
                     (rule "polySimp_critPair" (formula "33") (ifseqformula "28"))
                     (rule "polySimp_mulComm0" (formula "33") (term "0,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "33") (term "1,1,1,0"))
                     (rule "polySimp_rightDist" (formula "33") (term "0,0"))
                     (rule "polySimp_mulComm1" (formula "33") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "33") (term "0,1,0,0"))
                     (rule "polySimp_mulAssoc" (formula "33") (term "0,0,0"))
                     (rule "polySimp_rightDist" (formula "33") (term "1,0"))
                     (rule "polySimp_mulComm1" (formula "33") (term "1,1,0"))
                     (rule "polySimp_mulComm1" (formula "33") (term "0,1,1,0"))
                     (rule "polySimp_mulAssoc" (formula "33") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "33") (term "0"))
                     (rule "polySimp_addComm1" (formula "33") (term "0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "33") (term "0"))
                     (rule "add_literals" (formula "33") (term "1,1,0"))
                     (rule "times_zero_1" (formula "33") (term "1,0"))
                     (rule "add_zero_right" (formula "33") (term "0"))
                     (rule "polySimp_addComm0" (formula "33") (term "0"))
                     (rule "polySimp_sepNegMonomial" (formula "33"))
                     (rule "polySimp_mulLiterals" (formula "33") (term "0"))
                     (rule "polySimp_elimOne" (formula "33") (term "0"))
                     (rule "polyDiv_pullOut" (formula "15") (term "0") (inst "polyDivCoeff=quotient_2"))
                     (rule "polySimp_mulComm1" (formula "15") (term "1,0,0,2,0"))
                     (rule "polySimp_mulComm0" (formula "15") (term "0,1,0,0,2,0"))
                     (rule "polySimp_addComm0" (formula "15") (term "2,0"))
                     (rule "applyEq" (formula "15") (term "0,1,0,1,2,0") (ifseqformula "17"))
                     (rule "polySimp_mulLiterals" (formula "15") (term "1,0,1,2,0"))
                     (rule "polySimp_elimOne" (formula "15") (term "1,0,1,2,0"))
                     (rule "polySimp_pullOutFactor2" (formula "15") (term "0,1,2,0"))
                     (rule "add_literals" (formula "15") (term "1,0,1,2,0"))
                     (rule "times_zero_1" (formula "15") (term "0,1,2,0"))
                     (rule "inEqSimp_contradEq7" (formula "15") (term "0,0") (ifseqformula "6"))
                     (rule "times_zero_1" (formula "15") (term "1,0,0,0,0"))
                     (rule "add_zero_right" (formula "15") (term "0,0,0,0"))
                     (rule "leq_literals" (formula "15") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "15"))
                     (rule "polySimp_homoEq" (formula "15"))
                     (rule "polySimp_mulComm0" (formula "15") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "15") (term "1,0"))
                     (rule "polySimp_mulComm0" (formula "15") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "15") (term "0"))
                     (rule "polySimp_pullOutFactor1" (formula "15") (term "0,0"))
                     (rule "add_literals" (formula "15") (term "1,0,0"))
                     (rule "times_zero_1" (formula "15") (term "0,0"))
                     (rule "add_zero_left" (formula "15") (term "0"))
                     (rule "polySimp_invertEq" (formula "15"))
                     (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                     (rule "times_zero_2" (formula "15") (term "1"))
                     (rule "polySimp_elimOne" (formula "15") (term "0"))
                     (rule "polyDiv_zero" (formula "15") (term "0"))
                      (builtin "One Step Simplification" (formula "15"))
                     (rule "div_literals" (formula "15") (term "0,1"))
                     (rule "inEqSimp_contradEq7" (formula "15") (term "0,0") (ifseqformula "6"))
                     (rule "times_zero_1" (formula "15") (term "1,0,0,0,0"))
                     (rule "add_zero_right" (formula "15") (term "0,0,0,0"))
                     (rule "leq_literals" (formula "15") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "15"))
                     (rule "true_left" (formula "15"))
                     (rule "allLeft" (formula "34") (inst "t=x_0"))
                     (rule "applyEq" (formula "34") (term "0,0,0,1,0,0") (ifseqformula "13"))
                     (rule "polySimp_mulComm0" (formula "34") (term "0,0,1,0,0"))
                     (rule "replace_known_left" (formula "34") (term "0,1,0,0") (ifseqformula "14"))
                      (builtin "One Step Simplification" (formula "34"))
                     (rule "applyEq" (formula "34") (term "0,0,1") (ifseqformula "9"))
                     (rule "polySimp_mulComm0" (formula "34") (term "0,1"))
                     (rule "inEqSimp_contradEq3" (formula "34") (term "1") (ifseqformula "5"))
                     (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,1"))
                     (rule "add_literals" (formula "34") (term "1,1,0,0,1"))
                     (rule "times_zero_1" (formula "34") (term "1,0,0,1"))
                     (rule "add_zero_right" (formula "34") (term "0,0,1"))
                     (rule "qeq_literals" (formula "34") (term "0,1"))
                      (builtin "One Step Simplification" (formula "34"))
                     (rule "inEqSimp_contradInEq1" (formula "34") (term "0") (ifseqformula "6"))
                     (rule "qeq_literals" (formula "34") (term "0,0"))
                      (builtin "One Step Simplification" (formula "34"))
                     (rule "notLeft" (formula "34"))
                     (rule "allLeft" (formula "34") (inst "t=result_gcdHelp"))
                     (rule "applyEq" (formula "34") (term "0,0,0,1,0") (ifseqformula "31"))
                     (rule "replace_known_left" (formula "34") (term "0,1,0") (ifseqformula "33"))
                      (builtin "One Step Simplification" (formula "34"))
                     (rule "applyEq" (formula "34") (term "0,0,0,1,0") (ifseqformula "26"))
                     (rule "replace_known_left" (formula "34") (term "0,1,0") (ifseqformula "27"))
                      (builtin "One Step Simplification" (formula "34"))
                     (rule "polySimp_critPair" (formula "16") (ifseqformula "14"))
                     (rule "polySimp_mulComm0" (formula "16") (term "0,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "16") (term "1,1,1,0"))
                     (rule "polySimp_rightDist" (formula "16") (term "0,0"))
                     (rule "polySimp_mulComm1" (formula "16") (term "1,0,0"))
                     (rule "polySimp_mulAssoc" (formula "16") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "16") (term "0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "16") (term "1,0"))
                     (rule "polySimp_mulComm1" (formula "16") (term "1,1,0"))
                     (rule "polySimp_mulAssoc" (formula "16") (term "0,1,0"))
                     (rule "polySimp_mulComm0" (formula "16") (term "0,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "16") (term "0"))
                     (rule "polySimp_addComm1" (formula "16") (term "0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "16") (term "0"))
                     (rule "add_literals" (formula "16") (term "1,1,0"))
                     (rule "times_zero_1" (formula "16") (term "1,0"))
                     (rule "add_zero_right" (formula "16") (term "0"))
                     (rule "polySimp_addComm0" (formula "16") (term "0"))
                     (rule "polySimp_sepNegMonomial" (formula "16"))
                     (rule "polySimp_mulLiterals" (formula "16") (term "0"))
                     (rule "polySimp_elimOne" (formula "16") (term "0"))
                     (rule "polyDiv_pullOut" (formula "12") (term "0") (inst "polyDivCoeff=quotient_3"))
                     (rule "polySimp_mulComm1" (formula "12") (term "1,0,0,2,0"))
                     (rule "polySimp_mulComm0" (formula "12") (term "0,1,0,0,2,0"))
                     (rule "polySimp_addComm0" (formula "12") (term "2,0"))
                     (rule "applyEq" (formula "12") (term "0,1,0,1,2,0") (ifseqformula "14"))
                     (rule "polySimp_pullOutFactor1" (formula "12") (term "0,1,2,0"))
                     (rule "add_literals" (formula "12") (term "1,0,1,2,0"))
                     (rule "times_zero_1" (formula "12") (term "0,1,2,0"))
                     (rule "inEqSimp_contradEq7" (formula "12") (term "0,0") (ifseqformula "6"))
                     (rule "times_zero_1" (formula "12") (term "1,0,0,0,0"))
                     (rule "add_zero_right" (formula "12") (term "0,0,0,0"))
                     (rule "leq_literals" (formula "12") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "12"))
                     (rule "polySimp_homoEq" (formula "12"))
                     (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                     (rule "polySimp_mulComm0" (formula "12") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "12") (term "0"))
                     (rule "polySimp_pullOutFactor1" (formula "12") (term "0,0"))
                     (rule "add_literals" (formula "12") (term "1,0,0"))
                     (rule "times_zero_1" (formula "12") (term "0,0"))
                     (rule "add_zero_left" (formula "12") (term "0"))
                     (rule "polySimp_invertEq" (formula "12"))
                     (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                     (rule "times_zero_2" (formula "12") (term "1"))
                     (rule "polySimp_elimOne" (formula "12") (term "0"))
                     (rule "polyDiv_zero" (formula "12") (term "0"))
                      (builtin "One Step Simplification" (formula "12"))
                     (rule "div_literals" (formula "12") (term "0,1"))
                     (rule "inEqSimp_contradEq7" (formula "12") (term "0,0") (ifseqformula "6"))
                     (rule "times_zero_1" (formula "12") (term "1,0,0,0,0"))
                     (rule "add_zero_right" (formula "12") (term "0,0,0,0"))
                     (rule "leq_literals" (formula "12") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "12"))
                     (rule "true_left" (formula "12"))
                     (rule "cut_direct" (formula "23") (term "0"))
                     (branch "CUT: result_gcdHelp = 0 TRUE"
                         (builtin "One Step Simplification" (formula "24"))
                        (rule "true_left" (formula "24"))
                        (rule "replace_known_left" (formula "24") (term "0") (ifseqformula "23"))
                         (builtin "One Step Simplification" (formula "24"))
                        (rule "true_left" (formula "24"))
                        (rule "replace_known_left" (formula "28") (term "0") (ifseqformula "23"))
                         (builtin "One Step Simplification" (formula "28"))
                        (rule "true_left" (formula "28"))
                        (rule "replace_known_left" (formula "24") (term "0") (ifseqformula "23"))
                         (builtin "One Step Simplification" (formula "24"))
                        (rule "true_left" (formula "24"))
                        (rule "replace_known_left" (formula "26") (term "0") (ifseqformula "23"))
                         (builtin "One Step Simplification" (formula "26"))
                        (rule "true_left" (formula "26"))
                        (rule "replace_known_left" (formula "26") (term "0") (ifseqformula "23"))
                         (builtin "One Step Simplification" (formula "26"))
                        (rule "true_left" (formula "26"))
                        (rule "applyEq" (formula "25") (term "1,0") (ifseqformula "23"))
                        (rule "times_zero_1" (formula "25") (term "0"))
                        (rule "eqSymm" (formula "25"))
                        (rule "applyEq" (formula "26") (term "1,0") (ifseqformula "23"))
                        (rule "eqSymm" (formula "26"))
                        (rule "applyEq" (formula "24") (term "1,0") (ifseqformula "23"))
                        (rule "eqSymm" (formula "24"))
                        (rule "applyEq" (formula "5") (term "1,1") (ifseqformula "23"))
                        (rule "add_zero_right" (formula "5") (term "1"))
                        (rule "applyEq" (formula "29") (term "1,0,0,1") (ifseqformula "23"))
                        (rule "applyEq" (formula "27") (term "1,0,0") (ifseqformula "23"))
                        (rule "eqSymm" (formula "27"))
                        (rule "polySimp_homoEq" (formula "27"))
                        (rule "polySimp_mulLiterals" (formula "27") (term "1,0"))
                        (rule "polySimp_elimOne" (formula "27") (term "1,0"))
                        (rule "applyEq" (formula "29") (term "0,0") (ifseqformula "23"))
                        (rule "leq_literals" (formula "29") (term "0"))
                         (builtin "One Step Simplification" (formula "29"))
                        (rule "true_left" (formula "29"))
                        (rule "applyEq" (formula "28") (term "1,0,0") (ifseqformula "23"))
                        (rule "polySimp_mulComm0" (formula "28") (term "0"))
                        (rule "applyEq" (formula "29") (term "0,0,0,1,0") (ifseqformula "23"))
                        (rule "jdiv_axiom_inline" (formula "29") (term "0,0,1,0"))
                        (rule "qeq_literals" (formula "29") (term "0,0,0,1,0"))
                         (builtin "One Step Simplification" (formula "29"))
                        (rule "applyEq" (formula "1") (term "0,0,0") (ifseqformula "23"))
                        (rule "times_zero_2" (formula "1") (term "0,0"))
                        (rule "applyEq" (formula "9") (term "0,0") (ifseqformula "23"))
                        (rule "jdiv_axiom_inline" (formula "9") (term "0"))
                        (rule "times_zero_2" (formula "9") (term "0,0,2,0"))
                        (rule "qeq_literals" (formula "9") (term "0,0"))
                         (builtin "One Step Simplification" (formula "9"))
                        (rule "applyEq" (formula "8") (term "0") (ifseqformula "23"))
                        (rule "qeq_literals" (formula "8"))
                        (rule "true_left" (formula "8"))
                        (rule "applyEq" (formula "2") (term "0,1") (ifseqformula "22"))
                        (rule "times_zero_2" (formula "2") (term "1"))
                        (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "22"))
                        (rule "applyEq" (formula "8") (term "0,1") (ifseqformula "23"))
                        (rule "times_zero_2" (formula "8") (term "1"))
                        (rule "applyEq" (formula "9") (term "0") (ifseqformula "23"))
                        (rule "qeq_literals" (formula "9"))
                        (rule "true_left" (formula "9"))
                        (rule "applyEq" (formula "12") (term "0,0") (ifseqformula "22"))
                        (rule "times_zero_2" (formula "12") (term "0"))
                        (rule "eqSymm" (formula "12"))
                        (rule "applyEq" (formula "9") (term "0,0") (ifseqformula "22"))
                        (rule "jdiv_axiom_inline" (formula "9") (term "0"))
                        (rule "qeq_literals" (formula "9") (term "0,0"))
                         (builtin "One Step Simplification" (formula "9"))
                        (rule "applyEq" (formula "6") (term "1,0,1") (ifseqformula "20"))
                        (rule "add_zero_right" (formula "6") (term "0,1"))
                        (rule "applyEq" (formula "3") (term "0,1,0,1") (ifseqformula "20"))
                        (rule "times_zero_2" (formula "3") (term "1,0,1"))
                        (rule "add_zero_right" (formula "3") (term "0,1"))
                        (rule "applyEq" (formula "23") (term "1,0") (ifseqformula "20"))
                        (rule "eqSymm" (formula "23"))
                        (rule "applyEqRigid" (formula "9") (term "0") (ifseqformula "7"))
                        (rule "applyEq" (formula "24") (term "0,1,0") (ifseqformula "21"))
                        (rule "polySimp_mulComm0" (formula "24") (term "1,0"))
                        (rule "polySimp_addComm0" (formula "24") (term "0"))
                        (rule "applyEq" (formula "21") (term "0,0") (ifseqformula "22"))
                        (rule "applyEq" (formula "21") (term "1,0") (ifseqformula "20"))
                        (rule "div_literals" (formula "21") (term "0"))
                        (rule "applyEq" (formula "10") (term "1") (ifseqformula "22"))
                        (rule "applyEq" (formula "26") (term "0,0,0,0,1,0,0,0") (ifseqformula "22"))
                        (rule "jdiv_axiom_inline" (formula "26") (term "0,0,0,1,0,0,0"))
                        (rule "qeq_literals" (formula "26") (term "0,0,0,0,1,0,0,0"))
                         (builtin "One Step Simplification" (formula "26"))
                        (rule "applyEq" (formula "7") (term "0") (ifseqformula "1"))
                        (rule "applyEq" (formula "25") (term "0,0") (ifseqformula "20"))
                        (rule "times_zero_2" (formula "25") (term "0"))
                        (rule "eqSymm" (formula "25"))
                        (rule "applyEq" (formula "21") (term "0,1") (ifseqformula "22"))
                        (rule "jdiv_axiom_inline" (formula "21") (term "1"))
                        (rule "qeq_literals" (formula "21") (term "0,1"))
                         (builtin "One Step Simplification" (formula "21"))
                        (rule "div_literals" (formula "21") (term "1"))
                         (builtin "One Step Simplification" (formula "21"))
                        (rule "true_left" (formula "21"))
                        (rule "apply_eq_monomials" (formula "4") (term "0") (ifseqformula "9"))
                        (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                        (rule "polySimp_mulComm1" (formula "4") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "4") (term "0,1,0,0"))
                        (rule "polySimp_pullOutFactor2b" (formula "4") (term "0"))
                        (rule "add_literals" (formula "4") (term "1,1,0"))
                        (rule "times_zero_1" (formula "4") (term "1,0"))
                        (rule "add_zero_right" (formula "4") (term "0"))
                        (rule "apply_eq_monomials" (formula "2") (term "0") (ifseqformula "7"))
                        (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                        (rule "polySimp_mulComm1" (formula "2") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "2") (term "0,1,0,0"))
                        (rule "polySimp_pullOutFactor2b" (formula "2") (term "0"))
                        (rule "add_literals" (formula "2") (term "1,1,0"))
                        (rule "times_zero_1" (formula "2") (term "1,0"))
                        (rule "add_zero_right" (formula "2") (term "0"))
                        (rule "applyEqRigid" (formula "6") (term "1,0") (ifseqformula "9"))
                        (rule "applyEqRigid" (formula "3") (term "1,0") (ifseqformula "7"))
                        (rule "applyEq" (formula "7") (term "1") (ifseqformula "9"))
                        (rule "applyEq" (formula "23") (term "1,1,0") (ifseqformula "21"))
                        (rule "times_zero_1" (formula "23") (term "1,0"))
                        (rule "add_zero_right" (formula "23") (term "0"))
                        (rule "applyEq" (formula "25") (term "1,1,0") (ifseqformula "20"))
                        (rule "applyEq" (formula "4") (term "0") (ifseqformula "10"))
                        (rule "leq_literals" (formula "4"))
                        (rule "closeFalse" (formula "4"))
                     )
                     (branch "CUT: result_gcdHelp = 0 FALSE"
                         (builtin "One Step Simplification" (formula "23"))
                        (rule "replace_known_right" (formula "24") (term "0") (ifseqformula "36"))
                         (builtin "One Step Simplification" (formula "24"))
                        (rule "replace_known_right" (formula "25") (term "0") (ifseqformula "36"))
                         (builtin "One Step Simplification" (formula "25"))
                        (rule "replace_known_right" (formula "30") (term "0") (ifseqformula "36"))
                         (builtin "One Step Simplification" (formula "30"))
                        (rule "replace_known_right" (formula "29") (term "0") (ifseqformula "36"))
                         (builtin "One Step Simplification" (formula "29"))
                        (rule "replace_known_right" (formula "28") (term "0") (ifseqformula "36"))
                         (builtin "One Step Simplification" (formula "28"))
                        (rule "applyEq" (formula "27") (term "0,0") (ifseqformula "24"))
                        (rule "polySimp_mulComm0" (formula "27") (term "0"))
                        (rule "applyEq" (formula "33") (term "0,0") (ifseqformula "29"))
                        (rule "polySimp_mulComm0" (formula "33") (term "0"))
                        (rule "applyEq" (formula "32") (term "0,0") (ifseqformula "29"))
                        (rule "eqSymm" (formula "32"))
                        (rule "polySimp_homoEq" (formula "32"))
                        (rule "polySimp_mulLiterals" (formula "32") (term "1,0"))
                        (rule "polySimp_elimOne" (formula "32") (term "1,0"))
                        (rule "polySimp_mulComm0" (formula "32") (term "0,0"))
                        (rule "applyEq" (formula "25") (term "0") (ifseqformula "27"))
                        (rule "inEqSimp_homoInEq1" (formula "25"))
                        (rule "polySimp_addComm1" (formula "25") (term "0"))
                        (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0"))
                        (rule "add_literals" (formula "25") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "25") (term "1,0,0"))
                        (rule "add_zero_right" (formula "25") (term "0,0"))
                        (rule "applyEq" (formula "23") (term "0") (ifseqformula "27"))
                        (rule "inEqSimp_homoInEq0" (formula "23"))
                        (rule "polySimp_pullOutFactor1" (formula "23") (term "0"))
                        (rule "add_literals" (formula "23") (term "1,0"))
                        (rule "times_zero_1" (formula "23") (term "0"))
                        (rule "qeq_literals" (formula "23"))
                        (rule "true_left" (formula "23"))
                        (rule "applyEq" (formula "30") (term "1") (ifseqformula "28"))
                        (rule "applyEq" (formula "25") (term "1") (ifseqformula "23"))
                        (rule "applyEq" (formula "27") (term "0") (ifseqformula "32"))
                        (rule "inEqSimp_homoInEq0" (formula "27"))
                        (rule "polySimp_mulLiterals" (formula "27") (term "1,0"))
                        (rule "polySimp_pullOutFactor0" (formula "27") (term "0"))
                        (rule "add_literals" (formula "27") (term "1,0"))
                        (rule "times_zero_1" (formula "27") (term "0"))
                        (rule "qeq_literals" (formula "27"))
                        (rule "true_left" (formula "27"))
                        (rule "applyEq" (formula "28") (term "0") (ifseqformula "31"))
                        (rule "inEqSimp_homoInEq1" (formula "28"))
                        (rule "polySimp_mulLiterals" (formula "28") (term "1,0"))
                        (rule "polySimp_elimOne" (formula "28") (term "1,0"))
                        (rule "polySimp_addComm1" (formula "28") (term "0"))
                        (rule "polySimp_pullOutFactor2b" (formula "28") (term "0,0"))
                        (rule "add_literals" (formula "28") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "28") (term "1,0,0"))
                        (rule "add_zero_right" (formula "28") (term "0,0"))
                        (rule "applyEq" (formula "29") (term "0,1,0") (ifseqformula "23"))
                        (rule "polySimp_mulComm0" (formula "29") (term "1,0"))
                        (rule "polySimp_addComm0" (formula "29") (term "0"))
                        (rule "polySimp_sepPosMonomial" (formula "29"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "24"))
                        (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                        (rule "polySimp_elimOne" (formula "24") (term "0"))
                        (rule "inEqSimp_contradEq7" (formula "33") (ifseqformula "24"))
                        (rule "times_zero_1" (formula "33") (term "1,0,0"))
                        (rule "add_zero_right" (formula "33") (term "0,0"))
                        (rule "leq_literals" (formula "33") (term "0"))
                         (builtin "One Step Simplification" (formula "33"))
                        (rule "false_right" (formula "33"))
                        (rule "inEqSimp_contradInEq1" (formula "31") (term "0") (ifseqformula "24"))
                        (rule "qeq_literals" (formula "31") (term "0,0"))
                         (builtin "One Step Simplification" (formula "31"))
                        (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "24"))
                        (rule "leq_literals" (formula "8") (term "0"))
                         (builtin "One Step Simplification" (formula "8"))
                        (rule "true_left" (formula "8"))
                        (rule "jdiv_axiom" (formula "32") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "0,0,2,1"))
                        (rule "eqSymm" (formula "1"))
                        (rule "polySimp_elimOne" (formula "1") (term "0,0,2,0"))
                        (rule "inEqSimp_invertInEq1" (formula "1") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0"))
                        (rule "times_zero_2" (formula "1") (term "1,0,0"))
                        (rule "polySimp_elimOne" (formula "1") (term "0,0,0"))
                        (rule "inEqSimp_subsumption0" (formula "1") (term "0,0") (ifseqformula "17"))
                        (rule "leq_literals" (formula "1") (term "0,0,0"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "eqSymm" (formula "1"))
                        (rule "applyEq" (formula "33") (term "0,0") (ifseqformula "1"))
                        (rule "polyDiv_pullOut" (formula "33") (term "0,0") (inst "polyDivCoeff=quotient_2"))
                        (rule "polySimp_mulComm1" (formula "33") (term "1,0,0,2,0,0"))
                        (rule "polySimp_mulComm0" (formula "33") (term "0,1,0,0,2,0,0"))
                        (rule "polySimp_addComm0" (formula "33") (term "2,0,0"))
                        (rule "applyEq" (formula "33") (term "0,1,0,1,2,0,0") (ifseqformula "16"))
                        (rule "polySimp_mulLiterals" (formula "33") (term "1,0,1,2,0,0"))
                        (rule "polySimp_pullOutFactor0" (formula "33") (term "0,1,2,0,0"))
                        (rule "add_literals" (formula "33") (term "1,0,1,2,0,0"))
                        (rule "times_zero_1" (formula "33") (term "0,1,2,0,0"))
                        (rule "inEqSimp_contradEq7" (formula "33") (term "0,0,0") (ifseqformula "7"))
                        (rule "times_zero_1" (formula "33") (term "1,0,0,0,0,0"))
                        (rule "add_zero_right" (formula "33") (term "0,0,0,0,0"))
                        (rule "leq_literals" (formula "33") (term "0,0,0,0"))
                         (builtin "One Step Simplification" (formula "33"))
                        (rule "polySimp_mulComm0" (formula "33") (term "0"))
                        (rule "polySimp_rightDist" (formula "33") (term "0"))
                        (rule "polySimp_homoEq" (formula "33"))
                        (rule "polySimp_mulComm0" (formula "33") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "33") (term "1,0"))
                        (rule "polySimp_mulComm0" (formula "33") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "33") (term "0"))
                        (rule "applyEq" (formula "33") (term "0,1,0,0") (ifseqformula "16"))
                        (rule "polySimp_mulLiterals" (formula "33") (term "1,0,0"))
                        (rule "polySimp_pullOutFactor0" (formula "33") (term "0,0"))
                        (rule "add_literals" (formula "33") (term "1,0,0"))
                        (rule "times_zero_1" (formula "33") (term "0,0"))
                        (rule "add_zero_left" (formula "33") (term "0"))
                        (rule "polySimp_invertEq" (formula "33"))
                        (rule "polySimp_mulLiterals" (formula "33") (term "0"))
                        (rule "times_zero_2" (formula "33") (term "1"))
                        (rule "polySimp_elimOne" (formula "33") (term "0"))
                        (rule "polyDiv_zero" (formula "33") (term "0,0"))
                        (rule "div_literals" (formula "33") (term "1,0,0"))
                        (rule "inEqSimp_contradEq7" (formula "33") (term "0,0,0") (ifseqformula "7"))
                        (rule "times_zero_1" (formula "33") (term "1,0,0,0,0,0"))
                        (rule "add_zero_right" (formula "33") (term "0,0,0,0,0"))
                        (rule "leq_literals" (formula "33") (term "0,0,0,0"))
                         (builtin "One Step Simplification" (formula "33"))
                        (rule "times_zero_2" (formula "33") (term "0"))
                         (builtin "One Step Simplification" (formula "33"))
                        (rule "closeTrue" (formula "33"))
                     )
                  )
                  (branch "result_gcdHelp >= 0 FALSE"
                     (rule "eqSymm" (formula "7"))
                     (rule "replace_known_right" (formula "26") (term "0,1,1") (ifseqformula "30"))
                      (builtin "One Step Simplification" (formula "26"))
                     (rule "replace_known_right" (formula "23") (term "0,1,1") (ifseqformula "30"))
                      (builtin "One Step Simplification" (formula "23"))
                     (rule "inEqSimp_geqRight" (formula "30"))
                     (rule "times_zero_1" (formula "1") (term "1,0,0"))
                     (rule "add_zero_right" (formula "1") (term "0,0"))
                     (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "8"))
                     (rule "polySimp_mulComm1" (formula "31") (term "0"))
                     (rule "polySimp_homoEq" (formula "31"))
                     (rule "polySimp_mulLiterals" (formula "31") (term "1,0"))
                     (rule "polySimp_elimOne" (formula "31") (term "1,0"))
                     (rule "polySimp_mulComm0" (formula "31") (term "1,0"))
                     (rule "polySimp_sepPosMonomial" (formula "31"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                     (rule "mul_literals" (formula "1") (term "1"))
                     (rule "inEqSimp_contradEq3" (formula "24") (term "0") (ifseqformula "1"))
                     (rule "times_zero_1" (formula "24") (term "1,0,0,0"))
                     (rule "add_zero_right" (formula "24") (term "0,0,0"))
                     (rule "qeq_literals" (formula "24") (term "0,0"))
                      (builtin "One Step Simplification" (formula "24"))
                     (rule "andLeft" (formula "24"))
                     (rule "andLeft" (formula "24"))
                     (rule "applyEq" (formula "28") (term "0,0") (ifseqformula "25"))
                     (rule "polySimp_mulComm0" (formula "28") (term "0"))
                     (rule "applyEq" (formula "26") (term "0") (ifseqformula "28"))
                     (rule "inEqSimp_homoInEq1" (formula "26"))
                     (rule "polySimp_addComm1" (formula "26") (term "0"))
                     (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0"))
                     (rule "add_literals" (formula "26") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "26") (term "1,0,0"))
                     (rule "add_zero_right" (formula "26") (term "0,0"))
                     (rule "applyEq" (formula "24") (term "0") (ifseqformula "28"))
                     (rule "inEqSimp_homoInEq0" (formula "24"))
                     (rule "polySimp_pullOutFactor1" (formula "24") (term "0"))
                     (rule "add_literals" (formula "24") (term "1,0"))
                     (rule "times_zero_1" (formula "24") (term "0"))
                     (rule "qeq_literals" (formula "24"))
                     (rule "true_left" (formula "24"))
                     (rule "applyEq" (formula "26") (term "1") (ifseqformula "24"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "25"))
                     (rule "mul_literals" (formula "25") (term "1"))
                     (rule "inEqSimp_contradEq3" (formula "27") (term "0") (ifseqformula "1"))
                     (rule "times_zero_1" (formula "27") (term "1,0,0,0"))
                     (rule "add_zero_right" (formula "27") (term "0,0,0"))
                     (rule "qeq_literals" (formula "27") (term "0,0"))
                      (builtin "One Step Simplification" (formula "27"))
                     (rule "andLeft" (formula "27"))
                     (rule "andLeft" (formula "27"))
                     (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "28"))
                     (rule "polySimp_mulComm0" (formula "31") (term "0"))
                     (rule "applyEq" (formula "29") (term "0") (ifseqformula "31"))
                     (rule "inEqSimp_homoInEq1" (formula "29"))
                     (rule "polySimp_mulLiterals" (formula "29") (term "1,0"))
                     (rule "polySimp_elimOne" (formula "29") (term "1,0"))
                     (rule "polySimp_addComm1" (formula "29") (term "0"))
                     (rule "polySimp_pullOutFactor2b" (formula "29") (term "0,0"))
                     (rule "add_literals" (formula "29") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "29") (term "1,0,0"))
                     (rule "add_zero_right" (formula "29") (term "0,0"))
                     (rule "applyEq" (formula "27") (term "0") (ifseqformula "31"))
                     (rule "inEqSimp_homoInEq0" (formula "27"))
                     (rule "polySimp_mulLiterals" (formula "27") (term "1,0"))
                     (rule "polySimp_pullOutFactor0" (formula "27") (term "0"))
                     (rule "add_literals" (formula "27") (term "1,0"))
                     (rule "times_zero_1" (formula "27") (term "0"))
                     (rule "qeq_literals" (formula "27"))
                     (rule "true_left" (formula "27"))
                     (rule "applyEq" (formula "29") (term "1") (ifseqformula "27"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "28"))
                     (rule "mul_literals" (formula "28") (term "1"))
                     (rule "inEqSimp_strengthen0" (formula "3") (ifseqformula "31"))
                     (rule "inEqSimp_contradEq3" (formula "31") (ifseqformula "3"))
                     (rule "polySimp_mulAssoc" (formula "31") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "31") (term "0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "31") (term "1,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "31") (term "0,0"))
                     (rule "add_literals" (formula "31") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "31") (term "1,0,0"))
                     (rule "add_zero_right" (formula "31") (term "0,0"))
                     (rule "qeq_literals" (formula "31") (term "0"))
                      (builtin "One Step Simplification" (formula "31"))
                     (rule "false_right" (formula "31"))
                     (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "3"))
                     (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0"))
                     (rule "polySimp_elimOne" (formula "4") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "4") (term "0"))
                     (rule "polySimp_rightDist" (formula "4") (term "0,0,0"))
                     (rule "mul_literals" (formula "4") (term "0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "4") (term "1,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                     (rule "add_literals" (formula "4") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0"))
                     (rule "add_literals" (formula "4") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "4") (term "1,0,0"))
                     (rule "add_zero_right" (formula "4") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                     (rule "mul_literals" (formula "4") (term "1"))
                     (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "4"))
                     (rule "leq_literals" (formula "12") (term "0"))
                      (builtin "One Step Simplification" (formula "12"))
                     (rule "true_left" (formula "12"))
                     (rule "polyDiv_pullOut" (formula "15") (term "0") (inst "polyDivCoeff=quotient_2"))
                     (rule "polySimp_mulComm1" (formula "15") (term "1,0,0,2,0"))
                     (rule "polySimp_mulComm0" (formula "15") (term "0,1,0,0,2,0"))
                     (rule "polySimp_addComm0" (formula "15") (term "2,0"))
                     (rule "applyEq" (formula "15") (term "0,1,0,1,2,0") (ifseqformula "17"))
                     (rule "polySimp_mulLiterals" (formula "15") (term "1,0,1,2,0"))
                     (rule "polySimp_pullOutFactor0" (formula "15") (term "0,1,2,0"))
                     (rule "add_literals" (formula "15") (term "1,0,1,2,0"))
                     (rule "times_zero_1" (formula "15") (term "0,1,2,0"))
                     (rule "inEqSimp_contradEq7" (formula "15") (term "0,0") (ifseqformula "4"))
                     (rule "times_zero_1" (formula "15") (term "1,0,0,0,0"))
                     (rule "add_zero_right" (formula "15") (term "0,0,0,0"))
                     (rule "leq_literals" (formula "15") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "15"))
                     (rule "polySimp_homoEq" (formula "15"))
                     (rule "polySimp_mulComm0" (formula "15") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "15") (term "1,0"))
                     (rule "polySimp_mulComm0" (formula "15") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "15") (term "0"))
                     (rule "polySimp_pullOutFactor1" (formula "15") (term "0,0"))
                     (rule "add_literals" (formula "15") (term "1,0,0"))
                     (rule "times_zero_1" (formula "15") (term "0,0"))
                     (rule "add_zero_left" (formula "15") (term "0"))
                     (rule "polySimp_invertEq" (formula "15"))
                     (rule "times_zero_2" (formula "15") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                     (rule "polySimp_elimOne" (formula "15") (term "0"))
                     (rule "polyDiv_zero" (formula "15") (term "0"))
                      (builtin "One Step Simplification" (formula "15"))
                     (rule "div_literals" (formula "15") (term "0,1"))
                     (rule "inEqSimp_contradEq7" (formula "15") (term "0,0") (ifseqformula "4"))
                     (rule "times_zero_1" (formula "15") (term "1,0,0,0,0"))
                     (rule "add_zero_right" (formula "15") (term "0,0,0,0"))
                     (rule "leq_literals" (formula "15") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "15"))
                     (rule "true_left" (formula "15"))
                     (rule "allLeft" (formula "29") (inst "t=x_0"))
                     (rule "applyEq" (formula "29") (term "0,0,0,1,0,0") (ifseqformula "13"))
                     (rule "polySimp_mulComm0" (formula "29") (term "0,0,1,0,0"))
                     (rule "replace_known_left" (formula "29") (term "0,1,0,0") (ifseqformula "14"))
                      (builtin "One Step Simplification" (formula "29"))
                     (rule "applyEq" (formula "29") (term "0,0,1") (ifseqformula "9"))
                     (rule "polySimp_mulComm1" (formula "29") (term "0,1"))
                     (rule "polySimp_homoEq" (formula "29") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "29") (term "1,0,1"))
                     (rule "polySimp_elimOne" (formula "29") (term "1,0,1"))
                     (rule "polySimp_mulComm0" (formula "29") (term "1,0,1"))
                     (rule "polySimp_sepPosMonomial" (formula "29") (term "1"))
                     (rule "inEqSimp_contradEq3" (formula "29") (term "1") (ifseqformula "3"))
                     (rule "polySimp_mulAssoc" (formula "29") (term "1,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "29") (term "0,1,0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0,1"))
                     (rule "polySimp_pullOutFactor0b" (formula "29") (term "0,0,1"))
                     (rule "add_literals" (formula "29") (term "1,1,0,0,1"))
                     (rule "times_zero_1" (formula "29") (term "1,0,0,1"))
                     (rule "add_zero_right" (formula "29") (term "0,0,1"))
                     (rule "qeq_literals" (formula "29") (term "0,1"))
                      (builtin "One Step Simplification" (formula "29"))
                     (rule "inEqSimp_contradInEq1" (formula "29") (term "0") (ifseqformula "4"))
                     (rule "qeq_literals" (formula "29") (term "0,0"))
                      (builtin "One Step Simplification" (formula "29"))
                     (rule "notLeft" (formula "29"))
                     (rule "polyDiv_pullOut" (formula "12") (term "0") (inst "polyDivCoeff=quotient_3"))
                     (rule "polySimp_mulComm1" (formula "12") (term "1,0,0,2,0"))
                     (rule "polySimp_mulComm0" (formula "12") (term "0,1,0,0,2,0"))
                     (rule "polySimp_addComm0" (formula "12") (term "2,0"))
                     (rule "applyEq" (formula "12") (term "0,1,0,1,2,0") (ifseqformula "14"))
                     (rule "polySimp_pullOutFactor1" (formula "12") (term "0,1,2,0"))
                     (rule "add_literals" (formula "12") (term "1,0,1,2,0"))
                     (rule "times_zero_1" (formula "12") (term "0,1,2,0"))
                     (rule "inEqSimp_contradEq7" (formula "12") (term "0,0") (ifseqformula "4"))
                     (rule "times_zero_1" (formula "12") (term "1,0,0,0,0"))
                     (rule "add_zero_right" (formula "12") (term "0,0,0,0"))
                     (rule "leq_literals" (formula "12") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "12"))
                     (rule "polySimp_homoEq" (formula "12"))
                     (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                     (rule "polySimp_mulComm0" (formula "12") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "12") (term "0"))
                     (rule "polySimp_pullOutFactor1" (formula "12") (term "0,0"))
                     (rule "add_literals" (formula "12") (term "1,0,0"))
                     (rule "times_zero_1" (formula "12") (term "0,0"))
                     (rule "add_zero_left" (formula "12") (term "0"))
                     (rule "polySimp_invertEq" (formula "12"))
                     (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                     (rule "times_zero_2" (formula "12") (term "1"))
                     (rule "polySimp_elimOne" (formula "12") (term "0"))
                     (rule "polyDiv_zero" (formula "12") (term "0"))
                      (builtin "One Step Simplification" (formula "12"))
                     (rule "div_literals" (formula "12") (term "0,1"))
                     (rule "inEqSimp_contradEq7" (formula "12") (term "0,0") (ifseqformula "4"))
                     (rule "times_zero_1" (formula "12") (term "1,0,0,0,0"))
                     (rule "add_zero_right" (formula "12") (term "0,0,0,0"))
                     (rule "leq_literals" (formula "12") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "12"))
                     (rule "true_left" (formula "12"))
                     (rule "polySimp_critPair" (formula "15") (ifseqformula "13"))
                     (rule "polySimp_mulComm0" (formula "15") (term "0,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "15") (term "1,1,1,0"))
                     (rule "polySimp_rightDist" (formula "15") (term "0,0"))
                     (rule "polySimp_mulComm1" (formula "15") (term "1,0,0"))
                     (rule "polySimp_mulAssoc" (formula "15") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "15") (term "0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "15") (term "1,0"))
                     (rule "polySimp_mulComm1" (formula "15") (term "1,1,0"))
                     (rule "polySimp_mulAssoc" (formula "15") (term "0,1,0"))
                     (rule "polySimp_mulComm0" (formula "15") (term "0,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "15") (term "0"))
                     (rule "polySimp_addComm1" (formula "15") (term "0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "15") (term "0"))
                     (rule "add_literals" (formula "15") (term "1,1,0"))
                     (rule "times_zero_1" (formula "15") (term "1,0"))
                     (rule "add_zero_right" (formula "15") (term "0"))
                     (rule "polySimp_addComm0" (formula "15") (term "0"))
                     (rule "polySimp_sepNegMonomial" (formula "15"))
                     (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                     (rule "polySimp_elimOne" (formula "15") (term "0"))
                     (rule "polyDiv_pullOut" (formula "23") (term "0") (inst "polyDivCoeff=quotient_5"))
                     (rule "polySimp_mulComm1" (formula "23") (term "1,0,0,2,0"))
                     (rule "polySimp_mulComm0" (formula "23") (term "0,1,0,0,2,0"))
                     (rule "polySimp_addComm0" (formula "23") (term "2,0"))
                     (rule "applyEq" (formula "23") (term "0,1,0,1,2,0") (ifseqformula "25"))
                     (rule "polySimp_pullOutFactor1" (formula "23") (term "0,1,2,0"))
                     (rule "add_literals" (formula "23") (term "1,0,1,2,0"))
                     (rule "times_zero_1" (formula "23") (term "0,1,2,0"))
                     (rule "inEqSimp_contradEq3" (formula "23") (term "0,0") (ifseqformula "1"))
                     (rule "times_zero_1" (formula "23") (term "1,0,0,0,0"))
                     (rule "add_zero_right" (formula "23") (term "0,0,0,0"))
                     (rule "qeq_literals" (formula "23") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "23"))
                     (rule "polySimp_homoEq" (formula "23"))
                     (rule "polySimp_mulComm0" (formula "23") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "23") (term "1,0"))
                     (rule "polySimp_mulComm0" (formula "23") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "23") (term "0"))
                     (rule "polySimp_pullOutFactor1" (formula "23") (term "0,0"))
                     (rule "add_literals" (formula "23") (term "1,0,0"))
                     (rule "times_zero_1" (formula "23") (term "0,0"))
                     (rule "add_zero_left" (formula "23") (term "0"))
                     (rule "polySimp_invertEq" (formula "23"))
                     (rule "times_zero_2" (formula "23") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                     (rule "polySimp_elimOne" (formula "23") (term "0"))
                     (rule "polyDiv_zero" (formula "23") (term "0"))
                      (builtin "One Step Simplification" (formula "23"))
                     (rule "div_literals" (formula "23") (term "0,1"))
                     (rule "inEqSimp_contradEq3" (formula "23") (term "0,0") (ifseqformula "1"))
                     (rule "times_zero_1" (formula "23") (term "1,0,0,0,0"))
                     (rule "add_zero_right" (formula "23") (term "0,0,0,0"))
                     (rule "qeq_literals" (formula "23") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "23"))
                     (rule "true_left" (formula "23"))
                     (rule "polyDiv_pullOut" (formula "25") (term "0") (inst "polyDivCoeff=quotient_4"))
                     (rule "polySimp_mulComm1" (formula "25") (term "1,0,0,2,0"))
                     (rule "polySimp_mulComm0" (formula "25") (term "0,1,0,0,2,0"))
                     (rule "polySimp_addComm0" (formula "25") (term "2,0"))
                     (rule "applyEq" (formula "25") (term "0,1,0,1,2,0") (ifseqformula "27"))
                     (rule "polySimp_mulLiterals" (formula "25") (term "1,0,1,2,0"))
                     (rule "polySimp_pullOutFactor0" (formula "25") (term "0,1,2,0"))
                     (rule "add_literals" (formula "25") (term "1,0,1,2,0"))
                     (rule "times_zero_1" (formula "25") (term "0,1,2,0"))
                     (rule "inEqSimp_contradEq3" (formula "25") (term "0,0") (ifseqformula "1"))
                     (rule "times_zero_1" (formula "25") (term "1,0,0,0,0"))
                     (rule "add_zero_right" (formula "25") (term "0,0,0,0"))
                     (rule "qeq_literals" (formula "25") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "25"))
                     (rule "polySimp_homoEq" (formula "25"))
                     (rule "polySimp_mulComm0" (formula "25") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "25") (term "1,0"))
                     (rule "polySimp_mulComm0" (formula "25") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "25") (term "0"))
                     (rule "polySimp_pullOutFactor1" (formula "25") (term "0,0"))
                     (rule "add_literals" (formula "25") (term "1,0,0"))
                     (rule "times_zero_1" (formula "25") (term "0,0"))
                     (rule "add_zero_left" (formula "25") (term "0"))
                     (rule "polySimp_invertEq" (formula "25"))
                     (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                     (rule "times_zero_2" (formula "25") (term "1"))
                     (rule "polySimp_elimOne" (formula "25") (term "0"))
                     (rule "polyDiv_zero" (formula "25") (term "0"))
                      (builtin "One Step Simplification" (formula "25"))
                     (rule "div_literals" (formula "25") (term "0,1"))
                     (rule "inEqSimp_contradEq3" (formula "25") (term "0,0") (ifseqformula "1"))
                     (rule "times_zero_1" (formula "25") (term "1,0,0,0,0"))
                     (rule "add_zero_right" (formula "25") (term "0,0,0,0"))
                     (rule "qeq_literals" (formula "25") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "25"))
                     (rule "true_left" (formula "25"))
                     (rule "polySimp_critPair" (formula "26") (ifseqformula "24"))
                     (rule "polySimp_mulComm0" (formula "26") (term "1,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "26") (term "0,1,0,0"))
                     (rule "polySimp_rightDist" (formula "26") (term "1,0"))
                     (rule "polySimp_mulComm1" (formula "26") (term "1,1,0"))
                     (rule "polySimp_mulAssoc" (formula "26") (term "0,1,0"))
                     (rule "polySimp_mulComm0" (formula "26") (term "0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "26") (term "0,0"))
                     (rule "polySimp_mulComm1" (formula "26") (term "1,0,0"))
                     (rule "polySimp_mulAssoc" (formula "26") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "26") (term "0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "26") (term "0"))
                     (rule "polySimp_addComm1" (formula "26") (term "0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "26") (term "0"))
                     (rule "add_literals" (formula "26") (term "1,1,0"))
                     (rule "times_zero_1" (formula "26") (term "1,0"))
                     (rule "add_zero_right" (formula "26") (term "0"))
                     (rule "polySimp_addComm0" (formula "26") (term "0"))
                     (rule "polySimp_sepNegMonomial" (formula "26"))
                     (rule "polySimp_mulLiterals" (formula "26") (term "0"))
                     (rule "polySimp_elimOne" (formula "26") (term "0"))
                     (rule "jdiv_axiom" (formula "29") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "0,0,2,1"))
                     (rule "eqSymm" (formula "1"))
                     (rule "polySimp_elimOne" (formula "1") (term "0,0,2,0"))
                     (rule "inEqSimp_invertInEq1" (formula "1") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0"))
                     (rule "times_zero_2" (formula "1") (term "1,0,0"))
                     (rule "polySimp_elimOne" (formula "1") (term "0,0,0"))
                     (rule "inEqSimp_subsumption0" (formula "1") (term "0,0") (ifseqformula "18"))
                     (rule "leq_literals" (formula "1") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "eqSymm" (formula "1"))
                     (rule "applyEq" (formula "30") (term "0,0") (ifseqformula "1"))
                     (rule "polyDiv_pullOut" (formula "30") (term "0,0") (inst "polyDivCoeff=quotient_2"))
                     (rule "polySimp_mulComm1" (formula "30") (term "1,0,0,2,0,0"))
                     (rule "polySimp_mulComm0" (formula "30") (term "0,1,0,0,2,0,0"))
                     (rule "polySimp_addComm0" (formula "30") (term "2,0,0"))
                     (rule "applyEq" (formula "30") (term "0,1,0,1,2,0,0") (ifseqformula "17"))
                     (rule "polySimp_mulLiterals" (formula "30") (term "1,0,1,2,0,0"))
                     (rule "polySimp_pullOutFactor0" (formula "30") (term "0,1,2,0,0"))
                     (rule "add_literals" (formula "30") (term "1,0,1,2,0,0"))
                     (rule "times_zero_1" (formula "30") (term "0,1,2,0,0"))
                     (rule "inEqSimp_contradEq7" (formula "30") (term "0,0,0") (ifseqformula "5"))
                     (rule "times_zero_1" (formula "30") (term "1,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "30") (term "0,0,0,0,0"))
                     (rule "leq_literals" (formula "30") (term "0,0,0,0"))
                      (builtin "One Step Simplification" (formula "30"))
                     (rule "polySimp_mulComm0" (formula "30") (term "0"))
                     (rule "polySimp_rightDist" (formula "30") (term "0"))
                     (rule "polySimp_homoEq" (formula "30"))
                     (rule "polySimp_mulComm0" (formula "30") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "30") (term "1,0"))
                     (rule "polySimp_mulComm0" (formula "30") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "30") (term "0"))
                     (rule "applyEq" (formula "30") (term "0,1,0,0") (ifseqformula "17"))
                     (rule "polySimp_mulLiterals" (formula "30") (term "1,0,0"))
                     (rule "polySimp_pullOutFactor0" (formula "30") (term "0,0"))
                     (rule "add_literals" (formula "30") (term "1,0,0"))
                     (rule "times_zero_1" (formula "30") (term "0,0"))
                     (rule "add_zero_left" (formula "30") (term "0"))
                     (rule "polySimp_invertEq" (formula "30"))
                     (rule "times_zero_2" (formula "30") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "30") (term "0"))
                     (rule "polySimp_elimOne" (formula "30") (term "0"))
                     (rule "polyDiv_zero" (formula "30") (term "0,0"))
                     (rule "div_literals" (formula "30") (term "1,0,0"))
                     (rule "inEqSimp_contradEq7" (formula "30") (term "0,0,0") (ifseqformula "5"))
                     (rule "times_zero_1" (formula "30") (term "1,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "30") (term "0,0,0,0,0"))
                     (rule "leq_literals" (formula "30") (term "0,0,0,0"))
                      (builtin "One Step Simplification" (formula "30"))
                     (rule "times_zero_2" (formula "30") (term "0"))
                      (builtin "One Step Simplification" (formula "30"))
                     (rule "closeTrue" (formula "30"))
                  )
               )
            )
            (branch "Case 2"
                (builtin "One Step Simplification" (formula "10"))
               (rule "closeTrue" (formula "10"))
            )
         )
         (branch "Exceptional Post (gcdHelp)"
             (builtin "One Step Simplification" (formula "5"))
             (builtin "One Step Simplification" (formula "8"))
            (rule "andLeft" (formula "5"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "6") (term "1,0") (ifseqformula "5"))
            (rule "andLeft" (formula "6"))
            (rule "andLeft" (formula "6"))
            (rule "andLeft" (formula "8"))
            (rule "notLeft" (formula "6"))
            (rule "close" (formula "9") (ifseqformula "8"))
         )
         (branch "Pre (gcdHelp)"
             (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "2")))
            (rule "inEqSimp_gtRight" (formula "4"))
            (rule "polySimp_mulAssoc" (formula "1") (term "0,0"))
            (rule "polySimp_mulComm0" (formula "1") (term "0,0,0"))
            (rule "polySimp_mulLiterals" (formula "1") (term "0,0"))
            (rule "polySimp_elimOne" (formula "1") (term "0,0"))
            (rule "polySimp_addComm0" (formula "1") (term "0"))
            (rule "inEqSimp_ltRight" (formula "5"))
            (rule "times_zero_1" (formula "1") (term "0,0"))
            (rule "add_zero_left" (formula "1") (term "0"))
            (rule "replace_known_left" (formula "6") (term "0") (ifseqformula "1"))
             (builtin "One Step Simplification" (formula "6"))
            (rule "inEqSimp_ltToLeq" (formula "3"))
            (rule "times_zero_1" (formula "3") (term "1,0,0"))
            (rule "add_zero_right" (formula "3") (term "0,0"))
            (rule "inEqSimp_geqRight" (formula "6"))
            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "3"))
            (rule "inEqSimp_sepPosMonomial0" (formula "4"))
            (rule "mul_literals" (formula "4") (term "1"))
            (rule "inEqSimp_sepNegMonomial0" (formula "1"))
            (rule "polySimp_mulLiterals" (formula "1") (term "0"))
            (rule "polySimp_elimOne" (formula "1") (term "0"))
            (rule "inEqSimp_contradInEq1" (formula "3") (ifseqformula "1"))
            (rule "andLeft" (formula "3"))
            (rule "inEqSimp_homoInEq1" (formula "3"))
            (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
            (rule "polySimp_pullOutFactor0b" (formula "3") (term "0"))
            (rule "add_literals" (formula "3") (term "1,1,0"))
            (rule "times_zero_1" (formula "3") (term "1,0"))
            (rule "add_zero_right" (formula "3") (term "0"))
            (rule "leq_literals" (formula "3"))
            (rule "closeFalse" (formula "3"))
         )
      )
   )
   (branch "if x_1 false"
       (builtin "One Step Simplification" (formula "5"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "notLeft" (formula "1"))
      (rule "variableDeclarationMult" (formula "5") (term "1"))
      (rule "variableDeclaration" (formula "5") (term "1") (newnames "big"))
      (rule "variableDeclaration" (formula "5") (term "1") (newnames "small"))
      (rule "blockEmpty" (formula "5") (term "1"))
      (rule "ifElseUnfold" (formula "5") (term "1") (inst "#boolv=x"))
      (rule "variableDeclaration" (formula "5") (term "1") (newnames "x_2"))
      (rule "greater_than_comparison_simple" (formula "5") (term "1"))
       (builtin "One Step Simplification" (formula "5"))
      (rule "ifElseSplit" (formula "5"))
      (branch "if x_2 true"
          (builtin "One Step Simplification" (formula "6"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "assignment" (formula "6") (term "1"))
          (builtin "One Step Simplification" (formula "6"))
         (rule "assignment" (formula "6") (term "1"))
          (builtin "One Step Simplification" (formula "6"))
         (rule "blockEmpty" (formula "6") (term "1"))
         (rule "returnUnfold" (formula "6") (term "1") (inst "#v0=x"))
         (rule "variableDeclarationAssign" (formula "6") (term "1"))
         (rule "variableDeclaration" (formula "6") (term "1") (newnames "x_3"))
          (builtin "Use Operation Contract" (formula "6") (newnames "heapBefore_gcdHelp,result_gcdHelp,exc_0,heapAfter_gcdHelp,anon_heap_gcdHelp") (contract "Gcd[Gcd::gcdHelp(int,int)].JML normal_behavior operation contract.0"))
         (branch "Post (gcdHelp)"
             (builtin "One Step Simplification" (formula "5"))
             (builtin "One Step Simplification" (formula "8"))
            (rule "andLeft" (formula "5"))
            (rule "andLeft" (formula "6"))
            (rule "andLeft" (formula "7"))
            (rule "assignment" (formula "10") (term "1"))
             (builtin "One Step Simplification" (formula "10"))
            (rule "methodCallReturn" (formula "10") (term "1"))
            (rule "assignment" (formula "10") (term "1"))
             (builtin "One Step Simplification" (formula "10"))
            (rule "methodCallEmpty" (formula "10") (term "1"))
            (rule "tryEmpty" (formula "10") (term "1"))
             (builtin "One Step Simplification" (formula "10"))
            (rule "emptyModality" (formula "10") (term "1"))
            (rule "andRight" (formula "10"))
            (branch "Case 1"
               (rule "impRight" (formula "10"))
               (rule "andRight" (formula "11"))
               (branch "Case 1"
                  (rule "andRight" (formula "11"))
                  (branch "Case 1"
                      (builtin "One Step Simplification" (formula "1"))
                      (builtin "One Step Simplification" (formula "11"))
                     (rule "replace_known_right" (formula "8") (term "0,0,1") (ifseqformula "11"))
                      (builtin "One Step Simplification" (formula "8"))
                     (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "8"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "notLeft" (formula "1"))
                     (rule "inEqSimp_ltRight" (formula "10"))
                     (rule "times_zero_1" (formula "1") (term "0,0"))
                     (rule "add_zero_left" (formula "1") (term "0"))
                     (rule "inEqSimp_ltRight" (formula "10"))
                     (rule "times_zero_1" (formula "1") (term "0,0"))
                     (rule "add_zero_left" (formula "1") (term "0"))
                     (rule "inEqSimp_gtToGeq" (formula "3"))
                     (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "3") (term "0"))
                     (rule "applyEq" (formula "2") (term "0") (ifseqformula "9"))
                     (rule "qeq_literals" (formula "2"))
                     (rule "true_left" (formula "2"))
                     (rule "applyEq" (formula "10") (term "0,0") (ifseqformula "8"))
                      (builtin "One Step Simplification" (formula "10"))
                     (rule "closeTrue" (formula "10"))
                  )
                  (branch "Case 2"
                      (builtin "One Step Simplification" (formula "1"))
                      (builtin "One Step Simplification" (formula "11"))
                     (rule "replace_known_right" (formula "8") (term "1,0,1") (ifseqformula "11"))
                      (builtin "One Step Simplification" (formula "8"))
                     (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "8"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "notLeft" (formula "1"))
                     (rule "inEqSimp_ltRight" (formula "10"))
                     (rule "times_zero_1" (formula "1") (term "0,0"))
                     (rule "add_zero_left" (formula "1") (term "0"))
                     (rule "inEqSimp_ltRight" (formula "10"))
                     (rule "times_zero_1" (formula "1") (term "0,0"))
                     (rule "add_zero_left" (formula "1") (term "0"))
                     (rule "inEqSimp_gtToGeq" (formula "3"))
                     (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "3") (term "0"))
                     (rule "applyEq" (formula "2") (term "0") (ifseqformula "9"))
                     (rule "qeq_literals" (formula "2"))
                     (rule "true_left" (formula "2"))
                     (rule "applyEq" (formula "2") (term "1,0,0") (ifseqformula "8"))
                     (rule "add_zero_right" (formula "2") (term "0,0"))
                     (rule "jmod_axiom" (formula "10") (term "0"))
                     (rule "polySimp_mulComm1" (formula "10") (term "1,0"))
                     (rule "polySimp_sepNegMonomial" (formula "10"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                     (rule "polySimp_elimOne" (formula "10") (term "0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                     (rule "polySimp_elimOne" (formula "2") (term "0"))
                     (rule "inEqSimp_contradEq3" (formula "9") (ifseqformula "2"))
                     (rule "times_zero_1" (formula "9") (term "1,0,0"))
                     (rule "add_zero_right" (formula "9") (term "0,0"))
                     (rule "qeq_literals" (formula "9") (term "0"))
                      (builtin "One Step Simplification" (formula "9"))
                     (rule "false_right" (formula "9"))
                     (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "1"))
                     (rule "qeq_literals" (formula "2") (term "0"))
                      (builtin "One Step Simplification" (formula "2"))
                     (rule "closeFalse" (formula "2"))
                  )
               )
               (branch "Case 2"
                   (builtin "One Step Simplification" (formula "1"))
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "allRight" (formula "11") (inst "sk=x_0"))
                  (rule "impRight" (formula "11"))
                  (rule "andLeft" (formula "1"))
                  (rule "andLeft" (formula "1"))
                  (rule "inEqSimp_ltRight" (formula "12"))
                  (rule "times_zero_1" (formula "1") (term "0,0"))
                  (rule "add_zero_left" (formula "1") (term "0"))
                  (rule "inEqSimp_ltRight" (formula "13"))
                  (rule "times_zero_1" (formula "1") (term "0,0"))
                  (rule "add_zero_left" (formula "1") (term "0"))
                  (rule "inEqSimp_gtToGeq" (formula "7"))
                  (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "7") (term "0"))
                  (rule "inEqSimp_gtToGeq" (formula "13") (term "0,0,0,0,1,1"))
                  (rule "times_zero_1" (formula "13") (term "1,0,0,0,0,0,0,1,1"))
                  (rule "add_zero_right" (formula "13") (term "0,0,0,0,0,0,1,1"))
                  (rule "inEqSimp_gtToGeq" (formula "3"))
                  (rule "times_zero_1" (formula "3") (term "1,0,0"))
                  (rule "add_zero_right" (formula "3") (term "0,0"))
                  (rule "jmod_axiom" (formula "13") (term "0,1,0,0,1,1"))
                  (rule "polySimp_mulComm1" (formula "13") (term "1,0,1,0,0,1,1"))
                  (rule "jmod_axiom" (formula "13") (term "0,1,0,1,1"))
                  (rule "polySimp_mulComm1" (formula "13") (term "1,0,1,0,1,1"))
                  (rule "jmod_axiom" (formula "13") (term "0,1,0,0,0,1,1"))
                  (rule "polySimp_mulComm1" (formula "13") (term "1,0,1,0,0,0,1,1"))
                  (rule "jmod_axiom" (formula "13") (term "0,1,0,1"))
                  (rule "polySimp_mulComm1" (formula "13") (term "1,0,1,0,1"))
                  (rule "jmod_axiom" (formula "13") (term "0,0,0,1"))
                  (rule "polySimp_mulComm1" (formula "13") (term "1,0,0,0,1"))
                  (rule "jmod_axiom" (formula "14") (term "0"))
                  (rule "polySimp_mulComm1" (formula "14") (term "1,0"))
                  (rule "jmod_axiom" (formula "5") (term "0"))
                  (rule "polySimp_mulComm1" (formula "5") (term "1,0"))
                  (rule "jmod_axiom" (formula "4") (term "0"))
                  (rule "polySimp_mulComm1" (formula "4") (term "1,0"))
                  (rule "polySimp_sepNegMonomial" (formula "13") (term "1,0,0,1,1"))
                  (rule "polySimp_mulLiterals" (formula "13") (term "0,1,0,0,1,1"))
                  (rule "polySimp_elimOne" (formula "13") (term "0,1,0,0,1,1"))
                  (rule "polySimp_sepNegMonomial" (formula "13") (term "1,0,1,1"))
                  (rule "polySimp_mulLiterals" (formula "13") (term "0,1,0,1,1"))
                  (rule "polySimp_elimOne" (formula "13") (term "0,1,0,1,1"))
                  (rule "polySimp_sepNegMonomial" (formula "13") (term "1,0,0,0,1,1"))
                  (rule "polySimp_mulLiterals" (formula "13") (term "0,1,0,0,0,1,1"))
                  (rule "polySimp_elimOne" (formula "13") (term "0,1,0,0,0,1,1"))
                  (rule "polySimp_sepNegMonomial" (formula "13") (term "1,0,1"))
                  (rule "polySimp_mulLiterals" (formula "13") (term "0,1,0,1"))
                  (rule "polySimp_elimOne" (formula "13") (term "0,1,0,1"))
                  (rule "polySimp_sepNegMonomial" (formula "13") (term "0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "13") (term "0,0,0,1"))
                  (rule "polySimp_elimOne" (formula "13") (term "0,0,0,1"))
                  (rule "polySimp_sepNegMonomial" (formula "14"))
                  (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                  (rule "polySimp_elimOne" (formula "14") (term "0"))
                  (rule "polySimp_sepNegMonomial" (formula "5"))
                  (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                  (rule "polySimp_elimOne" (formula "5") (term "0"))
                  (rule "polySimp_sepNegMonomial" (formula "4"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                  (rule "polySimp_elimOne" (formula "4") (term "0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "7"))
                  (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                  (rule "polySimp_elimOne" (formula "7") (term "0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "0,0,0,0,1,1"))
                  (rule "mul_literals" (formula "13") (term "1,0,0,0,0,1,1"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                  (rule "mul_literals" (formula "3") (term "1"))
                  (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "7"))
                  (rule "times_zero_1" (formula "2") (term "0,0"))
                  (rule "add_zero_left" (formula "2") (term "0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                  (rule "mul_literals" (formula "2") (term "1"))
                  (rule "inEqSimp_contradEq7" (formula "14") (term "0,0") (ifseqformula "2"))
                  (rule "times_zero_1" (formula "14") (term "1,0,0,0,0"))
                  (rule "add_zero_right" (formula "14") (term "0,0,0,0"))
                  (rule "leq_literals" (formula "14") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "14"))
                  (rule "andLeft" (formula "14"))
                  (rule "andLeft" (formula "14"))
                  (rule "inEqSimp_contradEq7" (formula "7") (term "0,0") (ifseqformula "2"))
                  (rule "times_zero_1" (formula "7") (term "1,0,0,0,0"))
                  (rule "add_zero_right" (formula "7") (term "0,0,0,0"))
                  (rule "leq_literals" (formula "7") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "7"))
                  (rule "true_left" (formula "7"))
                  (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "2"))
                  (rule "leq_literals" (formula "1") (term "0"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "true_left" (formula "1"))
                  (rule "nnf_imp2or" (formula "14") (term "0"))
                  (rule "nnf_notAnd" (formula "14") (term "0,0"))
                  (rule "nnf_notAnd" (formula "14") (term "0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "14") (term "0,0,0,0"))
                  (rule "mul_literals" (formula "14") (term "1,0,0,0,0,0,0"))
                  (rule "add_literals" (formula "14") (term "0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "14") (term "0,0,0,0,0"))
                  (rule "jdiv_axiom" (formula "15") (term "0,0"))
                  (rule "eqSymm" (formula "1"))
                  (rule "jdiv_axiom" (formula "6") (term "0,0"))
                  (rule "eqSymm" (formula "6"))
                  (rule "replace_known_left" (formula "6") (term "0,0") (ifseqformula "3"))
                   (builtin "One Step Simplification" (formula "6"))
                  (rule "eqSymm" (formula "6"))
                  (rule "applyEq" (formula "7") (term "0,0") (ifseqformula "6"))
                  (rule "jdiv_axiom" (formula "5") (term "0,0"))
                  (rule "eqSymm" (formula "5"))
                  (rule "inEqSimp_subsumption1" (formula "5") (term "0,0") (ifseqformula "2"))
                  (rule "leq_literals" (formula "5") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "5"))
                  (rule "eqSymm" (formula "5"))
                  (rule "applyEq" (formula "6") (term "0,0") (ifseqformula "5"))
                  (rule "jdiv_axiom" (formula "16") (term "0,0"))
                  (rule "eqSymm" (formula "16"))
                  (rule "replace_known_left" (formula "16") (term "0,0") (ifseqformula "3"))
                   (builtin "One Step Simplification" (formula "16"))
                  (rule "eqSymm" (formula "16"))
                  (rule "applyEq" (formula "17") (term "0,0") (ifseqformula "16"))
                  (rule "jdiv_axiom" (formula "15") (term "0,0"))
                  (rule "eqSymm" (formula "15"))
                  (rule "inEqSimp_subsumption1" (formula "15") (term "0,0") (ifseqformula "2"))
                  (rule "leq_literals" (formula "15") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "15"))
                  (rule "eqSymm" (formula "15"))
                  (rule "applyEq" (formula "16") (term "0,0") (ifseqformula "15"))
                  (rule "div_axiom" (formula "1") (term "0,2,0") (inst "quotient=quotient_0"))
                  (rule "polySimp_mulComm0" (formula "1") (term "0,1,1,1"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,1,1,1,1"))
                  (rule "polySimp_mulComm0" (formula "1") (term "0,2,1,1"))
                  (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,1"))
                  (rule "inEqSimp_contradEq7" (formula "1") (term "0") (ifseqformula "5"))
                  (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                  (rule "add_zero_right" (formula "1") (term "0,0,0"))
                  (rule "leq_literals" (formula "1") (term "0,0"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "andLeft" (formula "1"))
                  (rule "andLeft" (formula "1"))
                  (rule "applyEq" (formula "4") (term "0,2,0") (ifseqformula "1"))
                  (rule "inEqSimp_subsumption1" (formula "3") (term "0") (ifseqformula "7"))
                  (rule "leq_literals" (formula "3") (term "0,0"))
                   (builtin "One Step Simplification" (formula "3"))
                  (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "2"))
                  (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                  (rule "polySimp_elimOne" (formula "3") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "3") (term "0"))
                  (rule "polySimp_rightDist" (formula "3") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "3") (term "0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "3") (term "1,0,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0"))
                  (rule "add_literals" (formula "3") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "3") (term "1,0,0"))
                  (rule "add_zero_right" (formula "3") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                  (rule "mul_literals" (formula "3") (term "1"))
                  (rule "div_axiom" (formula "4") (term "1,0") (inst "quotient=quotient_1"))
                  (rule "polySimp_mulComm0" (formula "4") (term "0,1,0,1"))
                  (rule "polySimp_mulComm0" (formula "4") (term "1,1,1,1,1"))
                  (rule "polySimp_mulComm0" (formula "4") (term "0,1,1,1"))
                  (rule "polySimp_mulComm0" (formula "4") (term "0,2,1,1"))
                  (rule "inEqSimp_contradEq7" (formula "4") (term "0") (ifseqformula "8"))
                  (rule "times_zero_1" (formula "4") (term "1,0,0,0"))
                  (rule "add_zero_right" (formula "4") (term "0,0,0"))
                  (rule "leq_literals" (formula "4") (term "0,0"))
                   (builtin "One Step Simplification" (formula "4"))
                  (rule "andLeft" (formula "4"))
                  (rule "andLeft" (formula "4"))
                  (rule "applyEq" (formula "7") (term "1,0") (ifseqformula "4"))
                  (rule "inEqSimp_subsumption1" (formula "6") (term "0") (ifseqformula "10"))
                  (rule "leq_literals" (formula "6") (term "0,0"))
                   (builtin "One Step Simplification" (formula "6"))
                  (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "5"))
                  (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0"))
                  (rule "polySimp_elimOne" (formula "6") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "6") (term "0"))
                  (rule "polySimp_rightDist" (formula "6") (term "0,0,0"))
                  (rule "mul_literals" (formula "6") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor2b" (formula "6") (term "0,0"))
                  (rule "add_literals" (formula "6") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "6") (term "1,0,0"))
                  (rule "add_zero_right" (formula "6") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                  (rule "mul_literals" (formula "6") (term "1"))
                  (rule "div_axiom" (formula "13") (term "1") (inst "quotient=quotient_2"))
                  (rule "polySimp_mulComm0" (formula "13") (term "0,1,1,1"))
                  (rule "polySimp_mulComm0" (formula "13") (term "0,2,1,1"))
                  (rule "polySimp_mulComm0" (formula "13") (term "0,1,0,1"))
                  (rule "polySimp_mulComm0" (formula "13") (term "1,1,1,1,1"))
                  (rule "inEqSimp_contradEq7" (formula "13") (term "0") (ifseqformula "10"))
                  (rule "times_zero_1" (formula "13") (term "1,0,0,0"))
                  (rule "add_zero_right" (formula "13") (term "0,0,0"))
                  (rule "leq_literals" (formula "13") (term "0,0"))
                   (builtin "One Step Simplification" (formula "13"))
                  (rule "andLeft" (formula "13"))
                  (rule "andLeft" (formula "13"))
                  (rule "applyEq" (formula "17") (term "0,0") (ifseqformula "13"))
                  (rule "polySimp_mulComm0" (formula "17") (term "0"))
                  (rule "applyEq" (formula "14") (term "0") (ifseqformula "17"))
                  (rule "inEqSimp_homoInEq0" (formula "14"))
                  (rule "polySimp_pullOutFactor1" (formula "14") (term "0"))
                  (rule "add_literals" (formula "14") (term "1,0"))
                  (rule "times_zero_1" (formula "14") (term "0"))
                  (rule "qeq_literals" (formula "14"))
                  (rule "true_left" (formula "14"))
                  (rule "applyEq" (formula "14") (term "0,2") (ifseqformula "16"))
                  (rule "inEqSimp_homoInEq1" (formula "14") (term "2"))
                  (rule "polySimp_addComm1" (formula "14") (term "0,2"))
                  (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0,2"))
                  (rule "add_literals" (formula "14") (term "1,1,0,0,2"))
                  (rule "times_zero_1" (formula "14") (term "1,0,0,2"))
                  (rule "add_zero_right" (formula "14") (term "0,0,2"))
                  (rule "applyEq" (formula "14") (term "0,1") (ifseqformula "16"))
                  (rule "inEqSimp_homoInEq1" (formula "14") (term "1"))
                  (rule "polySimp_addComm1" (formula "14") (term "0,1"))
                  (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0,1"))
                  (rule "add_literals" (formula "14") (term "1,1,0,0,1"))
                  (rule "times_zero_1" (formula "14") (term "1,0,0,1"))
                  (rule "add_zero_right" (formula "14") (term "0,0,1"))
                  (rule "applyEq" (formula "15") (term "1") (ifseqformula "13"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "2"))
                  (rule "mul_literals" (formula "14") (term "1,2"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "14") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "14") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "14") (term "0,1"))
                  (rule "replace_known_left" (formula "14") (term "1") (ifseqformula "10"))
                  (rule "inEqSimp_contradInEq1" (formula "14") (term "2") (ifseqformula "10"))
                  (rule "qeq_literals" (formula "14") (term "0,2"))
                   (builtin "One Step Simplification" (formula "14"))
                  (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "10"))
                  (rule "leq_literals" (formula "14") (term "0"))
                   (builtin "One Step Simplification" (formula "14"))
                  (rule "true_left" (formula "14"))
                  (rule "div_axiom" (formula "11") (term "1") (inst "quotient=quotient_3"))
                  (rule "polySimp_mulComm0" (formula "11") (term "0,2,1,1"))
                  (rule "polySimp_mulComm0" (formula "11") (term "0,1,0,1"))
                  (rule "polySimp_mulComm0" (formula "11") (term "0,1,1,1"))
                  (rule "polySimp_mulComm0" (formula "11") (term "1,1,1,1,1"))
                  (rule "inEqSimp_contradEq7" (formula "11") (term "0") (ifseqformula "10"))
                  (rule "times_zero_1" (formula "11") (term "1,0,0,0"))
                  (rule "add_zero_right" (formula "11") (term "0,0,0"))
                  (rule "leq_literals" (formula "11") (term "0,0"))
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "andLeft" (formula "11"))
                  (rule "andLeft" (formula "11"))
                  (rule "applyEq" (formula "15") (term "0,0") (ifseqformula "11"))
                  (rule "polySimp_mulComm0" (formula "15") (term "0"))
                  (rule "applyEq" (formula "13") (term "0,1") (ifseqformula "15"))
                  (rule "inEqSimp_homoInEq1" (formula "13") (term "1"))
                  (rule "polySimp_addComm1" (formula "13") (term "0,1"))
                  (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0,1"))
                  (rule "add_literals" (formula "13") (term "1,1,0,0,1"))
                  (rule "times_zero_1" (formula "13") (term "1,0,0,1"))
                  (rule "add_zero_right" (formula "13") (term "0,0,1"))
                  (rule "applyEq" (formula "12") (term "0") (ifseqformula "15"))
                  (rule "inEqSimp_homoInEq0" (formula "12"))
                  (rule "polySimp_pullOutFactor1" (formula "12") (term "0"))
                  (rule "add_literals" (formula "12") (term "1,0"))
                  (rule "times_zero_1" (formula "12") (term "0"))
                  (rule "qeq_literals" (formula "12"))
                  (rule "true_left" (formula "12"))
                  (rule "applyEq" (formula "12") (term "0,2") (ifseqformula "14"))
                  (rule "inEqSimp_homoInEq1" (formula "12") (term "2"))
                  (rule "polySimp_addComm1" (formula "12") (term "0,2"))
                  (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0,2"))
                  (rule "add_literals" (formula "12") (term "1,1,0,0,2"))
                  (rule "times_zero_1" (formula "12") (term "1,0,0,2"))
                  (rule "add_zero_right" (formula "12") (term "0,0,2"))
                  (rule "applyEq" (formula "13") (term "1") (ifseqformula "11"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "12") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "12") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "12") (term "0,1"))
                  (rule "replace_known_left" (formula "12") (term "1") (ifseqformula "10"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "2"))
                  (rule "mul_literals" (formula "12") (term "1,2"))
                  (rule "inEqSimp_subsumption1" (formula "12") (term "0") (ifseqformula "10"))
                  (rule "leq_literals" (formula "12") (term "0,0"))
                   (builtin "One Step Simplification" (formula "12"))
                  (rule "true_left" (formula "12"))
                  (rule "div_axiom" (formula "25") (term "1") (inst "quotient=quotient_4"))
                  (rule "polySimp_mulComm0" (formula "25") (term "1,1,1,1,1"))
                  (rule "polySimp_mulComm0" (formula "25") (term "0,1,1,1"))
                  (rule "polySimp_mulComm0" (formula "25") (term "0,2,1,1"))
                  (rule "polySimp_mulComm0" (formula "25") (term "0,1,0,1"))
                  (rule "commute_and" (formula "25") (term "0,1"))
                  (rule "div_axiom" (formula "23") (term "1") (inst "quotient=quotient_5"))
                  (rule "polySimp_mulComm0" (formula "23") (term "0,1,1,1"))
                  (rule "polySimp_mulComm0" (formula "23") (term "0,1,0,1"))
                  (rule "polySimp_mulComm0" (formula "23") (term "1,1,1,1,1"))
                  (rule "polySimp_mulComm0" (formula "23") (term "0,2,1,1"))
                  (rule "commute_and" (formula "23") (term "0,1"))
                  (rule "ifthenelse_split" (formula "7") (term "0"))
                  (branch "result_gcdHelp >= 0 TRUE"
                     (rule "eqSymm" (formula "8"))
                     (rule "replace_known_left" (formula "27") (term "0,1,1") (ifseqformula "7"))
                      (builtin "One Step Simplification" (formula "27"))
                     (rule "replace_known_left" (formula "24") (term "0,1,1") (ifseqformula "7"))
                      (builtin "One Step Simplification" (formula "24"))
                     (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "8"))
                     (rule "polySimp_mulComm0" (formula "31") (term "0"))
                     (rule "inEqSimp_strengthen0" (formula "5") (ifseqformula "31"))
                     (rule "inEqSimp_contradEq3" (formula "31") (ifseqformula "5"))
                     (rule "polySimp_mulComm0" (formula "31") (term "1,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0"))
                     (rule "add_literals" (formula "31") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "31") (term "1,0,0"))
                     (rule "add_zero_right" (formula "31") (term "0,0"))
                     (rule "qeq_literals" (formula "31") (term "0"))
                      (builtin "One Step Simplification" (formula "31"))
                     (rule "false_right" (formula "31"))
                     (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "5"))
                     (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0"))
                     (rule "polySimp_elimOne" (formula "6") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "6") (term "0"))
                     (rule "polySimp_rightDist" (formula "6") (term "0,0,0"))
                     (rule "mul_literals" (formula "6") (term "0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
                     (rule "add_literals" (formula "6") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor2b" (formula "6") (term "0,0"))
                     (rule "add_literals" (formula "6") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "6") (term "1,0,0"))
                     (rule "add_zero_right" (formula "6") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                     (rule "mul_literals" (formula "6") (term "1"))
                     (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "6"))
                     (rule "leq_literals" (formula "12") (term "0"))
                      (builtin "One Step Simplification" (formula "12"))
                     (rule "true_left" (formula "12"))
                     (rule "cnf_rightDist" (formula "27"))
                     (rule "andLeft" (formula "27"))
                     (rule "commute_or" (formula "28"))
                     (rule "cnf_rightDist" (formula "24"))
                     (rule "andLeft" (formula "24"))
                     (rule "commute_or" (formula "25"))
                     (rule "cnf_rightDist" (formula "28"))
                     (rule "andLeft" (formula "28"))
                     (rule "commute_or" (formula "29"))
                     (rule "cnf_rightDist" (formula "24"))
                     (rule "andLeft" (formula "24"))
                     (rule "commute_or" (formula "25"))
                     (rule "polySimp_critPair" (formula "33") (ifseqformula "28"))
                     (rule "polySimp_mulComm0" (formula "33") (term "0,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "33") (term "1,1,1,0"))
                     (rule "polySimp_rightDist" (formula "33") (term "0,0"))
                     (rule "polySimp_mulComm1" (formula "33") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "33") (term "0,1,0,0"))
                     (rule "polySimp_mulAssoc" (formula "33") (term "0,0,0"))
                     (rule "polySimp_rightDist" (formula "33") (term "1,0"))
                     (rule "polySimp_mulComm1" (formula "33") (term "1,1,0"))
                     (rule "polySimp_mulComm1" (formula "33") (term "0,1,1,0"))
                     (rule "polySimp_addAssoc" (formula "33") (term "0"))
                     (rule "polySimp_addComm1" (formula "33") (term "0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "33") (term "0"))
                     (rule "add_literals" (formula "33") (term "1,1,0"))
                     (rule "times_zero_1" (formula "33") (term "1,0"))
                     (rule "add_zero_right" (formula "33") (term "0"))
                     (rule "polySimp_addComm0" (formula "33") (term "0"))
                     (rule "polySimp_sepNegMonomial" (formula "33"))
                     (rule "polySimp_mulLiterals" (formula "33") (term "0"))
                     (rule "polySimp_elimOne" (formula "33") (term "0"))
                     (rule "polyDiv_pullOut" (formula "15") (term "0") (inst "polyDivCoeff=quotient_2"))
                     (rule "polySimp_mulComm1" (formula "15") (term "1,0,0,2,0"))
                     (rule "polySimp_mulComm0" (formula "15") (term "0,1,0,0,2,0"))
                     (rule "polySimp_addComm0" (formula "15") (term "2,0"))
                     (rule "applyEq" (formula "15") (term "0,1,0,1,2,0") (ifseqformula "17"))
                     (rule "polySimp_pullOutFactor1" (formula "15") (term "0,1,2,0"))
                     (rule "add_literals" (formula "15") (term "1,0,1,2,0"))
                     (rule "times_zero_1" (formula "15") (term "0,1,2,0"))
                     (rule "inEqSimp_contradEq7" (formula "15") (term "0,0") (ifseqformula "6"))
                     (rule "times_zero_1" (formula "15") (term "1,0,0,0,0"))
                     (rule "add_zero_right" (formula "15") (term "0,0,0,0"))
                     (rule "leq_literals" (formula "15") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "15"))
                     (rule "polySimp_homoEq" (formula "15"))
                     (rule "polySimp_mulComm0" (formula "15") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "15") (term "1,0"))
                     (rule "polySimp_mulComm0" (formula "15") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "15") (term "0"))
                     (rule "polySimp_pullOutFactor1" (formula "15") (term "0,0"))
                     (rule "add_literals" (formula "15") (term "1,0,0"))
                     (rule "times_zero_1" (formula "15") (term "0,0"))
                     (rule "add_zero_left" (formula "15") (term "0"))
                     (rule "polySimp_invertEq" (formula "15"))
                     (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                     (rule "times_zero_2" (formula "15") (term "1"))
                     (rule "polySimp_elimOne" (formula "15") (term "0"))
                     (rule "polyDiv_zero" (formula "15") (term "0"))
                      (builtin "One Step Simplification" (formula "15"))
                     (rule "div_literals" (formula "15") (term "0,1"))
                     (rule "inEqSimp_contradEq7" (formula "15") (term "0,0") (ifseqformula "6"))
                     (rule "times_zero_1" (formula "15") (term "1,0,0,0,0"))
                     (rule "add_zero_right" (formula "15") (term "0,0,0,0"))
                     (rule "leq_literals" (formula "15") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "15"))
                     (rule "true_left" (formula "15"))
                     (rule "allLeft" (formula "34") (inst "t=x_0"))
                     (rule "applyEq" (formula "34") (term "0,0,0,1,0,0") (ifseqformula "13"))
                     (rule "polySimp_mulComm0" (formula "34") (term "0,0,1,0,0"))
                     (rule "replace_known_left" (formula "34") (term "0,1,0,0") (ifseqformula "14"))
                      (builtin "One Step Simplification" (formula "34"))
                     (rule "applyEq" (formula "34") (term "0,0,1") (ifseqformula "9"))
                     (rule "polySimp_mulComm0" (formula "34") (term "0,1"))
                     (rule "applyEq" (formula "34") (term "0,0,0,1,0") (ifseqformula "15"))
                     (rule "polySimp_mulComm0" (formula "34") (term "0,0,1,0"))
                     (rule "replace_known_left" (formula "34") (term "0,1,0") (ifseqformula "16"))
                      (builtin "One Step Simplification" (formula "34"))
                     (rule "inEqSimp_contradEq3" (formula "34") (term "1") (ifseqformula "5"))
                     (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,1"))
                     (rule "add_literals" (formula "34") (term "1,1,0,0,1"))
                     (rule "times_zero_1" (formula "34") (term "1,0,0,1"))
                     (rule "add_zero_right" (formula "34") (term "0,0,1"))
                     (rule "qeq_literals" (formula "34") (term "0,1"))
                      (builtin "One Step Simplification" (formula "34"))
                     (rule "inEqSimp_contradInEq1" (formula "34") (ifseqformula "6"))
                     (rule "qeq_literals" (formula "34") (term "0"))
                      (builtin "One Step Simplification" (formula "34"))
                     (rule "closeFalse" (formula "34"))
                  )
                  (branch "result_gcdHelp >= 0 FALSE"
                     (rule "eqSymm" (formula "7"))
                     (rule "replace_known_right" (formula "26") (term "0,1,1") (ifseqformula "30"))
                      (builtin "One Step Simplification" (formula "26"))
                     (rule "replace_known_right" (formula "23") (term "0,1,1") (ifseqformula "30"))
                      (builtin "One Step Simplification" (formula "23"))
                     (rule "inEqSimp_geqRight" (formula "30"))
                     (rule "times_zero_1" (formula "1") (term "1,0,0"))
                     (rule "add_zero_right" (formula "1") (term "0,0"))
                     (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "8"))
                     (rule "polySimp_mulComm1" (formula "31") (term "0"))
                     (rule "polySimp_homoEq" (formula "31"))
                     (rule "polySimp_mulLiterals" (formula "31") (term "1,0"))
                     (rule "polySimp_elimOne" (formula "31") (term "1,0"))
                     (rule "polySimp_mulComm0" (formula "31") (term "1,0"))
                     (rule "polySimp_sepPosMonomial" (formula "31"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                     (rule "mul_literals" (formula "1") (term "1"))
                     (rule "inEqSimp_contradEq3" (formula "24") (term "0") (ifseqformula "1"))
                     (rule "times_zero_1" (formula "24") (term "1,0,0,0"))
                     (rule "add_zero_right" (formula "24") (term "0,0,0"))
                     (rule "qeq_literals" (formula "24") (term "0,0"))
                      (builtin "One Step Simplification" (formula "24"))
                     (rule "andLeft" (formula "24"))
                     (rule "andLeft" (formula "24"))
                     (rule "applyEq" (formula "28") (term "0,0") (ifseqformula "25"))
                     (rule "polySimp_mulComm0" (formula "28") (term "0"))
                     (rule "applyEq" (formula "24") (term "0") (ifseqformula "28"))
                     (rule "inEqSimp_homoInEq0" (formula "24"))
                     (rule "polySimp_pullOutFactor1" (formula "24") (term "0"))
                     (rule "add_literals" (formula "24") (term "1,0"))
                     (rule "times_zero_1" (formula "24") (term "0"))
                     (rule "qeq_literals" (formula "24"))
                     (rule "true_left" (formula "24"))
                     (rule "applyEq" (formula "25") (term "0") (ifseqformula "27"))
                     (rule "inEqSimp_homoInEq1" (formula "25"))
                     (rule "polySimp_addComm1" (formula "25") (term "0"))
                     (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0"))
                     (rule "add_literals" (formula "25") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "25") (term "1,0,0"))
                     (rule "add_zero_right" (formula "25") (term "0,0"))
                     (rule "applyEq" (formula "26") (term "1") (ifseqformula "24"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "25"))
                     (rule "mul_literals" (formula "25") (term "1"))
                     (rule "inEqSimp_contradEq3" (formula "27") (term "0") (ifseqformula "1"))
                     (rule "times_zero_1" (formula "27") (term "1,0,0,0"))
                     (rule "add_zero_right" (formula "27") (term "0,0,0"))
                     (rule "qeq_literals" (formula "27") (term "0,0"))
                      (builtin "One Step Simplification" (formula "27"))
                     (rule "andLeft" (formula "27"))
                     (rule "andLeft" (formula "27"))
                     (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "28"))
                     (rule "polySimp_mulComm0" (formula "31") (term "0"))
                     (rule "applyEq" (formula "27") (term "0") (ifseqformula "31"))
                     (rule "inEqSimp_homoInEq0" (formula "27"))
                     (rule "polySimp_pullOutFactor1" (formula "27") (term "0"))
                     (rule "add_literals" (formula "27") (term "1,0"))
                     (rule "times_zero_1" (formula "27") (term "0"))
                     (rule "qeq_literals" (formula "27"))
                     (rule "true_left" (formula "27"))
                     (rule "applyEq" (formula "28") (term "0") (ifseqformula "30"))
                     (rule "inEqSimp_homoInEq1" (formula "28"))
                     (rule "polySimp_addComm1" (formula "28") (term "0"))
                     (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0"))
                     (rule "add_literals" (formula "28") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "28") (term "1,0,0"))
                     (rule "add_zero_right" (formula "28") (term "0,0"))
                     (rule "applyEq" (formula "29") (term "1") (ifseqformula "27"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "28"))
                     (rule "mul_literals" (formula "28") (term "1"))
                     (rule "inEqSimp_strengthen0" (formula "3") (ifseqformula "31"))
                     (rule "inEqSimp_contradEq3" (formula "31") (ifseqformula "3"))
                     (rule "polySimp_mulAssoc" (formula "31") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "31") (term "0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "31") (term "1,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "31") (term "0,0"))
                     (rule "add_literals" (formula "31") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "31") (term "1,0,0"))
                     (rule "add_zero_right" (formula "31") (term "0,0"))
                     (rule "qeq_literals" (formula "31") (term "0"))
                      (builtin "One Step Simplification" (formula "31"))
                     (rule "false_right" (formula "31"))
                     (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "3"))
                     (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0"))
                     (rule "polySimp_elimOne" (formula "4") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "4") (term "0"))
                     (rule "polySimp_rightDist" (formula "4") (term "0,0,0"))
                     (rule "mul_literals" (formula "4") (term "0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "4") (term "1,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                     (rule "add_literals" (formula "4") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0"))
                     (rule "add_literals" (formula "4") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "4") (term "1,0,0"))
                     (rule "add_zero_right" (formula "4") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                     (rule "mul_literals" (formula "4") (term "1"))
                     (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "4"))
                     (rule "leq_literals" (formula "12") (term "0"))
                      (builtin "One Step Simplification" (formula "12"))
                     (rule "true_left" (formula "12"))
                     (rule "polyDiv_pullOut" (formula "15") (term "0") (inst "polyDivCoeff=quotient_2"))
                     (rule "polySimp_mulComm1" (formula "15") (term "1,0,0,2,0"))
                     (rule "polySimp_mulComm0" (formula "15") (term "0,1,0,0,2,0"))
                     (rule "polySimp_addComm0" (formula "15") (term "2,0"))
                     (rule "applyEq" (formula "15") (term "0,1,0,1,2,0") (ifseqformula "17"))
                     (rule "polySimp_pullOutFactor1" (formula "15") (term "0,1,2,0"))
                     (rule "add_literals" (formula "15") (term "1,0,1,2,0"))
                     (rule "times_zero_1" (formula "15") (term "0,1,2,0"))
                     (rule "inEqSimp_contradEq7" (formula "15") (term "0,0") (ifseqformula "4"))
                     (rule "times_zero_1" (formula "15") (term "1,0,0,0,0"))
                     (rule "add_zero_right" (formula "15") (term "0,0,0,0"))
                     (rule "leq_literals" (formula "15") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "15"))
                     (rule "polySimp_homoEq" (formula "15"))
                     (rule "polySimp_mulComm0" (formula "15") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "15") (term "1,0"))
                     (rule "polySimp_mulComm0" (formula "15") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "15") (term "0"))
                     (rule "polySimp_pullOutFactor1" (formula "15") (term "0,0"))
                     (rule "add_literals" (formula "15") (term "1,0,0"))
                     (rule "times_zero_1" (formula "15") (term "0,0"))
                     (rule "add_zero_left" (formula "15") (term "0"))
                     (rule "polySimp_invertEq" (formula "15"))
                     (rule "times_zero_2" (formula "15") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                     (rule "polySimp_elimOne" (formula "15") (term "0"))
                     (rule "polyDiv_zero" (formula "15") (term "0"))
                      (builtin "One Step Simplification" (formula "15"))
                     (rule "div_literals" (formula "15") (term "0,1"))
                     (rule "inEqSimp_contradEq7" (formula "15") (term "0,0") (ifseqformula "4"))
                     (rule "times_zero_1" (formula "15") (term "1,0,0,0,0"))
                     (rule "add_zero_right" (formula "15") (term "0,0,0,0"))
                     (rule "leq_literals" (formula "15") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "15"))
                     (rule "true_left" (formula "15"))
                     (rule "allLeft" (formula "29") (inst "t=x_0"))
                     (rule "applyEq" (formula "29") (term "0,0,0,1,0,0") (ifseqformula "13"))
                     (rule "polySimp_mulComm0" (formula "29") (term "0,0,1,0,0"))
                     (rule "replace_known_left" (formula "29") (term "0,1,0,0") (ifseqformula "14"))
                      (builtin "One Step Simplification" (formula "29"))
                     (rule "applyEq" (formula "29") (term "0,0,1") (ifseqformula "9"))
                     (rule "polySimp_mulComm1" (formula "29") (term "0,1"))
                     (rule "polySimp_homoEq" (formula "29") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "29") (term "1,0,1"))
                     (rule "polySimp_elimOne" (formula "29") (term "1,0,1"))
                     (rule "polySimp_mulComm0" (formula "29") (term "1,0,1"))
                     (rule "applyEq" (formula "29") (term "0,0,0,1,0") (ifseqformula "15"))
                     (rule "polySimp_mulComm0" (formula "29") (term "0,0,1,0"))
                     (rule "replace_known_left" (formula "29") (term "0,1,0") (ifseqformula "16"))
                      (builtin "One Step Simplification" (formula "29"))
                     (rule "polySimp_sepPosMonomial" (formula "29") (term "1"))
                     (rule "inEqSimp_contradEq3" (formula "29") (term "1") (ifseqformula "3"))
                     (rule "polySimp_mulAssoc" (formula "29") (term "1,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "29") (term "0,1,0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0,1"))
                     (rule "polySimp_elimOne" (formula "29") (term "1,0,0,1"))
                     (rule "polySimp_pullOutFactor2b" (formula "29") (term "0,0,1"))
                     (rule "add_literals" (formula "29") (term "1,1,0,0,1"))
                     (rule "times_zero_1" (formula "29") (term "1,0,0,1"))
                     (rule "add_zero_right" (formula "29") (term "0,0,1"))
                     (rule "qeq_literals" (formula "29") (term "0,1"))
                      (builtin "One Step Simplification" (formula "29"))
                     (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "29"))
                     (rule "qeq_literals" (formula "4") (term "0"))
                      (builtin "One Step Simplification" (formula "4"))
                     (rule "closeFalse" (formula "4"))
                  )
               )
            )
            (branch "Case 2"
                (builtin "One Step Simplification" (formula "10"))
               (rule "closeTrue" (formula "10"))
            )
         )
         (branch "Exceptional Post (gcdHelp)"
             (builtin "One Step Simplification" (formula "5"))
             (builtin "One Step Simplification" (formula "8"))
            (rule "andLeft" (formula "5"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "6") (term "1,0") (ifseqformula "5"))
            (rule "andLeft" (formula "6"))
            (rule "andLeft" (formula "6"))
            (rule "andLeft" (formula "8"))
            (rule "notLeft" (formula "6"))
            (rule "close" (formula "9") (ifseqformula "8"))
         )
         (branch "Pre (gcdHelp)"
             (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "2")))
            (rule "inEqSimp_ltRight" (formula "4"))
            (rule "times_zero_1" (formula "1") (term "0,0"))
            (rule "add_zero_left" (formula "1") (term "0"))
            (rule "replace_known_left" (formula "6") (term "0") (ifseqformula "1"))
             (builtin "One Step Simplification" (formula "6"))
            (rule "inEqSimp_ltRight" (formula "5"))
            (rule "times_zero_1" (formula "1") (term "0,0"))
            (rule "add_zero_left" (formula "1") (term "0"))
            (rule "inEqSimp_geqRight" (formula "6"))
            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "1") (term "0"))
            (rule "inEqSimp_gtToGeq" (formula "4"))
            (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "4") (term "0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "1"))
            (rule "polySimp_mulLiterals" (formula "1") (term "0"))
            (rule "polySimp_elimOne" (formula "1") (term "0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "4"))
            (rule "polySimp_mulLiterals" (formula "4") (term "0"))
            (rule "polySimp_elimOne" (formula "4") (term "0"))
            (rule "inEqSimp_contradInEq1" (formula "4") (ifseqformula "1"))
            (rule "andLeft" (formula "4"))
            (rule "inEqSimp_homoInEq1" (formula "4"))
            (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
            (rule "polySimp_rightDist" (formula "4") (term "1,0"))
            (rule "mul_literals" (formula "4") (term "0,1,0"))
            (rule "polySimp_addAssoc" (formula "4") (term "0"))
            (rule "polySimp_addComm1" (formula "4") (term "0,0"))
            (rule "add_literals" (formula "4") (term "0,0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
            (rule "add_literals" (formula "4") (term "1,1,0"))
            (rule "times_zero_1" (formula "4") (term "1,0"))
            (rule "add_zero_right" (formula "4") (term "0"))
            (rule "leq_literals" (formula "4"))
            (rule "closeFalse" (formula "4"))
         )
      )
      (branch "if x_2 false"
          (builtin "One Step Simplification" (formula "1"))
          (builtin "One Step Simplification" (formula "6"))
         (rule "notLeft" (formula "1"))
         (rule "assignment" (formula "6") (term "1"))
          (builtin "One Step Simplification" (formula "6"))
         (rule "assignment" (formula "6") (term "1"))
          (builtin "One Step Simplification" (formula "6"))
         (rule "blockEmpty" (formula "6") (term "1"))
         (rule "returnUnfold" (formula "6") (term "1") (inst "#v0=x"))
         (rule "variableDeclarationAssign" (formula "6") (term "1"))
         (rule "variableDeclaration" (formula "6") (term "1") (newnames "x_3"))
          (builtin "Use Operation Contract" (formula "6") (newnames "heapBefore_gcdHelp,result_gcdHelp,exc_0,heapAfter_gcdHelp,anon_heap_gcdHelp") (contract "Gcd[Gcd::gcdHelp(int,int)].JML normal_behavior operation contract.0"))
         (branch "Post (gcdHelp)"
             (builtin "One Step Simplification" (formula "4"))
             (builtin "One Step Simplification" (formula "8"))
            (rule "andLeft" (formula "4"))
            (rule "andLeft" (formula "5"))
            (rule "andLeft" (formula "6"))
            (rule "assignment" (formula "10") (term "1"))
             (builtin "One Step Simplification" (formula "10"))
            (rule "commute_and" (formula "6") (term "0,1"))
            (rule "commute_and_2" (formula "6") (term "0,0,1,1"))
            (rule "methodCallReturn" (formula "10") (term "1"))
            (rule "assignment" (formula "10") (term "1"))
             (builtin "One Step Simplification" (formula "10"))
            (rule "methodCallEmpty" (formula "10") (term "1"))
            (rule "tryEmpty" (formula "10") (term "1"))
             (builtin "One Step Simplification" (formula "10"))
            (rule "emptyModality" (formula "10") (term "1"))
            (rule "andRight" (formula "10"))
            (branch "Case 1"
               (rule "impRight" (formula "10"))
               (rule "andRight" (formula "11"))
               (branch "Case 1"
                  (rule "andRight" (formula "11"))
                  (branch "Case 1"
                      (builtin "One Step Simplification" (formula "1"))
                      (builtin "One Step Simplification" (formula "11"))
                     (rule "replace_known_right" (formula "7") (term "0,0,1") (ifseqformula "11"))
                      (builtin "One Step Simplification" (formula "7"))
                     (rule "replace_known_left" (formula "1") (term "0,1") (ifseqformula "7"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "notLeft" (formula "1"))
                     (rule "inEqSimp_ltRight" (formula "10"))
                     (rule "times_zero_1" (formula "1") (term "0,0"))
                     (rule "add_zero_left" (formula "1") (term "0"))
                     (rule "inEqSimp_gtRight" (formula "9"))
                     (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                     (rule "polySimp_addComm0" (formula "1") (term "0"))
                     (rule "inEqSimp_ltRight" (formula "10"))
                     (rule "times_zero_1" (formula "1") (term "0,0"))
                     (rule "add_zero_left" (formula "1") (term "0"))
                     (rule "applyEq" (formula "2") (term "0,1,0") (ifseqformula "9"))
                     (rule "times_zero_2" (formula "2") (term "1,0"))
                     (rule "add_zero_right" (formula "2") (term "0"))
                     (rule "applyEq" (formula "1") (term "0") (ifseqformula "9"))
                     (rule "qeq_literals" (formula "1"))
                     (rule "true_left" (formula "1"))
                     (rule "jmod_axiom" (formula "10") (term "0"))
                     (rule "polySimp_mulComm1" (formula "10") (term "1,0"))
                     (rule "polySimp_sepNegMonomial" (formula "10"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                     (rule "polySimp_elimOne" (formula "10") (term "0"))
                     (rule "inEqSimp_strengthen0" (formula "1") (ifseqformula "9"))
                     (rule "add_zero_right" (formula "1") (term "1"))
                     (rule "inEqSimp_contradEq3" (formula "9") (ifseqformula "1"))
                     (rule "times_zero_1" (formula "9") (term "1,0,0"))
                     (rule "add_zero_right" (formula "9") (term "0,0"))
                     (rule "qeq_literals" (formula "9") (term "0"))
                      (builtin "One Step Simplification" (formula "9"))
                     (rule "false_right" (formula "9"))
                     (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "2"))
                     (rule "qeq_literals" (formula "1") (term "0"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "closeFalse" (formula "1"))
                  )
                  (branch "Case 2"
                      (builtin "One Step Simplification" (formula "1"))
                      (builtin "One Step Simplification" (formula "11"))
                     (rule "replace_known_right" (formula "7") (term "1,0,1") (ifseqformula "11"))
                      (builtin "One Step Simplification" (formula "7"))
                     (rule "replace_known_left" (formula "1") (term "0,1") (ifseqformula "7"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "notLeft" (formula "1"))
                     (rule "inEqSimp_ltRight" (formula "10"))
                     (rule "times_zero_1" (formula "1") (term "0,0"))
                     (rule "add_zero_left" (formula "1") (term "0"))
                     (rule "inEqSimp_gtRight" (formula "9"))
                     (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                     (rule "polySimp_addComm0" (formula "1") (term "0"))
                     (rule "inEqSimp_ltRight" (formula "10"))
                     (rule "times_zero_1" (formula "1") (term "0,0"))
                     (rule "add_zero_left" (formula "1") (term "0"))
                     (rule "applyEq" (formula "2") (term "0,1,0") (ifseqformula "9"))
                     (rule "times_zero_2" (formula "2") (term "1,0"))
                     (rule "add_zero_right" (formula "2") (term "0"))
                     (rule "applyEq" (formula "1") (term "0") (ifseqformula "9"))
                     (rule "qeq_literals" (formula "1"))
                     (rule "true_left" (formula "1"))
                     (rule "applyEq" (formula "10") (term "0,0") (ifseqformula "8"))
                      (builtin "One Step Simplification" (formula "10"))
                     (rule "closeTrue" (formula "10"))
                  )
               )
               (branch "Case 2"
                   (builtin "One Step Simplification" (formula "1"))
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "allRight" (formula "11") (inst "sk=x_0"))
                  (rule "impRight" (formula "11"))
                  (rule "andLeft" (formula "1"))
                  (rule "andLeft" (formula "1"))
                  (rule "inEqSimp_ltRight" (formula "12"))
                  (rule "times_zero_1" (formula "1") (term "0,0"))
                  (rule "add_zero_left" (formula "1") (term "0"))
                  (rule "inEqSimp_ltRight" (formula "13"))
                  (rule "times_zero_1" (formula "1") (term "0,0"))
                  (rule "add_zero_left" (formula "1") (term "0"))
                  (rule "inEqSimp_gtRight" (formula "13"))
                  (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                  (rule "polySimp_addComm0" (formula "1") (term "0"))
                  (rule "inEqSimp_gtToGeq" (formula "13") (term "0,0,0,0,1,1"))
                  (rule "times_zero_1" (formula "13") (term "1,0,0,0,0,0,0,1,1"))
                  (rule "add_zero_right" (formula "13") (term "0,0,0,0,0,0,1,1"))
                  (rule "inEqSimp_gtToGeq" (formula "4"))
                  (rule "times_zero_1" (formula "4") (term "1,0,0"))
                  (rule "add_zero_right" (formula "4") (term "0,0"))
                  (rule "jmod_axiom" (formula "13") (term "0,1,0,0,1,1"))
                  (rule "polySimp_mulComm1" (formula "13") (term "1,0,1,0,0,1,1"))
                  (rule "jmod_axiom" (formula "13") (term "0,1,0,1,1"))
                  (rule "polySimp_mulComm1" (formula "13") (term "1,0,1,0,1,1"))
                  (rule "jmod_axiom" (formula "13") (term "0,0,0,1"))
                  (rule "polySimp_mulComm1" (formula "13") (term "1,0,0,0,1"))
                  (rule "jmod_axiom" (formula "13") (term "0,1,0,0,0,1,1"))
                  (rule "polySimp_mulComm1" (formula "13") (term "1,0,1,0,0,0,1,1"))
                  (rule "jmod_axiom" (formula "13") (term "0,1,0,1"))
                  (rule "polySimp_mulComm1" (formula "13") (term "1,0,1,0,1"))
                  (rule "jmod_axiom" (formula "14") (term "0"))
                  (rule "polySimp_mulComm1" (formula "14") (term "1,0"))
                  (rule "jmod_axiom" (formula "6") (term "0"))
                  (rule "polySimp_mulComm1" (formula "6") (term "1,0"))
                  (rule "jmod_axiom" (formula "5") (term "0"))
                  (rule "polySimp_mulComm1" (formula "5") (term "1,0"))
                  (rule "polySimp_sepNegMonomial" (formula "13") (term "1,0,0,1,1"))
                  (rule "polySimp_mulLiterals" (formula "13") (term "0,1,0,0,1,1"))
                  (rule "polySimp_elimOne" (formula "13") (term "0,1,0,0,1,1"))
                  (rule "polySimp_sepNegMonomial" (formula "13") (term "1,0,1,1"))
                  (rule "polySimp_mulLiterals" (formula "13") (term "0,1,0,1,1"))
                  (rule "polySimp_elimOne" (formula "13") (term "0,1,0,1,1"))
                  (rule "polySimp_sepNegMonomial" (formula "13") (term "0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "13") (term "0,0,0,1"))
                  (rule "polySimp_elimOne" (formula "13") (term "0,0,0,1"))
                  (rule "polySimp_sepNegMonomial" (formula "13") (term "1,0,0,0,1,1"))
                  (rule "polySimp_mulLiterals" (formula "13") (term "0,1,0,0,0,1,1"))
                  (rule "polySimp_elimOne" (formula "13") (term "0,1,0,0,0,1,1"))
                  (rule "polySimp_sepNegMonomial" (formula "13") (term "1,0,1"))
                  (rule "polySimp_mulLiterals" (formula "13") (term "0,1,0,1"))
                  (rule "polySimp_elimOne" (formula "13") (term "0,1,0,1"))
                  (rule "polySimp_sepNegMonomial" (formula "14"))
                  (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                  (rule "polySimp_elimOne" (formula "14") (term "0"))
                  (rule "polySimp_sepNegMonomial" (formula "6"))
                  (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                  (rule "polySimp_elimOne" (formula "6") (term "0"))
                  (rule "polySimp_sepNegMonomial" (formula "5"))
                  (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                  (rule "polySimp_elimOne" (formula "5") (term "0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                  (rule "polySimp_elimOne" (formula "1") (term "0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "0,0,0,0,1,1"))
                  (rule "mul_literals" (formula "13") (term "1,0,0,0,0,1,1"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                  (rule "mul_literals" (formula "4") (term "1"))
                  (rule "nnf_imp2or" (formula "13") (term "0,1,1"))
                  (rule "nnf_notAnd" (formula "13") (term "0,0,1,1"))
                  (rule "nnf_notAnd" (formula "13") (term "0,0,0,1,1"))
                  (rule "inEqSimp_notGeq" (formula "13") (term "0,0,0,0,1,1"))
                  (rule "mul_literals" (formula "13") (term "1,0,0,0,0,0,0,1,1"))
                  (rule "add_literals" (formula "13") (term "0,0,0,0,0,0,1,1"))
                  (rule "add_zero_left" (formula "13") (term "0,0,0,0,0,1,1"))
                  (rule "jdiv_axiom" (formula "13") (term "0,0,0,0,1"))
                  (rule "eqSymm" (formula "13"))
                  (rule "replace_known_left" (formula "13") (term "0,0") (ifseqformula "2"))
                   (builtin "One Step Simplification" (formula "13"))
                  (rule "eqSymm" (formula "13"))
                  (rule "applyEq" (formula "14") (term "0,0,0,0,1") (ifseqformula "13"))
                  (rule "jdiv_axiom" (formula "14") (term "0,0,1,0,1"))
                  (rule "eqSymm" (formula "14"))
                  (rule "replace_known_left" (formula "14") (term "0,0") (ifseqformula "3"))
                   (builtin "One Step Simplification" (formula "14"))
                  (rule "eqSymm" (formula "14"))
                  (rule "applyEq" (formula "15") (term "0,0,1,0,1") (ifseqformula "14"))
                  (rule "jdiv_axiom" (formula "16") (term "0,0"))
                  (rule "eqSymm" (formula "1"))
                  (rule "jdiv_axiom" (formula "7") (term "0,0"))
                  (rule "eqSymm" (formula "7"))
                  (rule "replace_known_left" (formula "7") (term "0,0") (ifseqformula "4"))
                   (builtin "One Step Simplification" (formula "7"))
                  (rule "eqSymm" (formula "7"))
                  (rule "applyEq" (formula "8") (term "0,0") (ifseqformula "7"))
                  (rule "jdiv_axiom" (formula "6") (term "0,0"))
                  (rule "eqSymm" (formula "6"))
                  (rule "replace_known_left" (formula "6") (term "0,0") (ifseqformula "3"))
                   (builtin "One Step Simplification" (formula "6"))
                  (rule "eqSymm" (formula "6"))
                  (rule "applyEq" (formula "7") (term "0,0") (ifseqformula "6"))
                  (rule "div_axiom" (formula "16") (term "1") (inst "quotient=quotient_0"))
                  (rule "polySimp_mulComm0" (formula "16") (term "0,1,1,1"))
                  (rule "polySimp_mulComm0" (formula "16") (term "0,1,0,1"))
                  (rule "polySimp_mulComm0" (formula "16") (term "0,2,1,1"))
                  (rule "polySimp_mulComm0" (formula "16") (term "1,1,1,1,1"))
                  (rule "commute_and" (formula "16") (term "0,1"))
                  (rule "div_axiom" (formula "18") (term "1") (inst "quotient=quotient_1"))
                  (rule "polySimp_mulComm0" (formula "18") (term "0,2,1,1"))
                  (rule "polySimp_mulComm0" (formula "18") (term "0,1,0,1"))
                  (rule "polySimp_mulComm0" (formula "18") (term "1,1,1,1,1"))
                  (rule "polySimp_mulComm0" (formula "18") (term "0,1,1,1"))
                  (rule "commute_and" (formula "18") (term "0,1"))
                  (rule "div_axiom" (formula "1") (term "0,2,0") (inst "quotient=quotient_2"))
                  (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,1"))
                  (rule "polySimp_mulComm0" (formula "1") (term "0,1,1,1"))
                  (rule "polySimp_mulComm0" (formula "1") (term "0,2,1,1"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,1,1,1,1"))
                  (rule "inEqSimp_contradEq7" (formula "1") (term "0") (ifseqformula "6"))
                  (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                  (rule "add_zero_right" (formula "1") (term "0,0,0"))
                  (rule "leq_literals" (formula "1") (term "0,0"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "andLeft" (formula "1"))
                  (rule "andLeft" (formula "1"))
                  (rule "applyEq" (formula "4") (term "0,2,0") (ifseqformula "1"))
                  (rule "inEqSimp_subsumption1" (formula "3") (term "0") (ifseqformula "8"))
                  (rule "leq_literals" (formula "3") (term "0,0"))
                   (builtin "One Step Simplification" (formula "3"))
                  (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "2"))
                  (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                  (rule "polySimp_elimOne" (formula "3") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "3") (term "0"))
                  (rule "polySimp_rightDist" (formula "3") (term "0,0,0"))
                  (rule "mul_literals" (formula "3") (term "0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                  (rule "add_literals" (formula "3") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "3") (term "1,0,0"))
                  (rule "add_zero_right" (formula "3") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                  (rule "mul_literals" (formula "3") (term "1"))
                  (rule "div_axiom" (formula "4") (term "1,0") (inst "quotient=quotient_3"))
                  (rule "polySimp_mulComm0" (formula "4") (term "0,2,1,1"))
                  (rule "polySimp_mulComm0" (formula "4") (term "0,1,0,1"))
                  (rule "polySimp_mulComm0" (formula "4") (term "1,1,1,1,1"))
                  (rule "polySimp_mulComm0" (formula "4") (term "0,1,1,1"))
                  (rule "inEqSimp_contradEq7" (formula "4") (term "0") (ifseqformula "9"))
                  (rule "times_zero_1" (formula "4") (term "1,0,0,0"))
                  (rule "add_zero_right" (formula "4") (term "0,0,0"))
                  (rule "leq_literals" (formula "4") (term "0,0"))
                   (builtin "One Step Simplification" (formula "4"))
                  (rule "andLeft" (formula "4"))
                  (rule "andLeft" (formula "4"))
                  (rule "applyEq" (formula "7") (term "1,0") (ifseqformula "4"))
                  (rule "inEqSimp_subsumption1" (formula "6") (term "0") (ifseqformula "11"))
                  (rule "leq_literals" (formula "6") (term "0,0"))
                   (builtin "One Step Simplification" (formula "6"))
                  (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "5"))
                  (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0"))
                  (rule "polySimp_elimOne" (formula "6") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "6") (term "0"))
                  (rule "polySimp_rightDist" (formula "6") (term "0,0,0"))
                  (rule "mul_literals" (formula "6") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor2b" (formula "6") (term "0,0"))
                  (rule "add_literals" (formula "6") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "6") (term "1,0,0"))
                  (rule "add_zero_right" (formula "6") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                  (rule "mul_literals" (formula "6") (term "1"))
                  (rule "cut_direct" (formula "26") (term "0,0"))
                  (branch "CUT: b = 0 TRUE"
                      (builtin "One Step Simplification" (formula "27"))
                     (rule "true_left" (formula "27"))
                     (rule "replace_known_left" (formula "16") (term "0,1") (ifseqformula "26"))
                      (builtin "One Step Simplification" (formula "16"))
                     (rule "notLeft" (formula "16"))
                     (rule "applyEq" (formula "23") (term "0,0,1,0,1") (ifseqformula "25"))
                     (rule "applyEq" (formula "14") (term "0,0") (ifseqformula "25"))
                     (rule "jdiv_axiom_inline" (formula "14") (term "0"))
                     (rule "times_zero_2" (formula "14") (term "0,0,2,0"))
                     (rule "qeq_literals" (formula "14") (term "0,0"))
                      (builtin "One Step Simplification" (formula "14"))
                     (rule "eqSymm" (formula "14"))
                     (rule "applyEq" (formula "23") (term "1,0,0,1") (ifseqformula "25"))
                     (rule "applyEq" (formula "24") (term "0,0") (ifseqformula "25"))
                     (rule "jdiv_axiom_inline" (formula "24") (term "0"))
                     (rule "qeq_literals" (formula "24") (term "0,0"))
                      (builtin "One Step Simplification" (formula "24"))
                     (rule "eqSymm" (formula "24"))
                     (rule "applyEq" (formula "15") (term "0,0,0") (ifseqformula "25"))
                     (rule "applyEq" (formula "10") (term "0") (ifseqformula "25"))
                     (rule "qeq_literals" (formula "10"))
                     (rule "true_left" (formula "10"))
                     (rule "applyEq" (formula "8") (term "0") (ifseqformula "24"))
                     (rule "inEqSimp_commuteGeq" (formula "8"))
                     (rule "applyEq" (formula "22") (term "1,0,1,2,1,1") (ifseqformula "24"))
                     (rule "add_zero_right" (formula "22") (term "0,1,2,1,1"))
                     (rule "applyEq" (formula "22") (term "1,0,1,1,1,1") (ifseqformula "24"))
                     (rule "add_zero_right" (formula "22") (term "0,1,1,1,1"))
                     (rule "applyEq" (formula "14") (term "1") (ifseqformula "24"))
                     (rule "applyEq" (formula "23") (term "0,0") (ifseqformula "24"))
                      (builtin "One Step Simplification" (formula "23"))
                     (rule "true_left" (formula "23"))
                     (rule "applyEq" (formula "13") (term "0,0") (ifseqformula "23"))
                      (builtin "One Step Simplification" (formula "13"))
                     (rule "true_left" (formula "13"))
                     (rule "inEqSimp_strengthen1" (formula "9") (ifseqformula "23"))
                     (rule "add_zero_right" (formula "9") (term "1"))
                     (rule "inEqSimp_contradEq7" (formula "23") (ifseqformula "9"))
                     (rule "times_zero_1" (formula "23") (term "1,0,0"))
                     (rule "add_zero_right" (formula "23") (term "0,0"))
                     (rule "leq_literals" (formula "23") (term "0"))
                      (builtin "One Step Simplification" (formula "23"))
                     (rule "false_right" (formula "23"))
                     (rule "inEqSimp_contradInEq0" (formula "9") (ifseqformula "8"))
                     (rule "qeq_literals" (formula "9") (term "0"))
                      (builtin "One Step Simplification" (formula "9"))
                     (rule "closeFalse" (formula "9"))
                  )
                  (branch "CUT: b = 0 FALSE"
                      (builtin "One Step Simplification" (formula "26"))
                     (rule "andLeft" (formula "26"))
                     (rule "andLeft" (formula "26"))
                     (rule "replace_known_right" (formula "16") (term "0,1") (ifseqformula "29"))
                      (builtin "One Step Simplification" (formula "16"))
                     (rule "true_left" (formula "16"))
                     (rule "inEqSimp_strengthen1" (formula "10") (ifseqformula "28"))
                     (rule "add_zero_right" (formula "10") (term "1"))
                     (rule "inEqSimp_contradEq7" (formula "28") (ifseqformula "10"))
                     (rule "times_zero_1" (formula "28") (term "1,0,0"))
                     (rule "add_zero_right" (formula "28") (term "0,0"))
                     (rule "leq_literals" (formula "28") (term "0"))
                      (builtin "One Step Simplification" (formula "28"))
                     (rule "false_right" (formula "28"))
                     (rule "div_axiom" (formula "14") (term "1") (inst "quotient=quotient_4"))
                     (rule "polySimp_mulComm0" (formula "14") (term "0,1,1,1"))
                     (rule "polySimp_mulComm0" (formula "14") (term "0,2,1,1"))
                     (rule "polySimp_mulComm0" (formula "14") (term "1,1,1,1,1"))
                     (rule "polySimp_mulComm0" (formula "14") (term "0,1,0,1"))
                     (rule "inEqSimp_contradEq7" (formula "14") (term "0") (ifseqformula "11"))
                     (rule "times_zero_1" (formula "14") (term "1,0,0,0"))
                     (rule "add_zero_right" (formula "14") (term "0,0,0"))
                     (rule "leq_literals" (formula "14") (term "0,0"))
                      (builtin "One Step Simplification" (formula "14"))
                     (rule "andLeft" (formula "14"))
                     (rule "andLeft" (formula "14"))
                     (rule "applyEq" (formula "18") (term "0,0") (ifseqformula "14"))
                     (rule "polySimp_mulComm0" (formula "18") (term "0"))
                     (rule "applyEq" (formula "15") (term "0") (ifseqformula "18"))
                     (rule "inEqSimp_homoInEq0" (formula "15"))
                     (rule "polySimp_pullOutFactor1" (formula "15") (term "0"))
                     (rule "add_literals" (formula "15") (term "1,0"))
                     (rule "times_zero_1" (formula "15") (term "0"))
                     (rule "qeq_literals" (formula "15"))
                     (rule "true_left" (formula "15"))
                     (rule "applyEq" (formula "15") (term "0,2") (ifseqformula "17"))
                     (rule "inEqSimp_homoInEq1" (formula "15") (term "2"))
                     (rule "polySimp_addComm1" (formula "15") (term "0,2"))
                     (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,2"))
                     (rule "add_literals" (formula "15") (term "1,1,0,0,2"))
                     (rule "times_zero_1" (formula "15") (term "1,0,0,2"))
                     (rule "add_zero_right" (formula "15") (term "0,0,2"))
                     (rule "applyEq" (formula "15") (term "0,1") (ifseqformula "17"))
                     (rule "inEqSimp_homoInEq1" (formula "15") (term "1"))
                     (rule "polySimp_addComm1" (formula "15") (term "0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,1"))
                     (rule "add_literals" (formula "15") (term "1,1,0,0,1"))
                     (rule "times_zero_1" (formula "15") (term "1,0,0,1"))
                     (rule "add_zero_right" (formula "15") (term "0,0,1"))
                     (rule "applyEq" (formula "16") (term "1") (ifseqformula "14"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "2"))
                     (rule "mul_literals" (formula "15") (term "1,2"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "15") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "15") (term "0,1"))
                     (rule "polySimp_elimOne" (formula "15") (term "0,1"))
                     (rule "replace_known_left" (formula "15") (term "1") (ifseqformula "11"))
                     (rule "inEqSimp_contradInEq1" (formula "15") (term "2") (ifseqformula "11"))
                     (rule "qeq_literals" (formula "15") (term "0,2"))
                      (builtin "One Step Simplification" (formula "15"))
                     (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "11"))
                     (rule "leq_literals" (formula "15") (term "0"))
                      (builtin "One Step Simplification" (formula "15"))
                     (rule "true_left" (formula "15"))
                     (rule "div_axiom" (formula "12") (term "1") (inst "quotient=quotient_5"))
                     (rule "polySimp_mulComm0" (formula "12") (term "0,1,1,1"))
                     (rule "polySimp_mulComm0" (formula "12") (term "0,2,1,1"))
                     (rule "polySimp_mulComm0" (formula "12") (term "0,1,0,1"))
                     (rule "polySimp_mulComm0" (formula "12") (term "1,1,1,1,1"))
                     (rule "inEqSimp_contradEq7" (formula "12") (term "0") (ifseqformula "11"))
                     (rule "times_zero_1" (formula "12") (term "1,0,0,0"))
                     (rule "add_zero_right" (formula "12") (term "0,0,0"))
                     (rule "leq_literals" (formula "12") (term "0,0"))
                      (builtin "One Step Simplification" (formula "12"))
                     (rule "andLeft" (formula "12"))
                     (rule "andLeft" (formula "12"))
                     (rule "applyEq" (formula "16") (term "0,0") (ifseqformula "12"))
                     (rule "polySimp_mulComm0" (formula "16") (term "0"))
                     (rule "applyEq" (formula "14") (term "0,2") (ifseqformula "16"))
                     (rule "inEqSimp_homoInEq1" (formula "14") (term "2"))
                     (rule "polySimp_addComm1" (formula "14") (term "0,2"))
                     (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0,2"))
                     (rule "add_literals" (formula "14") (term "1,1,0,0,2"))
                     (rule "times_zero_1" (formula "14") (term "1,0,0,2"))
                     (rule "add_zero_right" (formula "14") (term "0,0,2"))
                     (rule "applyEq" (formula "14") (term "0,1") (ifseqformula "16"))
                     (rule "inEqSimp_homoInEq1" (formula "14") (term "1"))
                     (rule "polySimp_addComm1" (formula "14") (term "0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0,1"))
                     (rule "add_literals" (formula "14") (term "1,1,0,0,1"))
                     (rule "times_zero_1" (formula "14") (term "1,0,0,1"))
                     (rule "add_zero_right" (formula "14") (term "0,0,1"))
                     (rule "applyEq" (formula "13") (term "0") (ifseqformula "16"))
                     (rule "inEqSimp_homoInEq0" (formula "13"))
                     (rule "polySimp_pullOutFactor1" (formula "13") (term "0"))
                     (rule "add_literals" (formula "13") (term "1,0"))
                     (rule "times_zero_1" (formula "13") (term "0"))
                     (rule "qeq_literals" (formula "13"))
                     (rule "true_left" (formula "13"))
                     (rule "applyEq" (formula "14") (term "1") (ifseqformula "12"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "2"))
                     (rule "mul_literals" (formula "13") (term "1,2"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "13") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "0,1"))
                     (rule "polySimp_elimOne" (formula "13") (term "0,1"))
                     (rule "replace_known_left" (formula "13") (term "1") (ifseqformula "11"))
                     (rule "inEqSimp_subsumption1" (formula "13") (term "0") (ifseqformula "11"))
                     (rule "leq_literals" (formula "13") (term "0,0"))
                      (builtin "One Step Simplification" (formula "13"))
                     (rule "true_left" (formula "13"))
                     (rule "ifthenelse_split_for" (formula "25") (term "1,1"))
                     (branch "result_gcdHelp >= 0 TRUE"
                        (rule "replace_known_left" (formula "7") (term "0,0") (ifseqformula "25"))
                         (builtin "One Step Simplification" (formula "7"))
                        (rule "eqSymm" (formula "7"))
                        (rule "replace_known_left" (formula "23") (term "0,1,1") (ifseqformula "25"))
                         (builtin "One Step Simplification" (formula "23"))
                        (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "7"))
                        (rule "polySimp_mulComm0" (formula "31") (term "0"))
                        (rule "inEqSimp_strengthen0" (formula "5") (ifseqformula "31"))
                        (rule "inEqSimp_contradEq3" (formula "31") (ifseqformula "5"))
                        (rule "polySimp_mulComm0" (formula "31") (term "1,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0"))
                        (rule "add_literals" (formula "31") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "31") (term "1,0,0"))
                        (rule "add_zero_right" (formula "31") (term "0,0"))
                        (rule "qeq_literals" (formula "31") (term "0"))
                         (builtin "One Step Simplification" (formula "31"))
                        (rule "false_right" (formula "31"))
                        (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "5"))
                        (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0"))
                        (rule "polySimp_elimOne" (formula "6") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "6") (term "0"))
                        (rule "polySimp_rightDist" (formula "6") (term "0,0,0"))
                        (rule "mul_literals" (formula "6") (term "0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
                        (rule "add_literals" (formula "6") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor2b" (formula "6") (term "0,0"))
                        (rule "add_literals" (formula "6") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "6") (term "1,0,0"))
                        (rule "add_zero_right" (formula "6") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                        (rule "mul_literals" (formula "6") (term "1"))
                        (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "6"))
                        (rule "leq_literals" (formula "12") (term "0"))
                         (builtin "One Step Simplification" (formula "12"))
                        (rule "true_left" (formula "12"))
                        (rule "cnf_rightDist" (formula "26"))
                        (rule "andLeft" (formula "26"))
                        (rule "commute_or" (formula "27"))
                        (rule "cnf_rightDist" (formula "23"))
                        (rule "andLeft" (formula "23"))
                        (rule "commute_or" (formula "24"))
                        (rule "cnf_rightDist" (formula "27"))
                        (rule "andLeft" (formula "27"))
                        (rule "commute_or" (formula "28"))
                        (rule "cnf_rightDist" (formula "23"))
                        (rule "andLeft" (formula "23"))
                        (rule "commute_or" (formula "24"))
                        (rule "polyDiv_pullOut" (formula "15") (term "0") (inst "polyDivCoeff=quotient_4"))
                        (rule "polySimp_mulComm1" (formula "15") (term "1,0,0,2,0"))
                        (rule "polySimp_mulComm0" (formula "15") (term "0,1,0,0,2,0"))
                        (rule "polySimp_addComm0" (formula "15") (term "2,0"))
                        (rule "applyEq" (formula "15") (term "0,1,0,1,2,0") (ifseqformula "17"))
                        (rule "polySimp_pullOutFactor1" (formula "15") (term "0,1,2,0"))
                        (rule "add_literals" (formula "15") (term "1,0,1,2,0"))
                        (rule "times_zero_1" (formula "15") (term "0,1,2,0"))
                        (rule "inEqSimp_contradEq7" (formula "15") (term "0,0") (ifseqformula "6"))
                        (rule "times_zero_1" (formula "15") (term "1,0,0,0,0"))
                        (rule "add_zero_right" (formula "15") (term "0,0,0,0"))
                        (rule "leq_literals" (formula "15") (term "0,0,0"))
                         (builtin "One Step Simplification" (formula "15"))
                        (rule "polySimp_homoEq" (formula "15"))
                        (rule "polySimp_mulComm0" (formula "15") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "15") (term "1,0"))
                        (rule "polySimp_mulComm0" (formula "15") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "15") (term "0"))
                        (rule "polySimp_pullOutFactor1" (formula "15") (term "0,0"))
                        (rule "add_literals" (formula "15") (term "1,0,0"))
                        (rule "times_zero_1" (formula "15") (term "0,0"))
                        (rule "add_zero_left" (formula "15") (term "0"))
                        (rule "polySimp_invertEq" (formula "15"))
                        (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                        (rule "times_zero_2" (formula "15") (term "1"))
                        (rule "polySimp_elimOne" (formula "15") (term "0"))
                        (rule "polyDiv_zero" (formula "15") (term "0"))
                         (builtin "One Step Simplification" (formula "15"))
                        (rule "div_literals" (formula "15") (term "0,1"))
                        (rule "inEqSimp_contradEq7" (formula "15") (term "0,0") (ifseqformula "6"))
                        (rule "times_zero_1" (formula "15") (term "1,0,0,0,0"))
                        (rule "add_zero_right" (formula "15") (term "0,0,0,0"))
                        (rule "leq_literals" (formula "15") (term "0,0,0"))
                         (builtin "One Step Simplification" (formula "15"))
                        (rule "true_left" (formula "15"))
                        (rule "polySimp_critPair" (formula "16") (ifseqformula "14"))
                        (rule "polySimp_mulComm0" (formula "16") (term "1,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "16") (term "0,1,0,0"))
                        (rule "polySimp_rightDist" (formula "16") (term "1,0"))
                        (rule "polySimp_mulComm1" (formula "16") (term "1,1,0"))
                        (rule "polySimp_mulComm0" (formula "16") (term "0,1,0"))
                        (rule "polySimp_rightDist" (formula "16") (term "0,0"))
                        (rule "polySimp_mulComm1" (formula "16") (term "1,0,0"))
                        (rule "polySimp_mulAssoc" (formula "16") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "16") (term "0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "16") (term "0"))
                        (rule "polySimp_addComm1" (formula "16") (term "0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "16") (term "0"))
                        (rule "add_literals" (formula "16") (term "1,1,0"))
                        (rule "times_zero_1" (formula "16") (term "1,0"))
                        (rule "add_zero_right" (formula "16") (term "0"))
                        (rule "polySimp_addComm0" (formula "16") (term "0"))
                        (rule "polySimp_sepNegMonomial" (formula "16"))
                        (rule "polySimp_mulLiterals" (formula "16") (term "0"))
                        (rule "polySimp_elimOne" (formula "16") (term "0"))
                        (rule "polySimp_critPair" (formula "33") (ifseqformula "32"))
                        (rule "polySimp_mulComm0" (formula "33") (term "0,1,0,0"))
                        (rule "polySimp_mulComm0" (formula "33") (term "1,1,1,0"))
                        (rule "polySimp_rightDist" (formula "33") (term "0,0"))
                        (rule "polySimp_mulComm1" (formula "33") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "33") (term "0,1,0,0"))
                        (rule "polySimp_mulAssoc" (formula "33") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "33") (term "1,0"))
                        (rule "polySimp_mulComm1" (formula "33") (term "1,1,0"))
                        (rule "polySimp_mulComm1" (formula "33") (term "0,1,1,0"))
                        (rule "polySimp_addAssoc" (formula "33") (term "0"))
                        (rule "polySimp_addComm1" (formula "33") (term "0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "33") (term "0"))
                        (rule "add_literals" (formula "33") (term "1,1,0"))
                        (rule "times_zero_1" (formula "33") (term "1,0"))
                        (rule "add_zero_right" (formula "33") (term "0"))
                        (rule "polySimp_addComm0" (formula "33") (term "0"))
                        (rule "polySimp_sepNegMonomial" (formula "33"))
                        (rule "polySimp_mulLiterals" (formula "33") (term "0"))
                        (rule "polySimp_elimOne" (formula "33") (term "0"))
                        (rule "polyDiv_pullOut" (formula "12") (term "0") (inst "polyDivCoeff=quotient_5"))
                        (rule "polySimp_mulComm1" (formula "12") (term "1,0,0,2,0"))
                        (rule "polySimp_mulComm0" (formula "12") (term "0,1,0,0,2,0"))
                        (rule "polySimp_addComm0" (formula "12") (term "2,0"))
                        (rule "applyEq" (formula "12") (term "0,1,0,1,2,0") (ifseqformula "14"))
                        (rule "polySimp_pullOutFactor1" (formula "12") (term "0,1,2,0"))
                        (rule "add_literals" (formula "12") (term "1,0,1,2,0"))
                        (rule "times_zero_1" (formula "12") (term "0,1,2,0"))
                        (rule "inEqSimp_contradEq7" (formula "12") (term "0,0") (ifseqformula "6"))
                        (rule "times_zero_1" (formula "12") (term "1,0,0,0,0"))
                        (rule "add_zero_right" (formula "12") (term "0,0,0,0"))
                        (rule "leq_literals" (formula "12") (term "0,0,0"))
                         (builtin "One Step Simplification" (formula "12"))
                        (rule "polySimp_homoEq" (formula "12"))
                        (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                        (rule "polySimp_mulComm0" (formula "12") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "12") (term "0"))
                        (rule "polySimp_pullOutFactor1" (formula "12") (term "0,0"))
                        (rule "add_literals" (formula "12") (term "1,0,0"))
                        (rule "times_zero_1" (formula "12") (term "0,0"))
                        (rule "add_zero_left" (formula "12") (term "0"))
                        (rule "polySimp_invertEq" (formula "12"))
                        (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                        (rule "times_zero_2" (formula "12") (term "1"))
                        (rule "polySimp_elimOne" (formula "12") (term "0"))
                        (rule "polyDiv_zero" (formula "12") (term "0"))
                         (builtin "One Step Simplification" (formula "12"))
                        (rule "div_literals" (formula "12") (term "0,1"))
                        (rule "inEqSimp_contradEq7" (formula "12") (term "0,0") (ifseqformula "6"))
                        (rule "times_zero_1" (formula "12") (term "1,0,0,0,0"))
                        (rule "add_zero_right" (formula "12") (term "0,0,0,0"))
                        (rule "leq_literals" (formula "12") (term "0,0,0"))
                         (builtin "One Step Simplification" (formula "12"))
                        (rule "true_left" (formula "12"))
                        (rule "cut_direct" (formula "22") (term "0"))
                        (branch "CUT: result_gcdHelp = 0 TRUE"
                            (builtin "One Step Simplification" (formula "23"))
                           (rule "true_left" (formula "23"))
                           (rule "replace_known_left" (formula "23") (term "0") (ifseqformula "22"))
                            (builtin "One Step Simplification" (formula "23"))
                           (rule "true_left" (formula "23"))
                           (rule "replace_known_left" (formula "27") (term "0") (ifseqformula "22"))
                            (builtin "One Step Simplification" (formula "27"))
                           (rule "true_left" (formula "27"))
                           (rule "replace_known_left" (formula "23") (term "0") (ifseqformula "22"))
                            (builtin "One Step Simplification" (formula "23"))
                           (rule "true_left" (formula "23"))
                           (rule "replace_known_left" (formula "26") (term "0") (ifseqformula "22"))
                            (builtin "One Step Simplification" (formula "26"))
                           (rule "true_left" (formula "26"))
                           (rule "replace_known_left" (formula "25") (term "0") (ifseqformula "22"))
                            (builtin "One Step Simplification" (formula "25"))
                           (rule "true_left" (formula "25"))
                           (rule "applyEq" (formula "24") (term "0") (ifseqformula "22"))
                           (rule "qeq_literals" (formula "24"))
                           (rule "true_left" (formula "24"))
                           (rule "applyEq" (formula "1") (term "0,0,0") (ifseqformula "22"))
                           (rule "times_zero_2" (formula "1") (term "0,0"))
                           (rule "applyEq" (formula "8") (term "0,0") (ifseqformula "22"))
                           (rule "jdiv_axiom_inline" (formula "8") (term "0"))
                           (rule "times_zero_2" (formula "8") (term "0,0,2,0"))
                           (rule "qeq_literals" (formula "8") (term "0,0"))
                            (builtin "One Step Simplification" (formula "8"))
                           (rule "applyEq" (formula "25") (term "1,0") (ifseqformula "22"))
                           (rule "times_zero_1" (formula "25") (term "0"))
                           (rule "eqSymm" (formula "25"))
                           (rule "applyEq" (formula "24") (term "1,0") (ifseqformula "22"))
                           (rule "eqSymm" (formula "24"))
                           (rule "applyEq" (formula "27") (term "1,0,0") (ifseqformula "22"))
                           (rule "polySimp_mulComm0" (formula "27") (term "0"))
                           (rule "applyEq" (formula "23") (term "1,0") (ifseqformula "22"))
                           (rule "eqSymm" (formula "23"))
                           (rule "applyEq" (formula "28") (term "0,0,0,1,0") (ifseqformula "22"))
                           (rule "jdiv_axiom_inline" (formula "28") (term "0,0,1,0"))
                           (rule "times_zero_2" (formula "28") (term "0,0,2,0,0,1,0"))
                           (rule "qeq_literals" (formula "28") (term "0,0,0,1,0"))
                            (builtin "One Step Simplification" (formula "28"))
                           (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "22"))
                           (rule "applyEq" (formula "2") (term "0,1") (ifseqformula "21"))
                           (rule "times_zero_2" (formula "2") (term "1"))
                           (rule "applyEq" (formula "4") (term "1,1") (ifseqformula "21"))
                           (rule "add_zero_right" (formula "4") (term "1"))
                           (rule "applyEq" (formula "25") (term "1,0,0") (ifseqformula "21"))
                           (rule "eqSymm" (formula "25"))
                           (rule "applyEq" (formula "3") (term "0,1,0,1") (ifseqformula "21"))
                           (rule "times_zero_2" (formula "3") (term "1,0,1"))
                           (rule "add_zero_right" (formula "3") (term "0,1"))
                           (rule "applyEq" (formula "6") (term "1,0,1") (ifseqformula "21"))
                           (rule "add_zero_right" (formula "6") (term "0,1"))
                           (rule "apply_eq_monomials" (formula "14") (term "0") (ifseqformula "24"))
                           (rule "add_zero_left" (formula "14") (term "1,0,0"))
                           (rule "polySimp_homoEq" (formula "14"))
                           (rule "polySimp_mulComm0" (formula "14") (term "1,0"))
                           (rule "polySimp_mulAssoc" (formula "14") (term "0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "14") (term "0,0,1,1,0"))
                           (rule "polySimp_pullOutFactor2" (formula "14") (term "1,1,0"))
                           (rule "add_literals" (formula "14") (term "1,1,1,0"))
                           (rule "times_zero_1" (formula "14") (term "1,1,0"))
                           (rule "times_zero_1" (formula "14") (term "1,0"))
                           (rule "add_zero_right" (formula "14") (term "0"))
                           (rule "applyEqRigid" (formula "1") (term "0") (ifseqformula "7"))
                           (rule "eqSymm" (formula "1"))
                           (rule "applyEq" (formula "8") (term "1") (ifseqformula "24"))
                           (rule "applyEq" (formula "11") (term "0,0") (ifseqformula "24"))
                           (rule "jdiv_axiom_inline" (formula "11") (term "0"))
                           (rule "qeq_literals" (formula "11") (term "0,0"))
                            (builtin "One Step Simplification" (formula "11"))
                           (rule "applyEq" (formula "9") (term "0") (ifseqformula "24"))
                           (rule "qeq_literals" (formula "9"))
                           (rule "true_left" (formula "9"))
                           (rule "applyEq" (formula "22") (term "1,0") (ifseqformula "20"))
                           (rule "eqSymm" (formula "22"))
                           (rule "applyEq" (formula "25") (term "0,0") (ifseqformula "20"))
                           (rule "times_zero_2" (formula "25") (term "0"))
                           (rule "eqSymm" (formula "25"))
                           (rule "applyEq" (formula "11") (term "1") (ifseqformula "23"))
                           (rule "applyEq" (formula "24") (term "0,0") (ifseqformula "21"))
                           (rule "eqSymm" (formula "24"))
                           (rule "polySimp_mulComm0" (formula "24") (term "1"))
                           (rule "applyEq" (formula "26") (term "0,0,0,0,1,0,0,0") (ifseqformula "23"))
                           (rule "jdiv_axiom_inline" (formula "26") (term "0,0,0,1,0,0,0"))
                           (rule "qeq_literals" (formula "26") (term "0,0,0,0,1,0,0,0"))
                            (builtin "One Step Simplification" (formula "26"))
                           (rule "applyEq" (formula "21") (term "0,0") (ifseqformula "23"))
                           (rule "applyEq" (formula "21") (term "1,0") (ifseqformula "20"))
                           (rule "div_literals" (formula "21") (term "0"))
                           (rule "applyEq" (formula "21") (term "0,1") (ifseqformula "23"))
                           (rule "jdiv_axiom_inline" (formula "21") (term "1"))
                           (rule "times_zero_2" (formula "21") (term "0,0,2,1"))
                           (rule "div_literals" (formula "21") (term "1,1"))
                           (rule "qeq_literals" (formula "21") (term "0,1"))
                            (builtin "One Step Simplification" (formula "21"))
                           (rule "true_left" (formula "21"))
                           (rule "applyEq" (formula "7") (term "0") (ifseqformula "10"))
                           (rule "eqSymm" (formula "7"))
                           (rule "apply_eq_monomials_rigid" (formula "3") (term "0") (ifseqformula "1"))
                           (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                           (rule "polySimp_mulComm1" (formula "3") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "3") (term "0,1,0,0"))
                           (rule "polySimp_pullOutFactor2b" (formula "3") (term "0"))
                           (rule "add_literals" (formula "3") (term "1,1,0"))
                           (rule "times_zero_1" (formula "3") (term "1,0"))
                           (rule "add_zero_right" (formula "3") (term "0"))
                           (rule "apply_eq_monomials_rigid" (formula "2") (term "0") (ifseqformula "1"))
                           (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                           (rule "polySimp_mulComm1" (formula "2") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "2") (term "0,1,0,0"))
                           (rule "polySimp_pullOutFactor2b" (formula "2") (term "0"))
                           (rule "add_literals" (formula "2") (term "1,1,0"))
                           (rule "times_zero_1" (formula "2") (term "1,0"))
                           (rule "add_zero_right" (formula "2") (term "0"))
                           (rule "applyEq" (formula "8") (term "0") (ifseqformula "23"))
                           (rule "qeq_literals" (formula "8"))
                           (rule "closeFalse" (formula "8"))
                        )
                        (branch "CUT: result_gcdHelp = 0 FALSE"
                            (builtin "One Step Simplification" (formula "22"))
                           (rule "replace_known_right" (formula "27") (term "0") (ifseqformula "35"))
                            (builtin "One Step Simplification" (formula "27"))
                           (rule "replace_known_right" (formula "29") (term "0") (ifseqformula "35"))
                            (builtin "One Step Simplification" (formula "29"))
                           (rule "replace_known_right" (formula "28") (term "0") (ifseqformula "35"))
                            (builtin "One Step Simplification" (formula "28"))
                           (rule "replace_known_right" (formula "24") (term "0") (ifseqformula "35"))
                            (builtin "One Step Simplification" (formula "24"))
                           (rule "replace_known_right" (formula "23") (term "0") (ifseqformula "35"))
                            (builtin "One Step Simplification" (formula "23"))
                           (rule "applyEq" (formula "32") (term "0,0") (ifseqformula "28"))
                           (rule "eqSymm" (formula "32"))
                           (rule "polySimp_mulComm0" (formula "32") (term "1"))
                           (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "23"))
                           (rule "polySimp_mulComm0" (formula "31") (term "0"))
                           (rule "applyEq" (formula "33") (term "0,0") (ifseqformula "28"))
                           (rule "polySimp_mulComm0" (formula "33") (term "0"))
                           (rule "applyEq" (formula "30") (term "1") (ifseqformula "28"))
                           (rule "applyEq" (formula "25") (term "1") (ifseqformula "23"))
                           (rule "applyEq" (formula "32") (term "0,0") (ifseqformula "23"))
                           (rule "polySimp_mulComm0" (formula "32") (term "0"))
                           (rule "applyEq" (formula "22") (term "0") (ifseqformula "31"))
                           (rule "inEqSimp_homoInEq0" (formula "22"))
                           (rule "polySimp_pullOutFactor1" (formula "22") (term "0"))
                           (rule "add_literals" (formula "22") (term "1,0"))
                           (rule "times_zero_1" (formula "22") (term "0"))
                           (rule "qeq_literals" (formula "22"))
                           (rule "true_left" (formula "22"))
                           (rule "applyEq" (formula "23") (term "0") (ifseqformula "30"))
                           (rule "inEqSimp_homoInEq1" (formula "23"))
                           (rule "polySimp_addComm1" (formula "23") (term "0"))
                           (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0"))
                           (rule "add_literals" (formula "23") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "23") (term "1,0,0"))
                           (rule "add_zero_right" (formula "23") (term "0,0"))
                           (rule "applyEq" (formula "28") (term "0") (ifseqformula "32"))
                           (rule "inEqSimp_homoInEq1" (formula "28"))
                           (rule "polySimp_addComm1" (formula "28") (term "0"))
                           (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0"))
                           (rule "add_literals" (formula "28") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "28") (term "1,0,0"))
                           (rule "add_zero_right" (formula "28") (term "0,0"))
                           (rule "applyEq" (formula "26") (term "0") (ifseqformula "31"))
                           (rule "inEqSimp_homoInEq0" (formula "26"))
                           (rule "polySimp_pullOutFactor1" (formula "26") (term "0"))
                           (rule "add_literals" (formula "26") (term "1,0"))
                           (rule "times_zero_1" (formula "26") (term "0"))
                           (rule "qeq_literals" (formula "26"))
                           (rule "true_left" (formula "26"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "23"))
                           (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                           (rule "polySimp_elimOne" (formula "23") (term "0"))
                           (rule "inEqSimp_contradEq7" (formula "32") (ifseqformula "23"))
                           (rule "times_zero_1" (formula "32") (term "1,0,0"))
                           (rule "add_zero_right" (formula "32") (term "0,0"))
                           (rule "leq_literals" (formula "32") (term "0"))
                            (builtin "One Step Simplification" (formula "32"))
                           (rule "false_right" (formula "32"))
                           (rule "inEqSimp_subsumption1" (formula "25") (ifseqformula "23"))
                           (rule "leq_literals" (formula "25") (term "0"))
                            (builtin "One Step Simplification" (formula "25"))
                           (rule "true_left" (formula "25"))
                           (rule "polySimp_critPair" (formula "16") (ifseqformula "15"))
                           (rule "polySimp_mulComm0" (formula "16") (term "0,1,0,0"))
                           (rule "polySimp_mulComm0" (formula "16") (term "1,1,1,0"))
                           (rule "polySimp_rightDist" (formula "16") (term "0,0"))
                           (rule "polySimp_mulComm1" (formula "16") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "16") (term "0,1,0,0"))
                           (rule "polySimp_mulAssoc" (formula "16") (term "0,0,0"))
                           (rule "polySimp_mulAssoc" (formula "16") (term "0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "16") (term "1,0"))
                           (rule "polySimp_mulComm1" (formula "16") (term "1,1,0"))
                           (rule "polySimp_mulComm0" (formula "16") (term "0,1,0"))
                           (rule "polySimp_mulComm1" (formula "16") (term "0,1,1,0"))
                           (rule "polySimp_addAssoc" (formula "16") (term "0"))
                           (rule "polySimp_addComm1" (formula "16") (term "0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "16") (term "0"))
                           (rule "add_literals" (formula "16") (term "1,1,0"))
                           (rule "times_zero_1" (formula "16") (term "1,0"))
                           (rule "add_zero_right" (formula "16") (term "0"))
                           (rule "polySimp_addComm0" (formula "16") (term "0"))
                           (rule "apply_eq_monomials" (formula "16") (term "1,0") (ifseqformula "13"))
                           (rule "polySimp_rightDist" (formula "16") (term "0,1,0"))
                           (rule "polySimp_mulComm1" (formula "16") (term "0,0,1,0"))
                           (rule "polySimp_mulAssoc" (formula "16") (term "1,0,1,0"))
                           (rule "polySimp_mulComm1" (formula "16") (term "0,1,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "16") (term "1,0,1,0"))
                           (rule "polySimp_elimOne" (formula "16") (term "1,0,1,0"))
                           (rule "polySimp_mulComm1" (formula "16") (term "1,0,1,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "16") (term "1,0"))
                           (rule "add_literals" (formula "16") (term "1,1,1,0"))
                           (rule "times_zero_1" (formula "16") (term "1,1,0"))
                           (rule "add_zero_right" (formula "16") (term "1,0"))
                           (rule "polySimp_pullOutFactor1" (formula "16") (term "0"))
                           (rule "add_literals" (formula "16") (term "1,0"))
                           (rule "times_zero_1" (formula "16") (term "0"))
                            (builtin "One Step Simplification" (formula "16"))
                           (rule "true_left" (formula "16"))
                           (rule "polySimp_critPair" (formula "27") (ifseqformula "29"))
                           (rule "polySimp_mulComm0" (formula "27") (term "1,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "27") (term "0,1,0,0"))
                           (rule "polySimp_rightDist" (formula "27") (term "1,0"))
                           (rule "polySimp_mulComm1" (formula "27") (term "1,1,0"))
                           (rule "polySimp_mulComm0" (formula "27") (term "0,1,0"))
                           (rule "polySimp_rightDist" (formula "27") (term "0,0"))
                           (rule "polySimp_mulComm1" (formula "27") (term "1,0,0"))
                           (rule "polySimp_mulAssoc" (formula "27") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "27") (term "0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "27") (term "0"))
                           (rule "polySimp_addComm1" (formula "27") (term "0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "27") (term "0"))
                           (rule "add_literals" (formula "27") (term "1,1,0"))
                           (rule "times_zero_1" (formula "27") (term "1,0"))
                           (rule "add_zero_right" (formula "27") (term "0"))
                           (rule "polySimp_addComm0" (formula "27") (term "0"))
                           (rule "applyEq" (formula "27") (term "0,1,0") (ifseqformula "29"))
                           (rule "polySimp_pullOutFactor1" (formula "27") (term "0"))
                           (rule "add_literals" (formula "27") (term "1,0"))
                           (rule "times_zero_1" (formula "27") (term "0"))
                            (builtin "One Step Simplification" (formula "27"))
                           (rule "true_left" (formula "27"))
                           (rule "polySimp_critPair" (formula "27") (ifseqformula "28"))
                           (rule "polySimp_mulComm0" (formula "27") (term "0,1,0,0"))
                           (rule "polySimp_mulComm0" (formula "27") (term "1,1,1,0"))
                           (rule "polySimp_rightDist" (formula "27") (term "0,0"))
                           (rule "polySimp_mulComm1" (formula "27") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "27") (term "0,1,0,0"))
                           (rule "polySimp_mulAssoc" (formula "27") (term "0,0,0"))
                           (rule "polySimp_mulAssoc" (formula "27") (term "0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "27") (term "1,0"))
                           (rule "polySimp_mulComm1" (formula "27") (term "1,1,0"))
                           (rule "polySimp_mulComm1" (formula "27") (term "0,1,1,0"))
                           (rule "polySimp_addAssoc" (formula "27") (term "0"))
                           (rule "polySimp_addComm1" (formula "27") (term "0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "27") (term "0"))
                           (rule "add_literals" (formula "27") (term "1,1,0"))
                           (rule "times_zero_1" (formula "27") (term "1,0"))
                           (rule "add_zero_right" (formula "27") (term "0"))
                           (rule "polySimp_addComm0" (formula "27") (term "0"))
                           (rule "apply_eq_monomials" (formula "27") (term "1,0") (ifseqformula "30"))
                           (rule "polySimp_rightDist" (formula "27") (term "0,1,0"))
                           (rule "polySimp_mulComm1" (formula "27") (term "0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "27") (term "0,0,0,1,0"))
                           (rule "polySimp_mulAssoc" (formula "27") (term "1,0,1,0"))
                           (rule "polySimp_mulComm1" (formula "27") (term "0,1,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "27") (term "1,0,1,0"))
                           (rule "polySimp_elimOne" (formula "27") (term "1,0,1,0"))
                           (rule "polySimp_mulComm1" (formula "27") (term "1,0,1,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "27") (term "1,0"))
                           (rule "add_literals" (formula "27") (term "1,1,1,0"))
                           (rule "times_zero_1" (formula "27") (term "1,1,0"))
                           (rule "add_zero_right" (formula "27") (term "1,0"))
                           (rule "polySimp_pullOutFactor1" (formula "27") (term "0"))
                           (rule "add_literals" (formula "27") (term "1,0"))
                           (rule "times_zero_1" (formula "27") (term "0"))
                            (builtin "One Step Simplification" (formula "27"))
                           (rule "true_left" (formula "27"))
                           (rule "allLeft" (formula "30") (inst "t=x_0"))
                           (rule "applyEq" (formula "30") (term "0,0,0,1,0") (ifseqformula "14"))
                           (rule "polySimp_mulComm0" (formula "30") (term "0,0,1,0"))
                           (rule "replace_known_left" (formula "30") (term "0,1,0") (ifseqformula "16"))
                            (builtin "One Step Simplification" (formula "30"))
                           (rule "applyEq" (formula "30") (term "0,0,0,1,0") (ifseqformula "12"))
                           (rule "polySimp_mulComm0" (formula "30") (term "0,0,1,0"))
                           (rule "replace_known_left" (formula "30") (term "0,1,0") (ifseqformula "13"))
                            (builtin "One Step Simplification" (formula "30"))
                           (rule "applyEq" (formula "30") (term "0,0,1") (ifseqformula "8"))
                           (rule "polySimp_mulComm0" (formula "30") (term "0,1"))
                           (rule "inEqSimp_contradEq3" (formula "30") (term "1") (ifseqformula "5"))
                           (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,1"))
                           (rule "add_literals" (formula "30") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "30") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "30") (term "0,0,1"))
                           (rule "qeq_literals" (formula "30") (term "0,1"))
                            (builtin "One Step Simplification" (formula "30"))
                           (rule "inEqSimp_contradInEq1" (formula "30") (ifseqformula "6"))
                           (rule "qeq_literals" (formula "30") (term "0"))
                            (builtin "One Step Simplification" (formula "30"))
                           (rule "closeFalse" (formula "30"))
                        )
                     )
                     (branch "result_gcdHelp >= 0 FALSE"
                        (rule "replace_known_right" (formula "7") (term "0,0") (ifseqformula "30"))
                         (builtin "One Step Simplification" (formula "7"))
                        (rule "eqSymm" (formula "7"))
                        (rule "replace_known_right" (formula "23") (term "0,1,1") (ifseqformula "30"))
                         (builtin "One Step Simplification" (formula "23"))
                        (rule "inEqSimp_geqRight" (formula "30"))
                        (rule "times_zero_1" (formula "1") (term "1,0,0"))
                        (rule "add_zero_right" (formula "1") (term "0,0"))
                        (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "8"))
                        (rule "polySimp_mulComm1" (formula "31") (term "0"))
                        (rule "polySimp_homoEq" (formula "31"))
                        (rule "polySimp_mulLiterals" (formula "31") (term "1,0"))
                        (rule "polySimp_elimOne" (formula "31") (term "1,0"))
                        (rule "polySimp_mulComm0" (formula "31") (term "1,0"))
                        (rule "polySimp_sepPosMonomial" (formula "31"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                        (rule "mul_literals" (formula "1") (term "1"))
                        (rule "inEqSimp_contradEq3" (formula "26") (term "0") (ifseqformula "1"))
                        (rule "times_zero_1" (formula "26") (term "1,0,0,0"))
                        (rule "add_zero_right" (formula "26") (term "0,0,0"))
                        (rule "qeq_literals" (formula "26") (term "0,0"))
                         (builtin "One Step Simplification" (formula "26"))
                        (rule "andLeft" (formula "26"))
                        (rule "andLeft" (formula "26"))
                        (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "27"))
                        (rule "polySimp_mulComm0" (formula "31") (term "0"))
                        (rule "applyEq" (formula "26") (term "0") (ifseqformula "31"))
                        (rule "inEqSimp_homoInEq0" (formula "26"))
                        (rule "polySimp_pullOutFactor1" (formula "26") (term "0"))
                        (rule "add_literals" (formula "26") (term "1,0"))
                        (rule "times_zero_1" (formula "26") (term "0"))
                        (rule "qeq_literals" (formula "26"))
                        (rule "true_left" (formula "26"))
                        (rule "applyEq" (formula "27") (term "0") (ifseqformula "30"))
                        (rule "inEqSimp_homoInEq1" (formula "27"))
                        (rule "polySimp_addComm1" (formula "27") (term "0"))
                        (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0"))
                        (rule "add_literals" (formula "27") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "27") (term "1,0,0"))
                        (rule "add_zero_right" (formula "27") (term "0,0"))
                        (rule "applyEq" (formula "28") (term "1") (ifseqformula "26"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "27"))
                        (rule "mul_literals" (formula "27") (term "1"))
                        (rule "inEqSimp_contradEq3" (formula "24") (term "0") (ifseqformula "1"))
                        (rule "times_zero_1" (formula "24") (term "1,0,0,0"))
                        (rule "add_zero_right" (formula "24") (term "0,0,0"))
                        (rule "qeq_literals" (formula "24") (term "0,0"))
                         (builtin "One Step Simplification" (formula "24"))
                        (rule "andLeft" (formula "24"))
                        (rule "andLeft" (formula "24"))
                        (rule "applyEq" (formula "30") (term "0,0") (ifseqformula "25"))
                        (rule "polySimp_mulComm0" (formula "30") (term "0"))
                        (rule "applyEq" (formula "24") (term "0") (ifseqformula "30"))
                        (rule "inEqSimp_homoInEq0" (formula "24"))
                        (rule "polySimp_pullOutFactor1" (formula "24") (term "0"))
                        (rule "add_literals" (formula "24") (term "1,0"))
                        (rule "times_zero_1" (formula "24") (term "0"))
                        (rule "qeq_literals" (formula "24"))
                        (rule "true_left" (formula "24"))
                        (rule "applyEq" (formula "25") (term "0") (ifseqformula "29"))
                        (rule "inEqSimp_homoInEq1" (formula "25"))
                        (rule "polySimp_addComm1" (formula "25") (term "0"))
                        (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0"))
                        (rule "add_literals" (formula "25") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "25") (term "1,0,0"))
                        (rule "add_zero_right" (formula "25") (term "0,0"))
                        (rule "applyEq" (formula "26") (term "1") (ifseqformula "24"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "25"))
                        (rule "mul_literals" (formula "25") (term "1"))
                        (rule "inEqSimp_strengthen0" (formula "3") (ifseqformula "31"))
                        (rule "inEqSimp_contradEq3" (formula "31") (ifseqformula "3"))
                        (rule "polySimp_mulAssoc" (formula "31") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "31") (term "0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "31") (term "1,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "31") (term "0,0"))
                        (rule "add_literals" (formula "31") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "31") (term "1,0,0"))
                        (rule "add_zero_right" (formula "31") (term "0,0"))
                        (rule "qeq_literals" (formula "31") (term "0"))
                         (builtin "One Step Simplification" (formula "31"))
                        (rule "false_right" (formula "31"))
                        (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "3"))
                        (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0"))
                        (rule "polySimp_elimOne" (formula "4") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "4") (term "0"))
                        (rule "polySimp_rightDist" (formula "4") (term "0,0,0"))
                        (rule "mul_literals" (formula "4") (term "0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "4") (term "1,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                        (rule "add_literals" (formula "4") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0"))
                        (rule "add_literals" (formula "4") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "4") (term "1,0,0"))
                        (rule "add_zero_right" (formula "4") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                        (rule "mul_literals" (formula "4") (term "1"))
                        (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "4"))
                        (rule "leq_literals" (formula "13") (term "0"))
                         (builtin "One Step Simplification" (formula "13"))
                        (rule "true_left" (formula "13"))
                        (rule "polyDiv_pullOut" (formula "16") (term "0") (inst "polyDivCoeff=quotient_4"))
                        (rule "polySimp_mulComm1" (formula "16") (term "1,0,0,2,0"))
                        (rule "polySimp_mulComm0" (formula "16") (term "0,1,0,0,2,0"))
                        (rule "polySimp_addComm0" (formula "16") (term "2,0"))
                        (rule "applyEq" (formula "16") (term "0,1,0,1,2,0") (ifseqformula "18"))
                        (rule "polySimp_pullOutFactor1" (formula "16") (term "0,1,2,0"))
                        (rule "add_literals" (formula "16") (term "1,0,1,2,0"))
                        (rule "times_zero_1" (formula "16") (term "0,1,2,0"))
                        (rule "inEqSimp_contradEq7" (formula "16") (term "0,0") (ifseqformula "4"))
                        (rule "times_zero_1" (formula "16") (term "1,0,0,0,0"))
                        (rule "add_zero_right" (formula "16") (term "0,0,0,0"))
                        (rule "leq_literals" (formula "16") (term "0,0,0"))
                         (builtin "One Step Simplification" (formula "16"))
                        (rule "polySimp_homoEq" (formula "16"))
                        (rule "polySimp_mulComm0" (formula "16") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "16") (term "1,0"))
                        (rule "polySimp_mulComm0" (formula "16") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "16") (term "0"))
                        (rule "polySimp_pullOutFactor1" (formula "16") (term "0,0"))
                        (rule "add_literals" (formula "16") (term "1,0,0"))
                        (rule "times_zero_1" (formula "16") (term "0,0"))
                        (rule "add_zero_left" (formula "16") (term "0"))
                        (rule "polySimp_invertEq" (formula "16"))
                        (rule "times_zero_2" (formula "16") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "16") (term "0"))
                        (rule "polySimp_elimOne" (formula "16") (term "0"))
                        (rule "polyDiv_zero" (formula "16") (term "0"))
                         (builtin "One Step Simplification" (formula "16"))
                        (rule "div_literals" (formula "16") (term "0,1"))
                        (rule "inEqSimp_contradEq7" (formula "16") (term "0,0") (ifseqformula "4"))
                        (rule "times_zero_1" (formula "16") (term "1,0,0,0,0"))
                        (rule "add_zero_right" (formula "16") (term "0,0,0,0"))
                        (rule "leq_literals" (formula "16") (term "0,0,0"))
                         (builtin "One Step Simplification" (formula "16"))
                        (rule "true_left" (formula "16"))
                        (rule "polyDiv_pullOut" (formula "13") (term "0") (inst "polyDivCoeff=quotient_5"))
                        (rule "polySimp_mulComm1" (formula "13") (term "1,0,0,2,0"))
                        (rule "polySimp_mulComm0" (formula "13") (term "0,1,0,0,2,0"))
                        (rule "polySimp_addComm0" (formula "13") (term "2,0"))
                        (rule "applyEq" (formula "13") (term "0,1,0,1,2,0") (ifseqformula "15"))
                        (rule "polySimp_pullOutFactor1" (formula "13") (term "0,1,2,0"))
                        (rule "add_literals" (formula "13") (term "1,0,1,2,0"))
                        (rule "times_zero_1" (formula "13") (term "0,1,2,0"))
                        (rule "inEqSimp_contradEq7" (formula "13") (term "0,0") (ifseqformula "4"))
                        (rule "times_zero_1" (formula "13") (term "1,0,0,0,0"))
                        (rule "add_zero_right" (formula "13") (term "0,0,0,0"))
                        (rule "leq_literals" (formula "13") (term "0,0,0"))
                         (builtin "One Step Simplification" (formula "13"))
                        (rule "polySimp_homoEq" (formula "13"))
                        (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "13") (term "1,0"))
                        (rule "polySimp_mulComm0" (formula "13") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "13") (term "0"))
                        (rule "polySimp_pullOutFactor1" (formula "13") (term "0,0"))
                        (rule "add_literals" (formula "13") (term "1,0,0"))
                        (rule "times_zero_1" (formula "13") (term "0,0"))
                        (rule "add_zero_left" (formula "13") (term "0"))
                        (rule "polySimp_invertEq" (formula "13"))
                        (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                        (rule "times_zero_2" (formula "13") (term "1"))
                        (rule "polySimp_elimOne" (formula "13") (term "0"))
                        (rule "polyDiv_zero" (formula "13") (term "0"))
                         (builtin "One Step Simplification" (formula "13"))
                        (rule "div_literals" (formula "13") (term "0,1"))
                        (rule "inEqSimp_contradEq7" (formula "13") (term "0,0") (ifseqformula "4"))
                        (rule "times_zero_1" (formula "13") (term "1,0,0,0,0"))
                        (rule "add_zero_right" (formula "13") (term "0,0,0,0"))
                        (rule "leq_literals" (formula "13") (term "0,0,0"))
                         (builtin "One Step Simplification" (formula "13"))
                        (rule "true_left" (formula "13"))
                        (rule "polySimp_critPair" (formula "16") (ifseqformula "14"))
                        (rule "polySimp_mulComm0" (formula "16") (term "1,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "16") (term "0,1,0,0"))
                        (rule "polySimp_rightDist" (formula "16") (term "1,0"))
                        (rule "polySimp_mulComm1" (formula "16") (term "1,1,0"))
                        (rule "polySimp_mulComm0" (formula "16") (term "0,1,0"))
                        (rule "polySimp_rightDist" (formula "16") (term "0,0"))
                        (rule "polySimp_mulComm1" (formula "16") (term "1,0,0"))
                        (rule "polySimp_mulAssoc" (formula "16") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "16") (term "0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "16") (term "0"))
                        (rule "polySimp_addComm1" (formula "16") (term "0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "16") (term "0"))
                        (rule "add_literals" (formula "16") (term "1,1,0"))
                        (rule "times_zero_1" (formula "16") (term "1,0"))
                        (rule "add_zero_right" (formula "16") (term "0"))
                        (rule "polySimp_addComm0" (formula "16") (term "0"))
                        (rule "polySimp_sepNegMonomial" (formula "16"))
                        (rule "polySimp_mulLiterals" (formula "16") (term "0"))
                        (rule "polySimp_elimOne" (formula "16") (term "0"))
                        (rule "polyDiv_pullOut" (formula "25") (term "0") (inst "polyDivCoeff=quotient_1"))
                        (rule "polySimp_mulComm1" (formula "25") (term "1,0,0,2,0"))
                        (rule "polySimp_mulComm0" (formula "25") (term "0,1,0,0,2,0"))
                        (rule "polySimp_addComm0" (formula "25") (term "2,0"))
                        (rule "applyEq" (formula "25") (term "0,1,0,1,2,0") (ifseqformula "28"))
                        (rule "polySimp_pullOutFactor1" (formula "25") (term "0,1,2,0"))
                        (rule "add_literals" (formula "25") (term "1,0,1,2,0"))
                        (rule "times_zero_1" (formula "25") (term "0,1,2,0"))
                        (rule "inEqSimp_contradEq3" (formula "25") (term "0,0") (ifseqformula "1"))
                        (rule "times_zero_1" (formula "25") (term "1,0,0,0,0"))
                        (rule "add_zero_right" (formula "25") (term "0,0,0,0"))
                        (rule "qeq_literals" (formula "25") (term "0,0,0"))
                         (builtin "One Step Simplification" (formula "25"))
                        (rule "polySimp_homoEq" (formula "25"))
                        (rule "polySimp_mulComm0" (formula "25") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "25") (term "1,0"))
                        (rule "polySimp_mulComm0" (formula "25") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "25") (term "0"))
                        (rule "polySimp_pullOutFactor1" (formula "25") (term "0,0"))
                        (rule "add_literals" (formula "25") (term "1,0,0"))
                        (rule "times_zero_1" (formula "25") (term "0,0"))
                        (rule "add_zero_left" (formula "25") (term "0"))
                        (rule "polySimp_invertEq" (formula "25"))
                        (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                        (rule "times_zero_2" (formula "25") (term "1"))
                        (rule "polySimp_elimOne" (formula "25") (term "0"))
                        (rule "polyDiv_zero" (formula "25") (term "0"))
                         (builtin "One Step Simplification" (formula "25"))
                        (rule "div_literals" (formula "25") (term "0,1"))
                        (rule "inEqSimp_contradEq3" (formula "25") (term "0,0") (ifseqformula "1"))
                        (rule "times_zero_1" (formula "25") (term "1,0,0,0,0"))
                        (rule "add_zero_right" (formula "25") (term "0,0,0,0"))
                        (rule "qeq_literals" (formula "25") (term "0,0,0"))
                         (builtin "One Step Simplification" (formula "25"))
                        (rule "true_left" (formula "25"))
                        (rule "polySimp_critPair" (formula "26") (ifseqformula "27"))
                        (rule "polySimp_mulComm0" (formula "26") (term "0,1,0,0"))
                        (rule "polySimp_mulComm0" (formula "26") (term "1,1,1,0"))
                        (rule "polySimp_rightDist" (formula "26") (term "0,0"))
                        (rule "polySimp_mulComm1" (formula "26") (term "1,0,0"))
                        (rule "polySimp_mulAssoc" (formula "26") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "26") (term "0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "26") (term "1,0"))
                        (rule "polySimp_mulComm0" (formula "26") (term "0,1,0"))
                        (rule "polySimp_mulComm1" (formula "26") (term "1,1,0"))
                        (rule "polySimp_addAssoc" (formula "26") (term "0"))
                        (rule "polySimp_addComm1" (formula "26") (term "0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "26") (term "0"))
                        (rule "add_literals" (formula "26") (term "1,1,0"))
                        (rule "times_zero_1" (formula "26") (term "1,0"))
                        (rule "add_zero_right" (formula "26") (term "0"))
                        (rule "polySimp_addComm0" (formula "26") (term "0"))
                        (rule "polySimp_sepNegMonomial" (formula "26"))
                        (rule "polySimp_mulLiterals" (formula "26") (term "0"))
                        (rule "polySimp_elimOne" (formula "26") (term "0"))
                        (rule "polyDiv_pullOut" (formula "23") (term "0") (inst "polyDivCoeff=quotient_0"))
                        (rule "polySimp_mulComm1" (formula "23") (term "1,0,0,2,0"))
                        (rule "polySimp_mulComm0" (formula "23") (term "0,1,0,0,2,0"))
                        (rule "polySimp_addComm0" (formula "23") (term "2,0"))
                        (rule "applyEq" (formula "23") (term "0,1,0,1,2,0") (ifseqformula "27"))
                        (rule "polySimp_pullOutFactor1" (formula "23") (term "0,1,2,0"))
                        (rule "add_literals" (formula "23") (term "1,0,1,2,0"))
                        (rule "times_zero_1" (formula "23") (term "0,1,2,0"))
                        (rule "inEqSimp_contradEq3" (formula "23") (term "0,0") (ifseqformula "1"))
                        (rule "times_zero_1" (formula "23") (term "1,0,0,0,0"))
                        (rule "add_zero_right" (formula "23") (term "0,0,0,0"))
                        (rule "qeq_literals" (formula "23") (term "0,0,0"))
                         (builtin "One Step Simplification" (formula "23"))
                        (rule "polySimp_homoEq" (formula "23"))
                        (rule "polySimp_mulComm0" (formula "23") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "23") (term "1,0"))
                        (rule "polySimp_mulComm0" (formula "23") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "23") (term "0"))
                        (rule "polySimp_pullOutFactor1" (formula "23") (term "0,0"))
                        (rule "add_literals" (formula "23") (term "1,0,0"))
                        (rule "times_zero_1" (formula "23") (term "0,0"))
                        (rule "add_zero_left" (formula "23") (term "0"))
                        (rule "polySimp_invertEq" (formula "23"))
                        (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                        (rule "times_zero_2" (formula "23") (term "1"))
                        (rule "polySimp_elimOne" (formula "23") (term "0"))
                        (rule "polyDiv_zero" (formula "23") (term "0"))
                         (builtin "One Step Simplification" (formula "23"))
                        (rule "div_literals" (formula "23") (term "0,1"))
                        (rule "inEqSimp_contradEq3" (formula "23") (term "0,0") (ifseqformula "1"))
                        (rule "times_zero_1" (formula "23") (term "1,0,0,0,0"))
                        (rule "add_zero_right" (formula "23") (term "0,0,0,0"))
                        (rule "qeq_literals" (formula "23") (term "0,0,0"))
                         (builtin "One Step Simplification" (formula "23"))
                        (rule "true_left" (formula "23"))
                        (rule "polySimp_critPair" (formula "26") (ifseqformula "25"))
                        (rule "polySimp_mulComm0" (formula "26") (term "1,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "26") (term "0,1,0,0"))
                        (rule "polySimp_rightDist" (formula "26") (term "1,0"))
                        (rule "polySimp_mulComm1" (formula "26") (term "1,1,0"))
                        (rule "polySimp_mulComm1" (formula "26") (term "0,1,1,0"))
                        (rule "polySimp_rightDist" (formula "26") (term "0,0"))
                        (rule "polySimp_mulComm1" (formula "26") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "26") (term "0,1,0,0"))
                        (rule "polySimp_mulAssoc" (formula "26") (term "0,0,0"))
                        (rule "polySimp_mulAssoc" (formula "26") (term "0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "26") (term "0"))
                        (rule "polySimp_addComm1" (formula "26") (term "0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "26") (term "0"))
                        (rule "add_literals" (formula "26") (term "1,1,0"))
                        (rule "times_zero_1" (formula "26") (term "1,0"))
                        (rule "add_zero_right" (formula "26") (term "0"))
                        (rule "polySimp_addComm0" (formula "26") (term "0"))
                        (rule "apply_eq_monomials" (formula "26") (term "1,0") (ifseqformula "28"))
                        (rule "polySimp_rightDist" (formula "26") (term "0,1,0"))
                        (rule "polySimp_mulComm1" (formula "26") (term "0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "26") (term "0,0,0,1,0"))
                        (rule "polySimp_mulAssoc" (formula "26") (term "1,0,1,0"))
                        (rule "polySimp_mulComm1" (formula "26") (term "0,1,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "26") (term "1,0,1,0"))
                        (rule "polySimp_elimOne" (formula "26") (term "1,0,1,0"))
                        (rule "polySimp_mulComm1" (formula "26") (term "1,0,1,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "26") (term "1,0"))
                        (rule "add_literals" (formula "26") (term "1,1,1,0"))
                        (rule "times_zero_1" (formula "26") (term "1,1,0"))
                        (rule "add_zero_right" (formula "26") (term "1,0"))
                        (rule "polySimp_pullOutFactor1" (formula "26") (term "0"))
                        (rule "add_literals" (formula "26") (term "1,0"))
                        (rule "times_zero_1" (formula "26") (term "0"))
                         (builtin "One Step Simplification" (formula "26"))
                        (rule "true_left" (formula "26"))
                        (rule "polySimp_critPair" (formula "17") (ifseqformula "16"))
                        (rule "polySimp_mulComm0" (formula "17") (term "0,1,0,0"))
                        (rule "polySimp_mulComm0" (formula "17") (term "1,1,1,0"))
                        (rule "polySimp_rightDist" (formula "17") (term "0,0"))
                        (rule "polySimp_mulComm1" (formula "17") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "17") (term "0,1,0,0"))
                        (rule "polySimp_mulAssoc" (formula "17") (term "0,0,0"))
                        (rule "polySimp_mulAssoc" (formula "17") (term "0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "17") (term "1,0"))
                        (rule "polySimp_mulComm1" (formula "17") (term "1,1,0"))
                        (rule "polySimp_mulComm0" (formula "17") (term "0,1,0"))
                        (rule "polySimp_mulComm1" (formula "17") (term "0,1,1,0"))
                        (rule "polySimp_addAssoc" (formula "17") (term "0"))
                        (rule "polySimp_addComm1" (formula "17") (term "0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "17") (term "0"))
                        (rule "add_literals" (formula "17") (term "1,1,0"))
                        (rule "times_zero_1" (formula "17") (term "1,0"))
                        (rule "add_zero_right" (formula "17") (term "0"))
                        (rule "polySimp_addComm0" (formula "17") (term "0"))
                        (rule "apply_eq_monomials" (formula "17") (term "1,0") (ifseqformula "14"))
                        (rule "polySimp_rightDist" (formula "17") (term "0,1,0"))
                        (rule "polySimp_mulComm1" (formula "17") (term "0,0,1,0"))
                        (rule "polySimp_mulAssoc" (formula "17") (term "1,0,1,0"))
                        (rule "polySimp_mulComm1" (formula "17") (term "0,1,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "17") (term "1,0,1,0"))
                        (rule "polySimp_elimOne" (formula "17") (term "1,0,1,0"))
                        (rule "polySimp_mulComm1" (formula "17") (term "1,0,1,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "17") (term "1,0"))
                        (rule "add_literals" (formula "17") (term "1,1,1,0"))
                        (rule "times_zero_1" (formula "17") (term "1,1,0"))
                        (rule "add_zero_right" (formula "17") (term "1,0"))
                        (rule "polySimp_pullOutFactor1" (formula "17") (term "0"))
                        (rule "add_literals" (formula "17") (term "1,0"))
                        (rule "times_zero_1" (formula "17") (term "0"))
                         (builtin "One Step Simplification" (formula "17"))
                        (rule "true_left" (formula "17"))
                        (rule "allLeft" (formula "28") (inst "t=x_0"))
                        (rule "applyEq" (formula "28") (term "0,0,0,1,0") (ifseqformula "15"))
                        (rule "polySimp_mulComm0" (formula "28") (term "0,0,1,0"))
                        (rule "replace_known_left" (formula "28") (term "0,1,0") (ifseqformula "17"))
                         (builtin "One Step Simplification" (formula "28"))
                        (rule "applyEq" (formula "28") (term "0,0,0,1,0") (ifseqformula "13"))
                        (rule "polySimp_mulComm0" (formula "28") (term "0,0,1,0"))
                        (rule "replace_known_left" (formula "28") (term "0,1,0") (ifseqformula "14"))
                         (builtin "One Step Simplification" (formula "28"))
                        (rule "applyEq" (formula "28") (term "0,0,1") (ifseqformula "9"))
                        (rule "polySimp_mulComm1" (formula "28") (term "0,1"))
                        (rule "polySimp_homoEq" (formula "28") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "28") (term "1,0,1"))
                        (rule "polySimp_elimOne" (formula "28") (term "1,0,1"))
                        (rule "polySimp_mulComm0" (formula "28") (term "1,0,1"))
                        (rule "polySimp_sepPosMonomial" (formula "28") (term "1"))
                        (rule "inEqSimp_contradEq3" (formula "28") (term "1") (ifseqformula "3"))
                        (rule "polySimp_mulAssoc" (formula "28") (term "1,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "28") (term "0,1,0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0,1"))
                        (rule "polySimp_elimOne" (formula "28") (term "1,0,0,1"))
                        (rule "polySimp_pullOutFactor2b" (formula "28") (term "0,0,1"))
                        (rule "add_literals" (formula "28") (term "1,1,0,0,1"))
                        (rule "times_zero_1" (formula "28") (term "1,0,0,1"))
                        (rule "add_zero_right" (formula "28") (term "0,0,1"))
                        (rule "qeq_literals" (formula "28") (term "0,1"))
                         (builtin "One Step Simplification" (formula "28"))
                        (rule "inEqSimp_contradInEq1" (formula "28") (ifseqformula "4"))
                        (rule "qeq_literals" (formula "28") (term "0"))
                         (builtin "One Step Simplification" (formula "28"))
                        (rule "closeFalse" (formula "28"))
                     )
                  )
               )
            )
            (branch "Case 2"
                (builtin "One Step Simplification" (formula "10"))
               (rule "closeTrue" (formula "10"))
            )
         )
         (branch "Exceptional Post (gcdHelp)"
             (builtin "One Step Simplification" (formula "4"))
             (builtin "One Step Simplification" (formula "8"))
            (rule "andLeft" (formula "4"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "5") (term "1,0") (ifseqformula "4"))
            (rule "andLeft" (formula "5"))
            (rule "andLeft" (formula "5"))
            (rule "andLeft" (formula "7"))
            (rule "notLeft" (formula "5"))
            (rule "close" (formula "8") (ifseqformula "7"))
         )
         (branch "Pre (gcdHelp)"
             (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "1")))
            (rule "inEqSimp_gtRight" (formula "3"))
            (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
            (rule "polySimp_addComm0" (formula "1") (term "0"))
            (rule "inEqSimp_ltRight" (formula "4"))
            (rule "times_zero_1" (formula "1") (term "0,0"))
            (rule "add_zero_left" (formula "1") (term "0"))
            (rule "inEqSimp_ltRight" (formula "5"))
            (rule "times_zero_1" (formula "1") (term "0,0"))
            (rule "add_zero_left" (formula "1") (term "0"))
            (rule "replace_known_left" (formula "6") (term "0") (ifseqformula "1"))
             (builtin "One Step Simplification" (formula "6"))
            (rule "inEqSimp_geqRight" (formula "6"))
            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "4"))
            (rule "polySimp_mulLiterals" (formula "4") (term "0"))
            (rule "polySimp_elimOne" (formula "4") (term "0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "1"))
            (rule "polySimp_mulComm0" (formula "1") (term "1"))
            (rule "polySimp_rightDist" (formula "1") (term "1"))
            (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
            (rule "mul_literals" (formula "1") (term "0,1"))
            (rule "polySimp_elimOne" (formula "1") (term "1,1"))
            (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "1"))
            (rule "andLeft" (formula "4"))
            (rule "inEqSimp_homoInEq1" (formula "4"))
            (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
            (rule "polySimp_rightDist" (formula "4") (term "1,0"))
            (rule "mul_literals" (formula "4") (term "0,1,0"))
            (rule "polySimp_addAssoc" (formula "4") (term "0"))
            (rule "polySimp_addComm0" (formula "4") (term "0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
            (rule "add_literals" (formula "4") (term "1,1,0"))
            (rule "times_zero_1" (formula "4") (term "1,0"))
            (rule "add_zero_right" (formula "4") (term "0"))
            (rule "leq_literals" (formula "4"))
            (rule "closeFalse" (formula "4"))
         )
      )
   )
)
)
}
