/**
This problem should be solved automatically by external provers.
Tested for Yices, Simplify and Z3:


Options:
- Choose all supported taclets.
- Maximum number of generic sorts: 2 (at least).
- Yices: All supproted taclets can be selected.
- !!Z3 and Simplify: select only 'prove dependent/only created objects are referenced'
*/


\javaSource "./javaSource/";
\sorts {
  MySort;
// Test;
}


\functions {
  boolean b;
  MySort f;
  java.lang.Object o;


}

\programVariables {
  Test A;
  Test B;
  Test [] arrayTest;
  java.lang.Object[] array;
}


\problem {

  (   ((A.<created>=TRUE & wellFormed(heap))->				// (1)
     (A.F@(Test).<created> = TRUE | A.F@(Test)=null) 
     )

  &  	((A.F.<created>=TRUE & wellFormed(heap))->			// (2)
	(A.F.F@(Test).<created> = TRUE | A.F.F@(Test)=null))
  &
	((A.<created>=TRUE & wellFormed(heap) & !(A.F@(Test)=null))-> (A.F.F@(Test).<created>=TRUE | A.F.F@(Test)=null))
  &

  	((A.<created>=TRUE & wellFormed(heap) & \exists int x;(Test::<get>(x)=A.F@(Test)))->\exists int y;(Test::<get>(y).<created>=TRUE)))
    
   
          
    
  
     


}