\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Thu Jun 02 14:33:33 CEST 2022
[NewSMT]NoTypeHierarchy=false
[Labels]UseOriginLabels=true
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[NewSMT]Presburger=false
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=assertions-assertions\\:safe , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:allow , JavaCard-JavaCard\\:off , Strings-Strings\\:on , modelFields-modelFields\\:treatAsAxiom , bigint-bigint\\:on , sequences-sequences\\:on , moreSeqRules-moreSeqRules\\:off , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , permissions-permissions\\:off , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off , floatRules-floatRules\\:strictfpOnly , javaLoopTreatment-javaLoopTreatment\\:efficient , methodExpansion-methodExpansion\\:modularOnly
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_SCOPE_INV_TACLET
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[Strategy]MaximumNumberOfAutomaticApplications=10000
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[Strategy]Timeout=-1
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[SMTSettings]useUninterpretedMultiplication=true
[NewSMT]sqrtSMTTranslation=SMT
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[NewSMT]identifier=OPEN
[SMTSettings]maxGenericSorts=2
[StrategyProperty]OSS_OPTIONS_KEY=OSS_ON
[NewSMT]Axiomatisations=false
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}


\problem {
\forall int divNum;
  \forall int divDenom;
      jdiv(divNum, divDenom)
    = \if (geq(divNum, Z(0(#))))
          \then (div(divNum, divDenom))
          \else (mul(div(mul(divNum, Z(neglit(1(#)))),
                         divDenom),
                     Z(neglit(1(#)))))

}

\proof {
(keyLog "0" (keyUser "mattias" ) (keyVersion "6e9a3bc895080585635c1442cd178f3c0b6e17ca"))

(autoModeTime "236")

(branch "dummy ID"
(rule "allRight" (formula "1") (inst "sk=divNum_0"))
(rule "allRight" (formula "1") (inst "sk=divDenom_0"))
(rule "eqSymm" (formula "1"))
(rule "div_axiom" (formula "1") (term "1,0") (inst "quotient=quotient_0"))
(rule "polySimp_mulComm0" (formula "1") (term "1,1,1,1,1"))
(rule "polySimp_mulComm0" (formula "1") (term "0,1,0,1"))
(rule "polySimp_mulComm0" (formula "1") (term "0,2,1,1"))
(rule "polySimp_mulComm0" (formula "1") (term "0,1,1,1"))
(rule "polySimp_addComm1" (formula "1") (term "1,2,1,1"))
(rule "polySimp_addComm1" (formula "1") (term "1,1,1,1"))
(rule "div_axiom" (formula "2") (term "0,2,0") (inst "quotient=quotient_1"))
(rule "polySimp_mulComm0" (formula "1") (term "1,1,1,1,1"))
(rule "polySimp_mulComm0" (formula "1") (term "0,1,0,1"))
(rule "polySimp_mulComm0" (formula "1") (term "0,2,1,1"))
(rule "polySimp_mulComm0" (formula "1") (term "0,1,1,1"))
(rule "polySimp_addComm1" (formula "1") (term "1,2,1,1"))
(rule "polySimp_addComm1" (formula "1") (term "1,1,1,1"))
(rule "jdiv_axiom" (formula "3") (term "1"))
(rule "eqSymm" (formula "1"))
(rule "close" (formula "4") (ifseqformula "1"))
)
}
