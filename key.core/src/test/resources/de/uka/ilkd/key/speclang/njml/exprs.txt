1+1
1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1
\result
this
(\forall int i; i + i == 2)
(\exists int i; i%2 == 2)
(\exists int i; 0 < i < 2; i%2 == 2)
1 < 2 < 1+1+1
1+2*3
(\infinite_union int i; \nothing)
1.f < 2.f < 3.f
1.f + 2.f
1. + 2
1.f + 2.d
\seq()
\locset()
\seq_upd(\seq(), 2, true) // There were issues with true in expressions ... #3660
\seq(true)
\seq(true, true)
(\seq_def int i; 0; 10; true)
\seq_indexOf(\seq(true), true)
true == true
(\exists int i; true)
