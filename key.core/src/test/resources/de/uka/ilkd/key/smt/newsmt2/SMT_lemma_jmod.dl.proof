\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Thu Jun 02 14:29:23 CEST 2022
[NewSMT]NoTypeHierarchy=false
[Labels]UseOriginLabels=true
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[NewSMT]Presburger=false
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=assertions-assertions\\:safe , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:allow , JavaCard-JavaCard\\:off , Strings-Strings\\:on , modelFields-modelFields\\:treatAsAxiom , bigint-bigint\\:on , sequences-sequences\\:on , moreSeqRules-moreSeqRules\\:off , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , permissions-permissions\\:off , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off , floatRules-floatRules\\:strictfpOnly , javaLoopTreatment-javaLoopTreatment\\:efficient , methodExpansion-methodExpansion\\:modularOnly
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_SCOPE_INV_TACLET
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_NONE
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[Strategy]MaximumNumberOfAutomaticApplications=10000
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[Strategy]Timeout=-1
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[SMTSettings]useUninterpretedMultiplication=true
[NewSMT]sqrtSMTTranslation=SMT
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[NewSMT]identifier=OPEN
[SMTSettings]maxGenericSorts=2
[StrategyProperty]OSS_OPTIONS_KEY=OSS_ON
[NewSMT]Axiomatisations=false
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}


\problem {
\forall int divNum;
  \forall int divDenom;
      jmod(divNum, divDenom)
    = add(divNum,
          mul(mul(jdiv(divNum, divDenom),
                  Z(neglit(1(#)))),
              divDenom))

}

\proof {
(keyLog "0" (keyUser "mattias" ) (keyVersion "6e9a3bc895080585635c1442cd178f3c0b6e17ca"))

(autoModeTime "322")

(branch "dummy ID"
(rule "allRight" (formula "1") (inst "sk=divNum_0"))
(rule "allRight" (formula "1") (inst "sk=divDenom_0"))
(rule "polySimp_mulComm1" (formula "1") (term "1,1"))
(rule "polySimp_homoEq" (formula "1"))
(rule "polySimp_addComm1" (formula "1") (term "0"))
(rule "polySimp_sepNegMonomial" (formula "1"))
(rule "polySimp_mulLiterals" (formula "1") (term "0"))
(rule "polySimp_elimOne" (formula "1") (term "0"))
(rule "jdiv_axiom_inline" (formula "1") (term "0,0") (userinteraction))
(rule "jmod_axiom" (formula "1") (term "0,1,1") (userinteraction))
(rule "polySimp_mulComm0" (formula "1") (term "1,1"))
(rule "polySimp_mulComm1" (formula "1") (term "1,1,1,1"))
(rule "polySimp_rightDist" (formula "1") (term "1,1"))
(rule "polySimp_mulLiterals" (formula "1") (term "1,1,1"))
(rule "polySimp_elimOne" (formula "1") (term "1,1,1"))
(rule "polySimp_mulComm0" (formula "1") (term "0,1,1"))
(rule "polySimp_addAssoc" (formula "1") (term "1"))
(rule "polySimp_pullOutFactor1" (formula "1") (term "0,1"))
(rule "add_literals" (formula "1") (term "1,0,1"))
(rule "times_zero_1" (formula "1") (term "0,1"))
(rule "add_zero_left" (formula "1") (term "1"))
(rule "cancel_equation" (formula "1"))
(branch "Case 1"
   (rule "ifthenelse_split" (formula "1") (term "0"))
   (branch "divNum_0 >= 0 TRUE"
      (rule "eqSymm" (formula "2"))
      (rule "jdiv_axiom_inline" (formula "2") (term "0") (userinteraction))
       (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "1")))
      (rule "closeTrue" (formula "2"))
   )
   (branch "divNum_0 >= 0 FALSE"
      (rule "eqSymm" (formula "2"))
      (rule "inEqSimp_geqRight" (formula "1"))
      (rule "times_zero_1" (formula "1") (term "1,0,0"))
      (rule "add_zero_right" (formula "1") (term "0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "1"))
      (rule "mul_literals" (formula "1") (term "1"))
      (rule "jdiv_axiom_inline" (formula "2") (term "0") (userinteraction))
       (builtin "One Step Simplification" (formula "2"))
      (rule "orRight" (formula "2"))
      (rule "notRight" (formula "2"))
      (rule "eqSymm" (formula "3"))
      (rule "polySimp_homoEq" (formula "3"))
      (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
      (rule "polySimp_elimOne" (formula "3") (term "1,0"))
      (rule "polySimp_sepPosMonomial" (formula "3"))
      (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "2"))
      (rule "qeq_literals" (formula "1") (term "0"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "closeFalse" (formula "1"))
   )
)
(branch "Case 2"
   (rule "notRight" (formula "1"))
   (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "1"))
   (rule "times_zero_1" (formula "2") (term "0"))
   (rule "eqSymm" (formula "2"))
   (rule "applyEqRigid" (formula "2") (term "1,0,0") (ifseqformula "1"))
   (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "1"))
   (rule "times_zero_1" (formula "2") (term "0"))
    (builtin "One Step Simplification" (formula "2"))
   (rule "closeTrue" (formula "2"))
)
)
}
