\predicates {
    traceIndex(int);
    trace_I(int);
    trace_O(int);
    traceNext(int);
}

\schemaVariables {
    \modalOperator {diamond, box, diamond_transaction, box_transaction} #allmodal;
    \program SimpleExpression #se;
    \program Statement #s1, #s2;
    \formula post;
    \term int idx;
}

\rules(programRules:Java) {

    retraceIf {
        \assumes (trace_I(idx), traceIndex(idx) ==> )
        \find (
           \modality{#allmodal}{..
               if (#se) #s1 else #s2
           ...}\endmodality(post)
        )
        \replacewith(
            #se = TRUE -> \modality{#allmodal}{..
                #s1
            ...}\endmodality(post)
        )
        \add(traceNext(idx) ==> )
        \heuristics(retrace)
    };

    retraceIfNoElse {
        \assumes (trace_I(idx), traceIndex(idx) ==> )
        \find (
           \modality{#allmodal}{..
               if (#se) #s1
           ...}\endmodality(post)
        )
        \replacewith(
            #se = TRUE -> \modality{#allmodal}{..
                #s1
            ...}\endmodality(post)
        )
        \add(traceNext(idx) ==> )
        \heuristics(retrace)
    };

    retraceElse {
        \assumes (trace_O(idx), traceIndex(idx) ==> )
        \find (
            \modality{#allmodal}{..
                if (#se) #s1 else #s2
            ...}\endmodality(post)
        )
        \replacewith(
            #se = FALSE -> \modality{#allmodal}{..
                #s2
            ...}\endmodality(post)
        )
        \add(traceNext(idx) ==> )
        \heuristics(retrace)
    };

    retraceElseNoElse {
        \assumes (trace_O(idx), traceIndex(idx) ==> )
        \find (
           \modality{#allmodal}{..
               if (#se) #s1
           ...}\endmodality(post)
        )
        \replacewith(
            #se = FALSE -> \modality{#allmodal}{..
            ...}\endmodality(post)
        )
        \add(traceNext(idx) ==> )
        \heuristics(retrace)
    };

    traceRecordIf {
        \assumes (traceIndex(idx) ==> )
        \find(trace_I(-1))
        \replacewith(trace_I(idx))
        \add(traceNext(idx) ==> )
        \heuristics(traceIndexReplace)
    };

    traceRecordElse {
        \assumes (traceIndex(idx) ==> )
        \find(trace_O(-1))
        \replacewith(trace_O(idx))
        \add(traceNext(idx) ==> )
        \heuristics(traceIndexReplace)
    };

    deleteTraceIndex {
        \assumes (
            traceNext(idx) ==>
        )
        \find (
            traceIndex(idx) ==>
        )
        \replacewith( ==> )
        \heuristics(traceIndexDelete)
    };

    nextTraceIndex {
        \find (
            traceNext(idx) ==>
        )
        \replacewith(
            traceIndex(idx+1) ==>
        )
        \heuristics(traceIndexInc)
    };
}
