/* This file is part of KeY - https://key-project.org
 * KeY is licensed under the GNU General Public License Version 2
 * SPDX-License-Identifier: GPL-2.0-only */

/**
    Rules for checked integer semantics.

    See intRules.key for an overview of the integer files.
*/

\schemaVariables {
    \term int left, right, i, i0, i1;
    \term numbers iz, jz;
}

\rules {
    translateCheckedUnaryMinusInt {
        \find(checkedUnaryMinusInt(left))
        \replacewith(neg(left))
        \heuristics(simplify)
    };

    translateCheckedUnaryMinusLong {
        \find(checkedUnaryMinusLong(left))
        \replacewith(neg(left))
        \heuristics(simplify)
    };

    translateCheckedBitwiseNegateInt {
        \find(checkedBitwiseNegateInt(left))
        \replacewith(sub(neg(left), 1))
        \heuristics(simplify)
    };

    translateCheckedBitwiseNegateLong {
        \find(checkedBitwiseNegateLong(left))
        \replacewith(sub(neg(left), 1))
        \heuristics(simplify)
    };

    translateCheckedAddInt {
        \find(checkedAddInt(left, right))
        \replacewith(add(left, right))
        \heuristics(simplify)
    };

    translateCheckedAddLong {
        \find(checkedAddLong(left, right))
        \replacewith(add(left, right))
        \heuristics(simplify)
    };

    translateCheckedSubInt {
        \find(checkedSubInt(left, right))
        \replacewith(sub(left, right))
        \heuristics(simplify)
    };
    translateCheckedSubLong {
        \find(checkedSubLong(left, right))
        \replacewith(sub(left, right))
        \heuristics(simplify)
    };

    translateCheckedMulInt {
        \find(checkedMulInt(left, right))
        \replacewith(mul(left, right))
        \heuristics(simplify)
    };

    translateCheckedMulLong {
        \find(checkedMulLong(left, right))
        \replacewith(mul(left, right))
        \heuristics(simplify)
    };

    translateCheckedDivInt {
        \find(checkedDivInt(left, right))
        \replacewith(jdiv(left, right))
        \heuristics(simplify)
    };

    translateCheckedDivLong {
        \find(checkedDivLong(left, right))
        \replacewith(jdiv(left, right))
        \heuristics(simplify)
    };

    translateCheckedShiftRightInt {
        \find(checkedShiftRightInt(left, right))
        \replacewith(shiftright(left, right))
        \heuristics(simplify)
    };

    translateCheckedShiftRightLong {
        \find(checkedShiftRightLong(left, right))
        \replacewith(shiftright(left, right))
        \heuristics(simplify)
    };

    translateCheckedShiftLeftInt {
        \find(checkedShiftLeftInt(left, right))
        \replacewith(shiftleft(left, right))
        \heuristics(simplify)
    };

    translateCheckedShiftLeftLong {
        \find(checkedShiftLeftLong(left, right))
        \replacewith(shiftleft(left, right))
        \heuristics(simplify)
    };

    /*
    translateCheckedUnsignedShiftRightInt {
      \find(checkedUnsignedShiftRightInt(left, right))
      \replacewith(x(left, right))
      \heuristics(simplify)
    };

    translateCheckedUnsignedShiftRightLong {
      \find(checkedUnsignedShiftRightLong(left, right))
      \replacewith(x(left, right))
      \heuristics(simplify)
    };
    */

    translateCheckedBitwiseOrInt {
        \find(checkedBitwiseOrInt(left, right))
        \replacewith(binaryOr(left, right))
        \heuristics(simplify)
    };

    translateCheckedBitwiseOrLong {
        \find(checkedBitwiseOrLong(left, right))
        \replacewith(binaryOr(left, right))
        \heuristics(simplify)
    };

    translateCheckedBitwiseAndInt {
        \find(checkedBitwiseAndInt(left, right))
        \replacewith(binaryAnd(left, right))
        \heuristics(simplify)
    };

    translateCheckedBitwiseAndLong {
        \find(checkedBitwiseAndLong(left, right))
        \replacewith(binaryAnd(left, right))
        \heuristics(simplify)
    };

    translateCheckedBitwiseXOrInt {
        \find(checkedBitwiseXOrInt(left, right))
        \replacewith(binaryXOr(left, right))
        \heuristics(simplify)
    };

    translateCheckedBitwiseXOrLong {
        \find(checkedBitwiseXOrLong(left, right))
        \replacewith(binaryXOr(left, right))
        \heuristics(simplify)
    };
}
