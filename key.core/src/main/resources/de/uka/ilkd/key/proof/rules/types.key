\sorts {
  SORT;
  \generic alph;
  \generic bet;
  \generic alphSub \extends alph;
}

\functions {
  SORT anySORT;
  SORT alph::ssort;
}

\predicates {
  ssubsort(SORT, SORT);
}

\rules {
  ssubsortDirect {
    \find(ssubsort(alphSub::ssort, alph::ssort))
    \replacewith(true)
    \heuristics(simplify)
  };

  ssubsortTop {
    \schemaVar \term SORT s;
    \find(ssubsort(s, anySORT))
    \replacewith(true)
    \heuristics(simplify)
  };

  subsortTrans {
    \schemaVar \term SORT s1, s2, s3;
    \assumes (ssubsort(s1, s2), ssubsort(s2, s3) ==>)
    \add(ssubsort(s1, s3) ==>)
    \heuristics(simplify_enlarging)
  };

  ssubsortSup {
    \find(ssubsort(alph::ssort, alphSub::ssort))
    \varcond(\not \same(alphSub, alph))
    \replacewith(false)
    \heuristics(simplify)
  };
}
