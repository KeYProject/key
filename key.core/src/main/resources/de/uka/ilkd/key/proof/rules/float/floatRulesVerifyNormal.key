/* This file is part of KeY - https://key-project.org
 * KeY is licensed under the GNU General Public License Version 2
 * SPDX-License-Identifier: GPL-2.0-only */

/*

\schemaVariables {
  \term float f1, f2;
}


\rules(programRules:Java, floatRules:verifyResultsAreNormal){

  translateJavaAddFloat {
     \find(javaAddFloat(f1, f2))
     \replacewith(\if (floatIsNormal(addFloat(f1, f2)))
                  \then (addFloat(f1, f2))
                  \else (javaAddFloatForbiddenResult(f1, f2)))
     \heuristics(javaFloatSemantics)
     \displayname "translateJavaAddFP"
  };

  translateJavaSubFloat {
     \find(javaSubFloat(f1, f2))
     \replacewith(\if (floatIsNormal(subFloat(f1, f2)))
                  \then (subFloat(f1, f2))
                  \else (javaSubFloatForbiddenResult(f1, f2)))
     \heuristics(javaFloatSemantics)
     \displayname "translateJavaSubFP"
  };

  translateJavaMulFloat {
     \find(javaMulFloat(f1, f2))
     \replacewith(\if (floatIsNormal(mulFloat(f1, f2)))
                  \then (mulFloat(f1, f2))
                  \else (javaMulFloatForbiddenResult(f1, f2)))
     \heuristics(javaFloatSemantics)
     \displayname "translateJavaMulFP"
  };

  translateJavaDivFloat {
     \find(javaDivFloat(f1, f2))
     \replacewith(\if (floatIsNormal(divFloat(f1, f2)))
                  \then (divFloat(f1, f2))
                  \else (javaDivFloatForbiddenResult(f1, f2)))
     \heuristics(javaFloatSemantics)
     \displayname "translateJavaDivFP"
  };

}
*/
