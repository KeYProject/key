<entry key="empty.dl">
  \forall Object o; \forall Field f; ( elementOf(o,f,empty)&lt;&lt;Trigger&gt;&gt; &lt;-&gt; false )
</entry>

<entry key="union.dl">
  \forall Object o; \forall Field f; \forall LocSet l1; \forall LocSet l2;
     ( elementOf(o, f, union(l1, l2))&lt;&lt;Trigger&gt;&gt; &lt;-&gt; elementOf(o,f,l1) | elementOf(o,f,l2) )
</entry>

<entry key="allLocs.dl">
  \forall Object o; \forall Field f; ( elementOf(o,f,allLocs)&lt;&lt;Trigger&gt;&gt; &lt;-&gt; true )
</entry>

<entry key="freshLocs.dl">
  \forall Heap h; \forall Object o; \forall Field f;
     ( elementOf(o,f,freshLocs(h))&lt;&lt;Trigger&gt;&gt; &lt;-&gt;
        o != null &amp; !boolean::select(h,o,java.lang.Object::&lt;created&gt;)=TRUE )
</entry>

<entry key="singleton.dl">
  \forall Object o; \forall Field f; \forall Object o2; \forall Field f2;
    ( elementOf(o,f, singleton(o2,f2))&lt;&lt;Trigger&gt;&gt; &lt;-&gt;
      o = o2 &amp; f = f2 )
</entry>

<entry key="allFields.dl"><![CDATA[
  \forall Object o; \forall Field f; \forall Object o2;
    ( elementOf(o,f, allFields(o2))<<Trigger>> <->
       o = o2 )
]]></entry>

<entry key="arrayRange.dl"><![CDATA[
  \forall Object o; \forall Object o2; \forall Field f; \forall int lo; \forall int hi;
    (elementOf(o,f, arrayRange(o2, lo, hi))<<Trigger>> <->
      o = o2 & \exists int iv; (f = arr(iv) & lo <= iv & iv <= hi))
]]></entry>

