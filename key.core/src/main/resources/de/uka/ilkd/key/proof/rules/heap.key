/* This file is part of KeY - https://key-project.org
 * KeY is licensed under the GNU General Public License Version 2
 * SPDX-License-Identifier: GPL-2.0-only */

// This file contains the DECLARATIONS for heaps
// To find the RULES for heaps, please visit heapRules.key

\sorts {
    Field;
    Heap;
    \generic alphaObj \extends Object;
}

\functions {
    // select/store
    alpha alpha::select(Heap, Object, Field);
    Heap store(Heap, Object, Field, any);
    Heap create(Heap, Object);
    Heap anon(Heap, LocSet, Heap);
    Heap memset(Heap, LocSet, any);

    // default value for a field
    alpha alpha::defaultValue;

    // fields
    \unique Field arr(int);
    \unique Field java.lang.Object::<transient>;
    \unique Field java.lang.Object::<transactionConditionallyUpdated>;
    \unique Field java.lang.Object::<created>;
    \unique Field java.lang.Object::<initialized>;
    \unique Field alpha::<classPrepared>; // static
    \unique Field alpha::<classInitialized>; // static
    \unique Field alpha::<classInitializationInProgress>; // static
    \unique Field alpha::<classErroneous>; // static

    // array length
    int length(Object);

    // null
    Null null;
}

\predicates {
    wellFormed(Heap);
    arrayStoreValid(any, any);
    nonNull(Heap, Object, int);

    // can be used to formulate assignable proof obligations in JML assert statements (via \dl_ escapes)
    assignable(Heap, Heap, LocSet);
}

\programVariables {
    Heap heap, savedHeap, permissions;
}
