\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Wed Apr 12 13:14:41 CEST 2023
[NewSMT]NoTypeHierarchy=false
[Labels]UseOriginLabels=true
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[NewSMT]Presburger=false
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=JavaCard-JavaCard\\:on, Strings-Strings\\:on, assertions-assertions\\:safe, bigint-bigint\\:on, finalFields-finalFields\\:immutable, floatRules-floatRules\\:strictfpOnly, initialisation-initialisation\\:disableStaticInitialisation, intRules-intRules\\:arithmeticSemanticsIgnoringOF, integerSimplificationRules-integerSimplificationRules\\:full, javaLoopTreatment-javaLoopTreatment\\:efficient, mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off, methodExpansion-methodExpansion\\:modularOnly, modelFields-modelFields\\:treatAsAxiom, moreSeqRules-moreSeqRules\\:on, permissions-permissions\\:off, programRules-programRules\\:Java, reach-reach\\:on, runtimeExceptions-runtimeExceptions\\:ban, sequences-sequences\\:on, wdChecks-wdChecks\\:off, wdOperator-wdOperator\\:L
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_SCOPE_INV_TACLET
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_COMPLETION
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[Strategy]MaximumNumberOfAutomaticApplications=10000
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_DELAYED
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[Strategy]Timeout=-1
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[SMTSettings]useUninterpretedMultiplication=true
[NewSMT]sqrtSMTTranslation=SMT
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[NewSMT]identifier=OPEN
[SMTSettings]maxGenericSorts=2
[StrategyProperty]OSS_OPTIONS_KEY=OSS_ON
[NewSMT]Axiomatisations=false
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\proofObligation {
	"name": "bsum_equal_except_one_index",
	"class": "de.uka.ilkd.key.taclettranslation.lemma.TacletProofObligationInput",
 }

\proof {
(keyLog "0" (keyUser "Julian" ) (keyVersion "80a871ca3bac8bb405ecc216fcb6fa9ef6f8a395"))

(autoModeTime "0")

(branch "dummy ID"
(rule "impRight" (formula "1") (newnames "f_t,v_uSub1,f_index,f_t1,v_uSub2,f_t2,f_i0,f_i1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "2"))
(rule "bsum_split_in_three" (formula "5") (term "0") (inst "i1=f_index") (inst "uSub1=uSub1") (userinteraction))
(branch "Precondition"
   (rule "replace_known_left" (formula "5") (term "0") (ifseqformula "2"))
    (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "3")))
   (rule "closeTrue" (formula "5"))
)
(branch "Splitted Sum"
   (rule "bsum_split_in_three" (formula "5") (term "0,1") (inst "i1=f_index") (inst "uSub1=uSub1") (userinteraction))
   (branch "Precondition"
      (rule "replace_known_left" (formula "5") (term "0") (ifseqformula "2"))
       (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "3")))
      (rule "closeTrue" (formula "5"))
   )
   (branch "Splitted Sum"
      (rule "eqTermCut" (formula "5") (term "0,0,0,1") (inst "s=bsum{int v_uSub1;}(f_i0, f_index, f_t1(v_uSub1))") (userinteraction))
      (branch "Assume bsum{int v_uSub2;}(f_i0, f_index, f_t2(v_uSub2)) = bsum{int v_uSub1;}(f_i0, f_index, f_t1(v_uSub1))"
         (rule "eqTermCut" (formula "6") (term "1,0,1") (inst "s=bsum{int uSub1;}(add(f_index, Z(1(#))),
                 f_i1,
                 f_t1(uSub1))") (userinteraction))
         (branch "Assume bsum{int uSub1;}(f_index + 1, f_i1, f_t2(uSub1)) = bsum{int uSub1;}(f_index + 1, f_i1, f_t1(uSub1))"
            (rule "apply_subst" (formula "3") (term "0,1"))
            (rule "apply_subst" (formula "3") (term "1,1"))
            (rule "eqSymm" (formula "3"))
            (rule "polySimp_homoEq" (formula "7"))
            (rule "polySimp_elimSub" (formula "3") (term "0"))
            (rule "polySimp_homoEq" (formula "3"))
            (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
            (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
            (rule "polySimp_addComm0" (formula "1") (term "0,0"))
            (rule "eqSymm" (formula "1"))
            (rule "polySimp_addComm0" (formula "7") (term "0,1,0,0,0"))
            (rule "polySimp_addComm0" (formula "7") (term "0,0,0,0"))
            (rule "polySimp_addComm0" (formula "7") (term "0,1,1,1,0"))
            (rule "polySimp_addComm0" (formula "7") (term "0,1,1,0"))
            (rule "polySimp_addComm0" (formula "1") (term "0,0"))
            (rule "eqSymm" (formula "1"))
            (rule "polySimp_addComm1" (formula "7") (term "0,0"))
            (rule "polySimp_addComm1" (formula "7") (term "1,1,0"))
            (rule "polySimp_addComm1" (formula "7") (term "0,0,0"))
            (rule "polySimp_rightDist" (formula "3") (term "1,0"))
            (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0"))
            (rule "polySimp_elimOne" (formula "3") (term "1,1,0"))
            (rule "polySimp_mulComm0" (formula "3") (term "0,1,0"))
            (rule "polySimp_addComm1" (formula "7") (term "0,0"))
            (rule "polySimp_addComm0" (formula "7") (term "0,0,0,0"))
            (rule "polySimp_rightDist" (formula "7") (term "1,0"))
            (rule "polySimp_rightDist" (formula "7") (term "0,1,0"))
            (rule "polySimp_mulComm0" (formula "7") (term "0,0,1,0"))
            (rule "polySimp_addComm1" (formula "7") (term "0"))
            (rule "polySimp_addAssoc" (formula "3") (term "0"))
            (rule "bsum_induction_lower2_concrete" (formula "1") (term "1"))
            (rule "replace_known_left" (formula "1") (term "0,1,1") (ifseqformula "5"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "polySimp_elimSub" (formula "1") (term "1"))
            (rule "polySimp_addComm0" (formula "1") (term "1"))
            (rule "inEqSimp_ltToLeq" (formula "5"))
            (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
            (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
            (rule "polySimp_addComm1" (formula "7") (term "0,0,0"))
            (rule "polySimp_addAssoc" (formula "7") (term "0,0,0,0"))
            (rule "polySimp_addComm1" (formula "7") (term "0,0,0,0,0"))
            (rule "bsum_induction_lower2_concrete" (formula "1") (term "0"))
            (rule "polySimp_elimSub" (formula "1") (term "0"))
            (rule "polySimp_homoEq" (formula "1"))
            (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
            (rule "polySimp_addComm0" (formula "1") (term "1,1,0"))
            (rule "polySimp_rightDist" (formula "1") (term "1,0"))
            (rule "polySimp_mulAssoc" (formula "1") (term "0,1,0"))
            (rule "polySimp_mulComm0" (formula "1") (term "0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0"))
            (rule "polySimp_elimOne" (formula "1") (term "0,1,0"))
            (rule "bsum_induction_lower2_concrete" (formula "7") (term "1,0,0,0"))
            (rule "polySimp_elimSub" (formula "7") (term "1,0,0,0"))
            (rule "polySimp_addComm1" (formula "7") (term "0,0,0"))
            (rule "polySimp_addComm0" (formula "7") (term "1,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "1") (term "0"))
            (rule "polySimp_addComm1" (formula "1") (term "0,0"))
            (rule "polySimp_addAssoc" (formula "7") (term "0,0,0,0"))
            (rule "bsum_induction_lower2_concrete" (formula "7") (term "0,1,0,0,0"))
            (rule "polySimp_elimSub" (formula "7") (term "0,1,0,0,0"))
            (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0"))
            (rule "polySimp_addComm0" (formula "7") (term "1,1,0,0,0"))
            (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0"))
            (rule "polySimp_mulAssoc" (formula "7") (term "0,1,0,0,0"))
            (rule "polySimp_mulComm0" (formula "7") (term "0,0,1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "7") (term "0,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "7") (term "0,1,0,0,0"))
            (rule "polySimp_addComm1" (formula "7") (term "0,0,0"))
            (rule "polySimp_addAssoc" (formula "7") (term "0,0,0,0"))
            (rule "polySimp_addComm1" (formula "7") (term "0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "1") (term "0,1,0,0,0"))
            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,1,0,0,0"))
            (rule "replace_known_left" (formula "1") (term "0,1,0,0,0") (ifseqformula "5"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "inEqSimp_ltToLeq" (formula "7") (term "0,0,1,0,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0,1,0,0,0,0,0"))
            (rule "replace_known_left" (formula "7") (term "0,0,1,0,0,0,0,0") (ifseqformula "5"))
             (builtin "One Step Simplification" (formula "7"))
            (rule "polySimp_addComm1" (formula "7") (term "0,0,0,0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,0,0,0,0"))
            (rule "add_literals" (formula "7") (term "1,1,0,0,0,0,0,0"))
            (rule "times_zero_1" (formula "7") (term "1,0,0,0,0,0,0"))
            (rule "add_zero_right" (formula "7") (term "0,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "7") (term "0,1,0,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,1,0,0,0,0,0"))
            (rule "replace_known_left" (formula "7") (term "0,1,0,0,0,0,0") (ifseqformula "5"))
             (builtin "One Step Simplification" (formula "7"))
            (rule "polySimp_pullOutFactor2b" (formula "7") (term "0,0,0,0,0"))
            (rule "add_literals" (formula "7") (term "1,1,0,0,0,0,0"))
            (rule "times_zero_1" (formula "7") (term "1,0,0,0,0,0"))
            (rule "add_zero_right" (formula "7") (term "0,0,0,0,0"))
            (rule "applyEq" (formula "7") (term "1,0") (ifseqformula "2"))
            (rule "polySimp_pullOutFactor2b" (formula "7") (term "0"))
            (rule "add_literals" (formula "7") (term "1,1,0"))
            (rule "times_zero_1" (formula "7") (term "1,0"))
            (rule "add_zero_right" (formula "7") (term "0"))
            (rule "polySimp_sepPosMonomial" (formula "3"))
            (rule "polySimp_mulComm0" (formula "3") (term "1"))
            (rule "polySimp_rightDist" (formula "3") (term "1"))
            (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
            (rule "polySimp_elimOne" (formula "3") (term "1,1"))
            (rule "polySimp_mulComm0" (formula "3") (term "0,1"))
            (rule "applyEqRigid" (formula "1") (term "1,0,0,0") (ifseqformula "3"))
            (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
            (rule "polySimp_addComm0" (formula "1") (term "0,0,0,0"))
            (rule "polySimp_pullOutFactor2b" (formula "1") (term "0,0,0"))
            (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
            (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
            (rule "add_zero_right" (formula "1") (term "0,0,0"))
            (rule "polySimp_sepPosMonomial" (formula "7"))
            (rule "polySimp_mulComm0" (formula "7") (term "1"))
            (rule "polySimp_rightDist" (formula "7") (term "1"))
            (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
            (rule "polySimp_elimOne" (formula "7") (term "1,1"))
            (rule "polySimp_mulComm0" (formula "7") (term "0,1"))
            (rule "polySimp_sepNegMonomial" (formula "1"))
            (rule "polySimp_mulLiterals" (formula "1") (term "0"))
            (rule "polySimp_elimOne" (formula "1") (term "0"))
            (rule "close" (formula "7") (ifseqformula "1"))
         )
         (branch "Assume bsum{int uSub1;}(f_index + 1, f_i1, f_t2(uSub1)) != bsum{int uSub1;}(f_index + 1, f_i1, f_t1(uSub1))"
            (rule "notLeft" (formula "1") (userinteraction))
            (rule "equal_bsum1" (formula "6") (userinteraction))
            (rule "apply_subst" (formula "5") (term "1,1,0"))
            (rule "allRight" (formula "6") (inst "sk=uSub1_0"))
            (rule "impRight" (formula "6"))
            (rule "andLeft" (formula "1"))
            (rule "eqSymm" (formula "7") (term "1,0"))
            (rule "polySimp_addComm0" (formula "1") (term "1"))
            (rule "inEqSimp_ltToLeq" (formula "7") (term "1,0,0,0"))
            (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "2"))
            (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "5"))
            (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,0,0"))
            (rule "polySimp_mulComm0" (formula "7") (term "1,1,0,0,0"))
            (rule "polySimp_rightDist" (formula "7") (term "1,1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "7") (term "1,1,1,0,0,0"))
            (rule "mul_literals" (formula "7") (term "0,1,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "7") (term "1,1,1,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "2"))
            (rule "polySimp_mulComm0" (formula "2") (term "1"))
            (rule "polySimp_rightDist" (formula "2") (term "1"))
            (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
            (rule "mul_literals" (formula "2") (term "0,1"))
            (rule "polySimp_elimOne" (formula "2") (term "1,1"))
            (rule "nnf_imp2or" (formula "7") (term "0"))
            (rule "nnf_notAnd" (formula "7") (term "0,0"))
             (builtin "One Step Simplification" (formula "7"))
            (rule "nnf_notAnd" (formula "7") (term "0,0,0"))
            (rule "inEqSimp_notGeq" (formula "7") (term "0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0"))
            (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0,0"))
            (rule "mul_literals" (formula "7") (term "0,1,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0,0,0"))
            (rule "polySimp_elimOne" (formula "7") (term "1,1,0,0,0,0"))
            (rule "inEqSimp_notLeq" (formula "7") (term "1,0,0,0"))
            (rule "polySimp_rightDist" (formula "7") (term "1,0,0,1,0,0,0"))
            (rule "mul_literals" (formula "7") (term "0,1,0,0,1,0,0,0"))
            (rule "polySimp_addAssoc" (formula "7") (term "0,0,1,0,0,0"))
            (rule "add_literals" (formula "7") (term "0,0,0,1,0,0,0"))
            (rule "add_zero_left" (formula "7") (term "0,0,1,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "7") (term "1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "7") (term "1,1,0,0,0"))
            (rule "allLeft" (formula "7") (inst "t=uSub1_0"))
            (rule "replace_known_right" (formula "7") (term "1") (ifseqformula "9"))
             (builtin "One Step Simplification" (formula "7"))
            (rule "inEqSimp_contradEq7" (formula "7") (term "1") (ifseqformula "1"))
            (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1"))
            (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,1"))
            (rule "add_literals" (formula "7") (term "1,1,0,0,1"))
            (rule "times_zero_1" (formula "7") (term "1,0,0,1"))
            (rule "add_zero_right" (formula "7") (term "0,0,1"))
            (rule "leq_literals" (formula "7") (term "0,1"))
             (builtin "One Step Simplification" (formula "7"))
            (rule "inEqSimp_contradInEq0" (formula "7") (term "1") (ifseqformula "2"))
            (rule "inEqSimp_homoInEq1" (formula "7") (term "0,1"))
            (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1"))
            (rule "polySimp_rightDist" (formula "7") (term "1,0,0,1"))
            (rule "mul_literals" (formula "7") (term "0,1,0,0,1"))
            (rule "polySimp_addAssoc" (formula "7") (term "0,0,1"))
            (rule "polySimp_addComm0" (formula "7") (term "0,0,0,1"))
            (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,1"))
            (rule "add_literals" (formula "7") (term "1,1,0,0,1"))
            (rule "times_zero_1" (formula "7") (term "1,0,0,1"))
            (rule "add_zero_right" (formula "7") (term "0,0,1"))
            (rule "leq_literals" (formula "7") (term "0,1"))
             (builtin "One Step Simplification" (formula "7"))
            (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "7"))
            (rule "polySimp_rightDist" (formula "1") (term "0,0"))
            (rule "mul_literals" (formula "1") (term "0,0,0"))
            (rule "polySimp_addComm1" (formula "1") (term "0"))
            (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
            (rule "add_literals" (formula "1") (term "0,0,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "1"))
            (rule "polySimp_mulLiterals" (formula "1") (term "0"))
            (rule "polySimp_elimOne" (formula "1") (term "0"))
            (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "6"))
            (rule "andLeft" (formula "1"))
            (rule "inEqSimp_homoInEq1" (formula "1"))
            (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
            (rule "polySimp_rightDist" (formula "1") (term "1,0"))
            (rule "mul_literals" (formula "1") (term "0,1,0"))
            (rule "polySimp_addAssoc" (formula "1") (term "0"))
            (rule "polySimp_addComm0" (formula "1") (term "0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
            (rule "add_literals" (formula "1") (term "1,1,0"))
            (rule "times_zero_1" (formula "1") (term "1,0"))
            (rule "add_zero_right" (formula "1") (term "0"))
            (rule "leq_literals" (formula "1"))
            (rule "closeFalse" (formula "1"))
         )
      )
      (branch "Assume bsum{int v_uSub2;}(f_i0, f_index, f_t2(v_uSub2)) != bsum{int v_uSub1;}(f_i0, f_index, f_t1(v_uSub1))"
         (rule "notLeft" (formula "1") (userinteraction))
         (rule "equal_bsum1" (formula "5") (userinteraction))
         (rule "apply_subst" (formula "4") (term "1,1,0"))
         (rule "allRight" (formula "5") (inst "sk=v_uSub2_0"))
         (rule "impRight" (formula "5"))
         (rule "andLeft" (formula "1"))
         (rule "eqSymm" (formula "6") (term "1,0"))
         (rule "inEqSimp_ltToLeq" (formula "6") (term "1,0,0,0"))
         (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1,0,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "5"))
         (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "2"))
         (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "1,0,0,0"))
         (rule "polySimp_mulComm0" (formula "6") (term "1,1,0,0,0"))
         (rule "polySimp_rightDist" (formula "6") (term "1,1,0,0,0"))
         (rule "mul_literals" (formula "6") (term "0,1,1,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "6") (term "1,1,1,0,0,0"))
         (rule "polySimp_elimOne" (formula "6") (term "1,1,1,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "5"))
         (rule "polySimp_mulComm0" (formula "5") (term "1"))
         (rule "polySimp_rightDist" (formula "5") (term "1"))
         (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
         (rule "mul_literals" (formula "5") (term "0,1"))
         (rule "polySimp_elimOne" (formula "5") (term "1,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "2"))
         (rule "polySimp_mulComm0" (formula "2") (term "1"))
         (rule "polySimp_rightDist" (formula "2") (term "1"))
         (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
         (rule "mul_literals" (formula "2") (term "0,1"))
         (rule "polySimp_elimOne" (formula "2") (term "1,1"))
         (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
         (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
         (rule "polySimp_addAssoc" (formula "1") (term "0"))
         (rule "polySimp_addComm0" (formula "1") (term "0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "1"))
         (rule "polySimp_mulComm0" (formula "1") (term "1"))
         (rule "polySimp_rightDist" (formula "1") (term "1"))
         (rule "mul_literals" (formula "1") (term "0,1"))
         (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
         (rule "polySimp_elimOne" (formula "1") (term "1,1"))
         (rule "nnf_imp2or" (formula "7") (term "0"))
         (rule "nnf_notAnd" (formula "7") (term "0,0"))
          (builtin "One Step Simplification" (formula "7"))
         (rule "nnf_notAnd" (formula "7") (term "0,0,0"))
         (rule "inEqSimp_notLeq" (formula "7") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "7") (term "1,0,0,1,0,0,0"))
         (rule "mul_literals" (formula "7") (term "0,1,0,0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "7") (term "0,0,1,0,0,0"))
         (rule "add_literals" (formula "7") (term "0,0,0,1,0,0,0"))
         (rule "add_zero_left" (formula "7") (term "0,0,1,0,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "7") (term "1,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0,0"))
         (rule "polySimp_elimOne" (formula "7") (term "1,1,0,0,0"))
         (rule "inEqSimp_notGeq" (formula "7") (term "0,0,0,0"))
         (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0,0,0"))
         (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0"))
         (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0,0"))
         (rule "mul_literals" (formula "7") (term "0,1,0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0,0,0"))
         (rule "polySimp_elimOne" (formula "7") (term "1,1,0,0,0,0"))
         (rule "bsum_equal_split3" (formula "9"))
          (builtin "One Step Simplification" (formula "9"))
         (rule "bsum_lower_equals_upper" (formula "9") (term "1,2,1"))
         (rule "bsum_lower_equals_upper" (formula "9") (term "0,1,1"))
         (rule "eqSymm" (formula "9") (term "1,1"))
         (rule "polySimp_elimSub" (formula "9") (term "2,0,2,1"))
         (rule "polySimp_elimSub" (formula "9") (term "2,0,1,1"))
         (rule "polySimp_addComm0" (formula "9") (term "2,0,2,1"))
         (rule "inEqSimp_ltToLeq" (formula "9") (term "0,1"))
         (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,1"))
         (rule "polySimp_pullOutFactor2b" (formula "9") (term "0,0,1"))
         (rule "add_literals" (formula "9") (term "1,1,0,0,1"))
         (rule "times_zero_1" (formula "9") (term "1,0,0,1"))
         (rule "add_zero_right" (formula "9") (term "0,0,1"))
         (rule "leq_literals" (formula "9") (term "0,1"))
          (builtin "One Step Simplification" (formula "9"))
         (rule "inEqSimp_commuteLeq" (formula "9") (term "0"))
         (rule "inEqSimp_subsumption1" (formula "9") (term "0") (ifseqformula "1"))
         (rule "inEqSimp_homoInEq0" (formula "9") (term "0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,0"))
         (rule "add_literals" (formula "9") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "9") (term "1,0,0,0"))
         (rule "add_zero_right" (formula "9") (term "0,0,0"))
         (rule "qeq_literals" (formula "9") (term "0,0"))
          (builtin "One Step Simplification" (formula "9"))
         (rule "bsum_zero_right" (formula "9"))
         (rule "allRight" (formula "9") (inst "sk=v_uSub2_1"))
         (rule "impRight" (formula "9"))
         (rule "andLeft" (formula "1"))
         (rule "inEqSimp_ltToLeq" (formula "2"))
         (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
         (rule "polySimp_sepPosMonomial" (formula "11"))
         (rule "polySimp_mulLiterals" (formula "11") (term "1"))
         (rule "polySimp_elimOne" (formula "11") (term "1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "2"))
         (rule "polySimp_mulComm0" (formula "2") (term "1"))
         (rule "polySimp_rightDist" (formula "2") (term "1"))
         (rule "mul_literals" (formula "2") (term "0,1"))
         (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
         (rule "polySimp_elimOne" (formula "2") (term "1,1"))
         (rule "allLeft" (formula "9") (inst "t=v_uSub2_1"))
         (rule "replace_known_right" (formula "9") (term "1") (ifseqformula "12"))
          (builtin "One Step Simplification" (formula "9"))
         (rule "inEqSimp_contradEq3" (formula "9") (term "1") (ifseqformula "2"))
         (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1"))
         (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,1"))
         (rule "add_literals" (formula "9") (term "1,1,0,0,1"))
         (rule "times_zero_1" (formula "9") (term "1,0,0,1"))
         (rule "add_zero_right" (formula "9") (term "0,0,1"))
         (rule "qeq_literals" (formula "9") (term "0,1"))
          (builtin "One Step Simplification" (formula "9"))
         (rule "inEqSimp_contradInEq1" (formula "9") (term "0") (ifseqformula "1"))
         (rule "inEqSimp_homoInEq1" (formula "9") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0"))
         (rule "mul_literals" (formula "9") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "9") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "9") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,0"))
         (rule "add_literals" (formula "9") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "9") (term "1,0,0,0"))
         (rule "add_zero_right" (formula "9") (term "0,0,0"))
         (rule "leq_literals" (formula "9") (term "0,0"))
          (builtin "One Step Simplification" (formula "9"))
         (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "2"))
         (rule "polySimp_mulComm0" (formula "9") (term "0,0"))
         (rule "polySimp_addAssoc" (formula "9") (term "0"))
         (rule "polySimp_addComm0" (formula "9") (term "0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "9"))
         (rule "polySimp_mulComm0" (formula "9") (term "1"))
         (rule "polySimp_rightDist" (formula "9") (term "1"))
         (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
         (rule "mul_literals" (formula "9") (term "0,1"))
         (rule "polySimp_elimOne" (formula "9") (term "1,1"))
         (rule "inEqSimp_contradInEq1" (formula "8") (ifseqformula "9"))
         (rule "andLeft" (formula "8"))
         (rule "inEqSimp_homoInEq1" (formula "8"))
         (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
         (rule "polySimp_rightDist" (formula "8") (term "1,0"))
         (rule "mul_literals" (formula "8") (term "0,1,0"))
         (rule "polySimp_addAssoc" (formula "8") (term "0"))
         (rule "polySimp_addComm1" (formula "8") (term "0,0"))
         (rule "add_literals" (formula "8") (term "0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "8") (term "0"))
         (rule "add_literals" (formula "8") (term "1,1,0"))
         (rule "times_zero_1" (formula "8") (term "1,0"))
         (rule "add_zero_right" (formula "8") (term "0"))
         (rule "leq_literals" (formula "8"))
         (rule "closeFalse" (formula "8"))
      )
   )
)
)
}
