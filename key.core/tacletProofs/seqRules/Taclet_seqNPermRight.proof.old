\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Fri Feb 13 11:41:30 CET 2015
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]useUninterpretedMultiplication=true
[SMTSettings]SelectedTaclets=
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_NONE
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_RESTRICTED
[Strategy]Timeout=-1
[Strategy]MaximumNumberOfAutomaticApplications=10000
[SMTSettings]integersMaximum=2147483645
[Choice]DefaultChoices=assertions-assertions\\:on , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:allow , JavaCard-JavaCard\\:on , Strings-Strings\\:on , modelFields-modelFields\\:treatAsAxiom , bigint-bigint\\:on , sequences-sequences\\:on , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off , moreSeqRules-moreSeqRules\\:on , permissions-permissions\\:off
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_OFF
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]maxGenericSorts=2
[SMTSettings]integersMinimum=-2147483645
[SMTSettings]invariantForall=false
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
"
}

\proofObligation "#Proof Obligation Settings
#Fri Feb 13 11:41:30 CET 2015
name=seqNPermRight
class=de.uka.ilkd.key.taclettranslation.lemma.TacletProofObligationInput
";

\proof {
(keyLog "0" (keyUser "Stijn" ) (keyVersion "5570769721c52ee00aff0bbfe18f32d3baba33db"))
(keyLog "1" (keyUser "Stijn" ) (keyVersion "5570769721c52ee00aff0bbfe18f32d3baba33db"))
(keyLog "2" (keyUser "Stijn" ) (keyVersion "5570769721c52ee00aff0bbfe18f32d3baba33db"))
(keyLog "3" (keyUser "Stijn" ) (keyVersion "5570769721c52ee00aff0bbfe18f32d3baba33db"))
(keyLog "4" (keyUser "daniel" ) (keyVersion "7b6a4d606b29c3810d7091c61ced95b1eb3cd625"))
(keyLog "5" (keyUser "daniel" ) (keyVersion "7b6a4d606b29c3810d7091c61ced95b1eb3cd625"))
(keyLog "6" (keyUser "pschmitt" ) (keyVersion "8c870da2782f2b909a42501ec825fba16b9cb3ad"))

(autoModeTime "148512")

(branch "dummy ID"
(rule "impRight" (formula "1") (newnames "v_iv,v_jv,f_s") (userinteraction))
(rule "andLeft" (formula "1") (userinteraction))
(rule "andLeft" (formula "1") (userinteraction))
(rule "seqNPermDefReplace" (formula "4") (inst "iv=iv") (inst "jv=jv") (userinteraction))
(rule "cut" (inst "cutFormula=\\forall int N;
  \\forall Seq s;
    (   seqLen(s) = N
     ->   \\forall int v_iv;
            \\forall int v_jv;
              (     leq(Z(0(#)), v_iv)
                  & lt(v_iv, v_jv)
                  & lt(v_jv, seqLen(s))
               -> !  int::seqGet(s, v_iv)
                   = int::seqGet(s, v_jv))
        & \\forall int v_iv;
            (     leq(Z(0(#)), v_iv)
                & lt(v_iv, seqLen(s))
             ->   leq(Z(0(#)), int::seqGet(s, v_iv))
                & lt(int::seqGet(s, v_iv), seqLen(s)))
        & \\forall int v_iv;
            (     leq(Z(0(#)), v_iv)
                & lt(v_iv, seqLen(s))
             ->   int::instance(any::seqGet(s, v_iv))
                = TRUE)
     -> \\forall int iv;
          (   leq(Z(0(#)), iv) & lt(iv, seqLen(s))
           -> \\exists int jv;
                (  leq(Z(0(#)), jv)
                 & lt(jv, seqLen(s))
                 & int::seqGet(s, jv) = iv)))") (userinteraction))
(branch "CUT: forall int N; forall Seq s; ( s.length = N -> forall int v_iv; forall int v_jv; ( 0 <= v_iv & v_iv < v_jv & v_jv < s.length -> !(int)s[v_iv] = (int)s[v_jv]) & forall int v_iv; ( 0 <= v_iv & v_iv < s.length -> 0 <= (int)s[v_iv] & (int)s[v_iv] < s.length) & forall int v_iv; ( 0 <= v_iv & v_iv < s.length -> int::instance(s[v_iv]) = TRUE) -> forall int iv; ( 0 <= iv & iv < s.length -> exists int jv; ( 0 <= jv & jv < s.length & (int)s[jv] = iv))) TRUE"
   (rule "allLeftHide" (formula "1") (inst "t=seqLen(f_s)") (userinteraction))
   (rule "allLeftHide" (formula "1") (inst "t=f_s") (userinteraction))
   (rule "impLeft" (formula "1") (userinteraction))
   (branch "Case 1"
      (rule "eqClose" (formula "4"))
      (rule "closeTrue" (formula "4"))
   )
   (branch "Case 2"
      (rule "impLeft" (formula "1") (userinteraction))
      (branch "Case 1"
         (rule "allRight" (formula "5") (inst "sk=iv_0"))
         (rule "impRight" (formula "5"))
         (rule "andLeft" (formula "1"))
         (rule "eqSymm" (formula "6") (term "0,1,0,0,0,0"))
         (rule "eqSymm" (formula "3") (term "1,0,0"))
         (rule "eqSymm" (formula "3") (term "1,0,0,0"))
         (rule "replace_known_left" (formula "6") (term "1") (ifseqformula "5"))
         (rule "concrete_and_3" (formula "6"))
         (rule "replace_known_left" (formula "6") (term "1") (ifseqformula "4"))
         (rule "concrete_and_3" (formula "6"))
         (rule "allRight" (formula "6") (inst "sk=v_iv_0"))
         (rule "allRight" (formula "6") (inst "sk=v_jv_0"))
         (rule "impRight" (formula "6"))
         (rule "notRight" (formula "7"))
         (rule "andLeft" (formula "2"))
         (rule "andLeft" (formula "2"))
         (rule "inEqSimp_ltToLeq" (formula "7") (term "1,0,0,0,0"))
         (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "7") (term "1,0,0,0,0,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "8") (term "1,1,0"))
         (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0,0,0,0,0"))
         (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "6"))
         (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
         (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "4"))
         (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "3"))
         (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "7") (term "0,0,0,0,0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "8") (term "0,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "7") (term "1,0,0,0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "5"))
         (rule "polySimp_addComm1" (formula "6") (term "0"))
         (rule "polySimp_addComm1" (formula "4") (term "0"))
         (rule "polySimp_addComm1" (formula "3") (term "0"))
         (rule "inEqSimp_commuteLeq" (formula "2"))
         (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,0,0,0"))
         (rule "polySimp_mulComm0" (formula "7") (term "1,1,0,0,0,0"))
         (rule "polySimp_rightDist" (formula "7") (term "1,1,0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "7") (term "1,1,1,0,0,0,0"))
         (rule "mul_literals" (formula "7") (term "0,1,1,0,0,0,0"))
         (rule "polySimp_elimOne" (formula "7") (term "1,1,1,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0"))
         (rule "mul_literals" (formula "9") (term "0,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "8") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "8") (term "1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,0,0"))
         (rule "mul_literals" (formula "8") (term "0,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "8") (term "1,1,1,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,0,0,0,0,0"))
         (rule "polySimp_mulComm0" (formula "7") (term "1,1,0,0,0,0,0,0"))
         (rule "polySimp_rightDist" (formula "7") (term "1,1,0,0,0,0,0,0"))
         (rule "mul_literals" (formula "7") (term "0,1,1,0,0,0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "7") (term "1,1,1,0,0,0,0,0,0"))
         (rule "polySimp_elimOne" (formula "7") (term "1,1,1,0,0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,1,0"))
         (rule "polySimp_mulComm0" (formula "8") (term "1,1,1,0"))
         (rule "polySimp_rightDist" (formula "8") (term "1,1,1,0"))
         (rule "mul_literals" (formula "8") (term "0,1,1,1,0"))
         (rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,1,0"))
         (rule "polySimp_elimOne" (formula "8") (term "1,1,1,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
         (rule "mul_literals" (formula "10") (term "0,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "6"))
         (rule "polySimp_mulLiterals" (formula "6") (term "0"))
         (rule "polySimp_elimOne" (formula "6") (term "0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "4"))
         (rule "polySimp_mulLiterals" (formula "4") (term "0"))
         (rule "polySimp_elimOne" (formula "4") (term "0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "3"))
         (rule "polySimp_mulLiterals" (formula "3") (term "0"))
         (rule "polySimp_elimOne" (formula "3") (term "0"))
         (rule "nnf_ex2all" (formula "10"))
         (rule "nnf_imp2or" (formula "10") (term "0"))
         (rule "nnf_imp2or" (formula "9") (term "0"))
         (rule "nnf_imp2or" (formula "8") (term "0,0"))
         (rule "nnf_notAnd" (formula "1") (term "0"))
         (rule "nnf_notAnd" (formula "10") (term "0,0"))
         (rule "inEqSimp_notLeq" (formula "10") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "10") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "10") (term "0,0,0,1,0,0"))
         (rule "add_zero_left" (formula "10") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0"))
         (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0"))
         (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0"))
         (rule "inEqSimp_notGeq" (formula "10") (term "0,0,0"))
         (rule "times_zero_1" (formula "10") (term "1,0,0,0,0,0"))
         (rule "add_zero_right" (formula "10") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0"))
         (rule "mul_literals" (formula "10") (term "1,0,0,0"))
         (rule "nnf_notAnd" (formula "9") (term "0,0"))
         (rule "inEqSimp_notGeq" (formula "9") (term "0,0,0"))
         (rule "mul_literals" (formula "9") (term "1,0,0,0,0,0"))
         (rule "add_literals" (formula "9") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0"))
         (rule "mul_literals" (formula "9") (term "1,0,0,0"))
         (rule "inEqSimp_notLeq" (formula "9") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "9") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "9") (term "0,0,0,1,0,0"))
         (rule "add_zero_left" (formula "9") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0"))
         (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0"))
         (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0"))
         (rule "nnf_notAnd" (formula "1") (term "0,0"))
         (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
         (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
         (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
         (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
         (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
         (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
         (rule "add_literals" (formula "1") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
         (rule "mul_literals" (formula "1") (term "1,0,0,0"))
         (rule "nnf_notAnd" (formula "8") (term "0,0,0"))
         (rule "nnf_notAnd" (formula "8") (term "0,0,0,0"))
         (rule "inEqSimp_notLeq" (formula "8") (term "1,0,0,0,0"))
         (rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,0,0,0,0"))
         (rule "mul_literals" (formula "8") (term "0,1,0,0,1,0,0,0,0"))
         (rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0,0,0,0"))
         (rule "add_literals" (formula "8") (term "0,0,0,1,0,0,0,0"))
         (rule "add_zero_left" (formula "8") (term "0,0,1,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "1,0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,0,0"))
         (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0,0,0"))
         (rule "nnf_notAnd" (formula "8") (term "0,0,0,0,0"))
         (rule "inEqSimp_notGeq" (formula "8") (term "1,0,0,0,0,0"))
         (rule "times_zero_1" (formula "8") (term "1,0,0,1,0,0,0,0,0"))
         (rule "add_zero_right" (formula "8") (term "0,0,1,0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0,0,0,0"))
         (rule "mul_literals" (formula "8") (term "1,1,0,0,0,0,0"))
         (rule "nnf_notAnd" (formula "8") (term "0,0,0,0,0,0"))
         (rule "inEqSimp_notLeq" (formula "8") (term "1,0,0,0,0,0,0"))
         (rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,0,0,0,0,0,0"))
         (rule "mul_literals" (formula "8") (term "0,1,0,0,1,0,0,0,0,0,0"))
         (rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0,0,0,0,0,0"))
         (rule "add_literals" (formula "8") (term "0,0,0,1,0,0,0,0,0,0"))
         (rule "add_zero_left" (formula "8") (term "0,0,1,0,0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "1,0,0,0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,0,0,0,0"))
         (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0,0,0,0,0"))
         (rule "inEqSimp_notGeq" (formula "8") (term "0,0,0,0,0,0,0"))
         (rule "times_zero_1" (formula "8") (term "1,0,0,0,0,0,0,0,0,0"))
         (rule "add_zero_right" (formula "8") (term "0,0,0,0,0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0,0,0,0,0"))
         (rule "mul_literals" (formula "8") (term "1,0,0,0,0,0,0,0"))
         (rule "cnf_rightDist" (formula "9") (term "0"))
         (rule "distr_forallAnd" (formula "9"))
         (rule "andLeft" (formula "9"))
         (rule "commute_or" (formula "10") (term "0"))
         (rule "commute_or_2" (formula "8") (term "0,0"))
         (rule "lenNonNegative" (formula "7") (term "0"))
         (rule "inEqSimp_commuteLeq" (formula "7"))
         (rule "allLeft" (formula "10") (inst "t=v_jv_0"))
         (rule "inEqSimp_commuteGeq" (formula "10") (term "1,0"))
         (rule "applyEq" (formula "10") (term "0,1") (ifseqformula "2"))
         (rule "inEqSimp_contradInEq1" (formula "10") (term "1,0") (ifseqformula "5"))
         (rule "inEqSimp_homoInEq1" (formula "10") (term "0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,1,0"))
         (rule "add_literals" (formula "10") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "10") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "10") (term "0,0,1,0"))
         (rule "leq_literals" (formula "10") (term "0,1,0"))
         (rule "concrete_and_2" (formula "10") (term "1,0"))
         (rule "concrete_or_4" (formula "10") (term "0"))
         (rule "cut_direct" (formula "10") (term "0"))
         (branch "CUT: v_jv_0 <= -1 TRUE"
            (rule "concrete_or_1" (formula "11"))
            (rule "true_left" (formula "11"))
            (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "10"))
            (rule "polySimp_rightDist" (formula "4") (term "0,0"))
            (rule "mul_literals" (formula "4") (term "0,0,0"))
            (rule "polySimp_addComm1" (formula "4") (term "0"))
            (rule "add_literals" (formula "4") (term "0,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "4"))
            (rule "polySimp_mulLiterals" (formula "4") (term "0"))
            (rule "polySimp_elimOne" (formula "4") (term "0"))
            (rule "inEqSimp_contradInEq1" (formula "4") (ifseqformula "3"))
            (rule "qeq_literals" (formula "4") (term "0"))
            (rule "concrete_and_2" (formula "4"))
            (rule "closeFalse" (formula "4"))
         )
         (branch "CUT: v_jv_0 <= -1 FALSE"
            (rule "concrete_or_2" (formula "10"))
            (rule "inEqSimp_leqRight" (formula "14"))
            (rule "mul_literals" (formula "1") (term "1,0,0"))
            (rule "add_literals" (formula "1") (term "0,0"))
            (rule "add_zero_left" (formula "1") (term "0"))
            (rule "allLeft" (formula "13") (inst "t=v_jv_0"))
            (rule "inEqSimp_commuteGeq" (formula "13") (term "1,0"))
            (rule "applyEqRigid" (formula "13") (term "0,1") (ifseqformula "3"))
            (rule "inEqSimp_contradInEq1" (formula "13") (term "0,0") (ifseqformula "1"))
            (rule "qeq_literals" (formula "13") (term "0,0,0"))
            (rule "concrete_and_2" (formula "13") (term "0,0"))
            (rule "concrete_or_2" (formula "13") (term "0"))
            (rule "inEqSimp_contradInEq1" (formula "13") (term "0") (ifseqformula "6"))
            (rule "inEqSimp_homoInEq1" (formula "13") (term "0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0,0"))
            (rule "add_literals" (formula "13") (term "1,1,0,0,0"))
            (rule "times_zero_1" (formula "13") (term "1,0,0,0"))
            (rule "add_literals" (formula "13") (term "0,0,0"))
            (rule "leq_literals" (formula "13") (term "0,0"))
            (rule "concrete_and_2" (formula "13") (term "0"))
            (rule "concrete_or_2" (formula "13"))
            (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "13"))
            (rule "times_zero_1" (formula "11") (term "0,0"))
            (rule "add_zero_left" (formula "11") (term "0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "11"))
            (rule "mul_literals" (formula "11") (term "1"))
            (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "11"))
            (rule "leq_literals" (formula "8") (term "0"))
            (rule "concrete_or_1" (formula "8"))
            (rule "true_left" (formula "8"))
            (rule "allLeft" (formula "9") (inst "t=v_iv_0"))
            (rule "inEqSimp_commuteGeq" (formula "9") (term "1,0,0,0,0,0"))
            (rule "inEqSimp_contradInEq1" (formula "9") (term "0,0,0,0,0,0") (ifseqformula "4"))
            (rule "qeq_literals" (formula "9") (term "0,0,0,0,0,0,0"))
            (rule "concrete_and_2" (formula "9") (term "0,0,0,0,0,0"))
            (rule "concrete_or_2" (formula "9") (term "0,0,0,0,0"))
            (rule "commute_or_2" (formula "9") (term "0,0"))
            (rule "commute_or" (formula "9") (term "0,0,0,0"))
            (rule "commute_or_2" (formula "9") (term "0,0,0"))
            (rule "commute_or_2" (formula "9") (term "0,0"))
            (rule "commute_or_2" (formula "9") (term "0"))
            (rule "cut_direct" (formula "9") (term "1,0"))
            (branch "CUT: f_s.length <= v_iv_0 TRUE"
               (rule "concrete_or_3" (formula "10") (term "0"))
               (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "9"))
               (rule "mul_literals" (formula "12") (term "0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "12"))
               (rule "mul_literals" (formula "12") (term "1"))
               (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "12"))
               (rule "leq_literals" (formula "4") (term "0"))
               (rule "concrete_or_1" (formula "4"))
               (rule "true_left" (formula "4"))
               (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "8"))
               (rule "polySimp_rightDist" (formula "7") (term "0,0"))
               (rule "mul_literals" (formula "7") (term "0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "7"))
               (rule "polySimp_mulComm0" (formula "7") (term "1"))
               (rule "polySimp_rightDist" (formula "7") (term "1"))
               (rule "mul_literals" (formula "7") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
               (rule "polySimp_elimOne" (formula "7") (term "1,1"))
               (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "9"))
               (rule "polySimp_rightDist" (formula "5") (term "0,0"))
               (rule "mul_literals" (formula "5") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "5") (term "0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "5"))
               (rule "polySimp_mulLiterals" (formula "5") (term "0"))
               (rule "polySimp_elimOne" (formula "5") (term "0"))
               (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "5"))
               (rule "andLeft" (formula "4"))
               (rule "inEqSimp_homoInEq1" (formula "4"))
               (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
               (rule "polySimp_rightDist" (formula "4") (term "1,0"))
               (rule "mul_literals" (formula "4") (term "0,1,0"))
               (rule "polySimp_addAssoc" (formula "4") (term "0"))
               (rule "polySimp_addComm1" (formula "4") (term "0,0"))
               (rule "add_literals" (formula "4") (term "0,0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
               (rule "add_literals" (formula "4") (term "1,1,0"))
               (rule "times_zero_1" (formula "4") (term "1,0"))
               (rule "add_literals" (formula "4") (term "0"))
               (rule "leq_literals" (formula "4"))
               (rule "closeFalse" (formula "4"))
            )
            (branch "CUT: f_s.length <= v_iv_0 FALSE"
               (rule "concrete_or_4" (formula "9") (term "0"))
               (rule "inEqSimp_leqRight" (formula "17"))
               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "1"))
               (rule "polySimp_mulComm0" (formula "1") (term "1"))
               (rule "polySimp_rightDist" (formula "1") (term "1"))
               (rule "mul_literals" (formula "1") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
               (rule "polySimp_elimOne" (formula "1") (term "1,1"))
               (rule "allLeft" (formula "10") (inst "t=v_jv_0"))
               (rule "replace_known_left" (formula "10") (term "0,1") (ifseqformula "4"))
               (rule "concrete_not_1" (formula "10") (term "1"))
               (rule "concrete_or_4" (formula "10"))
               (rule "inEqSimp_commuteGeq" (formula "10") (term "1"))
               (rule "inEqSimp_contradEq7" (formula "10") (term "1,0") (ifseqformula "6"))
               (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0"))
               (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,1,0"))
               (rule "add_literals" (formula "10") (term "1,1,0,0,1,0"))
               (rule "times_zero_1" (formula "10") (term "1,0,0,1,0"))
               (rule "add_literals" (formula "10") (term "0,0,1,0"))
               (rule "leq_literals" (formula "10") (term "0,1,0"))
               (rule "concrete_and_2" (formula "10") (term "1,0"))
               (rule "concrete_or_4" (formula "10") (term "0"))
               (rule "inEqSimp_contradInEq1" (formula "10") (term "1") (ifseqformula "7"))
               (rule "inEqSimp_homoInEq1" (formula "10") (term "0,1"))
               (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,1"))
               (rule "add_literals" (formula "10") (term "1,1,0,0,1"))
               (rule "times_zero_1" (formula "10") (term "1,0,0,1"))
               (rule "add_zero_right" (formula "10") (term "0,0,1"))
               (rule "leq_literals" (formula "10") (term "0,1"))
               (rule "concrete_and_2" (formula "10") (term "1"))
               (rule "concrete_or_4" (formula "10"))
               (rule "inEqSimp_contradInEq1" (formula "10") (ifseqformula "2"))
               (rule "qeq_literals" (formula "10") (term "0"))
               (rule "concrete_and_2" (formula "10"))
               (rule "closeFalse" (formula "10"))
            )
         )
      )
      (branch "Case 2"
         (rule "allRight" (formula "5") (inst "sk=iv_1") (userinteraction))
         (rule "impRight" (formula "5") (userinteraction))
         (rule "allLeftHide" (formula "2") (inst "t=iv_1") (userinteraction))
         (rule "impLeft" (formula "2") (userinteraction))
         (branch "Case 1"
            (rule "close" (formula "5") (ifseqformula "1"))
         )
         (branch "Case 2"
            (rule "exLeft" (formula "2") (inst "sk=jv_0") (userinteraction))
            (rule "allLeftHide" (formula "5") (inst "t=jv_0") (userinteraction))
            (rule "exRightHide" (formula "6") (inst "t=jv_0") (userinteraction))
            (rule "impLeft" (formula "5") (userinteraction))
            (branch "Case 1"
               (rule "andLeft" (formula "2"))
               (rule "close" (formula "6") (ifseqformula "2"))
            )
            (branch "Case 2"
               (rule "castAdd" (formula "6") (term "0,1") (ifseqformula "5") (userinteraction))
               (rule "andLeft" (formula "2"))
               (rule "andLeft" (formula "1"))
               (rule "andLeft" (formula "3"))
               (rule "eqSymm" (formula "6") (term "1,0,0"))
               (rule "eqSymm" (formula "6") (term "1,0,0,0"))
               (rule "replace_known_left" (formula "9") (term "0,0") (ifseqformula "3"))
               (rule "concrete_and_1" (formula "9") (term "0"))
               (rule "replace_known_left" (formula "9") (term "0") (ifseqformula "4"))
               (rule "concrete_and_1" (formula "9"))
               (rule "inEqSimp_ltToLeq" (formula "7") (term "1,1,0"))
               (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "7") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "6") (term "1,0,0,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1,0,0,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "6") (term "1,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "2"))
               (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "4"))
               (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "2") (term "0"))
               (rule "inEqSimp_commuteLeq" (formula "7") (term "0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "6") (term "0,0,0,0,0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "7") (term "0,1,0"))
               (rule "inEqSimp_commuteLeq" (formula "6") (term "1,0,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "4") (term "0"))
               (rule "inEqSimp_commuteLeq" (formula "1"))
               (rule "inEqSimp_commuteLeq" (formula "3"))
               (rule "castedGetAny" (formula "9") (term "0"))
               (rule "close" (formula "9") (ifseqformula "5"))
            )
         )
      )
   )
)
(branch "CUT: forall int N; forall Seq s; ( s.length = N -> forall int v_iv; forall int v_jv; ( 0 <= v_iv & v_iv < v_jv & v_jv < s.length -> !(int)s[v_iv] = (int)s[v_jv]) & forall int v_iv; ( 0 <= v_iv & v_iv < s.length -> 0 <= (int)s[v_iv] & (int)s[v_iv] < s.length) & forall int v_iv; ( 0 <= v_iv & v_iv < s.length -> int::instance(s[v_iv]) = TRUE) -> forall int iv; ( 0 <= iv & iv < s.length -> exists int jv; ( 0 <= jv & jv < s.length & (int)s[jv] = iv))) FALSE"
   (rule "hide_right" (formula "5") (userinteraction))
   (rule "hide_left" (formula "2") (userinteraction))
   (rule "hide_left" (formula "2") (userinteraction))
   (rule "hide_left" (formula "1") (userinteraction))
   (rule "auto_int_induction_geqZero" (formula "1") (inst "sk=N_0") (userinteraction))
   (branch "Base Case"
      (rule "allRight" (formula "1") (inst "sk=s_0"))
      (rule "impRight" (formula "1"))
      (rule "impRight" (formula "2"))
      (rule "andLeft" (formula "1"))
      (rule "andLeft" (formula "1"))
      (rule "allRight" (formula "5") (inst "sk=iv_2"))
      (rule "impRight" (formula "5"))
      (rule "andLeft" (formula "1"))
      (rule "eqSymm" (formula "3") (term "0,1,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "5") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,1,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "3") (term "1,0,0,0,0"))
      (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1,0,0,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "4") (term "1,1,0"))
      (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,1,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "4") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,1,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "3") (term "1,0,0,0"))
      (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1,0,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "7") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "2"))
      (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
      (rule "polySimp_addComm1" (formula "3") (term "0,1,0,0,0,0"))
      (rule "polySimp_addComm1" (formula "2") (term "0"))
      (rule "inEqSimp_commuteLeq" (formula "5") (term "0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "4") (term "0,1,0"))
      (rule "inEqSimp_commuteLeq" (formula "4") (term "0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "3") (term "0,0,0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "7") (term "0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "1"))
      (rule "applyEq" (formula "2") (term "0,1,0") (ifseqformula "6"))
      (rule "times_zero_2" (formula "2") (term "1,0"))
      (rule "add_zero_right" (formula "2") (term "0"))
      (rule "applyEq" (formula "7") (term "0,1,0,0,1,0,0") (ifseqformula "6"))
      (rule "times_zero_2" (formula "7") (term "1,0,0,1,0,0"))
      (rule "add_literals" (formula "7") (term "0,0,1,0,0"))
      (rule "applyEq" (formula "4") (term "0,1,0,0,1,0,0") (ifseqformula "6"))
      (rule "times_zero_2" (formula "4") (term "1,0,0,1,0,0"))
      (rule "add_zero_right" (formula "4") (term "0,0,1,0,0"))
      (rule "applyEq" (formula "4") (term "0,1,0,0,1,1,0") (ifseqformula "6"))
      (rule "times_zero_2" (formula "4") (term "1,0,0,1,1,0"))
      (rule "add_zero_right" (formula "4") (term "0,0,1,1,0"))
      (rule "applyEq" (formula "5") (term "0,1,0,0,1,0,0") (ifseqformula "6"))
      (rule "times_zero_2" (formula "5") (term "1,0,0,1,0,0"))
      (rule "add_zero_right" (formula "5") (term "0,0,1,0,0"))
      (rule "applyEqRigid" (formula "3") (term "0,1,0,0,1,0,0,0") (ifseqformula "6"))
      (rule "times_zero_2" (formula "3") (term "1,0,0,1,0,0,0"))
      (rule "add_zero_right" (formula "3") (term "0,0,1,0,0,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "3") (term "1,0,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "3") (term "0,1,0,0,0,0"))
      (rule "polySimp_elimOne" (formula "3") (term "0,1,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "2"))
      (rule "mul_literals" (formula "2") (term "1"))
      (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,0"))
      (rule "mul_literals" (formula "7") (term "1,1,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "4") (term "1,0,0"))
      (rule "mul_literals" (formula "4") (term "1,1,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "4") (term "1,1,0"))
      (rule "mul_literals" (formula "4") (term "1,1,1,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "1,0,0"))
      (rule "mul_literals" (formula "5") (term "1,1,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "1,0,0,0"))
      (rule "mul_literals" (formula "3") (term "1,1,0,0,0"))
      (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "2"))
      (rule "qeq_literals" (formula "1") (term "0"))
      (rule "concrete_and_2" (formula "1"))
      (rule "closeFalse" (formula "1"))
   )
   (branch "Step Case (positive)"
      (rule "impRight" (formula "1") (userinteraction))
      (rule "andLeft" (formula "1") (userinteraction))
      (rule "allRight" (formula "3") (inst "sk=s_1") (userinteraction))
      (rule "impRight" (formula "3") (userinteraction))
      (rule "impRight" (formula "4") (userinteraction))
      (rule "andLeft" (formula "1") (userinteraction))
      (rule "andLeft" (formula "1") (userinteraction))
      (rule "cut" (inst "cutFormula=\\exists int j;
  (  leq(Z(0(#)), j)
   & lt(j, seqLen(s_1))
   & int::seqGet(s_1, j) = N_0)") (userinteraction))
      (branch "CUT: exists int j; (0 <= j & j < s_1.length & (int)s_1[j] = N_0) TRUE"
         (rule "exLeft" (formula "1") (inst "sk=j_0") (userinteraction))
         (rule "cut" (inst "cutFormula=\\forall int j;
  (   leq(Z(0(#)), j) & lt(j, seqLen(s_1)) & !j = j_0
   -> !int::seqGet(s_1, j) = N_0)") (userinteraction))
         (branch "CUT: forall int j; ( 0 <= j & j < s_1.length & !j = j_0 -> !(int)s_1[j] = N_0) TRUE"
            (rule "allLeftHide" (formula "8") (inst "t=seqDef{int i;}(Z(0(#)),
               N_0,
               \\if (i = j_0)
                   \\then (int::seqGet(s_1, N_0))
                   \\else (int::seqGet(s_1, i)))") (userinteraction))
            (rule "impLeft" (formula "8") (userinteraction))
            (branch "Case 1"
               (rule "andLeft" (formula "2"))
               (rule "andLeft" (formula "2"))
               (rule "allRight" (formula "11") (inst "sk=iv_5"))
               (rule "impRight" (formula "11"))
               (rule "andLeft" (formula "1"))
               (rule "eqSymm" (formula "7") (term "0,1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "7") (term "1,0,0,0"))
               (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "3") (term "1,0,0,0"))
               (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "8") (term "1,1,0"))
               (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "7") (term "1,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "5"))
               (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "2"))
               (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
               (rule "polySimp_addComm0" (formula "10") (term "1"))
               (rule "polySimp_addComm1" (formula "7") (term "0,1,0,0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "3") (term "0,0,0,0"))
               (rule "polySimp_addComm1" (formula "5") (term "0"))
               (rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "8") (term "0,1,0"))
               (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "7") (term "0,0,0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "4"))
               (rule "polySimp_addComm1" (formula "2") (term "0"))
               (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "1"))
               (rule "applyEqRigid" (formula "2") (term "0,1,0") (ifseqformula "10"))
               (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
               (rule "polySimp_rightDist" (formula "2") (term "1,0"))
               (rule "mul_literals" (formula "2") (term "0,1,0"))
               (rule "polySimp_addComm1" (formula "2") (term "0"))
               (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
               (rule "add_literals" (formula "2") (term "0,0,0"))
               (rule "add_zero_left" (formula "2") (term "0,0"))
               (rule "applyEqRigid" (formula "5") (term "0,1,0") (ifseqformula "10"))
               (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
               (rule "polySimp_rightDist" (formula "5") (term "1,0"))
               (rule "mul_literals" (formula "5") (term "0,1,0"))
               (rule "polySimp_addComm1" (formula "5") (term "0"))
               (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
               (rule "add_literals" (formula "5") (term "0,0,0"))
               (rule "add_zero_left" (formula "5") (term "0,0"))
               (rule "applyEqRigid" (formula "7") (term "0,1,0,0,1,0,0,0") (ifseqformula "10"))
               (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0,0"))
               (rule "polySimp_rightDist" (formula "7") (term "1,0,0,1,0,0,0"))
               (rule "mul_literals" (formula "7") (term "0,1,0,0,1,0,0,0"))
               (rule "polySimp_addAssoc" (formula "7") (term "0,0,1,0,0,0"))
               (rule "add_literals" (formula "7") (term "0,0,0,1,0,0,0"))
               (rule "add_zero_left" (formula "7") (term "0,0,1,0,0,0"))
               (rule "applyEqRigid" (formula "13") (term "0,1,0,0,1,0,0") (ifseqformula "10"))
               (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
               (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,0"))
               (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0"))
               (rule "add_literals" (formula "13") (term "0,0,0,1,0,0"))
               (rule "add_zero_left" (formula "13") (term "0,0,1,0,0"))
               (rule "applyEqRigid" (formula "9") (term "0,1,0,0,1,0,0") (ifseqformula "10"))
               (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
               (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0,0"))
               (rule "mul_literals" (formula "9") (term "0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0,0"))
               (rule "add_literals" (formula "9") (term "0,0,0,1,0,0"))
               (rule "add_zero_left" (formula "9") (term "0,0,1,0,0"))
               (rule "applyEq" (formula "8") (term "0,1,0,0,1,1,0") (ifseqformula "10"))
               (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,1,0"))
               (rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,1,0"))
               (rule "mul_literals" (formula "8") (term "0,1,0,0,1,1,0"))
               (rule "polySimp_addAssoc" (formula "8") (term "0,0,1,1,0"))
               (rule "add_literals" (formula "8") (term "0,0,0,1,1,0"))
               (rule "add_zero_left" (formula "8") (term "0,0,1,1,0"))
               (rule "applyEqRigid" (formula "8") (term "0,1,0,0,1,0,0") (ifseqformula "10"))
               (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0"))
               (rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,0,0"))
               (rule "mul_literals" (formula "8") (term "0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0,0"))
               (rule "add_literals" (formula "8") (term "0,0,0,1,0,0"))
               (rule "add_zero_left" (formula "8") (term "0,0,1,0,0"))
               (rule "applyEq" (formula "3") (term "0,1,0,0,1,0,0,0") (ifseqformula "10"))
               (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1,0,0,0"))
               (rule "polySimp_rightDist" (formula "3") (term "1,0,0,1,0,0,0"))
               (rule "mul_literals" (formula "3") (term "0,1,0,0,1,0,0,0"))
               (rule "polySimp_addAssoc" (formula "3") (term "0,0,1,0,0,0"))
               (rule "add_literals" (formula "3") (term "0,0,0,1,0,0,0"))
               (rule "add_zero_left" (formula "3") (term "0,0,1,0,0,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "7") (term "1,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "7") (term "0,1,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "7") (term "0,1,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "2"))
               (rule "polySimp_mulLiterals" (formula "2") (term "1"))
               (rule "polySimp_elimOne" (formula "2") (term "1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "5"))
               (rule "polySimp_mulLiterals" (formula "5") (term "1"))
               (rule "polySimp_elimOne" (formula "5") (term "1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "7") (term "1,1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0"))
               (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0"))
               (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,1,0"))
               (rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,0"))
               (rule "polySimp_elimOne" (formula "8") (term "1,1,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0"))
               (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "3") (term "1,1,0,0,0"))
               (rule "lenOfSeqDef" (formula "12") (term "0"))
               (rule "polySimp_elimSub" (formula "12") (term "1,0"))
               (rule "times_zero_2" (formula "12") (term "1,1,0"))
               (rule "add_zero_right" (formula "12") (term "1,0"))
               (rule "ifthenelse_concrete3" (formula "12"))
               (rule "orRight" (formula "12"))
               (rule "eqSymm" (formula "13"))
               (rule "inEqSimp_ltRight" (formula "12"))
               (rule "add_zero_right" (formula "1") (term "0"))
               (rule "polySimp_mulComm0" (formula "1") (term "0"))
               (rule "inEqSimp_invertInEq1" (formula "1"))
               (rule "polySimp_mulLiterals" (formula "1") (term "0"))
               (rule "times_zero_2" (formula "1") (term "1"))
               (rule "polySimp_elimOne" (formula "1") (term "0"))
               (rule "inEqSimp_strengthen1" (formula "12") (ifseqformula "13"))
               (rule "add_zero_right" (formula "12") (term "1"))
               (rule "inEqSimp_contradEq7" (formula "13") (ifseqformula "12"))
               (rule "times_zero_1" (formula "13") (term "1,0,0"))
               (rule "add_zero_right" (formula "13") (term "0,0"))
               (rule "leq_literals" (formula "13") (term "0"))
               (rule "concrete_and_2" (formula "13"))
               (rule "false_right" (formula "13"))
               (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "12"))
               (rule "qeq_literals" (formula "1") (term "0"))
               (rule "concrete_and_2" (formula "1"))
               (rule "closeFalse" (formula "1"))
            )
            (branch "Case 2"
               (rule "impLeft" (formula "8") (userinteraction))
               (branch "Case 1"
                  (rule "andLeft" (formula "2"))
                  (rule "andLeft" (formula "2"))
                  (rule "allRight" (formula "11") (inst "sk=iv_8"))
                  (rule "impRight" (formula "11"))
                  (rule "andLeft" (formula "1"))
                  (rule "eqSymm" (formula "7") (term "0,1,0,0"))
                  (rule "eqSymm" (formula "12") (term "0,1,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0,1"))
                  (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0,1"))
                  (rule "inEqSimp_ltToLeq" (formula "7") (term "1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "7") (term "1,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "8") (term "1,1,0"))
                  (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "12") (term "1,1,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "3") (term "1,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0"))
                  (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "5"))
                  (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,1,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "2"))
                  (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
                  (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                  (rule "polySimp_addComm0" (formula "10") (term "1"))
                  (rule "polySimp_addComm1" (formula "7") (term "0,1,0,0,0,0"))
                  (rule "polySimp_addComm1" (formula "12") (term "0,1,0,0,0,0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0,1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "3") (term "0,0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "8") (term "0,1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0,0,0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "12") (term "0,1,0,1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "7") (term "0,0,0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0,1"))
                  (rule "inEqSimp_commuteLeq" (formula "4"))
                  (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "1"))
                  (rule "polySimp_addComm1" (formula "5") (term "0"))
                  (rule "polySimp_addComm1" (formula "2") (term "0"))
                  (rule "getOfSeqDef" (formula "12") (term "0,0,1,0,1"))
                  (rule "castDel" (formula "12") (term "2,0,0,1,0,1"))
                  (rule "castDel" (formula "12") (term "1,0,0,1,0,1"))
                  (rule "add_zero_right" (formula "12") (term "1,2,1,0,0,1,0,1"))
                  (rule "add_zero_right" (formula "12") (term "0,0,1,0,0,1,0,1"))
                  (rule "polySimp_elimSub" (formula "12") (term "1,1,0,0,0,1,0,1"))
                  (rule "times_zero_2" (formula "12") (term "1,1,1,0,0,0,1,0,1"))
                  (rule "add_zero_right" (formula "12") (term "1,1,0,0,0,1,0,1"))
                  (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0,0,1,0,1"))
                  (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0,0,1,0,1"))
                  (rule "getOfSeqDef" (formula "12") (term "0,0,1,0,0,0,0"))
                  (rule "castDel" (formula "12") (term "1,0,0,1,0,0,0,0"))
                  (rule "add_zero_right" (formula "12") (term "0,0,1,0,0,1,0,0,0,0"))
                  (rule "add_zero_right" (formula "12") (term "1,2,1,0,0,1,0,0,0,0"))
                  (rule "polySimp_elimSub" (formula "12") (term "1,1,0,0,0,1,0,0,0,0"))
                  (rule "times_zero_2" (formula "12") (term "1,1,1,0,0,0,1,0,0,0,0"))
                  (rule "add_zero_right" (formula "12") (term "1,1,0,0,0,1,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0,0,1,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0,0,1,0,0,0,0"))
                  (rule "getOfSeqDef" (formula "12") (term "1,0,1,0,0,0,0"))
                  (rule "castDel" (formula "12") (term "1,1,0,1,0,0,0,0"))
                  (rule "add_zero_right" (formula "12") (term "0,0,1,1,0,1,0,0,0,0"))
                  (rule "add_zero_right" (formula "12") (term "1,2,1,1,0,1,0,0,0,0"))
                  (rule "polySimp_elimSub" (formula "12") (term "1,1,0,1,0,1,0,0,0,0"))
                  (rule "mul_literals" (formula "12") (term "1,1,1,0,1,0,1,0,0,0,0"))
                  (rule "add_zero_right" (formula "12") (term "1,1,0,1,0,1,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,1,0,1,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,1,0,1,0,0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0,0,1,0,1"))
                  (rule "getOfSeqDef" (formula "12") (term "1,0,1,1,0,1,0"))
                  (rule "castDel" (formula "12") (term "1,1,0,1,1,0,1,0"))
                  (rule "add_zero_right" (formula "12") (term "1,2,1,1,0,1,1,0,1,0"))
                  (rule "add_zero_right" (formula "12") (term "0,0,1,1,0,1,1,0,1,0"))
                  (rule "polySimp_elimSub" (formula "12") (term "1,1,0,1,0,1,1,0,1,0"))
                  (rule "times_zero_2" (formula "12") (term "1,1,1,0,1,0,1,1,0,1,0"))
                  (rule "add_zero_right" (formula "12") (term "1,1,0,1,0,1,1,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,1,0,1,1,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,1,0,1,1,0,1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0,0,1,0,0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,1,0,1,0,0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,1,0,1,1,0,1,0"))
                  (rule "getOfSeqDef" (formula "12") (term "0,0,1,0,1,0"))
                  (rule "castDel" (formula "12") (term "1,0,0,1,0,1,0"))
                  (rule "add_zero_right" (formula "12") (term "1,2,1,0,0,1,0,1,0"))
                  (rule "add_zero_right" (formula "12") (term "0,0,1,0,0,1,0,1,0"))
                  (rule "polySimp_elimSub" (formula "12") (term "1,1,0,0,0,1,0,1,0"))
                  (rule "times_zero_2" (formula "12") (term "1,1,1,0,0,0,1,0,1,0"))
                  (rule "add_zero_right" (formula "12") (term "1,1,0,0,0,1,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0,0,1,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0,0,1,0,1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0,0,1,0,1,0"))
                  (rule "applyEq" (formula "5") (term "0,1,0") (ifseqformula "10"))
                  (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                  (rule "mul_literals" (formula "5") (term "0,1,0"))
                  (rule "polySimp_addComm1" (formula "5") (term "0"))
                  (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                  (rule "add_literals" (formula "5") (term "0,0,0"))
                  (rule "add_zero_left" (formula "5") (term "0,0"))
                  (rule "applyEqRigid" (formula "2") (term "0,1,0") (ifseqformula "10"))
                  (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                  (rule "mul_literals" (formula "2") (term "0,1,0"))
                  (rule "polySimp_addComm1" (formula "2") (term "0"))
                  (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                  (rule "add_literals" (formula "2") (term "0,0,0"))
                  (rule "add_zero_left" (formula "2") (term "0,0"))
                  (rule "applyEq" (formula "8") (term "0,1,0,0,1,1,0") (ifseqformula "10"))
                  (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,1,0"))
                  (rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,1,0"))
                  (rule "mul_literals" (formula "8") (term "0,1,0,0,1,1,0"))
                  (rule "polySimp_addAssoc" (formula "8") (term "0,0,1,1,0"))
                  (rule "add_literals" (formula "8") (term "0,0,0,1,1,0"))
                  (rule "add_zero_left" (formula "8") (term "0,0,1,1,0"))
                  (rule "applyEq" (formula "8") (term "0,1,0,0,1,0,0") (ifseqformula "10"))
                  (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0"))
                  (rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "8") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "8") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "8") (term "0,0,1,0,0"))
                  (rule "applyEq" (formula "9") (term "0,1,0,0,1,0,0") (ifseqformula "10"))
                  (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
                  (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "9") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "9") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "9") (term "0,0,1,0,0"))
                  (rule "applyEq" (formula "13") (term "0,1,0,0,1,0,0") (ifseqformula "10"))
                  (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
                  (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "13") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "13") (term "0,0,1,0,0"))
                  (rule "applyEq" (formula "3") (term "0,1,0,0,1,0,0,0") (ifseqformula "10"))
                  (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "3") (term "1,0,0,1,0,0,0"))
                  (rule "mul_literals" (formula "3") (term "0,1,0,0,1,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "3") (term "0,0,1,0,0,0"))
                  (rule "add_literals" (formula "3") (term "0,0,0,1,0,0,0"))
                  (rule "add_zero_left" (formula "3") (term "0,0,1,0,0,0"))
                  (rule "applyEq" (formula "7") (term "0,1,0,0,1,0,0,0") (ifseqformula "10"))
                  (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "7") (term "1,0,0,1,0,0,0"))
                  (rule "mul_literals" (formula "7") (term "0,1,0,0,1,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "7") (term "0,0,1,0,0,0"))
                  (rule "add_literals" (formula "7") (term "0,0,0,1,0,0,0"))
                  (rule "add_zero_left" (formula "7") (term "0,0,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "12") (term "0,1,1,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0,1"))
                  (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0,1"))
                  (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0,1"))
                  (rule "mul_literals" (formula "12") (term "0,1,1,0,0,1"))
                  (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0,1,0"))
                  (rule "mul_literals" (formula "12") (term "0,1,1,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0,1,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "7") (term "1,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "7") (term "0,1,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "7") (term "0,1,0,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "12") (term "1,0,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "12") (term "0,1,0,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "12") (term "0,1,0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0,0,1,0,1"))
                  (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0,0,1,0,1"))
                  (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0,0,1,0,1"))
                  (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0,0,1,0,1"))
                  (rule "mul_literals" (formula "12") (term "0,1,1,0,0,0,1,0,1"))
                  (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0,0,1,0,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0,0,1,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0,0,1,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0,0,1,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0,0,1,0,0,0,0"))
                  (rule "mul_literals" (formula "12") (term "0,1,1,0,0,0,1,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0,0,1,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,1,0,1,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,1,0,1,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "12") (term "1,1,0,1,0,1,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,1,0,1,0,0,0,0"))
                  (rule "mul_literals" (formula "12") (term "0,1,1,0,1,0,1,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,1,0,1,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,1,0,1,1,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,1,0,1,1,0,1,0"))
                  (rule "polySimp_rightDist" (formula "12") (term "1,1,0,1,0,1,1,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,1,0,1,1,0,1,0"))
                  (rule "mul_literals" (formula "12") (term "0,1,1,0,1,0,1,1,0,1,0"))
                  (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,1,0,1,1,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0,0,1,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0,0,1,0,1,0"))
                  (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0,0,1,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0,0,1,0,1,0"))
                  (rule "mul_literals" (formula "12") (term "0,1,1,0,0,0,1,0,1,0"))
                  (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0,0,1,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                  (rule "polySimp_mulLiterals" (formula "5") (term "1"))
                  (rule "polySimp_elimOne" (formula "5") (term "1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1"))
                  (rule "polySimp_elimOne" (formula "2") (term "1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,0"))
                  (rule "polySimp_elimOne" (formula "8") (term "1,1,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "3") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "7") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,1,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "12") (term "1,1,1,0,1,0"))
                  (rule "polySimp_rightDist" (formula "12") (term "1,1,1,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,1,0,1,0"))
                  (rule "mul_literals" (formula "12") (term "0,1,1,1,0,1,0"))
                  (rule "polySimp_elimOne" (formula "12") (term "1,1,1,1,0,1,0"))
                  (rule "lenOfSeqDef" (formula "12") (term "1,1,1,0,0,0,0,0"))
                  (rule "polySimp_elimSub" (formula "12") (term "1,1,1,1,0,0,0,0,0"))
                  (rule "times_zero_2" (formula "12") (term "1,1,1,1,1,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "12") (term "1,1,1,1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "12") (term "0,1,1,1,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "12") (term "0,0,1,1,1,0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,1,1,0,0,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "12") (term "0,1,1,1,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "12") (term "0,0,1,1,1,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "12") (term "0,0,1,1,1,0,0,0,0,0"))
                  (rule "lenOfSeqDef" (formula "12") (term "1,1,1,0,0,1"))
                  (rule "polySimp_elimSub" (formula "12") (term "1,1,1,1,0,0,1"))
                  (rule "times_zero_2" (formula "12") (term "1,1,1,1,1,0,0,1"))
                  (rule "add_zero_right" (formula "12") (term "1,1,1,1,0,0,1"))
                  (rule "inEqSimp_ltToLeq" (formula "12") (term "0,1,1,1,0,0,1"))
                  (rule "add_zero_right" (formula "12") (term "0,0,1,1,1,0,0,1"))
                  (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,1,1,0,0,1"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "12") (term "0,1,1,1,0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "12") (term "0,0,1,1,1,0,0,1"))
                  (rule "polySimp_elimOne" (formula "12") (term "0,0,1,1,1,0,0,1"))
                  (rule "lenOfSeqDef" (formula "12") (term "1,1,1,0,0,1,0"))
                  (rule "polySimp_elimSub" (formula "12") (term "1,1,1,1,0,0,1,0"))
                  (rule "times_zero_2" (formula "12") (term "1,1,1,1,1,0,0,1,0"))
                  (rule "add_zero_right" (formula "12") (term "1,1,1,1,0,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "12") (term "0,1,1,1,0,0,1,0"))
                  (rule "add_zero_right" (formula "12") (term "0,0,1,1,1,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,1,1,0,0,1,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "12") (term "0,1,1,1,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "12") (term "0,0,1,1,1,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "12") (term "0,0,1,1,1,0,0,1,0"))
                  (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "5"))
                  (rule "times_zero_1" (formula "4") (term "0,0"))
                  (rule "add_zero_left" (formula "4") (term "0"))
                  (rule "lenOfSeqDef" (formula "12") (term "1,1,1,1,0,1,0"))
                  (rule "polySimp_elimSub" (formula "12") (term "1,1,1,1,1,0,1,0"))
                  (rule "times_zero_2" (formula "12") (term "1,1,1,1,1,1,0,1,0"))
                  (rule "add_zero_right" (formula "12") (term "1,1,1,1,1,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "12") (term "0,1,1,1,1,0,1,0"))
                  (rule "add_zero_right" (formula "12") (term "0,0,1,1,1,1,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,1,1,1,0,1,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "12") (term "0,1,1,1,1,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "12") (term "0,0,1,1,1,1,0,1,0"))
                  (rule "polySimp_elimOne" (formula "12") (term "0,0,1,1,1,1,0,1,0"))
                  (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                  (rule "times_zero_1" (formula "1") (term "0,0"))
                  (rule "add_zero_left" (formula "1") (term "0"))
                  (rule "nnf_ex2all" (formula "13"))
                  (rule "nnf_imp2or" (formula "9") (term "0"))
                  (rule "nnf_imp2or" (formula "10") (term "0"))
                  (rule "nnf_imp2or" (formula "4") (term "0"))
                  (rule "nnf_imp2or" (formula "8") (term "0,0"))
                  (rule "nnf_imp2or" (formula "13") (term "0,1"))
                  (rule "nnf_imp2or" (formula "13") (term "0,0,0,0"))
                  (rule "nnf_notAnd" (formula "1") (term "0"))
                  (rule "nnf_notAnd" (formula "9") (term "0,0"))
                  (rule "inEqSimp_notGeq" (formula "9") (term "0,0,0"))
                  (rule "times_zero_1" (formula "9") (term "1,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "9") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0"))
                  (rule "mul_literals" (formula "9") (term "1,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "9") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0"))
                  (rule "mul_literals" (formula "9") (term "0,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0"))
                  (rule "nnf_notAnd" (formula "10") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "10") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
                  (rule "mul_literals" (formula "10") (term "0,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0"))
                  (rule "inEqSimp_notGeq" (formula "10") (term "0,0,0"))
                  (rule "times_zero_1" (formula "10") (term "1,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "10") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0"))
                  (rule "mul_literals" (formula "10") (term "1,0,0,0"))
                  (rule "nnf_notAnd" (formula "4") (term "0,0"))
                  (rule "double_not" (formula "4") (term "1,0,0"))
                  (rule "nnf_imp2or" (formula "13") (term "0,1,0"))
                  (rule "nnf_notAnd" (formula "1") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0,0"))
                  (rule "mul_literals" (formula "1") (term "0,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0,0"))
                  (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                  (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                  (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                  (rule "nnf_notAnd" (formula "8") (term "0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "8") (term "1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "8") (term "1,1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "8") (term "1,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,0,0,0"))
                  (rule "mul_literals" (formula "8") (term "0,1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "8") (term "1,1,1,0,0,0"))
                  (rule "nnf_notAnd" (formula "13") (term "0,0,1"))
                  (rule "inEqSimp_notLeq" (formula "13") (term "1,0,0,1"))
                  (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,0,1"))
                  (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,0,1"))
                  (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0,1"))
                  (rule "add_literals" (formula "13") (term "0,0,0,1,0,0,1"))
                  (rule "add_zero_left" (formula "13") (term "0,0,1,0,0,1"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,1"))
                  (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,1"))
                  (rule "inEqSimp_notGeq" (formula "13") (term "0,0,0,1"))
                  (rule "times_zero_1" (formula "13") (term "1,0,0,0,0,0,1"))
                  (rule "add_zero_right" (formula "13") (term "0,0,0,0,0,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0,1"))
                  (rule "mul_literals" (formula "13") (term "1,0,0,0,1"))
                  (rule "nnf_notAnd" (formula "13") (term "0,0,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "13") (term "1,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0,0,0,0"))
                  (rule "add_literals" (formula "13") (term "0,0,0,1,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "13") (term "0,0,1,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0,0,0"))
                  (rule "nnf_notAnd" (formula "4") (term "0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "4") (term "1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "4") (term "1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "4") (term "1,1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "4") (term "1,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "1,1,1,0,0,0"))
                  (rule "mul_literals" (formula "4") (term "0,1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "4") (term "1,1,1,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "4") (term "0,0,0,0"))
                  (rule "times_zero_1" (formula "4") (term "1,0,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "4") (term "0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "4") (term "0,0,0,0"))
                  (rule "mul_literals" (formula "4") (term "1,0,0,0,0"))
                  (rule "nnf_notAnd" (formula "13") (term "0,0,1,0"))
                  (rule "inEqSimp_notLeq" (formula "13") (term "1,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,0,1,0"))
                  (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0,1,0"))
                  (rule "add_literals" (formula "13") (term "0,0,0,1,0,0,1,0"))
                  (rule "add_zero_left" (formula "13") (term "0,0,1,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,1,0"))
                  (rule "inEqSimp_notGeq" (formula "13") (term "0,0,0,1,0"))
                  (rule "times_zero_1" (formula "13") (term "1,0,0,0,0,0,1,0"))
                  (rule "add_zero_right" (formula "13") (term "0,0,0,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0,1,0"))
                  (rule "mul_literals" (formula "13") (term "1,0,0,0,1,0"))
                  (rule "nnf_notAnd" (formula "8") (term "0,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "8") (term "1,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,0,0,0,0"))
                  (rule "mul_literals" (formula "8") (term "0,1,0,0,1,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0,0,0,0"))
                  (rule "add_literals" (formula "8") (term "0,0,0,1,0,0,0,0"))
                  (rule "add_zero_left" (formula "8") (term "0,0,1,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "8") (term "0,0,0,0,0"))
                  (rule "times_zero_1" (formula "8") (term "1,0,0,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "8") (term "0,0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0,0,0"))
                  (rule "mul_literals" (formula "8") (term "1,0,0,0,0,0"))
                  (rule "nnf_notAnd" (formula "13") (term "0,0,0,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "13") (term "0,0,0,0,0,0,0"))
                  (rule "times_zero_1" (formula "13") (term "1,0,0,0,0,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "13") (term "0,0,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0,0,0,0,0"))
                  (rule "mul_literals" (formula "13") (term "1,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "13") (term "1,0,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,0,0,0,0,0"))
                  (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0,0,0,0,0"))
                  (rule "add_literals" (formula "13") (term "0,0,0,1,0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "13") (term "0,0,1,0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0,0,0,0"))
                  (rule "lenNonNegative" (formula "11") (term "0"))
                  (rule "inEqSimp_commuteLeq" (formula "11"))
                  (rule "applyEq" (formula "11") (term "0") (ifseqformula "12"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                  (rule "mul_literals" (formula "11") (term "1"))
                  (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "13"))
                  (rule "leq_literals" (formula "11") (term "0"))
                  (rule "concrete_or_1" (formula "11"))
                  (rule "true_left" (formula "11"))
                  (rule "cnf_rightDist" (formula "9") (term "0"))
                  (rule "distr_forallAnd" (formula "9"))
                  (rule "andLeft" (formula "9"))
                  (rule "commute_or" (formula "10") (term "0"))
                  (rule "commute_or_2" (formula "8") (term "0,0,0"))
                  (rule "andRight" (formula "14"))
                  (branch "Case 1"
                     (rule "andRight" (formula "14"))
                     (branch "Case 1"
                        (rule "allRight" (formula "14") (inst "sk=v_iv_6"))
                        (rule "allRight" (formula "14") (inst "sk=v_jv_2"))
                        (rule "orRight" (formula "14"))
                        (rule "notRight" (formula "15"))
                        (rule "orRight" (formula "15"))
                        (rule "orRight" (formula "15"))
                        (rule "inEqSimp_geqRight" (formula "17"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                        (rule "inEqSimp_leqRight" (formula "16"))
                        (rule "mul_literals" (formula "1") (term "1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0"))
                        (rule "add_zero_left" (formula "1") (term "0"))
                        (rule "replace_known_left" (formula "3") (term "0,0,1") (ifseqformula "1"))
                        (rule "concrete_and_1" (formula "3") (term "0,1"))
                        (rule "inEqSimp_leqRight" (formula "17"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "3") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1"))
                        (rule "polySimp_rightDist" (formula "1") (term "1"))
                        (rule "mul_literals" (formula "1") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                        (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                        (rule "polySimp_elimOne" (formula "3") (term "0"))
                        (rule "ifthenelse_split" (formula "4") (term "1,0"))
                        (branch "v_jv_2 = j_0 TRUE"
                           (rule "applyEqRigid" (formula "5") (term "0,0,0,0") (ifseqformula "4"))
                           (rule "replace_known_left" (formula "5") (term "0,0,0") (ifseqformula "10"))
                           (rule "concrete_and_1" (formula "5") (term "0,0"))
                           (rule "applyEqRigid" (formula "3") (term "1,1") (ifseqformula "4"))
                           (rule "applyEq" (formula "1") (term "0") (ifseqformula "4"))
                           (rule "inEqSimp_homoInEq1" (formula "1"))
                           (rule "polySimp_addComm1" (formula "1") (term "0"))
                           (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "4"))
                           (rule "eqSymm" (formula "5"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1"))
                           (rule "polySimp_rightDist" (formula "1") (term "1"))
                           (rule "mul_literals" (formula "1") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                           (rule "inEqSimp_contradEq3" (formula "5") (term "0,1,0") (ifseqformula "1"))
                           (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,1,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,0,1,0"))
                           (rule "add_literals" (formula "5") (term "1,1,0,0,0,1,0"))
                           (rule "times_zero_1" (formula "5") (term "1,0,0,0,1,0"))
                           (rule "add_literals" (formula "5") (term "0,0,0,1,0"))
                           (rule "qeq_literals" (formula "5") (term "0,0,1,0"))
                           (rule "concrete_and_2" (formula "5") (term "0,1,0"))
                           (rule "ifthenelse_false" (formula "5") (term "1,0"))
                           (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "1"))
                           (rule "times_zero_1" (formula "2") (term "0,0"))
                           (rule "add_zero_left" (formula "2") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                           (rule "mul_literals" (formula "2") (term "1"))
                           (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "2"))
                           (rule "leq_literals" (formula "11") (term "0"))
                           (rule "concrete_or_1" (formula "11"))
                           (rule "true_left" (formula "11"))
                           (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "11"))
                           (rule "mul_literals" (formula "2") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                           (rule "mul_literals" (formula "2") (term "1"))
                           (rule "replace_known_left" (formula "5") (term "0,0") (ifseqformula "2"))
                           (rule "ifthenelse_true" (formula "5") (term "0"))
                           (rule "inEqSimp_homoInEq1" (formula "5"))
                           (rule "polySimp_addComm1" (formula "5") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                           (rule "polySimp_mulComm0" (formula "5") (term "1"))
                           (rule "polySimp_rightDist" (formula "5") (term "1"))
                           (rule "mul_literals" (formula "5") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                           (rule "replace_known_left" (formula "7") (term "0,1") (ifseqformula "5"))
                           (rule "ifthenelse_true" (formula "7") (term "1"))
                           (rule "inEqSimp_subsumption0" (formula "12") (ifseqformula "5"))
                           (rule "inEqSimp_homoInEq0" (formula "12") (term "0"))
                           (rule "polySimp_mulComm0" (formula "12") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "12") (term "1,0,0"))
                           (rule "mul_literals" (formula "12") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "12") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "12") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0"))
                           (rule "add_literals" (formula "12") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "12") (term "1,0,0"))
                           (rule "add_literals" (formula "12") (term "0,0"))
                           (rule "qeq_literals" (formula "12") (term "0"))
                           (rule "concrete_or_1" (formula "12"))
                           (rule "true_left" (formula "12"))
                           (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "2"))
                           (rule "leq_literals" (formula "18") (term "0"))
                           (rule "concrete_or_1" (formula "18"))
                           (rule "true_left" (formula "18"))
                           (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "5"))
                           (rule "mul_literals" (formula "3") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "3") (term "0"))
                           (rule "add_literals" (formula "3") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                           (rule "mul_literals" (formula "3") (term "1"))
                           (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "3"))
                           (rule "leq_literals" (formula "2") (term "0"))
                           (rule "concrete_or_1" (formula "2"))
                           (rule "true_left" (formula "2"))
                           (rule "allLeft" (formula "8") (inst "t=j_0"))
                           (rule "applyEq" (formula "8") (term "0,0,1") (ifseqformula "13"))
                           (rule "eqSymm" (formula "8") (term "0,1"))
                           (rule "inEqSimp_contradInEq1" (formula "8") (term "0,0") (ifseqformula "3"))
                           (rule "qeq_literals" (formula "8") (term "0,0,0"))
                           (rule "concrete_and_2" (formula "8") (term "0,0"))
                           (rule "concrete_or_2" (formula "8") (term "0"))
                           (rule "inEqSimp_contradInEq0" (formula "8") (term "0") (ifseqformula "5"))
                           (rule "inEqSimp_homoInEq1" (formula "8") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "8") (term "0,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "8") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "8") (term "0,0,0,0"))
                           (rule "add_literals" (formula "8") (term "0,0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,0"))
                           (rule "add_literals" (formula "8") (term "1,1,0,0,0"))
                           (rule "times_zero_1" (formula "8") (term "1,0,0,0"))
                           (rule "add_zero_right" (formula "8") (term "0,0,0"))
                           (rule "leq_literals" (formula "8") (term "0,0"))
                           (rule "concrete_and_2" (formula "8") (term "0"))
                           (rule "concrete_or_2" (formula "8"))
                           (rule "notLeft" (formula "8"))
                           (rule "inEqSimp_strengthen0" (formula "10") (ifseqformula "18"))
                           (rule "inEqSimp_contradEq3" (formula "18") (ifseqformula "10"))
                           (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0"))
                           (rule "add_literals" (formula "18") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "18") (term "1,0,0"))
                           (rule "add_zero_right" (formula "18") (term "0,0"))
                           (rule "qeq_literals" (formula "18") (term "0"))
                           (rule "concrete_and_2" (formula "18"))
                           (rule "false_right" (formula "18"))
                           (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "10"))
                           (rule "times_zero_1" (formula "9") (term "0,0"))
                           (rule "add_zero_left" (formula "9") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                           (rule "mul_literals" (formula "9") (term "1"))
                           (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "2"))
                           (rule "leq_literals" (formula "9") (term "0"))
                           (rule "concrete_or_1" (formula "9"))
                           (rule "true_left" (formula "9"))
                           (rule "allLeft" (formula "8") (inst "t=N_0"))
                           (rule "inEqSimp_homoInEq1" (formula "8") (term "1,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,1,0"))
                           (rule "add_literals" (formula "8") (term "1,1,0,1,0"))
                           (rule "times_zero_1" (formula "8") (term "1,0,1,0"))
                           (rule "add_zero_right" (formula "8") (term "0,1,0"))
                           (rule "leq_literals" (formula "8") (term "1,0"))
                           (rule "concrete_or_4" (formula "8") (term "0"))
                           (rule "inEqSimp_contradInEq1" (formula "8") (term "0") (ifseqformula "2"))
                           (rule "qeq_literals" (formula "8") (term "0,0"))
                           (rule "concrete_and_2" (formula "8") (term "0"))
                           (rule "concrete_or_2" (formula "8"))
                           (rule "notLeft" (formula "8"))
                           (rule "allLeft" (formula "15") (inst "t=j_0"))
                           (rule "applyEq" (formula "15") (term "0,1") (ifseqformula "12"))
                           (rule "inEqSimp_homoInEq0" (formula "15") (term "1"))
                           (rule "polySimp_pullOutFactor1" (formula "15") (term "0,1"))
                           (rule "add_literals" (formula "15") (term "1,0,1"))
                           (rule "times_zero_1" (formula "15") (term "0,1"))
                           (rule "qeq_literals" (formula "15") (term "1"))
                           (rule "concrete_or_3" (formula "15"))
                           (rule "true_left" (formula "15"))
                           (rule "allLeft" (formula "15") (inst "t=N_0"))
                           (rule "inEqSimp_homoInEq1" (formula "15") (term "1,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,1,0"))
                           (rule "add_literals" (formula "15") (term "1,1,0,1,0"))
                           (rule "times_zero_1" (formula "15") (term "1,0,1,0"))
                           (rule "add_zero_right" (formula "15") (term "0,1,0"))
                           (rule "leq_literals" (formula "15") (term "1,0"))
                           (rule "concrete_or_4" (formula "15") (term "0"))
                           (rule "inEqSimp_contradInEq1" (formula "15") (term "0") (ifseqformula "2"))
                           (rule "qeq_literals" (formula "15") (term "0,0"))
                           (rule "concrete_and_2" (formula "15") (term "0"))
                           (rule "concrete_or_2" (formula "15"))
                           (rule "allLeft" (formula "14") (inst "t=j_0"))
                           (rule "applyEq" (formula "14") (term "0,1") (ifseqformula "12"))
                           (rule "inEqSimp_contradInEq1" (formula "14") (term "0,0") (ifseqformula "3"))
                           (rule "qeq_literals" (formula "14") (term "0,0,0"))
                           (rule "concrete_and_2" (formula "14") (term "0,0"))
                           (rule "concrete_or_2" (formula "14") (term "0"))
                           (rule "inEqSimp_subsumption1" (formula "14") (term "1") (ifseqformula "2"))
                           (rule "leq_literals" (formula "14") (term "0,1"))
                           (rule "concrete_or_1" (formula "14") (term "1"))
                           (rule "concrete_or_3" (formula "14"))
                           (rule "true_left" (formula "14"))
                           (rule "allLeft" (formula "14") (inst "t=N_0"))
                           (rule "inEqSimp_homoInEq1" (formula "14") (term "1,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,1,0"))
                           (rule "add_literals" (formula "14") (term "1,1,0,1,0"))
                           (rule "times_zero_1" (formula "14") (term "1,0,1,0"))
                           (rule "add_zero_right" (formula "14") (term "0,1,0"))
                           (rule "leq_literals" (formula "14") (term "1,0"))
                           (rule "concrete_or_4" (formula "14") (term "0"))
                           (rule "inEqSimp_contradInEq1" (formula "14") (term "0") (ifseqformula "2"))
                           (rule "qeq_literals" (formula "14") (term "0,0"))
                           (rule "concrete_and_2" (formula "14") (term "0"))
                           (rule "concrete_or_2" (formula "14"))
                           (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "16"))
                           (rule "times_zero_1" (formula "14") (term "0,0"))
                           (rule "add_zero_left" (formula "14") (term "0"))
                           (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "2"))
                           (rule "leq_literals" (formula "14") (term "0"))
                           (rule "concrete_or_1" (formula "14"))
                           (rule "true_left" (formula "14"))
                           (rule "ifthenelse_split" (formula "7") (term "0"))
                           (branch "v_iv_6 <= -1 + N_0 TRUE"
                              (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "7"))
                              (rule "times_zero_1" (formula "4") (term "0,0"))
                              (rule "add_zero_left" (formula "4") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                              (rule "mul_literals" (formula "4") (term "1"))
                              (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "2"))
                              (rule "leq_literals" (formula "4") (term "0"))
                              (rule "concrete_or_1" (formula "4"))
                              (rule "true_left" (formula "4"))
                              (rule "allLeft" (formula "14") (inst "t=j_0"))
                              (rule "applyEqRigid" (formula "14") (term "1,0,1,0") (ifseqformula "13"))
                              (rule "inEqSimp_contradInEq1" (formula "14") (term "0,0,0,0") (ifseqformula "3"))
                              (rule "qeq_literals" (formula "14") (term "0,0,0,0,0"))
                              (rule "concrete_and_2" (formula "14") (term "0,0,0,0"))
                              (rule "concrete_or_2" (formula "14") (term "0,0,0"))
                              (rule "allLeft" (formula "15") (inst "t=v_iv_6"))
                              (rule "applyEqRigid" (formula "15") (term "1,0,1,0") (ifseqformula "8"))
                              (rule "inEqSimp_contradInEq1" (formula "15") (term "0,0,0,0") (ifseqformula "4"))
                              (rule "qeq_literals" (formula "15") (term "0,0,0,0,0"))
                              (rule "concrete_and_2" (formula "15") (term "0,0,0,0"))
                              (rule "concrete_or_2" (formula "15") (term "0,0,0"))
                              (rule "allLeft" (formula "9") (inst "t=v_iv_6"))
                              (rule "applyEq" (formula "9") (term "0,0,1") (ifseqformula "8"))
                              (rule "replace_known_right" (formula "9") (term "0,1") (ifseqformula "24"))
                              (rule "concrete_not_2" (formula "9") (term "1"))
                              (rule "concrete_or_3" (formula "9"))
                              (rule "true_left" (formula "9"))
                              (rule "allLeft" (formula "20") (inst "t=v_iv_6"))
                              (rule "applyEq" (formula "20") (term "0,1") (ifseqformula "8"))
                              (rule "replace_known_left" (formula "20") (term "1") (ifseqformula "19"))
                              (rule "concrete_or_3" (formula "20"))
                              (rule "true_left" (formula "20"))
                              (rule "allLeft" (formula "12") (inst "t=N_0"))
                              (rule "eqSymm" (formula "12") (term "1,0"))
                              (rule "inEqSimp_homoInEq1" (formula "12") (term "1,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,1,0,0"))
                              (rule "add_literals" (formula "12") (term "1,1,0,1,0,0"))
                              (rule "times_zero_1" (formula "12") (term "1,0,1,0,0"))
                              (rule "add_zero_right" (formula "12") (term "0,1,0,0"))
                              (rule "leq_literals" (formula "12") (term "1,0,0"))
                              (rule "concrete_or_4" (formula "12") (term "0,0"))
                              (rule "inEqSimp_contradEq3" (formula "12") (term "1,0") (ifseqformula "5"))
                              (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0,1,0"))
                              (rule "add_literals" (formula "12") (term "1,1,0,0,1,0"))
                              (rule "times_zero_1" (formula "12") (term "1,0,0,1,0"))
                              (rule "add_zero_right" (formula "12") (term "0,0,1,0"))
                              (rule "qeq_literals" (formula "12") (term "0,1,0"))
                              (rule "concrete_and_2" (formula "12") (term "1,0"))
                              (rule "concrete_or_4" (formula "12") (term "0"))
                              (rule "inEqSimp_contradInEq1" (formula "12") (term "0") (ifseqformula "2"))
                              (rule "qeq_literals" (formula "12") (term "0,0"))
                              (rule "concrete_and_2" (formula "12") (term "0"))
                              (rule "concrete_or_2" (formula "12"))
                              (rule "notLeft" (formula "12"))
                              (rule "inEqSimp_strengthen0" (formula "19") (ifseqformula "23"))
                              (rule "inEqSimp_contradEq3" (formula "23") (ifseqformula "19"))
                              (rule "polySimp_mulComm0" (formula "23") (term "1,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0"))
                              (rule "add_literals" (formula "23") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "23") (term "1,0,0"))
                              (rule "add_zero_right" (formula "23") (term "0,0"))
                              (rule "qeq_literals" (formula "23") (term "0"))
                              (rule "concrete_and_2" (formula "23"))
                              (rule "false_right" (formula "23"))
                              (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "19"))
                              (rule "times_zero_1" (formula "17") (term "0,0"))
                              (rule "add_zero_left" (formula "17") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                              (rule "mul_literals" (formula "17") (term "1"))
                              (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "2"))
                              (rule "leq_literals" (formula "17") (term "0"))
                              (rule "concrete_or_1" (formula "17"))
                              (rule "true_left" (formula "17"))
                              (rule "allLeft" (formula "18") (inst "t=v_iv_6"))
                              (rule "applyEqRigid" (formula "18") (term "0,1") (ifseqformula "8"))
                              (rule "replace_known_left" (formula "18") (term "1") (ifseqformula "17"))
                              (rule "concrete_or_3" (formula "18"))
                              (rule "true_left" (formula "18"))
                              (rule "allLeft" (formula "12") (inst "t=v_iv_6"))
                              (rule "applyEq" (formula "12") (term "0,0,1") (ifseqformula "8"))
                              (rule "inEqSimp_contradEq3" (formula "12") (term "0,1") (ifseqformula "20"))
                              (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,1"))
                              (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0,0,1"))
                              (rule "add_literals" (formula "12") (term "1,1,0,0,0,1"))
                              (rule "times_zero_1" (formula "12") (term "1,0,0,0,1"))
                              (rule "add_zero_right" (formula "12") (term "0,0,0,1"))
                              (rule "qeq_literals" (formula "12") (term "0,0,1"))
                              (rule "concrete_and_2" (formula "12") (term "0,1"))
                              (rule "concrete_not_2" (formula "12") (term "1"))
                              (rule "concrete_or_3" (formula "12"))
                              (rule "true_left" (formula "12"))
                              (rule "allLeft" (formula "15") (inst "t=N_0"))
                              (rule "eqClose" (formula "15") (term "0,1"))
                              (rule "concrete_not_1" (formula "15") (term "1"))
                              (rule "concrete_or_4" (formula "15"))
                              (rule "inEqSimp_commuteLeq" (formula "15") (term "1"))
                              (rule "inEqSimp_homoInEq1" (formula "15") (term "0"))
                              (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0"))
                              (rule "add_literals" (formula "15") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "15") (term "1,0,0"))
                              (rule "add_zero_right" (formula "15") (term "0,0"))
                              (rule "leq_literals" (formula "15") (term "0"))
                              (rule "concrete_or_2" (formula "15"))
                              (rule "inEqSimp_contradInEq0" (formula "15") (ifseqformula "7"))
                              (rule "andLeft" (formula "15"))
                              (rule "inEqSimp_homoInEq1" (formula "15"))
                              (rule "polySimp_mulComm0" (formula "15") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "15") (term "1,0"))
                              (rule "mul_literals" (formula "15") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "15") (term "0"))
                              (rule "polySimp_addComm0" (formula "15") (term "0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "15") (term "0"))
                              (rule "add_literals" (formula "15") (term "1,1,0"))
                              (rule "times_zero_1" (formula "15") (term "1,0"))
                              (rule "add_zero_right" (formula "15") (term "0"))
                              (rule "leq_literals" (formula "15"))
                              (rule "closeFalse" (formula "15"))
                           )
                           (branch "v_iv_6 <= -1 + N_0 FALSE"
                              (rule "inEqSimp_leqRight" (formula "20"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                              (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                              (rule "add_literals" (formula "1") (term "0,0,0"))
                              (rule "add_zero_left" (formula "1") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                              (rule "polySimp_elimOne" (formula "1") (term "1"))
                              (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                              (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0"))
                              (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1"))
                              (rule "polySimp_rightDist" (formula "1") (term "1"))
                              (rule "mul_literals" (formula "1") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                              (rule "inEqSimp_contradInEq1" (formula "7") (ifseqformula "1"))
                              (rule "andLeft" (formula "7"))
                              (rule "inEqSimp_homoInEq1" (formula "7"))
                              (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "7") (term "1,0"))
                              (rule "mul_literals" (formula "7") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "7") (term "0"))
                              (rule "polySimp_addComm1" (formula "7") (term "0,0"))
                              (rule "add_literals" (formula "7") (term "0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "7") (term "0"))
                              (rule "add_literals" (formula "7") (term "1,1,0"))
                              (rule "times_zero_1" (formula "7") (term "1,0"))
                              (rule "add_zero_right" (formula "7") (term "0"))
                              (rule "leq_literals" (formula "7"))
                              (rule "closeFalse" (formula "7"))
                           )
                        )
                        (branch "v_jv_2 = j_0 FALSE"
                           (rule "ifthenelse_split" (formula "4") (term "1,1"))
                           (branch "v_iv_6 = j_0 TRUE"
                              (rule "applyEq" (formula "2") (term "0") (ifseqformula "4"))
                              (rule "applyEq" (formula "1") (term "1,1") (ifseqformula "3"))
                              (rule "applyEq" (formula "4") (term "0,0,1") (ifseqformula "3"))
                              (rule "inEqSimp_contradEq7" (formula "18") (ifseqformula "1"))
                              (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0"))
                              (rule "add_literals" (formula "18") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "18") (term "1,0,0"))
                              (rule "add_zero_right" (formula "18") (term "0,0"))
                              (rule "leq_literals" (formula "18") (term "0"))
                              (rule "concrete_and_2" (formula "18"))
                              (rule "false_right" (formula "18"))
                              (rule "allLeft" (formula "5") (inst "t=j_0"))
                              (rule "applyEq" (formula "5") (term "0,0,1") (ifseqformula "12"))
                              (rule "eqSymm" (formula "5") (term "0,1"))
                              (rule "inEqSimp_contradInEq1" (formula "5") (term "0,0") (ifseqformula "10"))
                              (rule "qeq_literals" (formula "5") (term "0,0,0"))
                              (rule "concrete_and_2" (formula "5") (term "0,0"))
                              (rule "concrete_or_2" (formula "5") (term "0"))
                              (rule "inEqSimp_contradInEq0" (formula "5") (term "0") (ifseqformula "11"))
                              (rule "inEqSimp_homoInEq1" (formula "5") (term "0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,0"))
                              (rule "add_literals" (formula "5") (term "1,1,0,0,0"))
                              (rule "times_zero_1" (formula "5") (term "1,0,0,0"))
                              (rule "add_literals" (formula "5") (term "0,0,0"))
                              (rule "leq_literals" (formula "5") (term "0,0"))
                              (rule "concrete_and_2" (formula "5") (term "0"))
                              (rule "concrete_or_2" (formula "5"))
                              (rule "notLeft" (formula "5"))
                              (rule "inEqSimp_strengthen0" (formula "7") (ifseqformula "18"))
                              (rule "inEqSimp_contradEq3" (formula "18") (ifseqformula "7"))
                              (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0"))
                              (rule "add_literals" (formula "18") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "18") (term "1,0,0"))
                              (rule "add_zero_right" (formula "18") (term "0,0"))
                              (rule "qeq_literals" (formula "18") (term "0"))
                              (rule "concrete_and_2" (formula "18"))
                              (rule "false_right" (formula "18"))
                              (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "7"))
                              (rule "times_zero_1" (formula "6") (term "0,0"))
                              (rule "add_zero_left" (formula "6") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                              (rule "mul_literals" (formula "6") (term "1"))
                              (rule "replace_known_left" (formula "2") (term "0,0") (ifseqformula "6"))
                              (rule "ifthenelse_true" (formula "2") (term "0"))
                              (rule "inEqSimp_homoInEq1" (formula "2"))
                              (rule "polySimp_addComm1" (formula "2") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1"))
                              (rule "polySimp_rightDist" (formula "2") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                              (rule "mul_literals" (formula "2") (term "0,1"))
                              (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                              (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "2"))
                              (rule "concrete_and_3" (formula "4") (term "0,0"))
                              (rule "eqSymm" (formula "4"))
                              (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "6"))
                              (rule "leq_literals" (formula "18") (term "0"))
                              (rule "concrete_or_1" (formula "18"))
                              (rule "true_left" (formula "18"))
                              (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                              (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                              (rule "mul_literals" (formula "1") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                              (rule "add_literals" (formula "1") (term "0,0,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                              (rule "polySimp_elimOne" (formula "1") (term "0"))
                              (rule "inEqSimp_subsumption0" (formula "5") (term "0,0") (ifseqformula "1"))
                              (rule "inEqSimp_homoInEq0" (formula "5") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0,0"))
                              (rule "mul_literals" (formula "5") (term "0,1,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "5") (term "0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "5") (term "0,0,0,0,0"))
                              (rule "add_literals" (formula "5") (term "0,0,0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,0,0"))
                              (rule "add_literals" (formula "5") (term "1,1,0,0,0,0"))
                              (rule "times_zero_1" (formula "5") (term "1,0,0,0,0"))
                              (rule "add_zero_right" (formula "5") (term "0,0,0,0"))
                              (rule "qeq_literals" (formula "5") (term "0,0,0"))
                              (rule "concrete_or_1" (formula "5") (term "0,0"))
                              (rule "ifthenelse_true" (formula "5") (term "0"))
                              (rule "eqSymm" (formula "5"))
                              (rule "inEqSimp_subsumption0" (formula "12") (ifseqformula "1"))
                              (rule "inEqSimp_homoInEq0" (formula "12") (term "0"))
                              (rule "polySimp_mulComm0" (formula "12") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "12") (term "1,0,0"))
                              (rule "mul_literals" (formula "12") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "12") (term "0,0"))
                              (rule "polySimp_addComm0" (formula "12") (term "0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0"))
                              (rule "add_literals" (formula "12") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "12") (term "1,0,0"))
                              (rule "add_zero_right" (formula "12") (term "0,0"))
                              (rule "qeq_literals" (formula "12") (term "0"))
                              (rule "concrete_or_1" (formula "12"))
                              (rule "true_left" (formula "12"))
                              (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "1"))
                              (rule "times_zero_1" (formula "11") (term "0,0"))
                              (rule "add_zero_left" (formula "11") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                              (rule "mul_literals" (formula "11") (term "1"))
                              (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "11"))
                              (rule "leq_literals" (formula "7") (term "0"))
                              (rule "concrete_or_1" (formula "7"))
                              (rule "true_left" (formula "7"))
                              (rule "allLeft" (formula "6") (inst "t=N_0"))
                              (rule "inEqSimp_homoInEq1" (formula "6") (term "1,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,1,0"))
                              (rule "add_literals" (formula "6") (term "1,1,0,1,0"))
                              (rule "times_zero_1" (formula "6") (term "1,0,1,0"))
                              (rule "add_zero_right" (formula "6") (term "0,1,0"))
                              (rule "leq_literals" (formula "6") (term "1,0"))
                              (rule "concrete_or_4" (formula "6") (term "0"))
                              (rule "inEqSimp_contradInEq1" (formula "6") (term "0") (ifseqformula "11"))
                              (rule "qeq_literals" (formula "6") (term "0,0"))
                              (rule "concrete_and_2" (formula "6") (term "0"))
                              (rule "concrete_or_2" (formula "6"))
                              (rule "notLeft" (formula "6"))
                              (rule "allLeft" (formula "15") (inst "t=j_0"))
                              (rule "applyEq" (formula "15") (term "0,1") (ifseqformula "12"))
                              (rule "inEqSimp_homoInEq0" (formula "15") (term "1"))
                              (rule "polySimp_pullOutFactor1" (formula "15") (term "0,1"))
                              (rule "add_literals" (formula "15") (term "1,0,1"))
                              (rule "times_zero_1" (formula "15") (term "0,1"))
                              (rule "qeq_literals" (formula "15") (term "1"))
                              (rule "concrete_or_3" (formula "15"))
                              (rule "true_left" (formula "15"))
                              (rule "allLeft" (formula "15") (inst "t=N_0"))
                              (rule "inEqSimp_homoInEq1" (formula "15") (term "1,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,1,0"))
                              (rule "add_literals" (formula "15") (term "1,1,0,1,0"))
                              (rule "times_zero_1" (formula "15") (term "1,0,1,0"))
                              (rule "add_zero_right" (formula "15") (term "0,1,0"))
                              (rule "leq_literals" (formula "15") (term "1,0"))
                              (rule "concrete_or_4" (formula "15") (term "0"))
                              (rule "inEqSimp_contradInEq1" (formula "15") (term "0") (ifseqformula "10"))
                              (rule "qeq_literals" (formula "15") (term "0,0"))
                              (rule "concrete_and_2" (formula "15") (term "0"))
                              (rule "concrete_or_2" (formula "15"))
                              (rule "allLeft" (formula "14") (inst "t=j_0"))
                              (rule "applyEq" (formula "14") (term "0,1") (ifseqformula "12"))
                              (rule "inEqSimp_contradInEq0" (formula "14") (term "1,0") (ifseqformula "1"))
                              (rule "inEqSimp_homoInEq1" (formula "14") (term "0,1,0"))
                              (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0"))
                              (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0"))
                              (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0"))
                              (rule "polySimp_addComm1" (formula "14") (term "0,0,0,1,0"))
                              (rule "add_literals" (formula "14") (term "0,0,0,0,1,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0,1,0"))
                              (rule "add_literals" (formula "14") (term "1,1,0,0,1,0"))
                              (rule "times_zero_1" (formula "14") (term "1,0,0,1,0"))
                              (rule "add_literals" (formula "14") (term "0,0,1,0"))
                              (rule "leq_literals" (formula "14") (term "0,1,0"))
                              (rule "concrete_and_2" (formula "14") (term "1,0"))
                              (rule "concrete_or_4" (formula "14") (term "0"))
                              (rule "inEqSimp_subsumption1" (formula "14") (term "1") (ifseqformula "10"))
                              (rule "leq_literals" (formula "14") (term "0,1"))
                              (rule "concrete_or_1" (formula "14") (term "1"))
                              (rule "concrete_or_3" (formula "14"))
                              (rule "true_left" (formula "14"))
                              (rule "allLeft" (formula "14") (inst "t=N_0"))
                              (rule "inEqSimp_homoInEq1" (formula "14") (term "1,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,1,0"))
                              (rule "add_literals" (formula "14") (term "1,1,0,1,0"))
                              (rule "times_zero_1" (formula "14") (term "1,0,1,0"))
                              (rule "add_zero_right" (formula "14") (term "0,1,0"))
                              (rule "leq_literals" (formula "14") (term "1,0"))
                              (rule "concrete_or_4" (formula "14") (term "0"))
                              (rule "inEqSimp_contradInEq1" (formula "14") (term "0") (ifseqformula "10"))
                              (rule "qeq_literals" (formula "14") (term "0,0"))
                              (rule "concrete_and_2" (formula "14") (term "0"))
                              (rule "concrete_or_2" (formula "14"))
                              (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "16"))
                              (rule "times_zero_1" (formula "14") (term "0,0"))
                              (rule "add_zero_left" (formula "14") (term "0"))
                              (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "10"))
                              (rule "leq_literals" (formula "14") (term "0"))
                              (rule "concrete_or_1" (formula "14"))
                              (rule "true_left" (formula "14"))
                              (rule "ifthenelse_split" (formula "5") (term "0"))
                              (branch "v_jv_2 >= 0 TRUE"
                                 (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "3"))
                                 (rule "times_zero_1" (formula "5") (term "0,0"))
                                 (rule "add_zero_left" (formula "5") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                 (rule "mul_literals" (formula "5") (term "1"))
                                 (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "12"))
                                 (rule "leq_literals" (formula "5") (term "0"))
                                 (rule "concrete_or_1" (formula "5"))
                                 (rule "true_left" (formula "5"))
                                 (rule "allLeft" (formula "14") (inst "t=j_0"))
                                 (rule "applyEqRigid" (formula "14") (term "1,0,1,0") (ifseqformula "13"))
                                 (rule "inEqSimp_contradInEq1" (formula "14") (term "0,0,0,0") (ifseqformula "12"))
                                 (rule "qeq_literals" (formula "14") (term "0,0,0,0,0"))
                                 (rule "concrete_and_2" (formula "14") (term "0,0,0,0"))
                                 (rule "concrete_or_2" (formula "14") (term "0,0,0"))
                                 (rule "allLeft" (formula "17") (inst "t=v_jv_2"))
                                 (rule "applyEq" (formula "17") (term "0,1") (ifseqformula "6"))
                                 (rule "replace_known_left" (formula "17") (term "1") (ifseqformula "16"))
                                 (rule "concrete_or_3" (formula "17"))
                                 (rule "true_left" (formula "17"))
                                 (rule "allLeft" (formula "19") (inst "t=v_jv_2"))
                                 (rule "applyEqRigid" (formula "19") (term "0,1") (ifseqformula "6"))
                                 (rule "replace_known_left" (formula "19") (term "1") (ifseqformula "18"))
                                 (rule "concrete_or_3" (formula "19"))
                                 (rule "true_left" (formula "19"))
                                 (rule "allLeft" (formula "10") (inst "t=N_0"))
                                 (rule "eqSymm" (formula "10") (term "1,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "10") (term "1,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,1,0,0"))
                                 (rule "add_literals" (formula "10") (term "1,1,0,1,0,0"))
                                 (rule "times_zero_1" (formula "10") (term "1,0,1,0,0"))
                                 (rule "add_zero_right" (formula "10") (term "0,1,0,0"))
                                 (rule "leq_literals" (formula "10") (term "1,0,0"))
                                 (rule "concrete_or_4" (formula "10") (term "0,0"))
                                 (rule "inEqSimp_contradEq3" (formula "10") (term "1,0") (ifseqformula "1"))
                                 (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,1,0"))
                                 (rule "add_literals" (formula "10") (term "1,1,0,0,1,0"))
                                 (rule "times_zero_1" (formula "10") (term "1,0,0,1,0"))
                                 (rule "add_zero_right" (formula "10") (term "0,0,1,0"))
                                 (rule "qeq_literals" (formula "10") (term "0,1,0"))
                                 (rule "concrete_and_2" (formula "10") (term "1,0"))
                                 (rule "concrete_or_4" (formula "10") (term "0"))
                                 (rule "inEqSimp_contradInEq1" (formula "10") (term "0") (ifseqformula "12"))
                                 (rule "qeq_literals" (formula "10") (term "0,0"))
                                 (rule "concrete_and_2" (formula "10") (term "0"))
                                 (rule "concrete_or_2" (formula "10"))
                                 (rule "notLeft" (formula "10"))
                                 (rule "inEqSimp_strengthen0" (formula "18") (ifseqformula "22"))
                                 (rule "inEqSimp_contradEq3" (formula "22") (ifseqformula "18"))
                                 (rule "polySimp_mulComm0" (formula "22") (term "1,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0"))
                                 (rule "add_literals" (formula "22") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "22") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "22") (term "0,0"))
                                 (rule "qeq_literals" (formula "22") (term "0"))
                                 (rule "concrete_and_2" (formula "22"))
                                 (rule "false_right" (formula "22"))
                                 (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "18"))
                                 (rule "times_zero_1" (formula "16") (term "0,0"))
                                 (rule "add_zero_left" (formula "16") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                                 (rule "mul_literals" (formula "16") (term "1"))
                                 (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "11"))
                                 (rule "leq_literals" (formula "16") (term "0"))
                                 (rule "concrete_or_1" (formula "16"))
                                 (rule "true_left" (formula "16"))
                                 (rule "allLeft" (formula "15") (inst "t=v_jv_2"))
                                 (rule "applyEq" (formula "15") (term "1,0,1,0") (ifseqformula "6"))
                                 (rule "inEqSimp_contradInEq1" (formula "15") (term "0,0,0,0") (ifseqformula "5"))
                                 (rule "qeq_literals" (formula "15") (term "0,0,0,0,0"))
                                 (rule "concrete_and_2" (formula "15") (term "0,0,0,0"))
                                 (rule "concrete_or_2" (formula "15") (term "0,0,0"))
                                 (rule "allLeft" (formula "7") (inst "t=v_jv_2"))
                                 (rule "applyEqRigid" (formula "7") (term "0,0,1") (ifseqformula "6"))
                                 (rule "replace_known_right" (formula "7") (term "0,1") (ifseqformula "24"))
                                 (rule "concrete_not_2" (formula "7") (term "1"))
                                 (rule "concrete_or_3" (formula "7"))
                                 (rule "true_left" (formula "7"))
                                 (rule "allLeft" (formula "10") (inst "t=v_jv_2"))
                                 (rule "applyEqRigid" (formula "10") (term "0,0,1") (ifseqformula "6"))
                                 (rule "inEqSimp_contradEq7" (formula "10") (term "1,0") (ifseqformula "2"))
                                 (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,1,0"))
                                 (rule "add_literals" (formula "10") (term "1,1,0,0,1,0"))
                                 (rule "times_zero_1" (formula "10") (term "1,0,0,1,0"))
                                 (rule "add_literals" (formula "10") (term "0,0,1,0"))
                                 (rule "leq_literals" (formula "10") (term "0,1,0"))
                                 (rule "concrete_and_2" (formula "10") (term "1,0"))
                                 (rule "concrete_or_4" (formula "10") (term "0"))
                                 (rule "inEqSimp_contradEq3" (formula "10") (term "0,1") (ifseqformula "20"))
                                 (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,0,1"))
                                 (rule "add_literals" (formula "10") (term "1,1,0,0,0,1"))
                                 (rule "times_zero_1" (formula "10") (term "1,0,0,0,1"))
                                 (rule "add_zero_right" (formula "10") (term "0,0,0,1"))
                                 (rule "qeq_literals" (formula "10") (term "0,0,1"))
                                 (rule "concrete_and_2" (formula "10") (term "0,1"))
                                 (rule "concrete_not_2" (formula "10") (term "1"))
                                 (rule "concrete_or_3" (formula "10"))
                                 (rule "true_left" (formula "10"))
                                 (rule "allLeft" (formula "14") (inst "t=N_0"))
                                 (rule "inEqSimp_commuteLeq" (formula "14") (term "1,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "14") (term "0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0,0"))
                                 (rule "add_literals" (formula "14") (term "1,1,0,0,0"))
                                 (rule "times_zero_1" (formula "14") (term "1,0,0,0"))
                                 (rule "add_zero_right" (formula "14") (term "0,0,0"))
                                 (rule "leq_literals" (formula "14") (term "0,0"))
                                 (rule "concrete_or_2" (formula "14") (term "0"))
                                 (rule "inEqSimp_contradEq3" (formula "14") (term "0,1") (ifseqformula "20"))
                                 (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0,0,1"))
                                 (rule "add_literals" (formula "14") (term "1,1,0,0,0,1"))
                                 (rule "times_zero_1" (formula "14") (term "1,0,0,0,1"))
                                 (rule "add_zero_right" (formula "14") (term "0,0,0,1"))
                                 (rule "qeq_literals" (formula "14") (term "0,0,1"))
                                 (rule "concrete_and_2" (formula "14") (term "0,1"))
                                 (rule "concrete_not_2" (formula "14") (term "1"))
                                 (rule "concrete_or_3" (formula "14"))
                                 (rule "true_left" (formula "14"))
                                 (rule "allLeft" (formula "14") (inst "t=v_jv_2"))
                                 (rule "applyEq" (formula "14") (term "0,0,1") (ifseqformula "6"))
                                 (rule "inEqSimp_contradEq3" (formula "14") (term "0,1") (ifseqformula "20"))
                                 (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0,0,1"))
                                 (rule "add_literals" (formula "14") (term "1,1,0,0,0,1"))
                                 (rule "times_zero_1" (formula "14") (term "1,0,0,0,1"))
                                 (rule "add_zero_right" (formula "14") (term "0,0,0,1"))
                                 (rule "qeq_literals" (formula "14") (term "0,0,1"))
                                 (rule "concrete_and_2" (formula "14") (term "0,1"))
                                 (rule "concrete_not_2" (formula "14") (term "1"))
                                 (rule "concrete_or_3" (formula "14"))
                                 (rule "true_left" (formula "14"))
                                 (rule "allLeft" (formula "15") (inst "t=N_0"))
                                 (rule "eqClose" (formula "15") (term "0,1"))
                                 (rule "concrete_not_1" (formula "15") (term "1"))
                                 (rule "concrete_or_4" (formula "15"))
                                 (rule "inEqSimp_commuteLeq" (formula "15") (term "1"))
                                 (rule "inEqSimp_homoInEq1" (formula "15") (term "0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0"))
                                 (rule "add_literals" (formula "15") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "15") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "15") (term "0,0"))
                                 (rule "leq_literals" (formula "15") (term "0"))
                                 (rule "concrete_or_2" (formula "15"))
                                 (rule "inEqSimp_contradInEq0" (formula "15") (ifseqformula "3"))
                                 (rule "andLeft" (formula "15"))
                                 (rule "inEqSimp_homoInEq1" (formula "15"))
                                 (rule "polySimp_mulComm0" (formula "15") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "15") (term "1,0"))
                                 (rule "mul_literals" (formula "15") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "15") (term "0"))
                                 (rule "polySimp_addComm0" (formula "15") (term "0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "15") (term "0"))
                                 (rule "add_literals" (formula "15") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "15") (term "1,0"))
                                 (rule "add_zero_right" (formula "15") (term "0"))
                                 (rule "leq_literals" (formula "15"))
                                 (rule "closeFalse" (formula "15"))
                              )
                              (branch "v_jv_2 >= 0 FALSE"
                                 (rule "inEqSimp_geqRight" (formula "20"))
                                 (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "1") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                 (rule "mul_literals" (formula "1") (term "1"))
                                 (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "1"))
                                 (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                 (rule "mul_literals" (formula "3") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "3") (term "0"))
                                 (rule "add_literals" (formula "3") (term "0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                 (rule "polySimp_elimOne" (formula "3") (term "0"))
                                 (rule "inEqSimp_contradInEq1" (formula "3") (ifseqformula "13"))
                                 (rule "qeq_literals" (formula "3") (term "0"))
                                 (rule "concrete_and_2" (formula "3"))
                                 (rule "closeFalse" (formula "3"))
                              )
                           )
                           (branch "v_iv_6 = j_0 FALSE"
                              (rule "allLeft" (formula "5") (inst "t=j_0"))
                              (rule "applyEqRigid" (formula "5") (term "0,0,1") (ifseqformula "12"))
                              (rule "eqSymm" (formula "5") (term "0,1"))
                              (rule "inEqSimp_contradInEq0" (formula "5") (term "1,0") (ifseqformula "11"))
                              (rule "inEqSimp_homoInEq1" (formula "5") (term "0,1,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,1,0"))
                              (rule "add_literals" (formula "5") (term "1,1,0,0,1,0"))
                              (rule "times_zero_1" (formula "5") (term "1,0,0,1,0"))
                              (rule "add_zero_right" (formula "5") (term "0,0,1,0"))
                              (rule "leq_literals" (formula "5") (term "0,1,0"))
                              (rule "concrete_and_2" (formula "5") (term "1,0"))
                              (rule "concrete_or_4" (formula "5") (term "0"))
                              (rule "inEqSimp_contradInEq1" (formula "5") (term "0") (ifseqformula "10"))
                              (rule "qeq_literals" (formula "5") (term "0,0"))
                              (rule "concrete_and_2" (formula "5") (term "0"))
                              (rule "concrete_or_2" (formula "5"))
                              (rule "notLeft" (formula "5"))
                              (rule "inEqSimp_strengthen0" (formula "7") (ifseqformula "18"))
                              (rule "inEqSimp_contradEq3" (formula "18") (ifseqformula "7"))
                              (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0"))
                              (rule "add_literals" (formula "18") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "18") (term "1,0,0"))
                              (rule "add_literals" (formula "18") (term "0,0"))
                              (rule "qeq_literals" (formula "18") (term "0"))
                              (rule "concrete_and_2" (formula "18"))
                              (rule "false_right" (formula "18"))
                              (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "7"))
                              (rule "times_zero_1" (formula "6") (term "0,0"))
                              (rule "add_zero_left" (formula "6") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                              (rule "mul_literals" (formula "6") (term "1"))
                              (rule "replace_known_left" (formula "3") (term "0,0") (ifseqformula "6"))
                              (rule "ifthenelse_true" (formula "3") (term "0"))
                              (rule "inEqSimp_homoInEq1" (formula "3"))
                              (rule "polySimp_addComm1" (formula "3") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                              (rule "polySimp_mulComm0" (formula "3") (term "1"))
                              (rule "polySimp_rightDist" (formula "3") (term "1"))
                              (rule "mul_literals" (formula "3") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                              (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "3"))
                              (rule "concrete_and_3" (formula "4") (term "0,0"))
                              (rule "eqSymm" (formula "4"))
                              (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "6"))
                              (rule "leq_literals" (formula "18") (term "0"))
                              (rule "concrete_or_1" (formula "18"))
                              (rule "true_left" (formula "18"))
                              (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "3"))
                              (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                              (rule "mul_literals" (formula "1") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                              (rule "add_literals" (formula "1") (term "0,0,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                              (rule "polySimp_elimOne" (formula "1") (term "0"))
                              (rule "inEqSimp_subsumption0" (formula "5") (term "0,0") (ifseqformula "1"))
                              (rule "inEqSimp_homoInEq0" (formula "5") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0,0"))
                              (rule "mul_literals" (formula "5") (term "0,1,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "5") (term "0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "5") (term "0,0,0,0,0"))
                              (rule "add_literals" (formula "5") (term "0,0,0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,0,0"))
                              (rule "add_literals" (formula "5") (term "1,1,0,0,0,0"))
                              (rule "times_zero_1" (formula "5") (term "1,0,0,0,0"))
                              (rule "add_literals" (formula "5") (term "0,0,0,0"))
                              (rule "qeq_literals" (formula "5") (term "0,0,0"))
                              (rule "concrete_or_1" (formula "5") (term "0,0"))
                              (rule "ifthenelse_true" (formula "5") (term "0"))
                              (rule "eqSymm" (formula "5"))
                              (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "1"))
                              (rule "times_zero_1" (formula "3") (term "0,0"))
                              (rule "add_zero_left" (formula "3") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                              (rule "mul_literals" (formula "3") (term "1"))
                              (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "3"))
                              (rule "leq_literals" (formula "8") (term "0"))
                              (rule "concrete_or_1" (formula "8"))
                              (rule "true_left" (formula "8"))
                              (rule "allLeft" (formula "16") (inst "t=j_0"))
                              (rule "applyEqRigid" (formula "16") (term "0,1") (ifseqformula "13"))
                              (rule "inEqSimp_homoInEq0" (formula "16") (term "1"))
                              (rule "polySimp_pullOutFactor1" (formula "16") (term "0,1"))
                              (rule "add_literals" (formula "16") (term "1,0,1"))
                              (rule "times_zero_1" (formula "16") (term "0,1"))
                              (rule "qeq_literals" (formula "16") (term "1"))
                              (rule "concrete_or_3" (formula "16"))
                              (rule "true_left" (formula "16"))
                              (rule "allLeft" (formula "15") (inst "t=j_0"))
                              (rule "applyEqRigid" (formula "15") (term "0,1") (ifseqformula "13"))
                              (rule "inEqSimp_contradInEq1" (formula "15") (term "0,0") (ifseqformula "11"))
                              (rule "qeq_literals" (formula "15") (term "0,0,0"))
                              (rule "concrete_and_2" (formula "15") (term "0,0"))
                              (rule "concrete_or_2" (formula "15") (term "0"))
                              (rule "inEqSimp_subsumption1" (formula "15") (term "1") (ifseqformula "3"))
                              (rule "leq_literals" (formula "15") (term "0,1"))
                              (rule "concrete_or_1" (formula "15") (term "1"))
                              (rule "concrete_or_3" (formula "15"))
                              (rule "true_left" (formula "15"))
                              (rule "ifthenelse_split" (formula "6") (term "0"))
                              (branch "v_jv_2 >= 0 TRUE"
                                 (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "5"))
                                 (rule "times_zero_1" (formula "6") (term "0,0"))
                                 (rule "add_zero_left" (formula "6") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                 (rule "mul_literals" (formula "6") (term "1"))
                                 (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "3"))
                                 (rule "leq_literals" (formula "6") (term "0"))
                                 (rule "concrete_or_1" (formula "6"))
                                 (rule "true_left" (formula "6"))
                                 (rule "allLeft" (formula "17") (inst "t=v_iv_6"))
                                 (rule "inEqSimp_contradInEq1" (formula "17") (term "0,0") (ifseqformula "4"))
                                 (rule "qeq_literals" (formula "17") (term "0,0,0"))
                                 (rule "concrete_and_2" (formula "17") (term "0,0"))
                                 (rule "concrete_or_2" (formula "17") (term "0"))
                                 (rule "inEqSimp_contradInEq0" (formula "17") (term "0") (ifseqformula "1"))
                                 (rule "inEqSimp_homoInEq1" (formula "17") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "17") (term "0,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "17") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "17") (term "0,0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,0"))
                                 (rule "add_literals" (formula "17") (term "1,1,0,0,0"))
                                 (rule "times_zero_1" (formula "17") (term "1,0,0,0"))
                                 (rule "add_literals" (formula "17") (term "0,0,0"))
                                 (rule "leq_literals" (formula "17") (term "0,0"))
                                 (rule "concrete_and_2" (formula "17") (term "0"))
                                 (rule "concrete_or_2" (formula "17"))
                                 (rule "allLeft" (formula "15") (inst "t=v_iv_6"))
                                 (rule "inEqSimp_contradInEq1" (formula "15") (term "0,0,0,0") (ifseqformula "4"))
                                 (rule "qeq_literals" (formula "15") (term "0,0,0,0,0"))
                                 (rule "concrete_and_2" (formula "15") (term "0,0,0,0"))
                                 (rule "concrete_or_2" (formula "15") (term "0,0,0"))
                                 (rule "allLeft" (formula "17") (inst "t=v_iv_6"))
                                 (rule "inEqSimp_contradInEq0" (formula "17") (term "1,0") (ifseqformula "1"))
                                 (rule "inEqSimp_homoInEq1" (formula "17") (term "0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0"))
                                 (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0"))
                                 (rule "polySimp_addComm1" (formula "17") (term "0,0,0,1,0"))
                                 (rule "add_literals" (formula "17") (term "0,0,0,0,1,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,1,0"))
                                 (rule "add_literals" (formula "17") (term "1,1,0,0,1,0"))
                                 (rule "times_zero_1" (formula "17") (term "1,0,0,1,0"))
                                 (rule "add_literals" (formula "17") (term "0,0,1,0"))
                                 (rule "leq_literals" (formula "17") (term "0,1,0"))
                                 (rule "concrete_and_2" (formula "17") (term "1,0"))
                                 (rule "concrete_or_4" (formula "17") (term "0"))
                                 (rule "inEqSimp_contradInEq1" (formula "17") (term "0") (ifseqformula "4"))
                                 (rule "qeq_literals" (formula "17") (term "0,0"))
                                 (rule "concrete_and_2" (formula "17") (term "0"))
                                 (rule "concrete_or_2" (formula "17"))
                                 (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "19"))
                                 (rule "times_zero_1" (formula "17") (term "0,0"))
                                 (rule "add_zero_left" (formula "17") (term "0"))
                                 (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "3"))
                                 (rule "leq_literals" (formula "17") (term "0"))
                                 (rule "concrete_or_1" (formula "17"))
                                 (rule "true_left" (formula "17"))
                                 (rule "allLeft" (formula "11") (inst "t=v_iv_6"))
                                 (rule "replace_known_right" (formula "11") (term "1,0") (ifseqformula "24"))
                                 (rule "concrete_or_4" (formula "11") (term "0"))
                                 (rule "inEqSimp_contradInEq1" (formula "11") (term "0,0") (ifseqformula "4"))
                                 (rule "qeq_literals" (formula "11") (term "0,0,0"))
                                 (rule "concrete_and_2" (formula "11") (term "0,0"))
                                 (rule "concrete_or_2" (formula "11") (term "0"))
                                 (rule "inEqSimp_contradInEq0" (formula "11") (term "0") (ifseqformula "1"))
                                 (rule "inEqSimp_homoInEq1" (formula "11") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "11") (term "0,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "11") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "11") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "11") (term "0,0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,0"))
                                 (rule "add_literals" (formula "11") (term "1,1,0,0,0"))
                                 (rule "times_zero_1" (formula "11") (term "1,0,0,0"))
                                 (rule "add_literals" (formula "11") (term "0,0,0"))
                                 (rule "leq_literals" (formula "11") (term "0,0"))
                                 (rule "concrete_and_2" (formula "11") (term "0"))
                                 (rule "concrete_or_2" (formula "11"))
                                 (rule "notLeft" (formula "11"))
                                 (rule "inEqSimp_strengthen0" (formula "19") (ifseqformula "23"))
                                 (rule "inEqSimp_contradEq3" (formula "23") (ifseqformula "19"))
                                 (rule "polySimp_mulComm0" (formula "23") (term "1,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0"))
                                 (rule "add_literals" (formula "23") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "23") (term "1,0,0"))
                                 (rule "add_literals" (formula "23") (term "0,0"))
                                 (rule "qeq_literals" (formula "23") (term "0"))
                                 (rule "concrete_and_2" (formula "23"))
                                 (rule "false_right" (formula "23"))
                                 (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "19"))
                                 (rule "times_zero_1" (formula "17") (term "0,0"))
                                 (rule "add_zero_left" (formula "17") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                                 (rule "mul_literals" (formula "17") (term "1"))
                                 (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "3"))
                                 (rule "leq_literals" (formula "17") (term "0"))
                                 (rule "concrete_or_1" (formula "17"))
                                 (rule "true_left" (formula "17"))
                                 (rule "allLeft" (formula "8") (inst "t=v_iv_6"))
                                 (rule "inEqSimp_contradInEq0" (formula "8") (term "1,0") (ifseqformula "1"))
                                 (rule "inEqSimp_homoInEq1" (formula "8") (term "0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,0"))
                                 (rule "mul_literals" (formula "8") (term "0,1,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0"))
                                 (rule "polySimp_addComm1" (formula "8") (term "0,0,0,1,0"))
                                 (rule "add_literals" (formula "8") (term "0,0,0,0,1,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,1,0"))
                                 (rule "add_literals" (formula "8") (term "1,1,0,0,1,0"))
                                 (rule "times_zero_1" (formula "8") (term "1,0,0,1,0"))
                                 (rule "add_literals" (formula "8") (term "0,0,1,0"))
                                 (rule "leq_literals" (formula "8") (term "0,1,0"))
                                 (rule "concrete_and_2" (formula "8") (term "1,0"))
                                 (rule "concrete_or_4" (formula "8") (term "0"))
                                 (rule "inEqSimp_contradInEq1" (formula "8") (term "0") (ifseqformula "4"))
                                 (rule "qeq_literals" (formula "8") (term "0,0"))
                                 (rule "concrete_and_2" (formula "8") (term "0"))
                                 (rule "concrete_or_2" (formula "8"))
                                 (rule "notLeft" (formula "8"))
                                 (rule "allLeft" (formula "20") (inst "t=v_jv_2"))
                                 (rule "applyEq" (formula "20") (term "0,1") (ifseqformula "7"))
                                 (rule "inEqSimp_contradInEq1" (formula "20") (term "0,0") (ifseqformula "6"))
                                 (rule "qeq_literals" (formula "20") (term "0,0,0"))
                                 (rule "concrete_and_2" (formula "20") (term "0,0"))
                                 (rule "concrete_or_2" (formula "20") (term "0"))
                                 (rule "inEqSimp_subsumption0" (formula "20") (term "1") (ifseqformula "19"))
                                 (rule "inEqSimp_homoInEq0" (formula "20") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1"))
                                 (rule "mul_literals" (formula "20") (term "0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "20") (term "0,0,1"))
                                 (rule "polySimp_addComm0" (formula "20") (term "0,0,0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,1"))
                                 (rule "add_literals" (formula "20") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "20") (term "1,0,0,1"))
                                 (rule "add_literals" (formula "20") (term "0,0,1"))
                                 (rule "qeq_literals" (formula "20") (term "0,1"))
                                 (rule "concrete_or_1" (formula "20") (term "1"))
                                 (rule "concrete_or_3" (formula "20"))
                                 (rule "true_left" (formula "20"))
                                 (rule "allLeft" (formula "15") (inst "t=v_jv_2"))
                                 (rule "replace_known_left" (formula "15") (term "0,1") (ifseqformula "7"))
                                 (rule "concrete_not_1" (formula "15") (term "1"))
                                 (rule "concrete_or_4" (formula "15"))
                                 (rule "inEqSimp_contradInEq1" (formula "15") (term "1") (ifseqformula "2"))
                                 (rule "inEqSimp_homoInEq1" (formula "15") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,1"))
                                 (rule "add_literals" (formula "15") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "15") (term "1,0,0,1"))
                                 (rule "add_literals" (formula "15") (term "0,0,1"))
                                 (rule "leq_literals" (formula "15") (term "0,1"))
                                 (rule "concrete_and_2" (formula "15") (term "1"))
                                 (rule "concrete_or_4" (formula "15"))
                                 (rule "inEqSimp_contradInEq0" (formula "15") (ifseqformula "5"))
                                 (rule "andLeft" (formula "15"))
                                 (rule "inEqSimp_homoInEq1" (formula "15"))
                                 (rule "polySimp_mulComm0" (formula "15") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "15") (term "1,0"))
                                 (rule "mul_literals" (formula "15") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "15") (term "0"))
                                 (rule "polySimp_addComm1" (formula "15") (term "0,0"))
                                 (rule "add_literals" (formula "15") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "15") (term "0"))
                                 (rule "add_literals" (formula "15") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "15") (term "1,0"))
                                 (rule "add_zero_right" (formula "15") (term "0"))
                                 (rule "leq_literals" (formula "15"))
                                 (rule "closeFalse" (formula "15"))
                              )
                              (branch "v_jv_2 >= 0 FALSE"
                                 (rule "inEqSimp_geqRight" (formula "19"))
                                 (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                 (rule "mul_literals" (formula "1") (term "1"))
                                 (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "1"))
                                 (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                 (rule "mul_literals" (formula "3") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "3") (term "0"))
                                 (rule "add_literals" (formula "3") (term "0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                 (rule "polySimp_elimOne" (formula "3") (term "0"))
                                 (rule "inEqSimp_contradInEq0" (formula "6") (ifseqformula "3"))
                                 (rule "qeq_literals" (formula "6") (term "0"))
                                 (rule "concrete_and_2" (formula "6"))
                                 (rule "closeFalse" (formula "6"))
                              )
                           )
                        )
                     )
                     (branch "Case 2"
                        (rule "allRight" (formula "14") (inst "sk=v_iv_5"))
                        (rule "orRight" (formula "14"))
                        (rule "orRight" (formula "14"))
                        (rule "inEqSimp_geqRight" (formula "15"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                        (rule "inEqSimp_leqRight" (formula "15"))
                        (rule "mul_literals" (formula "1") (term "1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0"))
                        (rule "add_zero_left" (formula "1") (term "0"))
                        (rule "replace_known_left" (formula "16") (term "0,0,0,0") (ifseqformula "1"))
                        (rule "concrete_and_1" (formula "16") (term "0,0,0"))
                        (rule "replace_known_left" (formula "16") (term "0,0,0,1") (ifseqformula "1"))
                        (rule "concrete_and_1" (formula "16") (term "0,0,1"))
                        (rule "polySimp_addComm1" (formula "2") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                        (rule "polySimp_elimOne" (formula "2") (term "0"))
                        (rule "ifthenelse_split" (formula "16") (term "1,0,0"))
                        (branch "v_iv_5 = j_0 TRUE"
                           (rule "replace_known_left" (formula "17") (term "0,1,0,1") (ifseqformula "1"))
                           (rule "ifthenelse_true" (formula "17") (term "1,0,1"))
                           (rule "applyEqRigid" (formula "17") (term "0,0,0,0") (ifseqformula "1"))
                           (rule "applyEqRigid" (formula "2") (term "0") (ifseqformula "1"))
                           (rule "applyEqRigid" (formula "16") (term "0,0,0,1") (ifseqformula "1"))
                           (rule "applyEqRigid" (formula "2") (term "1,1") (ifseqformula "1"))
                           (rule "ifthenelse_split" (formula "16") (term "1,1,1"))
                           (branch "N_0 >= 1 TRUE"
                              (rule "replace_known_left" (formula "3") (term "0,0") (ifseqformula "1"))
                              (rule "ifthenelse_true" (formula "3") (term "0"))
                              (rule "inEqSimp_homoInEq1" (formula "3"))
                              (rule "polySimp_addComm1" (formula "3") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                              (rule "polySimp_mulComm0" (formula "3") (term "1"))
                              (rule "polySimp_rightDist" (formula "3") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                              (rule "mul_literals" (formula "3") (term "0,1"))
                              (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                              (rule "replace_known_left" (formula "17") (term "0,0,0") (ifseqformula "3"))
                              (rule "ifthenelse_true" (formula "17") (term "0,0"))
                              (rule "replace_known_left" (formula "17") (term "0,0,1") (ifseqformula "3"))
                              (rule "ifthenelse_true" (formula "17") (term "0,1"))
                              (rule "inEqSimp_subsumption0" (formula "9") (ifseqformula "3"))
                              (rule "inEqSimp_homoInEq0" (formula "9") (term "0"))
                              (rule "polySimp_mulComm0" (formula "9") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "9") (term "1,0,0"))
                              (rule "mul_literals" (formula "9") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
                              (rule "polySimp_addComm0" (formula "9") (term "0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0"))
                              (rule "add_literals" (formula "9") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "9") (term "1,0,0"))
                              (rule "add_zero_right" (formula "9") (term "0,0"))
                              (rule "qeq_literals" (formula "9") (term "0"))
                              (rule "concrete_or_1" (formula "9"))
                              (rule "true_left" (formula "9"))
                              (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "1"))
                              (rule "leq_literals" (formula "15") (term "0"))
                              (rule "concrete_or_1" (formula "15"))
                              (rule "true_left" (formula "15"))
                              (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "3"))
                              (rule "times_zero_1" (formula "8") (term "0,0"))
                              (rule "add_zero_left" (formula "8") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                              (rule "mul_literals" (formula "8") (term "1"))
                              (rule "allLeft" (formula "12") (inst "t=N_0"))
                              (rule "inEqSimp_homoInEq1" (formula "12") (term "1,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,1,0"))
                              (rule "add_literals" (formula "12") (term "1,1,0,1,0"))
                              (rule "times_zero_1" (formula "12") (term "1,0,1,0"))
                              (rule "add_zero_right" (formula "12") (term "0,1,0"))
                              (rule "leq_literals" (formula "12") (term "1,0"))
                              (rule "concrete_or_4" (formula "12") (term "0"))
                              (rule "inEqSimp_contradInEq1" (formula "12") (term "0") (ifseqformula "1"))
                              (rule "qeq_literals" (formula "12") (term "0,0"))
                              (rule "concrete_and_2" (formula "12") (term "0"))
                              (rule "concrete_or_2" (formula "12"))
                              (rule "allLeft" (formula "11") (inst "t=N_0"))
                              (rule "inEqSimp_homoInEq1" (formula "11") (term "1,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,1,0"))
                              (rule "add_literals" (formula "11") (term "1,1,0,1,0"))
                              (rule "times_zero_1" (formula "11") (term "1,0,1,0"))
                              (rule "add_zero_right" (formula "11") (term "0,1,0"))
                              (rule "leq_literals" (formula "11") (term "1,0"))
                              (rule "concrete_or_4" (formula "11") (term "0"))
                              (rule "inEqSimp_contradInEq1" (formula "11") (term "0") (ifseqformula "1"))
                              (rule "qeq_literals" (formula "11") (term "0,0"))
                              (rule "concrete_and_2" (formula "11") (term "0"))
                              (rule "concrete_or_2" (formula "11"))
                              (rule "replace_known_left" (formula "17") (term "0") (ifseqformula "11"))
                              (rule "concrete_and_1" (formula "17"))
                              (rule "inEqSimp_leqRight" (formula "17"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                              (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                              (rule "add_literals" (formula "1") (term "0,0,0"))
                              (rule "add_zero_left" (formula "1") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                              (rule "polySimp_elimOne" (formula "1") (term "1"))
                              (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "14"))
                              (rule "applyEq" (formula "15") (term "0") (ifseqformula "1"))
                              (rule "inEqSimp_homoInEq0" (formula "15"))
                              (rule "polySimp_pullOutFactor1" (formula "15") (term "0"))
                              (rule "add_literals" (formula "15") (term "1,0"))
                              (rule "times_zero_1" (formula "15") (term "0"))
                              (rule "qeq_literals" (formula "15"))
                              (rule "true_left" (formula "15"))
                              (rule "applyEqRigid" (formula "2") (term "0") (ifseqformula "1"))
                              (rule "inEqSimp_homoInEq1" (formula "2"))
                              (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                              (rule "add_literals" (formula "2") (term "1,0"))
                              (rule "times_zero_1" (formula "2") (term "0"))
                              (rule "leq_literals" (formula "2"))
                              (rule "true_left" (formula "2"))
                              (rule "applyEqRigid" (formula "12") (term "0") (ifseqformula "1"))
                              (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "2"))
                              (rule "leq_literals" (formula "12") (term "0"))
                              (rule "concrete_or_1" (formula "12"))
                              (rule "true_left" (formula "12"))
                              (rule "allLeft" (formula "13") (inst "t=j_0"))
                              (rule "applyEqRigid" (formula "13") (term "0,1") (ifseqformula "10"))
                              (rule "inEqSimp_homoInEq0" (formula "13") (term "1"))
                              (rule "polySimp_pullOutFactor1" (formula "13") (term "0,1"))
                              (rule "add_literals" (formula "13") (term "1,0,1"))
                              (rule "times_zero_1" (formula "13") (term "0,1"))
                              (rule "qeq_literals" (formula "13") (term "1"))
                              (rule "concrete_or_3" (formula "13"))
                              (rule "true_left" (formula "13"))
                              (rule "allLeft" (formula "5") (inst "t=N_0"))
                              (rule "inEqSimp_homoInEq1" (formula "5") (term "1,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,1,0"))
                              (rule "add_literals" (formula "5") (term "1,1,0,1,0"))
                              (rule "times_zero_1" (formula "5") (term "1,0,1,0"))
                              (rule "add_zero_right" (formula "5") (term "0,1,0"))
                              (rule "leq_literals" (formula "5") (term "1,0"))
                              (rule "concrete_or_4" (formula "5") (term "0"))
                              (rule "applyEqRigid" (formula "5") (term "0,0,1") (ifseqformula "1"))
                              (rule "eqSymm" (formula "5") (term "0,1"))
                              (rule "inEqSimp_contradInEq1" (formula "5") (term "0") (ifseqformula "2"))
                              (rule "qeq_literals" (formula "5") (term "0,0"))
                              (rule "concrete_and_2" (formula "5") (term "0"))
                              (rule "concrete_or_2" (formula "5"))
                              (rule "notLeft" (formula "5"))
                              (rule "inEqSimp_strengthen0" (formula "7") (ifseqformula "16"))
                              (rule "inEqSimp_contradEq3" (formula "16") (ifseqformula "7"))
                              (rule "polySimp_mulComm0" (formula "16") (term "1,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0"))
                              (rule "add_literals" (formula "16") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "16") (term "1,0,0"))
                              (rule "add_zero_right" (formula "16") (term "0,0"))
                              (rule "qeq_literals" (formula "16") (term "0"))
                              (rule "concrete_and_2" (formula "16"))
                              (rule "false_right" (formula "16"))
                              (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "7"))
                              (rule "times_zero_1" (formula "6") (term "0,0"))
                              (rule "add_zero_left" (formula "6") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                              (rule "mul_literals" (formula "6") (term "1"))
                              (rule "allLeft" (formula "5") (inst "t=j_0"))
                              (rule "applyEq" (formula "5") (term "0,0,1") (ifseqformula "11"))
                              (rule "eqSymm" (formula "5") (term "0,1"))
                              (rule "inEqSimp_contradEq3" (formula "5") (term "0,1") (ifseqformula "8"))
                              (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,1"))
                              (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,0,1"))
                              (rule "add_literals" (formula "5") (term "1,1,0,0,0,1"))
                              (rule "times_zero_1" (formula "5") (term "1,0,0,0,1"))
                              (rule "add_zero_right" (formula "5") (term "0,0,0,1"))
                              (rule "qeq_literals" (formula "5") (term "0,0,1"))
                              (rule "concrete_and_2" (formula "5") (term "0,1"))
                              (rule "concrete_not_2" (formula "5") (term "1"))
                              (rule "concrete_or_3" (formula "5"))
                              (rule "true_left" (formula "5"))
                              (rule "allLeft" (formula "12") (inst "t=j_0"))
                              (rule "applyEq" (formula "12") (term "0,1") (ifseqformula "10"))
                              (rule "inEqSimp_subsumption1" (formula "12") (term "1") (ifseqformula "2"))
                              (rule "leq_literals" (formula "12") (term "0,1"))
                              (rule "concrete_or_1" (formula "12") (term "1"))
                              (rule "concrete_or_3" (formula "12"))
                              (rule "true_left" (formula "12"))
                              (rule "allLeft" (formula "11") (inst "t=j_0"))
                              (rule "applyEq" (formula "11") (term "1,0,1,0") (ifseqformula "10"))
                              (rule "inEqSimp_contradInEq1" (formula "11") (term "0,0,0,0") (ifseqformula "9"))
                              (rule "qeq_literals" (formula "11") (term "0,0,0,0,0"))
                              (rule "concrete_and_2" (formula "11") (term "0,0,0,0"))
                              (rule "concrete_or_2" (formula "11") (term "0,0,0"))
                              (rule "allLeft" (formula "8") (inst "t=N_0"))
                              (rule "eqSymm" (formula "8") (term "1,0"))
                              (rule "replace_known_left" (formula "8") (term "0,1") (ifseqformula "1"))
                              (rule "concrete_not_1" (formula "8") (term "1"))
                              (rule "concrete_or_4" (formula "8"))
                              (rule "inEqSimp_homoInEq1" (formula "8") (term "1,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,1,0"))
                              (rule "add_literals" (formula "8") (term "1,1,0,1,0"))
                              (rule "times_zero_1" (formula "8") (term "1,0,1,0"))
                              (rule "add_literals" (formula "8") (term "0,1,0"))
                              (rule "leq_literals" (formula "8") (term "1,0"))
                              (rule "concrete_or_4" (formula "8") (term "0"))
                              (rule "inEqSimp_contradEq3" (formula "8") (term "1") (ifseqformula "4"))
                              (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1"))
                              (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,1"))
                              (rule "add_literals" (formula "8") (term "1,1,0,0,1"))
                              (rule "times_zero_1" (formula "8") (term "1,0,0,1"))
                              (rule "add_zero_right" (formula "8") (term "0,0,1"))
                              (rule "qeq_literals" (formula "8") (term "0,1"))
                              (rule "concrete_and_2" (formula "8") (term "1"))
                              (rule "concrete_or_4" (formula "8"))
                              (rule "inEqSimp_contradInEq1" (formula "8") (ifseqformula "2"))
                              (rule "qeq_literals" (formula "8") (term "0"))
                              (rule "concrete_and_2" (formula "8"))
                              (rule "closeFalse" (formula "8"))
                           )
                           (branch "N_0 >= 1 FALSE"
                              (rule "add_zero_right" (formula "17") (term "1,1"))
                              (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "16"))
                              (rule "ifthenelse_false" (formula "2") (term "0"))
                              (rule "inEqSimp_geqRight" (formula "16"))
                              (rule "mul_literals" (formula "1") (term "1,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0"))
                              (rule "add_zero_left" (formula "1") (term "0"))
                              (rule "inEqSimp_homoInEq1" (formula "3"))
                              (rule "times_zero_2" (formula "3") (term "1,0"))
                              (rule "add_zero_right" (formula "3") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                              (rule "mul_literals" (formula "3") (term "1"))
                              (rule "inEqSimp_contradInEq1" (formula "3") (ifseqformula "8"))
                              (rule "qeq_literals" (formula "3") (term "0"))
                              (rule "concrete_and_2" (formula "3"))
                              (rule "closeFalse" (formula "3"))
                           )
                        )
                        (branch "v_iv_5 = j_0 FALSE"
                           (rule "replace_known_right" (formula "17") (term "0,1,0,1") (ifseqformula "16"))
                           (rule "ifthenelse_false" (formula "17") (term "1,0,1"))
                           (rule "ifthenelse_split" (formula "17") (term "1,1,1"))
                           (branch "N_0 >= 1 TRUE"
                              (rule "replace_known_left" (formula "3") (term "0,0") (ifseqformula "1"))
                              (rule "ifthenelse_true" (formula "3") (term "0"))
                              (rule "inEqSimp_homoInEq1" (formula "3"))
                              (rule "polySimp_addComm1" (formula "3") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                              (rule "polySimp_mulComm0" (formula "3") (term "1"))
                              (rule "polySimp_rightDist" (formula "3") (term "1"))
                              (rule "mul_literals" (formula "3") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                              (rule "replace_known_left" (formula "18") (term "0,0,1") (ifseqformula "3"))
                              (rule "ifthenelse_true" (formula "18") (term "0,1"))
                              (rule "replace_known_left" (formula "18") (term "0,0,0") (ifseqformula "3"))
                              (rule "ifthenelse_true" (formula "18") (term "0,0"))
                              (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "1"))
                              (rule "leq_literals" (formula "16") (term "0"))
                              (rule "concrete_or_1" (formula "16"))
                              (rule "true_left" (formula "16"))
                              (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "3"))
                              (rule "times_zero_1" (formula "2") (term "0,0"))
                              (rule "add_zero_left" (formula "2") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                              (rule "mul_literals" (formula "2") (term "1"))
                              (rule "allLeft" (formula "13") (inst "t=j_0"))
                              (rule "applyEqRigid" (formula "13") (term "0,1") (ifseqformula "10"))
                              (rule "inEqSimp_homoInEq0" (formula "13") (term "1"))
                              (rule "polySimp_pullOutFactor1" (formula "13") (term "0,1"))
                              (rule "add_literals" (formula "13") (term "1,0,1"))
                              (rule "times_zero_1" (formula "13") (term "0,1"))
                              (rule "qeq_literals" (formula "13") (term "1"))
                              (rule "concrete_or_3" (formula "13"))
                              (rule "true_left" (formula "13"))
                              (rule "allLeft" (formula "12") (inst "t=j_0"))
                              (rule "applyEqRigid" (formula "12") (term "0,1") (ifseqformula "10"))
                              (rule "inEqSimp_subsumption1" (formula "12") (term "1") (ifseqformula "1"))
                              (rule "leq_literals" (formula "12") (term "0,1"))
                              (rule "concrete_or_1" (formula "12") (term "1"))
                              (rule "concrete_or_3" (formula "12"))
                              (rule "true_left" (formula "12"))
                              (rule "allLeft" (formula "4") (inst "t=j_0"))
                              (rule "applyEqRigid" (formula "4") (term "0,0,1") (ifseqformula "11"))
                              (rule "eqSymm" (formula "4") (term "0,1"))
                              (rule "inEqSimp_contradInEq1" (formula "4") (term "0,0") (ifseqformula "9"))
                              (rule "qeq_literals" (formula "4") (term "0,0,0"))
                              (rule "concrete_and_2" (formula "4") (term "0,0"))
                              (rule "concrete_or_2" (formula "4") (term "0"))
                              (rule "inEqSimp_contradInEq0" (formula "4") (term "0") (ifseqformula "10"))
                              (rule "inEqSimp_homoInEq1" (formula "4") (term "0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,0"))
                              (rule "add_literals" (formula "4") (term "1,1,0,0,0"))
                              (rule "times_zero_1" (formula "4") (term "1,0,0,0"))
                              (rule "add_zero_right" (formula "4") (term "0,0,0"))
                              (rule "leq_literals" (formula "4") (term "0,0"))
                              (rule "concrete_and_2" (formula "4") (term "0"))
                              (rule "concrete_or_2" (formula "4"))
                              (rule "notLeft" (formula "4"))
                              (rule "inEqSimp_strengthen0" (formula "6") (ifseqformula "16"))
                              (rule "inEqSimp_contradEq3" (formula "16") (ifseqformula "6"))
                              (rule "polySimp_mulComm0" (formula "16") (term "1,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0"))
                              (rule "add_literals" (formula "16") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "16") (term "1,0,0"))
                              (rule "add_zero_right" (formula "16") (term "0,0"))
                              (rule "qeq_literals" (formula "16") (term "0"))
                              (rule "concrete_and_2" (formula "16"))
                              (rule "false_right" (formula "16"))
                              (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "6"))
                              (rule "times_zero_1" (formula "5") (term "0,0"))
                              (rule "add_zero_left" (formula "5") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                              (rule "mul_literals" (formula "5") (term "1"))
                              (rule "allLeft" (formula "13") (inst "t=v_iv_5"))
                              (rule "inEqSimp_contradInEq1" (formula "13") (term "0,0") (ifseqformula "2"))
                              (rule "qeq_literals" (formula "13") (term "0,0,0"))
                              (rule "concrete_and_2" (formula "13") (term "0,0"))
                              (rule "concrete_or_2" (formula "13") (term "0"))
                              (rule "inEqSimp_contradInEq0" (formula "13") (term "0") (ifseqformula "3"))
                              (rule "inEqSimp_homoInEq1" (formula "13") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "13") (term "0,1,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "13") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "13") (term "0,0,0,0"))
                              (rule "add_literals" (formula "13") (term "0,0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0,0"))
                              (rule "add_literals" (formula "13") (term "1,1,0,0,0"))
                              (rule "times_zero_1" (formula "13") (term "1,0,0,0"))
                              (rule "add_literals" (formula "13") (term "0,0,0"))
                              (rule "leq_literals" (formula "13") (term "0,0"))
                              (rule "concrete_and_2" (formula "13") (term "0"))
                              (rule "concrete_or_2" (formula "13"))
                              (rule "cut_direct" (formula "18") (term "0"))
                              (branch "CUT: (int)s_1[v_iv_5] >= 0 TRUE"
                                 (rule "concrete_and_1" (formula "19"))
                                 (rule "inEqSimp_leqRight" (formula "19"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                 (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                 (rule "polySimp_elimOne" (formula "1") (term "1"))
                                 (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "15"))
                                 (rule "applyEq" (formula "3") (term "0") (ifseqformula "1"))
                                 (rule "applyEqRigid" (formula "2") (term "0") (ifseqformula "1"))
                                 (rule "inEqSimp_homoInEq1" (formula "2"))
                                 (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                                 (rule "add_literals" (formula "2") (term "1,0"))
                                 (rule "times_zero_1" (formula "2") (term "0"))
                                 (rule "leq_literals" (formula "2"))
                                 (rule "true_left" (formula "2"))
                                 (rule "applyEq" (formula "15") (term "0") (ifseqformula "1"))
                                 (rule "inEqSimp_homoInEq0" (formula "15"))
                                 (rule "polySimp_pullOutFactor1" (formula "15") (term "0"))
                                 (rule "add_literals" (formula "15") (term "1,0"))
                                 (rule "times_zero_1" (formula "15") (term "0"))
                                 (rule "qeq_literals" (formula "15"))
                                 (rule "true_left" (formula "15"))
                                 (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "3"))
                                 (rule "leq_literals" (formula "2") (term "0"))
                                 (rule "concrete_or_1" (formula "2"))
                                 (rule "true_left" (formula "2"))
                                 (rule "allLeft" (formula "13") (inst "t=v_iv_5"))
                                 (rule "applyEqRigid" (formula "13") (term "0,1") (ifseqformula "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "13") (term "0,0") (ifseqformula "3"))
                                 (rule "qeq_literals" (formula "13") (term "0,0,0"))
                                 (rule "concrete_and_2" (formula "13") (term "0,0"))
                                 (rule "concrete_or_2" (formula "13") (term "0"))
                                 (rule "inEqSimp_subsumption1" (formula "13") (term "1") (ifseqformula "2"))
                                 (rule "leq_literals" (formula "13") (term "0,1"))
                                 (rule "concrete_or_1" (formula "13") (term "1"))
                                 (rule "concrete_or_3" (formula "13"))
                                 (rule "true_left" (formula "13"))
                                 (rule "allLeft" (formula "5") (inst "t=v_iv_5"))
                                 (rule "applyEqRigid" (formula "5") (term "0,0,1") (ifseqformula "1"))
                                 (rule "eqSymm" (formula "5") (term "0,1"))
                                 (rule "inEqSimp_contradEq3" (formula "5") (term "0,1") (ifseqformula "8"))
                                 (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,0,1"))
                                 (rule "add_literals" (formula "5") (term "1,1,0,0,0,1"))
                                 (rule "times_zero_1" (formula "5") (term "1,0,0,0,1"))
                                 (rule "add_zero_right" (formula "5") (term "0,0,0,1"))
                                 (rule "qeq_literals" (formula "5") (term "0,0,1"))
                                 (rule "concrete_and_2" (formula "5") (term "0,1"))
                                 (rule "concrete_not_2" (formula "5") (term "1"))
                                 (rule "concrete_or_3" (formula "5"))
                                 (rule "true_left" (formula "5"))
                                 (rule "allLeft" (formula "8") (inst "t=v_iv_5"))
                                 (rule "replace_known_left" (formula "8") (term "0,1") (ifseqformula "1"))
                                 (rule "concrete_not_1" (formula "8") (term "1"))
                                 (rule "concrete_or_4" (formula "8"))
                                 (rule "replace_known_right" (formula "8") (term "1") (ifseqformula "18"))
                                 (rule "concrete_or_4" (formula "8"))
                                 (rule "inEqSimp_contradInEq0" (formula "8") (term "1") (ifseqformula "4"))
                                 (rule "inEqSimp_homoInEq1" (formula "8") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "8") (term "1,0,0,1"))
                                 (rule "mul_literals" (formula "8") (term "0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "8") (term "0,0,1"))
                                 (rule "polySimp_addComm1" (formula "8") (term "0,0,0,1"))
                                 (rule "add_literals" (formula "8") (term "0,0,0,0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,1"))
                                 (rule "add_literals" (formula "8") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "8") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "8") (term "0,0,1"))
                                 (rule "leq_literals" (formula "8") (term "0,1"))
                                 (rule "concrete_and_2" (formula "8") (term "1"))
                                 (rule "concrete_or_4" (formula "8"))
                                 (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "8"))
                                 (rule "qeq_literals" (formula "3") (term "0"))
                                 (rule "concrete_and_2" (formula "3"))
                                 (rule "closeFalse" (formula "3"))
                              )
                              (branch "CUT: (int)s_1[v_iv_5] >= 0 FALSE"
                                 (rule "concrete_and_2" (formula "19"))
                                 (rule "false_right" (formula "19"))
                                 (rule "inEqSimp_geqRight" (formula "18"))
                                 (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                 (rule "mul_literals" (formula "1") (term "1"))
                                 (rule "allLeft" (formula "13") (inst "t=v_iv_5"))
                                 (rule "inEqSimp_contradInEq0" (formula "13") (term "1,0") (ifseqformula "4"))
                                 (rule "inEqSimp_homoInEq1" (formula "13") (term "0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0"))
                                 (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0"))
                                 (rule "polySimp_addComm1" (formula "13") (term "0,0,0,1,0"))
                                 (rule "add_literals" (formula "13") (term "0,0,0,0,1,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0,1,0"))
                                 (rule "add_literals" (formula "13") (term "1,1,0,0,1,0"))
                                 (rule "times_zero_1" (formula "13") (term "1,0,0,1,0"))
                                 (rule "add_zero_right" (formula "13") (term "0,0,1,0"))
                                 (rule "leq_literals" (formula "13") (term "0,1,0"))
                                 (rule "concrete_and_2" (formula "13") (term "1,0"))
                                 (rule "concrete_or_4" (formula "13") (term "0"))
                                 (rule "inEqSimp_contradInEq0" (formula "13") (term "1") (ifseqformula "1"))
                                 (rule "qeq_literals" (formula "13") (term "0,1"))
                                 (rule "concrete_and_2" (formula "13") (term "1"))
                                 (rule "concrete_or_4" (formula "13"))
                                 (rule "inEqSimp_contradInEq1" (formula "13") (ifseqformula "3"))
                                 (rule "qeq_literals" (formula "13") (term "0"))
                                 (rule "concrete_and_2" (formula "13"))
                                 (rule "closeFalse" (formula "13"))
                              )
                           )
                           (branch "N_0 >= 1 FALSE"
                              (rule "add_zero_right" (formula "18") (term "1,1"))
                              (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "17"))
                              (rule "ifthenelse_false" (formula "2") (term "0"))
                              (rule "inEqSimp_geqRight" (formula "17"))
                              (rule "mul_literals" (formula "1") (term "1,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0"))
                              (rule "add_zero_left" (formula "1") (term "0"))
                              (rule "inEqSimp_homoInEq1" (formula "3"))
                              (rule "times_zero_2" (formula "3") (term "1,0"))
                              (rule "add_zero_right" (formula "3") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                              (rule "mul_literals" (formula "3") (term "1"))
                              (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "3"))
                              (rule "qeq_literals" (formula "2") (term "0"))
                              (rule "concrete_and_2" (formula "2"))
                              (rule "closeFalse" (formula "2"))
                           )
                        )
                     )
                  )
                  (branch "Case 2"
                     (rule "allRight" (formula "14") (inst "sk=v_iv_4"))
                     (rule "orRight" (formula "14"))
                     (rule "orRight" (formula "14"))
                     (rule "inEqSimp_geqRight" (formula "15"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                     (rule "inEqSimp_leqRight" (formula "15"))
                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0"))
                     (rule "add_zero_left" (formula "1") (term "0"))
                     (rule "replace_known_left" (formula "16") (term "0,0,0,0") (ifseqformula "1"))
                     (rule "concrete_and_1" (formula "16") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "2") (term "0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                     (rule "polySimp_elimOne" (formula "2") (term "0"))
                     (rule "ifthenelse_split" (formula "16") (term "1,0,0"))
                     (branch "v_iv_4 = j_0 TRUE"
                        (rule "applyEqRigid" (formula "3") (term "1,1") (ifseqformula "1"))
                        (rule "applyEqRigid" (formula "2") (term "0") (ifseqformula "1"))
                        (rule "applyEqRigid" (formula "16") (term "0,0,0,0") (ifseqformula "1"))
                        (rule "allLeft" (formula "3") (inst "t=N_0"))
                        (rule "inEqSimp_homoInEq1" (formula "3") (term "1,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,1,0"))
                        (rule "add_literals" (formula "3") (term "1,1,0,1,0"))
                        (rule "times_zero_1" (formula "3") (term "1,0,1,0"))
                        (rule "add_literals" (formula "3") (term "0,1,0"))
                        (rule "leq_literals" (formula "3") (term "1,0"))
                        (rule "concrete_or_4" (formula "3") (term "0"))
                        (rule "inEqSimp_contradInEq1" (formula "3") (term "0") (ifseqformula "16"))
                        (rule "qeq_literals" (formula "3") (term "0,0"))
                        (rule "concrete_and_2" (formula "3") (term "0"))
                        (rule "concrete_or_2" (formula "3"))
                        (rule "notLeft" (formula "3"))
                        (rule "allLeft" (formula "12") (inst "t=N_0"))
                        (rule "inEqSimp_homoInEq1" (formula "12") (term "1,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,1,0"))
                        (rule "add_literals" (formula "12") (term "1,1,0,1,0"))
                        (rule "times_zero_1" (formula "12") (term "1,0,1,0"))
                        (rule "add_zero_right" (formula "12") (term "0,1,0"))
                        (rule "leq_literals" (formula "12") (term "1,0"))
                        (rule "concrete_or_4" (formula "12") (term "0"))
                        (rule "inEqSimp_contradInEq1" (formula "12") (term "0") (ifseqformula "16"))
                        (rule "qeq_literals" (formula "12") (term "0,0"))
                        (rule "concrete_and_2" (formula "12") (term "0"))
                        (rule "concrete_or_2" (formula "12"))
                        (rule "allLeft" (formula "11") (inst "t=N_0"))
                        (rule "inEqSimp_homoInEq1" (formula "11") (term "1,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,1,0"))
                        (rule "add_literals" (formula "11") (term "1,1,0,1,0"))
                        (rule "times_zero_1" (formula "11") (term "1,0,1,0"))
                        (rule "add_zero_right" (formula "11") (term "0,1,0"))
                        (rule "leq_literals" (formula "11") (term "1,0"))
                        (rule "concrete_or_4" (formula "11") (term "0"))
                        (rule "inEqSimp_contradInEq1" (formula "11") (term "0") (ifseqformula "17"))
                        (rule "qeq_literals" (formula "11") (term "0,0"))
                        (rule "concrete_and_2" (formula "11") (term "0"))
                        (rule "concrete_or_2" (formula "11"))
                        (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "13"))
                        (rule "times_zero_1" (formula "11") (term "0,0"))
                        (rule "add_zero_left" (formula "11") (term "0"))
                        (rule "allLeft" (formula "3") (inst "t=j_0"))
                        (rule "applyEqRigid" (formula "3") (term "0,0,1") (ifseqformula "10"))
                        (rule "eqSymm" (formula "3") (term "0,1"))
                        (rule "inEqSimp_contradInEq1" (formula "3") (term "0,0") (ifseqformula "8"))
                        (rule "qeq_literals" (formula "3") (term "0,0,0"))
                        (rule "concrete_and_2" (formula "3") (term "0,0"))
                        (rule "concrete_or_2" (formula "3") (term "0"))
                        (rule "inEqSimp_contradInEq0" (formula "3") (term "0") (ifseqformula "9"))
                        (rule "inEqSimp_homoInEq1" (formula "3") (term "0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0,0"))
                        (rule "add_literals" (formula "3") (term "1,1,0,0,0"))
                        (rule "times_zero_1" (formula "3") (term "1,0,0,0"))
                        (rule "add_zero_right" (formula "3") (term "0,0,0"))
                        (rule "leq_literals" (formula "3") (term "0,0"))
                        (rule "concrete_and_2" (formula "3") (term "0"))
                        (rule "concrete_or_2" (formula "3"))
                        (rule "notLeft" (formula "3"))
                        (rule "inEqSimp_strengthen0" (formula "5") (ifseqformula "18"))
                        (rule "inEqSimp_contradEq3" (formula "18") (ifseqformula "5"))
                        (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0"))
                        (rule "add_literals" (formula "18") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "18") (term "1,0,0"))
                        (rule "add_literals" (formula "18") (term "0,0"))
                        (rule "qeq_literals" (formula "18") (term "0"))
                        (rule "concrete_and_2" (formula "18"))
                        (rule "false_right" (formula "18"))
                        (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "5"))
                        (rule "times_zero_1" (formula "4") (term "0,0"))
                        (rule "add_zero_left" (formula "4") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                        (rule "mul_literals" (formula "4") (term "1"))
                        (rule "replace_known_left" (formula "2") (term "0,0") (ifseqformula "4"))
                        (rule "ifthenelse_true" (formula "2") (term "0"))
                        (rule "inEqSimp_homoInEq1" (formula "2"))
                        (rule "polySimp_addComm1" (formula "2") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                        (rule "polySimp_mulComm0" (formula "2") (term "1"))
                        (rule "polySimp_rightDist" (formula "2") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                        (rule "mul_literals" (formula "2") (term "0,1"))
                        (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                        (rule "replace_known_left" (formula "20") (term "0,0,0") (ifseqformula "2"))
                        (rule "ifthenelse_true" (formula "20") (term "0,0"))
                        (rule "instanceof_static_type" (formula "20") (term "0"))
                        (rule "boolean_equal" (formula "20"))
                        (rule "closeTrue" (formula "20"))
                     )
                     (branch "v_iv_4 = j_0 FALSE"
                        (rule "allLeft" (formula "12") (inst "t=j_0"))
                        (rule "applyEq" (formula "12") (term "0,1") (ifseqformula "9"))
                        (rule "inEqSimp_homoInEq0" (formula "12") (term "1"))
                        (rule "polySimp_pullOutFactor1" (formula "12") (term "0,1"))
                        (rule "add_literals" (formula "12") (term "1,0,1"))
                        (rule "times_zero_1" (formula "12") (term "0,1"))
                        (rule "qeq_literals" (formula "12") (term "1"))
                        (rule "concrete_or_3" (formula "12"))
                        (rule "true_left" (formula "12"))
                        (rule "allLeft" (formula "11") (inst "t=j_0"))
                        (rule "applyEq" (formula "11") (term "0,1") (ifseqformula "9"))
                        (rule "replace_known_left" (formula "11") (term "1") (ifseqformula "16"))
                        (rule "concrete_or_3" (formula "11"))
                        (rule "true_left" (formula "11"))
                        (rule "allLeft" (formula "3") (inst "t=j_0"))
                        (rule "applyEqRigid" (formula "3") (term "0,0,1") (ifseqformula "10"))
                        (rule "eqSymm" (formula "3") (term "0,1"))
                        (rule "inEqSimp_contradInEq0" (formula "3") (term "1,0") (ifseqformula "9"))
                        (rule "inEqSimp_homoInEq1" (formula "3") (term "0,1,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0,1,0"))
                        (rule "add_literals" (formula "3") (term "1,1,0,0,1,0"))
                        (rule "times_zero_1" (formula "3") (term "1,0,0,1,0"))
                        (rule "add_zero_right" (formula "3") (term "0,0,1,0"))
                        (rule "leq_literals" (formula "3") (term "0,1,0"))
                        (rule "concrete_and_2" (formula "3") (term "1,0"))
                        (rule "concrete_or_4" (formula "3") (term "0"))
                        (rule "inEqSimp_contradInEq1" (formula "3") (term "0") (ifseqformula "8"))
                        (rule "qeq_literals" (formula "3") (term "0,0"))
                        (rule "concrete_and_2" (formula "3") (term "0"))
                        (rule "concrete_or_2" (formula "3"))
                        (rule "notLeft" (formula "3"))
                        (rule "inEqSimp_strengthen0" (formula "5") (ifseqformula "16"))
                        (rule "inEqSimp_contradEq3" (formula "16") (ifseqformula "5"))
                        (rule "polySimp_mulComm0" (formula "16") (term "1,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0"))
                        (rule "add_literals" (formula "16") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "16") (term "1,0,0"))
                        (rule "add_zero_right" (formula "16") (term "0,0"))
                        (rule "qeq_literals" (formula "16") (term "0"))
                        (rule "concrete_and_2" (formula "16"))
                        (rule "false_right" (formula "16"))
                        (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "5"))
                        (rule "times_zero_1" (formula "4") (term "0,0"))
                        (rule "add_zero_left" (formula "4") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                        (rule "mul_literals" (formula "4") (term "1"))
                        (rule "replace_known_left" (formula "2") (term "0,0") (ifseqformula "4"))
                        (rule "ifthenelse_true" (formula "2") (term "0"))
                        (rule "inEqSimp_homoInEq1" (formula "2"))
                        (rule "polySimp_addComm1" (formula "2") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                        (rule "polySimp_mulComm0" (formula "2") (term "1"))
                        (rule "polySimp_rightDist" (formula "2") (term "1"))
                        (rule "mul_literals" (formula "2") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                        (rule "replace_known_left" (formula "18") (term "0,0,0") (ifseqformula "2"))
                        (rule "ifthenelse_true" (formula "18") (term "0,0"))
                        (rule "instanceof_static_type" (formula "18") (term "0"))
                        (rule "boolean_equal" (formula "18"))
                        (rule "closeTrue" (formula "18"))
                     )
                  )
               )
               (branch "Case 2"
                  (rule "lenOfSeqDef" (formula "8") (term "1,1,0,0,1,0") (userinteraction))
                  (rule "ifthenelse_split" (formula "8") (term "1,1,0,0,1,0") (userinteraction))
                  (branch "0 < N_0 TRUE"
                     (rule "lenOfSeqDef" (formula "9") (term "1,1,0,0") (userinteraction))
                     (rule "ifthenelse_split" (formula "9") (term "1,1,0,0") (userinteraction))
                     (branch "0 < N_0 TRUE"
                        (rule "allRight" (formula "10") (inst "sk=iv_11") (userinteraction))
                        (rule "impRight" (formula "10") (userinteraction))
                        (rule "allLeftHide" (formula "10") (inst "t=iv_11") (userinteraction))
                        (rule "impLeft" (formula "10") (userinteraction))
                        (branch "Case 1"
                           (rule "andLeft" (formula "1"))
                           (rule "andLeft" (formula "4"))
                           (rule "andLeft" (formula "4"))
                           (rule "eqSymm" (formula "7") (term "0,1,0,0"))
                           (rule "replace_known_left" (formula "13") (term "0") (ifseqformula "1"))
                           (rule "concrete_and_1" (formula "13"))
                           (rule "polySimp_elimSub" (formula "13") (term "1"))
                           (rule "times_zero_2" (formula "13") (term "1,1"))
                           (rule "add_zero_right" (formula "13") (term "1"))
                           (rule "inEqSimp_ltRight" (formula "13"))
                           (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "9") (term "1,1,0"))
                           (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "13"))
                           (rule "add_zero_right" (formula "13") (term "0"))
                           (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "4") (term "1,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "3"))
                           (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
                           (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,1,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "6"))
                           (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                           (rule "polySimp_addComm0" (formula "11") (term "1"))
                           (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "9") (term "0,1,0"))
                           (rule "inEqSimp_commuteLeq" (formula "4") (term "0,0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "2"))
                           (rule "inEqSimp_commuteLeq" (formula "5"))
                           (rule "polySimp_addComm1" (formula "8") (term "0,1,0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "3") (term "0"))
                           (rule "polySimp_addComm1" (formula "6") (term "0"))
                           (rule "applyEq" (formula "3") (term "0,1,0") (ifseqformula "11"))
                           (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                           (rule "mul_literals" (formula "3") (term "0,1,0"))
                           (rule "polySimp_addComm1" (formula "3") (term "0"))
                           (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                           (rule "add_literals" (formula "3") (term "0,0,0"))
                           (rule "add_zero_left" (formula "3") (term "0,0"))
                           (rule "applyEq" (formula "6") (term "0,1,0") (ifseqformula "11"))
                           (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                           (rule "mul_literals" (formula "6") (term "0,1,0"))
                           (rule "polySimp_addComm1" (formula "6") (term "0"))
                           (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                           (rule "add_literals" (formula "6") (term "0,0,0"))
                           (rule "add_zero_left" (formula "6") (term "0,0"))
                           (rule "applyEqRigid" (formula "8") (term "0,1,0,0,1,0,0,0") (ifseqformula "11"))
                           (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,0,0,0"))
                           (rule "mul_literals" (formula "8") (term "0,1,0,0,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0,0,0"))
                           (rule "add_literals" (formula "8") (term "0,0,0,1,0,0,0"))
                           (rule "add_zero_left" (formula "8") (term "0,0,1,0,0,0"))
                           (rule "applyEqRigid" (formula "14") (term "0,1,0,0,1,0,0") (ifseqformula "11"))
                           (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
                           (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "14") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "14") (term "0,0,1,0,0"))
                           (rule "applyEq" (formula "9") (term "0,1,0,0,1,1,0") (ifseqformula "11"))
                           (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,1,0"))
                           (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,1,0"))
                           (rule "mul_literals" (formula "9") (term "0,1,0,0,1,1,0"))
                           (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,1,0"))
                           (rule "add_literals" (formula "9") (term "0,0,0,1,1,0"))
                           (rule "add_zero_left" (formula "9") (term "0,0,1,1,0"))
                           (rule "applyEq" (formula "10") (term "0,1,0,0,1,0,0") (ifseqformula "11"))
                           (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
                           (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "10") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "10") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "10") (term "0,0,1,0,0"))
                           (rule "applyEqRigid" (formula "4") (term "0,1,0,0,1,0,0,0") (ifseqformula "11"))
                           (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "4") (term "1,0,0,1,0,0,0"))
                           (rule "mul_literals" (formula "4") (term "0,1,0,0,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "4") (term "0,0,1,0,0,0"))
                           (rule "add_literals" (formula "4") (term "0,0,0,1,0,0,0"))
                           (rule "add_zero_left" (formula "4") (term "0,0,1,0,0,0"))
                           (rule "applyEq" (formula "9") (term "0,1,0,0,1,0,0") (ifseqformula "11"))
                           (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
                           (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "9") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "9") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "9") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                           (rule "polySimp_elimOne" (formula "1") (term "1"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "13"))
                           (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                           (rule "polySimp_elimOne" (formula "13") (term "0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "8") (term "1,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "8") (term "0,1,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "8") (term "0,1,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1"))
                           (rule "polySimp_elimOne" (formula "3") (term "1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                           (rule "polySimp_mulLiterals" (formula "6") (term "1"))
                           (rule "polySimp_elimOne" (formula "6") (term "1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0"))
                           (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "4") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "4") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0"))
                           (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "13"))
                           (rule "leq_literals" (formula "12") (term "0"))
                           (rule "concrete_or_1" (formula "12"))
                           (rule "true_left" (formula "12"))
                           (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "3"))
                           (rule "applyEqRigid" (formula "3") (term "0") (ifseqformula "1"))
                           (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                           (rule "inEqSimp_homoInEq1" (formula "2"))
                           (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                           (rule "add_literals" (formula "2") (term "1,0"))
                           (rule "times_zero_1" (formula "2") (term "0"))
                           (rule "leq_literals" (formula "2"))
                           (rule "true_left" (formula "2"))
                           (rule "applyEqRigid" (formula "3") (term "0") (ifseqformula "1"))
                           (rule "inEqSimp_homoInEq0" (formula "3"))
                           (rule "polySimp_pullOutFactor1" (formula "3") (term "0"))
                           (rule "add_literals" (formula "3") (term "1,0"))
                           (rule "times_zero_1" (formula "3") (term "0"))
                           (rule "qeq_literals" (formula "3"))
                           (rule "true_left" (formula "3"))
                           (rule "applyEqRigid" (formula "12") (term "1,1,0") (ifseqformula "1"))
                           (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "11"))
                           (rule "leq_literals" (formula "2") (term "0"))
                           (rule "concrete_or_1" (formula "2"))
                           (rule "true_left" (formula "2"))
                           (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "4"))
                           (rule "times_zero_1" (formula "3") (term "0,0"))
                           (rule "add_zero_left" (formula "3") (term "0"))
                           (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "11"))
                           (rule "leq_literals" (formula "3") (term "0"))
                           (rule "concrete_or_1" (formula "3"))
                           (rule "true_left" (formula "3"))
                           (rule "nnf_ex2all" (formula "11"))
                           (rule "nnf_imp2or" (formula "9") (term "0"))
                           (rule "nnf_imp2or" (formula "7") (term "0,0"))
                           (rule "nnf_imp2or" (formula "3") (term "0"))
                           (rule "nnf_imp2or" (formula "8") (term "0"))
                           (rule "nnf_notAnd" (formula "1") (term "0"))
                           (rule "nnf_notAnd" (formula "9") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "9") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0"))
                           (rule "mul_literals" (formula "9") (term "0,1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0"))
                           (rule "inEqSimp_notGeq" (formula "9") (term "0,0,0"))
                           (rule "times_zero_1" (formula "9") (term "1,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "9") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0"))
                           (rule "mul_literals" (formula "9") (term "1,0,0,0"))
                           (rule "nnf_notAnd" (formula "3") (term "0,0"))
                           (rule "double_not" (formula "3") (term "1,0,0"))
                           (rule "nnf_notAnd" (formula "8") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "8") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "8") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "8") (term "1,1,0,0"))
                           (rule "mul_literals" (formula "8") (term "0,1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "8") (term "1,1,1,0,0"))
                           (rule "inEqSimp_notGeq" (formula "8") (term "0,0,0"))
                           (rule "times_zero_1" (formula "8") (term "1,0,0,0,0,0"))
                           (rule "add_literals" (formula "8") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0"))
                           (rule "mul_literals" (formula "8") (term "1,0,0,0"))
                           (rule "nnf_notAnd" (formula "1") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                           (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                           (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0"))
                           (rule "mul_literals" (formula "1") (term "0,1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0,0"))
                           (rule "nnf_notAnd" (formula "7") (term "0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "7") (term "1,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "7") (term "1,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "7") (term "1,1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "7") (term "1,1,0,0,0"))
                           (rule "mul_literals" (formula "7") (term "0,1,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "7") (term "1,1,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "7") (term "1,1,1,0,0,0"))
                           (rule "nnf_notAnd" (formula "3") (term "0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "3") (term "1,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "3") (term "1,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "3") (term "1,1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "3") (term "1,1,0,0,0"))
                           (rule "mul_literals" (formula "3") (term "0,1,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1,1,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "3") (term "1,1,1,0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "3") (term "0,0,0,0"))
                           (rule "times_zero_1" (formula "3") (term "1,0,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "3") (term "0,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "0,0,0,0"))
                           (rule "mul_literals" (formula "3") (term "1,0,0,0,0"))
                           (rule "nnf_notAnd" (formula "7") (term "0,0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "7") (term "0,0,0,0,0"))
                           (rule "times_zero_1" (formula "7") (term "1,0,0,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "7") (term "0,0,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0,0,0,0"))
                           (rule "mul_literals" (formula "7") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "7") (term "1,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "7") (term "1,0,0,1,0,0,0,0"))
                           (rule "mul_literals" (formula "7") (term "0,1,0,0,1,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "7") (term "0,0,1,0,0,0,0"))
                           (rule "add_literals" (formula "7") (term "0,0,0,1,0,0,0,0"))
                           (rule "add_zero_left" (formula "7") (term "0,0,1,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "7") (term "1,1,0,0,0,0"))
                           (rule "cnf_rightDist" (formula "8") (term "0"))
                           (rule "distr_forallAnd" (formula "8"))
                           (rule "andLeft" (formula "8"))
                           (rule "commute_or" (formula "9") (term "0"))
                           (rule "commute_or_2" (formula "7") (term "0,0,0"))
                           (rule "lenNonNegative" (formula "11") (term "0"))
                           (rule "inEqSimp_commuteLeq" (formula "11"))
                           (rule "applyEqRigid" (formula "11") (term "0") (ifseqformula "12"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                           (rule "mul_literals" (formula "11") (term "1"))
                           (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "13"))
                           (rule "leq_literals" (formula "11") (term "0"))
                           (rule "concrete_or_1" (formula "11"))
                           (rule "true_left" (formula "11"))
                           (rule "allLeft" (formula "1") (inst "t=j_0"))
                           (rule "replace_known_left" (formula "1") (term "0,1") (ifseqformula "7"))
                           (rule "concrete_not_1" (formula "1") (term "1"))
                           (rule "concrete_or_4" (formula "1"))
                           (rule "inEqSimp_contradInEq0" (formula "1") (term "1") (ifseqformula "6"))
                           (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1"))
                           (rule "add_literals" (formula "1") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "1") (term "0,0,1"))
                           (rule "leq_literals" (formula "1") (term "0,1"))
                           (rule "concrete_and_2" (formula "1") (term "1"))
                           (rule "concrete_or_4" (formula "1"))
                           (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "5"))
                           (rule "qeq_literals" (formula "1") (term "0"))
                           (rule "concrete_and_2" (formula "1"))
                           (rule "closeFalse" (formula "1"))
                        )
                        (branch "Case 2"
                           (rule "exLeft" (formula "10") (inst "sk=jv_2") (userinteraction))
                           (rule "andLeft" (formula "1"))
                           (rule "andLeft" (formula "4"))
                           (rule "andLeft" (formula "12"))
                           (rule "andLeft" (formula "4"))
                           (rule "andLeft" (formula "13"))
                           (rule "eqSymm" (formula "7") (term "0,1,0,0"))
                           (rule "polySimp_elimSub" (formula "14") (term "1"))
                           (rule "times_zero_2" (formula "14") (term "1,1"))
                           (rule "add_zero_right" (formula "14") (term "1"))
                           (rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "12"))
                           (rule "add_zero_right" (formula "12") (term "0"))
                           (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "7") (term "1,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "3") (term "1,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "8") (term "1,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "7") (term "1,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "2"))
                           (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
                           (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "5"))
                           (rule "inEqSimp_ltToLeq" (formula "14"))
                           (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
                           (rule "polySimp_addComm0" (formula "10") (term "1"))
                           (rule "polySimp_addComm1" (formula "7") (term "0,1,0,0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "3") (term "0,0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "8") (term "0,1,0"))
                           (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "7") (term "0,0,0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "1"))
                           (rule "inEqSimp_commuteLeq" (formula "4"))
                           (rule "inEqSimp_commuteLeq" (formula "13"))
                           (rule "polySimp_addComm1" (formula "2") (term "0"))
                           (rule "polySimp_addComm1" (formula "5") (term "0"))
                           (rule "getOfSeqDef" (formula "15") (term "0"))
                           (rule "castDel" (formula "15") (term "1,0"))
                           (rule "add_zero_right" (formula "15") (term "1,2,1,0"))
                           (rule "add_zero_right" (formula "15") (term "0,0,1,0"))
                           (rule "polySimp_elimSub" (formula "15") (term "1,1,0,0"))
                           (rule "times_zero_2" (formula "15") (term "1,1,1,0,0"))
                           (rule "add_zero_right" (formula "15") (term "1,1,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
                           (rule "replace_known_left" (formula "15") (term "1,0,0") (ifseqformula "14"))
                           (rule "concrete_and_3" (formula "15") (term "0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0"))
                           (rule "replace_known_left" (formula "15") (term "0,0") (ifseqformula "13"))
                           (rule "ifthenelse_true" (formula "15") (term "0"))
                           (rule "applyEqRigid" (formula "2") (term "0,1,0") (ifseqformula "10"))
                           (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                           (rule "mul_literals" (formula "2") (term "0,1,0"))
                           (rule "polySimp_addComm1" (formula "2") (term "0"))
                           (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                           (rule "add_literals" (formula "2") (term "0,0,0"))
                           (rule "add_zero_left" (formula "2") (term "0,0"))
                           (rule "applyEq" (formula "5") (term "0,1,0") (ifseqformula "10"))
                           (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                           (rule "mul_literals" (formula "5") (term "0,1,0"))
                           (rule "polySimp_addComm1" (formula "5") (term "0"))
                           (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                           (rule "add_literals" (formula "5") (term "0,0,0"))
                           (rule "add_zero_left" (formula "5") (term "0,0"))
                           (rule "applyEq" (formula "8") (term "0,1,0,0,1,1,0") (ifseqformula "10"))
                           (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,1,0"))
                           (rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,1,0"))
                           (rule "mul_literals" (formula "8") (term "0,1,0,0,1,1,0"))
                           (rule "polySimp_addAssoc" (formula "8") (term "0,0,1,1,0"))
                           (rule "add_literals" (formula "8") (term "0,0,0,1,1,0"))
                           (rule "add_zero_left" (formula "8") (term "0,0,1,1,0"))
                           (rule "applyEqRigid" (formula "16") (term "0,1,0,0,1,0,0") (ifseqformula "10"))
                           (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
                           (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "16") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "16") (term "0,0,1,0,0"))
                           (rule "applyEqRigid" (formula "8") (term "0,1,0,0,1,0,0") (ifseqformula "10"))
                           (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0"))
                           (rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "8") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "8") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "8") (term "0,0,1,0,0"))
                           (rule "applyEqRigid" (formula "7") (term "0,1,0,0,1,0,0,0") (ifseqformula "10"))
                           (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "7") (term "1,0,0,1,0,0,0"))
                           (rule "mul_literals" (formula "7") (term "0,1,0,0,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "7") (term "0,0,1,0,0,0"))
                           (rule "add_literals" (formula "7") (term "0,0,0,1,0,0,0"))
                           (rule "add_zero_left" (formula "7") (term "0,0,1,0,0,0"))
                           (rule "applyEqRigid" (formula "9") (term "0,1,0,0,1,0,0") (ifseqformula "10"))
                           (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
                           (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "9") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "9") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "9") (term "0,0,1,0,0"))
                           (rule "applyEqRigid" (formula "3") (term "0,1,0,0,1,0,0,0") (ifseqformula "10"))
                           (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "3") (term "1,0,0,1,0,0,0"))
                           (rule "mul_literals" (formula "3") (term "0,1,0,0,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "3") (term "0,0,1,0,0,0"))
                           (rule "add_literals" (formula "3") (term "0,0,0,1,0,0,0"))
                           (rule "add_zero_left" (formula "3") (term "0,0,1,0,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "12"))
                           (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                           (rule "polySimp_elimOne" (formula "12") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "14"))
                           (rule "polySimp_mulComm0" (formula "14") (term "1"))
                           (rule "polySimp_rightDist" (formula "14") (term "1"))
                           (rule "mul_literals" (formula "14") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "14") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "14") (term "1,1"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "7") (term "1,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "7") (term "0,1,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "7") (term "0,1,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "1"))
                           (rule "polySimp_elimOne" (formula "2") (term "1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                           (rule "polySimp_mulLiterals" (formula "5") (term "1"))
                           (rule "polySimp_elimOne" (formula "5") (term "1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,0"))
                           (rule "polySimp_elimOne" (formula "8") (term "1,1,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "7") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "3") (term "1,1,0,0,0"))
                           (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "12"))
                           (rule "leq_literals" (formula "11") (term "0"))
                           (rule "concrete_or_1" (formula "11"))
                           (rule "true_left" (formula "11"))
                           (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                           (rule "times_zero_1" (formula "1") (term "0,0"))
                           (rule "add_zero_left" (formula "1") (term "0"))
                           (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "12"))
                           (rule "leq_literals" (formula "1") (term "0"))
                           (rule "concrete_or_1" (formula "1"))
                           (rule "true_left" (formula "1"))
                           (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "13"))
                           (rule "times_zero_1" (formula "12") (term "0,0"))
                           (rule "add_zero_left" (formula "12") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                           (rule "mul_literals" (formula "12") (term "1"))
                           (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "5"))
                           (rule "times_zero_1" (formula "4") (term "0,0"))
                           (rule "add_zero_left" (formula "4") (term "0"))
                           (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "12"))
                           (rule "leq_literals" (formula "4") (term "0"))
                           (rule "concrete_or_1" (formula "4"))
                           (rule "true_left" (formula "4"))
                           (rule "nnf_ex2all" (formula "15"))
                           (rule "nnf_imp2or" (formula "9") (term "0"))
                           (rule "nnf_imp2or" (formula "10") (term "0"))
                           (rule "nnf_imp2or" (formula "4") (term "0"))
                           (rule "nnf_imp2or" (formula "8") (term "0,0"))
                           (rule "nnf_notAnd" (formula "1") (term "0"))
                           (rule "nnf_notAnd" (formula "9") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "9") (term "0,0,0"))
                           (rule "times_zero_1" (formula "9") (term "1,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "9") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0"))
                           (rule "mul_literals" (formula "9") (term "1,0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "9") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0"))
                           (rule "mul_literals" (formula "9") (term "0,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0"))
                           (rule "nnf_notAnd" (formula "10") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "10") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
                           (rule "mul_literals" (formula "10") (term "0,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0"))
                           (rule "inEqSimp_notGeq" (formula "10") (term "0,0,0"))
                           (rule "times_zero_1" (formula "10") (term "1,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "10") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0"))
                           (rule "mul_literals" (formula "10") (term "1,0,0,0"))
                           (rule "nnf_notAnd" (formula "4") (term "0,0"))
                           (rule "double_not" (formula "4") (term "1,0,0"))
                           (rule "nnf_notAnd" (formula "1") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0,0"))
                           (rule "mul_literals" (formula "1") (term "0,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0,0"))
                           (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                           (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
                           (rule "add_literals" (formula "1") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                           (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                           (rule "nnf_notAnd" (formula "8") (term "0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "8") (term "1,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "1,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "8") (term "1,1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "8") (term "1,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,0,0,0"))
                           (rule "mul_literals" (formula "8") (term "0,1,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "8") (term "1,1,1,0,0,0"))
                           (rule "nnf_notAnd" (formula "4") (term "0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "4") (term "0,0,0,0"))
                           (rule "times_zero_1" (formula "4") (term "1,0,0,0,0,0,0"))
                           (rule "add_literals" (formula "4") (term "0,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "4") (term "0,0,0,0"))
                           (rule "mul_literals" (formula "4") (term "1,0,0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "4") (term "1,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "4") (term "1,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "4") (term "1,1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "4") (term "1,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "4") (term "1,1,1,0,0,0"))
                           (rule "mul_literals" (formula "4") (term "0,1,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "4") (term "1,1,1,0,0,0"))
                           (rule "nnf_notAnd" (formula "8") (term "0,0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "8") (term "0,0,0,0,0"))
                           (rule "times_zero_1" (formula "8") (term "1,0,0,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "8") (term "0,0,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0,0,0"))
                           (rule "mul_literals" (formula "8") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "8") (term "1,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,0,0,0,0"))
                           (rule "mul_literals" (formula "8") (term "0,1,0,0,1,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0,0,0,0"))
                           (rule "add_literals" (formula "8") (term "0,0,0,1,0,0,0,0"))
                           (rule "add_zero_left" (formula "8") (term "0,0,1,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0,0,0"))
                           (rule "cnf_rightDist" (formula "9") (term "0"))
                           (rule "distr_forallAnd" (formula "9"))
                           (rule "andLeft" (formula "9"))
                           (rule "commute_or" (formula "10") (term "0"))
                           (rule "ifthenelse_split" (formula "16") (term "0"))
                           (branch "jv_2 = j_0 TRUE"
                              (rule "applyEq" (formula "15") (term "0") (ifseqformula "16"))
                              (rule "applyEq" (formula "14") (term "0") (ifseqformula "16"))
                              (rule "inEqSimp_subsumption0" (formula "6") (ifseqformula "14"))
                              (rule "inEqSimp_homoInEq0" (formula "6") (term "0"))
                              (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                              (rule "mul_literals" (formula "6") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                              (rule "polySimp_addComm0" (formula "6") (term "0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0"))
                              (rule "add_literals" (formula "6") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "6") (term "1,0,0"))
                              (rule "add_zero_right" (formula "6") (term "0,0"))
                              (rule "qeq_literals" (formula "6") (term "0"))
                              (rule "concrete_or_1" (formula "6"))
                              (rule "true_left" (formula "6"))
                              (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "13"))
                              (rule "times_zero_1" (formula "5") (term "0,0"))
                              (rule "add_zero_left" (formula "5") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                              (rule "mul_literals" (formula "5") (term "1"))
                              (rule "commute_or_2" (formula "7") (term "0,0,0"))
                              (rule "lenNonNegative" (formula "11") (term "0"))
                              (rule "inEqSimp_commuteLeq" (formula "11"))
                              (rule "applyEqRigid" (formula "11") (term "0") (ifseqformula "12"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                              (rule "mul_literals" (formula "11") (term "1"))
                              (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "13"))
                              (rule "leq_literals" (formula "11") (term "0"))
                              (rule "concrete_or_1" (formula "11"))
                              (rule "true_left" (formula "11"))
                              (rule "allLeft" (formula "1") (inst "t=N_0"))
                              (rule "replace_known_left" (formula "1") (term "0,1") (ifseqformula "16"))
                              (rule "concrete_not_1" (formula "1") (term "1"))
                              (rule "concrete_or_4" (formula "1"))
                              (rule "inEqSimp_homoInEq1" (formula "1") (term "1"))
                              (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,1"))
                              (rule "add_literals" (formula "1") (term "1,1,0,1"))
                              (rule "times_zero_1" (formula "1") (term "1,0,1"))
                              (rule "add_zero_right" (formula "1") (term "0,1"))
                              (rule "leq_literals" (formula "1") (term "1"))
                              (rule "concrete_or_4" (formula "1"))
                              (rule "inEqSimp_contradInEq0" (formula "13") (ifseqformula "1"))
                              (rule "qeq_literals" (formula "13") (term "0"))
                              (rule "concrete_and_2" (formula "13"))
                              (rule "closeFalse" (formula "13"))
                           )
                           (branch "jv_2 = j_0 FALSE"
                              (rule "commute_or_2" (formula "8") (term "0,0,0"))
                              (rule "lenNonNegative" (formula "12") (term "0"))
                              (rule "inEqSimp_commuteLeq" (formula "12"))
                              (rule "applyEq" (formula "12") (term "0") (ifseqformula "13"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                              (rule "mul_literals" (formula "12") (term "1"))
                              (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "14"))
                              (rule "leq_literals" (formula "12") (term "0"))
                              (rule "concrete_or_1" (formula "12"))
                              (rule "true_left" (formula "12"))
                              (rule "allLeft" (formula "1") (inst "t=jv_2"))
                              (rule "replace_known_left" (formula "1") (term "0,1") (ifseqformula "17"))
                              (rule "concrete_not_1" (formula "1") (term "1"))
                              (rule "concrete_or_4" (formula "1"))
                              (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "15"))
                              (rule "qeq_literals" (formula "1") (term "0,0"))
                              (rule "concrete_and_2" (formula "1") (term "0"))
                              (rule "concrete_or_2" (formula "1"))
                              (rule "inEqSimp_contradInEq1" (formula "16") (ifseqformula "1"))
                              (rule "andLeft" (formula "16"))
                              (rule "inEqSimp_homoInEq1" (formula "16"))
                              (rule "polySimp_mulComm0" (formula "16") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "16") (term "1,0"))
                              (rule "mul_literals" (formula "16") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "16") (term "0"))
                              (rule "polySimp_addComm1" (formula "16") (term "0,0"))
                              (rule "add_literals" (formula "16") (term "0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "16") (term "0"))
                              (rule "add_literals" (formula "16") (term "1,1,0"))
                              (rule "times_zero_1" (formula "16") (term "1,0"))
                              (rule "add_zero_right" (formula "16") (term "0"))
                              (rule "leq_literals" (formula "16"))
                              (rule "closeFalse" (formula "16"))
                           )
                        )
                     )
                     (branch "0 < N_0 FALSE"
                        (rule "close" (formula "10") (ifseqformula "8"))
                     )
                  )
                  (branch "0 < N_0 FALSE"
                     (rule "andLeft" (formula "2"))
                     (rule "andLeft" (formula "2"))
                     (rule "allRight" (formula "12") (inst "sk=iv_10"))
                     (rule "impRight" (formula "12"))
                     (rule "andLeft" (formula "1"))
                     (rule "eqSymm" (formula "7") (term "0,1,0,0"))
                     (rule "inEqSimp_ltRight" (formula "13"))
                     (rule "add_zero_right" (formula "1") (term "0"))
                     (rule "polySimp_mulComm0" (formula "1") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0,1,0"))
                     (rule "times_zero_1" (formula "13") (term "1,0,0,1,0,0,1,0"))
                     (rule "add_literals" (formula "13") (term "0,0,1,0,0,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "9") (term "1,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "4") (term "1,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "6"))
                     (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,1,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "3"))
                     (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                     (rule "polySimp_addComm0" (formula "11") (term "1"))
                     (rule "polySimp_addComm1" (formula "8") (term "0,1,0,0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0,1,0"))
                     (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "4") (term "0,0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "9") (term "0,1,0"))
                     (rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "5"))
                     (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "2"))
                     (rule "polySimp_addComm1" (formula "6") (term "0"))
                     (rule "polySimp_addComm1" (formula "3") (term "0"))
                     (rule "getOfSeqDef" (formula "13") (term "0,1,0,1,0"))
                     (rule "castDel" (formula "13") (term "1,0,1,0,1,0"))
                     (rule "add_zero_right" (formula "13") (term "0,0,1,0,1,0,1,0"))
                     (rule "add_zero_right" (formula "13") (term "1,2,1,0,1,0,1,0"))
                     (rule "polySimp_elimSub" (formula "13") (term "1,1,0,0,1,0,1,0"))
                     (rule "times_zero_2" (formula "13") (term "1,1,1,0,0,1,0,1,0"))
                     (rule "add_zero_right" (formula "13") (term "1,1,0,0,1,0,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0,1,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0,1,0,1,0"))
                     (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0,1,0,1,0"))
                     (rule "applyEq" (formula "3") (term "0,1,0") (ifseqformula "11"))
                     (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                     (rule "mul_literals" (formula "3") (term "0,1,0"))
                     (rule "polySimp_addComm1" (formula "3") (term "0"))
                     (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                     (rule "add_literals" (formula "3") (term "0,0,0"))
                     (rule "add_zero_left" (formula "3") (term "0,0"))
                     (rule "applyEqRigid" (formula "6") (term "0,1,0") (ifseqformula "11"))
                     (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                     (rule "mul_literals" (formula "6") (term "0,1,0"))
                     (rule "polySimp_addComm1" (formula "6") (term "0"))
                     (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                     (rule "add_literals" (formula "6") (term "0,0,0"))
                     (rule "add_zero_left" (formula "6") (term "0,0"))
                     (rule "applyEqRigid" (formula "9") (term "0,1,0,0,1,0,0") (ifseqformula "11"))
                     (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
                     (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "9") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "9") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "9") (term "0,0,1,0,0"))
                     (rule "applyEq" (formula "9") (term "0,1,0,0,1,1,0") (ifseqformula "11"))
                     (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,1,0"))
                     (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,1,0"))
                     (rule "mul_literals" (formula "9") (term "0,1,0,0,1,1,0"))
                     (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,1,0"))
                     (rule "add_literals" (formula "9") (term "0,0,0,1,1,0"))
                     (rule "add_zero_left" (formula "9") (term "0,0,1,1,0"))
                     (rule "applyEqRigid" (formula "4") (term "0,1,0,0,1,0,0,0") (ifseqformula "11"))
                     (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "4") (term "1,0,0,1,0,0,0"))
                     (rule "mul_literals" (formula "4") (term "0,1,0,0,1,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "4") (term "0,0,1,0,0,0"))
                     (rule "add_literals" (formula "4") (term "0,0,0,1,0,0,0"))
                     (rule "add_zero_left" (formula "4") (term "0,0,1,0,0,0"))
                     (rule "applyEq" (formula "10") (term "0,1,0,0,1,0,0") (ifseqformula "11"))
                     (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
                     (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "10") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "10") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "10") (term "0,0,1,0,0"))
                     (rule "applyEq" (formula "14") (term "0,1,0,0,1,0,0") (ifseqformula "11"))
                     (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
                     (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "14") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "14") (term "0,0,1,0,0"))
                     (rule "applyEqRigid" (formula "8") (term "0,1,0,0,1,0,0,0") (ifseqformula "11"))
                     (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,0,0,0"))
                     (rule "mul_literals" (formula "8") (term "0,1,0,0,1,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0,0,0"))
                     (rule "add_literals" (formula "8") (term "0,0,0,1,0,0,0"))
                     (rule "add_zero_left" (formula "8") (term "0,0,1,0,0,0"))
                     (rule "inEqSimp_invertInEq1" (formula "1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                     (rule "times_zero_2" (formula "1") (term "1"))
                     (rule "polySimp_elimOne" (formula "1") (term "0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0,1,0"))
                     (rule "mul_literals" (formula "13") (term "1,1,0,0,1,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "8") (term "1,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "8") (term "0,1,0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "8") (term "0,1,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0,1,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0,1,0,1,0"))
                     (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0,1,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0,1,0,1,0"))
                     (rule "mul_literals" (formula "13") (term "0,1,1,0,0,1,0,1,0"))
                     (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0,1,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "1"))
                     (rule "polySimp_elimOne" (formula "3") (term "1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                     (rule "polySimp_mulLiterals" (formula "6") (term "1"))
                     (rule "polySimp_elimOne" (formula "6") (term "1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0"))
                     (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "4") (term "1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "4") (term "1,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0,0"))
                     (rule "lenOfSeqDef" (formula "13") (term "1,1,1,0,0"))
                     (rule "polySimp_elimSub" (formula "13") (term "1,1,1,1,0,0"))
                     (rule "times_zero_2" (formula "13") (term "1,1,1,1,1,0,0"))
                     (rule "add_zero_right" (formula "13") (term "1,1,1,1,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "13") (term "0,1,1,1,0,0"))
                     (rule "add_zero_right" (formula "13") (term "0,0,1,1,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,1,1,0,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "13") (term "0,1,1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "0,0,1,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "13") (term "0,0,1,1,1,0,0"))
                     (rule "inEqSimp_contradInEq0" (formula "13") (term "0,1,1,1,0,0") (ifseqformula "1"))
                     (rule "qeq_literals" (formula "13") (term "0,0,1,1,1,0,0"))
                     (rule "concrete_and_2" (formula "13") (term "0,1,1,1,0,0"))
                     (rule "ifthenelse_false" (formula "13") (term "1,1,1,0,0"))
                     (rule "add_zero_right" (formula "13") (term "1,1,0,0"))
                     (rule "inEqSimp_antiSymm" (formula "12") (ifseqformula "1"))
                     (rule "applyEq" (formula "9") (term "1,1,1,0") (ifseqformula "12"))
                     (rule "applyEqRigid" (formula "4") (term "1,1,0,0,0") (ifseqformula "12"))
                     (rule "applyEq" (formula "3") (term "1") (ifseqformula "12"))
                     (rule "applyEq" (formula "13") (term "0") (ifseqformula "12"))
                     (rule "qeq_literals" (formula "13"))
                     (rule "true_left" (formula "13"))
                     (rule "applyEqRigid" (formula "6") (term "1") (ifseqformula "12"))
                     (rule "applyEq" (formula "9") (term "1,1,0,0") (ifseqformula "12"))
                     (rule "applyEqRigid" (formula "10") (term "1,1,0,0") (ifseqformula "12"))
                     (rule "applyEq" (formula "13") (term "1,1,1,0,0,1,0,1,0") (ifseqformula "12"))
                     (rule "add_zero_right" (formula "13") (term "1,1,0,0,1,0,1,0"))
                     (rule "applyEq" (formula "1") (term "0") (ifseqformula "12"))
                     (rule "leq_literals" (formula "1"))
                     (rule "true_left" (formula "1"))
                     (rule "applyEq" (formula "7") (term "1,1,0,0,0") (ifseqformula "11"))
                     (rule "applyEqRigid" (formula "12") (term "1,1,1,0,1,0,1,0") (ifseqformula "11"))
                     (rule "applyEqRigid" (formula "13") (term "1,1,0,0") (ifseqformula "11"))
                     (rule "applyEq" (formula "3") (term "1,0,1,0") (ifseqformula "11"))
                     (rule "applyEq" (formula "6") (term "1") (ifseqformula "11"))
                     (rule "applyEq" (formula "10") (term "1,1") (ifseqformula "11"))
                     (rule "add_zero_right" (formula "10") (term "1"))
                     (rule "inEqSimp_antiSymm" (formula "4") (ifseqformula "5"))
                     (rule "applyEq" (formula "6") (term "0") (ifseqformula "4"))
                     (rule "leq_literals" (formula "6"))
                     (rule "true_left" (formula "6"))
                     (rule "applyEq" (formula "5") (term "0") (ifseqformula "4"))
                     (rule "qeq_literals" (formula "5"))
                     (rule "true_left" (formula "5"))
                     (rule "applyEqRigid" (formula "5") (term "1,0") (ifseqformula "4"))
                     (rule "applyEqRigid" (formula "11") (term "1,1,0,1,0,1,0") (ifseqformula "5"))
                     (rule "applyEqRigid" (formula "11") (term "1,0,1,0,1,0,1,0") (ifseqformula "4"))
                     (rule "applyEq" (formula "3") (term "1,0,1,0,0") (ifseqformula "4"))
                     (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "2"))
                     (rule "applyEq" (formula "3") (term "0") (ifseqformula "1"))
                     (rule "leq_literals" (formula "3"))
                     (rule "true_left" (formula "3"))
                     (rule "applyEqRigid" (formula "2") (term "0") (ifseqformula "1"))
                     (rule "qeq_literals" (formula "2"))
                     (rule "true_left" (formula "2"))
                     (rule "applyEqRigid" (formula "11") (term "1,1,0") (ifseqformula "1"))
                     (rule "inEqSimp_and_strengthen2" (formula "2") (term "0,0"))
                     (rule "add_zero_right" (formula "2") (term "1,1,0,0"))
                     (rule "nnf_ex2all" (formula "11"))
                     (rule "nnf_imp2or" (formula "7") (term "0"))
                     (rule "nnf_imp2or" (formula "8") (term "0"))
                     (rule "nnf_imp2or" (formula "6") (term "0,0"))
                     (rule "nnf_imp2or" (formula "11") (term "0"))
                     (rule "nnf_imp2or" (formula "3") (term "0"))
                     (rule "nnf_notAnd" (formula "1") (term "0"))
                     (rule "nnf_notAnd" (formula "7") (term "0,0"))
                     (rule "inEqSimp_notGeq" (formula "7") (term "0,0,0"))
                     (rule "times_zero_1" (formula "7") (term "1,0,0,0,0,0"))
                     (rule "add_literals" (formula "7") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0,0"))
                     (rule "mul_literals" (formula "7") (term "1,0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "7") (term "1,0,0"))
                     (rule "times_zero_1" (formula "7") (term "1,0,0,1,0,0"))
                     (rule "add_zero_right" (formula "7") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "7") (term "1,0,0"))
                     (rule "mul_literals" (formula "7") (term "1,1,0,0"))
                     (rule "inEqSimp_or_antiSymm0" (formula "7") (term "0,0"))
                     (rule "add_literals" (formula "7") (term "0,0,0,0"))
                     (rule "eqClose" (formula "7") (term "0,0,0"))
                     (rule "ifthenelse_true_for" (formula "7") (term "0,0"))
                     (rule "add_literals" (formula "7") (term "1,0,0,0"))
                     (rule "nnf_notAnd" (formula "8") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "8") (term "1,0,0"))
                     (rule "times_zero_1" (formula "8") (term "1,0,0,1,0,0"))
                     (rule "add_literals" (formula "8") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "1,0,0"))
                     (rule "mul_literals" (formula "8") (term "1,1,0,0"))
                     (rule "inEqSimp_notGeq" (formula "8") (term "0,0,0"))
                     (rule "times_zero_1" (formula "8") (term "1,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "8") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0"))
                     (rule "mul_literals" (formula "8") (term "1,0,0,0"))
                     (rule "inEqSimp_or_antiSymm0" (formula "8") (term "0,0"))
                     (rule "add_literals" (formula "8") (term "0,0,0,0"))
                     (rule "eqClose" (formula "8") (term "0,0,0"))
                     (rule "ifthenelse_true_for" (formula "8") (term "0,0"))
                     (rule "add_literals" (formula "8") (term "1,0,0,0"))
                     (rule "nnf_notAnd" (formula "11") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "11") (term "1,0,0"))
                     (rule "mul_literals" (formula "11") (term "1,0,0,1,0,0"))
                     (rule "add_literals" (formula "11") (term "0,0,1,0,0"))
                     (rule "add_zero_left" (formula "11") (term "0,1,0,0"))
                     (rule "neq_or_2" (formula "11") (term "0,0"))
                     (rule "concrete_or_1" (formula "11") (term "0"))
                     (rule "all_unused" (formula "11"))
                     (rule "true_left" (formula "11"))
                     (rule "nnf_notAnd" (formula "3") (term "0,0"))
                     (rule "inEqSimp_notGeq" (formula "3") (term "0,0,0"))
                     (rule "times_zero_1" (formula "3") (term "1,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "3") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "0,0,0"))
                     (rule "mul_literals" (formula "3") (term "1,0,0,0"))
                     (rule "neq_or" (formula "3") (term "0,0"))
                     (rule "concrete_or_1" (formula "3") (term "0"))
                     (rule "all_unused" (formula "3"))
                     (rule "true_left" (formula "3"))
                     (rule "nnf_notAnd" (formula "1") (term "0,0"))
                     (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                     (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                     (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                     (rule "times_zero_1" (formula "1") (term "1,0,0,1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                     (rule "mul_literals" (formula "1") (term "1,1,0,0"))
                     (rule "inEqSimp_or_antiSymm0" (formula "1") (term "0,0"))
                     (rule "add_literals" (formula "1") (term "0,0,0,0"))
                     (rule "eqClose" (formula "1") (term "0,0,0"))
                     (rule "ifthenelse_true_for" (formula "1") (term "0,0"))
                     (rule "add_literals" (formula "1") (term "1,0,0,0"))
                     (rule "nnf_notAnd" (formula "5") (term "0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "5") (term "1,0,0,0"))
                     (rule "times_zero_1" (formula "5") (term "1,0,0,1,0,0,0"))
                     (rule "add_literals" (formula "5") (term "0,0,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "5") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "5") (term "1,1,0,0,0"))
                     (rule "nnf_notAnd" (formula "5") (term "0,0,0,0"))
                     (rule "inEqSimp_notGeq" (formula "5") (term "1,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "5") (term "1,0,0,1,0,0,0,0"))
                     (rule "mul_literals" (formula "5") (term "0,1,0,0,1,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "5") (term "0,0,1,0,0,0,0"))
                     (rule "add_literals" (formula "5") (term "0,0,0,1,0,0,0,0"))
                     (rule "add_zero_left" (formula "5") (term "0,0,1,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "1,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "5") (term "1,1,0,0,0,0"))
                     (rule "inEqSimp_notGeq" (formula "5") (term "0,0,0,0,0"))
                     (rule "times_zero_1" (formula "5") (term "1,0,0,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "5") (term "0,0,0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "0,0,0,0,0"))
                     (rule "mul_literals" (formula "5") (term "1,0,0,0,0,0"))
                     (rule "commute_or" (formula "7") (term "0"))
                     (rule "elim_forall4" (formula "7"))
                     (rule "commute_and" (formula "6") (term "1,0"))
                     (rule "inEqSimp_and_antiSymm0" (formula "6") (term "1,0"))
                     (rule "commute_or" (formula "1") (term "0"))
                     (rule "elim_forall4" (formula "1"))
                     (rule "notLeft" (formula "1"))
                     (rule "close" (formula "9") (ifseqformula "3"))
                  )
               )
            )
         )
         (branch "CUT: forall int j; ( 0 <= j & j < s_1.length & !j = j_0 -> !(int)s_1[j] = N_0) FALSE"
            (rule "andLeft" (formula "1"))
            (rule "andLeft" (formula "1"))
            (rule "allRight" (formula "10") (inst "sk=j_1"))
            (rule "impRight" (formula "10"))
            (rule "andLeft" (formula "1"))
            (rule "notRight" (formula "12"))
            (rule "notLeft" (formula "3"))
            (rule "andLeft" (formula "2"))
            (rule "allRight" (formula "14") (inst "sk=iv_3"))
            (rule "impRight" (formula "14"))
            (rule "andLeft" (formula "1"))
            (rule "eqSymm" (formula "9") (term "0,1,0,0"))
            (rule "eqSymm" (formula "14") (term "0,1,0,0,0,0,0,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0,0"))
            (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0,1,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "10") (term "1,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0,1,0,1,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "14") (term "1,1,0,1,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0,1,0,0,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0,0,0,0,0,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0,0,0,0,0,0,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0,1,0,1,0"))
            (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0,1,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "7"))
            (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,1,0,1,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0,1,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0,0,0,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0,0,0,0,0,0,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "5"))
            (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0,1,0,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "2"))
            (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
            (rule "polySimp_addComm0" (formula "12") (term "1"))
            (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "14") (term "0,1,0,0,1,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "10") (term "0,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "14") (term "0,1,0,1,0,0,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0,1,0,0,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0,1,0,1,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0,0,0,0,0,0,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0,1,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0,1,0,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "6"))
            (rule "inEqSimp_commuteLeq" (formula "4"))
            (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
            (rule "polySimp_addComm1" (formula "14") (term "0,1,0,0,1,0,1,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "1"))
            (rule "polySimp_addComm1" (formula "14") (term "0,1,0,0,1,0,0,1,0"))
            (rule "polySimp_addComm1" (formula "14") (term "0,1,0,0,0,0,0,0,1,0"))
            (rule "polySimp_addComm1" (formula "14") (term "0,1,0,0,0,0,0,0,0,1,0"))
            (rule "polySimp_addComm1" (formula "9") (term "0,1,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "14") (term "0,1,0,0,1,0,1,0"))
            (rule "polySimp_addComm1" (formula "7") (term "0"))
            (rule "polySimp_addComm1" (formula "5") (term "0"))
            (rule "polySimp_addComm1" (formula "2") (term "0"))
            (rule "applyEqRigid" (formula "7") (term "0,1,0") (ifseqformula "12"))
            (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
            (rule "polySimp_rightDist" (formula "7") (term "1,0"))
            (rule "mul_literals" (formula "7") (term "0,1,0"))
            (rule "polySimp_addComm1" (formula "7") (term "0"))
            (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
            (rule "add_literals" (formula "7") (term "0,0,0"))
            (rule "add_zero_left" (formula "7") (term "0,0"))
            (rule "applyEq" (formula "5") (term "0,1,0") (ifseqformula "12"))
            (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
            (rule "polySimp_rightDist" (formula "5") (term "1,0"))
            (rule "mul_literals" (formula "5") (term "0,1,0"))
            (rule "polySimp_addComm1" (formula "5") (term "0"))
            (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
            (rule "add_literals" (formula "5") (term "0,0,0"))
            (rule "add_zero_left" (formula "5") (term "0,0"))
            (rule "applyEqRigid" (formula "2") (term "0,1,0") (ifseqformula "12"))
            (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
            (rule "polySimp_rightDist" (formula "2") (term "1,0"))
            (rule "mul_literals" (formula "2") (term "0,1,0"))
            (rule "polySimp_addComm1" (formula "2") (term "0"))
            (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
            (rule "add_literals" (formula "2") (term "0,0,0"))
            (rule "add_zero_left" (formula "2") (term "0,0"))
            (rule "applyEqRigid" (formula "10") (term "0,1,0,0,1,1,0") (ifseqformula "12"))
            (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,1,0"))
            (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,1,0"))
            (rule "mul_literals" (formula "10") (term "0,1,0,0,1,1,0"))
            (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,1,0"))
            (rule "add_literals" (formula "10") (term "0,0,0,1,1,0"))
            (rule "add_zero_left" (formula "10") (term "0,0,1,1,0"))
            (rule "applyEqRigid" (formula "9") (term "0,1,0,0,1,0,0,0") (ifseqformula "12"))
            (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0,0"))
            (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0,0,0"))
            (rule "mul_literals" (formula "9") (term "0,1,0,0,1,0,0,0"))
            (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0,0,0"))
            (rule "add_literals" (formula "9") (term "0,0,0,1,0,0,0"))
            (rule "add_zero_left" (formula "9") (term "0,0,1,0,0,0"))
            (rule "applyEq" (formula "11") (term "0,1,0,0,1,0,0") (ifseqformula "12"))
            (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
            (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "11") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "11") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "11") (term "0,0,1,0,0"))
            (rule "applyEqRigid" (formula "16") (term "0,1,0,0,1,0,0") (ifseqformula "12"))
            (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
            (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "16") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "16") (term "0,0,1,0,0"))
            (rule "applyEqRigid" (formula "10") (term "0,1,0,0,1,0,0") (ifseqformula "12"))
            (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
            (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "10") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "10") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "10") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,1,0,1,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "14") (term "1,1,1,0,1,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "14") (term "1,1,1,0,1,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,1,0,1,0,0,1,0"))
            (rule "mul_literals" (formula "14") (term "0,1,1,1,0,1,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "14") (term "1,1,1,1,0,1,0,0,1,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "14") (term "1,0,0,1,1,0"))
            (rule "polySimp_mulLiterals" (formula "14") (term "0,1,0,0,1,1,0"))
            (rule "polySimp_elimOne" (formula "14") (term "0,1,0,0,1,1,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "14") (term "1,0,0,1,0,1,1,0"))
            (rule "polySimp_mulLiterals" (formula "14") (term "0,1,0,0,1,0,1,1,0"))
            (rule "polySimp_elimOne" (formula "14") (term "0,1,0,0,1,0,1,1,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "14") (term "1,0,0,1,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "14") (term "0,1,0,0,1,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "14") (term "0,1,0,0,1,0,0,1,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "14") (term "1,0,0,0,0,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "14") (term "0,1,0,0,0,0,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "14") (term "0,1,0,0,0,0,0,0,1,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "14") (term "1,0,0,0,0,0,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "14") (term "0,1,0,0,0,0,0,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "14") (term "0,1,0,0,0,0,0,0,0,1,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "9") (term "1,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "9") (term "0,1,0,0,0,0"))
            (rule "polySimp_elimOne" (formula "9") (term "0,1,0,0,0,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "14") (term "1,0,0,1,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "14") (term "0,1,0,0,1,0,1,0"))
            (rule "polySimp_elimOne" (formula "14") (term "0,1,0,0,1,0,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "7"))
            (rule "polySimp_mulLiterals" (formula "7") (term "1"))
            (rule "polySimp_elimOne" (formula "7") (term "1"))
            (rule "inEqSimp_sepPosMonomial0" (formula "5"))
            (rule "polySimp_mulLiterals" (formula "5") (term "1"))
            (rule "polySimp_elimOne" (formula "5") (term "1"))
            (rule "inEqSimp_sepPosMonomial0" (formula "2"))
            (rule "polySimp_mulLiterals" (formula "2") (term "1"))
            (rule "polySimp_elimOne" (formula "2") (term "1"))
            (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,1,0"))
            (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0"))
            (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0"))
            (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "7"))
            (rule "mul_literals" (formula "6") (term "0,0"))
            (rule "add_zero_left" (formula "6") (term "0"))
            (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
            (rule "times_zero_1" (formula "1") (term "0,0"))
            (rule "add_zero_left" (formula "1") (term "0"))
            (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "5"))
            (rule "times_zero_1" (formula "4") (term "0,0"))
            (rule "add_zero_left" (formula "4") (term "0"))
            (rule "nnf_ex2all" (formula "16"))
            (rule "nnf_imp2or" (formula "15") (term "0"))
            (rule "nnf_imp2or" (formula "12") (term "0"))
            (rule "nnf_imp2or" (formula "11") (term "0"))
            (rule "nnf_imp2or" (formula "10") (term "0,0"))
            (rule "nnf_notAnd" (formula "1") (term "0"))
            (rule "nnf_imp2or" (formula "15") (term "1,0"))
            (rule "nnf_notAnd" (formula "12") (term "0,0"))
            (rule "inEqSimp_notGeq" (formula "12") (term "0,0,0"))
            (rule "times_zero_1" (formula "12") (term "1,0,0,0,0,0"))
            (rule "add_zero_right" (formula "12") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
            (rule "mul_literals" (formula "12") (term "1,0,0,0"))
            (rule "inEqSimp_notLeq" (formula "12") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
            (rule "mul_literals" (formula "12") (term "0,1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0"))
            (rule "nnf_notAnd" (formula "11") (term "0,0"))
            (rule "inEqSimp_notGeq" (formula "11") (term "0,0,0"))
            (rule "times_zero_1" (formula "11") (term "1,0,0,0,0,0"))
            (rule "add_zero_right" (formula "11") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
            (rule "mul_literals" (formula "11") (term "1,0,0,0"))
            (rule "inEqSimp_notLeq" (formula "11") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
            (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
            (rule "nnf_notAnd" (formula "1") (term "0,0"))
            (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0"))
            (rule "mul_literals" (formula "1") (term "0,1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0,0"))
            (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
            (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
            (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
            (rule "mul_literals" (formula "1") (term "1,0,0,0"))
            (rule "nnf_notAnd" (formula "10") (term "0,0,0"))
            (rule "inEqSimp_notLeq" (formula "10") (term "1,0,0,0"))
            (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0,0"))
            (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0,0"))
            (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0,0"))
            (rule "mul_literals" (formula "10") (term "0,1,1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0,0"))
            (rule "nnf_notAnd" (formula "15") (term "0,1,0"))
            (rule "nnf_imp2or" (formula "15") (term "0,1,1,0"))
            (rule "nnf_notAnd" (formula "10") (term "0,0,0,0"))
            (rule "inEqSimp_notGeq" (formula "10") (term "1,0,0,0,0"))
            (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0,0,0,0"))
            (rule "mul_literals" (formula "10") (term "0,1,0,0,1,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,0,0,0"))
            (rule "add_literals" (formula "10") (term "0,0,0,1,0,0,0,0"))
            (rule "add_zero_left" (formula "10") (term "0,0,1,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0,0"))
            (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,0,0"))
            (rule "inEqSimp_notGeq" (formula "10") (term "0,0,0,0,0"))
            (rule "times_zero_1" (formula "10") (term "1,0,0,0,0,0,0,0"))
            (rule "add_zero_right" (formula "10") (term "0,0,0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0,0,0"))
            (rule "mul_literals" (formula "10") (term "1,0,0,0,0,0"))
            (rule "nnf_notAnd" (formula "15") (term "0,0,1,0"))
            (rule "nnf_notAll" (formula "15") (term "1,0,1,0"))
            (rule "nnf_notAnd" (formula "15") (term "0,0,1,1,0"))
            (rule "inEqSimp_notGeq" (formula "15") (term "0,0,0,1,1,0"))
            (rule "times_zero_1" (formula "15") (term "1,0,0,0,0,0,1,1,0"))
            (rule "add_zero_right" (formula "15") (term "0,0,0,0,0,1,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0,1,1,0"))
            (rule "mul_literals" (formula "15") (term "1,0,0,0,1,1,0"))
            (rule "inEqSimp_notGeq" (formula "15") (term "1,0,0,1,1,0"))
            (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0,1,1,0"))
            (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,0,1,1,0"))
            (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0,1,1,0"))
            (rule "add_literals" (formula "15") (term "0,0,0,1,0,0,1,1,0"))
            (rule "add_zero_left" (formula "15") (term "0,0,1,0,0,1,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0,1,1,0"))
            (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,1,1,0"))
            (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,1,1,0"))
            (rule "nnf_notAll" (formula "15") (term "1,0,0,1,0"))
            (rule "nnf_notAll" (formula "15") (term "0,0,0,1,0"))
            (rule "nnf_imp2or" (formula "15") (term "0,0,1,0,1,0"))
            (rule "nnf_notOr" (formula "15") (term "0,1,0,1,0"))
            (rule "double_not" (formula "15") (term "0,0,1,0,1,0"))
            (rule "nnf_notAll" (formula "15") (term "0,0,0,0,1,0"))
            (rule "nnf_imp2or" (formula "15") (term "0,0,1,0,0,1,0"))
            (rule "nnf_notOr" (formula "15") (term "0,1,0,0,1,0"))
            (rule "double_not" (formula "15") (term "0,0,1,0,0,1,0"))
            (rule "nnf_notAnd" (formula "15") (term "1,0,1,0,0,1,0"))
            (rule "inEqSimp_notLeq" (formula "15") (term "1,1,0,1,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,1,0,1,0,0,1,0"))
            (rule "mul_literals" (formula "15") (term "0,1,0,0,1,1,0,1,0,0,1,0"))
            (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,1,0,1,0,0,1,0"))
            (rule "add_literals" (formula "15") (term "0,0,0,1,1,0,1,0,0,1,0"))
            (rule "add_zero_left" (formula "15") (term "0,0,1,1,0,1,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "1,1,0,1,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,1,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,1,0,0,1,0"))
            (rule "inEqSimp_notGeq" (formula "15") (term "0,1,0,1,0,0,1,0"))
            (rule "times_zero_1" (formula "15") (term "1,0,0,0,1,0,1,0,0,1,0"))
            (rule "add_zero_right" (formula "15") (term "0,0,0,1,0,1,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,1,0,1,0,0,1,0"))
            (rule "mul_literals" (formula "15") (term "1,0,1,0,1,0,0,1,0"))
            (rule "nnf_imp2or" (formula "15") (term "0,0,0,0,0,0,1,0"))
            (rule "nnf_notOr" (formula "15") (term "0,0,0,0,0,1,0"))
            (rule "double_not" (formula "15") (term "0,0,0,0,0,0,1,0"))
            (rule "double_not" (formula "15") (term "1,0,0,0,0,0,1,0"))
            (rule "cnf_rightDist" (formula "11") (term "0"))
            (rule "distr_forallAnd" (formula "11"))
            (rule "andLeft" (formula "11"))
            (rule "commute_or_2" (formula "10") (term "0,0,0"))
            (rule "commute_or" (formula "12") (term "0"))
            (rule "lenNonNegative" (formula "14") (term "0"))
            (rule "inEqSimp_commuteLeq" (formula "14"))
            (rule "applyEqRigid" (formula "14") (term "0") (ifseqformula "15"))
            (rule "inEqSimp_sepPosMonomial1" (formula "14"))
            (rule "mul_literals" (formula "14") (term "1"))
            (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "16"))
            (rule "leq_literals" (formula "14") (term "0"))
            (rule "concrete_or_1" (formula "14"))
            (rule "true_left" (formula "14"))
            (rule "ex_pull_out3" (formula "16") (term "0,1,1,0"))
            (rule "cnf_rightDist" (formula "16") (term "0,0,1,1,0"))
            (rule "commute_or" (formula "16") (term "1,0,0,1,1,0"))
            (rule "cnf_rightDist" (formula "16") (term "0,0,0,1,1,0"))
            (rule "commute_or_2" (formula "16") (term "0,0,0,0,1,1,0"))
            (rule "commute_or" (formula "16") (term "1,0,0,0,1,1,0"))
            (rule "ex_pull_out4" (formula "16") (term "0,0,1,0"))
            (rule "ex_pull_out2" (formula "16") (term "0,0,0,1,0"))
            (rule "cnf_rightDist" (formula "16") (term "0,0,0,0,1,0"))
            (rule "cnf_rightDist" (formula "16") (term "1,0,0,0,0,1,0"))
            (rule "commute_or" (formula "16") (term "1,1,0,0,0,0,1,0"))
            (rule "cnf_rightDist" (formula "16") (term "0,0,0,0,0,1,0"))
            (rule "commute_or" (formula "16") (term "0,0,0,0,0,0,1,0"))
            (rule "cnf_rightDist" (formula "16") (term "0,1,0,0,0,0,1,0"))
            (rule "shift_paren_or" (formula "16") (term "1,0,1,0,0,0,0,1,0"))
            (rule "cnf_rightDist" (formula "16") (term "1,0,0,0,0,0,1,0"))
            (rule "commute_or" (formula "16") (term "1,1,0,0,0,0,0,1,0"))
            (rule "cnf_rightDist" (formula "16") (term "0,0,0,0,0,0,1,0"))
            (rule "commute_or" (formula "16") (term "1,0,0,0,0,0,0,1,0"))
            (rule "cnf_rightDist" (formula "16") (term "0,0,1,0,0,0,0,1,0"))
            (rule "commute_or_2" (formula "16") (term "0,0,0,1,0,0,0,0,1,0"))
            (rule "shift_paren_or" (formula "16") (term "1,0,0,1,0,0,0,0,1,0"))
            (rule "commute_or" (formula "16") (term "0,0,0,0,1,0,0,0,0,1,0"))
            (rule "cnf_rightDist" (formula "16") (term "0,1,0,0,0,0,0,1,0"))
            (rule "commute_or" (formula "16") (term "1,0,1,0,0,0,0,0,1,0"))
            (rule "cnf_rightDist" (formula "16") (term "0,0,0,0,0,0,0,1,0"))
            (rule "commute_or" (formula "16") (term "1,0,0,0,0,0,0,0,1,0"))
            (rule "allLeft" (formula "1") (inst "t=j_0"))
            (rule "applyEqRigid" (formula "1") (term "0,0,1") (ifseqformula "10"))
            (rule "eqSymm" (formula "1") (term "0,1"))
            (rule "inEqSimp_contradInEq1" (formula "1") (term "0,0") (ifseqformula "8"))
            (rule "qeq_literals" (formula "1") (term "0,0,0"))
            (rule "concrete_and_2" (formula "1") (term "0,0"))
            (rule "concrete_or_2" (formula "1") (term "0"))
            (rule "inEqSimp_contradInEq0" (formula "1") (term "0") (ifseqformula "9"))
            (rule "inEqSimp_homoInEq1" (formula "1") (term "0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0"))
            (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
            (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
            (rule "add_zero_right" (formula "1") (term "0,0,0"))
            (rule "leq_literals" (formula "1") (term "0,0"))
            (rule "concrete_and_2" (formula "1") (term "0"))
            (rule "concrete_or_2" (formula "1"))
            (rule "notLeft" (formula "1"))
            (rule "inEqSimp_strengthen0" (formula "3") (ifseqformula "17"))
            (rule "inEqSimp_contradEq3" (formula "17") (ifseqformula "3"))
            (rule "polySimp_mulComm0" (formula "17") (term "1,0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0"))
            (rule "add_literals" (formula "17") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "17") (term "1,0,0"))
            (rule "add_zero_right" (formula "17") (term "0,0"))
            (rule "qeq_literals" (formula "17") (term "0"))
            (rule "concrete_and_2" (formula "17"))
            (rule "false_right" (formula "17"))
            (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "3"))
            (rule "times_zero_1" (formula "2") (term "0,0"))
            (rule "add_zero_left" (formula "2") (term "0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "2"))
            (rule "mul_literals" (formula "2") (term "1"))
            (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "2"))
            (rule "leq_literals" (formula "16") (term "0"))
            (rule "concrete_or_1" (formula "16"))
            (rule "true_left" (formula "16"))
            (rule "allLeft" (formula "1") (inst "t=j_1"))
            (rule "applyEq" (formula "1") (term "0,0,1") (ifseqformula "6"))
            (rule "eqSymm" (formula "1") (term "0,1"))
            (rule "inEqSimp_contradEq3" (formula "1") (term "0,1") (ifseqformula "5"))
            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,1"))
            (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0,1"))
            (rule "add_literals" (formula "1") (term "1,1,0,0,0,1"))
            (rule "times_zero_1" (formula "1") (term "1,0,0,0,1"))
            (rule "add_zero_right" (formula "1") (term "0,0,0,1"))
            (rule "qeq_literals" (formula "1") (term "0,0,1"))
            (rule "concrete_and_2" (formula "1") (term "0,1"))
            (rule "concrete_not_2" (formula "1") (term "1"))
            (rule "concrete_or_3" (formula "1"))
            (rule "true_left" (formula "1"))
            (rule "allLeft" (formula "13") (inst "t=j_0"))
            (rule "applyEq" (formula "13") (term "0,1") (ifseqformula "10"))
            (rule "inEqSimp_homoInEq0" (formula "13") (term "1"))
            (rule "polySimp_pullOutFactor1" (formula "13") (term "0,1"))
            (rule "add_literals" (formula "13") (term "1,0,1"))
            (rule "times_zero_1" (formula "13") (term "0,1"))
            (rule "qeq_literals" (formula "13") (term "1"))
            (rule "concrete_or_3" (formula "13"))
            (rule "true_left" (formula "13"))
            (rule "allLeft" (formula "13") (inst "t=j_1"))
            (rule "applyEqRigid" (formula "13") (term "0,1") (ifseqformula "5"))
            (rule "inEqSimp_homoInEq0" (formula "13") (term "1"))
            (rule "polySimp_pullOutFactor1" (formula "13") (term "0,1"))
            (rule "add_literals" (formula "13") (term "1,0,1"))
            (rule "times_zero_1" (formula "13") (term "0,1"))
            (rule "qeq_literals" (formula "13") (term "1"))
            (rule "concrete_or_3" (formula "13"))
            (rule "true_left" (formula "13"))
            (rule "allLeft" (formula "12") (inst "t=j_0"))
            (rule "applyEqRigid" (formula "12") (term "0,1") (ifseqformula "10"))
            (rule "inEqSimp_contradInEq1" (formula "12") (term "0,0") (ifseqformula "8"))
            (rule "qeq_literals" (formula "12") (term "0,0,0"))
            (rule "concrete_and_2" (formula "12") (term "0,0"))
            (rule "concrete_or_2" (formula "12") (term "0"))
            (rule "inEqSimp_subsumption1" (formula "12") (term "1") (ifseqformula "2"))
            (rule "leq_literals" (formula "12") (term "0,1"))
            (rule "concrete_or_1" (formula "12") (term "1"))
            (rule "concrete_or_3" (formula "12"))
            (rule "true_left" (formula "12"))
            (rule "allLeft" (formula "12") (inst "t=j_1"))
            (rule "applyEq" (formula "12") (term "0,1") (ifseqformula "5"))
            (rule "inEqSimp_subsumption1" (formula "12") (term "1") (ifseqformula "2"))
            (rule "leq_literals" (formula "12") (term "0,1"))
            (rule "concrete_or_1" (formula "12") (term "1"))
            (rule "concrete_or_3" (formula "12"))
            (rule "true_left" (formula "12"))
            (rule "cnf_rightDist" (formula "16") (term "0,0,1,0,0,0,0,0,1,0"))
            (rule "cnf_rightDist" (formula "16") (term "0,0,0,0,0,0,0,0,1,0"))
            (rule "eq_or" (formula "16") (term "0,0,0,0,0,0,0,0,0,1,0"))
            (rule "commute_and_2" (formula "16") (term "0,0,1,1,0"))
            (rule "commute_or" (formula "16") (term "0,0,0,1,0,0,0,0,0,1,0"))
            (rule "commute_or" (formula "16") (term "1,0,0,0,0,0,0,0,0,1,0"))
            (rule "shift_paren_and" (formula "16") (term "0,0,0,0,0,1,0"))
            (rule "shift_paren_and" (formula "16") (term "0,0,0,0,0,0,1,0"))
            (rule "shift_paren_and" (formula "16") (term "0,0,0,0,0,0,0,1,0"))
            (rule "shift_paren_and" (formula "16") (term "0,0,0,0,1,0"))
            (rule "shift_paren_and" (formula "16") (term "0,0,0,0,0,1,0"))
            (rule "shift_paren_and" (formula "16") (term "0,0,0,0,0,0,1,0"))
            (rule "ex_pull_out4" (formula "16") (term "0,1,0"))
            (rule "ex_pull_out2" (formula "16") (term "0,0,1,0"))
            (rule "cnf_rightDist" (formula "16") (term "0,0,0,1,0"))
            (rule "cnf_rightDist" (formula "16") (term "1,0,0,0,1,0"))
            (rule "cnf_rightDist" (formula "16") (term "0,0,0,0,1,0"))
            (rule "commute_or" (formula "16") (term "0,0,0,0,0,1,0"))
            (rule "cnf_rightDist" (formula "16") (term "0,1,0,0,0,1,0"))
            (rule "cnf_rightDist" (formula "16") (term "1,0,0,0,0,1,0"))
            (rule "commute_or_2" (formula "16") (term "1,1,0,0,0,0,1,0"))
            (rule "commute_or_2" (formula "16") (term "0,1,1,0,0,0,0,1,0"))
            (rule "cnf_rightDist" (formula "16") (term "0,0,0,0,0,1,0"))
            (rule "commute_or_2" (formula "16") (term "1,0,0,0,0,0,1,0"))
            (rule "commute_or_2" (formula "16") (term "0,1,0,0,0,0,0,1,0"))
            (rule "commute_or" (formula "16") (term "0,0,1,1,0,0,0,0,1,0"))
            (rule "commute_or" (formula "16") (term "0,0,1,0,0,0,0,0,1,0"))
            (rule "cnf_rightDist" (formula "16") (term "0,0,1,0,0,0,1,0"))
            (rule "cnf_rightDist" (formula "16") (term "0,1,0,0,0,0,1,0"))
            (rule "commute_or_2" (formula "16") (term "1,0,1,0,0,0,0,1,0"))
            (rule "commute_or_2" (formula "16") (term "0,1,0,1,0,0,0,0,1,0"))
            (rule "cnf_rightDist" (formula "16") (term "0,0,0,0,0,0,1,0"))
            (rule "commute_or_2" (formula "16") (term "1,0,0,0,0,0,0,1,0"))
            (rule "commute_or_2" (formula "16") (term "0,1,0,0,0,0,0,0,1,0"))
            (rule "commute_or" (formula "16") (term "0,0,1,0,1,0,0,0,0,1,0"))
            (rule "commute_or" (formula "16") (term "0,0,1,0,0,0,0,0,0,1,0"))
            (rule "cnf_rightDist" (formula "16") (term "0,0,0,1,0,0,0,1,0"))
            (rule "cnf_rightDist" (formula "16") (term "0,0,1,0,0,0,0,1,0"))
            (rule "commute_or_2" (formula "16") (term "1,0,0,1,0,0,0,0,1,0"))
            (rule "commute_or_2" (formula "16") (term "0,1,0,0,1,0,0,0,0,1,0"))
            (rule "cnf_rightDist" (formula "16") (term "0,0,0,0,0,0,0,1,0"))
            (rule "commute_or_2" (formula "16") (term "1,0,0,0,0,0,0,0,1,0"))
            (rule "commute_or_2" (formula "16") (term "0,1,0,0,0,0,0,0,0,1,0"))
            (rule "commute_or" (formula "16") (term "0,0,1,0,0,0,0,0,0,0,1,0"))
            (rule "cnf_rightDist" (formula "16") (term "0,0,0,0,1,0,0,0,1,0"))
            (rule "cnf_rightDist" (formula "16") (term "0,0,0,1,0,0,0,0,1,0"))
            (rule "commute_or_2" (formula "16") (term "1,0,0,0,1,0,0,0,0,1,0"))
            (rule "commute_or_2" (formula "16") (term "0,1,0,0,0,1,0,0,0,0,1,0"))
            (rule "cnf_rightDist" (formula "16") (term "0,0,0,0,0,0,0,0,1,0"))
            (rule "commute_or_2" (formula "16") (term "1,0,0,0,0,0,0,0,0,1,0"))
            (rule "commute_or_2" (formula "16") (term "0,1,0,0,0,0,0,0,0,0,1,0"))
            (rule "eq_or" (formula "16") (term "0,0,1,0,0,0,0,0,0,0,0,1,0"))
            (rule "cnf_rightDist" (formula "16") (term "0,0,0,0,0,1,0,0,0,1,0"))
            (rule "cnf_rightDist" (formula "16") (term "0,0,0,0,1,0,0,0,0,1,0"))
            (rule "commute_or_2" (formula "16") (term "1,0,0,0,0,1,0,0,0,0,1,0"))
            (rule "eq_or" (formula "16") (term "0,1,0,0,0,0,1,0,0,0,0,1,0"))
            (rule "cnf_rightDist" (formula "16") (term "0,0,0,0,0,0,0,0,0,1,0"))
            (rule "commute_or_2" (formula "16") (term "1,0,0,0,0,0,0,0,0,0,1,0"))
            (rule "commute_or" (formula "16") (term "0,1,0,0,0,0,0,0,0,0,0,1,0"))
            (rule "cnf_rightDist" (formula "16") (term "0,0,0,0,0,0,1,0,0,0,1,0"))
            (rule "cnf_rightDist" (formula "16") (term "0,0,0,0,0,1,0,0,0,0,1,0"))
            (rule "commute_or_2" (formula "16") (term "1,0,0,0,0,0,1,0,0,0,0,1,0"))
            (rule "eq_or" (formula "16") (term "0,1,0,0,0,0,0,1,0,0,0,0,1,0"))
            (rule "cnf_rightDist" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,1,0"))
            (rule "commute_or_2" (formula "16") (term "1,0,0,0,0,0,0,0,0,0,0,1,0"))
            (rule "commute_or" (formula "16") (term "0,1,0,0,0,0,0,0,0,0,0,0,1,0"))
            (rule "allLeft" (formula "11") (inst "t=j_1"))
            (rule "applyEqRigid" (formula "11") (term "1,0,1,0") (ifseqformula "5"))
            (rule "inEqSimp_contradInEq1" (formula "11") (term "0,0,0,0") (ifseqformula "6"))
            (rule "qeq_literals" (formula "11") (term "0,0,0,0,0"))
            (rule "concrete_and_2" (formula "11") (term "0,0,0,0"))
            (rule "concrete_or_2" (formula "11") (term "0,0,0"))
            (rule "allLeft" (formula "11") (inst "t=j_0"))
            (rule "replace_known_left" (formula "11") (term "0,1") (ifseqformula "10"))
            (rule "concrete_not_1" (formula "11") (term "1"))
            (rule "concrete_or_4" (formula "11"))
            (rule "inEqSimp_commuteLeq" (formula "11") (term "1"))
            (rule "inEqSimp_contradInEq0" (formula "11") (term "0") (ifseqformula "9"))
            (rule "inEqSimp_homoInEq1" (formula "11") (term "0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,0"))
            (rule "add_literals" (formula "11") (term "1,1,0,0,0"))
            (rule "times_zero_1" (formula "11") (term "1,0,0,0"))
            (rule "add_zero_right" (formula "11") (term "0,0,0"))
            (rule "leq_literals" (formula "11") (term "0,0"))
            (rule "concrete_and_2" (formula "11") (term "0"))
            (rule "concrete_or_2" (formula "11"))
            (rule "inEqSimp_strengthen1" (formula "11") (ifseqformula "19"))
            (rule "inEqSimp_contradEq7" (formula "19") (ifseqformula "11"))
            (rule "polySimp_mulComm0" (formula "19") (term "1,0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0"))
            (rule "add_literals" (formula "19") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "19") (term "1,0,0"))
            (rule "add_zero_right" (formula "19") (term "0,0"))
            (rule "leq_literals" (formula "19") (term "0"))
            (rule "concrete_and_2" (formula "19"))
            (rule "false_right" (formula "19"))
            (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "7"))
            (rule "polySimp_rightDist" (formula "11") (term "0,0"))
            (rule "mul_literals" (formula "11") (term "0,0,0"))
            (rule "polySimp_addComm1" (formula "11") (term "0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "11"))
            (rule "polySimp_mulLiterals" (formula "11") (term "0"))
            (rule "polySimp_elimOne" (formula "11") (term "0"))
            (rule "inEqSimp_subsumption0" (formula "9") (ifseqformula "11"))
            (rule "inEqSimp_homoInEq0" (formula "9") (term "0"))
            (rule "polySimp_mulComm0" (formula "9") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "9") (term "1,0,0"))
            (rule "mul_literals" (formula "9") (term "0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
            (rule "polySimp_addComm0" (formula "9") (term "0,0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0"))
            (rule "add_literals" (formula "9") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "9") (term "1,0,0"))
            (rule "add_zero_right" (formula "9") (term "0,0"))
            (rule "qeq_literals" (formula "9") (term "0"))
            (rule "concrete_or_1" (formula "9"))
            (rule "true_left" (formula "9"))
            (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "10"))
            (rule "times_zero_1" (formula "8") (term "0,0"))
            (rule "add_zero_left" (formula "8") (term "0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "8"))
            (rule "mul_literals" (formula "8") (term "1"))
            (rule "allLeft" (formula "13") (inst "t=j_0"))
            (rule "applyEqRigid" (formula "13") (term "1,0,1,0") (ifseqformula "9"))
            (rule "inEqSimp_contradInEq1" (formula "13") (term "0,0,0,0") (ifseqformula "8"))
            (rule "qeq_literals" (formula "13") (term "0,0,0,0,0"))
            (rule "concrete_and_2" (formula "13") (term "0,0,0,0"))
            (rule "concrete_or_2" (formula "13") (term "0,0,0"))
            (rule "cnf_rightDist" (formula "19") (term "0,0,0,0,0,0,0,1,0,0,0,1,0"))
            (rule "cnf_rightDist" (formula "19") (term "0,0,0,0,0,0,1,0,0,0,0,1,0"))
            (rule "eq_or_2" (formula "19") (term "1,0,0,0,0,0,0,1,0,0,0,0,1,0"))
            (rule "cnf_rightDist" (formula "19") (term "0,0,0,0,0,0,0,0,0,0,0,1,0"))
            (rule "allLeft" (formula "13") (inst "t=j_1"))
            (rule "replace_known_left" (formula "13") (term "0,1") (ifseqformula "5"))
            (rule "concrete_not_1" (formula "13") (term "1"))
            (rule "concrete_or_4" (formula "13"))
            (rule "inEqSimp_contradInEq1" (formula "13") (term "1") (ifseqformula "11"))
            (rule "inEqSimp_homoInEq1" (formula "13") (term "0,1"))
            (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0,1"))
            (rule "add_literals" (formula "13") (term "1,1,0,0,1"))
            (rule "times_zero_1" (formula "13") (term "1,0,0,1"))
            (rule "add_zero_right" (formula "13") (term "0,0,1"))
            (rule "leq_literals" (formula "13") (term "0,1"))
            (rule "concrete_and_2" (formula "13") (term "1"))
            (rule "concrete_or_4" (formula "13"))
            (rule "inEqSimp_contradInEq1" (formula "7") (ifseqformula "13"))
            (rule "andLeft" (formula "7"))
            (rule "inEqSimp_homoInEq1" (formula "7"))
            (rule "polySimp_pullOutFactor1b" (formula "7") (term "0"))
            (rule "add_literals" (formula "7") (term "1,1,0"))
            (rule "times_zero_1" (formula "7") (term "1,0"))
            (rule "add_literals" (formula "7") (term "0"))
            (rule "leq_literals" (formula "7"))
            (rule "closeFalse" (formula "7"))
         )
      )
      (branch "CUT: exists int j; (0 <= j & j < s_1.length & (int)s_1[j] = N_0) FALSE"
         (rule "hide_right" (formula "8") (userinteraction))
         (rule "allLeftHide" (formula "6") (inst "t=seqDef{int i;}(Z(0(#)), N_0, int::seqGet(s_1, i))") (userinteraction))
         (rule "impLeft" (formula "6") (userinteraction))
         (branch "Case 1"
            (rule "eqSymm" (formula "1") (term "0,1,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "2") (term "1,1,0"))
            (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "1") (term "1,0,0,0"))
            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "2") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "3") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "1") (term "1,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "7") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0"))
            (rule "polySimp_addComm0" (formula "4") (term "1"))
            (rule "polySimp_addComm1" (formula "1") (term "0,1,0,0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "2") (term "0,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "3") (term "0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "1") (term "0,0,0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "7") (term "0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "2") (term "0,0,0"))
            (rule "applyEqRigid" (formula "2") (term "0,1,0,0,1,0,0") (ifseqformula "4"))
            (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1,0,0"))
            (rule "polySimp_rightDist" (formula "2") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "2") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "2") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "2") (term "0,0,1,0,0"))
            (rule "applyEqRigid" (formula "1") (term "0,1,0,0,1,0,0,0") (ifseqformula "4"))
            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0,0"))
            (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0,0"))
            (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0,0"))
            (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0,0"))
            (rule "add_literals" (formula "1") (term "0,0,0,1,0,0,0"))
            (rule "add_zero_left" (formula "1") (term "0,0,1,0,0,0"))
            (rule "applyEq" (formula "7") (term "0,1,0,0,1,0,0") (ifseqformula "4"))
            (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0"))
            (rule "polySimp_rightDist" (formula "7") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "7") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "7") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "7") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "7") (term "0,0,1,0,0"))
            (rule "applyEq" (formula "3") (term "0,1,0,0,1,0,0") (ifseqformula "4"))
            (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1,0,0"))
            (rule "polySimp_rightDist" (formula "3") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "3") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "3") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "3") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "3") (term "0,0,1,0,0"))
            (rule "applyEq" (formula "2") (term "0,1,0,0,1,1,0") (ifseqformula "4"))
            (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1,1,0"))
            (rule "polySimp_rightDist" (formula "2") (term "1,0,0,1,1,0"))
            (rule "mul_literals" (formula "2") (term "0,1,0,0,1,1,0"))
            (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,1,0"))
            (rule "add_literals" (formula "2") (term "0,0,0,1,1,0"))
            (rule "add_zero_left" (formula "2") (term "0,0,1,1,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "1,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,0,0"))
            (rule "polySimp_elimOne" (formula "1") (term "0,1,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "2") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "2") (term "1,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "7") (term "1,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "3") (term "1,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "2") (term "1,1,0"))
            (rule "polySimp_mulLiterals" (formula "2") (term "1,1,1,0"))
            (rule "polySimp_elimOne" (formula "2") (term "1,1,1,0"))
            (rule "lenOfSeqDef" (formula "6") (term "0"))
            (rule "polySimp_elimSub" (formula "6") (term "1,0"))
            (rule "times_zero_2" (formula "6") (term "1,1,0"))
            (rule "add_zero_right" (formula "6") (term "1,0"))
            (rule "ifthenelse_concrete3" (formula "6"))
            (rule "orRight" (formula "6"))
            (rule "eqSymm" (formula "7"))
            (rule "inEqSimp_ltRight" (formula "6"))
            (rule "add_zero_right" (formula "1") (term "0"))
            (rule "polySimp_mulComm0" (formula "1") (term "0"))
            (rule "inEqSimp_invertInEq1" (formula "1"))
            (rule "polySimp_mulLiterals" (formula "1") (term "0"))
            (rule "times_zero_2" (formula "1") (term "1"))
            (rule "polySimp_elimOne" (formula "1") (term "0"))
            (rule "inEqSimp_strengthen0" (formula "1") (ifseqformula "7"))
            (rule "add_zero_right" (formula "1") (term "1"))
            (rule "inEqSimp_contradEq3" (formula "7") (ifseqformula "1"))
            (rule "times_zero_1" (formula "7") (term "1,0,0"))
            (rule "add_zero_right" (formula "7") (term "0,0"))
            (rule "qeq_literals" (formula "7") (term "0"))
            (rule "concrete_and_2" (formula "7"))
            (rule "false_right" (formula "7"))
            (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "6"))
            (rule "qeq_literals" (formula "1") (term "0"))
            (rule "concrete_and_2" (formula "1"))
            (rule "closeFalse" (formula "1"))
         )
         (branch "Case 2"
            (rule "impLeft" (formula "6") (userinteraction))
            (branch "Case 1"
               (rule "eqSymm" (formula "6") (term "0,1,0,0,0,0"))
               (rule "eqSymm" (formula "1") (term "0,1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "6") (term "1,0,0,1"))
               (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1,0,0,1"))
               (rule "inEqSimp_ltToLeq" (formula "7") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "6") (term "1,0,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1,0,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "2") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "3") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "6") (term "1,1,0,1,0"))
               (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1,1,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "2") (term "1,1,0"))
               (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "6") (term "1,0,0,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1,0,0,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "1") (term "1,0,0,0"))
               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "6") (term "1,0,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "1") (term "1,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0,0,0"))
               (rule "polySimp_addComm0" (formula "4") (term "1"))
               (rule "polySimp_addComm1" (formula "6") (term "0,1,0,0,0,0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "1") (term "0,0,0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "7") (term "0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "6") (term "0,0,0,1"))
               (rule "inEqSimp_commuteLeq" (formula "6") (term "0,0,0,1,0"))
               (rule "inEqSimp_commuteLeq" (formula "2") (term "0,1,0"))
               (rule "inEqSimp_commuteLeq" (formula "2") (term "0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "6") (term "0,0,0,0,0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "3") (term "0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "6") (term "0,1,0,1,0"))
               (rule "polySimp_addComm1" (formula "1") (term "0,1,0,0,0,0"))
               (rule "getOfSeqDef" (formula "6") (term "0,0,1,0,1"))
               (rule "castDel" (formula "6") (term "1,0,0,1,0,1"))
               (rule "castDel" (formula "6") (term "2,0,0,1,0,1"))
               (rule "add_zero_right" (formula "6") (term "1,1,0,0,1,0,1"))
               (rule "polySimp_elimSub" (formula "6") (term "1,1,0,0,0,1,0,1"))
               (rule "times_zero_2" (formula "6") (term "1,1,1,0,0,0,1,0,1"))
               (rule "add_zero_right" (formula "6") (term "1,1,0,0,0,1,0,1"))
               (rule "inEqSimp_ltToLeq" (formula "6") (term "1,0,0,0,1,0,1"))
               (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1,0,0,0,1,0,1"))
               (rule "inEqSimp_commuteLeq" (formula "6") (term "0,0,0,0,1,0,1"))
               (rule "getOfSeqDef" (formula "6") (term "0,0,1,0,0,0,0"))
               (rule "castDel" (formula "6") (term "1,0,0,1,0,0,0,0"))
               (rule "add_zero_right" (formula "6") (term "1,1,0,0,1,0,0,0,0"))
               (rule "polySimp_elimSub" (formula "6") (term "1,1,0,0,0,1,0,0,0,0"))
               (rule "times_zero_2" (formula "6") (term "1,1,1,0,0,0,1,0,0,0,0"))
               (rule "add_zero_right" (formula "6") (term "1,1,0,0,0,1,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "6") (term "1,0,0,0,1,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1,0,0,0,1,0,0,0,0"))
               (rule "getOfSeqDef" (formula "6") (term "1,0,1,0,0,0,0"))
               (rule "castDel" (formula "6") (term "1,1,0,1,0,0,0,0"))
               (rule "add_zero_right" (formula "6") (term "1,1,1,0,1,0,0,0,0"))
               (rule "polySimp_elimSub" (formula "6") (term "1,1,0,1,0,1,0,0,0,0"))
               (rule "times_zero_2" (formula "6") (term "1,1,1,0,1,0,1,0,0,0,0"))
               (rule "add_zero_right" (formula "6") (term "1,1,0,1,0,1,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "6") (term "1,0,1,0,1,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1,0,1,0,1,0,0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "6") (term "0,0,0,0,1,0,0,0,0"))
               (rule "getOfSeqDef" (formula "6") (term "1,0,1,1,0,1,0"))
               (rule "castDel" (formula "6") (term "1,1,0,1,1,0,1,0"))
               (rule "add_zero_right" (formula "6") (term "1,1,1,0,1,1,0,1,0"))
               (rule "polySimp_elimSub" (formula "6") (term "1,1,0,1,0,1,1,0,1,0"))
               (rule "times_zero_2" (formula "6") (term "1,1,1,0,1,0,1,1,0,1,0"))
               (rule "add_zero_right" (formula "6") (term "1,1,0,1,0,1,1,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "6") (term "1,0,1,0,1,1,0,1,0"))
               (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1,0,1,0,1,1,0,1,0"))
               (rule "inEqSimp_commuteLeq" (formula "6") (term "0,0,1,0,1,0,0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "6") (term "0,0,1,0,1,1,0,1,0"))
               (rule "getOfSeqDef" (formula "6") (term "0,0,1,0,1,0"))
               (rule "castDel" (formula "6") (term "1,0,0,1,0,1,0"))
               (rule "add_zero_right" (formula "6") (term "1,1,0,0,1,0,1,0"))
               (rule "polySimp_elimSub" (formula "6") (term "1,1,0,0,0,1,0,1,0"))
               (rule "times_zero_2" (formula "6") (term "1,1,1,0,0,0,1,0,1,0"))
               (rule "add_zero_right" (formula "6") (term "1,1,0,0,0,1,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "6") (term "1,0,0,0,1,0,1,0"))
               (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1,0,0,0,1,0,1,0"))
               (rule "inEqSimp_commuteLeq" (formula "6") (term "0,0,0,0,1,0,1,0"))
               (rule "applyEqRigid" (formula "2") (term "0,1,0,0,1,0,0") (ifseqformula "4"))
               (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1,0,0"))
               (rule "polySimp_rightDist" (formula "2") (term "1,0,0,1,0,0"))
               (rule "mul_literals" (formula "2") (term "0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,0,0"))
               (rule "add_literals" (formula "2") (term "0,0,0,1,0,0"))
               (rule "add_zero_left" (formula "2") (term "0,0,1,0,0"))
               (rule "applyEq" (formula "1") (term "0,1,0,0,1,0,0,0") (ifseqformula "4"))
               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0,0"))
               (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0,0"))
               (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0,0"))
               (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0,0"))
               (rule "add_literals" (formula "1") (term "0,0,0,1,0,0,0"))
               (rule "add_zero_left" (formula "1") (term "0,0,1,0,0,0"))
               (rule "applyEq" (formula "2") (term "0,1,0,0,1,1,0") (ifseqformula "4"))
               (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1,1,0"))
               (rule "polySimp_rightDist" (formula "2") (term "1,0,0,1,1,0"))
               (rule "mul_literals" (formula "2") (term "0,1,0,0,1,1,0"))
               (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,1,0"))
               (rule "add_literals" (formula "2") (term "0,0,0,1,1,0"))
               (rule "add_zero_left" (formula "2") (term "0,0,1,1,0"))
               (rule "applyEq" (formula "3") (term "0,1,0,0,1,0,0") (ifseqformula "4"))
               (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1,0,0"))
               (rule "polySimp_rightDist" (formula "3") (term "1,0,0,1,0,0"))
               (rule "mul_literals" (formula "3") (term "0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "3") (term "0,0,1,0,0"))
               (rule "add_literals" (formula "3") (term "0,0,0,1,0,0"))
               (rule "add_zero_left" (formula "3") (term "0,0,1,0,0"))
               (rule "applyEq" (formula "7") (term "0,1,0,0,1,0,0") (ifseqformula "4"))
               (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0"))
               (rule "polySimp_rightDist" (formula "7") (term "1,0,0,1,0,0"))
               (rule "mul_literals" (formula "7") (term "0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "7") (term "0,0,1,0,0"))
               (rule "add_literals" (formula "7") (term "0,0,0,1,0,0"))
               (rule "add_zero_left" (formula "7") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "1,0,0,1"))
               (rule "polySimp_mulComm0" (formula "6") (term "1,1,0,0,1"))
               (rule "polySimp_rightDist" (formula "6") (term "1,1,0,0,1"))
               (rule "mul_literals" (formula "6") (term "0,1,1,0,0,1"))
               (rule "polySimp_mulLiterals" (formula "6") (term "1,1,1,0,0,1"))
               (rule "polySimp_elimOne" (formula "6") (term "1,1,1,0,0,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "1,0,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "6") (term "1,1,0,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "6") (term "1,1,0,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "6") (term "1,1,1,0,0,0,0,0"))
               (rule "mul_literals" (formula "6") (term "0,1,1,0,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "6") (term "1,1,1,0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "1,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "6") (term "1,1,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "6") (term "1,1,0,0,1,0"))
               (rule "mul_literals" (formula "6") (term "0,1,1,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "6") (term "1,1,1,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "6") (term "1,1,1,0,0,1,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "6") (term "1,0,0,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "6") (term "0,1,0,0,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "6") (term "0,1,0,0,0,0,0,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "1,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "1") (term "0,1,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "1,0,0,0,1,0,1"))
               (rule "polySimp_mulComm0" (formula "6") (term "1,1,0,0,0,1,0,1"))
               (rule "polySimp_rightDist" (formula "6") (term "1,1,0,0,0,1,0,1"))
               (rule "mul_literals" (formula "6") (term "0,1,1,0,0,0,1,0,1"))
               (rule "polySimp_mulLiterals" (formula "6") (term "1,1,1,0,0,0,1,0,1"))
               (rule "polySimp_elimOne" (formula "6") (term "1,1,1,0,0,0,1,0,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "1,0,0,0,1,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "6") (term "1,1,0,0,0,1,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "6") (term "1,1,0,0,0,1,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "6") (term "1,1,1,0,0,0,1,0,0,0,0"))
               (rule "mul_literals" (formula "6") (term "0,1,1,0,0,0,1,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "6") (term "1,1,1,0,0,0,1,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "1,0,1,0,1,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "6") (term "1,1,0,1,0,1,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "6") (term "1,1,0,1,0,1,0,0,0,0"))
               (rule "mul_literals" (formula "6") (term "0,1,1,0,1,0,1,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "6") (term "1,1,1,0,1,0,1,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "6") (term "1,1,1,0,1,0,1,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "1,0,1,0,1,1,0,1,0"))
               (rule "polySimp_mulComm0" (formula "6") (term "1,1,0,1,0,1,1,0,1,0"))
               (rule "polySimp_rightDist" (formula "6") (term "1,1,0,1,0,1,1,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "6") (term "1,1,1,0,1,0,1,1,0,1,0"))
               (rule "mul_literals" (formula "6") (term "0,1,1,0,1,0,1,1,0,1,0"))
               (rule "polySimp_elimOne" (formula "6") (term "1,1,1,0,1,0,1,1,0,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "1,0,0,0,1,0,1,0"))
               (rule "polySimp_mulComm0" (formula "6") (term "1,1,0,0,0,1,0,1,0"))
               (rule "polySimp_rightDist" (formula "6") (term "1,1,0,0,0,1,0,1,0"))
               (rule "mul_literals" (formula "6") (term "0,1,1,0,0,0,1,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "6") (term "1,1,1,0,0,0,1,0,1,0"))
               (rule "polySimp_elimOne" (formula "6") (term "1,1,1,0,0,0,1,0,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "2") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0"))
               (rule "polySimp_elimOne" (formula "2") (term "1,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "2") (term "1,1,0"))
               (rule "polySimp_mulLiterals" (formula "2") (term "1,1,1,0"))
               (rule "polySimp_elimOne" (formula "2") (term "1,1,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0"))
               (rule "polySimp_elimOne" (formula "3") (term "1,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0"))
               (rule "polySimp_elimOne" (formula "7") (term "1,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "1,1,0,1,0"))
               (rule "polySimp_mulComm0" (formula "6") (term "1,1,1,0,1,0"))
               (rule "polySimp_rightDist" (formula "6") (term "1,1,1,0,1,0"))
               (rule "mul_literals" (formula "6") (term "0,1,1,1,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "6") (term "1,1,1,1,0,1,0"))
               (rule "polySimp_elimOne" (formula "6") (term "1,1,1,1,0,1,0"))
               (rule "lenOfSeqDef" (formula "6") (term "1,1,1,0,0,1"))
               (rule "polySimp_elimSub" (formula "6") (term "1,1,1,1,0,0,1"))
               (rule "times_zero_2" (formula "6") (term "1,1,1,1,1,0,0,1"))
               (rule "add_zero_right" (formula "6") (term "1,1,1,1,0,0,1"))
               (rule "inEqSimp_ltToLeq" (formula "6") (term "0,1,1,1,0,0,1"))
               (rule "add_zero_right" (formula "6") (term "0,0,1,1,1,0,0,1"))
               (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1,1,1,0,0,1"))
               (rule "inEqSimp_sepNegMonomial0" (formula "6") (term "0,1,1,1,0,0,1"))
               (rule "polySimp_mulLiterals" (formula "6") (term "0,0,1,1,1,0,0,1"))
               (rule "polySimp_elimOne" (formula "6") (term "0,0,1,1,1,0,0,1"))
               (rule "lenOfSeqDef" (formula "6") (term "1,1,1,0,0,0,0,0"))
               (rule "polySimp_elimSub" (formula "6") (term "1,1,1,1,0,0,0,0,0"))
               (rule "mul_literals" (formula "6") (term "1,1,1,1,1,0,0,0,0,0"))
               (rule "add_zero_right" (formula "6") (term "1,1,1,1,0,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "6") (term "0,1,1,1,0,0,0,0,0"))
               (rule "add_zero_right" (formula "6") (term "0,0,1,1,1,0,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1,1,1,0,0,0,0,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "6") (term "0,1,1,1,0,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "6") (term "0,0,1,1,1,0,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "6") (term "0,0,1,1,1,0,0,0,0,0"))
               (rule "lenOfSeqDef" (formula "6") (term "1,1,1,0,0,1,0"))
               (rule "polySimp_elimSub" (formula "6") (term "1,1,1,1,0,0,1,0"))
               (rule "times_zero_2" (formula "6") (term "1,1,1,1,1,0,0,1,0"))
               (rule "add_zero_right" (formula "6") (term "1,1,1,1,0,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "6") (term "0,1,1,1,0,0,1,0"))
               (rule "add_zero_right" (formula "6") (term "0,0,1,1,1,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1,1,1,0,0,1,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "6") (term "0,1,1,1,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "6") (term "0,0,1,1,1,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "6") (term "0,0,1,1,1,0,0,1,0"))
               (rule "lenOfSeqDef" (formula "6") (term "1,1,1,1,0,1,0"))
               (rule "polySimp_elimSub" (formula "6") (term "1,1,1,1,1,0,1,0"))
               (rule "times_zero_2" (formula "6") (term "1,1,1,1,1,1,0,1,0"))
               (rule "add_zero_right" (formula "6") (term "1,1,1,1,1,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "6") (term "0,1,1,1,1,0,1,0"))
               (rule "add_zero_right" (formula "6") (term "0,0,1,1,1,1,0,1,0"))
               (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1,1,1,1,0,1,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "6") (term "0,1,1,1,1,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "6") (term "0,0,1,1,1,1,0,1,0"))
               (rule "polySimp_elimOne" (formula "6") (term "0,0,1,1,1,1,0,1,0"))
               (rule "nnf_ex2all" (formula "7"))
               (rule "nnf_imp2or" (formula "3") (term "0"))
               (rule "nnf_imp2or" (formula "4") (term "0"))
               (rule "nnf_imp2or" (formula "2") (term "0,0"))
               (rule "nnf_imp2or" (formula "7") (term "0,1"))
               (rule "nnf_notAnd" (formula "1") (term "0"))
               (rule "nnf_imp2or" (formula "7") (term "0,0,0,0"))
               (rule "nnf_notAnd" (formula "3") (term "0,0"))
               (rule "inEqSimp_notLeq" (formula "3") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "3") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "3") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "3") (term "1,1,0,0"))
               (rule "mul_literals" (formula "3") (term "0,1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "3") (term "1,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "3") (term "1,1,1,0,0"))
               (rule "inEqSimp_notGeq" (formula "3") (term "0,0,0"))
               (rule "times_zero_1" (formula "3") (term "1,0,0,0,0,0"))
               (rule "add_zero_right" (formula "3") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "0,0,0"))
               (rule "mul_literals" (formula "3") (term "1,0,0,0"))
               (rule "nnf_notAnd" (formula "4") (term "0,0"))
               (rule "inEqSimp_notGeq" (formula "4") (term "0,0,0"))
               (rule "times_zero_1" (formula "4") (term "1,0,0,0,0,0"))
               (rule "add_zero_right" (formula "4") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "4") (term "0,0,0"))
               (rule "mul_literals" (formula "4") (term "1,0,0,0"))
               (rule "inEqSimp_notLeq" (formula "4") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "4") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "4") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "4") (term "1,1,0,0"))
               (rule "mul_literals" (formula "4") (term "0,1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "4") (term "1,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "4") (term "1,1,1,0,0"))
               (rule "nnf_notAnd" (formula "1") (term "0,0"))
               (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0"))
               (rule "mul_literals" (formula "1") (term "0,1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0,0"))
               (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
               (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
               (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
               (rule "mul_literals" (formula "1") (term "1,0,0,0"))
               (rule "nnf_imp2or" (formula "7") (term "0,1,0"))
               (rule "nnf_notAnd" (formula "2") (term "0,0,0"))
               (rule "inEqSimp_notLeq" (formula "2") (term "1,0,0,0"))
               (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "1,0,0,0"))
               (rule "polySimp_mulComm0" (formula "2") (term "1,1,0,0,0"))
               (rule "polySimp_rightDist" (formula "2") (term "1,1,0,0,0"))
               (rule "mul_literals" (formula "2") (term "0,1,1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "2") (term "1,1,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "2") (term "1,1,1,0,0,0"))
               (rule "nnf_notAnd" (formula "7") (term "0,0,1"))
               (rule "inEqSimp_notGeq" (formula "7") (term "0,0,0,1"))
               (rule "times_zero_1" (formula "7") (term "1,0,0,0,0,0,1"))
               (rule "add_zero_right" (formula "7") (term "0,0,0,0,0,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0,0,1"))
               (rule "mul_literals" (formula "7") (term "1,0,0,0,1"))
               (rule "inEqSimp_notLeq" (formula "7") (term "1,0,0,1"))
               (rule "polySimp_rightDist" (formula "7") (term "1,0,0,1,0,0,1"))
               (rule "mul_literals" (formula "7") (term "0,1,0,0,1,0,0,1"))
               (rule "polySimp_addAssoc" (formula "7") (term "0,0,1,0,0,1"))
               (rule "add_literals" (formula "7") (term "0,0,0,1,0,0,1"))
               (rule "add_zero_left" (formula "7") (term "0,0,1,0,0,1"))
               (rule "inEqSimp_sepPosMonomial1" (formula "7") (term "1,0,0,1"))
               (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0,1"))
               (rule "polySimp_elimOne" (formula "7") (term "1,1,0,0,1"))
               (rule "nnf_notAnd" (formula "7") (term "0,0,0,0,0"))
               (rule "inEqSimp_notLeq" (formula "7") (term "1,0,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "7") (term "1,0,0,1,0,0,0,0,0"))
               (rule "mul_literals" (formula "7") (term "0,1,0,0,1,0,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "7") (term "0,0,1,0,0,0,0,0"))
               (rule "add_literals" (formula "7") (term "0,0,0,1,0,0,0,0,0"))
               (rule "add_zero_left" (formula "7") (term "0,0,1,0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "7") (term "1,0,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "7") (term "1,1,0,0,0,0,0"))
               (rule "nnf_notAnd" (formula "7") (term "0,0,1,0"))
               (rule "inEqSimp_notLeq" (formula "7") (term "1,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "7") (term "1,0,0,1,0,0,1,0"))
               (rule "mul_literals" (formula "7") (term "0,1,0,0,1,0,0,1,0"))
               (rule "polySimp_addAssoc" (formula "7") (term "0,0,1,0,0,1,0"))
               (rule "add_literals" (formula "7") (term "0,0,0,1,0,0,1,0"))
               (rule "add_zero_left" (formula "7") (term "0,0,1,0,0,1,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "7") (term "1,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "7") (term "1,1,0,0,1,0"))
               (rule "inEqSimp_notGeq" (formula "7") (term "0,0,0,1,0"))
               (rule "times_zero_1" (formula "7") (term "1,0,0,0,0,0,1,0"))
               (rule "add_zero_right" (formula "7") (term "0,0,0,0,0,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0,0,1,0"))
               (rule "mul_literals" (formula "7") (term "1,0,0,0,1,0"))
               (rule "nnf_notAnd" (formula "2") (term "0,0,0,0"))
               (rule "inEqSimp_notGeq" (formula "2") (term "0,0,0,0,0"))
               (rule "times_zero_1" (formula "2") (term "1,0,0,0,0,0,0,0"))
               (rule "add_zero_right" (formula "2") (term "0,0,0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "2") (term "0,0,0,0,0"))
               (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0"))
               (rule "inEqSimp_notGeq" (formula "2") (term "1,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "2") (term "1,0,0,1,0,0,0,0"))
               (rule "mul_literals" (formula "2") (term "0,1,0,0,1,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,0,0,0,0"))
               (rule "add_literals" (formula "2") (term "0,0,0,1,0,0,0,0"))
               (rule "add_zero_left" (formula "2") (term "0,0,1,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "2") (term "1,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "2") (term "1,1,0,0,0,0"))
               (rule "nnf_notAnd" (formula "7") (term "0,0,0,0,0,0"))
               (rule "inEqSimp_notGeq" (formula "7") (term "1,0,0,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "7") (term "1,0,0,1,0,0,0,0,0,0"))
               (rule "mul_literals" (formula "7") (term "0,1,0,0,1,0,0,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "7") (term "0,0,1,0,0,0,0,0,0"))
               (rule "add_literals" (formula "7") (term "0,0,0,1,0,0,0,0,0,0"))
               (rule "add_zero_left" (formula "7") (term "0,0,1,0,0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,0,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "7") (term "1,1,0,0,0,0,0,0"))
               (rule "inEqSimp_notGeq" (formula "7") (term "0,0,0,0,0,0,0"))
               (rule "times_zero_1" (formula "7") (term "1,0,0,0,0,0,0,0,0,0"))
               (rule "add_zero_right" (formula "7") (term "0,0,0,0,0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0,0,0,0,0,0"))
               (rule "mul_literals" (formula "7") (term "1,0,0,0,0,0,0,0"))
               (rule "cnf_rightDist" (formula "3") (term "0"))
               (rule "distr_forallAnd" (formula "3"))
               (rule "andLeft" (formula "3"))
               (rule "lenNonNegative" (formula "6") (term "0"))
               (rule "inEqSimp_commuteLeq" (formula "6"))
               (rule "applyEqRigid" (formula "6") (term "0") (ifseqformula "7"))
               (rule "inEqSimp_sepPosMonomial1" (formula "6"))
               (rule "mul_literals" (formula "6") (term "1"))
               (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "8"))
               (rule "leq_literals" (formula "6") (term "0"))
               (rule "concrete_or_1" (formula "6"))
               (rule "true_left" (formula "6"))
               (rule "commute_or" (formula "4") (term "0"))
               (rule "commute_or_2" (formula "2") (term "0,0,0"))
               (rule "andRight" (formula "8"))
               (branch "Case 1"
                  (rule "andRight" (formula "8"))
                  (branch "Case 1"
                     (rule "allRight" (formula "8") (inst "sk=v_iv_3"))
                     (rule "allRight" (formula "8") (inst "sk=v_jv_1"))
                     (rule "orRight" (formula "8"))
                     (rule "notRight" (formula "9"))
                     (rule "orRight" (formula "9"))
                     (rule "orRight" (formula "9"))
                     (rule "inEqSimp_geqRight" (formula "11"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                     (rule "inEqSimp_leqRight" (formula "10"))
                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0"))
                     (rule "add_zero_left" (formula "1") (term "0"))
                     (rule "replace_known_left" (formula "3") (term "0,0,1") (ifseqformula "1"))
                     (rule "concrete_and_1" (formula "3") (term "0,1"))
                     (rule "inEqSimp_leqRight" (formula "11"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "3") (term "0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1"))
                     (rule "polySimp_rightDist" (formula "1") (term "1"))
                     (rule "mul_literals" (formula "1") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                     (rule "polySimp_elimOne" (formula "3") (term "0"))
                     (rule "ifthenelse_split" (formula "4") (term "0"))
                     (branch "v_jv_1 >= 0 & v_jv_1 <= -1 + N_0 TRUE"
                        (rule "andLeft" (formula "4"))
                        (rule "eqSymm" (formula "6"))
                        (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "5"))
                        (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                        (rule "mul_literals" (formula "1") (term "0,0,0"))
                        (rule "polySimp_addComm1" (formula "1") (term "0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                        (rule "add_literals" (formula "1") (term "0,0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                        (rule "polySimp_elimOne" (formula "1") (term "0"))
                        (rule "inEqSimp_subsumption0" (formula "7") (term "0,0") (ifseqformula "1"))
                        (rule "inEqSimp_homoInEq0" (formula "7") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0,0"))
                        (rule "mul_literals" (formula "7") (term "0,1,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "7") (term "0,0,0,0"))
                        (rule "polySimp_addComm1" (formula "7") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "7") (term "0,0,0,0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,0,0"))
                        (rule "add_literals" (formula "7") (term "1,1,0,0,0,0"))
                        (rule "times_zero_1" (formula "7") (term "1,0,0,0,0"))
                        (rule "add_zero_right" (formula "7") (term "0,0,0,0"))
                        (rule "qeq_literals" (formula "7") (term "0,0,0"))
                        (rule "concrete_or_1" (formula "7") (term "0,0"))
                        (rule "ifthenelse_true" (formula "7") (term "0"))
                        (rule "eqSymm" (formula "7"))
                        (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "6"))
                        (rule "times_zero_1" (formula "5") (term "0,0"))
                        (rule "add_zero_left" (formula "5") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                        (rule "mul_literals" (formula "5") (term "1"))
                        (rule "replace_known_left" (formula "4") (term "0,0") (ifseqformula "5"))
                        (rule "ifthenelse_true" (formula "4") (term "0"))
                        (rule "inEqSimp_homoInEq1" (formula "4"))
                        (rule "polySimp_addComm1" (formula "4") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                        (rule "polySimp_mulComm0" (formula "4") (term "1"))
                        (rule "polySimp_rightDist" (formula "4") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                        (rule "mul_literals" (formula "4") (term "0,1"))
                        (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                        (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "4"))
                        (rule "leq_literals" (formula "14") (term "0"))
                        (rule "concrete_or_1" (formula "14"))
                        (rule "true_left" (formula "14"))
                        (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "1"))
                        (rule "times_zero_1" (formula "3") (term "0,0"))
                        (rule "add_zero_left" (formula "3") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                        (rule "mul_literals" (formula "3") (term "1"))
                        (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "3"))
                        (rule "leq_literals" (formula "5") (term "0"))
                        (rule "concrete_or_1" (formula "5"))
                        (rule "true_left" (formula "5"))
                        (rule "allLeft" (formula "9") (inst "t=v_iv_3"))
                        (rule "inEqSimp_contradInEq1" (formula "9") (term "0,0,0,0") (ifseqformula "4"))
                        (rule "qeq_literals" (formula "9") (term "0,0,0,0,0"))
                        (rule "concrete_and_2" (formula "9") (term "0,0,0,0"))
                        (rule "concrete_or_2" (formula "9") (term "0,0,0"))
                        (rule "allLeft" (formula "9") (inst "t=v_jv_1"))
                        (rule "replace_known_left" (formula "9") (term "0,1") (ifseqformula "7"))
                        (rule "concrete_not_1" (formula "9") (term "1"))
                        (rule "concrete_or_4" (formula "9"))
                        (rule "inEqSimp_contradInEq1" (formula "9") (term "1") (ifseqformula "2"))
                        (rule "inEqSimp_homoInEq1" (formula "9") (term "0,1"))
                        (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,1"))
                        (rule "add_literals" (formula "9") (term "1,1,0,0,1"))
                        (rule "times_zero_1" (formula "9") (term "1,0,0,1"))
                        (rule "add_zero_right" (formula "9") (term "0,0,1"))
                        (rule "leq_literals" (formula "9") (term "0,1"))
                        (rule "concrete_and_2" (formula "9") (term "1"))
                        (rule "concrete_or_4" (formula "9"))
                        (rule "inEqSimp_contradInEq0" (formula "9") (ifseqformula "6"))
                        (rule "andLeft" (formula "9"))
                        (rule "inEqSimp_homoInEq1" (formula "9"))
                        (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "9") (term "1,0"))
                        (rule "mul_literals" (formula "9") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "9") (term "0"))
                        (rule "polySimp_addComm1" (formula "9") (term "0,0"))
                        (rule "add_literals" (formula "9") (term "0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "9") (term "0"))
                        (rule "add_literals" (formula "9") (term "1,1,0"))
                        (rule "times_zero_1" (formula "9") (term "1,0"))
                        (rule "add_literals" (formula "9") (term "0"))
                        (rule "leq_literals" (formula "9"))
                        (rule "closeFalse" (formula "9"))
                     )
                     (branch "v_jv_1 >= 0 & v_jv_1 <= -1 + N_0 FALSE"
                        (rule "eqSymm" (formula "4"))
                        (rule "ifthenelse_concrete4" (formula "4"))
                        (rule "eqSymm" (formula "4") (term "1"))
                        (rule "inEqSimp_notLeq" (formula "4") (term "0"))
                        (rule "polySimp_rightDist" (formula "4") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "4") (term "0,1,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "4") (term "0,0,0"))
                        (rule "add_literals" (formula "4") (term "0,0,0,0"))
                        (rule "add_zero_left" (formula "4") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "4") (term "0"))
                        (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
                        (rule "polySimp_elimOne" (formula "4") (term "1,0"))
                        (rule "ifthenelse_split" (formula "3") (term "0"))
                        (branch "N_0 >= 1 TRUE"
                           (rule "inEqSimp_homoInEq1" (formula "4"))
                           (rule "polySimp_addComm1" (formula "4") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                           (rule "polySimp_mulComm0" (formula "4") (term "1"))
                           (rule "polySimp_rightDist" (formula "4") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                           (rule "mul_literals" (formula "4") (term "0,1"))
                           (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                           (rule "replace_known_left" (formula "13") (term "1") (ifseqformula "4"))
                           (rule "concrete_and_3" (formula "13"))
                           (rule "inEqSimp_geqRight" (formula "13"))
                           (rule "times_zero_1" (formula "1") (term "1,0,0"))
                           (rule "add_literals" (formula "1") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                           (rule "mul_literals" (formula "1") (term "1"))
                           (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "4"))
                           (rule "leq_literals" (formula "13") (term "0"))
                           (rule "concrete_or_1" (formula "13"))
                           (rule "true_left" (formula "13"))
                           (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "1"))
                           (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                           (rule "mul_literals" (formula "2") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "2") (term "0"))
                           (rule "add_literals" (formula "2") (term "0,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                           (rule "polySimp_elimOne" (formula "2") (term "0"))
                           (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "4"))
                           (rule "qeq_literals" (formula "2") (term "0"))
                           (rule "concrete_and_2" (formula "2"))
                           (rule "closeFalse" (formula "2"))
                        )
                        (branch "N_0 >= 1 FALSE"
                           (rule "inEqSimp_geqRight" (formula "12"))
                           (rule "mul_literals" (formula "1") (term "1,0,0"))
                           (rule "add_literals" (formula "1") (term "0,0"))
                           (rule "add_zero_left" (formula "1") (term "0"))
                           (rule "inEqSimp_homoInEq1" (formula "4"))
                           (rule "times_zero_2" (formula "4") (term "1,0"))
                           (rule "add_zero_right" (formula "4") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                           (rule "mul_literals" (formula "4") (term "1"))
                           (rule "inEqSimp_contradInEq0" (formula "13") (term "0") (ifseqformula "4"))
                           (rule "qeq_literals" (formula "13") (term "0,0"))
                           (rule "concrete_and_2" (formula "13") (term "0"))
                           (rule "concrete_and_2" (formula "13"))
                           (rule "false_right" (formula "13"))
                           (rule "inEqSimp_antiSymm" (formula "12") (ifseqformula "1"))
                           (rule "applyEq" (formula "6") (term "1,1,1,0,0") (ifseqformula "12"))
                           (rule "add_zero_right" (formula "6") (term "1,1,0,0"))
                           (rule "applyEq" (formula "8") (term "1,1,1,0,0") (ifseqformula "12"))
                           (rule "add_zero_right" (formula "8") (term "1,1,0,0"))
                           (rule "applyEq" (formula "10") (term "1,1,1,0,0") (ifseqformula "12"))
                           (rule "add_zero_right" (formula "10") (term "1,1,0,0"))
                           (rule "applyEq" (formula "9") (term "1,1,0") (ifseqformula "12"))
                           (rule "applyEqRigid" (formula "9") (term "1,1,1,0,0") (ifseqformula "12"))
                           (rule "add_zero_right" (formula "9") (term "1,1,0,0"))
                           (rule "applyEq" (formula "7") (term "1,1,1,0,0,0,0") (ifseqformula "12"))
                           (rule "add_zero_right" (formula "7") (term "1,1,0,0,0,0"))
                           (rule "applyEqRigid" (formula "13") (term "0") (ifseqformula "12"))
                           (rule "qeq_literals" (formula "13"))
                           (rule "true_left" (formula "13"))
                           (rule "applyEqRigid" (formula "1") (term "0") (ifseqformula "12"))
                           (rule "leq_literals" (formula "1"))
                           (rule "true_left" (formula "1"))
                           (rule "applyEqRigid" (formula "4") (term "1,0") (ifseqformula "11"))
                           (rule "replace_known_left" (formula "4") (term "0") (ifseqformula "2"))
                           (rule "concrete_or_1" (formula "4"))
                           (rule "true_left" (formula "4"))
                           (rule "applyEqRigid" (formula "9") (term "1,1") (ifseqformula "10"))
                           (rule "add_zero_right" (formula "9") (term "1"))
                           (rule "applyEqRigid" (formula "4") (term "1,0,1,0") (ifseqformula "10"))
                           (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "3"))
                           (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                           (rule "mul_literals" (formula "1") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "1") (term "0"))
                           (rule "add_literals" (formula "1") (term "0,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                           (rule "polySimp_elimOne" (formula "1") (term "0"))
                           (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "3"))
                           (rule "qeq_literals" (formula "1") (term "0"))
                           (rule "concrete_and_2" (formula "1"))
                           (rule "closeFalse" (formula "1"))
                        )
                     )
                  )
                  (branch "Case 2"
                     (rule "allRight" (formula "8") (inst "sk=v_iv_2"))
                     (rule "orRight" (formula "8"))
                     (rule "orRight" (formula "8"))
                     (rule "inEqSimp_leqRight" (formula "8"))
                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0"))
                     (rule "add_zero_left" (formula "1") (term "0"))
                     (rule "replace_known_left" (formula "10") (term "0,0,0,1") (ifseqformula "1"))
                     (rule "concrete_and_1" (formula "10") (term "0,0,1"))
                     (rule "replace_known_left" (formula "10") (term "0,0,0,0") (ifseqformula "1"))
                     (rule "concrete_and_1" (formula "10") (term "0,0,0"))
                     (rule "inEqSimp_geqRight" (formula "9"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                     (rule "polySimp_elimOne" (formula "1") (term "0"))
                     (rule "ifthenelse_split" (formula "10") (term "1,1,1"))
                     (branch "N_0 >= 1 TRUE"
                        (rule "replace_known_left" (formula "2") (term "0,0") (ifseqformula "1"))
                        (rule "ifthenelse_true" (formula "2") (term "0"))
                        (rule "inEqSimp_homoInEq1" (formula "2"))
                        (rule "polySimp_addComm1" (formula "2") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                        (rule "polySimp_mulComm0" (formula "2") (term "1"))
                        (rule "polySimp_rightDist" (formula "2") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                        (rule "mul_literals" (formula "2") (term "0,1"))
                        (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                        (rule "replace_known_left" (formula "11") (term "0,0,0") (ifseqformula "2"))
                        (rule "ifthenelse_true" (formula "11") (term "0,0"))
                        (rule "replace_known_left" (formula "11") (term "0,0,1") (ifseqformula "2"))
                        (rule "ifthenelse_true" (formula "11") (term "0,1"))
                        (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "1"))
                        (rule "leq_literals" (formula "10") (term "0"))
                        (rule "concrete_or_1" (formula "10"))
                        (rule "true_left" (formula "10"))
                        (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "2"))
                        (rule "times_zero_1" (formula "3") (term "0,0"))
                        (rule "add_zero_left" (formula "3") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                        (rule "mul_literals" (formula "3") (term "1"))
                        (rule "cut_direct" (formula "10") (term "0"))
                        (branch "CUT: (int)s_1[v_iv_2] >= 0 TRUE"
                           (rule "concrete_and_1" (formula "11"))
                           (rule "inEqSimp_leqRight" (formula "11"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                           (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                           (rule "add_literals" (formula "1") (term "0,0,0"))
                           (rule "add_zero_left" (formula "1") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                           (rule "polySimp_elimOne" (formula "1") (term "1"))
                           (rule "allLeft" (formula "9") (inst "t=v_iv_2"))
                           (rule "inEqSimp_contradInEq1" (formula "9") (term "0,0") (ifseqformula "5"))
                           (rule "qeq_literals" (formula "9") (term "0,0,0"))
                           (rule "concrete_and_2" (formula "9") (term "0,0"))
                           (rule "concrete_or_2" (formula "9") (term "0"))
                           (rule "inEqSimp_contradInEq0" (formula "9") (term "0") (ifseqformula "4"))
                           (rule "inEqSimp_homoInEq1" (formula "9") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "9") (term "0,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "9") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "9") (term "0,0,0,0"))
                           (rule "add_literals" (formula "9") (term "0,0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,0"))
                           (rule "add_literals" (formula "9") (term "1,1,0,0,0"))
                           (rule "times_zero_1" (formula "9") (term "1,0,0,0"))
                           (rule "add_zero_right" (formula "9") (term "0,0,0"))
                           (rule "leq_literals" (formula "9") (term "0,0"))
                           (rule "concrete_and_2" (formula "9") (term "0"))
                           (rule "concrete_or_2" (formula "9"))
                           (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "9"))
                           (rule "applyEq" (formula "10") (term "0") (ifseqformula "1"))
                           (rule "inEqSimp_homoInEq0" (formula "10"))
                           (rule "polySimp_pullOutFactor1" (formula "10") (term "0"))
                           (rule "add_literals" (formula "10") (term "1,0"))
                           (rule "times_zero_1" (formula "10") (term "0"))
                           (rule "qeq_literals" (formula "10"))
                           (rule "true_left" (formula "10"))
                           (rule "applyEqRigid" (formula "3") (term "0") (ifseqformula "1"))
                           (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                           (rule "inEqSimp_homoInEq1" (formula "2"))
                           (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                           (rule "add_literals" (formula "2") (term "1,0"))
                           (rule "times_zero_1" (formula "2") (term "0"))
                           (rule "leq_literals" (formula "2"))
                           (rule "true_left" (formula "2"))
                           (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "3"))
                           (rule "leq_literals" (formula "2") (term "0"))
                           (rule "concrete_or_1" (formula "2"))
                           (rule "true_left" (formula "2"))
                           (rule "allLeft" (formula "5") (inst "t=v_iv_2"))
                           (rule "replace_known_left" (formula "5") (term "0,1") (ifseqformula "1"))
                           (rule "concrete_not_1" (formula "5") (term "1"))
                           (rule "concrete_or_4" (formula "5"))
                           (rule "inEqSimp_contradInEq1" (formula "5") (term "0") (ifseqformula "4"))
                           (rule "qeq_literals" (formula "5") (term "0,0"))
                           (rule "concrete_and_2" (formula "5") (term "0"))
                           (rule "concrete_or_2" (formula "5"))
                           (rule "inEqSimp_contradInEq1" (formula "3") (ifseqformula "5"))
                           (rule "andLeft" (formula "3"))
                           (rule "inEqSimp_homoInEq1" (formula "3"))
                           (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                           (rule "mul_literals" (formula "3") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "3") (term "0"))
                           (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                           (rule "add_literals" (formula "3") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                           (rule "add_literals" (formula "3") (term "1,1,0"))
                           (rule "times_zero_1" (formula "3") (term "1,0"))
                           (rule "add_zero_right" (formula "3") (term "0"))
                           (rule "leq_literals" (formula "3"))
                           (rule "closeFalse" (formula "3"))
                        )
                        (branch "CUT: (int)s_1[v_iv_2] >= 0 FALSE"
                           (rule "concrete_and_2" (formula "11"))
                           (rule "false_right" (formula "11"))
                           (rule "inEqSimp_geqRight" (formula "10"))
                           (rule "times_zero_1" (formula "1") (term "1,0,0"))
                           (rule "add_literals" (formula "1") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                           (rule "mul_literals" (formula "1") (term "1"))
                           (rule "allLeft" (formula "8") (inst "t=v_iv_2"))
                           (rule "inEqSimp_contradInEq0" (formula "8") (term "1,0") (ifseqformula "3"))
                           (rule "inEqSimp_homoInEq1" (formula "8") (term "0,1,0"))
                           (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,0"))
                           (rule "mul_literals" (formula "8") (term "0,1,0,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0"))
                           (rule "polySimp_addComm1" (formula "8") (term "0,0,0,1,0"))
                           (rule "add_literals" (formula "8") (term "0,0,0,0,1,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,1,0"))
                           (rule "add_literals" (formula "8") (term "1,1,0,0,1,0"))
                           (rule "times_zero_1" (formula "8") (term "1,0,0,1,0"))
                           (rule "add_literals" (formula "8") (term "0,0,1,0"))
                           (rule "leq_literals" (formula "8") (term "0,1,0"))
                           (rule "concrete_and_2" (formula "8") (term "1,0"))
                           (rule "concrete_or_4" (formula "8") (term "0"))
                           (rule "inEqSimp_contradInEq1" (formula "8") (term "0") (ifseqformula "4"))
                           (rule "qeq_literals" (formula "8") (term "0,0"))
                           (rule "concrete_and_2" (formula "8") (term "0"))
                           (rule "concrete_or_2" (formula "8"))
                           (rule "allLeft" (formula "7") (inst "t=v_iv_2"))
                           (rule "inEqSimp_contradInEq0" (formula "7") (term "1") (ifseqformula "1"))
                           (rule "qeq_literals" (formula "7") (term "0,1"))
                           (rule "concrete_and_2" (formula "7") (term "1"))
                           (rule "concrete_or_4" (formula "7"))
                           (rule "inEqSimp_contradInEq0" (formula "7") (term "1") (ifseqformula "3"))
                           (rule "inEqSimp_homoInEq1" (formula "7") (term "0,1"))
                           (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1"))
                           (rule "polySimp_rightDist" (formula "7") (term "1,0,0,1"))
                           (rule "mul_literals" (formula "7") (term "0,1,0,0,1"))
                           (rule "polySimp_addAssoc" (formula "7") (term "0,0,1"))
                           (rule "polySimp_addComm1" (formula "7") (term "0,0,0,1"))
                           (rule "add_literals" (formula "7") (term "0,0,0,0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,1"))
                           (rule "add_literals" (formula "7") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "7") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "7") (term "0,0,1"))
                           (rule "leq_literals" (formula "7") (term "0,1"))
                           (rule "concrete_and_2" (formula "7") (term "1"))
                           (rule "concrete_or_4" (formula "7"))
                           (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "7"))
                           (rule "qeq_literals" (formula "4") (term "0"))
                           (rule "concrete_and_2" (formula "4"))
                           (rule "closeFalse" (formula "4"))
                        )
                     )
                     (branch "N_0 >= 1 FALSE"
                        (rule "add_zero_right" (formula "11") (term "1,1"))
                        (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "10"))
                        (rule "ifthenelse_false" (formula "1") (term "0"))
                        (rule "inEqSimp_geqRight" (formula "10"))
                        (rule "mul_literals" (formula "1") (term "1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0"))
                        (rule "add_zero_left" (formula "1") (term "0"))
                        (rule "inEqSimp_homoInEq1" (formula "2"))
                        (rule "times_zero_2" (formula "2") (term "1,0"))
                        (rule "add_zero_right" (formula "2") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                        (rule "mul_literals" (formula "2") (term "1"))
                        (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "2"))
                        (rule "qeq_literals" (formula "3") (term "0"))
                        (rule "concrete_and_2" (formula "3"))
                        (rule "closeFalse" (formula "3"))
                     )
                  )
               )
               (branch "Case 2"
                  (rule "allRight" (formula "8") (inst "sk=v_iv_1"))
                  (rule "orRight" (formula "8"))
                  (rule "orRight" (formula "8"))
                  (rule "inEqSimp_leqRight" (formula "8"))
                  (rule "mul_literals" (formula "1") (term "1,0,0"))
                  (rule "add_literals" (formula "1") (term "0,0"))
                  (rule "add_zero_left" (formula "1") (term "0"))
                  (rule "replace_known_left" (formula "10") (term "0,0,0,0") (ifseqformula "1"))
                  (rule "concrete_and_1" (formula "10") (term "0,0,0"))
                  (rule "inEqSimp_geqRight" (formula "9"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "1") (term "0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                  (rule "polySimp_elimOne" (formula "1") (term "0"))
                  (rule "ifthenelse_split" (formula "10") (term "0,0"))
                  (branch "v_iv_1 <= -1 + N_0 TRUE"
                     (rule "instanceof_static_type" (formula "11") (term "0"))
                     (rule "boolean_equal" (formula "11"))
                     (rule "closeTrue" (formula "11"))
                  )
                  (branch "v_iv_1 <= -1 + N_0 FALSE"
                     (rule "inEqSimp_leqRight" (formula "10"))
                     (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                     (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                     (rule "add_literals" (formula "1") (term "0,0,0"))
                     (rule "add_zero_left" (formula "1") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                     (rule "polySimp_elimOne" (formula "1") (term "1"))
                     (rule "ifthenelse_split" (formula "2") (term "0"))
                     (branch "N_0 >= 1 TRUE"
                        (rule "inEqSimp_homoInEq1" (formula "3"))
                        (rule "polySimp_addComm1" (formula "3") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                        (rule "polySimp_mulComm0" (formula "3") (term "1"))
                        (rule "polySimp_rightDist" (formula "3") (term "1"))
                        (rule "mul_literals" (formula "3") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                        (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "2"))
                        (rule "leq_literals" (formula "11") (term "0"))
                        (rule "concrete_or_1" (formula "11"))
                        (rule "true_left" (formula "11"))
                        (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "3"))
                        (rule "andLeft" (formula "1"))
                        (rule "inEqSimp_homoInEq1" (formula "1"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                        (rule "mul_literals" (formula "1") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0"))
                        (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                        (rule "add_literals" (formula "1") (term "1,1,0"))
                        (rule "times_zero_1" (formula "1") (term "1,0"))
                        (rule "add_zero_right" (formula "1") (term "0"))
                        (rule "leq_literals" (formula "1"))
                        (rule "closeFalse" (formula "1"))
                     )
                     (branch "N_0 >= 1 FALSE"
                        (rule "inEqSimp_geqRight" (formula "11"))
                        (rule "mul_literals" (formula "1") (term "1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0"))
                        (rule "add_zero_left" (formula "1") (term "0"))
                        (rule "inEqSimp_homoInEq1" (formula "3"))
                        (rule "times_zero_2" (formula "3") (term "1,0"))
                        (rule "add_zero_right" (formula "3") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                        (rule "mul_literals" (formula "3") (term "1"))
                        (rule "inEqSimp_contradInEq1" (formula "3") (ifseqformula "4"))
                        (rule "qeq_literals" (formula "3") (term "0"))
                        (rule "concrete_and_2" (formula "3"))
                        (rule "closeFalse" (formula "3"))
                     )
                  )
               )
            )
            (branch "Case 2"
               (rule "allLeftHide" (formula "6") (inst "t=int::seqGet(s_1, N_0)") (userinteraction))
               (rule "impLeft" (formula "6") (userinteraction))
               (branch "Case 1"
                  (rule "eqSymm" (formula "1") (term "0,1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "1") (term "1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "6") (term "1"))
                  (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1"))
                  (rule "inEqSimp_ltToLeq" (formula "3") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "1") (term "1,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "7") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "2") (term "1,1,0"))
                  (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "2") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1,0,0"))
                  (rule "polySimp_addComm0" (formula "4") (term "1"))
                  (rule "polySimp_addComm1" (formula "6") (term "0,1"))
                  (rule "polySimp_addComm1" (formula "1") (term "0,1,0,0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "3") (term "0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "2") (term "0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "2") (term "0,1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "1") (term "0,0,0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "6") (term "0"))
                  (rule "inEqSimp_commuteLeq" (formula "7") (term "0,0,0"))
                  (rule "applyEq" (formula "3") (term "0,1,0,0,1,0,0") (ifseqformula "4"))
                  (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1,0,0"))
                  (rule "polySimp_rightDist" (formula "3") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "3") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "3") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "3") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "3") (term "0,0,1,0,0"))
                  (rule "applyEqRigid" (formula "2") (term "0,1,0,0,1,0,0") (ifseqformula "4"))
                  (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1,0,0"))
                  (rule "polySimp_rightDist" (formula "2") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "2") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "2") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "2") (term "0,0,1,0,0"))
                  (rule "applyEq" (formula "2") (term "0,1,0,0,1,1,0") (ifseqformula "4"))
                  (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1,1,0"))
                  (rule "polySimp_rightDist" (formula "2") (term "1,0,0,1,1,0"))
                  (rule "mul_literals" (formula "2") (term "0,1,0,0,1,1,0"))
                  (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,1,0"))
                  (rule "add_literals" (formula "2") (term "0,0,0,1,1,0"))
                  (rule "add_zero_left" (formula "2") (term "0,0,1,1,0"))
                  (rule "applyEq" (formula "7") (term "0,1,0,0,1,0,0") (ifseqformula "4"))
                  (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0"))
                  (rule "polySimp_rightDist" (formula "7") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "7") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "7") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "7") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "7") (term "0,0,1,0,0"))
                  (rule "applyEqRigid" (formula "1") (term "0,1,0,0,1,0,0,0") (ifseqformula "4"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0,0"))
                  (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0,0"))
                  (rule "add_literals" (formula "1") (term "0,0,0,1,0,0,0"))
                  (rule "add_zero_left" (formula "1") (term "0,0,1,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "6") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "6") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "6") (term "0,1"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "1,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "1") (term "0,1,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "3") (term "1,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "2") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "2") (term "1,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "2") (term "1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,1,1,0"))
                  (rule "polySimp_elimOne" (formula "2") (term "1,1,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "7") (term "1,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0,0"))
                  (rule "lenOfSeqDef" (formula "6") (term "0,1"))
                  (rule "polySimp_elimSub" (formula "6") (term "1,0,1"))
                  (rule "mul_literals" (formula "6") (term "1,1,0,1"))
                  (rule "add_zero_right" (formula "6") (term "1,0,1"))
                  (rule "inEqSimp_ltToLeq" (formula "6") (term "0,0,1"))
                  (rule "add_zero_right" (formula "6") (term "0,0,0,1"))
                  (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0,1"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "6") (term "0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "6") (term "0,0,0,1"))
                  (rule "polySimp_elimOne" (formula "6") (term "0,0,0,1"))
                  (rule "nnf_ex2all" (formula "7"))
                  (rule "nnf_imp2or" (formula "4") (term "0"))
                  (rule "nnf_imp2or" (formula "3") (term "0"))
                  (rule "nnf_imp2or" (formula "2") (term "0,0"))
                  (rule "nnf_notAnd" (formula "1") (term "0"))
                  (rule "nnf_notAnd" (formula "4") (term "0,0"))
                  (rule "inEqSimp_notGeq" (formula "4") (term "0,0,0"))
                  (rule "times_zero_1" (formula "4") (term "1,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "4") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "4") (term "0,0,0"))
                  (rule "mul_literals" (formula "4") (term "1,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "4") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "4") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "4") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "4") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "4") (term "0,1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "1,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "4") (term "1,1,1,0,0"))
                  (rule "nnf_notAnd" (formula "3") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "3") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "3") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "3") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "3") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "3") (term "0,1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "3") (term "1,1,1,0,0"))
                  (rule "inEqSimp_notGeq" (formula "3") (term "0,0,0"))
                  (rule "times_zero_1" (formula "3") (term "1,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "3") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "0,0,0"))
                  (rule "mul_literals" (formula "3") (term "1,0,0,0"))
                  (rule "nnf_notAnd" (formula "1") (term "0,0"))
                  (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                  (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                  (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "1") (term "0,1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0,0"))
                  (rule "nnf_notAnd" (formula "2") (term "0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "2") (term "1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "2") (term "1,1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "2") (term "1,1,0,0,0"))
                  (rule "mul_literals" (formula "2") (term "0,1,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "2") (term "1,1,1,0,0,0"))
                  (rule "nnf_notAnd" (formula "2") (term "0,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "2") (term "1,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "2") (term "1,0,0,1,0,0,0,0"))
                  (rule "mul_literals" (formula "2") (term "0,1,0,0,1,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,0,0,0,0"))
                  (rule "add_literals" (formula "2") (term "0,0,0,1,0,0,0,0"))
                  (rule "add_zero_left" (formula "2") (term "0,0,1,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "2") (term "1,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "2") (term "1,1,0,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "2") (term "0,0,0,0,0"))
                  (rule "times_zero_1" (formula "2") (term "1,0,0,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "2") (term "0,0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "2") (term "0,0,0,0,0"))
                  (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0"))
                  (rule "cnf_rightDist" (formula "3") (term "0"))
                  (rule "distr_forallAnd" (formula "3"))
                  (rule "andLeft" (formula "3"))
                  (rule "commute_or" (formula "4") (term "0"))
                  (rule "commute_or_2" (formula "2") (term "0,0,0"))
                  (rule "cut_direct" (formula "8") (term "0"))
                  (branch "CUT: (int)s_1[N_0] >= 0 TRUE"
                     (rule "concrete_and_1" (formula "9"))
                     (rule "inEqSimp_geqRight" (formula "9"))
                     (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                     (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                     (rule "add_literals" (formula "1") (term "0,0,0"))
                     (rule "add_zero_left" (formula "1") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                     (rule "polySimp_elimOne" (formula "1") (term "1"))
                     (rule "lenNonNegative" (formula "8") (term "0"))
                     (rule "inEqSimp_commuteLeq" (formula "8"))
                     (rule "applyEq" (formula "8") (term "0") (ifseqformula "9"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                     (rule "mul_literals" (formula "8") (term "1"))
                     (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "10"))
                     (rule "leq_literals" (formula "8") (term "0"))
                     (rule "concrete_or_1" (formula "8"))
                     (rule "true_left" (formula "8"))
                     (rule "ifthenelse_split" (formula "1") (term "0"))
                     (branch "N_0 >= 1 TRUE"
                        (rule "inEqSimp_commuteLeq" (formula "2"))
                        (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "1"))
                        (rule "leq_literals" (formula "10") (term "0"))
                        (rule "concrete_or_1" (formula "10"))
                        (rule "true_left" (formula "10"))
                        (rule "allLeft" (formula "7") (inst "t=N_0"))
                        (rule "inEqSimp_homoInEq1" (formula "7") (term "1,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,1,0"))
                        (rule "add_literals" (formula "7") (term "1,1,0,1,0"))
                        (rule "times_zero_1" (formula "7") (term "1,0,1,0"))
                        (rule "add_literals" (formula "7") (term "0,1,0"))
                        (rule "leq_literals" (formula "7") (term "1,0"))
                        (rule "concrete_or_4" (formula "7") (term "0"))
                        (rule "inEqSimp_contradInEq1" (formula "7") (term "0") (ifseqformula "1"))
                        (rule "qeq_literals" (formula "7") (term "0,0"))
                        (rule "concrete_and_2" (formula "7") (term "0"))
                        (rule "concrete_or_2" (formula "7"))
                        (rule "inEqSimp_antiSymm" (formula "2") (ifseqformula "7"))
                        (rule "applyEqRigid" (formula "4") (term "0") (ifseqformula "2"))
                        (rule "applyEqRigid" (formula "8") (term "0") (ifseqformula "2"))
                        (rule "inEqSimp_homoInEq0" (formula "8"))
                        (rule "polySimp_pullOutFactor1" (formula "8") (term "0"))
                        (rule "add_literals" (formula "8") (term "1,0"))
                        (rule "times_zero_1" (formula "8") (term "0"))
                        (rule "qeq_literals" (formula "8"))
                        (rule "true_left" (formula "8"))
                        (rule "applyEq" (formula "3") (term "0") (ifseqformula "2"))
                        (rule "inEqSimp_homoInEq1" (formula "3"))
                        (rule "polySimp_pullOutFactor1" (formula "3") (term "0"))
                        (rule "add_literals" (formula "3") (term "1,0"))
                        (rule "times_zero_1" (formula "3") (term "0"))
                        (rule "leq_literals" (formula "3"))
                        (rule "true_left" (formula "3"))
                        (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "1"))
                        (rule "leq_literals" (formula "3") (term "0"))
                        (rule "concrete_or_1" (formula "3"))
                        (rule "true_left" (formula "3"))
                        (rule "allLeft" (formula "3") (inst "t=N_0"))
                        (rule "replace_known_left" (formula "3") (term "0,1") (ifseqformula "2"))
                        (rule "concrete_not_1" (formula "3") (term "1"))
                        (rule "concrete_or_4" (formula "3"))
                        (rule "inEqSimp_homoInEq1" (formula "3") (term "1"))
                        (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,1"))
                        (rule "add_literals" (formula "3") (term "1,1,0,1"))
                        (rule "times_zero_1" (formula "3") (term "1,0,1"))
                        (rule "add_zero_right" (formula "3") (term "0,1"))
                        (rule "leq_literals" (formula "3") (term "1"))
                        (rule "concrete_or_4" (formula "3"))
                        (rule "inEqSimp_contradInEq1" (formula "3") (ifseqformula "1"))
                        (rule "qeq_literals" (formula "3") (term "0"))
                        (rule "concrete_and_2" (formula "3"))
                        (rule "closeFalse" (formula "3"))
                     )
                     (branch "N_0 >= 1 FALSE"
                        (rule "inEqSimp_geqRight" (formula "10"))
                        (rule "mul_literals" (formula "1") (term "1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0"))
                        (rule "add_zero_left" (formula "1") (term "0"))
                        (rule "inEqSimp_commuteLeq" (formula "2"))
                        (rule "inEqSimp_antiSymm" (formula "9") (ifseqformula "1"))
                        (rule "applyEqRigid" (formula "2") (term "1,0") (ifseqformula "9"))
                        (rule "applyEq" (formula "1") (term "0") (ifseqformula "9"))
                        (rule "leq_literals" (formula "1"))
                        (rule "true_left" (formula "1"))
                        (rule "applyEqRigid" (formula "6") (term "1,1,1,0,0") (ifseqformula "8"))
                        (rule "add_zero_right" (formula "6") (term "1,1,0,0"))
                        (rule "applyEq" (formula "5") (term "1,1,1,0,0") (ifseqformula "8"))
                        (rule "add_zero_right" (formula "5") (term "1,1,0,0"))
                        (rule "applyEq" (formula "9") (term "0") (ifseqformula "8"))
                        (rule "qeq_literals" (formula "9"))
                        (rule "true_left" (formula "9"))
                        (rule "applyEqRigid" (formula "5") (term "1,1,0") (ifseqformula "8"))
                        (rule "applyEqRigid" (formula "3") (term "1,1,1,0,0,0,0") (ifseqformula "8"))
                        (rule "add_zero_right" (formula "3") (term "1,1,0,0,0,0"))
                        (rule "applyEqRigid" (formula "4") (term "1,1,1,0,0") (ifseqformula "8"))
                        (rule "add_zero_right" (formula "4") (term "1,1,0,0"))
                        (rule "applyEqRigid" (formula "2") (term "1,1,1,0,0") (ifseqformula "8"))
                        (rule "add_zero_right" (formula "2") (term "1,1,0,0"))
                        (rule "applyEq" (formula "2") (term "1,0,1,0") (ifseqformula "8"))
                        (rule "applyEqRigid" (formula "7") (term "1,1") (ifseqformula "8"))
                        (rule "add_zero_right" (formula "7") (term "1"))
                        (rule "inEqSimp_or_antiSymm0" (formula "6") (term "0,0"))
                        (rule "add_literals" (formula "6") (term "0,0,0,0"))
                        (rule "eqClose" (formula "6") (term "0,0,0"))
                        (rule "ifthenelse_true_for" (formula "6") (term "0,0"))
                        (rule "add_literals" (formula "6") (term "1,0,0,0"))
                        (rule "inEqSimp_or_antiSymm0" (formula "5") (term "0,0"))
                        (rule "add_literals" (formula "5") (term "0,0,0,0"))
                        (rule "eqClose" (formula "5") (term "0,0,0"))
                        (rule "ifthenelse_true_for" (formula "5") (term "0,0"))
                        (rule "add_literals" (formula "5") (term "1,0,0,0"))
                        (rule "inEqSimp_or_antiSymm0" (formula "4") (term "0,0"))
                        (rule "add_literals" (formula "4") (term "1,0,1,0,0"))
                        (rule "add_literals" (formula "4") (term "0,0,0,0"))
                        (rule "eqClose" (formula "4") (term "0,0,0"))
                        (rule "ifthenelse_true_for" (formula "4") (term "0,0"))
                        (rule "inEqSimp_or_antiSymm0" (formula "2") (term "0,0"))
                        (rule "add_literals" (formula "2") (term "0,0,0,0"))
                        (rule "eqClose" (formula "2") (term "0,0,0"))
                        (rule "ifthenelse_true_for" (formula "2") (term "0,0"))
                        (rule "add_literals" (formula "2") (term "1,0,0,0"))
                        (rule "commute_or" (formula "6") (term "0"))
                        (rule "elim_forall4" (formula "6"))
                        (rule "commute_or" (formula "5") (term "0"))
                        (rule "elim_forall4" (formula "5"))
                        (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "5"))
                        (rule "applyEqRigid" (formula "2") (term "0") (ifseqformula "1"))
                        (rule "qeq_literals" (formula "2"))
                        (rule "true_left" (formula "2"))
                        (rule "applyEq" (formula "5") (term "0") (ifseqformula "1"))
                        (rule "leq_literals" (formula "5"))
                        (rule "true_left" (formula "5"))
                        (rule "commute_or" (formula "4") (term "0"))
                        (rule "elim_forall4" (formula "4"))
                        (rule "applyEq" (formula "4") (term "0") (ifseqformula "1"))
                        (rule "qeq_literals" (formula "4"))
                        (rule "true_left" (formula "4"))
                        (rule "commute_or" (formula "2") (term "0"))
                        (rule "elim_forall4" (formula "2"))
                        (rule "notLeft" (formula "2"))
                        (rule "close" (formula "6") (ifseqformula "1"))
                     )
                  )
                  (branch "CUT: (int)s_1[N_0] >= 0 FALSE"
                     (rule "concrete_and_2" (formula "9"))
                     (rule "false_right" (formula "9"))
                     (rule "inEqSimp_geqRight" (formula "8"))
                     (rule "times_zero_1" (formula "1") (term "1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                     (rule "mul_literals" (formula "1") (term "1"))
                     (rule "lenNonNegative" (formula "7") (term "0"))
                     (rule "inEqSimp_commuteLeq" (formula "7"))
                     (rule "applyEq" (formula "7") (term "0") (ifseqformula "8"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                     (rule "mul_literals" (formula "7") (term "1"))
                     (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "9"))
                     (rule "leq_literals" (formula "7") (term "0"))
                     (rule "concrete_or_1" (formula "7"))
                     (rule "true_left" (formula "7"))
                     (rule "allLeft" (formula "4") (inst "t=N_0"))
                     (rule "inEqSimp_homoInEq1" (formula "4") (term "1,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,1,0"))
                     (rule "add_literals" (formula "4") (term "1,1,0,1,0"))
                     (rule "times_zero_1" (formula "4") (term "1,0,1,0"))
                     (rule "add_literals" (formula "4") (term "0,1,0"))
                     (rule "leq_literals" (formula "4") (term "1,0"))
                     (rule "concrete_or_4" (formula "4") (term "0"))
                     (rule "inEqSimp_contradInEq1" (formula "4") (term "0") (ifseqformula "9"))
                     (rule "qeq_literals" (formula "4") (term "0,0"))
                     (rule "concrete_and_2" (formula "4") (term "0"))
                     (rule "concrete_or_2" (formula "4"))
                     (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "1"))
                     (rule "qeq_literals" (formula "4") (term "0"))
                     (rule "concrete_and_2" (formula "4"))
                     (rule "closeFalse" (formula "4"))
                  )
               )
               (branch "Case 2"
                  (rule "exLeft" (formula "6") (inst "sk=jv_1"))
                  (rule "andLeft" (formula "6"))
                  (rule "andLeft" (formula "6"))
                  (rule "eqSymm" (formula "1") (term "0,1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "1") (term "1,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "1") (term "1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "2") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "2") (term "1,1,0"))
                  (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "3") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "7"))
                  (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                  (rule "polySimp_addComm0" (formula "4") (term "1"))
                  (rule "polySimp_addComm1" (formula "1") (term "0,1,0,0,0,0"))
                  (rule "polySimp_addComm1" (formula "7") (term "0"))
                  (rule "inEqSimp_commuteLeq" (formula "2") (term "0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "3") (term "0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "2") (term "0,1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "1") (term "0,0,0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "6"))
                  (rule "getOfSeqDef" (formula "8") (term "0"))
                  (rule "castDel" (formula "8") (term "1,0"))
                  (rule "add_zero_right" (formula "8") (term "1,1,0"))
                  (rule "polySimp_elimSub" (formula "8") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "8") (term "1,1,1,0,0"))
                  (rule "add_zero_right" (formula "8") (term "1,1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,0"))
                  (rule "replace_known_left" (formula "8") (term "0,0,0") (ifseqformula "6"))
                  (rule "concrete_and_1" (formula "8") (term "0,0"))
                  (rule "applyEq" (formula "2") (term "0,1,0,0,1,0,0") (ifseqformula "4"))
                  (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1,0,0"))
                  (rule "polySimp_rightDist" (formula "2") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "2") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "2") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "2") (term "0,0,1,0,0"))
                  (rule "applyEq" (formula "1") (term "0,1,0,0,1,0,0,0") (ifseqformula "4"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0,0"))
                  (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0,0"))
                  (rule "add_literals" (formula "1") (term "0,0,0,1,0,0,0"))
                  (rule "add_zero_left" (formula "1") (term "0,0,1,0,0,0"))
                  (rule "applyEq" (formula "3") (term "0,1,0,0,1,0,0") (ifseqformula "4"))
                  (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1,0,0"))
                  (rule "polySimp_rightDist" (formula "3") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "3") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "3") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "3") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "3") (term "0,0,1,0,0"))
                  (rule "applyEqRigid" (formula "9") (term "0,1,0,0,1,0,0") (ifseqformula "4"))
                  (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
                  (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "9") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "9") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "9") (term "0,0,1,0,0"))
                  (rule "applyEqRigid" (formula "2") (term "0,1,0,0,1,1,0") (ifseqformula "4"))
                  (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1,1,0"))
                  (rule "polySimp_rightDist" (formula "2") (term "1,0,0,1,1,0"))
                  (rule "mul_literals" (formula "2") (term "0,1,0,0,1,1,0"))
                  (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,1,0"))
                  (rule "add_literals" (formula "2") (term "0,0,0,1,1,0"))
                  (rule "add_zero_left" (formula "2") (term "0,0,1,1,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "1,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "1") (term "0,1,0,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "7"))
                  (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                  (rule "polySimp_elimOne" (formula "7") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0"))
                  (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "8") (term "1,0,0"))
                  (rule "mul_literals" (formula "8") (term "0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "2") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "2") (term "1,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "3") (term "1,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "2") (term "1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,1,1,0"))
                  (rule "polySimp_elimOne" (formula "2") (term "1,1,1,0"))
                  (rule "lenOfSeqDef" (formula "7") (term "0"))
                  (rule "polySimp_elimSub" (formula "7") (term "1,0"))
                  (rule "times_zero_2" (formula "7") (term "1,1,0"))
                  (rule "add_zero_right" (formula "7") (term "1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "7") (term "0,0"))
                  (rule "add_zero_right" (formula "7") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "7") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "7") (term "0,0,0"))
                  (rule "polySimp_elimOne" (formula "7") (term "0,0,0"))
                  (rule "nnf_ex2all" (formula "9"))
                  (rule "nnf_imp2or" (formula "4") (term "0"))
                  (rule "nnf_imp2or" (formula "3") (term "0"))
                  (rule "nnf_imp2or" (formula "2") (term "0,0"))
                  (rule "nnf_notAnd" (formula "1") (term "0"))
                  (rule "nnf_notAnd" (formula "4") (term "0,0"))
                  (rule "inEqSimp_notGeq" (formula "4") (term "0,0,0"))
                  (rule "times_zero_1" (formula "4") (term "1,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "4") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "4") (term "0,0,0"))
                  (rule "mul_literals" (formula "4") (term "1,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "4") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "4") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "4") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "4") (term "1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "1,1,1,0,0"))
                  (rule "mul_literals" (formula "4") (term "0,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "4") (term "1,1,1,0,0"))
                  (rule "nnf_notAnd" (formula "3") (term "0,0"))
                  (rule "inEqSimp_notGeq" (formula "3") (term "0,0,0"))
                  (rule "times_zero_1" (formula "3") (term "1,0,0,0,0,0"))
                  (rule "add_literals" (formula "3") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "0,0,0"))
                  (rule "mul_literals" (formula "3") (term "1,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "3") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "3") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "3") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "3") (term "1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,1,1,0,0"))
                  (rule "mul_literals" (formula "3") (term "0,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "3") (term "1,1,1,0,0"))
                  (rule "nnf_notAnd" (formula "1") (term "0,0"))
                  (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                  (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                  (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0,0"))
                  (rule "mul_literals" (formula "1") (term "0,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0,0"))
                  (rule "nnf_notAnd" (formula "2") (term "0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "2") (term "1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "2") (term "1,1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "2") (term "1,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,1,1,0,0,0"))
                  (rule "mul_literals" (formula "2") (term "0,1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "2") (term "1,1,1,0,0,0"))
                  (rule "nnf_notAnd" (formula "2") (term "0,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "2") (term "1,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "2") (term "1,0,0,1,0,0,0,0"))
                  (rule "mul_literals" (formula "2") (term "0,1,0,0,1,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,0,0,0,0"))
                  (rule "add_literals" (formula "2") (term "0,0,0,1,0,0,0,0"))
                  (rule "add_zero_left" (formula "2") (term "0,0,1,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "2") (term "1,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "2") (term "1,1,0,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "2") (term "0,0,0,0,0"))
                  (rule "times_zero_1" (formula "2") (term "1,0,0,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "2") (term "0,0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "2") (term "0,0,0,0,0"))
                  (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0"))
                  (rule "cnf_rightDist" (formula "3") (term "0"))
                  (rule "distr_forallAnd" (formula "3"))
                  (rule "andLeft" (formula "3"))
                  (rule "commute_or" (formula "4") (term "0"))
                  (rule "commute_or_2" (formula "2") (term "0,0,0"))
                  (rule "ifthenelse_split" (formula "10") (term "0"))
                  (branch "jv_1 <= -1 + N_0 TRUE"
                     (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "10"))
                     (rule "times_zero_1" (formula "8") (term "0,0"))
                     (rule "add_zero_left" (formula "8") (term "0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                     (rule "mul_literals" (formula "8") (term "1"))
                     (rule "replace_known_left" (formula "10") (term "0,0") (ifseqformula "8"))
                     (rule "ifthenelse_true" (formula "10") (term "0"))
                     (rule "inEqSimp_homoInEq1" (formula "10"))
                     (rule "polySimp_addComm1" (formula "10") (term "0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "10"))
                     (rule "polySimp_mulComm0" (formula "10") (term "1"))
                     (rule "polySimp_rightDist" (formula "10") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "1,1"))
                     (rule "mul_literals" (formula "10") (term "0,1"))
                     (rule "polySimp_elimOne" (formula "10") (term "1,1"))
                     (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "8"))
                     (rule "leq_literals" (formula "7") (term "0"))
                     (rule "concrete_or_1" (formula "7"))
                     (rule "true_left" (formula "7"))
                     (rule "lenNonNegative" (formula "6") (term "0"))
                     (rule "inEqSimp_commuteLeq" (formula "6"))
                     (rule "applyEqRigid" (formula "6") (term "0") (ifseqformula "7"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                     (rule "mul_literals" (formula "6") (term "1"))
                     (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "8"))
                     (rule "leq_literals" (formula "6") (term "0"))
                     (rule "concrete_or_1" (formula "6"))
                     (rule "true_left" (formula "6"))
                     (rule "allLeft" (formula "2") (inst "t=jv_1"))
                     (rule "applyEqRigid" (formula "2") (term "1,0,1,0") (ifseqformula "11"))
                     (rule "inEqSimp_contradInEq1" (formula "2") (term "0,0,0,0") (ifseqformula "9"))
                     (rule "qeq_literals" (formula "2") (term "0,0,0,0,0"))
                     (rule "concrete_and_2" (formula "2") (term "0,0,0,0"))
                     (rule "concrete_or_2" (formula "2") (term "0,0,0"))
                     (rule "allLeft" (formula "5") (inst "t=jv_1"))
                     (rule "applyEq" (formula "5") (term "0,1") (ifseqformula "12"))
                     (rule "inEqSimp_contradInEq0" (formula "5") (term "1,0") (ifseqformula "11"))
                     (rule "inEqSimp_homoInEq1" (formula "5") (term "0,1,0"))
                     (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "5") (term "1,0,0,1,0"))
                     (rule "mul_literals" (formula "5") (term "0,1,0,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "5") (term "0,0,1,0"))
                     (rule "polySimp_addComm1" (formula "5") (term "0,0,0,1,0"))
                     (rule "add_literals" (formula "5") (term "0,0,0,0,1,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,1,0"))
                     (rule "add_literals" (formula "5") (term "1,1,0,0,1,0"))
                     (rule "times_zero_1" (formula "5") (term "1,0,0,1,0"))
                     (rule "add_literals" (formula "5") (term "0,0,1,0"))
                     (rule "leq_literals" (formula "5") (term "0,1,0"))
                     (rule "concrete_and_2" (formula "5") (term "1,0"))
                     (rule "concrete_or_4" (formula "5") (term "0"))
                     (rule "inEqSimp_contradInEq1" (formula "5") (term "0") (ifseqformula "10"))
                     (rule "qeq_literals" (formula "5") (term "0,0"))
                     (rule "concrete_and_2" (formula "5") (term "0"))
                     (rule "concrete_or_2" (formula "5"))
                     (rule "allLeft" (formula "4") (inst "t=jv_1"))
                     (rule "applyEq" (formula "4") (term "0,1") (ifseqformula "13"))
                     (rule "inEqSimp_contradInEq0" (formula "4") (term "1,0") (ifseqformula "12"))
                     (rule "inEqSimp_homoInEq1" (formula "4") (term "0,1,0"))
                     (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "4") (term "1,0,0,1,0"))
                     (rule "mul_literals" (formula "4") (term "0,1,0,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "4") (term "0,0,1,0"))
                     (rule "polySimp_addComm1" (formula "4") (term "0,0,0,1,0"))
                     (rule "add_literals" (formula "4") (term "0,0,0,0,1,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,1,0"))
                     (rule "add_literals" (formula "4") (term "1,1,0,0,1,0"))
                     (rule "times_zero_1" (formula "4") (term "1,0,0,1,0"))
                     (rule "add_zero_right" (formula "4") (term "0,0,1,0"))
                     (rule "leq_literals" (formula "4") (term "0,1,0"))
                     (rule "concrete_and_2" (formula "4") (term "1,0"))
                     (rule "concrete_or_4" (formula "4") (term "0"))
                     (rule "inEqSimp_contradInEq1" (formula "4") (term "0") (ifseqformula "11"))
                     (rule "qeq_literals" (formula "4") (term "0,0"))
                     (rule "concrete_and_2" (formula "4") (term "0"))
                     (rule "concrete_or_2" (formula "4"))
                     (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "6"))
                     (rule "times_zero_1" (formula "4") (term "0,0"))
                     (rule "add_zero_left" (formula "4") (term "0"))
                     (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "11"))
                     (rule "leq_literals" (formula "4") (term "0"))
                     (rule "concrete_or_1" (formula "4"))
                     (rule "true_left" (formula "4"))
                     (rule "allLeft" (formula "1") (inst "t=jv_1"))
                     (rule "applyEqRigid" (formula "1") (term "0,0,1") (ifseqformula "14"))
                     (rule "inEqSimp_contradInEq0" (formula "1") (term "1,0") (ifseqformula "13"))
                     (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1,0"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0"))
                     (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0,0,0,1,0"))
                     (rule "add_literals" (formula "1") (term "0,0,0,0,1,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1,0"))
                     (rule "add_literals" (formula "1") (term "1,1,0,0,1,0"))
                     (rule "times_zero_1" (formula "1") (term "1,0,0,1,0"))
                     (rule "add_zero_right" (formula "1") (term "0,0,1,0"))
                     (rule "leq_literals" (formula "1") (term "0,1,0"))
                     (rule "concrete_and_2" (formula "1") (term "1,0"))
                     (rule "concrete_or_4" (formula "1") (term "0"))
                     (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "12"))
                     (rule "qeq_literals" (formula "1") (term "0,0"))
                     (rule "concrete_and_2" (formula "1") (term "0"))
                     (rule "concrete_or_2" (formula "1"))
                     (rule "notLeft" (formula "1"))
                     (rule "inEqSimp_strengthen0" (formula "6") (ifseqformula "14"))
                     (rule "inEqSimp_contradEq3" (formula "14") (ifseqformula "6"))
                     (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0"))
                     (rule "add_literals" (formula "14") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "14") (term "1,0,0"))
                     (rule "add_zero_right" (formula "14") (term "0,0"))
                     (rule "qeq_literals" (formula "14") (term "0"))
                     (rule "concrete_and_2" (formula "14"))
                     (rule "false_right" (formula "14"))
                     (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "6"))
                     (rule "times_zero_1" (formula "4") (term "0,0"))
                     (rule "add_zero_left" (formula "4") (term "0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                     (rule "mul_literals" (formula "4") (term "1"))
                     (rule "allLeft" (formula "1") (inst "t=N_0"))
                     (rule "inEqSimp_homoInEq1" (formula "1") (term "1,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,1,0"))
                     (rule "add_literals" (formula "1") (term "1,1,0,1,0"))
                     (rule "times_zero_1" (formula "1") (term "1,0,1,0"))
                     (rule "add_literals" (formula "1") (term "0,1,0"))
                     (rule "leq_literals" (formula "1") (term "1,0"))
                     (rule "concrete_or_4" (formula "1") (term "0"))
                     (rule "inEqSimp_contradEq3" (formula "1") (term "0,1") (ifseqformula "7"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0,1"))
                     (rule "add_literals" (formula "1") (term "1,1,0,0,0,1"))
                     (rule "times_zero_1" (formula "1") (term "1,0,0,0,1"))
                     (rule "add_literals" (formula "1") (term "0,0,0,1"))
                     (rule "qeq_literals" (formula "1") (term "0,0,1"))
                     (rule "concrete_and_2" (formula "1") (term "0,1"))
                     (rule "concrete_not_2" (formula "1") (term "1"))
                     (rule "concrete_or_3" (formula "1"))
                     (rule "true_left" (formula "1"))
                     (rule "allLeft" (formula "2") (inst "t=N_0"))
                     (rule "eqClose" (formula "2") (term "0,1"))
                     (rule "concrete_not_1" (formula "2") (term "1"))
                     (rule "concrete_or_4" (formula "2"))
                     (rule "inEqSimp_commuteLeq" (formula "2") (term "1"))
                     (rule "inEqSimp_homoInEq1" (formula "2") (term "0"))
                     (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0"))
                     (rule "add_literals" (formula "2") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "2") (term "1,0,0"))
                     (rule "add_literals" (formula "2") (term "0,0"))
                     (rule "leq_literals" (formula "2") (term "0"))
                     (rule "concrete_or_2" (formula "2"))
                     (rule "inEqSimp_contradInEq1" (formula "13") (ifseqformula "2"))
                     (rule "andLeft" (formula "13"))
                     (rule "inEqSimp_homoInEq1" (formula "13"))
                     (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "13") (term "1,0"))
                     (rule "mul_literals" (formula "13") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "13") (term "0"))
                     (rule "polySimp_addComm0" (formula "13") (term "0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "13") (term "0"))
                     (rule "add_literals" (formula "13") (term "1,1,0"))
                     (rule "times_zero_1" (formula "13") (term "1,0"))
                     (rule "add_literals" (formula "13") (term "0"))
                     (rule "leq_literals" (formula "13"))
                     (rule "closeFalse" (formula "13"))
                  )
                  (branch "jv_1 <= -1 + N_0 FALSE"
                     (rule "inEqSimp_leqRight" (formula "11"))
                     (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                     (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                     (rule "add_literals" (formula "1") (term "0,0,0"))
                     (rule "add_zero_left" (formula "1") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                     (rule "polySimp_elimOne" (formula "1") (term "1"))
                     (rule "lenNonNegative" (formula "7") (term "0"))
                     (rule "inEqSimp_commuteLeq" (formula "7"))
                     (rule "applyEq" (formula "7") (term "0") (ifseqformula "8"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                     (rule "mul_literals" (formula "7") (term "1"))
                     (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "9"))
                     (rule "leq_literals" (formula "7") (term "0"))
                     (rule "concrete_or_1" (formula "7"))
                     (rule "true_left" (formula "7"))
                     (rule "ifthenelse_split" (formula "10") (term "0"))
                     (branch "N_0 >= 1 TRUE"
                        (rule "inEqSimp_homoInEq1" (formula "11"))
                        (rule "polySimp_addComm1" (formula "11") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "11"))
                        (rule "polySimp_mulComm0" (formula "11") (term "1"))
                        (rule "polySimp_rightDist" (formula "11") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
                        (rule "mul_literals" (formula "11") (term "0,1"))
                        (rule "polySimp_elimOne" (formula "11") (term "1,1"))
                        (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "10"))
                        (rule "leq_literals" (formula "8") (term "0"))
                        (rule "concrete_or_1" (formula "8"))
                        (rule "true_left" (formula "8"))
                        (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "10"))
                        (rule "andLeft" (formula "1"))
                        (rule "inEqSimp_homoInEq1" (formula "1"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                        (rule "mul_literals" (formula "1") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0"))
                        (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                        (rule "add_literals" (formula "1") (term "1,1,0"))
                        (rule "times_zero_1" (formula "1") (term "1,0"))
                        (rule "add_zero_right" (formula "1") (term "0"))
                        (rule "leq_literals" (formula "1"))
                        (rule "closeFalse" (formula "1"))
                     )
                     (branch "N_0 >= 1 FALSE"
                        (rule "inEqSimp_geqRight" (formula "12"))
                        (rule "mul_literals" (formula "1") (term "1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0"))
                        (rule "add_zero_left" (formula "1") (term "0"))
                        (rule "inEqSimp_homoInEq1" (formula "11"))
                        (rule "times_zero_2" (formula "11") (term "1,0"))
                        (rule "add_zero_right" (formula "11") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "11"))
                        (rule "mul_literals" (formula "11") (term "1"))
                        (rule "inEqSimp_contradInEq1" (formula "11") (ifseqformula "10"))
                        (rule "qeq_literals" (formula "11") (term "0"))
                        (rule "concrete_and_2" (formula "11"))
                        (rule "closeFalse" (formula "11"))
                     )
                  )
               )
            )
         )
      )
   )
   (branch "Step Case (negative)"
      (rule "impRight" (formula "1") (userinteraction))
      (rule "andLeft" (formula "1") (userinteraction))
      (rule "allRight" (formula "3") (inst "sk=s_2") (userinteraction))
      (rule "impRight" (formula "3") (userinteraction))
      (rule "lenNonNegative" (formula "1") (term "0") (userinteraction))
      (rule "applyEq" (formula "1") (term "1") (ifseqformula "2") (userinteraction))
      (rule "hide_left" (formula "4") (userinteraction))
      (rule "hide_right" (formula "4") (userinteraction))
      (rule "polySimp_elimSub" (formula "2") (term "1"))
      (rule "mul_literals" (formula "2") (term "1,1"))
      (rule "polySimp_elimSub" (formula "1") (term "1"))
      (rule "mul_literals" (formula "1") (term "1,1"))
      (rule "polySimp_addComm0" (formula "2") (term "1"))
      (rule "polySimp_addComm0" (formula "1") (term "1"))
      (rule "inEqSimp_homoInEq0" (formula "1"))
      (rule "mul_literals" (formula "1") (term "1,0"))
      (rule "add_zero_right" (formula "1") (term "0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "1"))
      (rule "mul_literals" (formula "1") (term "1"))
      (rule "inEqSimp_contradInEq1" (formula "3") (ifseqformula "1"))
      (rule "qeq_literals" (formula "3") (term "0"))
      (builtin "One Step Simplification" (formula "3"))
      (rule "closeFalse" (formula "3"))
   )
)
)

}
