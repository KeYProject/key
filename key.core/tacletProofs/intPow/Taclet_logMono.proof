\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Mon Aug 15 15:19:54 CEST 2022
[NewSMT]NoTypeHierarchy=false
[Labels]UseOriginLabels=true
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[NewSMT]Presburger=false
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=JavaCard-JavaCard\\:on , Strings-Strings\\:on , assertions-assertions\\:safe , bigint-bigint\\:on , finalFields-finalFields\\:immutable , floatRules-floatRules\\:strictfpOnly , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , integerSimplificationRules-integerSimplificationRules\\:full , javaLoopTreatment-javaLoopTreatment\\:efficient , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off , methodExpansion-methodExpansion\\:modularOnly , modelFields-modelFields\\:treatAsAxiom , moreSeqRules-moreSeqRules\\:on , permissions-permissions\\:off , programRules-programRules\\:Java , reach-reach\\:on , runtimeExceptions-runtimeExceptions\\:ban , sequences-sequences\\:on , wdChecks-wdChecks\\:off , wdOperator-wdOperator\\:L
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_SCOPE_INV_TACLET
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_COMPLETION
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[Strategy]MaximumNumberOfAutomaticApplications=10000
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_DELAYED
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[Strategy]Timeout=-1
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[SMTSettings]useUninterpretedMultiplication=true
[NewSMT]sqrtSMTTranslation=SMT
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[NewSMT]identifier=OPEN
[SMTSettings]maxGenericSorts=2
[StrategyProperty]OSS_OPTIONS_KEY=OSS_ON
[NewSMT]Axiomatisations=false
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\proofObligation "#Proof Obligation Settings
#Mon Aug 15 15:19:54 CEST 2022
name=logMono
class=de.uka.ilkd.key.taclettranslation.lemma.TacletProofObligationInput
";

\proof {
(keyLog "0" (keyUser "Julian" ) (keyVersion "e1a85b31e7"))

(autoModeTime "101615")

(branch "dummy ID"
(rule "notRight" (formula "1") (newnames "f_base,f_x,f_x_2"))
 (builtin "One Step Simplification" (formula "1") (userinteraction))
(rule "notLeft" (formula "1"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "int_induction" (inst "b=(\\forall int i;
   (\\forall int j;
      ((   (  (leq(Z(1(#)), i)<<origin(\"User_Interaction @ node 6 (int_induction)\",\"[]\")>>
            & leq(i, j)<<origin(\"User_Interaction @ node 6 (int_induction)\",\"[]\")>>)<<origin(\"User_Interaction @ node 6 (int_induction)\",\"[]\")>>
            & leq(j, add(nv, Z(1(#))))<<origin(\"User_Interaction @ node 6 (int_induction)\",\"[]\")>>)<<origin(\"User_Interaction @ node 6 (int_induction)\",\"[]\")>>
        -> leq(log(f_base, i), log(f_base, j))<<origin(\"User_Interaction @ node 6 (int_induction)\",\"[]\")>>)<<origin(\"User_Interaction @ node 6 (int_induction)\",\"[]\")>>))<<origin(\"User_Interaction @ node 6 (int_induction)\",\"[]\")>>)<<origin(\"User_Interaction @ node 6 (int_induction)\",\"[]\")>>") (inst "nv=nv") (userinteraction))
(branch "Base Case"
   (rule "add_zero_left" (formula "4") (term "1,1,0,0,0"))
   (rule "allRight" (formula "4") (inst "sk=i_0"))
   (rule "allRight" (formula "4") (inst "sk=j_0"))
   (rule "impRight" (formula "4"))
   (rule "andLeft" (formula "1"))
   (rule "andLeft" (formula "1"))
   (rule "inEqSimp_leqRight" (formula "8"))
   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
   (rule "polySimp_addComm1" (formula "1") (term "0"))
   (rule "inEqSimp_leqRight" (formula "8"))
   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
   (rule "polySimp_addComm1" (formula "1") (term "0"))
   (rule "inEqSimp_gtToGeq" (formula "8"))
   (rule "mul_literals" (formula "8") (term "1,0,0"))
   (rule "add_literals" (formula "8") (term "0,0"))
   (rule "inEqSimp_commuteLeq" (formula "3"))
   (rule "inEqSimp_commuteLeq" (formula "4"))
   (rule "inEqSimp_sepNegMonomial1" (formula "2"))
   (rule "polySimp_mulLiterals" (formula "2") (term "0"))
   (rule "polySimp_elimOne" (formula "2") (term "0"))
   (rule "inEqSimp_sepNegMonomial1" (formula "1"))
   (rule "polySimp_mulLiterals" (formula "1") (term "0"))
   (rule "polySimp_elimOne" (formula "1") (term "0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "8"))
   (rule "mul_literals" (formula "8") (term "1"))
   (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "5"))
   (rule "polySimp_mulComm0" (formula "4") (term "0,0"))
   (rule "polySimp_addComm0" (formula "4") (term "0"))
   (rule "inEqSimp_sepNegMonomial1" (formula "4"))
   (rule "polySimp_mulLiterals" (formula "4") (term "0"))
   (rule "polySimp_elimOne" (formula "4") (term "0"))
   (rule "inEqSimp_antiSymm" (formula "3") (ifseqformula "4"))
   (rule "applyEq" (formula "1") (term "1,1,1") (ifseqformula "3"))
   (rule "applyEqRigid" (formula "5") (term "0") (ifseqformula "3"))
   (rule "leq_literals" (formula "5"))
   (rule "true_left" (formula "5"))
   (rule "applyEqRigid" (formula "5") (term "1") (ifseqformula "3"))
   (rule "applyEq" (formula "4") (term "0") (ifseqformula "3"))
   (rule "qeq_literals" (formula "4"))
   (rule "true_left" (formula "4"))
   (rule "inEqSimp_antiSymm" (formula "4") (ifseqformula "5"))
   (rule "applyEqRigid" (formula "1") (term "1,0") (ifseqformula "4"))
   (rule "inEqSimp_homoInEq0" (formula "1"))
   (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
   (rule "add_literals" (formula "1") (term "1,1,0"))
   (rule "times_zero_1" (formula "1") (term "1,0"))
   (rule "add_zero_right" (formula "1") (term "0"))
   (rule "qeq_literals" (formula "1"))
   (rule "closeFalse" (formula "1"))
)
(branch "Step Case"
   (rule "allRight" (formula "4") (inst "sk=nv_0") (userinteraction))
   (rule "impRight" (formula "4"))
   (rule "andLeft" (formula "1"))
   (rule "allRight" (formula "6") (inst "sk=i_0") (userinteraction))
   (rule "allRight" (formula "6") (inst "sk=j_0") (userinteraction))
   (rule "eqTermCut" (formula "6") (term "0,1,0") (inst "s=add(add(nv_0, Z(1(#))), Z(1(#)))") (userinteraction))
   (branch "Assume j_0 = nv_0 + 1 + 1"
      (rule "impRight" (formula "7"))
      (rule "andLeft" (formula "1"))
      (rule "andLeft" (formula "1"))
      (rule "applyEqRigid" (formula "10") (term "1,1") (ifseqformula "4") (userinteraction))
      (rule "cut" (inst "cutFormula=lt(i_0, add(add(nv_0, Z(1(#))), Z(1(#))))<<origin(\"User_Interaction @ node 44180 (cut)\",\"[]\")>>") (userinteraction))
      (branch "CUT: i_0 < nv_0 + 1 + 1 TRUE"
         (rule "logDefinition" (formula "11") (term "0") (userinteraction))
         (rule "ifthenelse_split" (formula "11") (term "0") (userinteraction))
         (branch "i_0 >= 1 & f_base > 1 TRUE"
            (rule "ifthenelse_split" (formula "12") (term "0") (userinteraction))
            (branch "i_0 < f_base TRUE"
               (rule "logPositive" (formula "13") (term "1") (userinteraction))
               (rule "polySimp_addLiterals" (formula "14") (term "1,1"))
               (rule "polySimp_addLiterals" (formula "4") (term "1"))
               (rule "polySimp_addLiterals" (formula "7") (term "1"))
               (rule "polySimp_addLiterals" (formula "8") (term "1"))
               (rule "polySimp_addLiterals" (formula "1") (term "0,1,0"))
               (rule "polySimp_addLiterals" (formula "1") (term "1,0,1"))
               (rule "andLeft" (formula "3"))
               (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "13"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "polySimp_homoEq" (formula "8"))
               (rule "polySimp_addComm0" (formula "10") (term "1,1,0,0,0"))
               (rule "polySimp_addComm0" (formula "14") (term "1,1"))
               (rule "polySimp_addComm0" (formula "4") (term "1"))
               (rule "polySimp_addComm0" (formula "7") (term "1"))
               (rule "polySimp_addComm0" (formula "1") (term "0,0"))
               (rule "polySimp_addComm0" (formula "1") (term "1,0,1"))
               (rule "polySimp_addComm0" (formula "8") (term "0,0"))
               (rule "polySimp_addComm1" (formula "8") (term "0"))
               (rule "inEqSimp_leqRight" (formula "15"))
               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "1") (term "0"))
               (rule "inEqSimp_ltToLeq" (formula "3"))
               (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
               (rule "inEqSimp_gtToGeq" (formula "14"))
               (rule "mul_literals" (formula "14") (term "1,0,0"))
               (rule "add_literals" (formula "14") (term "0,0"))
               (rule "inEqSimp_leqRight" (formula "15"))
               (rule "add_zero_right" (formula "1") (term "0"))
               (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
               (rule "inEqSimp_ltToLeq" (formula "6"))
               (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
               (rule "mul_literals" (formula "6") (term "0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
               (rule "add_literals" (formula "6") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "6") (term "0"))
               (rule "inEqSimp_commuteLeq" (formula "8"))
               (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "12") (term "1,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "12") (term "1,0,0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "7"))
               (rule "inEqSimp_homoInEq0" (formula "8"))
               (rule "polySimp_addComm1" (formula "8") (term "0"))
               (rule "inEqSimp_homoInEq1" (formula "3") (term "0"))
               (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
               (rule "mul_literals" (formula "3") (term "0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
               (rule "add_literals" (formula "3") (term "0,0,0"))
               (rule "polySimp_sepPosMonomial" (formula "9"))
               (rule "polySimp_mulComm0" (formula "9") (term "1"))
               (rule "polySimp_rightDist" (formula "9") (term "1"))
               (rule "mul_literals" (formula "9") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
               (rule "polySimp_elimOne" (formula "9") (term "1,1"))
               (rule "applyEq" (formula "6") (term "0,1,0") (ifseqformula "9"))
               (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
               (rule "polySimp_rightDist" (formula "6") (term "1,0"))
               (rule "mul_literals" (formula "6") (term "0,1,0"))
               (rule "polySimp_addAssoc" (formula "6") (term "0"))
               (rule "polySimp_addComm1" (formula "6") (term "0,0"))
               (rule "add_literals" (formula "6") (term "0,0,0"))
               (rule "applyEqRigid" (formula "11") (term "1,1,1,0,0,0") (ifseqformula "9"))
               (rule "polySimp_addAssoc" (formula "11") (term "1,1,0,0,0"))
               (rule "add_literals" (formula "11") (term "0,1,1,0,0,0"))
               (rule "applyEqRigid" (formula "1") (term "1,1,0,1,0") (ifseqformula "9"))
               (rule "polySimp_addAssoc" (formula "1") (term "1,0,1,0"))
               (rule "add_literals" (formula "1") (term "0,1,0,1,0"))
               (rule "add_zero_left" (formula "1") (term "1,0,1,0"))
               (rule "applyEqRigid" (formula "3") (term "0,1,0,0") (ifseqformula "9"))
               (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
               (rule "mul_literals" (formula "3") (term "0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
               (rule "add_literals" (formula "3") (term "0,0,0"))
               (rule "applyEqRigid" (formula "3") (term "1,1,0,1") (ifseqformula "9"))
               (rule "polySimp_addAssoc" (formula "3") (term "1,0,1"))
               (rule "add_literals" (formula "3") (term "0,1,0,1"))
               (rule "add_zero_left" (formula "3") (term "1,0,1"))
               (rule "applyEqRigid" (formula "8") (term "1,0") (ifseqformula "9"))
               (rule "polySimp_addAssoc" (formula "8") (term "0"))
               (rule "polySimp_addComm1" (formula "8") (term "0,0"))
               (rule "add_literals" (formula "8") (term "0,0,0"))
               (rule "add_zero_left" (formula "8") (term "0,0"))
               (rule "polySimp_pullOutFactor2" (formula "8") (term "0"))
               (rule "add_literals" (formula "8") (term "1,0"))
               (rule "times_zero_1" (formula "8") (term "0"))
               (rule "qeq_literals" (formula "8"))
               (rule "true_left" (formula "8"))
               (rule "applyEqRigid" (formula "9") (term "0") (ifseqformula "8"))
               (rule "inEqSimp_sepNegMonomial1" (formula "2"))
               (rule "polySimp_mulLiterals" (formula "2") (term "0"))
               (rule "polySimp_elimOne" (formula "2") (term "0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "4"))
               (rule "polySimp_mulComm0" (formula "4") (term "1"))
               (rule "polySimp_rightDist" (formula "4") (term "1"))
               (rule "mul_literals" (formula "4") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
               (rule "polySimp_elimOne" (formula "4") (term "1,1"))
               (rule "inEqSimp_sepPosMonomial1" (formula "13"))
               (rule "mul_literals" (formula "13") (term "1"))
               (rule "inEqSimp_sepNegMonomial0" (formula "6"))
               (rule "polySimp_mulLiterals" (formula "6") (term "0"))
               (rule "polySimp_elimOne" (formula "6") (term "0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "1"))
               (rule "polySimp_mulLiterals" (formula "1") (term "0"))
               (rule "polySimp_elimOne" (formula "1") (term "0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "3") (term "0"))
               (rule "polySimp_mulLiterals" (formula "3") (term "0,0"))
               (rule "polySimp_elimOne" (formula "3") (term "0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "9"))
               (rule "mul_literals" (formula "9") (term "1"))
               (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "6"))
               (rule "inEqSimp_homoInEq0" (formula "7") (term "0"))
               (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0"))
               (rule "add_literals" (formula "7") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "7") (term "1,0,0"))
               (rule "add_zero_right" (formula "7") (term "0,0"))
               (rule "qeq_literals" (formula "7") (term "0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "true_left" (formula "7"))
               (rule "inEqSimp_contradInEq0" (formula "3") (term "1") (ifseqformula "1"))
               (rule "qeq_literals" (formula "3") (term "0,1"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "notLeft" (formula "3"))
               (rule "inEqSimp_geqRight" (formula "12"))
               (rule "mul_literals" (formula "1") (term "1,0,0"))
               (rule "add_literals" (formula "1") (term "0,0"))
               (rule "add_zero_left" (formula "1") (term "0"))
               (rule "inEqSimp_contradInEq0" (formula "8") (ifseqformula "1"))
               (rule "qeq_literals" (formula "8") (term "0"))
                (builtin "One Step Simplification" (formula "8"))
               (rule "closeFalse" (formula "8"))
            )
            (branch "i_0 < f_base FALSE"
               (rule "logDefinition" (formula "13") (term "1") (userinteraction))
               (rule "ifthenelse_split" (formula "13") (term "1") (userinteraction))
               (branch "nv_0 + 1 + 1 >= 1 & f_base > 1 TRUE"
                  (rule "ifthenelse_split" (formula "14") (term "1") (userinteraction))
                  (branch "nv_0 + 1 + 1 < f_base TRUE"
                     (rule "polySimp_addLiterals" (formula "2") (term "0,0"))
                     (rule "polySimp_addLiterals" (formula "4") (term "1"))
                     (rule "polySimp_addLiterals" (formula "7") (term "1"))
                     (rule "polySimp_addLiterals" (formula "8") (term "1"))
                     (rule "polySimp_addLiterals" (formula "1") (term "0"))
                     (rule "andLeft" (formula "3"))
                     (rule "andLeft" (formula "2"))
                     (rule "polySimp_homoEq" (formula "8"))
                     (rule "polySimp_addComm0" (formula "10") (term "1,1,0,0,0"))
                     (rule "polySimp_addComm0" (formula "4") (term "1"))
                     (rule "polySimp_addComm0" (formula "7") (term "1"))
                     (rule "polySimp_addComm0" (formula "1") (term "0"))
                     (rule "polySimp_addComm0" (formula "2") (term "0"))
                     (rule "polySimp_addComm0" (formula "8") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "8") (term "0"))
                     (rule "inEqSimp_leqRight" (formula "15"))
                     (rule "times_zero_1" (formula "1") (term "1,0,0"))
                     (rule "add_zero_right" (formula "1") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0"))
                     (rule "add_literals" (formula "1") (term "0,0"))
                     (rule "add_zero_left" (formula "1") (term "0"))
                     (rule "inEqSimp_ltRight" (formula "15"))
                     (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                     (rule "inEqSimp_leqRight" (formula "16"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0"))
                     (rule "inEqSimp_gtToGeq" (formula "16"))
                     (rule "mul_literals" (formula "16") (term "1,0,0"))
                     (rule "add_literals" (formula "16") (term "0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "7"))
                     (rule "polySimp_rightDist" (formula "7") (term "1,0,0"))
                     (rule "mul_literals" (formula "7") (term "0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                     (rule "add_literals" (formula "7") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "7") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "4"))
                     (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                     (rule "polySimp_addAssoc" (formula "4") (term "0"))
                     (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                     (rule "add_literals" (formula "4") (term "0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "13") (term "1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "9"))
                     (rule "inEqSimp_commuteLeq" (formula "13") (term "1,0,0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "8"))
                     (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0,0,0"))
                     (rule "inEqSimp_homoInEq0" (formula "9"))
                     (rule "polySimp_addComm1" (formula "9") (term "0"))
                     (rule "inEqSimp_homoInEq1" (formula "5"))
                     (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                     (rule "mul_literals" (formula "5") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "5") (term "0"))
                     (rule "add_literals" (formula "5") (term "0,0"))
                     (rule "polySimp_sepPosMonomial" (formula "10"))
                     (rule "polySimp_mulComm0" (formula "10") (term "1"))
                     (rule "polySimp_rightDist" (formula "10") (term "1"))
                     (rule "mul_literals" (formula "10") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "10") (term "1,1"))
                     (rule "applyEqRigid" (formula "7") (term "0,1,0") (ifseqformula "10"))
                     (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "7") (term "1,0"))
                     (rule "mul_literals" (formula "7") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "7") (term "0"))
                     (rule "polySimp_addComm1" (formula "7") (term "0,0"))
                     (rule "add_literals" (formula "7") (term "0,0,0"))
                     (rule "applyEq" (formula "11") (term "0") (ifseqformula "10"))
                     (rule "applyEq" (formula "5") (term "0,1,0") (ifseqformula "10"))
                     (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                     (rule "mul_literals" (formula "5") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "5") (term "0"))
                     (rule "add_literals" (formula "5") (term "0,0"))
                     (rule "applyEqRigid" (formula "9") (term "1,0") (ifseqformula "10"))
                     (rule "polySimp_addAssoc" (formula "9") (term "0"))
                     (rule "polySimp_addComm1" (formula "9") (term "0,0"))
                     (rule "add_literals" (formula "9") (term "0,0,0"))
                     (rule "add_zero_left" (formula "9") (term "0,0"))
                     (rule "polySimp_pullOutFactor2" (formula "9") (term "0"))
                     (rule "add_literals" (formula "9") (term "1,0"))
                     (rule "times_zero_1" (formula "9") (term "0"))
                     (rule "qeq_literals" (formula "9"))
                     (rule "true_left" (formula "9"))
                     (rule "applyEq" (formula "4") (term "1,0") (ifseqformula "9"))
                     (rule "polySimp_addAssoc" (formula "4") (term "0"))
                     (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                     (rule "add_literals" (formula "4") (term "0,0,0"))
                     (rule "applyEq" (formula "11") (term "1,1,1,0,0,0") (ifseqformula "9"))
                     (rule "polySimp_addAssoc" (formula "11") (term "1,1,0,0,0"))
                     (rule "add_literals" (formula "11") (term "0,1,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "1"))
                     (rule "polySimp_elimOne" (formula "2") (term "1"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                     (rule "polySimp_elimOne" (formula "1") (term "0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                     (rule "mul_literals" (formula "14") (term "1"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "7"))
                     (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                     (rule "polySimp_elimOne" (formula "7") (term "0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                     (rule "mul_literals" (formula "10") (term "1"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                     (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                     (rule "polySimp_elimOne" (formula "5") (term "0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                     (rule "polySimp_mulComm0" (formula "4") (term "1"))
                     (rule "polySimp_rightDist" (formula "4") (term "1"))
                     (rule "mul_literals" (formula "4") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                     (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "7"))
                     (rule "inEqSimp_homoInEq0" (formula "8") (term "0"))
                     (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0"))
                     (rule "add_literals" (formula "8") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "8") (term "1,0,0"))
                     (rule "add_zero_right" (formula "8") (term "0,0"))
                     (rule "qeq_literals" (formula "8") (term "0"))
                      (builtin "One Step Simplification" (formula "8"))
                     (rule "true_left" (formula "8"))
                     (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "9"))
                     (rule "leq_literals" (formula "5") (term "0"))
                      (builtin "One Step Simplification" (formula "5"))
                     (rule "true_left" (formula "5"))
                     (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "4"))
                     (rule "mul_literals" (formula "8") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "8") (term "0"))
                     (rule "add_literals" (formula "8") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                     (rule "mul_literals" (formula "8") (term "1"))
                     (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "8"))
                     (rule "leq_literals" (formula "13") (term "0"))
                      (builtin "One Step Simplification" (formula "13"))
                     (rule "true_left" (formula "13"))
                     (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "4"))
                     (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                     (rule "mul_literals" (formula "6") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "6") (term "0"))
                     (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                     (rule "add_literals" (formula "6") (term "0,0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "6"))
                     (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                     (rule "polySimp_elimOne" (formula "6") (term "0"))
                     (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "6"))
                     (rule "andLeft" (formula "2"))
                     (rule "inEqSimp_homoInEq1" (formula "2"))
                     (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                     (rule "mul_literals" (formula "2") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "2") (term "0"))
                     (rule "polySimp_addComm0" (formula "2") (term "0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                     (rule "add_literals" (formula "2") (term "1,1,0"))
                     (rule "times_zero_1" (formula "2") (term "1,0"))
                     (rule "add_zero_right" (formula "2") (term "0"))
                     (rule "leq_literals" (formula "2"))
                     (rule "closeFalse" (formula "2"))
                  )
                  (branch "nv_0 + 1 + 1 < f_base FALSE"
                     (rule "andLeft" (formula "1"))
                     (rule "andLeft" (formula "2"))
                     (rule "instAll" (formula "15") (term "1,1,0") (ifseqformula "9") (userinteraction))
                     (rule "instAll" (formula "16") (term "1,1,1") (ifseqformula "1") (userinteraction))
                     (rule "impLeft" (formula "1") (userinteraction))
                     (branch "Case 1"
                        (rule "hide_left" (formula "1") (userinteraction))
                        (rule "hide_right" (formula "16") (userinteraction))
                        (rule "hide_right" (formula "16") (userinteraction))
                        (rule "hide_left" (formula "9") (userinteraction))
                        (rule "polySimp_addLiterals" (formula "14") (term "0"))
                        (rule "polySimp_addLiterals" (formula "12") (term "0,1,1,0"))
                        (rule "polySimp_addLiterals" (formula "12") (term "0,0,1"))
                        (rule "polySimp_addLiterals" (formula "1") (term "0"))
                        (rule "polySimp_addLiterals" (formula "3") (term "1"))
                        (rule "polySimp_addLiterals" (formula "6") (term "1"))
                        (rule "polySimp_addLiterals" (formula "7") (term "1"))
                        (rule "polySimp_homoEq" (formula "7"))
                        (rule "polySimp_addComm0" (formula "12") (term "1,1"))
                        (rule "polySimp_addComm0" (formula "14") (term "0"))
                        (rule "polySimp_addComm0" (formula "12") (term "0,1,1,0"))
                        (rule "polySimp_addComm0" (formula "12") (term "0,0,1"))
                        (rule "polySimp_addComm0" (formula "1") (term "0"))
                        (rule "polySimp_addComm0" (formula "3") (term "1"))
                        (rule "polySimp_addComm0" (formula "6") (term "1"))
                        (rule "polySimp_addComm0" (formula "7") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "7") (term "0"))
                        (rule "inEqSimp_ltRight" (formula "13"))
                        (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                        (rule "inEqSimp_ltRight" (formula "14"))
                        (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0"))
                        (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                        (rule "inEqSimp_gtToGeq" (formula "13"))
                        (rule "mul_literals" (formula "13") (term "1,0,0"))
                        (rule "add_literals" (formula "13") (term "0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "5"))
                        (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
                        (rule "mul_literals" (formula "5") (term "0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                        (rule "add_literals" (formula "5") (term "0,0,0"))
                        (rule "polySimp_addComm1" (formula "5") (term "0"))
                        (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "7"))
                        (rule "inEqSimp_commuteLeq" (formula "6"))
                        (rule "inEqSimp_commuteLeq" (formula "13") (term "1,0"))
                        (rule "inEqSimp_homoInEq1" (formula "3"))
                        (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                        (rule "mul_literals" (formula "3") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "3") (term "0"))
                        (rule "add_literals" (formula "3") (term "0,0"))
                        (rule "inEqSimp_homoInEq0" (formula "7"))
                        (rule "polySimp_addComm1" (formula "7") (term "0"))
                        (rule "polySimp_sepPosMonomial" (formula "8"))
                        (rule "polySimp_mulComm0" (formula "8") (term "1"))
                        (rule "polySimp_rightDist" (formula "8") (term "1"))
                        (rule "mul_literals" (formula "8") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "8") (term "1,1"))
                        (rule "applyEqRigid" (formula "9") (term "0") (ifseqformula "8"))
                        (rule "applyEqRigid" (formula "7") (term "1,0") (ifseqformula "8"))
                        (rule "polySimp_addAssoc" (formula "7") (term "0"))
                        (rule "polySimp_addComm1" (formula "7") (term "0,0"))
                        (rule "add_literals" (formula "7") (term "0,0,0"))
                        (rule "add_zero_left" (formula "7") (term "0,0"))
                        (rule "polySimp_pullOutFactor2" (formula "7") (term "0"))
                        (rule "add_literals" (formula "7") (term "1,0"))
                        (rule "times_zero_1" (formula "7") (term "0"))
                        (rule "qeq_literals" (formula "7"))
                        (rule "true_left" (formula "7"))
                        (rule "applyEq" (formula "3") (term "0,1,0") (ifseqformula "7"))
                        (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                        (rule "mul_literals" (formula "3") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "3") (term "0"))
                        (rule "add_literals" (formula "3") (term "0,0"))
                        (rule "applyEq" (formula "12") (term "1,1,1") (ifseqformula "7"))
                        (rule "polySimp_addAssoc" (formula "12") (term "1,1"))
                        (rule "add_literals" (formula "12") (term "0,1,1"))
                        (rule "applyEq" (formula "12") (term "1,0,0,1,0") (ifseqformula "7"))
                        (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0"))
                        (rule "add_literals" (formula "12") (term "0,0,0,1,0"))
                        (rule "add_zero_left" (formula "12") (term "0,0,1,0"))
                        (rule "applyEq" (formula "5") (term "0,1,0") (ifseqformula "7"))
                        (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                        (rule "mul_literals" (formula "5") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "5") (term "0"))
                        (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                        (rule "add_literals" (formula "5") (term "0,0,0"))
                        (rule "applyEqRigid" (formula "12") (term "1,0,0,1") (ifseqformula "7"))
                        (rule "polySimp_addAssoc" (formula "12") (term "0,0,1"))
                        (rule "add_literals" (formula "12") (term "0,0,0,1"))
                        (rule "add_zero_left" (formula "12") (term "0,0,1"))
                        (rule "applyEqRigid" (formula "1") (term "1,0") (ifseqformula "7"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0"))
                        (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                        (rule "add_literals" (formula "1") (term "0,0,0"))
                        (rule "add_zero_left" (formula "1") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "1"))
                        (rule "polySimp_elimOne" (formula "2") (term "1"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                        (rule "mul_literals" (formula "11") (term "1"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                        (rule "mul_literals" (formula "8") (term "1"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                        (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                        (rule "polySimp_elimOne" (formula "3") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                        (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                        (rule "polySimp_elimOne" (formula "5") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                        (rule "polySimp_elimOne" (formula "1") (term "1"))
                        (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "5"))
                        (rule "inEqSimp_homoInEq0" (formula "6") (term "0"))
                        (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0"))
                        (rule "add_literals" (formula "6") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "6") (term "1,0,0"))
                        (rule "add_zero_right" (formula "6") (term "0,0"))
                        (rule "qeq_literals" (formula "6") (term "0"))
                         (builtin "One Step Simplification" (formula "6"))
                        (rule "true_left" (formula "6"))
                        (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "7"))
                        (rule "leq_literals" (formula "3") (term "0"))
                         (builtin "One Step Simplification" (formula "3"))
                        (rule "true_left" (formula "3"))
                        (rule "div_axiom" (formula "10") (term "0,0,0") (inst "quotient=quotient_0"))
                        (rule "polySimp_mulComm0" (formula "1") (term "0,2,1,1"))
                        (rule "polySimp_mulComm0" (formula "1") (term "0,1,1,1"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,1,1,1,1"))
                        (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,1"))
                        (rule "polySimp_addComm1" (formula "1") (term "1,2,1,1"))
                        (rule "polySimp_addComm1" (formula "1") (term "1,1,1,1"))
                        (rule "inEqSimp_contradEq7" (formula "1") (term "0") (ifseqformula "10"))
                        (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                        (rule "add_zero_right" (formula "1") (term "0,0,0"))
                        (rule "leq_literals" (formula "1") (term "0,0"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "andLeft" (formula "1"))
                        (rule "andLeft" (formula "1"))
                        (rule "applyEqRigid" (formula "13") (term "1,1,0") (ifseqformula "1"))
                        (rule "applyEqRigid" (formula "13") (term "0,0,0") (ifseqformula "1"))
                        (rule "inEqSimp_subsumption1" (formula "3") (term "0") (ifseqformula "12"))
                        (rule "leq_literals" (formula "3") (term "0,0"))
                         (builtin "One Step Simplification" (formula "3"))
                        (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "2"))
                        (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                        (rule "polySimp_pullOutFactor2b" (formula "3") (term "0"))
                        (rule "add_literals" (formula "3") (term "1,1,0"))
                        (rule "times_zero_1" (formula "3") (term "1,0"))
                        (rule "add_zero_right" (formula "3") (term "0"))
                        (rule "polySimp_rightDist" (formula "3") (term "0"))
                        (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                        (rule "mul_literals" (formula "3") (term "0,0"))
                        (rule "polySimp_elimOne" (formula "3") (term "1,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                        (rule "mul_literals" (formula "3") (term "1"))
                        (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "13"))
                        (rule "leq_literals" (formula "3") (term "0"))
                         (builtin "One Step Simplification" (formula "3"))
                        (rule "true_left" (formula "3"))
                        (rule "commute_and_2" (formula "13"))
                        (rule "commute_and" (formula "13") (term "0"))
                        (rule "commute_and_2" (formula "13"))
                        (rule "div_axiom" (formula "13") (term "0,0,0") (inst "quotient=quotient_1"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,1,1,1,1"))
                        (rule "polySimp_mulComm0" (formula "1") (term "0,2,1,1"))
                        (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,1"))
                        (rule "polySimp_mulComm0" (formula "1") (term "0,1,1,1"))
                        (rule "polySimp_addComm1" (formula "1") (term "1,2,1,1"))
                        (rule "polySimp_addComm1" (formula "1") (term "1,1,1,1"))
                        (rule "inEqSimp_contradEq7" (formula "1") (term "0") (ifseqformula "13"))
                        (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                        (rule "add_zero_right" (formula "1") (term "0,0,0"))
                        (rule "leq_literals" (formula "1") (term "0,0"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "andLeft" (formula "1"))
                        (rule "andLeft" (formula "1"))
                        (rule "applyEq" (formula "16") (term "0,0,0") (ifseqformula "1"))
                        (rule "inEqSimp_homoInEq0" (formula "16") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "16") (term "0,0,0"))
                        (rule "applyEqRigid" (formula "16") (term "0,1,0") (ifseqformula "1"))
                        (rule "inEqSimp_commuteGeq" (formula "16") (term "1,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "0,0"))
                        (rule "polySimp_mulComm0" (formula "16") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "16") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "16") (term "0,1,0,0"))
                        (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0"))
                        (rule "inEqSimp_subsumption1" (formula "3") (term "0") (ifseqformula "15"))
                        (rule "leq_literals" (formula "3") (term "0,0"))
                         (builtin "One Step Simplification" (formula "3"))
                        (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "2"))
                        (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                        (rule "polySimp_pullOutFactor2b" (formula "3") (term "0"))
                        (rule "add_literals" (formula "3") (term "1,1,0"))
                        (rule "times_zero_1" (formula "3") (term "1,0"))
                        (rule "add_zero_right" (formula "3") (term "0"))
                        (rule "polySimp_rightDist" (formula "3") (term "0"))
                        (rule "mul_literals" (formula "3") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                        (rule "polySimp_elimOne" (formula "3") (term "1,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                        (rule "mul_literals" (formula "3") (term "1"))
                        (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "16"))
                        (rule "leq_literals" (formula "3") (term "0"))
                         (builtin "One Step Simplification" (formula "3"))
                        (rule "true_left" (formula "3"))
                        (rule "commute_and_2" (formula "16"))
                        (rule "cut_direct" (formula "16") (term "1"))
                        (branch "CUT: quotient_0 <= quotient_1 TRUE"
                            (builtin "One Step Simplification" (formula "17"))
                           (rule "cut_direct" (formula "17") (term "1"))
                           (branch "CUT: quotient_0 >= 1 TRUE"
                               (builtin "One Step Simplification" (formula "18"))
                              (rule "inEqSimp_geqRight" (formula "18"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                              (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                              (rule "add_literals" (formula "1") (term "0,0,0"))
                              (rule "add_zero_left" (formula "1") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                              (rule "polySimp_elimOne" (formula "1") (term "1"))
                              (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "1"))
                              (rule "polySimp_mulComm0" (formula "10") (term "0,0"))
                              (rule "polySimp_addComm0" (formula "10") (term "0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "10"))
                              (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                              (rule "polySimp_elimOne" (formula "10") (term "0"))
                              (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "1"))
                              (rule "mul_literals" (formula "16") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                              (rule "mul_literals" (formula "16") (term "1"))
                              (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "3"))
                              (rule "mul_literals" (formula "2") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                              (rule "mul_literals" (formula "2") (term "1"))
                              (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "17"))
                              (rule "leq_literals" (formula "2") (term "0"))
                               (builtin "One Step Simplification" (formula "2"))
                              (rule "true_left" (formula "2"))
                              (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "1"))
                              (rule "polySimp_rightDist" (formula "14") (term "0,0"))
                              (rule "mul_literals" (formula "14") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "14") (term "0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "14"))
                              (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                              (rule "polySimp_elimOne" (formula "14") (term "0"))
                              (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "10"))
                              (rule "mul_literals" (formula "21") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "21"))
                              (rule "mul_literals" (formula "21") (term "1"))
                              (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "14"))
                              (rule "mul_literals" (formula "13") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "13") (term "0"))
                              (rule "add_literals" (formula "13") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                              (rule "mul_literals" (formula "13") (term "1"))
                              (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "14"))
                              (rule "polySimp_mulComm0" (formula "12") (term "0,0"))
                              (rule "polySimp_addComm0" (formula "12") (term "0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "12"))
                              (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                              (rule "polySimp_elimOne" (formula "12") (term "0"))
                              (rule "inEqSimp_subsumption0" (formula "10") (ifseqformula "12"))
                              (rule "inEqSimp_homoInEq0" (formula "10") (term "0"))
                              (rule "polySimp_mulComm0" (formula "10") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "10") (term "1,0,0"))
                              (rule "mul_literals" (formula "10") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "10") (term "0,0"))
                              (rule "polySimp_addComm0" (formula "10") (term "0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0"))
                              (rule "add_literals" (formula "10") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "10") (term "1,0,0"))
                              (rule "add_zero_right" (formula "10") (term "0,0"))
                              (rule "qeq_literals" (formula "10") (term "0"))
                               (builtin "One Step Simplification" (formula "10"))
                              (rule "true_left" (formula "10"))
                              (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "11"))
                              (rule "mul_literals" (formula "21") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "21") (term "0"))
                              (rule "add_literals" (formula "21") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "21"))
                              (rule "mul_literals" (formula "21") (term "1"))
                              (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "21"))
                              (rule "leq_literals" (formula "17") (term "0"))
                               (builtin "One Step Simplification" (formula "17"))
                              (rule "true_left" (formula "17"))
                              (rule "multiply_2_inEq1" (formula "3") (ifseqformula "21"))
                              (rule "polySimp_elimNeg" (formula "3") (term "0,0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "0,0,1"))
                              (rule "polySimp_mulComm0" (formula "3") (term "1,0,1"))
                              (rule "polySimp_mulComm0" (formula "3") (term "0"))
                              (rule "polySimp_addComm1" (formula "3") (term "1"))
                              (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "3"))
                              (rule "polySimp_rightDist" (formula "10") (term "0,0"))
                              (rule "polySimp_rightDist" (formula "10") (term "0,0,0"))
                              (rule "mul_literals" (formula "10") (term "0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "10") (term "1,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "10") (term "0"))
                              (rule "polySimp_addComm1" (formula "10") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "10") (term "0,0,0"))
                              (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                              (rule "polySimp_mulComm0" (formula "10") (term "1"))
                              (rule "polySimp_rightDist" (formula "10") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "10") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "10") (term "1,1"))
                              (rule "polySimp_rightDist" (formula "10") (term "0,1"))
                              (rule "polySimp_rightDist" (formula "10") (term "0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,1"))
                              (rule "polySimp_rightDist" (formula "10") (term "0,0,0,1"))
                              (rule "mul_literals" (formula "10") (term "0,0,0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0,1"))
                              (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "6"))
                              (rule "polySimp_rightDist" (formula "10") (term "0,0"))
                              (rule "polySimp_rightDist" (formula "10") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "10") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "10") (term "0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "10") (term "0,0,0,0,0"))
                              (rule "mul_literals" (formula "10") (term "0,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                              (rule "polySimp_mulComm0" (formula "10") (term "1"))
                              (rule "polySimp_rightDist" (formula "10") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "10") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "10") (term "1,1"))
                              (rule "polySimp_rightDist" (formula "10") (term "0,1"))
                              (rule "polySimp_rightDist" (formula "10") (term "0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,1"))
                              (rule "polySimp_rightDist" (formula "10") (term "0,0,0,1"))
                              (rule "mul_literals" (formula "10") (term "0,0,0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0,1"))
                              (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "1"))
                              (rule "polySimp_rightDist" (formula "10") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "10") (term "0"))
                              (rule "polySimp_rightDist" (formula "10") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "10") (term "1,0,0,0"))
                              (rule "polySimp_addComm1" (formula "10") (term "0,0"))
                              (rule "polySimp_rightDist" (formula "10") (term "0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "10") (term "0,0,0"))
                              (rule "polySimp_rightDist" (formula "10") (term "0,0,0,0,0"))
                              (rule "mul_literals" (formula "10") (term "0,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0,0,0"))
                              (rule "polySimp_pullOutFactor2b" (formula "10") (term "0,0,0,0"))
                              (rule "add_literals" (formula "10") (term "1,1,0,0,0,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "10"))
                              (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                              (rule "polySimp_elimOne" (formula "10") (term "0"))
                              (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "10"))
                              (rule "polySimp_mulComm0" (formula "16") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "16") (term "0"))
                              (rule "polySimp_addComm0" (formula "16") (term "0,0"))
                              (rule "polySimp_pullOutFactor2b" (formula "16") (term "0"))
                              (rule "add_literals" (formula "16") (term "1,1,0"))
                              (rule "times_zero_1" (formula "16") (term "1,0"))
                              (rule "add_zero_right" (formula "16") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                              (rule "polySimp_mulComm0" (formula "16") (term "1"))
                              (rule "polySimp_rightDist" (formula "16") (term "1"))
                              (rule "mul_literals" (formula "16") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "16") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "16") (term "1,1"))
                              (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "10"))
                              (rule "mul_literals" (formula "18") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "18") (term "0"))
                              (rule "polySimp_addAssoc" (formula "18") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "18") (term "0,0,0"))
                              (rule "add_literals" (formula "18") (term "0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                              (rule "polySimp_mulComm0" (formula "18") (term "1"))
                              (rule "polySimp_rightDist" (formula "18") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "18") (term "1,1"))
                              (rule "polySimp_rightDist" (formula "18") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "18") (term "1,0,1"))
                              (rule "mul_literals" (formula "18") (term "0,0,1"))
                              (rule "polySimp_elimOne" (formula "18") (term "1,0,1"))
                              (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "15"))
                              (rule "polySimp_rightDist" (formula "18") (term "0,0"))
                              (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "18") (term "0"))
                              (rule "polySimp_rightDist" (formula "18") (term "0,0,0"))
                              (rule "mul_literals" (formula "18") (term "0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "18") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "18") (term "0,0,0"))
                              (rule "add_literals" (formula "18") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor2b" (formula "18") (term "0,0"))
                              (rule "add_literals" (formula "18") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "18") (term "1,0,0"))
                              (rule "add_zero_right" (formula "18") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                              (rule "mul_literals" (formula "18") (term "1"))
                              (rule "elimGcdGeq_antec" (formula "18") (inst "elimGcdRightDiv=Z(2(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(2(#))"))
                              (rule "polySimp_mulLiterals" (formula "18") (term "1,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0,0,0,1,0"))
                              (rule "leq_literals" (formula "18") (term "0,0"))
                               (builtin "One Step Simplification" (formula "18"))
                              (rule "mul_literals" (formula "18") (term "1,0,0,0,0,0"))
                              (rule "polySimp_addLiterals" (formula "18") (term "0,0,0,0"))
                              (rule "add_literals" (formula "18") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "18") (term "0,0"))
                              (rule "add_literals" (formula "18") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "18") (term "1,0,0"))
                              (rule "add_zero_right" (formula "18") (term "0,0"))
                              (rule "leq_literals" (formula "18") (term "0"))
                               (builtin "One Step Simplification" (formula "18"))
                              (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "18"))
                              (rule "leq_literals" (formula "2") (term "0"))
                               (builtin "One Step Simplification" (formula "2"))
                              (rule "true_left" (formula "2"))
                              (rule "inEqSimp_exactShadow1" (formula "15") (ifseqformula "3"))
                              (rule "greater_literals" (formula "15") (term "0"))
                               (builtin "One Step Simplification" (formula "15"))
                              (rule "polySimp_mulComm0" (formula "15") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "15") (term "0,0"))
                              (rule "mul_literals" (formula "15") (term "0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "15") (term "0"))
                              (rule "add_literals" (formula "15") (term "1,1,0"))
                              (rule "polySimp_elimOne" (formula "15") (term "1,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                              (rule "mul_literals" (formula "15") (term "1"))
                              (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "27"))
                              (rule "leq_literals" (formula "15") (term "0"))
                               (builtin "One Step Simplification" (formula "15"))
                              (rule "true_left" (formula "15"))
                              (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "3"))
                              (rule "mul_literals" (formula "17") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                              (rule "mul_literals" (formula "17") (term "1"))
                              (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "27"))
                              (rule "leq_literals" (formula "17") (term "0"))
                               (builtin "One Step Simplification" (formula "17"))
                              (rule "true_left" (formula "17"))
                              (rule "sign_case_distinction" (inst "signCasesLeft=f_x_2"))
                              (branch "f_x_2 is negative"
                                 (rule "inEqSimp_exactShadow3" (formula "26") (ifseqformula "1"))
                                 (rule "polySimp_mulComm0" (formula "26") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "26") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "26"))
                                 (rule "polySimp_mulLiterals" (formula "26") (term "0"))
                                 (rule "polySimp_elimOne" (formula "26") (term "0"))
                                 (rule "inEqSimp_contradInEq1" (formula "26") (ifseqformula "25"))
                                 (rule "qeq_literals" (formula "26") (term "0"))
                                  (builtin "One Step Simplification" (formula "26"))
                                 (rule "closeFalse" (formula "26"))
                              )
                              (branch "f_x_2 is zero"
                                 (rule "applyEq" (formula "26") (term "0") (ifseqformula "1"))
                                 (rule "inEqSimp_commuteGeq" (formula "26"))
                                 (rule "inEqSimp_contradInEq0" (formula "25") (ifseqformula "26"))
                                 (rule "qeq_literals" (formula "25") (term "0"))
                                  (builtin "One Step Simplification" (formula "25"))
                                 (rule "closeFalse" (formula "25"))
                              )
                              (branch "f_x_2 is positive"
                                 (rule "multiply_2_inEq1" (formula "15") (ifseqformula "18"))
                                 (rule "polySimp_elimNeg" (formula "15") (term "0,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "15") (term "0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "15") (term "1,0,1"))
                                 (rule "polySimp_mulComm0" (formula "15") (term "0,0,1"))
                                 (rule "polySimp_rightDist" (formula "15") (term "1,0,1"))
                                 (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,1"))
                                 (rule "polySimp_rightDist" (formula "15") (term "0,0,1"))
                                 (rule "mul_literals" (formula "15") (term "0,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "15") (term "0,1"))
                                 (rule "polySimp_addComm1" (formula "15") (term "1"))
                                 (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "15"))
                                 (rule "polySimp_rightDist" (formula "13") (term "0,0"))
                                 (rule "polySimp_rightDist" (formula "13") (term "0,0,0"))
                                 (rule "mul_literals" (formula "13") (term "0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "13") (term "1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "13") (term "0"))
                                 (rule "polySimp_addComm1" (formula "13") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "13") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "13") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0,0"))
                                 (rule "add_literals" (formula "13") (term "1,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "13") (term "0,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                                 (rule "polySimp_mulComm0" (formula "13") (term "1"))
                                 (rule "polySimp_rightDist" (formula "13") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "13") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "13") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1"))
                                 (rule "polySimp_rightDist" (formula "13") (term "0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,1"))
                                 (rule "polySimp_elimOne" (formula "13") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "13") (term "0,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0,1"))
                                 (rule "mul_literals" (formula "13") (term "0,0,0,0,1"))
                                 (rule "multiply_2_inEq1" (formula "17") (ifseqformula "29"))
                                 (rule "polySimp_elimNeg" (formula "17") (term "0,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "17") (term "0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "17") (term "1,0,1"))
                                 (rule "polySimp_mulComm0" (formula "17") (term "0,0,1"))
                                 (rule "polySimp_rightDist" (formula "17") (term "1,0,1"))
                                 (rule "polySimp_rightDist" (formula "17") (term "0,0,1"))
                                 (rule "mul_literals" (formula "17") (term "0,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "17") (term "0,1"))
                                 (rule "polySimp_pullOutFactor0b" (formula "17") (term "0,0,1"))
                                 (rule "add_literals" (formula "17") (term "1,1,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "17") (term "1"))
                                 (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "17"))
                                 (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                                 (rule "polySimp_rightDist" (formula "7") (term "0,0,0"))
                                 (rule "mul_literals" (formula "7") (term "0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "7") (term "1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "7") (term "0"))
                                 (rule "polySimp_addComm1" (formula "7") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "7") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "7") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,0"))
                                 (rule "add_literals" (formula "7") (term "1,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "7") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "7") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                 (rule "polySimp_mulComm0" (formula "7") (term "1"))
                                 (rule "polySimp_rightDist" (formula "7") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "7") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "7") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "7") (term "1,0,1"))
                                 (rule "polySimp_rightDist" (formula "7") (term "0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,1"))
                                 (rule "mul_literals" (formula "7") (term "0,0,0,1"))
                                 (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "18"))
                                 (rule "polySimp_rightDist" (formula "13") (term "0,0"))
                                 (rule "polySimp_rightDist" (formula "13") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "13") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "13") (term "0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "13") (term "0,0,0,0,0"))
                                 (rule "mul_literals" (formula "13") (term "0,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "13") (term "0"))
                                 (rule "polySimp_addComm1" (formula "13") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "13") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "13") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0,0"))
                                 (rule "add_literals" (formula "13") (term "1,1,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "13") (term "0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "13") (term "0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "13") (term "0,0,0,0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "13") (term "1,1,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                                 (rule "polySimp_mulComm0" (formula "13") (term "1"))
                                 (rule "polySimp_rightDist" (formula "13") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "13") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "13") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1"))
                                 (rule "polySimp_rightDist" (formula "13") (term "0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "13") (term "0,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0,1"))
                                 (rule "mul_literals" (formula "13") (term "0,0,0,0,1"))
                                 (rule "add_non_neg_square" (inst "squareFac=quotient_1"))
                                 (rule "divide_inEq2" (formula "1") (inst "divY=quotient_1") (ifseqformula "33"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "leq_literals" (formula "1") (term "0,1"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "add_zero_left" (formula "1") (term "0,0,1,1"))
                                 (rule "qeq_literals" (formula "1") (term "0"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "sub_literals" (formula "1") (term "0,1"))
                                 (rule "div_literals" (formula "1") (term "1"))
                                 (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "34"))
                                 (rule "leq_literals" (formula "1") (term "0"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "true_left" (formula "1"))
                                 (rule "multiply_2_inEq3" (formula "33") (ifseqformula "24"))
                                 (rule "neg_literal" (formula "33") (term "0,0,0,1"))
                                 (rule "mul_literals" (formula "33") (term "0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "33") (term "1,0,1"))
                                 (rule "polySimp_mulComm0" (formula "33") (term "0"))
                                 (rule "polySimp_addComm1" (formula "33") (term "1"))
                                 (rule "multiply_2_inEq3" (formula "34") (ifseqformula "34"))
                                 (rule "neg_literal" (formula "34") (term "0,0,0,1"))
                                 (rule "mul_literals" (formula "34") (term "0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "34") (term "1,0,1"))
                                 (rule "polySimp_pullOutFactor0b" (formula "34") (term "1"))
                                 (rule "add_literals" (formula "34") (term "1,1,1"))
                                 (rule "multiply_2_inEq3" (formula "35") (ifseqformula "36"))
                                 (rule "neg_literal" (formula "35") (term "0,0,0,1"))
                                 (rule "mul_literals" (formula "35") (term "0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "35") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "35") (term "1,0,1"))
                                 (rule "polySimp_addComm1" (formula "35") (term "1"))
                                 (rule "inEqSimp_exactShadow3" (formula "35") (ifseqformula "20"))
                                 (rule "polySimp_rightDist" (formula "35") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "35") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "35") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "35") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "35") (term "0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "35") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "35") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "35") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "35") (term "0,0"))
                                 (rule "add_literals" (formula "35") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "35") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "35") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "35") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "35") (term "0,0,0"))
                                 (rule "add_literals" (formula "35") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "35") (term "0,0"))
                                 (rule "add_literals" (formula "35") (term "1,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "35"))
                                 (rule "polySimp_mulComm0" (formula "35") (term "1"))
                                 (rule "polySimp_rightDist" (formula "35") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "35") (term "1,1"))
                                 (rule "mul_literals" (formula "35") (term "0,1"))
                                 (rule "inEqSimp_exactShadow3" (formula "35") (ifseqformula "7"))
                                 (rule "polySimp_rightDist" (formula "35") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "35") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "35") (term "0,0,0"))
                                 (rule "mul_literals" (formula "35") (term "0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "35") (term "1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "35"))
                                 (rule "polySimp_mulComm0" (formula "35") (term "1"))
                                 (rule "polySimp_rightDist" (formula "35") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "35") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "35") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "35") (term "1,0,1"))
                                 (rule "mul_literals" (formula "35") (term "0,0,1"))
                                 (rule "inEqSimp_exactShadow3" (formula "35") (ifseqformula "3"))
                                 (rule "polySimp_rightDist" (formula "35") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "35") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "35") (term "0"))
                                 (rule "polySimp_rightDist" (formula "35") (term "0,0,0"))
                                 (rule "mul_literals" (formula "35") (term "0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "35") (term "1,0,0,0"))
                                 (rule "polySimp_pullOutFactor2b" (formula "35") (term "0,0"))
                                 (rule "add_literals" (formula "35") (term "1,1,0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "35"))
                                 (rule "polySimp_mulLiterals" (formula "35") (term "0"))
                                 (rule "inEqSimp_exactShadow2" (formula "39") (ifseqformula "35"))
                                 (rule "mul_literals" (formula "39") (term "1,0,0,1"))
                                 (rule "greater_literals" (formula "39") (term "0"))
                                  (builtin "One Step Simplification" (formula "39"))
                                 (rule "mul_literals" (formula "39") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "39") (term "0"))
                                 (rule "add_literals" (formula "39") (term "0,0"))
                                 (rule "add_zero_left" (formula "39") (term "0"))
                                 (rule "inEqSimp_invertInEq1" (formula "39"))
                                 (rule "times_zero_2" (formula "39") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "39") (term "0"))
                                 (rule "polySimp_elimOne" (formula "39") (term "0"))
                                 (rule "inEqSimp_contradInEq0" (formula "38") (ifseqformula "39"))
                                 (rule "qeq_literals" (formula "38") (term "0"))
                                  (builtin "One Step Simplification" (formula "38"))
                                 (rule "closeFalse" (formula "38"))
                              )
                           )
                           (branch "CUT: quotient_0 >= 1 FALSE"
                               (builtin "One Step Simplification" (formula "18"))
                              (rule "false_right" (formula "18"))
                              (rule "inEqSimp_geqRight" (formula "17"))
                              (rule "mul_literals" (formula "1") (term "1,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0"))
                              (rule "add_zero_left" (formula "1") (term "0"))
                              (rule "multiply_2_inEq1" (formula "2") (ifseqformula "17"))
                              (rule "polySimp_elimNeg" (formula "2") (term "0,0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "0,0,1"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1,0,1"))
                              (rule "polySimp_mulComm0" (formula "2") (term "0"))
                              (rule "polySimp_addComm1" (formula "2") (term "1"))
                              (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "2"))
                              (rule "polySimp_rightDist" (formula "9") (term "0,0"))
                              (rule "polySimp_rightDist" (formula "9") (term "0,0,0"))
                              (rule "mul_literals" (formula "9") (term "0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "9") (term "1,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "9") (term "0"))
                              (rule "polySimp_addComm1" (formula "9") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "9") (term "0,0,0"))
                              (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                              (rule "polySimp_mulComm0" (formula "9") (term "1"))
                              (rule "polySimp_rightDist" (formula "9") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "9") (term "1,1"))
                              (rule "polySimp_rightDist" (formula "9") (term "0,1"))
                              (rule "polySimp_rightDist" (formula "9") (term "0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,1"))
                              (rule "polySimp_rightDist" (formula "9") (term "0,0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,0,1"))
                              (rule "mul_literals" (formula "9") (term "0,0,0,0,1"))
                              (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "5"))
                              (rule "polySimp_rightDist" (formula "9") (term "0,0"))
                              (rule "polySimp_rightDist" (formula "9") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "9") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "9") (term "0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "9") (term "0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "9") (term "0,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                              (rule "polySimp_mulComm0" (formula "9") (term "1"))
                              (rule "polySimp_rightDist" (formula "9") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "9") (term "1,1"))
                              (rule "polySimp_rightDist" (formula "9") (term "0,1"))
                              (rule "polySimp_rightDist" (formula "9") (term "0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,1"))
                              (rule "polySimp_rightDist" (formula "9") (term "0,0,0,1"))
                              (rule "mul_literals" (formula "9") (term "0,0,0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,0,1"))
                              (rule "multiply_2_inEq1" (formula "1") (ifseqformula "20"))
                              (rule "times_zero_2" (formula "1") (term "1,0,1"))
                              (rule "neg_literal" (formula "1") (term "0,0,0,1"))
                              (rule "add_zero_right" (formula "1") (term "0,1"))
                              (rule "mul_literals" (formula "1") (term "0,1"))
                              (rule "add_zero_left" (formula "1") (term "1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "0"))
                              (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "1"))
                              (rule "polySimp_rightDist" (formula "12") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "12") (term "0"))
                              (rule "polySimp_rightDist" (formula "12") (term "0,0,0"))
                              (rule "mul_literals" (formula "12") (term "0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "12") (term "1,0,0,0"))
                              (rule "polySimp_addComm1" (formula "12") (term "0,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "12"))
                              (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                              (rule "polySimp_elimOne" (formula "12") (term "0"))
                              (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "12"))
                              (rule "mul_literals" (formula "16") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "16") (term "0"))
                              (rule "polySimp_addAssoc" (formula "16") (term "0,0"))
                              (rule "add_literals" (formula "16") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                              (rule "polySimp_mulComm0" (formula "16") (term "1"))
                              (rule "polySimp_rightDist" (formula "16") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "16") (term "1,1"))
                              (rule "mul_literals" (formula "16") (term "0,1"))
                              (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "12"))
                              (rule "polySimp_mulComm0" (formula "15") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "15") (term "0"))
                              (rule "polySimp_addComm0" (formula "15") (term "0,0"))
                              (rule "polySimp_pullOutFactor2b" (formula "15") (term "0"))
                              (rule "add_literals" (formula "15") (term "1,1,0"))
                              (rule "times_zero_1" (formula "15") (term "1,0"))
                              (rule "add_zero_right" (formula "15") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                              (rule "mul_literals" (formula "15") (term "1"))
                              (rule "inEqSimp_contradInEq3" (formula "15") (ifseqformula "2"))
                              (rule "times_zero_1" (formula "15") (term "0,1,0"))
                              (rule "greater_literals" (formula "15") (term "0,0"))
                               (builtin "One Step Simplification" (formula "15"))
                              (rule "qeq_literals" (formula "15") (term "0"))
                               (builtin "One Step Simplification" (formula "15"))
                              (rule "closeFalse" (formula "15"))
                           )
                        )
                        (branch "CUT: quotient_0 <= quotient_1 FALSE"
                            (builtin "One Step Simplification" (formula "17"))
                           (rule "false_right" (formula "17"))
                           (rule "inEqSimp_leqRight" (formula "16"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1"))
                           (rule "polySimp_rightDist" (formula "1") (term "1"))
                           (rule "mul_literals" (formula "1") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                           (rule "multiply_2_inEq3" (formula "1") (ifseqformula "16"))
                           (rule "polySimp_elimNeg" (formula "1") (term "0,0,0,1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "0,0,1"))
                           (rule "polySimp_mulComm0" (formula "1") (term "0"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,1"))
                           (rule "polySimp_mulComm0" (formula "1") (term "0,0,1"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,0,1"))
                           (rule "polySimp_elimOne" (formula "1") (term "0,1,0,1"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,1"))
                           (rule "polySimp_rightDist" (formula "1") (term "0,0,1"))
                           (rule "mul_literals" (formula "1") (term "0,0,0,1"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
                           (rule "polySimp_addComm1" (formula "1") (term "1"))
                           (rule "polySimp_addComm1" (formula "1") (term "0,1"))
                           (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "7"))
                           (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "1") (term "0"))
                           (rule "polySimp_rightDist" (formula "1") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "1") (term "0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "1") (term "0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "1") (term "0,0,0,0,0,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                           (rule "polySimp_elimOne" (formula "1") (term "0"))
                           (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "1"))
                           (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "6") (term "0"))
                           (rule "polySimp_rightDist" (formula "6") (term "0,0,0"))
                           (rule "mul_literals" (formula "6") (term "0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "6") (term "1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "6") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "6") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,0"))
                           (rule "add_literals" (formula "6") (term "1,1,0,0,0"))
                           (rule "times_zero_1" (formula "6") (term "1,0,0,0"))
                           (rule "add_zero_right" (formula "6") (term "0,0,0"))
                           (rule "polySimp_addAssoc" (formula "6") (term "0,0,0"))
                           (rule "polySimp_addAssoc" (formula "6") (term "0,0,0,0"))
                           (rule "add_literals" (formula "6") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "6"))
                           (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                           (rule "polySimp_elimOne" (formula "6") (term "0"))
                           (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "6"))
                           (rule "mul_literals" (formula "16") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "16") (term "0"))
                           (rule "polySimp_addAssoc" (formula "16") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "16") (term "0,0,0"))
                           (rule "add_literals" (formula "16") (term "0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                           (rule "polySimp_mulComm0" (formula "16") (term "1"))
                           (rule "polySimp_rightDist" (formula "16") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "16") (term "1,1"))
                           (rule "polySimp_rightDist" (formula "16") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "16") (term "1,0,1"))
                           (rule "mul_literals" (formula "16") (term "0,0,1"))
                           (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "6"))
                           (rule "polySimp_rightDist" (formula "14") (term "0,0"))
                           (rule "mul_literals" (formula "14") (term "0,0,0"))
                           (rule "polySimp_addAssoc" (formula "14") (term "0"))
                           (rule "polySimp_addComm1" (formula "14") (term "0,0"))
                           (rule "polySimp_pullOutFactor2b" (formula "14") (term "0"))
                           (rule "add_literals" (formula "14") (term "1,1,0"))
                           (rule "times_zero_1" (formula "14") (term "1,0"))
                           (rule "add_zero_right" (formula "14") (term "0"))
                           (rule "polySimp_addAssoc" (formula "14") (term "0"))
                           (rule "polySimp_addAssoc" (formula "14") (term "0,0"))
                           (rule "add_literals" (formula "14") (term "0,0,0"))
                           (rule "add_zero_left" (formula "14") (term "0,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "14"))
                           (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                           (rule "inEqSimp_contradInEq5" (formula "14") (ifseqformula "3"))
                           (rule "greater_literals" (formula "14") (term "0,0"))
                            (builtin "One Step Simplification" (formula "14"))
                           (rule "andLeft" (formula "14"))
                           (rule "polySimp_rightDist" (formula "14") (term "1"))
                           (rule "mul_literals" (formula "14") (term "0,1"))
                           (rule "inEqSimp_homoInEq1" (formula "14"))
                           (rule "polySimp_mulLiterals" (formula "14") (term "1,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "14") (term "0"))
                           (rule "add_literals" (formula "14") (term "1,1,0"))
                           (rule "times_zero_1" (formula "14") (term "1,0"))
                           (rule "add_zero_right" (formula "14") (term "0"))
                           (rule "leq_literals" (formula "14"))
                           (rule "closeFalse" (formula "14"))
                        )
                     )
                     (branch "Case 2"
                        (rule "polySimp_addLiterals" (formula "9") (term "1"))
                        (rule "polySimp_addLiterals" (formula "16") (term "0"))
                        (rule "polySimp_addLiterals" (formula "17") (term "0,1,1,1"))
                        (rule "polySimp_addLiterals" (formula "8") (term "1"))
                        (rule "polySimp_addLiterals" (formula "5") (term "1"))
                        (rule "polySimp_addLiterals" (formula "3") (term "0"))
                        (rule "polySimp_addLiterals" (formula "1") (term "0,1,1"))
                        (rule "polySimp_homoEq" (formula "9"))
                        (rule "polySimp_addComm0" (formula "2") (term "1,1,0,0"))
                        (rule "polySimp_addComm0" (formula "11") (term "1,1,0,0,0"))
                        (rule "polySimp_addComm0" (formula "16") (term "0"))
                        (rule "polySimp_addComm0" (formula "17") (term "0,1,1,1"))
                        (rule "polySimp_addComm0" (formula "8") (term "1"))
                        (rule "polySimp_addComm0" (formula "5") (term "1"))
                        (rule "polySimp_addComm0" (formula "3") (term "0"))
                        (rule "polySimp_addComm0" (formula "1") (term "0,1,1"))
                        (rule "polySimp_addComm0" (formula "9") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "9") (term "0"))
                        (rule "inEqSimp_leqRight" (formula "18"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "1") (term "0"))
                        (rule "inEqSimp_ltRight" (formula "16"))
                        (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                        (rule "inEqSimp_gtToGeq" (formula "16"))
                        (rule "mul_literals" (formula "16") (term "1,0,0"))
                        (rule "add_literals" (formula "16") (term "0,0"))
                        (rule "inEqSimp_ltRight" (formula "17"))
                        (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0"))
                        (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                        (rule "inEqSimp_leqRight" (formula "18"))
                        (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                        (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                        (rule "add_literals" (formula "1") (term "0,0,0"))
                        (rule "polySimp_addComm1" (formula "1") (term "0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                        (rule "add_literals" (formula "1") (term "0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "9"))
                        (rule "polySimp_rightDist" (formula "9") (term "1,0,0"))
                        (rule "mul_literals" (formula "9") (term "0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
                        (rule "add_literals" (formula "9") (term "0,0,0"))
                        (rule "polySimp_addComm1" (formula "9") (term "0"))
                        (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "10"))
                        (rule "inEqSimp_commuteLeq" (formula "6") (term "0,0,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "14") (term "1,0,0,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "6") (term "1,0,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "10"))
                        (rule "inEqSimp_commuteLeq" (formula "14") (term "1,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "6") (term "1,0"))
                        (rule "inEqSimp_commuteLeq" (formula "5"))
                        (rule "inEqSimp_homoInEq0" (formula "11"))
                        (rule "polySimp_addComm1" (formula "11") (term "0"))
                        (rule "inEqSimp_homoInEq1" (formula "7"))
                        (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "7") (term "1,0"))
                        (rule "mul_literals" (formula "7") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "7") (term "0"))
                        (rule "add_literals" (formula "7") (term "0,0"))
                        (rule "polySimp_sepPosMonomial" (formula "12"))
                        (rule "polySimp_mulComm0" (formula "12") (term "1"))
                        (rule "polySimp_rightDist" (formula "12") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "12") (term "1,1"))
                        (rule "mul_literals" (formula "12") (term "0,1"))
                        (rule "polySimp_elimOne" (formula "12") (term "1,1"))
                        (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "12"))
                        (rule "polySimp_addAssoc" (formula "2") (term "0"))
                        (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                        (rule "add_literals" (formula "2") (term "0,0,0"))
                        (rule "add_zero_left" (formula "2") (term "0,0"))
                        (rule "applyEqRigid" (formula "13") (term "0") (ifseqformula "12"))
                        (rule "applyEqRigid" (formula "14") (term "1,1,1,0,0,0") (ifseqformula "12"))
                        (rule "polySimp_addAssoc" (formula "14") (term "1,1,0,0,0"))
                        (rule "add_literals" (formula "14") (term "0,1,1,0,0,0"))
                        (rule "applyEqRigid" (formula "5") (term "1,0,1,0") (ifseqformula "12"))
                        (rule "polySimp_addAssoc" (formula "5") (term "0,1,0"))
                        (rule "add_literals" (formula "5") (term "0,0,1,0"))
                        (rule "add_zero_left" (formula "5") (term "0,1,0"))
                        (rule "applyEqRigid" (formula "9") (term "0,1,0") (ifseqformula "12"))
                        (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "9") (term "1,0"))
                        (rule "mul_literals" (formula "9") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "9") (term "0"))
                        (rule "polySimp_addComm1" (formula "9") (term "0,0"))
                        (rule "add_literals" (formula "9") (term "0,0,0"))
                        (rule "applyEqRigid" (formula "11") (term "1,0") (ifseqformula "12"))
                        (rule "polySimp_addAssoc" (formula "11") (term "0"))
                        (rule "polySimp_addComm1" (formula "11") (term "0,0"))
                        (rule "add_literals" (formula "11") (term "0,0,0"))
                        (rule "add_zero_left" (formula "11") (term "0,0"))
                        (rule "polySimp_pullOutFactor2" (formula "11") (term "0"))
                        (rule "add_literals" (formula "11") (term "1,0"))
                        (rule "times_zero_1" (formula "11") (term "0"))
                        (rule "qeq_literals" (formula "11"))
                        (rule "true_left" (formula "11"))
                        (rule "applyEq" (formula "7") (term "0,1,0") (ifseqformula "11"))
                        (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "7") (term "1,0"))
                        (rule "mul_literals" (formula "7") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "7") (term "0"))
                        (rule "add_literals" (formula "7") (term "0,0"))
                        (rule "applyEqRigid" (formula "6") (term "1,1,1,0,0") (ifseqformula "11"))
                        (rule "polySimp_addAssoc" (formula "6") (term "1,1,0,0"))
                        (rule "add_literals" (formula "6") (term "0,1,1,0,0"))
                        (rule "applyEqRigid" (formula "1") (term "1,0,1,0,1,0") (ifseqformula "11"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0,1,0,1,0"))
                        (rule "add_literals" (formula "1") (term "0,0,1,0,1,0"))
                        (rule "add_zero_left" (formula "1") (term "0,1,0,1,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                        (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                        (rule "polySimp_elimOne" (formula "4") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                        (rule "polySimp_mulLiterals" (formula "3") (term "1"))
                        (rule "polySimp_elimOne" (formula "3") (term "1"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                        (rule "mul_literals" (formula "16") (term "1"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "1"))
                        (rule "polySimp_elimOne" (formula "2") (term "1"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                        (rule "mul_literals" (formula "12") (term "1"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "9"))
                        (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                        (rule "polySimp_elimOne" (formula "9") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "7"))
                        (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                        (rule "polySimp_elimOne" (formula "7") (term "0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                        (rule "polySimp_elimOne" (formula "1") (term "0"))
                        (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "12"))
                        (rule "leq_literals" (formula "7") (term "0"))
                         (builtin "One Step Simplification" (formula "7"))
                        (rule "true_left" (formula "7"))
                        (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "5"))
                        (rule "andLeft" (formula "1"))
                        (rule "inEqSimp_homoInEq1" (formula "1"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                        (rule "mul_literals" (formula "1") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0"))
                        (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                        (rule "add_literals" (formula "1") (term "1,1,0"))
                        (rule "times_zero_1" (formula "1") (term "1,0"))
                        (rule "add_zero_right" (formula "1") (term "0"))
                        (rule "leq_literals" (formula "1"))
                        (rule "closeFalse" (formula "1"))
                     )
                  )
               )
               (branch "nv_0 + 1 + 1 >= 1 & f_base > 1 FALSE"
                  (rule "polySimp_addLiterals" (formula "14") (term "1,1"))
                  (rule "polySimp_addLiterals" (formula "13") (term "0,0"))
                  (rule "polySimp_addLiterals" (formula "2") (term "1"))
                  (rule "polySimp_addLiterals" (formula "5") (term "1"))
                  (rule "polySimp_addLiterals" (formula "6") (term "1"))
                  (rule "andLeft" (formula "1"))
                  (rule "replace_known_left" (formula "13") (term "1") (ifseqformula "11"))
                   (builtin "One Step Simplification" (formula "13"))
                  (rule "polySimp_homoEq" (formula "6"))
                  (rule "polySimp_addComm0" (formula "8") (term "1,1,0,0,0"))
                  (rule "polySimp_addComm0" (formula "14") (term "1,1"))
                  (rule "polySimp_addComm0" (formula "2") (term "1"))
                  (rule "polySimp_addComm0" (formula "5") (term "1"))
                  (rule "polySimp_addComm0" (formula "13") (term "0"))
                  (rule "polySimp_addComm0" (formula "6") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "6") (term "0"))
                  (rule "inEqSimp_ltRight" (formula "12"))
                  (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                  (rule "inEqSimp_leqRight" (formula "15"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "1") (term "0"))
                  (rule "inEqSimp_gtToGeq" (formula "13"))
                  (rule "mul_literals" (formula "13") (term "1,0,0"))
                  (rule "add_literals" (formula "13") (term "0,0"))
                  (rule "inEqSimp_leqRight" (formula "15"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "1") (term "0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                  (rule "add_literals" (formula "1") (term "0,0,0"))
                  (rule "add_zero_left" (formula "1") (term "0,0"))
                  (rule "inEqSimp_geqRight" (formula "15"))
                  (rule "mul_literals" (formula "1") (term "1,0,0"))
                  (rule "add_literals" (formula "1") (term "0,0"))
                  (rule "add_zero_left" (formula "1") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "6"))
                  (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                  (rule "mul_literals" (formula "6") (term "0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                  (rule "add_literals" (formula "6") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "6") (term "0"))
                  (rule "inEqSimp_commuteLeq" (formula "8"))
                  (rule "inEqSimp_commuteLeq" (formula "7"))
                  (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "11") (term "1,0,0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "11") (term "1,0,0"))
                  (rule "inEqSimp_homoInEq0" (formula "8"))
                  (rule "polySimp_addComm1" (formula "8") (term "0"))
                  (rule "polySimp_sepPosMonomial" (formula "9"))
                  (rule "polySimp_mulComm0" (formula "9") (term "1"))
                  (rule "polySimp_rightDist" (formula "9") (term "1"))
                  (rule "mul_literals" (formula "9") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "9") (term "1,1"))
                  (rule "applyEq" (formula "6") (term "0,1,0") (ifseqformula "9"))
                  (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                  (rule "mul_literals" (formula "6") (term "0,1,0"))
                  (rule "polySimp_addAssoc" (formula "6") (term "0"))
                  (rule "polySimp_addComm1" (formula "6") (term "0,0"))
                  (rule "add_literals" (formula "6") (term "0,0,0"))
                  (rule "applyEqRigid" (formula "8") (term "1,0") (ifseqformula "9"))
                  (rule "polySimp_addAssoc" (formula "8") (term "0"))
                  (rule "polySimp_addComm1" (formula "8") (term "0,0"))
                  (rule "add_literals" (formula "8") (term "0,0,0"))
                  (rule "add_zero_left" (formula "8") (term "0,0"))
                  (rule "polySimp_pullOutFactor2" (formula "8") (term "0"))
                  (rule "add_literals" (formula "8") (term "1,0"))
                  (rule "times_zero_1" (formula "8") (term "0"))
                  (rule "qeq_literals" (formula "8"))
                  (rule "true_left" (formula "8"))
                  (rule "applyEq" (formula "2") (term "1,1,0,1,0") (ifseqformula "8"))
                  (rule "polySimp_addAssoc" (formula "2") (term "1,0,1,0"))
                  (rule "add_literals" (formula "2") (term "0,1,0,1,0"))
                  (rule "add_zero_left" (formula "2") (term "1,0,1,0"))
                  (rule "applyEqRigid" (formula "1") (term "1,0") (ifseqformula "8"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0"))
                  (rule "add_literals" (formula "1") (term "0,0"))
                  (rule "add_zero_left" (formula "1") (term "0"))
                  (rule "applyEq" (formula "10") (term "1,1,1,0,0,0") (ifseqformula "8"))
                  (rule "polySimp_addAssoc" (formula "10") (term "1,1,0,0,0"))
                  (rule "add_literals" (formula "10") (term "0,1,1,0,0,0"))
                  (rule "applyEqRigid" (formula "9") (term "0") (ifseqformula "8"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "1"))
                  (rule "polySimp_elimOne" (formula "4") (term "1"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                  (rule "polySimp_elimOne" (formula "3") (term "0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                  (rule "mul_literals" (formula "13") (term "1"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "6"))
                  (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                  (rule "polySimp_elimOne" (formula "6") (term "0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                  (rule "polySimp_elimOne" (formula "2") (term "0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                  (rule "mul_literals" (formula "9") (term "1"))
                  (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "9"))
                  (rule "qeq_literals" (formula "1") (term "0"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "closeFalse" (formula "1"))
               )
            )
         )
         (branch "i_0 >= 1 & f_base > 1 FALSE"
            (rule "polySimp_addLiterals" (formula "12") (term "1,1"))
            (rule "polySimp_addLiterals" (formula "1") (term "1"))
            (rule "polySimp_addLiterals" (formula "4") (term "1"))
            (rule "polySimp_addLiterals" (formula "5") (term "1"))
            (rule "replace_known_left" (formula "11") (term "1") (ifseqformula "10"))
             (builtin "One Step Simplification" (formula "11"))
            (rule "polySimp_homoEq" (formula "5"))
            (rule "polySimp_addComm0" (formula "7") (term "1,1,0,0,0"))
            (rule "polySimp_addComm0" (formula "12") (term "1,1"))
            (rule "polySimp_addComm0" (formula "1") (term "1"))
            (rule "polySimp_addComm0" (formula "4") (term "1"))
            (rule "polySimp_addComm0" (formula "5") (term "0,0"))
            (rule "polySimp_addComm1" (formula "5") (term "0"))
            (rule "inEqSimp_leqRight" (formula "13"))
            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "1") (term "0"))
            (rule "inEqSimp_geqRight" (formula "12"))
            (rule "mul_literals" (formula "1") (term "1,0,0"))
            (rule "add_literals" (formula "1") (term "0,0"))
            (rule "add_zero_left" (formula "1") (term "0"))
            (rule "inEqSimp_leqRight" (formula "13"))
            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
            (rule "inEqSimp_gtToGeq" (formula "13"))
            (rule "mul_literals" (formula "13") (term "1,0,0"))
            (rule "add_literals" (formula "13") (term "0,0"))
            (rule "inEqSimp_ltToLeq" (formula "4"))
            (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
            (rule "mul_literals" (formula "4") (term "0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
            (rule "add_literals" (formula "4") (term "0,0,0"))
            (rule "polySimp_addComm1" (formula "4") (term "0"))
            (rule "inEqSimp_commuteLeq" (formula "5"))
            (rule "inEqSimp_commuteLeq" (formula "6"))
            (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "10") (term "1,0,0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "10") (term "1,0,0"))
            (rule "inEqSimp_homoInEq0" (formula "7"))
            (rule "polySimp_addComm1" (formula "7") (term "0"))
            (rule "polySimp_sepPosMonomial" (formula "8"))
            (rule "polySimp_mulComm0" (formula "8") (term "1"))
            (rule "polySimp_rightDist" (formula "8") (term "1"))
            (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
            (rule "mul_literals" (formula "8") (term "0,1"))
            (rule "polySimp_elimOne" (formula "8") (term "1,1"))
            (rule "applyEq" (formula "4") (term "0,1,0") (ifseqformula "8"))
            (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
            (rule "polySimp_rightDist" (formula "4") (term "1,0"))
            (rule "mul_literals" (formula "4") (term "0,1,0"))
            (rule "polySimp_addAssoc" (formula "4") (term "0"))
            (rule "polySimp_addComm1" (formula "4") (term "0,0"))
            (rule "add_literals" (formula "4") (term "0,0,0"))
            (rule "applyEq" (formula "7") (term "1,0") (ifseqformula "8"))
            (rule "polySimp_addAssoc" (formula "7") (term "0"))
            (rule "polySimp_addComm1" (formula "7") (term "0,0"))
            (rule "add_literals" (formula "7") (term "0,0,0"))
            (rule "add_zero_left" (formula "7") (term "0,0"))
            (rule "polySimp_pullOutFactor2" (formula "7") (term "0"))
            (rule "add_literals" (formula "7") (term "1,0"))
            (rule "times_zero_1" (formula "7") (term "0"))
            (rule "qeq_literals" (formula "7"))
            (rule "true_left" (formula "7"))
            (rule "applyEqRigid" (formula "9") (term "1,1,1,0,0,0") (ifseqformula "7"))
            (rule "polySimp_addAssoc" (formula "9") (term "1,1,0,0,0"))
            (rule "add_literals" (formula "9") (term "0,1,1,0,0,0"))
            (rule "applyEqRigid" (formula "8") (term "0") (ifseqformula "7"))
            (rule "applyEq" (formula "1") (term "1,1,0,1,0,0") (ifseqformula "7"))
            (rule "polySimp_addAssoc" (formula "1") (term "1,0,1,0,0"))
            (rule "add_literals" (formula "1") (term "0,1,0,1,0,0"))
            (rule "add_zero_left" (formula "1") (term "1,0,1,0,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "3"))
            (rule "polySimp_mulLiterals" (formula "3") (term "0"))
            (rule "polySimp_elimOne" (formula "3") (term "0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "12"))
            (rule "mul_literals" (formula "12") (term "1"))
            (rule "inEqSimp_sepNegMonomial0" (formula "4"))
            (rule "polySimp_mulLiterals" (formula "4") (term "0"))
            (rule "polySimp_elimOne" (formula "4") (term "0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "8"))
            (rule "mul_literals" (formula "8") (term "1"))
            (rule "inEqSimp_sepPosMonomial1" (formula "1"))
            (rule "polySimp_mulComm0" (formula "1") (term "1"))
            (rule "polySimp_rightDist" (formula "1") (term "1"))
            (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
            (rule "mul_literals" (formula "1") (term "0,1"))
            (rule "polySimp_elimOne" (formula "1") (term "1,1"))
            (rule "inEqSimp_contradInEq0" (formula "5") (ifseqformula "2"))
            (rule "qeq_literals" (formula "5") (term "0"))
             (builtin "One Step Simplification" (formula "5"))
            (rule "closeFalse" (formula "5"))
         )
      )
      (branch "CUT: i_0 < nv_0 + 1 + 1 FALSE"
         (rule "polySimp_addLiterals" (formula "11") (term "1,1"))
         (rule "polySimp_addLiterals" (formula "10") (term "1"))
         (rule "polySimp_addLiterals" (formula "4") (term "1"))
         (rule "polySimp_addLiterals" (formula "3") (term "1"))
         (rule "polySimp_homoEq" (formula "4"))
         (rule "polySimp_addComm0" (formula "6") (term "1,1,0,0,0"))
         (rule "polySimp_addComm0" (formula "11") (term "1,1"))
         (rule "polySimp_addComm0" (formula "10") (term "1"))
         (rule "polySimp_addComm0" (formula "3") (term "1"))
         (rule "polySimp_addComm0" (formula "4") (term "0,0"))
         (rule "polySimp_addComm1" (formula "4") (term "0"))
         (rule "inEqSimp_leqRight" (formula "12"))
         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
         (rule "polySimp_addComm1" (formula "1") (term "0"))
         (rule "inEqSimp_leqRight" (formula "12"))
         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
         (rule "polySimp_addComm1" (formula "1") (term "0"))
         (rule "inEqSimp_ltRight" (formula "12"))
         (rule "polySimp_rightDist" (formula "1") (term "0,0"))
         (rule "mul_literals" (formula "1") (term "0,0,0"))
         (rule "polySimp_addComm1" (formula "1") (term "0"))
         (rule "inEqSimp_gtToGeq" (formula "12"))
         (rule "mul_literals" (formula "12") (term "1,0,0"))
         (rule "add_literals" (formula "12") (term "0,0"))
         (rule "inEqSimp_commuteLeq" (formula "4"))
         (rule "inEqSimp_commuteLeq" (formula "5"))
         (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "9") (term "1,0,0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "9") (term "1,0,0"))
         (rule "inEqSimp_homoInEq0" (formula "6"))
         (rule "polySimp_addComm1" (formula "6") (term "0"))
         (rule "polySimp_sepPosMonomial" (formula "7"))
         (rule "polySimp_mulComm0" (formula "7") (term "1"))
         (rule "polySimp_rightDist" (formula "7") (term "1"))
         (rule "mul_literals" (formula "7") (term "0,1"))
         (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
         (rule "polySimp_elimOne" (formula "7") (term "1,1"))
         (rule "applyEq" (formula "8") (term "0") (ifseqformula "7"))
         (rule "applyEqRigid" (formula "9") (term "1,1,1,0,0,0") (ifseqformula "7"))
         (rule "polySimp_addAssoc" (formula "9") (term "1,1,0,0,0"))
         (rule "add_literals" (formula "9") (term "0,1,1,0,0,0"))
         (rule "applyEq" (formula "6") (term "1,0") (ifseqformula "7"))
         (rule "polySimp_addAssoc" (formula "6") (term "0"))
         (rule "polySimp_addComm1" (formula "6") (term "0,0"))
         (rule "add_literals" (formula "6") (term "0,0,0"))
         (rule "add_zero_left" (formula "6") (term "0,0"))
         (rule "polySimp_pullOutFactor2" (formula "6") (term "0"))
         (rule "add_literals" (formula "6") (term "1,0"))
         (rule "times_zero_1" (formula "6") (term "0"))
         (rule "qeq_literals" (formula "6"))
         (rule "true_left" (formula "6"))
         (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "6"))
         (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
         (rule "polySimp_rightDist" (formula "1") (term "1,0"))
         (rule "mul_literals" (formula "1") (term "0,1,0"))
         (rule "polySimp_addAssoc" (formula "1") (term "0"))
         (rule "polySimp_addComm1" (formula "1") (term "0,0"))
         (rule "add_literals" (formula "1") (term "0,0,0"))
         (rule "add_zero_left" (formula "1") (term "0,0"))
         (rule "applyEqRigid" (formula "2") (term "1,1,0,1,0") (ifseqformula "6"))
         (rule "polySimp_addAssoc" (formula "2") (term "1,0,1,0"))
         (rule "add_literals" (formula "2") (term "0,1,0,1,0"))
         (rule "add_zero_left" (formula "2") (term "1,0,1,0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "3"))
         (rule "polySimp_mulLiterals" (formula "3") (term "0"))
         (rule "polySimp_elimOne" (formula "3") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "11"))
         (rule "mul_literals" (formula "11") (term "1"))
         (rule "inEqSimp_sepPosMonomial1" (formula "7"))
         (rule "mul_literals" (formula "7") (term "1"))
         (rule "inEqSimp_sepNegMonomial1" (formula "1"))
         (rule "polySimp_mulLiterals" (formula "1") (term "0"))
         (rule "polySimp_elimOne" (formula "1") (term "0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "2"))
         (rule "polySimp_mulLiterals" (formula "2") (term "0"))
         (rule "polySimp_elimOne" (formula "2") (term "0"))
         (rule "inEqSimp_antiSymm" (formula "5") (ifseqformula "1"))
         (rule "applyEqRigid" (formula "2") (term "1,0") (ifseqformula "5"))
         (rule "inEqSimp_homoInEq0" (formula "2"))
         (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
         (rule "add_literals" (formula "2") (term "1,1,0"))
         (rule "times_zero_1" (formula "2") (term "1,0"))
         (rule "add_zero_right" (formula "2") (term "0"))
         (rule "qeq_literals" (formula "2"))
         (rule "closeFalse" (formula "2"))
      )
   )
   (branch "Assume j_0 != nv_0 + 1 + 1"
      (rule "polySimp_addLiterals" (formula "7") (term "1,1,0"))
      (rule "polySimp_addLiterals" (formula "1") (term "1,0"))
      (rule "impRight" (formula "7"))
      (rule "notLeft" (formula "2"))
      (rule "andLeft" (formula "1"))
      (rule "andLeft" (formula "1"))
      (rule "polySimp_homoEq" (formula "9"))
      (rule "polySimp_addComm0" (formula "5") (term "1,1,0,0,0"))
      (rule "polySimp_addComm0" (formula "3") (term "1"))
      (rule "polySimp_addComm0" (formula "9") (term "0,0"))
      (rule "polySimp_addComm1" (formula "9") (term "0"))
      (rule "inEqSimp_leqRight" (formula "11"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0"))
      (rule "inEqSimp_leqRight" (formula "11"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0"))
      (rule "inEqSimp_gtToGeq" (formula "10"))
      (rule "mul_literals" (formula "10") (term "1,0,0"))
      (rule "add_literals" (formula "10") (term "0,0"))
      (rule "inEqSimp_commuteLeq" (formula "7") (term "0,0,0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "7") (term "1,0,0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "7") (term "1,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "4"))
      (rule "inEqSimp_commuteLeq" (formula "3"))
      (rule "inEqSimp_homoInEq0" (formula "5"))
      (rule "polySimp_addComm1" (formula "5") (term "0"))
      (rule "polySimp_sepPosMonomial" (formula "11"))
      (rule "polySimp_mulComm0" (formula "11") (term "1"))
      (rule "polySimp_rightDist" (formula "11") (term "1"))
      (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
      (rule "mul_literals" (formula "11") (term "0,1"))
      (rule "polySimp_elimOne" (formula "11") (term "1,1"))
      (rule "inEqSimp_sepNegMonomial1" (formula "2"))
      (rule "polySimp_mulLiterals" (formula "2") (term "0"))
      (rule "polySimp_elimOne" (formula "2") (term "0"))
      (rule "inEqSimp_sepNegMonomial1" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0"))
      (rule "polySimp_elimOne" (formula "1") (term "0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "10"))
      (rule "mul_literals" (formula "10") (term "1"))
      (rule "inEqSimp_sepPosMonomial1" (formula "5"))
      (rule "polySimp_mulComm0" (formula "5") (term "1"))
      (rule "polySimp_rightDist" (formula "5") (term "1"))
      (rule "mul_literals" (formula "5") (term "0,1"))
      (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
      (rule "polySimp_elimOne" (formula "5") (term "1,1"))
      (rule "inEqSimp_strengthen1" (formula "5") (ifseqformula "11"))
      (rule "polySimp_addAssoc" (formula "5") (term "1"))
      (rule "add_literals" (formula "5") (term "0,1"))
      (rule "inEqSimp_contradEq7" (formula "11") (ifseqformula "5"))
      (rule "polySimp_rightDist" (formula "11") (term "1,0,0"))
      (rule "mul_literals" (formula "11") (term "0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "11") (term "0,0"))
      (rule "polySimp_addComm1" (formula "11") (term "0,0,0"))
      (rule "add_literals" (formula "11") (term "0,0,0,0"))
      (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0"))
      (rule "add_literals" (formula "11") (term "1,1,0,0"))
      (rule "times_zero_1" (formula "11") (term "1,0,0"))
      (rule "add_zero_right" (formula "11") (term "0,0"))
      (rule "leq_literals" (formula "11") (term "0"))
       (builtin "One Step Simplification" (formula "11"))
      (rule "false_right" (formula "11"))
      (rule "nnf_imp2or" (formula "7") (term "0,0"))
      (rule "nnf_notAnd" (formula "7") (term "0,0,0"))
      (rule "inEqSimp_notLeq" (formula "7") (term "1,0,0,0"))
      (rule "polySimp_rightDist" (formula "7") (term "1,0,0,1,0,0,0"))
      (rule "mul_literals" (formula "7") (term "0,1,0,0,1,0,0,0"))
      (rule "polySimp_addAssoc" (formula "7") (term "0,0,1,0,0,0"))
      (rule "add_literals" (formula "7") (term "0,0,0,1,0,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "7") (term "1,0,0,0"))
      (rule "polySimp_mulComm0" (formula "7") (term "1,1,0,0,0"))
      (rule "polySimp_rightDist" (formula "7") (term "1,1,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "7") (term "1,1,1,0,0,0"))
      (rule "mul_literals" (formula "7") (term "0,1,1,0,0,0"))
      (rule "polySimp_elimOne" (formula "7") (term "1,1,1,0,0,0"))
      (rule "nnf_notAnd" (formula "7") (term "0,0,0,0"))
      (rule "inEqSimp_notGeq" (formula "7") (term "1,0,0,0,0"))
      (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,0,0,0"))
      (rule "polySimp_mulComm0" (formula "7") (term "1,1,0,0,0,0"))
      (rule "polySimp_rightDist" (formula "7") (term "1,1,0,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "7") (term "1,1,1,0,0,0,0"))
      (rule "mul_literals" (formula "7") (term "0,1,1,0,0,0,0"))
      (rule "polySimp_elimOne" (formula "7") (term "1,1,1,0,0,0,0"))
      (rule "inEqSimp_notGeq" (formula "7") (term "0,0,0,0,0"))
      (rule "mul_literals" (formula "7") (term "1,0,0,0,0,0,0,0"))
      (rule "add_literals" (formula "7") (term "0,0,0,0,0,0,0"))
      (rule "add_zero_left" (formula "7") (term "0,0,0,0,0,0"))
      (rule "commute_or_2" (formula "7") (term "0,0,0"))
      (rule "allLeft" (formula "7") (inst "t=i_0"))
      (rule "inEqSimp_contradInEq1" (formula "7") (term "0,0,0,0") (ifseqformula "3"))
      (rule "qeq_literals" (formula "7") (term "0,0,0,0,0"))
       (builtin "One Step Simplification" (formula "7"))
      (rule "commute_or" (formula "7") (term "0,0"))
      (rule "allLeft" (formula "7") (inst "t=j_0"))
      (rule "inEqSimp_homoInEq1" (formula "7") (term "1,0"))
      (rule "polySimp_addComm1" (formula "7") (term "0,1,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0"))
      (rule "polySimp_mulComm0" (formula "7") (term "1,1,0"))
      (rule "polySimp_rightDist" (formula "7") (term "1,1,0"))
      (rule "mul_literals" (formula "7") (term "0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "7") (term "1,1,1,0"))
      (rule "polySimp_elimOne" (formula "7") (term "1,1,1,0"))
      (rule "inEqSimp_contradInEq0" (formula "7") (term "1") (ifseqformula "1"))
      (rule "inEqSimp_homoInEq1" (formula "7") (term "0,1"))
      (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1"))
      (rule "polySimp_rightDist" (formula "7") (term "1,0,0,1"))
      (rule "mul_literals" (formula "7") (term "0,1,0,0,1"))
      (rule "polySimp_addAssoc" (formula "7") (term "0,0,1"))
      (rule "polySimp_addComm0" (formula "7") (term "0,0,0,1"))
      (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,1"))
      (rule "add_literals" (formula "7") (term "1,1,0,0,1"))
      (rule "times_zero_1" (formula "7") (term "1,0,0,1"))
      (rule "add_zero_right" (formula "7") (term "0,0,1"))
      (rule "leq_literals" (formula "7") (term "0,1"))
       (builtin "One Step Simplification" (formula "7"))
      (rule "inEqSimp_contradInEq1" (formula "7") (term "1") (ifseqformula "5"))
      (rule "inEqSimp_homoInEq1" (formula "7") (term "0,1"))
      (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1"))
      (rule "polySimp_rightDist" (formula "7") (term "1,0,0,1"))
      (rule "mul_literals" (formula "7") (term "0,1,0,0,1"))
      (rule "polySimp_addAssoc" (formula "7") (term "0,0,1"))
      (rule "polySimp_addComm1" (formula "7") (term "0,0,0,1"))
      (rule "add_literals" (formula "7") (term "0,0,0,0,1"))
      (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,1"))
      (rule "add_literals" (formula "7") (term "1,1,0,0,1"))
      (rule "times_zero_1" (formula "7") (term "1,0,0,1"))
      (rule "add_zero_right" (formula "7") (term "0,0,1"))
      (rule "leq_literals" (formula "7") (term "0,1"))
       (builtin "One Step Simplification" (formula "7"))
      (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "7"))
      (rule "andLeft" (formula "4"))
      (rule "inEqSimp_homoInEq1" (formula "4"))
      (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
      (rule "polySimp_rightDist" (formula "4") (term "1,0"))
      (rule "mul_literals" (formula "4") (term "0,1,0"))
      (rule "polySimp_addAssoc" (formula "4") (term "0"))
      (rule "polySimp_addComm0" (formula "4") (term "0,0"))
      (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
      (rule "add_literals" (formula "4") (term "1,1,0"))
      (rule "times_zero_1" (formula "4") (term "1,0"))
      (rule "add_zero_right" (formula "4") (term "0"))
      (rule "leq_literals" (formula "4"))
      (rule "closeFalse" (formula "4"))
   )
)
(branch "Use Case"
   (rule "instAll" (formula "5") (term "1,1") (ifseqformula "1") (userinteraction))
   (rule "impLeft" (formula "1") (userinteraction))
   (branch "Case 1"
      (rule "polySimp_addComm0" (formula "1") (term "1,1,0,0,0,1,0"))
      (rule "inEqSimp_leqRight" (formula "6"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0"))
      (rule "inEqSimp_geqRight" (formula "6"))
      (rule "times_zero_1" (formula "1") (term "1,0,0"))
      (rule "add_zero_right" (formula "1") (term "0,0"))
      (rule "inEqSimp_gtToGeq" (formula "6"))
      (rule "mul_literals" (formula "6") (term "1,0,0"))
      (rule "add_literals" (formula "6") (term "0,0"))
      (rule "inEqSimp_commuteLeq" (formula "3") (term "0,0,0,0,0,1,0"))
      (rule "inEqSimp_commuteLeq" (formula "3") (term "1,0,0,0,0,1,0"))
      (rule "inEqSimp_commuteLeq" (formula "3") (term "1,0,0,1,0"))
      (rule "inEqSimp_homoInEq0" (formula "3") (term "1,0,0,0,1,0"))
      (rule "polySimp_addComm1" (formula "3") (term "0,1,0,0,0,1,0"))
      (rule "inEqSimp_sepNegMonomial1" (formula "2"))
      (rule "polySimp_mulLiterals" (formula "2") (term "0"))
      (rule "polySimp_elimOne" (formula "2") (term "0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "1"))
      (rule "mul_literals" (formula "1") (term "1"))
      (rule "inEqSimp_sepPosMonomial1" (formula "6"))
      (rule "mul_literals" (formula "6") (term "1"))
      (rule "inEqSimp_sepPosMonomial1" (formula "3") (term "1,0,0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "3") (term "1,1,0,0,0,1,0"))
      (rule "polySimp_rightDist" (formula "3") (term "1,1,0,0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "3") (term "1,1,1,0,0,0,1,0"))
      (rule "mul_literals" (formula "3") (term "0,1,1,0,0,0,1,0"))
      (rule "polySimp_elimOne" (formula "3") (term "1,1,1,0,0,0,1,0"))
      (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "1"))
      (rule "polySimp_mulComm0" (formula "5") (term "0,0"))
      (rule "polySimp_addComm0" (formula "5") (term "0"))
      (rule "inEqSimp_sepNegMonomial1" (formula "5"))
      (rule "polySimp_mulLiterals" (formula "5") (term "0"))
      (rule "polySimp_elimOne" (formula "5") (term "0"))
      (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "5"))
      (rule "qeq_literals" (formula "4") (term "0"))
       (builtin "One Step Simplification" (formula "4"))
      (rule "closeFalse" (formula "4"))
   )
   (branch "Case 2"
      (rule "instAll" (formula "6") (term "1,0") (ifseqformula "1") (userinteraction))
      (rule "instAll" (formula "7") (term "1,1") (ifseqformula "1") (userinteraction))
      (rule "replace_known_right" (formula "1") (term "1") (ifseqformula "8"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "notLeft" (formula "1"))
      (rule "polySimp_addComm0" (formula "3") (term "1,1,0,0,0,1,0"))
      (rule "polySimp_addComm0" (formula "2") (term "1,1,0,0,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,0,0"))
      (rule "polySimp_addComm0" (formula "7") (term "1,1"))
      (rule "inEqSimp_leqRight" (formula "8"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0"))
      (rule "inEqSimp_gtToGeq" (formula "7"))
      (rule "mul_literals" (formula "7") (term "1,0,0"))
      (rule "add_literals" (formula "7") (term "0,0"))
      (rule "inEqSimp_commuteLeq" (formula "3") (term "0,0,0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "3") (term "1,0,0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "4") (term "0,0,0,0,0,1,0"))
      (rule "inEqSimp_commuteLeq" (formula "4") (term "1,0,0,0,0,1,0"))
      (rule "inEqSimp_commuteLeq" (formula "4") (term "1,0,0,1,0"))
      (rule "inEqSimp_commuteLeq" (formula "3") (term "1,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "2") (term "0,0,0,0"))
      (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "5"))
       (builtin "One Step Simplification" (formula "2"))
      (rule "inEqSimp_commuteLeq" (formula "8") (term "0,0"))
      (rule "replace_known_left" (formula "8") (term "0,0") (ifseqformula "5"))
       (builtin "One Step Simplification" (formula "8"))
      (rule "inEqSimp_commuteLeq" (formula "2") (term "1,0"))
      (rule "inEqSimp_commuteLeq" (formula "2") (term "0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "8") (term "0"))
      (rule "replace_known_left" (formula "8") (term "0") (ifseqformula "6"))
       (builtin "One Step Simplification" (formula "8"))
      (rule "inEqSimp_leqRight" (formula "8"))
      (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
      (rule "mul_literals" (formula "1") (term "0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
      (rule "add_literals" (formula "1") (term "0,0,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "0"))
      (rule "add_literals" (formula "1") (term "1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,0"))
      (rule "add_zero_right" (formula "1") (term "0"))
      (rule "qeq_literals" (formula "1"))
      (rule "closeFalse" (formula "1"))
   )
)
)
}
