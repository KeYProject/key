\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Mon Nov 28 13:07:05 CET 2022
[NewSMT]NoTypeHierarchy=false
[Labels]UseOriginLabels=true
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[NewSMT]Presburger=false
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=JavaCard-JavaCard\\:on , Strings-Strings\\:on , assertions-assertions\\:safe , bigint-bigint\\:on , floatRules-floatRules\\:strictfpOnly , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , integerSimplificationRules-integerSimplificationRules\\:full , javaLoopTreatment-javaLoopTreatment\\:efficient , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off , methodExpansion-methodExpansion\\:modularOnly , modelFields-modelFields\\:treatAsAxiom , moreSeqRules-moreSeqRules\\:on , permissions-permissions\\:off , programRules-programRules\\:Java , reach-reach\\:on , runtimeExceptions-runtimeExceptions\\:ban , sequences-sequences\\:on , wdChecks-wdChecks\\:off , wdOperator-wdOperator\\:L , finalFields-finalFields\\:immutable
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_SCOPE_INV_TACLET
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_COMPLETION
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[Strategy]MaximumNumberOfAutomaticApplications=10000
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_DELAYED
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[Strategy]Timeout=-1
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[SMTSettings]useUninterpretedMultiplication=true
[NewSMT]sqrtSMTTranslation=SMT
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[NewSMT]identifier=OPEN
[SMTSettings]maxGenericSorts=2
[StrategyProperty]OSS_OPTIONS_KEY=OSS_ON
[NewSMT]Axiomatisations=false
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\proofObligation "#Proof Obligation Settings
#Mon Nov 28 13:07:05 CET 2022
name=powLogLess
class=de.uka.ilkd.key.taclettranslation.lemma.TacletProofObligationInput
";

\proof {
(keyLog "0" (keyUser "Julian" ) (keyVersion "e1a85b31e7"))
(keyLog "1" (keyUser "Julian" ) (keyVersion "e1a85b31e7"))
(keyLog "2" (keyUser "Julian" ) (keyVersion "e1a85b31e7"))
(keyLog "3" (keyUser "Julian" ) (keyVersion "2fe3118da0"))
(keyLog "4" (keyUser "Julian" ) (keyVersion "2fe3118da0"))
(keyLog "5" (keyUser "Julian" ) (keyVersion "15f798ada2"))
(keyLog "6" (keyUser "Julian" ) (keyVersion "b4e14ff4c5"))

(autoModeTime "5134")

(branch "dummy ID"
 (builtin "One Step Simplification" (formula "1") (newnames "f_base,f_exp"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "int_induction" (inst "b=(\\forall int i;
   ((   (  leq(Z(1(#)), i)<<origin(\"User_Interaction @ node 3 (int_induction)\",\"[]\")>>
         & leq(i, add(nv, Z(1(#))))<<origin(\"User_Interaction @ node 3 (int_induction)\",\"[]\")>>)<<origin(\"User_Interaction @ node 3 (int_induction)\",\"[]\")>>
     -> leq(pow(f_base, log(f_base, i)), i)<<origin(\"User_Interaction @ node 3 (int_induction)\",\"[]\")>>)<<origin(\"User_Interaction @ node 3 (int_induction)\",\"[]\")>>))<<origin(\"User_Interaction @ node 3 (int_induction)\",\"[]\")>>") (inst "nv=nv") (userinteraction))
(branch "Base Case"
   (rule "allRight" (formula "3") (inst "sk=i_0") (userinteraction))
   (rule "impRight" (formula "3"))
   (rule "andLeft" (formula "1"))
   (rule "eqTermCut" (formula "1") (term "1") (inst "s=Z(1(#))") (userinteraction))
   (branch "Assume i_0 = 1"
      (rule "applyEqRigid" (formula "6") (term "1,1,0") (ifseqformula "1") (userinteraction))
      (rule "add_zero_left" (formula "3") (term "1"))
      (rule "log1Concrete" (formula "6") (term "1,0"))
      (rule "replace_known_left" (formula "6") (term "0,1,0") (ifseqformula "5"))
       (builtin "One Step Simplification" (formula "6"))
      (rule "powConcrete0" (formula "6") (term "0"))
      (rule "close" (formula "6") (ifseqformula "2"))
   )
   (branch "Assume i_0 != 1"
      (rule "add_zero_left" (formula "3") (term "1"))
      (rule "notLeft" (formula "1"))
      (rule "inEqSimp_leqRight" (formula "6"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
      (rule "inEqSimp_leqRight" (formula "7"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
      (rule "inEqSimp_gtToGeq" (formula "6"))
      (rule "mul_literals" (formula "6") (term "1,0,0"))
      (rule "add_literals" (formula "6") (term "0,0"))
      (rule "inEqSimp_commuteLeq" (formula "3"))
      (rule "inEqSimp_sepPosMonomial1" (formula "2"))
      (rule "polySimp_mulComm0" (formula "2") (term "1"))
      (rule "polySimp_rightDist" (formula "2") (term "1"))
      (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
      (rule "mul_literals" (formula "2") (term "0,1"))
      (rule "polySimp_elimOne" (formula "2") (term "1,1"))
      (rule "inEqSimp_sepPosMonomial1" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1"))
      (rule "polySimp_rightDist" (formula "1") (term "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
      (rule "mul_literals" (formula "1") (term "0,1"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1"))
      (rule "inEqSimp_sepPosMonomial1" (formula "6"))
      (rule "mul_literals" (formula "6") (term "1"))
      (rule "inEqSimp_strengthen1" (formula "3") (ifseqformula "7"))
      (rule "add_literals" (formula "3") (term "1"))
      (rule "inEqSimp_contradEq7" (formula "7") (ifseqformula "3"))
      (rule "mul_literals" (formula "7") (term "1,0,0"))
      (rule "add_literals" (formula "7") (term "0,0"))
      (rule "leq_literals" (formula "7") (term "0"))
       (builtin "One Step Simplification" (formula "7"))
      (rule "false_right" (formula "7"))
      (rule "inEqSimp_contradInEq1" (formula "4") (ifseqformula "3"))
      (rule "qeq_literals" (formula "4") (term "0"))
       (builtin "One Step Simplification" (formula "4"))
      (rule "closeFalse" (formula "4"))
   )
)
(branch "Step Case"
   (rule "allRight" (formula "3") (inst "sk=nv_0") (userinteraction))
   (rule "impRight" (formula "3"))
   (rule "andLeft" (formula "1"))
   (rule "allRight" (formula "5") (inst "sk=i_0") (userinteraction))
   (rule "impRight" (formula "5"))
   (rule "andLeft" (formula "1"))
   (rule "hide_right" (formula "8") (userinteraction))
   (rule "logDefinition" (formula "7") (term "1,0") (userinteraction))
   (rule "ifthenelse_split" (formula "7") (term "1,0") (userinteraction))
   (branch "i_0 >= 1 & f_base > 1 TRUE"
      (rule "andLeft" (formula "1"))
      (rule "ifthenelse_split" (formula "8") (term "1,0") (userinteraction))
      (branch "i_0 < f_base TRUE"
         (rule "powConcrete0" (formula "9") (term "0") (userinteraction))
         (rule "close" (formula "9") (ifseqformula "3"))
      )
      (branch "i_0 < f_base FALSE"
         (rule "powSplitFactor" (formula "9") (term "0") (userinteraction))
         (rule "polySimp_addLiterals" (formula "3") (term "1"))
         (rule "polySimp_elimSub" (formula "9") (term "1,1,1,1,0"))
         (rule "mul_literals" (formula "9") (term "1,1,1,1,1,0"))
         (rule "polySimp_mulComm0" (formula "9") (term "1,1,0"))
         (rule "polySimp_addComm0" (formula "5") (term "1,1,0,0"))
         (rule "polySimp_addComm0" (formula "3") (term "1"))
         (rule "polySimp_addComm1" (formula "9") (term "1,0,1,1,0"))
         (rule "add_literals" (formula "9") (term "0,1,0,1,1,0"))
         (rule "add_zero_left" (formula "9") (term "1,0,1,1,0"))
         (rule "inEqSimp_ltRight" (formula "8"))
         (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
         (rule "inEqSimp_leqRight" (formula "9"))
         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
         (rule "inEqSimp_gtToGeq" (formula "9"))
         (rule "mul_literals" (formula "9") (term "1,0,0"))
         (rule "add_literals" (formula "9") (term "0,0"))
         (rule "inEqSimp_commuteLeq" (formula "4"))
         (rule "inEqSimp_commuteLeq" (formula "6") (term "0,0,0"))
         (rule "inEqSimp_homoInEq0" (formula "4"))
         (rule "polySimp_addComm1" (formula "4") (term "0"))
         (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,1,0"))
         (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,1,0"))
         (rule "mul_literals" (formula "1") (term "0,1,0,0,1,1,0"))
         (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,1,0"))
         (rule "add_literals" (formula "1") (term "0,0,0,1,1,0"))
         (rule "add_zero_left" (formula "1") (term "0,0,1,1,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "2"))
         (rule "polySimp_mulLiterals" (formula "2") (term "1"))
         (rule "polySimp_elimOne" (formula "2") (term "1"))
         (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "0,1,0"))
         (rule "mul_literals" (formula "1") (term "1,0,1,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "8"))
         (rule "mul_literals" (formula "8") (term "1"))
         (rule "inEqSimp_sepPosMonomial1" (formula "4"))
         (rule "polySimp_mulComm0" (formula "4") (term "1"))
         (rule "polySimp_rightDist" (formula "4") (term "1"))
         (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
         (rule "mul_literals" (formula "4") (term "0,1"))
         (rule "polySimp_elimOne" (formula "4") (term "1,1"))
         (rule "inEqSimp_invertInEq0" (formula "1") (term "0,1,1,0"))
         (rule "times_zero_2" (formula "1") (term "1,0,1,1,0"))
         (rule "polySimp_mulLiterals" (formula "1") (term "0,0,1,1,0"))
         (rule "polySimp_elimOne" (formula "1") (term "0,0,1,1,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "1"))
         (rule "polySimp_mulComm0" (formula "1") (term "1"))
         (rule "polySimp_rightDist" (formula "1") (term "1"))
         (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
         (rule "mul_literals" (formula "1") (term "0,1"))
         (rule "polySimp_elimOne" (formula "1") (term "1,1"))
         (rule "nnf_imp2or" (formula "6") (term "0"))
         (rule "nnf_notAnd" (formula "6") (term "0,0"))
         (rule "inEqSimp_notGeq" (formula "6") (term "0,0,0"))
         (rule "mul_literals" (formula "6") (term "1,0,0,0,0,0"))
         (rule "add_literals" (formula "6") (term "0,0,0,0,0"))
         (rule "add_zero_left" (formula "6") (term "0,0,0,0"))
         (rule "inEqSimp_notLeq" (formula "6") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "6") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "6") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "6") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "6") (term "0,0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "6") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "6") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "6") (term "1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "6") (term "1,1,1,0,0"))
         (rule "mul_literals" (formula "6") (term "0,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "6") (term "1,1,1,0,0"))
         (rule "div_axiom" (formula "1") (term "1,0,0,1,0") (inst "quotient=quotient_0"))
         (rule "polySimp_mulComm0" (formula "1") (term "1,1,1,1,1"))
         (rule "polySimp_mulComm0" (formula "1") (term "0,1,1,1"))
         (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,1"))
         (rule "polySimp_mulComm0" (formula "1") (term "0,2,1,1"))
         (rule "polySimp_addComm1" (formula "1") (term "1,2,1,1"))
         (rule "polySimp_addComm1" (formula "1") (term "1,1,1,1"))
         (rule "inEqSimp_contradEq7" (formula "1") (term "0") (ifseqformula "9"))
         (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
         (rule "add_zero_right" (formula "1") (term "0,0,0"))
         (rule "leq_literals" (formula "1") (term "0,0"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "andLeft" (formula "1"))
         (rule "andLeft" (formula "1"))
         (rule "applyEq" (formula "4") (term "1,0,0,1,0") (ifseqformula "1"))
         (rule "applyEq" (formula "4") (term "1,1,0,1,1,0") (ifseqformula "1"))
         (rule "applyEq" (formula "4") (term "1,1,1,2,0") (ifseqformula "1"))
         (rule "applyEq" (formula "4") (term "1,0,0,0") (ifseqformula "1"))
         (rule "inEqSimp_subsumption1" (formula "3") (term "0") (ifseqformula "11"))
         (rule "leq_literals" (formula "3") (term "0,0"))
          (builtin "One Step Simplification" (formula "3"))
         (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "2"))
         (rule "polySimp_rightDist" (formula "3") (term "0,0"))
         (rule "polySimp_pullOutFactor2b" (formula "3") (term "0"))
         (rule "add_literals" (formula "3") (term "1,1,0"))
         (rule "times_zero_1" (formula "3") (term "1,0"))
         (rule "add_zero_right" (formula "3") (term "0"))
         (rule "polySimp_rightDist" (formula "3") (term "0"))
         (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
         (rule "mul_literals" (formula "3") (term "0,0"))
         (rule "polySimp_elimOne" (formula "3") (term "1,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "3"))
         (rule "mul_literals" (formula "3") (term "1"))
         (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "12"))
         (rule "leq_literals" (formula "3") (term "0"))
          (builtin "One Step Simplification" (formula "3"))
         (rule "true_left" (formula "3"))
         (rule "ifthenelse_split" (formula "4") (term "1,0"))
         (branch "log(f_base, quotient_0) >= 0 TRUE"
            (rule "inEqSimp_subsumption1" (formula "5") (term "0,0") (ifseqformula "4"))
            (rule "leq_literals" (formula "5") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "5"))
            (rule "allLeft" (formula "10") (inst "t=quotient_0"))
            (rule "inEqSimp_homoInEq1" (formula "10") (term "1,0"))
            (rule "polySimp_addComm1" (formula "10") (term "0,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0"))
            (rule "polySimp_mulComm0" (formula "10") (term "1,1,0"))
            (rule "polySimp_rightDist" (formula "10") (term "1,1,0"))
            (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0"))
            (rule "mul_literals" (formula "10") (term "0,1,1,0"))
            (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0"))
            (rule "commute_or" (formula "10") (term "0"))
            (rule "cut_direct" (formula "10") (term "1,0"))
            (branch "CUT: quotient_0 <= 0 TRUE"
                (builtin "One Step Simplification" (formula "11"))
               (rule "true_left" (formula "11"))
               (rule "multiply_2_inEq1" (formula "10") (ifseqformula "13"))
               (rule "neg_literal" (formula "10") (term "0,0,0,1"))
               (rule "times_zero_2" (formula "10") (term "1,0,1"))
               (rule "mul_literals" (formula "10") (term "0,0,1"))
               (rule "add_zero_left" (formula "10") (term "0,1"))
               (rule "add_zero_left" (formula "10") (term "1"))
               (rule "polySimp_mulComm0" (formula "10") (term "0"))
               (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "10"))
               (rule "polySimp_rightDist" (formula "3") (term "0,0"))
               (rule "polySimp_addComm1" (formula "3") (term "0"))
               (rule "polySimp_rightDist" (formula "3") (term "0,0,0"))
               (rule "mul_literals" (formula "3") (term "0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0"))
               (rule "polySimp_elimOne" (formula "3") (term "1,0,0,0"))
               (rule "polySimp_addComm1" (formula "3") (term "0,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "3"))
               (rule "polySimp_mulLiterals" (formula "3") (term "0"))
               (rule "polySimp_elimOne" (formula "3") (term "0"))
               (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "3"))
               (rule "polySimp_mulComm0" (formula "7") (term "0,0"))
               (rule "polySimp_addAssoc" (formula "7") (term "0"))
               (rule "polySimp_addComm0" (formula "7") (term "0,0"))
               (rule "polySimp_pullOutFactor2b" (formula "7") (term "0"))
               (rule "add_literals" (formula "7") (term "1,1,0"))
               (rule "times_zero_1" (formula "7") (term "1,0"))
               (rule "add_zero_right" (formula "7") (term "0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "7"))
               (rule "mul_literals" (formula "7") (term "1"))
               (rule "inEqSimp_contradInEq3" (formula "7") (ifseqformula "13"))
               (rule "greater_literals" (formula "7") (term "0,0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "times_zero_1" (formula "7") (term "0,0"))
               (rule "qeq_literals" (formula "7") (term "0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "closeFalse" (formula "7"))
            )
            (branch "CUT: quotient_0 <= 0 FALSE"
                (builtin "One Step Simplification" (formula "10"))
               (rule "inEqSimp_leqRight" (formula "14"))
               (rule "times_zero_1" (formula "1") (term "1,0,0"))
               (rule "add_zero_right" (formula "1") (term "0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "1"))
               (rule "mul_literals" (formula "1") (term "1"))
               (rule "cut_direct" (formula "11") (term "1"))
               (branch "CUT: pow(f_base, log(f_base, quotient_0)) <= quotient_0 TRUE"
                   (builtin "One Step Simplification" (formula "12"))
                  (rule "true_left" (formula "12"))
                  (rule "multiply_2_inEq3" (formula "1") (ifseqformula "14"))
                  (rule "neg_literal" (formula "1") (term "0,0,0,1"))
                  (rule "mul_literals" (formula "1") (term "0,0,1"))
                  (rule "polySimp_elimOneLeft0" (formula "1") (term "1,0,1"))
                  (rule "polySimp_mulComm0" (formula "1") (term "0"))
                  (rule "polySimp_addComm1" (formula "1") (term "1"))
                  (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "4"))
                  (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                  (rule "polySimp_rightDist" (formula "1") (term "0,0,0"))
                  (rule "mul_literals" (formula "1") (term "0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1"))
                  (rule "polySimp_rightDist" (formula "1") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                  (rule "polySimp_rightDist" (formula "1") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1"))
                  (rule "mul_literals" (formula "1") (term "0,0,1"))
                  (rule "multiply_2_inEq1" (formula "13") (ifseqformula "16"))
                  (rule "polySimp_elimNeg" (formula "13") (term "0,0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "13") (term "0,0,1"))
                  (rule "polySimp_mulComm0" (formula "13") (term "1,0,1"))
                  (rule "polySimp_addComm1" (formula "13") (term "1"))
                  (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "13"))
                  (rule "polySimp_rightDist" (formula "8") (term "0,0"))
                  (rule "mul_literals" (formula "8") (term "0,0,0"))
                  (rule "polySimp_addAssoc" (formula "8") (term "0"))
                  (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "8") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                  (rule "polySimp_mulComm0" (formula "8") (term "1"))
                  (rule "polySimp_rightDist" (formula "8") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                  (rule "polySimp_rightDist" (formula "8") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "8") (term "1,0,1"))
                  (rule "polySimp_elimOne" (formula "8") (term "1,0,1"))
                  (rule "polySimp_rightDist" (formula "8") (term "0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,1"))
                  (rule "mul_literals" (formula "8") (term "0,0,0,1"))
                  (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "5"))
                  (rule "polySimp_rightDist" (formula "8") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "8") (term "0"))
                  (rule "polySimp_rightDist" (formula "8") (term "0,0,0"))
                  (rule "polySimp_pullOutFactor2b" (formula "8") (term "0,0"))
                  (rule "add_literals" (formula "8") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "8") (term "1,0,0"))
                  (rule "add_zero_right" (formula "8") (term "0,0"))
                  (rule "polySimp_rightDist" (formula "8") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0"))
                  (rule "mul_literals" (formula "8") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                  (rule "polySimp_mulComm0" (formula "8") (term "1"))
                  (rule "polySimp_rightDist" (formula "8") (term "1"))
                  (rule "mul_literals" (formula "8") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                  (rule "inEqSimp_contradInEq3" (formula "8") (ifseqformula "16"))
                  (rule "greater_literals" (formula "8") (term "0,0"))
                   (builtin "One Step Simplification" (formula "8"))
                  (rule "andLeft" (formula "8"))
                  (rule "polySimp_mulComm0" (formula "8") (term "0"))
                  (rule "inEqSimp_homoInEq1" (formula "8"))
                  (rule "polySimp_mulLiterals" (formula "8") (term "1,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "8") (term "0"))
                  (rule "add_literals" (formula "8") (term "1,1,0"))
                  (rule "times_zero_1" (formula "8") (term "1,0"))
                  (rule "add_zero_right" (formula "8") (term "0"))
                  (rule "leq_literals" (formula "8"))
                  (rule "closeFalse" (formula "8"))
               )
               (branch "CUT: pow(f_base, log(f_base, quotient_0)) <= quotient_0 FALSE"
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "inEqSimp_leqRight" (formula "15"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1"))
                  (rule "polySimp_rightDist" (formula "1") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                  (rule "mul_literals" (formula "1") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                  (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "12"))
                  (rule "times_zero_1" (formula "11") (term "0,0"))
                  (rule "add_zero_left" (formula "11") (term "0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                  (rule "mul_literals" (formula "11") (term "1"))
                  (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "11"))
                  (rule "leq_literals" (formula "2") (term "0"))
                   (builtin "One Step Simplification" (formula "2"))
                  (rule "true_left" (formula "2"))
                  (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "12"))
                  (rule "polySimp_rightDist" (formula "9") (term "0,0"))
                  (rule "mul_literals" (formula "9") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "9") (term "0"))
                  (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
                  (rule "add_literals" (formula "9") (term "0,0,0"))
                  (rule "add_zero_left" (formula "9") (term "0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "9"))
                  (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                  (rule "polySimp_elimOne" (formula "9") (term "0"))
                  (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "9"))
                  (rule "polySimp_mulComm0" (formula "7") (term "0,0"))
                  (rule "polySimp_addComm0" (formula "7") (term "0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "7"))
                  (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                  (rule "polySimp_elimOne" (formula "7") (term "0"))
                  (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "10"))
                  (rule "mul_literals" (formula "9") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                  (rule "mul_literals" (formula "9") (term "1"))
                  (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "13"))
                  (rule "leq_literals" (formula "9") (term "0"))
                   (builtin "One Step Simplification" (formula "9"))
                  (rule "true_left" (formula "9"))
                  (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "7"))
                  (rule "mul_literals" (formula "17") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                  (rule "mul_literals" (formula "17") (term "1"))
                  (rule "multiply_2_inEq3" (formula "1") (ifseqformula "17"))
                  (rule "polySimp_elimNeg" (formula "1") (term "0,0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "0,0,1"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,1"))
                  (rule "polySimp_mulComm0" (formula "1") (term "0,0,1"))
                  (rule "polySimp_rightDist" (formula "1") (term "1,0,1"))
                  (rule "polySimp_elimOne" (formula "1") (term "0,1,0,1"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,1"))
                  (rule "polySimp_rightDist" (formula "1") (term "0,0,1"))
                  (rule "mul_literals" (formula "1") (term "0,0,0,1"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
                  (rule "polySimp_addComm1" (formula "1") (term "1"))
                  (rule "multiply_2_inEq3" (formula "13") (ifseqformula "18"))
                  (rule "neg_literal" (formula "13") (term "0,0,0,1"))
                  (rule "mul_literals" (formula "13") (term "0,0,1"))
                  (rule "polySimp_mulComm0" (formula "13") (term "0"))
                  (rule "polySimp_mulComm0" (formula "13") (term "1,0,1"))
                  (rule "polySimp_addComm1" (formula "13") (term "1"))
                  (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "4"))
                  (rule "polySimp_rightDist" (formula "13") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "13") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "13") (term "0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                  (rule "polySimp_mulComm0" (formula "13") (term "1"))
                  (rule "polySimp_rightDist" (formula "13") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "13") (term "1,1"))
                  (rule "polySimp_rightDist" (formula "13") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1"))
                  (rule "mul_literals" (formula "13") (term "0,0,1"))
                  (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "11"))
                  (rule "polySimp_rightDist" (formula "13") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "13") (term "0"))
                  (rule "polySimp_rightDist" (formula "13") (term "0,0,0"))
                  (rule "mul_literals" (formula "13") (term "0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0"))
                  (rule "polySimp_pullOutFactor2b" (formula "13") (term "0,0"))
                  (rule "add_literals" (formula "13") (term "1,1,0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "13"))
                  (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                  (rule "inEqSimp_exactShadow2" (formula "21") (ifseqformula "13"))
                  (rule "mul_literals" (formula "21") (term "1,0,0,1"))
                  (rule "greater_literals" (formula "21") (term "0"))
                   (builtin "One Step Simplification" (formula "21"))
                  (rule "mul_literals" (formula "21") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "21") (term "0"))
                  (rule "add_literals" (formula "21") (term "0,0"))
                  (rule "add_zero_left" (formula "21") (term "0"))
                  (rule "inEqSimp_invertInEq1" (formula "21"))
                  (rule "times_zero_2" (formula "21") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                  (rule "polySimp_elimOne" (formula "21") (term "0"))
                  (rule "inEqSimp_contradInEq0" (formula "16") (ifseqformula "21"))
                  (rule "qeq_literals" (formula "16") (term "0"))
                   (builtin "One Step Simplification" (formula "16"))
                  (rule "closeFalse" (formula "16"))
               )
            )
         )
         (branch "log(f_base, quotient_0) >= 0 FALSE"
            (rule "inEqSimp_geqRight" (formula "12"))
            (rule "times_zero_1" (formula "1") (term "1,0,0"))
            (rule "add_zero_right" (formula "1") (term "0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "1"))
            (rule "mul_literals" (formula "1") (term "1"))
            (rule "logPositiveConcrete" (formula "1"))
            (rule "logPositiveConcrete" (formula "1"))
            (rule "inEqSimp_gtToGeq" (formula "13") (term "0"))
            (rule "mul_literals" (formula "13") (term "1,0,0,0"))
            (rule "add_literals" (formula "13") (term "0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "0"))
            (rule "mul_literals" (formula "13") (term "1,0"))
            (rule "replace_known_left" (formula "13") (term "0") (ifseqformula "12"))
             (builtin "One Step Simplification" (formula "13"))
            (rule "inEqSimp_geqRight" (formula "13"))
            (rule "mul_literals" (formula "1") (term "1,0,0"))
            (rule "add_literals" (formula "1") (term "0,0"))
            (rule "add_zero_left" (formula "1") (term "0"))
            (rule "div_axiom" (formula "3") (term "0") (inst "quotient=quotient_1"))
            (rule "polySimp_mulComm0" (formula "3") (term "0,1,1,1"))
            (rule "polySimp_mulComm0" (formula "3") (term "0,2,1,1"))
            (rule "polySimp_mulComm0" (formula "3") (term "1,1,1,1,1"))
            (rule "polySimp_mulComm0" (formula "3") (term "0,1,0,1"))
            (rule "polySimp_addComm1" (formula "3") (term "1,2,1,1"))
            (rule "polySimp_addComm1" (formula "3") (term "1,1,1,1"))
            (rule "applyEqRigid" (formula "3") (term "0,0,0,1") (ifseqformula "4"))
            (rule "inEqSimp_contradEq7" (formula "3") (term "0") (ifseqformula "14"))
            (rule "times_zero_1" (formula "3") (term "1,0,0,0"))
            (rule "add_zero_right" (formula "3") (term "0,0,0"))
            (rule "leq_literals" (formula "3") (term "0,0"))
             (builtin "One Step Simplification" (formula "3"))
            (rule "andLeft" (formula "3"))
            (rule "andLeft" (formula "3"))
            (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "3"))
            (rule "logPositiveConcrete" (formula "2"))
            (rule "inEqSimp_gtToGeq" (formula "17") (term "0"))
            (rule "mul_literals" (formula "17") (term "1,0,0,0"))
            (rule "add_literals" (formula "17") (term "0,0,0"))
            (rule "applyEq" (formula "9") (term "1,1,1,2,0") (ifseqformula "3"))
            (rule "applyEqRigid" (formula "9") (term "1,0,0,0") (ifseqformula "3"))
            (rule "applyEq" (formula "1") (term "0") (ifseqformula "3"))
            (rule "applyEq" (formula "8") (term "1,0") (ifseqformula "3"))
            (rule "replace_known_left" (formula "5") (term "1") (ifseqformula "8"))
            (rule "applyEq" (formula "7") (term "1,0") (ifseqformula "3"))
            (rule "applyEq" (formula "6") (term "1") (ifseqformula "3"))
            (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "0"))
            (rule "mul_literals" (formula "16") (term "1,0"))
            (rule "replace_known_left" (formula "16") (term "0") (ifseqformula "15"))
             (builtin "One Step Simplification" (formula "16"))
            (rule "inEqSimp_geqRight" (formula "16"))
            (rule "mul_literals" (formula "1") (term "1,0,0"))
            (rule "add_literals" (formula "1") (term "0,0"))
            (rule "add_zero_left" (formula "1") (term "0"))
            (rule "inEqSimp_subsumption1" (formula "5") (term "0") (ifseqformula "15"))
            (rule "leq_literals" (formula "5") (term "0,0"))
             (builtin "One Step Simplification" (formula "5"))
            (rule "true_left" (formula "5"))
            (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "4"))
            (rule "polySimp_rightDist" (formula "6") (term "0,0"))
            (rule "polySimp_pullOutFactor2b" (formula "6") (term "0"))
            (rule "add_literals" (formula "6") (term "1,1,0"))
            (rule "times_zero_1" (formula "6") (term "1,0"))
            (rule "add_zero_right" (formula "6") (term "0"))
            (rule "polySimp_rightDist" (formula "6") (term "0"))
            (rule "polySimp_mulLiterals" (formula "6") (term "1,0"))
            (rule "mul_literals" (formula "6") (term "0,0"))
            (rule "polySimp_elimOne" (formula "6") (term "1,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "6"))
            (rule "mul_literals" (formula "6") (term "1"))
            (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "15"))
            (rule "leq_literals" (formula "6") (term "0"))
             (builtin "One Step Simplification" (formula "6"))
            (rule "true_left" (formula "6"))
            (rule "ifthenelse_split" (formula "7") (term "0"))
            (branch "log(f_base, quotient_1) >= -1 TRUE"
               (rule "inEqSimp_homoInEq1" (formula "8"))
               (rule "mul_literals" (formula "8") (term "1,0"))
               (rule "polySimp_addComm1" (formula "8") (term "0"))
               (rule "add_literals" (formula "8") (term "0,0"))
               (rule "add_zero_left" (formula "8") (term "0"))
               (rule "inEqSimp_contradInEq1" (formula "8") (ifseqformula "10"))
               (rule "qeq_literals" (formula "8") (term "0"))
                (builtin "One Step Simplification" (formula "8"))
               (rule "closeFalse" (formula "8"))
            )
            (branch "log(f_base, quotient_1) >= -1 FALSE"
               (rule "inEqSimp_geqRight" (formula "15"))
               (rule "mul_literals" (formula "1") (term "1,0,0"))
               (rule "add_literals" (formula "1") (term "0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "1"))
               (rule "mul_literals" (formula "1") (term "1"))
               (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "1"))
               (rule "leq_literals" (formula "3") (term "0"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "true_left" (formula "3"))
               (rule "multiply_2_inEq1" (formula "2") (ifseqformula "14"))
               (rule "times_zero_2" (formula "2") (term "1,0,1"))
               (rule "neg_literal" (formula "2") (term "0,0,0,1"))
               (rule "add_zero_right" (formula "2") (term "0,1"))
               (rule "mul_literals" (formula "2") (term "0,1"))
               (rule "add_zero_left" (formula "2") (term "1"))
               (rule "polySimp_mulComm0" (formula "2") (term "0"))
               (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "2"))
               (rule "polySimp_rightDist" (formula "7") (term "0,0"))
               (rule "polySimp_addComm1" (formula "7") (term "0"))
               (rule "polySimp_rightDist" (formula "7") (term "0,0,0"))
               (rule "mul_literals" (formula "7") (term "0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0"))
               (rule "polySimp_elimOne" (formula "7") (term "1,0,0,0"))
               (rule "polySimp_addComm1" (formula "7") (term "0,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "7"))
               (rule "polySimp_mulLiterals" (formula "7") (term "0"))
               (rule "polySimp_elimOne" (formula "7") (term "0"))
               (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "7"))
               (rule "mul_literals" (formula "11") (term "0,0"))
               (rule "polySimp_addAssoc" (formula "11") (term "0"))
               (rule "polySimp_addAssoc" (formula "11") (term "0,0"))
               (rule "add_literals" (formula "11") (term "0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "11"))
               (rule "polySimp_mulComm0" (formula "11") (term "1"))
               (rule "polySimp_rightDist" (formula "11") (term "1"))
               (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
               (rule "mul_literals" (formula "11") (term "0,1"))
               (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "7"))
               (rule "polySimp_mulComm0" (formula "10") (term "0,0"))
               (rule "polySimp_addAssoc" (formula "10") (term "0"))
               (rule "polySimp_addComm0" (formula "10") (term "0,0"))
               (rule "polySimp_pullOutFactor2b" (formula "10") (term "0"))
               (rule "add_literals" (formula "10") (term "1,1,0"))
               (rule "times_zero_1" (formula "10") (term "1,0"))
               (rule "add_zero_right" (formula "10") (term "0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "10"))
               (rule "mul_literals" (formula "10") (term "1"))
               (rule "inEqSimp_contradInEq3" (formula "10") (ifseqformula "3"))
               (rule "times_zero_1" (formula "10") (term "0,1,0"))
               (rule "greater_literals" (formula "10") (term "0,0"))
                (builtin "One Step Simplification" (formula "10"))
               (rule "qeq_literals" (formula "10") (term "0"))
                (builtin "One Step Simplification" (formula "10"))
               (rule "closeFalse" (formula "10"))
            )
         )
      )
   )
   (branch "i_0 >= 1 & f_base > 1 FALSE"
      (rule "polySimp_addLiterals" (formula "2") (term "1"))
      (rule "replace_known_left" (formula "7") (term "1") (ifseqformula "6"))
       (builtin "One Step Simplification" (formula "7"))
      (rule "polySimp_addComm0" (formula "4") (term "1,1,0,0"))
      (rule "polySimp_addComm0" (formula "2") (term "1"))
      (rule "inEqSimp_leqRight" (formula "8"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
      (rule "inEqSimp_geqRight" (formula "8"))
      (rule "mul_literals" (formula "1") (term "1,0,0"))
      (rule "add_literals" (formula "1") (term "0,0"))
      (rule "add_zero_left" (formula "1") (term "0"))
      (rule "inEqSimp_gtToGeq" (formula "8"))
      (rule "mul_literals" (formula "8") (term "1,0,0"))
      (rule "add_literals" (formula "8") (term "0,0"))
      (rule "inEqSimp_commuteLeq" (formula "3"))
      (rule "inEqSimp_commuteLeq" (formula "6") (term "0,0,0"))
      (rule "inEqSimp_homoInEq0" (formula "4"))
      (rule "polySimp_addComm1" (formula "4") (term "0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "2"))
      (rule "polySimp_mulComm0" (formula "2") (term "1"))
      (rule "polySimp_rightDist" (formula "2") (term "1"))
      (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
      (rule "mul_literals" (formula "2") (term "0,1"))
      (rule "polySimp_elimOne" (formula "2") (term "1,1"))
      (rule "inEqSimp_sepPosMonomial1" (formula "8"))
      (rule "mul_literals" (formula "8") (term "1"))
      (rule "inEqSimp_sepPosMonomial1" (formula "4"))
      (rule "polySimp_mulComm0" (formula "4") (term "1"))
      (rule "polySimp_rightDist" (formula "4") (term "1"))
      (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
      (rule "mul_literals" (formula "4") (term "0,1"))
      (rule "polySimp_elimOne" (formula "4") (term "1,1"))
      (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "3"))
      (rule "qeq_literals" (formula "1") (term "0"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "closeFalse" (formula "1"))
   )
)
(branch "Use Case"
   (rule "instAll" (formula "4") (term "1") (ifseqformula "1") (userinteraction))
   (rule "impLeft" (formula "1") (userinteraction))
   (branch "Case 1"
      (rule "polySimp_addComm0" (formula "1") (term "1,1,0,0,1,0"))
      (rule "inEqSimp_leqRight" (formula "5"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
      (rule "inEqSimp_geqRight" (formula "5"))
      (rule "times_zero_1" (formula "1") (term "1,0,0"))
      (rule "add_zero_right" (formula "1") (term "0,0"))
      (rule "inEqSimp_gtToGeq" (formula "5"))
      (rule "mul_literals" (formula "5") (term "1,0,0"))
      (rule "add_literals" (formula "5") (term "0,0"))
      (rule "inEqSimp_commuteLeq" (formula "3") (term "0,0,0,1,0"))
      (rule "inEqSimp_homoInEq0" (formula "3") (term "1,0,0,1,0"))
      (rule "polySimp_addComm1" (formula "3") (term "0,1,0,0,1,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "2"))
      (rule "polySimp_mulComm0" (formula "2") (term "1"))
      (rule "polySimp_rightDist" (formula "2") (term "1"))
      (rule "mul_literals" (formula "2") (term "0,1"))
      (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
      (rule "polySimp_elimOne" (formula "2") (term "1,1"))
      (rule "inEqSimp_sepPosMonomial0" (formula "1"))
      (rule "mul_literals" (formula "1") (term "1"))
      (rule "inEqSimp_sepPosMonomial1" (formula "5"))
      (rule "mul_literals" (formula "5") (term "1"))
      (rule "inEqSimp_sepPosMonomial1" (formula "3") (term "1,0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "3") (term "1,1,0,0,1,0"))
      (rule "polySimp_rightDist" (formula "3") (term "1,1,0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "3") (term "1,1,1,0,0,1,0"))
      (rule "mul_literals" (formula "3") (term "0,1,1,0,0,1,0"))
      (rule "polySimp_elimOne" (formula "3") (term "1,1,1,0,0,1,0"))
      (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "4"))
      (rule "qeq_literals" (formula "1") (term "0"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "closeFalse" (formula "1"))
   )
   (branch "Case 2"
      (rule "instAll" (formula "5") (term "1") (ifseqformula "1") (userinteraction))
      (rule "replace_known_right" (formula "1") (term "1") (ifseqformula "6"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "notLeft" (formula "1"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,0,0"))
      (rule "polySimp_addComm0" (formula "2") (term "1,1,0,0,1,0"))
      (rule "polySimp_addComm0" (formula "5") (term "1,1"))
      (rule "inEqSimp_leqRight" (formula "6"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
      (rule "inEqSimp_gtToGeq" (formula "5"))
      (rule "mul_literals" (formula "5") (term "1,0,0"))
      (rule "add_literals" (formula "5") (term "0,0"))
      (rule "inEqSimp_commuteLeq" (formula "2") (term "0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "3") (term "0,0,0,1,0"))
      (rule "inEqSimp_commuteLeq" (formula "6") (term "0"))
      (rule "replace_known_left" (formula "6") (term "0") (ifseqformula "4"))
       (builtin "One Step Simplification" (formula "6"))
      (rule "inEqSimp_leqRight" (formula "6"))
      (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
      (rule "mul_literals" (formula "1") (term "0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
      (rule "add_literals" (formula "1") (term "0,0,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "0"))
      (rule "add_literals" (formula "1") (term "1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,0"))
      (rule "add_zero_right" (formula "1") (term "0"))
      (rule "qeq_literals" (formula "1"))
      (rule "closeFalse" (formula "1"))
   )
)
)
}
