\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Thu Oct 27 16:09:31 CEST 2016
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]useUninterpretedMultiplication=true
[SMTSettings]SelectedTaclets=
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_NONE
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_RESTRICTED
[StrategyProperty]DEP_OPTIONS_KEY=DEP_OFF
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_ON
[Strategy]Timeout=-1
[Strategy]MaximumNumberOfAutomaticApplications=200
[SMTSettings]integersMaximum=2147483645
[Choice]DefaultChoices=assertions-assertions\\:safe , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:ban , JavaCard-JavaCard\\:on , Strings-Strings\\:on , modelFields-modelFields\\:showSatisfiability , bigint-bigint\\:on , sequences-sequences\\:on , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off , moreSeqRules-moreSeqRules\\:on , permissions-permissions\\:off , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]maxGenericSorts=2
[SMTSettings]integersMinimum=-2147483645
[SMTSettings]invariantForall=false
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
"
}

\proofObligation "#Proof Obligation Settings
#Thu Oct 27 16:09:31 CEST 2016
name=schiffl_thm_1
class=de.uka.ilkd.key.taclettranslation.lemma.TacletProofObligationInput
";


\proofScript "
macro split-prop;
rule schiffl_lemma_2 formula='seqPerm(f_s,Â f_t)';
instantiate hide var=x with='f_x';
instantiate hide var=y with='f_y';
rule impLeft;
tryclose branch;
rule exLeft;
macro split-prop;
rule seqPermDef occ=1;
rule andRight;
tryclose branch;
instantiate hide var=s with='r_0';
rule andRight;
tryclose branch;
rule allRight;
rule impRight;
instantiate hide var=iv with='iv_0';
rule impLeft;
tryclose branch;
rule andLeft;
rule seqNPermRange;
instantiate hide var=iv with='iv_0';
rule impLeft;
tryclose branch;
rule andLeft;
rule andLeft;
rule seqNPermRange;
instantiate hide var=iv with='f_x';
rule impLeft;
tryclose branch;
rule andLeft;
rule andLeft;
rule seqNPermRange;
instantiate hide var=iv with='f_y';
rule impLeft;
tryclose branch;
rule andLeft;
rule andLeft;
rule getOfSeqDef occ=0;
rule getOfSeqDef;
rule ifthenelse_split occ=0;
rule andLeft occ=0;
rule sub_zero_2 occ=0;
rule ifthenelse_split occ=2;
rule andLeft;
rule sub_zero_2 occ=0;
rule add_zero_right occ=0;
rule add_zero_right occ=0;
rule add_zero_right occ=0;
rule add_zero_right occ=0;
rule add_zero_right occ=0;
rule add_zero_right occ=0;
rule ifthenelse_split occ=0;
rule ifthenelse_split occ=0;
tryclose branch;
tryclose branch;
rule ifthenelse_split occ=0;
tryclose branch;
rule ifthenelse_split occ=0;
rule seqNPermInjective;
instantiate hide var=iv with='iv_0';
instantiate hide var=jv with='f_y';
rule impLeft;
tryclose branch;
tryclose branch;
rule ifthenelse_split occ=0;
rule seqNPermInjective;
instantiate hide var=iv with='iv_0';
instantiate hide var=jv with='f_x';
rule impLeft;
tryclose branch;
tryclose branch;
tryclose branch;
tryclose branch;
tryclose branch;
"

