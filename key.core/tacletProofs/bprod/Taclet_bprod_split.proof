\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Wed Aug 17 14:08:10 CEST 2022
[Labels]UseOriginLabels=true
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_OFF
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=JavaCard-JavaCard\\:off , Strings-Strings\\:on , assertions-assertions\\:safe , bigint-bigint\\:on , finalFields-finalFields\\:immutable , floatRules-floatRules\\:strictfpOnly , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , integerSimplificationRules-integerSimplificationRules\\:full , javaLoopTreatment-javaLoopTreatment\\:efficient , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off , methodExpansion-methodExpansion\\:modularOnly , modelFields-modelFields\\:treatAsAxiom , moreSeqRules-moreSeqRules\\:off , permissions-permissions\\:off , programRules-programRules\\:Java , reach-reach\\:on , runtimeExceptions-runtimeExceptions\\:ban , sequences-sequences\\:on , wdChecks-wdChecks\\:off , wdOperator-wdOperator\\:L
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_NONE
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[Strategy]MaximumNumberOfAutomaticApplications=10000
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[Strategy]Timeout=-1
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_RESTRICTED
[SMTSettings]useUninterpretedMultiplication=true
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[SMTSettings]maxGenericSorts=2
[StrategyProperty]OSS_OPTIONS_KEY=OSS_ON
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\proofObligation "#Proof Obligation Settings
#Wed Aug 17 14:08:10 CEST 2022
name=bprod_split
class=de.uka.ilkd.key.taclettranslation.lemma.TacletProofObligationInput
";

\proof {
(keyLog "0" (keyUser "Julian" ) (keyVersion "e1a85b31e7"))

(autoModeTime "855")

(branch "dummy ID"
(rule "ifthenelse_split" (formula "1") (term "1") (newnames "v_uSub,f_i0,f_i1,f_t1,f_middle") (userinteraction))
(branch "f_i0 <= f_middle & f_middle <= f_i1 TRUE"
   (rule "andLeft" (formula "1"))
   (rule "int_induction" (inst "b=(\\forall int i;
   ((   (  (leq(f_i0, i)<<origin(\"User_Interaction @ node 5 (int_induction)\",\"[]\")>>
         & leq(i, add(f_i0, nv))<<origin(\"User_Interaction @ node 5 (int_induction)\",\"[]\")>>)<<origin(\"User_Interaction @ node 5 (int_induction)\",\"[]\")>>
         & leq(i, f_i1)<<origin(\"User_Interaction @ node 5 (int_induction)\",\"[]\")>>)<<origin(\"User_Interaction @ node 5 (int_induction)\",\"[]\")>>
     -> (  bprod{int v_uSub;}(f_i0,
                              add(f_i0, nv),
                              f_t1(v_uSub))
         = mul(bprod{int v_uSub;}(f_i0,
                                  i,
                                  f_t1(v_uSub)),
               bprod{int v_uSub;}(i,
                                  add(f_i0, nv),
                                  f_t1(v_uSub))))<<origin(\"User_Interaction @ node 5 (int_induction)\",\"[]\")>>)<<origin(\"User_Interaction @ node 5 (int_induction)\",\"[]\")>>))<<origin(\"User_Interaction @ node 5 (int_induction)\",\"[]\")>>") (inst "nv=nv") (userinteraction))
   (branch "Base Case"
      (rule "add_zero_right" (formula "3") (term "1,1,0,0,0"))
      (rule "add_zero_right" (formula "3") (term "1,0,1,0"))
      (rule "bprod_lower_equals_upper" (formula "3") (term "0,1,0"))
      (rule "add_zero_right" (formula "3") (term "1,1,1,1,0"))
      (rule "allRight" (formula "3") (inst "sk=i_0"))
      (rule "impRight" (formula "3"))
      (rule "andLeft" (formula "1"))
      (rule "andLeft" (formula "1"))
      (rule "eqSymm" (formula "7"))
      (rule "eqSymm" (formula "6"))
      (rule "polySimp_mulComm0" (formula "7") (term "0"))
      (rule "polySimp_mulComm0" (formula "6") (term "0"))
      (rule "inEqSimp_commuteLeq" (formula "4"))
      (rule "inEqSimp_commuteLeq" (formula "1"))
      (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "2"))
      (rule "applyEqRigid" (formula "2") (term "0") (ifseqformula "1"))
      (rule "inEqSimp_homoInEq1" (formula "2"))
      (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
      (rule "add_literals" (formula "2") (term "1,0"))
      (rule "times_zero_1" (formula "2") (term "0"))
      (rule "leq_literals" (formula "2"))
      (rule "true_left" (formula "2"))
      (rule "applyEqRigid" (formula "2") (term "0") (ifseqformula "1"))
      (rule "inEqSimp_homoInEq0" (formula "2"))
      (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
      (rule "add_literals" (formula "2") (term "1,0"))
      (rule "times_zero_1" (formula "2") (term "0"))
      (rule "qeq_literals" (formula "2"))
      (rule "true_left" (formula "2"))
      (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "1"))
      (rule "bprod_lower_equals_upper" (formula "5") (term "0,0"))
      (rule "polySimp_elimOneLeft0" (formula "5") (term "0"))
      (rule "applyEqRigid" (formula "2") (term "0") (ifseqformula "1"))
      (rule "inEqSimp_commuteLeq" (formula "2"))
      (rule "applyEq" (formula "5") (term "1,0") (ifseqformula "1"))
      (rule "bprod_lower_equals_upper" (formula "5") (term "0"))
       (builtin "One Step Simplification" (formula "5"))
      (rule "closeTrue" (formula "5"))
   )
   (branch "Step Case"
      (rule "allRight" (formula "3") (inst "sk=nv_0") (userinteraction))
      (rule "impRight" (formula "3") (userinteraction))
      (rule "andLeft" (formula "1"))
      (rule "allRight" (formula "5") (inst "sk=i_0") (userinteraction))
      (rule "impRight" (formula "5"))
      (rule "andLeft" (formula "1"))
      (rule "andLeft" (formula "1"))
      (rule "hide_right" (formula "9") (userinteraction))
      (rule "bprod_induction_upper" (formula "8") (term "0") (userinteraction))
      (rule "bprod_induction_upper" (formula "8") (term "1,1") (userinteraction))
      (rule "eqSymm" (formula "5") (term "1,0"))
      (rule "polySimp_elimSub" (formula "8") (term "1,0,0"))
      (rule "mul_literals" (formula "8") (term "1,1,0,0"))
      (rule "polySimp_elimSub" (formula "8") (term "0,1,1,0"))
      (rule "mul_literals" (formula "8") (term "1,0,1,1,0"))
      (rule "polySimp_elimSub" (formula "8") (term "0,1,1,1,1"))
      (rule "mul_literals" (formula "8") (term "1,0,1,1,1,1"))
      (rule "polySimp_elimSub" (formula "8") (term "1,0,1,1"))
      (rule "mul_literals" (formula "8") (term "1,1,0,1,1"))
      (rule "polySimp_mulComm0" (formula "5") (term "0,1,0"))
      (rule "polySimp_mulAssoc" (formula "8") (term "1"))
      (rule "eqSymm" (formula "8"))
      (rule "polySimp_mulComm0" (formula "8") (term "0,0"))
      (rule "polySimp_addComm0" (formula "2") (term "1,1"))
      (rule "polySimp_addComm0" (formula "8") (term "1,1,0,1,0"))
      (rule "polySimp_addComm0" (formula "8") (term "1,0,0,1,1,0"))
      (rule "polySimp_addComm0" (formula "8") (term "1,0,0,1,1,1"))
      (rule "polySimp_addComm0" (formula "8") (term "1,1,0,1,1"))
      (rule "polySimp_addComm0" (formula "8") (term "1,0,1,0,1"))
      (rule "polySimp_addComm0" (formula "8") (term "1,0,1,0,0,0"))
      (rule "polySimp_addAssoc" (formula "2") (term "1"))
      (rule "polySimp_addComm0" (formula "2") (term "0,1"))
      (rule "polySimp_addAssoc" (formula "8") (term "1,0,1,0"))
      (rule "polySimp_addComm0" (formula "8") (term "0,1,0,1,0"))
      (rule "polySimp_addAssoc" (formula "8") (term "0,0,1,1,0"))
      (rule "polySimp_addComm1" (formula "8") (term "0,1,1,0"))
      (rule "polySimp_addLiterals" (formula "8") (term "0,0,1,1,0"))
      (rule "add_zero_right" (formula "8") (term "0,0,1,1,0"))
      (rule "polySimp_addAssoc" (formula "8") (term "0,0,1,1,1"))
      (rule "polySimp_addComm0" (formula "8") (term "0,0,0,1,1,1"))
      (rule "polySimp_addComm1" (formula "8") (term "0,1,1,1"))
      (rule "polySimp_addComm1" (formula "8") (term "0,0,1,1,1"))
      (rule "add_literals" (formula "8") (term "0,0,0,1,1,1"))
      (rule "add_zero_left" (formula "8") (term "0,0,1,1,1"))
      (rule "polySimp_addAssoc" (formula "8") (term "1,0,1,1"))
      (rule "polySimp_addComm0" (formula "8") (term "0,1,0,1,1"))
      (rule "polySimp_addAssoc" (formula "8") (term "0,1,0,1"))
      (rule "polySimp_addComm1" (formula "8") (term "1,0,1"))
      (rule "polySimp_addLiterals" (formula "8") (term "0,1,0,1"))
      (rule "add_zero_right" (formula "8") (term "0,1,0,1"))
      (rule "polySimp_addAssoc" (formula "8") (term "0,1,0,0,0"))
      (rule "polySimp_addComm1" (formula "8") (term "1,0,0,0"))
      (rule "polySimp_addLiterals" (formula "8") (term "0,1,0,0,0"))
      (rule "add_zero_right" (formula "8") (term "0,1,0,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "8") (term "0,1,0"))
      (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0,1,0"))
      (rule "polySimp_rightDist" (formula "8") (term "0,1,0,0,0,1,0"))
      (rule "mul_literals" (formula "8") (term "0,0,1,0,0,0,1,0"))
      (rule "polySimp_addAssoc" (formula "8") (term "0,0,0,1,0"))
      (rule "polySimp_addComm1" (formula "8") (term "0,0,1,0"))
      (rule "polySimp_addAssoc" (formula "8") (term "0,0,0,0,1,0"))
      (rule "add_literals" (formula "8") (term "0,0,0,0,0,1,0"))
      (rule "add_zero_left" (formula "8") (term "0,0,0,0,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "8") (term "0,1,1"))
      (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0,1,1"))
      (rule "polySimp_rightDist" (formula "8") (term "0,1,0,0,0,1,1"))
      (rule "mul_literals" (formula "8") (term "0,0,1,0,0,0,1,1"))
      (rule "polySimp_addAssoc" (formula "8") (term "0,0,0,1,1"))
      (rule "polySimp_addComm1" (formula "8") (term "0,0,1,1"))
      (rule "polySimp_addAssoc" (formula "8") (term "0,0,0,0,1,1"))
      (rule "add_literals" (formula "8") (term "0,0,0,0,0,1,1"))
      (rule "add_zero_left" (formula "8") (term "0,0,0,0,1,1"))
      (rule "polySimp_pullOutFactor2" (formula "8") (term "0,0,0,1,1"))
      (rule "add_literals" (formula "8") (term "1,0,0,0,1,1"))
      (rule "times_zero_1" (formula "8") (term "0,0,0,1,1"))
      (rule "add_zero_left" (formula "8") (term "0,0,1,1"))
      (rule "inEqSimp_commuteLeq" (formula "6"))
      (rule "inEqSimp_commuteLeq" (formula "1"))
      (rule "inEqSimp_commuteLeq" (formula "5") (term "0,0,0,0"))
      (rule "inEqSimp_homoInEq0" (formula "2"))
      (rule "polySimp_addComm1" (formula "2") (term "0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "8") (term "0,1,0"))
      (rule "polySimp_mulLiterals" (formula "8") (term "0,0,1,0"))
      (rule "polySimp_elimOne" (formula "8") (term "0,0,1,0"))
      (rule "inEqSimp_invertInEq0" (formula "8") (term "0,1,1"))
      (rule "times_zero_2" (formula "8") (term "1,0,1,1"))
      (rule "polySimp_mulLiterals" (formula "8") (term "0,0,1,1"))
      (rule "polySimp_elimOne" (formula "8") (term "0,0,1,1"))
      (rule "replace_known_left" (formula "8") (term "0,1,1") (ifseqformula "4"))
       (builtin "One Step Simplification" (formula "8"))
      (rule "inEqSimp_sepPosMonomial1" (formula "2"))
      (rule "polySimp_mulComm0" (formula "2") (term "1"))
      (rule "polySimp_rightDist" (formula "2") (term "1"))
      (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
      (rule "polySimp_elimOne" (formula "2") (term "1,1"))
      (rule "polySimp_rightDist" (formula "2") (term "0,1"))
      (rule "mul_literals" (formula "2") (term "0,0,1"))
      (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "7"))
      (rule "polySimp_mulComm0" (formula "6") (term "0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "6"))
      (rule "polySimp_mulLiterals" (formula "6") (term "1"))
      (rule "polySimp_elimOne" (formula "6") (term "1"))
      (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "3"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1"))
      (rule "polySimp_elimOne" (formula "1") (term "1"))
      (rule "nnf_imp2or" (formula "5") (term "0"))
      (rule "nnf_notAnd" (formula "5") (term "0,0"))
      (rule "inEqSimp_notLeq" (formula "5") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "5") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "5") (term "1,1,0,0"))
      (rule "polySimp_rightDist" (formula "5") (term "1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "5") (term "1,1,1,0,0"))
      (rule "mul_literals" (formula "5") (term "0,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "5") (term "1,1,1,0,0"))
      (rule "nnf_notAnd" (formula "5") (term "0,0,0"))
      (rule "inEqSimp_notLeq" (formula "5") (term "1,0,0,0"))
      (rule "polySimp_rightDist" (formula "5") (term "1,0,0,1,0,0,0"))
      (rule "polySimp_mulComm0" (formula "5") (term "0,1,0,0,1,0,0,0"))
      (rule "polySimp_addAssoc" (formula "5") (term "0,0,1,0,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "5") (term "1,0,0,0"))
      (rule "polySimp_mulComm0" (formula "5") (term "1,1,0,0,0"))
      (rule "polySimp_rightDist" (formula "5") (term "1,1,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "5") (term "1,1,1,0,0,0"))
      (rule "polySimp_elimOne" (formula "5") (term "1,1,1,0,0,0"))
      (rule "polySimp_rightDist" (formula "5") (term "0,1,1,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1,1,0,0,0"))
      (rule "mul_literals" (formula "5") (term "0,0,1,1,0,0,0"))
      (rule "polySimp_elimOne" (formula "5") (term "1,0,1,1,0,0,0"))
      (rule "inEqSimp_notGeq" (formula "5") (term "0,0,0,0"))
      (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "0,0,0,0"))
      (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,0"))
      (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0,0,0"))
      (rule "mul_literals" (formula "5") (term "0,1,0,0,0,0"))
      (rule "polySimp_elimOne" (formula "5") (term "1,1,0,0,0,0"))
      (rule "commute_or_2" (formula "5") (term "0,0"))
      (rule "ifthenelse_split" (formula "9") (term "1,0"))
      (branch "nv_0 >= f_i0 * -1 + i_0 TRUE"
         (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "1"))
         (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
         (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "3") (term "0,1,0,0"))
         (rule "mul_literals" (formula "3") (term "0,0,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,0,0"))
         (rule "polySimp_elimOne" (formula "3") (term "1,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
         (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0"))
         (rule "add_literals" (formula "3") (term "1,1,0,0"))
         (rule "times_zero_1" (formula "3") (term "1,0,0"))
         (rule "add_zero_right" (formula "3") (term "0,0"))
         (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
         (rule "polySimp_addComm0" (formula "3") (term "0,0,0"))
         (rule "polySimp_pullOutFactor2b" (formula "3") (term "0,0"))
         (rule "add_literals" (formula "3") (term "1,1,0,0"))
         (rule "times_zero_1" (formula "3") (term "1,0,0"))
         (rule "add_zero_right" (formula "3") (term "0,0"))
         (rule "qeq_literals" (formula "3") (term "0"))
          (builtin "One Step Simplification" (formula "3"))
         (rule "true_left" (formula "3"))
         (rule "cancel_equation" (formula "9"))
         (branch "Case 1"
            (rule "allLeft" (formula "5") (inst "t=f_i0"))
            (rule "bprod_lower_equals_upper" (formula "5") (term "1,0,1"))
            (rule "polySimp_homoEq" (formula "5") (term "1"))
            (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1"))
            (rule "polySimp_pullOutFactor1" (formula "5") (term "0,1"))
            (rule "add_literals" (formula "5") (term "1,0,1"))
            (rule "times_zero_1" (formula "5") (term "0,1"))
             (builtin "One Step Simplification" (formula "5"))
            (rule "true_left" (formula "5"))
            (rule "allLeft" (formula "5") (inst "t=add(f_i0, nv_0)"))
            (rule "bprod_lower_equals_upper" (formula "5") (term "0,0,1"))
            (rule "polySimp_elimOneLeft0" (formula "5") (term "0,1"))
             (builtin "One Step Simplification" (formula "5"))
            (rule "true_left" (formula "5"))
            (rule "bprod_find" (formula "5") (term "1,1,0") (inst "middle=i_0"))
            (rule "eqSymm" (formula "5") (term "1,0"))
            (rule "polySimp_mulComm0" (formula "5") (term "1,0,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "5") (term "0,0,0,1,0"))
            (rule "replace_known_left" (formula "5") (term "0,0,0,1,0") (ifseqformula "2"))
             (builtin "One Step Simplification" (formula "5"))
            (rule "inEqSimp_homoInEq0" (formula "5") (term "0,0,1,0"))
            (rule "polySimp_addComm1" (formula "5") (term "0,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "5") (term "0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "5") (term "1,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "5") (term "1,1,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "5") (term "0,1,0,0,1,0"))
            (rule "replace_known_left" (formula "5") (term "0,0,1,0") (ifseqformula "1"))
             (builtin "One Step Simplification" (formula "5"))
            (rule "eqSymm" (formula "5") (term "1,0"))
            (rule "allLeft" (formula "5") (inst "t=f_i0"))
            (rule "bprod_lower_equals_upper" (formula "5") (term "1,0,1"))
            (rule "eqSymm" (formula "5") (term "1"))
            (rule "polySimp_elimOne" (formula "5") (term "1,1"))
            (rule "replace_known_right" (formula "5") (term "1") (ifseqformula "10"))
             (builtin "One Step Simplification" (formula "5"))
            (rule "inEqSimp_homoInEq1" (formula "5") (term "1,0"))
            (rule "polySimp_addComm1" (formula "5") (term "0,1,0"))
            (rule "inEqSimp_homoInEq1" (formula "5") (term "1"))
            (rule "polySimp_addComm1" (formula "5") (term "0,1"))
            (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,1"))
            (rule "add_literals" (formula "5") (term "1,1,0,0,1"))
            (rule "times_zero_1" (formula "5") (term "1,0,0,1"))
            (rule "add_zero_right" (formula "5") (term "0,0,1"))
            (rule "inEqSimp_homoInEq0" (formula "5") (term "0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,0"))
            (rule "add_literals" (formula "5") (term "1,1,0,0,0"))
            (rule "times_zero_1" (formula "5") (term "1,0,0,0"))
            (rule "add_zero_right" (formula "5") (term "0,0,0"))
            (rule "qeq_literals" (formula "5") (term "0,0"))
             (builtin "One Step Simplification" (formula "5"))
            (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "0"))
            (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
            (rule "polySimp_rightDist" (formula "5") (term "1,0"))
            (rule "mul_literals" (formula "5") (term "0,1,0"))
            (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0"))
            (rule "polySimp_elimOne" (formula "5") (term "1,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "1"))
            (rule "mul_literals" (formula "5") (term "1,1"))
            (rule "inEqSimp_contradInEq1" (formula "5") (term "1") (ifseqformula "4"))
            (rule "qeq_literals" (formula "5") (term "0,1"))
             (builtin "One Step Simplification" (formula "5"))
            (rule "inEqSimp_contradInEq1" (formula "5") (ifseqformula "7"))
            (rule "andLeft" (formula "5"))
            (rule "inEqSimp_homoInEq1" (formula "5"))
            (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
            (rule "polySimp_rightDist" (formula "5") (term "1,0"))
            (rule "mul_literals" (formula "5") (term "0,1,0"))
            (rule "polySimp_addAssoc" (formula "5") (term "0"))
            (rule "polySimp_addComm0" (formula "5") (term "0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "5") (term "0"))
            (rule "add_literals" (formula "5") (term "1,1,0"))
            (rule "times_zero_1" (formula "5") (term "1,0"))
            (rule "add_zero_right" (formula "5") (term "0"))
            (rule "leq_literals" (formula "5"))
            (rule "closeFalse" (formula "5"))
         )
         (branch "Case 2"
            (rule "notRight" (formula "9"))
            (rule "applyEqRigid" (formula "10") (term "1,0") (ifseqformula "1"))
            (rule "times_zero_1" (formula "10") (term "0"))
            (rule "eqSymm" (formula "10"))
            (rule "applyEq" (formula "10") (term "1,0") (ifseqformula "1"))
            (rule "times_zero_1" (formula "10") (term "0"))
             (builtin "One Step Simplification" (formula "10"))
            (rule "closeTrue" (formula "10"))
         )
      )
      (branch "nv_0 >= f_i0 * -1 + i_0 FALSE"
         (rule "polySimp_elimOne" (formula "10") (term "0"))
         (rule "inEqSimp_geqRight" (formula "9"))
         (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
         (rule "polySimp_mulAssoc" (formula "1") (term "0,1,0,0"))
         (rule "polySimp_mulComm0" (formula "1") (term "0,0,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0"))
         (rule "polySimp_elimOne" (formula "1") (term "0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "1"))
         (rule "polySimp_mulComm0" (formula "1") (term "1"))
         (rule "polySimp_rightDist" (formula "1") (term "1"))
         (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
         (rule "polySimp_elimOne" (formula "1") (term "1,1"))
         (rule "polySimp_rightDist" (formula "1") (term "0,1"))
         (rule "mul_literals" (formula "1") (term "0,0,1"))
         (rule "inEqSimp_antiSymm" (formula "3") (ifseqformula "1"))
         (rule "applyEqRigid" (formula "1") (term "0") (ifseqformula "3"))
         (rule "inEqSimp_homoInEq0" (formula "1"))
         (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
         (rule "add_literals" (formula "1") (term "1,0"))
         (rule "times_zero_1" (formula "1") (term "0"))
         (rule "qeq_literals" (formula "1"))
         (rule "true_left" (formula "1"))
         (rule "applyEq" (formula "5") (term "0") (ifseqformula "2"))
         (rule "applyEq" (formula "3") (term "0") (ifseqformula "2"))
         (rule "inEqSimp_homoInEq1" (formula "3"))
         (rule "polySimp_pullOutFactor1" (formula "3") (term "0"))
         (rule "add_literals" (formula "3") (term "1,0"))
         (rule "times_zero_1" (formula "3") (term "0"))
         (rule "leq_literals" (formula "3"))
         (rule "true_left" (formula "3"))
         (rule "applyEqRigid" (formula "9") (term "1,1,0,0") (ifseqformula "2"))
         (rule "polySimp_addAssoc" (formula "9") (term "1,0,0"))
         (rule "polySimp_addAssoc" (formula "9") (term "0,1,0,0"))
         (rule "polySimp_addComm0" (formula "9") (term "0,0,1,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,1,0,0"))
         (rule "add_literals" (formula "9") (term "1,1,0,1,0,0"))
         (rule "times_zero_1" (formula "9") (term "1,0,1,0,0"))
         (rule "add_zero_right" (formula "9") (term "0,1,0,0"))
         (rule "applyEq" (formula "5") (term "1,1,1,0,0") (ifseqformula "2"))
         (rule "polySimp_addAssoc" (formula "5") (term "1,1,0,0"))
         (rule "polySimp_addAssoc" (formula "5") (term "0,1,1,0,0"))
         (rule "polySimp_addComm1" (formula "5") (term "0,0,1,1,0,0"))
         (rule "add_literals" (formula "5") (term "0,0,0,1,1,0,0"))
         (rule "add_zero_left" (formula "5") (term "0,0,1,1,0,0"))
         (rule "polySimp_pullOutFactor1" (formula "5") (term "0,1,1,0,0"))
         (rule "add_literals" (formula "5") (term "1,0,1,1,0,0"))
         (rule "times_zero_1" (formula "5") (term "0,1,1,0,0"))
         (rule "add_zero_left" (formula "5") (term "1,1,0,0"))
         (rule "applyEq" (formula "5") (term "1,1,0,0,1,0") (ifseqformula "2"))
         (rule "polySimp_addAssoc" (formula "5") (term "1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "5") (term "0,1,0,0,1,0"))
         (rule "polySimp_addComm0" (formula "5") (term "0,0,1,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,1,0,0,1,0"))
         (rule "add_literals" (formula "5") (term "1,1,0,1,0,0,1,0"))
         (rule "times_zero_1" (formula "5") (term "1,0,1,0,0,1,0"))
         (rule "add_zero_right" (formula "5") (term "0,1,0,0,1,0"))
         (rule "applyEq" (formula "9") (term "1,0,1,1") (ifseqformula "2"))
         (rule "polySimp_addAssoc" (formula "9") (term "0,1,1"))
         (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,1"))
         (rule "polySimp_addComm0" (formula "9") (term "0,0,0,1,1"))
         (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,1,1"))
         (rule "add_literals" (formula "9") (term "1,1,0,0,1,1"))
         (rule "times_zero_1" (formula "9") (term "1,0,0,1,1"))
         (rule "add_zero_right" (formula "9") (term "0,0,1,1"))
         (rule "applyEqRigid" (formula "5") (term "1,1,1,1,0") (ifseqformula "2"))
         (rule "polySimp_addAssoc" (formula "5") (term "1,1,1,0"))
         (rule "polySimp_addAssoc" (formula "5") (term "0,1,1,1,0"))
         (rule "polySimp_addComm0" (formula "5") (term "0,0,1,1,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,1,1,1,0"))
         (rule "add_literals" (formula "5") (term "1,1,0,1,1,1,0"))
         (rule "times_zero_1" (formula "5") (term "1,0,1,1,1,0"))
         (rule "add_zero_right" (formula "5") (term "0,1,1,1,0"))
         (rule "applyEq" (formula "9") (term "1,1,0,1") (ifseqformula "2"))
         (rule "polySimp_addAssoc" (formula "9") (term "1,0,1"))
         (rule "polySimp_addAssoc" (formula "9") (term "0,1,0,1"))
         (rule "polySimp_addComm0" (formula "9") (term "0,0,1,0,1"))
         (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,1,0,1"))
         (rule "add_literals" (formula "9") (term "1,1,0,1,0,1"))
         (rule "times_zero_1" (formula "9") (term "1,0,1,0,1"))
         (rule "add_zero_right" (formula "9") (term "0,1,0,1"))
         (rule "inEqSimp_sepPosMonomial1" (formula "4"))
         (rule "polySimp_mulComm0" (formula "4") (term "1"))
         (rule "polySimp_rightDist" (formula "4") (term "1"))
         (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
         (rule "mul_literals" (formula "4") (term "0,1"))
         (rule "polySimp_elimOne" (formula "4") (term "1,1"))
         (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "4"))
         (rule "inEqSimp_homoInEq0" (formula "1") (term "0"))
         (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0"))
         (rule "add_literals" (formula "1") (term "1,1,0,0"))
         (rule "times_zero_1" (formula "1") (term "1,0,0"))
         (rule "add_zero_right" (formula "1") (term "0,0"))
         (rule "qeq_literals" (formula "1") (term "0"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "true_left" (formula "1"))
         (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "2"))
         (rule "polySimp_rightDist" (formula "3") (term "0,0"))
         (rule "mul_literals" (formula "3") (term "0,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "3"))
         (rule "polySimp_mulComm0" (formula "3") (term "1"))
         (rule "polySimp_rightDist" (formula "3") (term "1"))
         (rule "mul_literals" (formula "3") (term "0,1"))
         (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
         (rule "polySimp_elimOne" (formula "3") (term "1,1"))
         (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "3"))
         (rule "inEqSimp_homoInEq0" (formula "6") (term "0"))
         (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0"))
         (rule "add_literals" (formula "6") (term "1,1,0,0"))
         (rule "times_zero_1" (formula "6") (term "1,0,0"))
         (rule "add_zero_right" (formula "6") (term "0,0"))
         (rule "qeq_literals" (formula "6") (term "0"))
          (builtin "One Step Simplification" (formula "6"))
         (rule "true_left" (formula "6"))
         (rule "allLeft" (formula "5") (inst "t=f_i0"))
         (rule "bprod_lower_equals_upper" (formula "5") (term "1,0,1"))
         (rule "polySimp_homoEq" (formula "5") (term "1"))
         (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1"))
         (rule "polySimp_pullOutFactor1" (formula "5") (term "0,1"))
         (rule "add_literals" (formula "5") (term "1,0,1"))
         (rule "times_zero_1" (formula "5") (term "0,1"))
          (builtin "One Step Simplification" (formula "5"))
         (rule "true_left" (formula "5"))
         (rule "allLeft" (formula "5") (inst "t=add(Z(neglit(1(#))), i_0)"))
         (rule "bprod_lower_equals_upper" (formula "5") (term "0,0,1"))
         (rule "polySimp_elimOneLeft0" (formula "5") (term "0,1"))
          (builtin "One Step Simplification" (formula "5"))
         (rule "true_left" (formula "5"))
         (rule "bprod_find" (formula "5") (term "1,0,1,0") (inst "middle=i_0"))
         (rule "polySimp_mulComm0" (formula "5") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "5") (term "1,0,0,0,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "5") (term "0,0,0,0,1,0"))
         (rule "inEqSimp_subsumption1" (formula "5") (term "0,0,0,0,1,0") (ifseqformula "4"))
         (rule "inEqSimp_homoInEq0" (formula "5") (term "0,0,0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,0,0,0,0,1,0"))
         (rule "add_literals" (formula "5") (term "1,1,0,0,0,0,0,0,1,0"))
         (rule "times_zero_1" (formula "5") (term "1,0,0,0,0,0,0,1,0"))
         (rule "add_zero_right" (formula "5") (term "0,0,0,0,0,0,1,0"))
         (rule "qeq_literals" (formula "5") (term "0,0,0,0,0,1,0"))
          (builtin "One Step Simplification" (formula "5"))
         (rule "allLeft" (formula "5") (inst "t=add(Z(neglit(1(#))), i_0)"))
         (rule "bprod_lower_equals_upper" (formula "5") (term "1,0,1"))
         (rule "polySimp_elimOne" (formula "5") (term "0,1"))
          (builtin "One Step Simplification" (formula "5"))
         (rule "inEqSimp_homoInEq1" (formula "5") (term "0,0,1"))
         (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,1"))
         (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0,1"))
         (rule "mul_literals" (formula "5") (term "0,1,0,0,0,1"))
         (rule "polySimp_addAssoc" (formula "5") (term "0,0,0,1"))
         (rule "polySimp_addComm0" (formula "5") (term "0,0,0,0,1"))
         (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,0,1"))
         (rule "add_literals" (formula "5") (term "1,1,0,0,0,1"))
         (rule "times_zero_1" (formula "5") (term "1,0,0,0,1"))
         (rule "add_zero_right" (formula "5") (term "0,0,0,1"))
         (rule "leq_literals" (formula "5") (term "0,0,1"))
          (builtin "One Step Simplification" (formula "5"))
         (rule "true_left" (formula "5"))
         (rule "allLeft" (formula "5") (inst "t=f_i0"))
         (rule "bprod_lower_equals_upper" (formula "5") (term "2,0,0,1"))
         (rule "inEqSimp_commuteGeq" (formula "5") (term "0,0,0,1"))
         (rule "inEqSimp_commuteGeq" (formula "5") (term "1,0"))
         (rule "inEqSimp_homoInEq1" (formula "5") (term "1,0,0"))
         (rule "polySimp_addComm1" (formula "5") (term "0,1,0,0"))
         (rule "inEqSimp_homoInEq0" (formula "5") (term "0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,0,0"))
         (rule "add_literals" (formula "5") (term "1,1,0,0,0,0"))
         (rule "times_zero_1" (formula "5") (term "1,0,0,0,0"))
         (rule "add_zero_right" (formula "5") (term "0,0,0,0"))
         (rule "qeq_literals" (formula "5") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "5"))
         (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
         (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0"))
         (rule "mul_literals" (formula "5") (term "0,1,0,0"))
         (rule "polySimp_elimOne" (formula "5") (term "1,1,0,0"))
         (rule "inEqSimp_contradInEq1" (formula "5") (term "0,0,0,1") (ifseqformula "4"))
         (rule "inEqSimp_homoInEq1" (formula "5") (term "0,0,0,0,1"))
         (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,0,0,0,1"))
         (rule "add_literals" (formula "5") (term "1,1,0,0,0,0,0,1"))
         (rule "times_zero_1" (formula "5") (term "1,0,0,0,0,0,1"))
         (rule "add_zero_right" (formula "5") (term "0,0,0,0,0,1"))
         (rule "leq_literals" (formula "5") (term "0,0,0,0,1"))
          (builtin "One Step Simplification" (formula "5"))
         (rule "polySimp_elimOneLeft0" (formula "5") (term "0,1"))
          (builtin "One Step Simplification" (formula "5"))
         (rule "true_left" (formula "5"))
         (rule "bprod_find" (formula "8") (term "1,0") (inst "middle=add(Z(neglit(1(#))), i_0)"))
         (rule "bprod_one_factor_concrete2" (formula "8") (term "1,1,1,0"))
         (rule "polySimp_mulComm0" (formula "8") (term "0"))
         (rule "inEqSimp_homoInEq0" (formula "8") (term "0,0,0,0"))
         (rule "polySimp_addComm1" (formula "8") (term "0,0,0,0,0"))
         (rule "inEqSimp_homoInEq0" (formula "8") (term "1,0,0,0"))
         (rule "polySimp_mulComm0" (formula "8") (term "1,0,1,0,0,0"))
         (rule "polySimp_rightDist" (formula "8") (term "1,0,1,0,0,0"))
         (rule "mul_literals" (formula "8") (term "0,1,0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "8") (term "0,1,0,0,0"))
         (rule "polySimp_addComm0" (formula "8") (term "0,0,1,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,1,0,0,0"))
         (rule "add_literals" (formula "8") (term "1,1,0,1,0,0,0"))
         (rule "times_zero_1" (formula "8") (term "1,0,1,0,0,0"))
         (rule "add_zero_right" (formula "8") (term "0,1,0,0,0"))
         (rule "qeq_literals" (formula "8") (term "1,0,0,0"))
          (builtin "One Step Simplification" (formula "8"))
         (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "0,0,0"))
         (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0"))
         (rule "mul_literals" (formula "8") (term "0,1,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,0"))
         (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0,0"))
         (rule "replace_known_left" (formula "8") (term "0,0,0") (ifseqformula "4"))
          (builtin "One Step Simplification" (formula "8"))
         (rule "polySimp_mulComm1" (formula "8") (term "0"))
         (rule "polySimp_mulComm0" (formula "8") (term "0,0"))
         (rule "cancel_equation" (formula "8"))
         (branch "Case 1"
            (rule "bprod_find" (formula "5") (term "1,1,0,0,1,0") (inst "middle=add(Z(neglit(1(#))), i_0)"))
            (rule "bprod_one_factor_concrete2" (formula "5") (term "1,1,1,1,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,1,0"))
            (rule "inEqSimp_homoInEq0" (formula "5") (term "0,0,0,1,0,0,1,0"))
            (rule "polySimp_addComm1" (formula "5") (term "0,0,0,0,1,0,0,1,0"))
            (rule "inEqSimp_homoInEq0" (formula "5") (term "1,0,0,1,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "5") (term "1,0,1,0,0,1,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "5") (term "1,0,1,0,0,1,0,0,1,0"))
            (rule "mul_literals" (formula "5") (term "0,1,0,1,0,0,1,0,0,1,0"))
            (rule "polySimp_addAssoc" (formula "5") (term "0,1,0,0,1,0,0,1,0"))
            (rule "polySimp_addComm0" (formula "5") (term "0,0,1,0,0,1,0,0,1,0"))
            (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,1,0,0,1,0,0,1,0"))
            (rule "add_literals" (formula "5") (term "1,1,0,1,0,0,1,0,0,1,0"))
            (rule "times_zero_1" (formula "5") (term "1,0,1,0,0,1,0,0,1,0"))
            (rule "add_zero_right" (formula "5") (term "0,1,0,0,1,0,0,1,0"))
            (rule "qeq_literals" (formula "5") (term "1,0,0,1,0,0,1,0"))
             (builtin "One Step Simplification" (formula "5"))
            (rule "inEqSimp_sepPosMonomial1" (formula "5") (term "0,0,1,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,1,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "5") (term "1,0,0,1,0,0,1,0"))
            (rule "mul_literals" (formula "5") (term "0,1,0,0,1,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0,1,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "5") (term "1,1,0,0,1,0,0,1,0"))
            (rule "replace_known_left" (formula "5") (term "0,0,1,0,0,1,0") (ifseqformula "4"))
             (builtin "One Step Simplification" (formula "5"))
            (rule "polySimp_mulComm1" (formula "5") (term "1,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "5") (term "0,1,0,0,1,0"))
            (rule "allLeft" (formula "5") (inst "t=add(Z(neglit(1(#))), i_0)"))
            (rule "bprod_lower_equals_upper" (formula "5") (term "1,0,1"))
            (rule "polySimp_elimOne" (formula "5") (term "0,1"))
             (builtin "One Step Simplification" (formula "5"))
            (rule "inEqSimp_homoInEq1" (formula "5") (term "0,0,1"))
            (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,1"))
            (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0,1"))
            (rule "mul_literals" (formula "5") (term "0,1,0,0,0,1"))
            (rule "polySimp_addAssoc" (formula "5") (term "0,0,0,1"))
            (rule "polySimp_addComm0" (formula "5") (term "0,0,0,0,1"))
            (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,0,1"))
            (rule "add_literals" (formula "5") (term "1,1,0,0,0,1"))
            (rule "times_zero_1" (formula "5") (term "1,0,0,0,1"))
            (rule "add_zero_right" (formula "5") (term "0,0,0,1"))
            (rule "leq_literals" (formula "5") (term "0,0,1"))
             (builtin "One Step Simplification" (formula "5"))
            (rule "true_left" (formula "5"))
            (rule "allLeft" (formula "5") (inst "t=f_i0"))
            (rule "bprod_lower_equals_upper" (formula "5") (term "2,0,0,1"))
            (rule "inEqSimp_commuteGeq" (formula "5") (term "1,0"))
            (rule "inEqSimp_commuteGeq" (formula "5") (term "0,0,0,1"))
            (rule "inEqSimp_homoInEq1" (formula "5") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "5") (term "0,1,0,0"))
            (rule "inEqSimp_homoInEq0" (formula "5") (term "0,0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,0,0"))
            (rule "add_literals" (formula "5") (term "1,1,0,0,0,0"))
            (rule "times_zero_1" (formula "5") (term "1,0,0,0,0"))
            (rule "add_zero_right" (formula "5") (term "0,0,0,0"))
            (rule "qeq_literals" (formula "5") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "5"))
            (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "0,0"))
            (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
            (rule "mul_literals" (formula "5") (term "0,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "5") (term "1,1,0,0"))
            (rule "inEqSimp_contradInEq1" (formula "5") (term "0,0") (ifseqformula "3"))
            (rule "inEqSimp_homoInEq1" (formula "5") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,0"))
            (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0,0"))
            (rule "mul_literals" (formula "5") (term "0,1,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "5") (term "0,0,0,0"))
            (rule "polySimp_addComm1" (formula "5") (term "0,0,0,0,0"))
            (rule "add_literals" (formula "5") (term "0,0,0,0,0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,0,0"))
            (rule "add_literals" (formula "5") (term "1,1,0,0,0,0"))
            (rule "times_zero_1" (formula "5") (term "1,0,0,0,0"))
            (rule "add_zero_right" (formula "5") (term "0,0,0,0"))
            (rule "leq_literals" (formula "5") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "5"))
            (rule "inEqSimp_contradInEq1" (formula "5") (term "0,0,0,1") (ifseqformula "4"))
            (rule "inEqSimp_homoInEq1" (formula "5") (term "0,0,0,0,1"))
            (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,0,0,0,1"))
            (rule "add_literals" (formula "5") (term "1,1,0,0,0,0,0,1"))
            (rule "times_zero_1" (formula "5") (term "1,0,0,0,0,0,1"))
            (rule "add_zero_right" (formula "5") (term "0,0,0,0,0,1"))
            (rule "leq_literals" (formula "5") (term "0,0,0,0,1"))
             (builtin "One Step Simplification" (formula "5"))
            (rule "polySimp_elimOneLeft0" (formula "5") (term "0,1"))
             (builtin "One Step Simplification" (formula "5"))
            (rule "true_left" (formula "5"))
            (rule "bprod_find" (formula "5") (term "2,0,0,1,0") (inst "middle=add(Z(neglit(1(#))), i_0)"))
            (rule "polySimp_mulComm0" (formula "5") (term "1,2,0,0,1,0"))
            (rule "bprod_induction_lower_concrete" (formula "5") (term "0,1,2,0,0,1,0"))
            (rule "polySimp_mulComm1" (formula "5") (term "1,2,0,0,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "5") (term "0,1,1,2,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,1,1,2,0,0,1,0"))
            (rule "polySimp_addComm1" (formula "5") (term "0,0,1,1,2,0,0,1,0"))
            (rule "polySimp_addAssoc" (formula "5") (term "0,0,0,1,1,2,0,0,1,0"))
            (rule "add_literals" (formula "5") (term "0,0,0,0,1,1,2,0,0,1,0"))
            (rule "add_zero_left" (formula "5") (term "0,0,0,1,1,2,0,0,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "5") (term "1,0,2,0,0,1,0"))
            (rule "inEqSimp_homoInEq0" (formula "5") (term "0,0,2,0,0,1,0"))
            (rule "polySimp_addComm1" (formula "5") (term "0,0,0,2,0,0,1,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "5") (term "0,1,1,2,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "5") (term "0,0,1,1,2,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "5") (term "0,0,1,1,2,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "5") (term "0,0,2,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,2,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "5") (term "1,0,0,2,0,0,1,0"))
            (rule "mul_literals" (formula "5") (term "0,1,0,0,2,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0,2,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "5") (term "1,1,0,0,2,0,0,1,0"))
            (rule "replace_known_left" (formula "5") (term "0,0,2,0,0,1,0") (ifseqformula "4"))
             (builtin "One Step Simplification" (formula "5"))
            (rule "allLeft" (formula "5") (inst "t=add(Z(neglit(1(#))), i_0)"))
            (rule "bprod_lower_equals_upper" (formula "5") (term "1,0,1"))
            (rule "polySimp_elimOne" (formula "5") (term "0,1"))
            (rule "inEqSimp_homoInEq0" (formula "5") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,0"))
            (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0,0"))
            (rule "mul_literals" (formula "5") (term "0,1,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "5") (term "0,0,0,0"))
            (rule "polySimp_addComm1" (formula "5") (term "0,0,0,0,0"))
            (rule "add_literals" (formula "5") (term "0,0,0,0,0,0"))
            (rule "add_zero_left" (formula "5") (term "0,0,0,0,0"))
            (rule "inEqSimp_homoInEq1" (formula "5") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "5") (term "1,0,1,0,0"))
            (rule "polySimp_rightDist" (formula "5") (term "1,0,1,0,0"))
            (rule "mul_literals" (formula "5") (term "0,1,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "5") (term "0,1,0,0"))
            (rule "polySimp_addComm1" (formula "5") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "5") (term "0,0,0,1,0,0"))
            (rule "inEqSimp_homoInEq1" (formula "5") (term "1,0"))
            (rule "polySimp_mulComm0" (formula "5") (term "1,0,1,0"))
            (rule "polySimp_rightDist" (formula "5") (term "1,0,1,0"))
            (rule "mul_literals" (formula "5") (term "0,1,0,1,0"))
            (rule "polySimp_addAssoc" (formula "5") (term "0,1,0"))
            (rule "polySimp_addComm0" (formula "5") (term "0,0,1,0"))
            (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,1,0"))
            (rule "add_literals" (formula "5") (term "1,1,0,1,0"))
            (rule "times_zero_1" (formula "5") (term "1,0,1,0"))
            (rule "add_zero_right" (formula "5") (term "0,1,0"))
            (rule "leq_literals" (formula "5") (term "1,0"))
             (builtin "One Step Simplification" (formula "5"))
            (rule "inEqSimp_homoInEq1" (formula "5") (term "0,0,1"))
            (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,1"))
            (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0,1"))
            (rule "mul_literals" (formula "5") (term "0,1,0,0,0,1"))
            (rule "polySimp_addAssoc" (formula "5") (term "0,0,0,1"))
            (rule "polySimp_addComm0" (formula "5") (term "0,0,0,0,1"))
            (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,0,1"))
            (rule "add_literals" (formula "5") (term "1,1,0,0,0,1"))
            (rule "times_zero_1" (formula "5") (term "1,0,0,0,1"))
            (rule "add_zero_right" (formula "5") (term "0,0,0,1"))
            (rule "leq_literals" (formula "5") (term "0,0,1"))
             (builtin "One Step Simplification" (formula "5"))
            (rule "inEqSimp_homoInEq1" (formula "5") (term "0,1,0,1,1"))
            (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,1,0,1,1"))
            (rule "polySimp_rightDist" (formula "5") (term "1,0,0,1,0,1,1"))
            (rule "mul_literals" (formula "5") (term "0,1,0,0,1,0,1,1"))
            (rule "polySimp_addAssoc" (formula "5") (term "0,0,1,0,1,1"))
            (rule "polySimp_addComm0" (formula "5") (term "0,0,0,1,0,1,1"))
            (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,1,0,1,1"))
            (rule "add_literals" (formula "5") (term "1,1,0,0,1,0,1,1"))
            (rule "times_zero_1" (formula "5") (term "1,0,0,1,0,1,1"))
            (rule "add_zero_right" (formula "5") (term "0,0,1,0,1,1"))
            (rule "leq_literals" (formula "5") (term "0,1,0,1,1"))
             (builtin "One Step Simplification" (formula "5"))
            (rule "polySimp_elimOne" (formula "5") (term "0,1,1"))
            (rule "replace_known_right" (formula "5") (term "1,1") (ifseqformula "9"))
             (builtin "One Step Simplification" (formula "5"))
            (rule "inEqSimp_homoInEq1" (formula "5") (term "0,1"))
            (rule "polySimp_pullOutFactor1" (formula "5") (term "0,0,1"))
            (rule "add_literals" (formula "5") (term "1,0,0,1"))
            (rule "times_zero_1" (formula "5") (term "0,0,1"))
            (rule "leq_literals" (formula "5") (term "0,1"))
             (builtin "One Step Simplification" (formula "5"))
            (rule "inEqSimp_sepNegMonomial0" (formula "5") (term "1"))
            (rule "polySimp_mulLiterals" (formula "5") (term "0,1"))
            (rule "polySimp_elimOne" (formula "5") (term "0,1"))
            (rule "inEqSimp_sepNegMonomial1" (formula "5") (term "0"))
            (rule "polySimp_mulLiterals" (formula "5") (term "0,0"))
            (rule "polySimp_elimOne" (formula "5") (term "0,0"))
            (rule "inEqSimp_contradInEq0" (formula "5") (term "1") (ifseqformula "2"))
            (rule "inEqSimp_homoInEq1" (formula "5") (term "0,1"))
            (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,1"))
            (rule "add_literals" (formula "5") (term "1,1,0,0,1"))
            (rule "times_zero_1" (formula "5") (term "1,0,0,1"))
            (rule "add_zero_right" (formula "5") (term "0,0,1"))
            (rule "leq_literals" (formula "5") (term "0,1"))
             (builtin "One Step Simplification" (formula "5"))
            (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "5"))
            (rule "andLeft" (formula "4"))
            (rule "inEqSimp_homoInEq1" (formula "4"))
            (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
            (rule "add_literals" (formula "4") (term "1,1,0"))
            (rule "times_zero_1" (formula "4") (term "1,0"))
            (rule "add_zero_right" (formula "4") (term "0"))
            (rule "leq_literals" (formula "4"))
            (rule "closeFalse" (formula "4"))
         )
         (branch "Case 2"
            (rule "notRight" (formula "8"))
            (rule "applyEq" (formula "9") (term "1,0") (ifseqformula "1"))
            (rule "times_zero_1" (formula "9") (term "0"))
            (rule "eqSymm" (formula "9"))
            (rule "applyEqRigid" (formula "9") (term "1,0") (ifseqformula "1"))
            (rule "times_zero_1" (formula "9") (term "0"))
             (builtin "One Step Simplification" (formula "9"))
            (rule "closeTrue" (formula "9"))
         )
      )
   )
   (branch "Use Case"
      (rule "eqSymm" (formula "1") (term "1,0,1,0"))
      (rule "eqSymm" (formula "4"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,1,0"))
      (rule "polySimp_mulComm0" (formula "4") (term "0"))
      (rule "inEqSimp_commuteLeq" (formula "2"))
      (rule "inEqSimp_commuteLeq" (formula "1") (term "0,0,0,0,1,0"))
      (rule "inEqSimp_homoInEq0" (formula "1") (term "1,0,0,0,1,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,1,0,0,0,1,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0,0,1,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0,0,0,1,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0,0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,1,0,0,0,1,0"))
      (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "3"))
      (rule "polySimp_mulComm0" (formula "2") (term "0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "2"))
      (rule "polySimp_mulLiterals" (formula "2") (term "1"))
      (rule "polySimp_elimOne" (formula "2") (term "1"))
      (rule "nnf_imp2or" (formula "1") (term "0"))
      (rule "inEqSimp_notGeq" (formula "1") (term "0,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0"))
      (rule "mul_literals" (formula "1") (term "1,0,0"))
      (rule "nnf_imp2or" (formula "1") (term "0,1,0"))
      (rule "nnf_notAnd" (formula "1") (term "0,0,1,0"))
      (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0,1,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0,1,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0,0,1,0"))
      (rule "mul_literals" (formula "1") (term "0,1,1,0,0,1,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0,0,1,0"))
      (rule "nnf_notAnd" (formula "1") (term "0,0,0,1,0"))
      (rule "inEqSimp_notGeq" (formula "1") (term "1,0,0,0,1,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0,0,1,0"))
      (rule "polySimp_mulAssoc" (formula "1") (term "0,1,0,0,1,0,0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,0,1,0,0,1,0,0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,1,0,0,0,1,0"))
      (rule "polySimp_elimOne" (formula "1") (term "0,1,0,0,1,0,0,0,1,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0,0,1,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1,0,0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0,0,1,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0,0,0,1,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0,0,0,1,0"))
      (rule "polySimp_rightDist" (formula "1") (term "0,1,1,0,0,0,1,0"))
      (rule "mul_literals" (formula "1") (term "0,0,1,1,0,0,0,1,0"))
      (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,0,0,0,1,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,0,1,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0,0,0,1,0"))
      (rule "mul_literals" (formula "1") (term "0,1,0,0,0,0,1,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0,0,0,1,0"))
      (rule "commute_or_2" (formula "1") (term "0,0,1,0"))
      (rule "all_pull_out3" (formula "1") (term "0"))
      (rule "shift_paren_or" (formula "1") (term "0,0"))
      (rule "shift_paren_or" (formula "1") (term "0,0,0"))
      (rule "commute_or" (formula "1") (term "0,0,0,0"))
      (rule "bprod_find" (formula "5") (term "1") (inst "middle=f_middle"))
      (rule "eqSymm" (formula "5"))
      (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
       (builtin "One Step Simplification" (formula "5"))
      (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
       (builtin "One Step Simplification" (formula "5"))
      (rule "orRight" (formula "5"))
      (rule "eqSymm" (formula "6"))
      (rule "inEqSimp_leqRight" (formula "5"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0"))
      (rule "inEqSimp_sepNegMonomial1" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0"))
      (rule "polySimp_elimOne" (formula "1") (term "0"))
      (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "4"))
      (rule "andLeft" (formula "1"))
      (rule "inEqSimp_homoInEq1" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,0"))
      (rule "mul_literals" (formula "1") (term "0,1,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "0"))
      (rule "polySimp_addComm0" (formula "1") (term "0,0"))
      (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
      (rule "add_literals" (formula "1") (term "1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,0"))
      (rule "add_zero_right" (formula "1") (term "0"))
      (rule "leq_literals" (formula "1"))
      (rule "closeFalse" (formula "1"))
   )
)
(branch "f_i0 <= f_middle & f_middle <= f_i1 FALSE"
    (builtin "One Step Simplification" (formula "2"))
   (rule "closeTrue" (formula "2"))
)
)
}
