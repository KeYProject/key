\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Wed Apr 12 13:20:26 CEST 2023
[Labels]UseOriginLabels=true
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=JavaCard-JavaCard\\:off, Strings-Strings\\:on, assertions-assertions\\:safe, bigint-bigint\\:on, floatRules-floatRules\\:strictfpOnly, initialisation-initialisation\\:disableStaticInitialisation, intRules-intRules\\:arithmeticSemanticsIgnoringOF, integerSimplificationRules-integerSimplificationRules\\:full, javaLoopTreatment-javaLoopTreatment\\:efficient, mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off, methodExpansion-methodExpansion\\:modularOnly, modelFields-modelFields\\:treatAsAxiom, moreSeqRules-moreSeqRules\\:off, permissions-permissions\\:off, programRules-programRules\\:Java, reach-reach\\:on, runtimeExceptions-runtimeExceptions\\:ban, sequences-sequences\\:on, wdChecks-wdChecks\\:off, wdOperator-wdOperator\\:L
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_NONE
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_OFF
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_RESTRICTED
[Strategy]MaximumNumberOfAutomaticApplications=2000
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[Strategy]Timeout=-1
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_ON
[SMTSettings]useUninterpretedMultiplication=true
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[SMTSettings]maxGenericSorts=2
[StrategyProperty]OSS_OPTIONS_KEY=OSS_ON
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\proofObligation {
	"name": "div_exists",
	"class": "de.uka.ilkd.key.taclettranslation.lemma.TacletProofObligationInput",
 }

\proof {
(keyLog "0" (keyUser "Julian" ) (keyVersion "80a871ca3bac8bb405ecc216fcb6fa9ef6f8a395"))

(autoModeTime "0")

(branch "dummy ID"
(rule "notRight" (formula "1") (newnames "f_divNum,f_divDenom,v_cnom,v_a,v_qu,v_rm"))
(rule "impLeft" (formula "1") (userinteraction))
(branch
    (builtin "One Step Simplification" (formula "1"))
   (rule "closeTrue" (formula "1"))
)
(branch
   (rule "notLeft" (formula "1") (userinteraction))
   (rule "allRight" (formula "1") (inst "sk=v_cnom_0") (userinteraction))
   (rule "impRight" (formula "1") (userinteraction))
   (rule "int_induction" (inst "b=\\exists int v_qu;
  \\exists int v_rm;
    (  v_a = add(mul(v_qu, v_cnom_0), v_rm)
     & leq(Z(0(#)), v_rm)
     & \\if (geq(v_cnom_0, Z(0(#))))
           \\then (  geq(mul(v_qu, v_cnom_0),
                        add(add(Z(1(#)), v_a),
                            mul(Z(neglit(1(#))),
                                v_cnom_0)))
                  & lt(v_rm, v_cnom_0))
           \\else (  geq(mul(v_qu, v_cnom_0),
                        add(add(Z(1(#)), v_a),
                            v_cnom_0))
                  & lt(v_rm, neg(v_cnom_0))))") (inst "nv=v_a") (userinteraction))
   (branch "Base Case"
      (rule "exRightHide" (formula "2") (inst "t=Z(0(#))") (userinteraction))
      (rule "exRightHide" (formula "2") (inst "t=Z(0(#))") (userinteraction))
      (rule "add_zero_right" (formula "2") (term "1,0,0"))
      (rule "leq_literals" (formula "2") (term "1,0"))
       (builtin "One Step Simplification" (formula "2"))
      (rule "times_zero_2" (formula "2") (term "0,0,1,1"))
      (rule "times_zero_2" (formula "2") (term "1,0"))
       (builtin "One Step Simplification" (formula "2"))
      (rule "add_zero_right" (formula "2") (term "0,1,0,1"))
      (rule "times_zero_2" (formula "2") (term "0,0,2"))
      (rule "add_zero_right" (formula "2") (term "0,1,0,2"))
      (rule "notLeft" (formula "1"))
      (rule "polySimp_elimNeg" (formula "2") (term "1,1,2"))
      (rule "polySimp_mulComm0" (formula "2") (term "1,1,0,1"))
      (rule "inEqSimp_ltToLeq" (formula "2") (term "1,1"))
      (rule "add_zero_right" (formula "2") (term "0,1,1"))
      (rule "polySimp_mulComm0" (formula "2") (term "1,0,1,1"))
      (rule "inEqSimp_ltToLeq" (formula "2") (term "1,2"))
      (rule "add_zero_right" (formula "2") (term "0,1,2"))
      (rule "polySimp_mulAssoc" (formula "2") (term "1,0,1,2"))
      (rule "polySimp_mulComm0" (formula "2") (term "0,1,0,1,2"))
      (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,2"))
      (rule "polySimp_elimOne" (formula "2") (term "1,0,1,2"))
      (rule "inEqSimp_homoInEq1" (formula "2") (term "0,2"))
      (rule "times_zero_2" (formula "2") (term "1,0,0,2"))
      (rule "add_zero_right" (formula "2") (term "0,0,2"))
       (builtin "One Step Simplification" (formula "2"))
      (rule "inEqSimp_homoInEq1" (formula "2") (term "0,1"))
      (rule "times_zero_2" (formula "2") (term "1,0,0,1"))
      (rule "add_zero_right" (formula "2") (term "0,0,1"))
       (builtin "One Step Simplification" (formula "2"))
      (rule "inEqSimp_sepNegMonomial0" (formula "2") (term "1"))
      (rule "polySimp_mulLiterals" (formula "2") (term "0,1"))
      (rule "polySimp_elimOne" (formula "2") (term "0,1"))
      (rule "inEqSimp_sepPosMonomial0" (formula "2") (term "2"))
      (rule "mul_literals" (formula "2") (term "1,2"))
      (rule "ifthenelse_split_for" (formula "2"))
      (branch "v_cnom_0 >= 0 TRUE"
         (rule "inEqSimp_geqRight" (formula "3"))
         (rule "mul_literals" (formula "1") (term "1,0,0"))
         (rule "add_literals" (formula "1") (term "0,0"))
         (rule "add_zero_left" (formula "1") (term "0"))
         (rule "inEqSimp_strengthen0" (formula "1") (ifseqformula "3"))
         (rule "add_zero_right" (formula "1") (term "1"))
         (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "2"))
         (rule "qeq_literals" (formula "1") (term "0"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "closeFalse" (formula "1"))
      )
      (branch "v_cnom_0 >= 0 FALSE"
         (rule "inEqSimp_leqRight" (formula "3"))
         (rule "mul_literals" (formula "1") (term "1,0,0"))
         (rule "add_literals" (formula "1") (term "0,0"))
         (rule "add_zero_left" (formula "1") (term "0"))
         (rule "close" (formula "3") (ifseqformula "1"))
      )
   )
   (branch "Step Case"
      (rule "allRight" (formula "2") (inst "sk=v_a_0") (userinteraction))
      (rule "impRight" (formula "2") (userinteraction))
      (rule "andLeft" (formula "1"))
      (rule "exLeft" (formula "2") (inst "sk=v_qu_0") (userinteraction))
      (rule "exLeft" (formula "2") (inst "sk=v_rm_0") (userinteraction))
      (rule "andLeft" (formula "2"))
      (rule "andLeft" (formula "2"))
      (rule "cut" (inst "cutFormula=geq(v_cnom_0, Z(0(#)))") (userinteraction))
      (branch "CUT: v_cnom_0 >= 0 TRUE"
         (rule "replace_known_left" (formula "5") (term "0") (ifseqformula "1") (userinteraction))
          (builtin "One Step Simplification" (formula "5"))
         (rule "andLeft" (formula "5") (userinteraction))
         (rule "cut" (inst "cutFormula=lt(v_rm_0, sub(v_cnom_0, Z(1(#))))") (userinteraction))
         (branch "CUT: v_rm_0 < v_cnom_0 - 1 TRUE"
            (rule "exRightHide" (formula "9") (inst "t=v_qu_0") (userinteraction))
            (rule "exRightHide" (formula "9") (inst "t=add(v_rm_0, Z(1(#)))") (userinteraction))
            (rule "replace_known_left" (formula "9") (term "0,1") (ifseqformula "2"))
             (builtin "One Step Simplification" (formula "9"))
            (rule "polySimp_homoEq" (formula "4"))
            (rule "polySimp_elimSub" (formula "1") (term "1"))
            (rule "mul_literals" (formula "1") (term "1,1"))
            (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,1"))
            (rule "polySimp_addComm0" (formula "9") (term "0,1,1"))
            (rule "polySimp_addComm0" (formula "9") (term "1,1,0"))
            (rule "polySimp_addComm0" (formula "9") (term "0,0,0"))
            (rule "polySimp_addComm0" (formula "9") (term "1,0,0"))
            (rule "polySimp_homoEq" (formula "9") (term "0,0"))
            (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0"))
            (rule "polySimp_addComm0" (formula "9") (term "1,0,1,0,1"))
            (rule "polySimp_addComm1" (formula "4") (term "0"))
            (rule "polySimp_addComm0" (formula "1") (term "1"))
            (rule "polySimp_addComm0" (formula "9") (term "0,0,0,0,0"))
            (rule "polySimp_addComm0" (formula "4") (term "0,0"))
            (rule "polySimp_addComm1" (formula "4") (term "0"))
            (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0"))
            (rule "mul_literals" (formula "9") (term "0,1,0,0,0"))
            (rule "polySimp_addComm1" (formula "9") (term "0,0,0"))
            (rule "polySimp_addComm1" (formula "9") (term "0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "9") (term "0,1,0,1"))
            (rule "add_literals" (formula "9") (term "0,0,1,0,1"))
            (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,0,0"))
            (rule "add_literals" (formula "9") (term "0,0,0,0,0,0"))
            (rule "add_zero_left" (formula "9") (term "0,0,0,0,0"))
            (rule "replace_known_left" (formula "9") (term "0,0") (ifseqformula "4"))
             (builtin "One Step Simplification" (formula "9"))
            (rule "inEqSimp_ltToLeq" (formula "1"))
            (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
            (rule "mul_literals" (formula "1") (term "0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
            (rule "add_literals" (formula "1") (term "0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "9") (term "1,1"))
            (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,1"))
            (rule "polySimp_addAssoc" (formula "9") (term "0,1,1"))
            (rule "polySimp_addComm1" (formula "9") (term "0,0,1,1"))
            (rule "add_literals" (formula "9") (term "0,0,0,1,1"))
            (rule "replace_known_left" (formula "9") (term "1,1") (ifseqformula "1"))
             (builtin "One Step Simplification" (formula "9"))
            (rule "inEqSimp_commuteLeq" (formula "5"))
            (rule "inEqSimp_homoInEq0" (formula "9") (term "0"))
            (rule "times_zero_2" (formula "9") (term "1,0,0"))
            (rule "add_zero_right" (formula "9") (term "0,0"))
            (rule "polySimp_sepPosMonomial" (formula "4"))
            (rule "polySimp_mulComm0" (formula "4") (term "1"))
            (rule "polySimp_rightDist" (formula "4") (term "1"))
            (rule "polySimp_mulAssoc" (formula "4") (term "0,1"))
            (rule "polySimp_mulComm0" (formula "4") (term "0,0,1"))
            (rule "polySimp_mulLiterals" (formula "4") (term "0,1"))
            (rule "polySimp_elimOne" (formula "4") (term "0,1"))
            (rule "applyEq" (formula "9") (term "0,1") (ifseqformula "4"))
            (rule "inEqSimp_homoInEq1" (formula "9") (term "1"))
            (rule "polySimp_mulComm0" (formula "9") (term "1,0,1"))
            (rule "polySimp_rightDist" (formula "9") (term "1,0,1"))
            (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,1"))
            (rule "polySimp_elimOne" (formula "9") (term "1,1,0,1"))
            (rule "polySimp_mulComm0" (formula "9") (term "0,1,0,1"))
            (rule "polySimp_addAssoc" (formula "9") (term "0,1"))
            (rule "polySimp_addComm1" (formula "9") (term "0,0,1"))
            (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,0,1"))
            (rule "add_literals" (formula "9") (term "1,1,0,0,0,1"))
            (rule "times_zero_1" (formula "9") (term "1,0,0,0,1"))
            (rule "add_zero_right" (formula "9") (term "0,0,0,1"))
            (rule "replace_known_left" (formula "9") (term "1") (ifseqformula "1"))
             (builtin "One Step Simplification" (formula "9"))
            (rule "inEqSimp_geqRight" (formula "9"))
            (rule "times_zero_1" (formula "1") (term "1,0,0"))
            (rule "add_zero_right" (formula "1") (term "0,0"))
            (rule "polySimp_addAssoc" (formula "1") (term "0"))
            (rule "add_literals" (formula "1") (term "0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "1"))
            (rule "mul_literals" (formula "1") (term "1"))
            (rule "inEqSimp_contradInEq0" (formula "6") (ifseqformula "1"))
            (rule "qeq_literals" (formula "6") (term "0"))
             (builtin "One Step Simplification" (formula "6"))
            (rule "closeFalse" (formula "6"))
         )
         (branch "CUT: v_rm_0 < v_cnom_0 - 1 FALSE"
            (rule "cut" (inst "cutFormula=v_rm_0 = sub(v_cnom_0, Z(1(#)))") (userinteraction))
            (branch "CUT: v_rm_0 = v_cnom_0 - 1 TRUE"
               (rule "exRightHide" (formula "10") (inst "t=add(v_qu_0, Z(1(#)))") (userinteraction))
               (rule "exRightHide" (formula "10") (inst "t=Z(0(#))") (userinteraction))
               (rule "add_zero_right" (formula "10") (term "1,0,0"))
               (rule "leq_literals" (formula "10") (term "1,0"))
                (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "2")))
               (rule "eqSymm" (formula "1"))
               (rule "polySimp_homoEq" (formula "4"))
               (rule "polySimp_elimSub" (formula "1") (term "0"))
               (rule "mul_literals" (formula "1") (term "1,0"))
               (rule "eqSymm" (formula "1"))
               (rule "polySimp_mulComm0" (formula "10") (term "0,0,1"))
               (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,1"))
               (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
               (rule "polySimp_addComm0" (formula "10") (term "0,0"))
               (rule "polySimp_addComm0" (formula "10") (term "1,0,1,0,1"))
               (rule "polySimp_addComm0" (formula "4") (term "0,0"))
               (rule "polySimp_addComm0" (formula "1") (term "1"))
               (rule "polySimp_addComm0" (formula "10") (term "1,0,0,1"))
               (rule "polySimp_addComm0" (formula "10") (term "1,1,0"))
               (rule "polySimp_addComm1" (formula "4") (term "0"))
               (rule "polySimp_addComm0" (formula "4") (term "0,0"))
               (rule "polySimp_rightDist" (formula "10") (term "0,0,1"))
               (rule "polySimp_elimOne" (formula "10") (term "0,0,0,1"))
               (rule "polySimp_rightDist" (formula "10") (term "1,0"))
               (rule "polySimp_homoEq" (formula "10") (term "0"))
               (rule "polySimp_elimOne" (formula "10") (term "0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "10") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "10") (term "1,0,0"))
               (rule "mul_literals" (formula "10") (term "0,1,0,0"))
               (rule "polySimp_addComm1" (formula "10") (term "0,0"))
               (rule "polySimp_addComm0" (formula "10") (term "0,0,0"))
               (rule "polySimp_addAssoc" (formula "10") (term "0,1,0,1"))
               (rule "add_literals" (formula "10") (term "0,0,1,0,1"))
               (rule "inEqSimp_ltToLeq" (formula "10") (term "1,1"))
               (rule "add_zero_right" (formula "10") (term "0,1,1"))
               (rule "polySimp_mulComm0" (formula "10") (term "1,0,1,1"))
               (rule "inEqSimp_commuteLeq" (formula "5"))
               (rule "inEqSimp_homoInEq1" (formula "10") (term "0,1"))
               (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1"))
               (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1"))
               (rule "polySimp_mulComm0" (formula "10") (term "0,1,0,0,1"))
               (rule "polySimp_addAssoc" (formula "10") (term "0,0,1"))
               (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,0,0,1"))
               (rule "add_literals" (formula "10") (term "1,1,0,0,0,1"))
               (rule "applyEqRigid" (formula "5") (term "0") (ifseqformula "1"))
               (rule "applyEqRigid" (formula "4") (term "1,0,0") (ifseqformula "1"))
               (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
               (rule "polySimp_addComm0" (formula "4") (term "0,0,0"))
               (rule "replace_known_left" (formula "10") (term "0") (ifseqformula "4"))
                (builtin "One Step Simplification" (formula "10"))
               (rule "polySimp_sepPosMonomial" (formula "4"))
               (rule "polySimp_mulComm0" (formula "4") (term "1"))
               (rule "polySimp_rightDist" (formula "4") (term "1"))
               (rule "polySimp_rightDist" (formula "4") (term "0,1"))
               (rule "mul_literals" (formula "4") (term "0,0,1"))
               (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1"))
               (rule "polySimp_elimOne" (formula "4") (term "1,0,1"))
               (rule "applyEqRigid" (formula "10") (term "0,1,0,0") (ifseqformula "4"))
               (rule "polySimp_mulComm0" (formula "10") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "10") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0"))
               (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "10") (term "0,1,0,0"))
               (rule "mul_literals" (formula "10") (term "0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "10") (term "0,0"))
               (rule "polySimp_addComm1" (formula "10") (term "0,0,0"))
               (rule "polySimp_pullOutFactor2b" (formula "10") (term "0,0"))
               (rule "add_literals" (formula "10") (term "1,1,0,0"))
               (rule "polySimp_addAssoc" (formula "10") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "10") (term "0,0,0,0"))
               (rule "add_literals" (formula "10") (term "0,0,0,0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,0"))
               (rule "add_literals" (formula "10") (term "1,1,0,0,0"))
               (rule "times_zero_1" (formula "10") (term "1,0,0,0"))
               (rule "add_zero_right" (formula "10") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "10"))
               (rule "inEqSimp_leqRight" (formula "10"))
               (rule "times_zero_1" (formula "1") (term "1,0,0"))
               (rule "add_zero_right" (formula "1") (term "0,0"))
               (rule "polySimp_addAssoc" (formula "1") (term "0"))
               (rule "add_literals" (formula "1") (term "0,0"))
               (rule "add_zero_left" (formula "1") (term "0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "6"))
               (rule "mul_literals" (formula "6") (term "1"))
               (rule "inEqSimp_invertInEq1" (formula "1"))
               (rule "polySimp_mulLiterals" (formula "1") (term "0"))
               (rule "times_zero_2" (formula "1") (term "1"))
               (rule "polySimp_elimOne" (formula "1") (term "0"))
               (rule "inEqSimp_contradInEq0" (formula "6") (ifseqformula "1"))
               (rule "qeq_literals" (formula "6") (term "0"))
                (builtin "One Step Simplification" (formula "6"))
               (rule "closeFalse" (formula "6"))
            )
            (branch "CUT: v_rm_0 = v_cnom_0 - 1 FALSE"
               (rule "eqSymm" (formula "8"))
               (rule "polySimp_elimSub" (formula "9") (term "1"))
               (rule "mul_literals" (formula "9") (term "1,1"))
               (rule "polySimp_elimSub" (formula "8") (term "0"))
               (rule "mul_literals" (formula "8") (term "1,0"))
               (rule "eqSymm" (formula "8"))
               (rule "polySimp_addComm0" (formula "9") (term "1"))
               (rule "polySimp_addComm0" (formula "8") (term "1"))
               (rule "inEqSimp_ltToLeq" (formula "6"))
               (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
               (rule "inEqSimp_ltRight" (formula "9"))
               (rule "polySimp_rightDist" (formula "1") (term "0,0"))
               (rule "mul_literals" (formula "1") (term "0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "7"))
               (rule "polySimp_mulComm0" (formula "7") (term "1"))
               (rule "polySimp_rightDist" (formula "7") (term "1"))
               (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
               (rule "mul_literals" (formula "7") (term "0,1"))
               (rule "polySimp_elimOne" (formula "7") (term "1,1"))
               (rule "inEqSimp_sepPosMonomial1" (formula "1"))
               (rule "polySimp_mulComm0" (formula "1") (term "1"))
               (rule "polySimp_rightDist" (formula "1") (term "1"))
               (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
               (rule "mul_literals" (formula "1") (term "0,1"))
               (rule "polySimp_elimOne" (formula "1") (term "1,1"))
               (rule "inEqSimp_strengthen0" (formula "7") (ifseqformula "9"))
               (rule "polySimp_addAssoc" (formula "7") (term "1"))
               (rule "add_literals" (formula "7") (term "0,1"))
               (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "7"))
               (rule "andLeft" (formula "1"))
               (rule "inEqSimp_homoInEq1" (formula "1"))
               (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
               (rule "polySimp_rightDist" (formula "1") (term "1,0"))
               (rule "mul_literals" (formula "1") (term "0,1,0"))
               (rule "polySimp_addAssoc" (formula "1") (term "0"))
               (rule "polySimp_addComm1" (formula "1") (term "0,0"))
               (rule "add_literals" (formula "1") (term "0,0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
               (rule "add_literals" (formula "1") (term "1,1,0"))
               (rule "times_zero_1" (formula "1") (term "1,0"))
               (rule "add_zero_right" (formula "1") (term "0"))
               (rule "leq_literals" (formula "1"))
               (rule "closeFalse" (formula "1"))
            )
         )
      )
      (branch "CUT: v_cnom_0 >= 0 FALSE"
         (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "6") (userinteraction))
          (builtin "One Step Simplification" (formula "4"))
         (rule "cut" (inst "cutFormula=lt(v_rm_0, sub(neg(v_cnom_0), Z(1(#))))") (userinteraction))
         (branch "CUT: v_rm_0 < -v_cnom_0 - 1 TRUE"
            (rule "exRightHide" (formula "8") (inst "t=v_qu_0") (userinteraction))
            (rule "exRightHide" (formula "8") (inst "t=add(v_rm_0, Z(1(#)))") (userinteraction))
            (rule "replace_known_right" (formula "8") (term "0,1") (ifseqformula "7"))
             (builtin "One Step Simplification" (formula "8"))
            (rule "polySimp_elimSub" (formula "1") (term "1"))
            (rule "mul_literals" (formula "1") (term "1,1"))
            (rule "polySimp_homoEq" (formula "3"))
            (rule "polySimp_elimNeg" (formula "8") (term "1,1,1"))
            (rule "polySimp_elimNeg" (formula "1") (term "0,1"))
            (rule "polySimp_addComm0" (formula "8") (term "1,1,0"))
            (rule "polySimp_addComm0" (formula "8") (term "1,0,1,0,1"))
            (rule "polySimp_addComm0" (formula "8") (term "0,0,0"))
            (rule "polySimp_addComm0" (formula "8") (term "1,0,0"))
            (rule "polySimp_homoEq" (formula "8") (term "0,0"))
            (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0"))
            (rule "polySimp_addComm0" (formula "8") (term "0,1,1"))
            (rule "polySimp_addComm0" (formula "3") (term "0,0"))
            (rule "polySimp_addComm0" (formula "1") (term "1"))
            (rule "polySimp_addComm0" (formula "8") (term "0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "3") (term "0"))
            (rule "polySimp_addComm0" (formula "3") (term "0,0"))
            (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0"))
            (rule "mul_literals" (formula "8") (term "0,1,0,0,0"))
            (rule "polySimp_addComm1" (formula "8") (term "0,0,0"))
            (rule "polySimp_addComm1" (formula "8") (term "0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "8") (term "0,1,0,1"))
            (rule "add_literals" (formula "8") (term "0,0,1,0,1"))
            (rule "polySimp_addAssoc" (formula "8") (term "0,0,0,0,0"))
            (rule "add_literals" (formula "8") (term "0,0,0,0,0,0"))
            (rule "add_zero_left" (formula "8") (term "0,0,0,0,0"))
            (rule "replace_known_left" (formula "8") (term "0,0") (ifseqformula "3"))
             (builtin "One Step Simplification" (formula "8"))
            (rule "inEqSimp_ltToLeq" (formula "1"))
            (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
            (rule "mul_literals" (formula "1") (term "0,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
            (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
            (rule "add_literals" (formula "1") (term "0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "8") (term "1,1"))
            (rule "polySimp_mulAssoc" (formula "8") (term "1,0,0,1,1"))
            (rule "polySimp_mulComm0" (formula "8") (term "0,1,0,0,1,1"))
            (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,1,1"))
            (rule "polySimp_elimOne" (formula "8") (term "1,0,0,1,1"))
            (rule "polySimp_addAssoc" (formula "8") (term "0,1,1"))
            (rule "polySimp_addComm1" (formula "8") (term "0,0,1,1"))
            (rule "add_literals" (formula "8") (term "0,0,0,1,1"))
            (rule "replace_known_left" (formula "8") (term "1,1") (ifseqformula "1"))
             (builtin "One Step Simplification" (formula "8"))
            (rule "inEqSimp_commuteLeq" (formula "4"))
            (rule "inEqSimp_homoInEq0" (formula "8") (term "0"))
            (rule "times_zero_2" (formula "8") (term "1,0,0"))
            (rule "add_zero_right" (formula "8") (term "0,0"))
            (rule "polySimp_sepPosMonomial" (formula "3"))
            (rule "polySimp_mulComm0" (formula "3") (term "1"))
            (rule "polySimp_rightDist" (formula "3") (term "1"))
            (rule "polySimp_mulAssoc" (formula "3") (term "0,1"))
            (rule "polySimp_mulComm0" (formula "3") (term "0,0,1"))
            (rule "polySimp_mulLiterals" (formula "3") (term "0,1"))
            (rule "polySimp_elimOne" (formula "3") (term "0,1"))
            (rule "applyEq" (formula "8") (term "0,1") (ifseqformula "3"))
            (rule "inEqSimp_homoInEq1" (formula "8") (term "1"))
            (rule "polySimp_mulComm0" (formula "8") (term "1,0,1"))
            (rule "polySimp_rightDist" (formula "8") (term "1,0,1"))
            (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,1"))
            (rule "polySimp_elimOne" (formula "8") (term "1,1,0,1"))
            (rule "polySimp_mulComm0" (formula "8") (term "0,1,0,1"))
            (rule "polySimp_addAssoc" (formula "8") (term "0,1"))
            (rule "polySimp_addComm1" (formula "8") (term "0,0,1"))
            (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,0,1"))
            (rule "add_literals" (formula "8") (term "1,1,0,0,0,1"))
            (rule "times_zero_1" (formula "8") (term "1,0,0,0,1"))
            (rule "add_zero_right" (formula "8") (term "0,0,0,1"))
            (rule "replace_known_left" (formula "8") (term "1") (ifseqformula "1"))
             (builtin "One Step Simplification" (formula "8"))
            (rule "inEqSimp_geqRight" (formula "8"))
            (rule "times_zero_1" (formula "1") (term "1,0,0"))
            (rule "add_zero_right" (formula "1") (term "0,0"))
            (rule "polySimp_addAssoc" (formula "1") (term "0"))
            (rule "add_literals" (formula "1") (term "0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "1"))
            (rule "mul_literals" (formula "1") (term "1"))
            (rule "inEqSimp_contradInEq0" (formula "5") (ifseqformula "1"))
            (rule "qeq_literals" (formula "5") (term "0"))
             (builtin "One Step Simplification" (formula "5"))
            (rule "closeFalse" (formula "5"))
         )
         (branch "CUT: v_rm_0 < -v_cnom_0 - 1 FALSE"
            (rule "cut" (inst "cutFormula=v_rm_0 = sub(neg(v_cnom_0), Z(1(#)))") (userinteraction))
            (branch "CUT: v_rm_0 = -v_cnom_0 - 1 TRUE"
               (rule "exRightHide" (formula "9") (inst "t=sub(v_qu_0, Z(1(#)))") (userinteraction))
               (rule "exRightHide" (formula "9") (inst "t=Z(0(#))") (userinteraction))
               (rule "add_zero_right" (formula "9") (term "1,0,0"))
               (rule "leq_literals" (formula "9") (term "1,0"))
                (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "8")))
               (rule "eqSymm" (formula "1"))
               (rule "eqSymm" (formula "9") (term "0"))
               (rule "polySimp_homoEq" (formula "3"))
               (rule "polySimp_elimSub" (formula "9") (term "0,0,0,1"))
               (rule "mul_literals" (formula "9") (term "1,0,0,0,1"))
               (rule "polySimp_elimNeg" (formula "9") (term "1,1,1"))
               (rule "polySimp_elimSub" (formula "1") (term "0"))
               (rule "mul_literals" (formula "1") (term "1,0"))
               (rule "eqSymm" (formula "1"))
               (rule "polySimp_elimSub" (formula "9") (term "0,0,0"))
               (rule "mul_literals" (formula "9") (term "1,0,0,0"))
               (rule "polySimp_elimNeg" (formula "1") (term "0,1"))
               (rule "polySimp_mulComm0" (formula "9") (term "0,0,1"))
               (rule "polySimp_mulComm0" (formula "9") (term "0,0"))
               (rule "polySimp_addComm0" (formula "9") (term "1,0,1,0,1"))
               (rule "polySimp_addComm0" (formula "9") (term "1,0"))
               (rule "polySimp_addComm1" (formula "3") (term "0"))
               (rule "polySimp_addComm0" (formula "1") (term "1"))
               (rule "polySimp_addComm0" (formula "9") (term "1,0,0,1"))
               (rule "polySimp_addComm0" (formula "9") (term "1,0,0"))
               (rule "polySimp_addComm0" (formula "3") (term "0,0"))
               (rule "polySimp_addComm1" (formula "3") (term "0"))
               (rule "polySimp_rightDist" (formula "9") (term "0,0,1"))
               (rule "polySimp_rightDist" (formula "9") (term "0,0"))
               (rule "polySimp_homoEq" (formula "9") (term "0"))
               (rule "polySimp_mulComm0" (formula "9") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "9") (term "1,0,0"))
               (rule "polySimp_mulAssoc" (formula "9") (term "0,1,0,0"))
               (rule "polySimp_mulComm0" (formula "9") (term "0,0,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "9") (term "0,1,0,0"))
               (rule "polySimp_elimOne" (formula "9") (term "0,1,0,0"))
               (rule "inEqSimp_geqRight" (formula "8"))
               (rule "times_zero_1" (formula "1") (term "1,0,0"))
               (rule "add_zero_right" (formula "1") (term "0,0"))
               (rule "polySimp_addAssoc" (formula "9") (term "0,1,0,1"))
               (rule "add_literals" (formula "9") (term "0,0,1,0,1"))
               (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
               (rule "inEqSimp_ltToLeq" (formula "9") (term "1,1"))
               (rule "add_zero_right" (formula "9") (term "0,1,1"))
               (rule "polySimp_mulAssoc" (formula "9") (term "1,0,1,1"))
               (rule "polySimp_mulComm0" (formula "9") (term "0,1,0,1,1"))
               (rule "polySimp_mulLiterals" (formula "9") (term "1,0,1,1"))
               (rule "polySimp_elimOne" (formula "9") (term "1,0,1,1"))
               (rule "replace_known_left" (formula "9") (term "1,1") (ifseqformula "1"))
                (builtin "One Step Simplification" (formula "9"))
               (rule "inEqSimp_homoInEq1" (formula "9") (term "1"))
               (rule "polySimp_mulComm0" (formula "9") (term "1,0,1"))
               (rule "polySimp_rightDist" (formula "9") (term "1,0,1"))
               (rule "polySimp_mulAssoc" (formula "9") (term "0,1,0,1"))
               (rule "polySimp_mulComm0" (formula "9") (term "0,0,1,0,1"))
               (rule "polySimp_mulLiterals" (formula "9") (term "0,1,0,1"))
               (rule "polySimp_elimOne" (formula "9") (term "0,1,0,1"))
               (rule "polySimp_addAssoc" (formula "9") (term "0,1"))
               (rule "polySimp_pullOutFactor3b" (formula "9") (term "0,0,1"))
               (rule "applyEq" (formula "4") (term "1,0,0") (ifseqformula "2"))
               (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
               (rule "polySimp_addComm0" (formula "4") (term "0,0,0"))
               (rule "polySimp_sepNegMonomial" (formula "9") (term "0"))
               (rule "polySimp_mulLiterals" (formula "9") (term "0,0"))
               (rule "polySimp_elimOne" (formula "9") (term "0,0"))
               (rule "polySimp_sepPosMonomial" (formula "4"))
               (rule "polySimp_mulComm0" (formula "4") (term "1"))
               (rule "polySimp_rightDist" (formula "4") (term "1"))
               (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
               (rule "polySimp_elimOne" (formula "4") (term "1,1"))
               (rule "polySimp_rightDist" (formula "4") (term "0,1"))
               (rule "mul_literals" (formula "4") (term "0,0,1"))
               (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1"))
               (rule "polySimp_elimOne" (formula "4") (term "1,0,1"))
               (rule "replace_known_left" (formula "9") (term "0") (ifseqformula "4"))
                (builtin "One Step Simplification" (formula "9"))
               (rule "inEqSimp_leqRight" (formula "9"))
               (rule "times_zero_1" (formula "1") (term "1,0,0"))
               (rule "add_zero_right" (formula "1") (term "0,0"))
               (rule "polySimp_addAssoc" (formula "1") (term "0"))
               (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
               (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
               (rule "add_literals" (formula "1") (term "0,0,0,0"))
               (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "5"))
               (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
               (rule "polySimp_rightDist" (formula "1") (term "1,0"))
               (rule "polySimp_rightDist" (formula "1") (term "0,1,0"))
               (rule "mul_literals" (formula "1") (term "0,0,1,0"))
               (rule "polySimp_addAssoc" (formula "1") (term "0"))
               (rule "polySimp_addComm1" (formula "1") (term "0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "1") (term "0"))
               (rule "add_literals" (formula "1") (term "1,1,0"))
               (rule "polySimp_elimOne" (formula "1") (term "1,0"))
               (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
               (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
               (rule "add_literals" (formula "1") (term "0,0,0,0"))
               (rule "add_zero_left" (formula "1") (term "0,0,0"))
               (rule "polySimp_pullOutFactor1" (formula "1") (term "0,0"))
               (rule "add_literals" (formula "1") (term "1,0,0"))
               (rule "times_zero_1" (formula "1") (term "0,0"))
               (rule "add_zero_left" (formula "1") (term "0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "2"))
               (rule "mul_literals" (formula "2") (term "1"))
               (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "1"))
               (rule "qeq_literals" (formula "2") (term "0"))
                (builtin "One Step Simplification" (formula "2"))
               (rule "closeFalse" (formula "2"))
            )
            (branch "CUT: v_rm_0 = -v_cnom_0 - 1 FALSE"
               (rule "andLeft" (formula "4"))
               (rule "eqSymm" (formula "7"))
               (rule "polySimp_elimNeg" (formula "8") (term "0,1"))
               (rule "polySimp_elimNeg" (formula "5") (term "1"))
               (rule "polySimp_elimNeg" (formula "7") (term "0,0"))
               (rule "polySimp_elimSub" (formula "8") (term "1"))
               (rule "mul_literals" (formula "8") (term "1,1"))
               (rule "polySimp_elimSub" (formula "7") (term "0"))
               (rule "mul_literals" (formula "7") (term "1,0"))
               (rule "eqSymm" (formula "7"))
               (rule "polySimp_addComm0" (formula "8") (term "1"))
               (rule "polySimp_addComm0" (formula "7") (term "1"))
               (rule "inEqSimp_ltToLeq" (formula "5"))
               (rule "polySimp_mulAssoc" (formula "5") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "5") (term "0,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0"))
               (rule "polySimp_elimOne" (formula "5") (term "1,0,0"))
               (rule "inEqSimp_ltRight" (formula "8"))
               (rule "polySimp_rightDist" (formula "1") (term "0,0"))
               (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
               (rule "mul_literals" (formula "1") (term "0,0,0"))
               (rule "polySimp_elimOne" (formula "1") (term "1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "6"))
               (rule "polySimp_mulComm0" (formula "6") (term "1"))
               (rule "polySimp_rightDist" (formula "6") (term "1"))
               (rule "mul_literals" (formula "6") (term "0,1"))
               (rule "inEqSimp_sepPosMonomial1" (formula "1"))
               (rule "polySimp_mulComm0" (formula "1") (term "1"))
               (rule "polySimp_rightDist" (formula "1") (term "1"))
               (rule "mul_literals" (formula "1") (term "0,1"))
               (rule "inEqSimp_strengthen1" (formula "1") (ifseqformula "8"))
               (rule "polySimp_addAssoc" (formula "1") (term "1"))
               (rule "add_literals" (formula "1") (term "0,1"))
               (rule "add_zero_left" (formula "1") (term "1"))
               (rule "inEqSimp_contradInEq1" (formula "6") (ifseqformula "1"))
               (rule "andLeft" (formula "6"))
               (rule "inEqSimp_homoInEq1" (formula "6"))
               (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
               (rule "polySimp_rightDist" (formula "6") (term "1,0"))
               (rule "mul_literals" (formula "6") (term "0,1,0"))
               (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0"))
               (rule "polySimp_elimOne" (formula "6") (term "1,1,0"))
               (rule "polySimp_addAssoc" (formula "6") (term "0"))
               (rule "polySimp_addComm0" (formula "6") (term "0,0"))
               (rule "polySimp_pullOutFactor2b" (formula "6") (term "0"))
               (rule "add_literals" (formula "6") (term "1,1,0"))
               (rule "times_zero_1" (formula "6") (term "1,0"))
               (rule "add_zero_right" (formula "6") (term "0"))
               (rule "leq_literals" (formula "6"))
               (rule "closeFalse" (formula "6"))
            )
         )
      )
   )
   (branch "Use Case"
      (rule "int_induction" (inst "b=\\exists int v_qu;
  \\exists int v_rm;
    (  neg(v_a) = add(mul(v_qu, v_cnom_0), v_rm)
     & leq(Z(0(#)), v_rm)
     & \\if (geq(v_cnom_0, Z(0(#))))
           \\then (  geq(mul(v_qu, v_cnom_0),
                        add(add(Z(1(#)), neg(v_a)),
                            mul(Z(neglit(1(#))),
                                v_cnom_0)))
                  & lt(v_rm, v_cnom_0))
           \\else (  geq(mul(v_qu, v_cnom_0),
                        add(add(Z(1(#)), neg(v_a)),
                            v_cnom_0))
                  & lt(v_rm, neg(v_cnom_0))))") (inst "nv=v_a") (userinteraction))
      (branch "Base Case"
         (rule "exRightHide" (formula "3") (inst "t=Z(0(#))") (userinteraction))
         (rule "exRightHide" (formula "3") (inst "t=Z(0(#))") (userinteraction))
         (rule "neg_literal" (formula "3") (term "0,0,0"))
         (rule "add_zero_right" (formula "3") (term "1,0,0"))
         (rule "leq_literals" (formula "3") (term "1,0"))
          (builtin "One Step Simplification" (formula "3"))
         (rule "sub_zero_1" (formula "3") (term "0,0"))
         (rule "times_zero_2" (formula "3") (term "1,0"))
          (builtin "One Step Simplification" (formula "3"))
         (rule "times_zero_2" (formula "3") (term "0,0,1"))
         (rule "neg_literal" (formula "3") (term "1,0,1,0,1"))
         (rule "times_zero_2" (formula "3") (term "0,0,2"))
         (rule "neg_literal" (formula "3") (term "1,0,1,0,2"))
         (rule "add_literals" (formula "3") (term "0,1,0,1"))
         (rule "add_literals" (formula "3") (term "0,1,0,2"))
         (rule "notLeft" (formula "2"))
         (rule "polySimp_elimNeg" (formula "3") (term "1,1,2"))
         (rule "polySimp_mulComm0" (formula "3") (term "1,1,0,1"))
         (rule "inEqSimp_ltToLeq" (formula "3") (term "1,1"))
         (rule "add_zero_right" (formula "3") (term "0,1,1"))
         (rule "polySimp_mulComm0" (formula "3") (term "1,0,1,1"))
         (rule "inEqSimp_ltToLeq" (formula "3") (term "1,2"))
         (rule "add_zero_right" (formula "3") (term "0,1,2"))
         (rule "polySimp_mulAssoc" (formula "3") (term "1,0,1,2"))
         (rule "polySimp_mulComm0" (formula "3") (term "0,1,0,1,2"))
         (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,2"))
         (rule "polySimp_elimOne" (formula "3") (term "1,0,1,2"))
         (rule "inEqSimp_homoInEq1" (formula "3") (term "0,2"))
         (rule "times_zero_2" (formula "3") (term "1,0,0,2"))
         (rule "add_zero_right" (formula "3") (term "0,0,2"))
          (builtin "One Step Simplification" (formula "3"))
         (rule "inEqSimp_homoInEq1" (formula "3") (term "0,1"))
         (rule "times_zero_2" (formula "3") (term "1,0,0,1"))
         (rule "add_zero_right" (formula "3") (term "0,0,1"))
          (builtin "One Step Simplification" (formula "3"))
         (rule "inEqSimp_sepNegMonomial0" (formula "3") (term "1"))
         (rule "polySimp_mulLiterals" (formula "3") (term "0,1"))
         (rule "polySimp_elimOne" (formula "3") (term "0,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "2"))
         (rule "mul_literals" (formula "3") (term "1,2"))
         (rule "ifthenelse_split_for" (formula "3"))
         (branch "v_cnom_0 >= 0 TRUE"
            (rule "inEqSimp_geqRight" (formula "4"))
            (rule "mul_literals" (formula "1") (term "1,0,0"))
            (rule "add_literals" (formula "1") (term "0,0"))
            (rule "add_zero_left" (formula "1") (term "0"))
            (rule "inEqSimp_strengthen0" (formula "1") (ifseqformula "4"))
            (rule "add_zero_right" (formula "1") (term "1"))
            (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "2"))
            (rule "qeq_literals" (formula "1") (term "0"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "closeFalse" (formula "1"))
         )
         (branch "v_cnom_0 >= 0 FALSE"
            (rule "inEqSimp_leqRight" (formula "4"))
            (rule "mul_literals" (formula "1") (term "1,0,0"))
            (rule "add_literals" (formula "1") (term "0,0"))
            (rule "add_zero_left" (formula "1") (term "0"))
            (rule "close" (formula "4") (ifseqformula "1"))
         )
      )
      (branch "Step Case"
         (rule "allRight" (formula "3") (inst "sk=v_a_0") (userinteraction))
         (rule "impRight" (formula "3") (userinteraction))
         (rule "andLeft" (formula "1"))
         (rule "exLeft" (formula "2") (inst "sk=v_qu_0") (userinteraction))
         (rule "exLeft" (formula "2") (inst "sk=v_rm_0") (userinteraction))
         (rule "andLeft" (formula "2"))
         (rule "andLeft" (formula "2"))
         (rule "cut" (inst "cutFormula=geq(v_cnom_0, Z(0(#)))") (userinteraction))
         (branch "CUT: v_cnom_0 >= 0 TRUE"
            (rule "replace_known_left" (formula "5") (term "0") (ifseqformula "1") (userinteraction))
             (builtin "One Step Simplification" (formula "5"))
            (rule "andLeft" (formula "5") (userinteraction))
            (rule "cut" (inst "cutFormula=lt(Z(0(#)), v_rm_0)") (userinteraction))
            (branch "CUT: 0 < v_rm_0 TRUE"
               (rule "exRightHide" (formula "10") (inst "t=v_qu_0") (userinteraction))
               (rule "exRightHide" (formula "10") (inst "t=sub(v_rm_0, Z(1(#)))") (userinteraction))
               (rule "replace_known_left" (formula "10") (term "0,1") (ifseqformula "2"))
                (builtin "One Step Simplification" (formula "10"))
               (rule "polySimp_homoEq" (formula "4"))
               (rule "polySimp_homoEq" (formula "10") (term "0,0"))
               (rule "polySimp_elimSub" (formula "10") (term "1,1,0"))
               (rule "mul_literals" (formula "10") (term "1,1,1,0"))
               (rule "polySimp_elimNeg" (formula "10") (term "1,0,1,0,1"))
               (rule "polySimp_elimSub" (formula "10") (term "0,1,1"))
               (rule "mul_literals" (formula "10") (term "1,0,1,1"))
               (rule "polySimp_elimNeg" (formula "4") (term "0,1,0"))
               (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
               (rule "polySimp_elimNeg" (formula "10") (term "0,1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0"))
               (rule "polySimp_elimSub" (formula "10") (term "1,0,0,0,0"))
               (rule "mul_literals" (formula "10") (term "1,1,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "4") (term "1,0"))
               (rule "polySimp_elimOne" (formula "10") (term "1,0,0,0"))
               (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,1"))
               (rule "polySimp_mulComm0" (formula "10") (term "1,0,1,0,1"))
               (rule "polySimp_addComm0" (formula "4") (term "0,0"))
               (rule "polySimp_addComm0" (formula "10") (term "1,1,0"))
               (rule "polySimp_addComm0" (formula "10") (term "0,1,1"))
               (rule "polySimp_addComm0" (formula "10") (term "0,0,0,0"))
               (rule "polySimp_addComm0" (formula "10") (term "1,0,0,0"))
               (rule "polySimp_addComm0" (formula "10") (term "1,1,0,1,0,1"))
               (rule "polySimp_addComm1" (formula "4") (term "0"))
               (rule "polySimp_addComm0" (formula "10") (term "0,0,0,0,0"))
               (rule "polySimp_addComm0" (formula "4") (term "0,0"))
               (rule "polySimp_addComm1" (formula "10") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "10") (term "0,0,0,0"))
               (rule "polySimp_rightDist" (formula "10") (term "1,0,1,0,1"))
               (rule "mul_literals" (formula "10") (term "0,1,0,1,0,1"))
               (rule "inEqSimp_ltToLeq" (formula "7"))
               (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "1"))
               (rule "add_zero_right" (formula "1") (term "0"))
               (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
               (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,0,0"))
               (rule "add_literals" (formula "10") (term "0,0,0,0,0,0"))
               (rule "add_zero_left" (formula "10") (term "0,0,0,0,0"))
               (rule "replace_known_left" (formula "10") (term "0,0") (ifseqformula "4"))
                (builtin "One Step Simplification" (formula "10"))
               (rule "polySimp_addAssoc" (formula "10") (term "0,1,0,1"))
               (rule "add_literals" (formula "10") (term "0,0,1,0,1"))
               (rule "add_zero_left" (formula "10") (term "0,1,0,1"))
               (rule "inEqSimp_ltToLeq" (formula "10") (term "1,1"))
               (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,1"))
               (rule "polySimp_addAssoc" (formula "10") (term "0,1,1"))
               (rule "polySimp_addComm1" (formula "10") (term "0,0,1,1"))
               (rule "add_literals" (formula "10") (term "0,0,0,1,1"))
               (rule "add_zero_left" (formula "10") (term "0,0,1,1"))
               (rule "inEqSimp_homoInEq0" (formula "10") (term "0"))
               (rule "times_zero_2" (formula "10") (term "1,0,0"))
               (rule "add_zero_right" (formula "10") (term "0,0"))
               (rule "polySimp_sepPosMonomial" (formula "4"))
               (rule "polySimp_mulComm0" (formula "4") (term "1"))
               (rule "polySimp_rightDist" (formula "4") (term "1"))
               (rule "polySimp_mulComm0" (formula "4") (term "0,1"))
               (rule "applyEq" (formula "10") (term "0,0,1") (ifseqformula "4"))
               (rule "inEqSimp_homoInEq1" (formula "10") (term "0,1"))
               (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1"))
               (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1"))
               (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,1"))
               (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,1"))
               (rule "polySimp_mulAssoc" (formula "10") (term "0,1,0,0,1"))
               (rule "polySimp_mulComm0" (formula "10") (term "0,0,1,0,0,1"))
               (rule "polySimp_mulLiterals" (formula "10") (term "0,1,0,0,1"))
               (rule "polySimp_elimOne" (formula "10") (term "0,1,0,0,1"))
               (rule "polySimp_addAssoc" (formula "10") (term "0,0,1"))
               (rule "polySimp_addComm1" (formula "10") (term "0,0,0,1"))
               (rule "polySimp_pullOutFactor2" (formula "10") (term "0,0,0,0,1"))
               (rule "add_literals" (formula "10") (term "1,0,0,0,0,1"))
               (rule "times_zero_1" (formula "10") (term "0,0,0,0,1"))
               (rule "add_zero_left" (formula "10") (term "0,0,0,1"))
                (builtin "One Step Simplification" (formula "10"))
               (rule "inEqSimp_sepPosMonomial0" (formula "7"))
               (rule "polySimp_mulComm0" (formula "7") (term "1"))
               (rule "polySimp_rightDist" (formula "7") (term "1"))
               (rule "mul_literals" (formula "7") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
               (rule "polySimp_elimOne" (formula "7") (term "1,1"))
               (rule "inEqSimp_sepNegMonomial0" (formula "1"))
               (rule "polySimp_mulLiterals" (formula "1") (term "0"))
               (rule "polySimp_elimOne" (formula "1") (term "0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "0"))
               (rule "mul_literals" (formula "10") (term "1,0"))
               (rule "replace_known_left" (formula "10") (term "0") (ifseqformula "1"))
                (builtin "One Step Simplification" (formula "10"))
               (rule "inEqSimp_leqRight" (formula "10"))
               (rule "times_zero_1" (formula "1") (term "1,0,0"))
               (rule "add_zero_right" (formula "1") (term "0,0"))
               (rule "polySimp_addAssoc" (formula "1") (term "0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "1"))
               (rule "polySimp_mulComm0" (formula "1") (term "1"))
               (rule "polySimp_rightDist" (formula "1") (term "1"))
               (rule "mul_literals" (formula "1") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
               (rule "polySimp_elimOne" (formula "1") (term "1,1"))
               (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "8"))
               (rule "andLeft" (formula "1"))
               (rule "inEqSimp_homoInEq1" (formula "1"))
               (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
               (rule "polySimp_rightDist" (formula "1") (term "1,0"))
               (rule "mul_literals" (formula "1") (term "0,1,0"))
               (rule "polySimp_addAssoc" (formula "1") (term "0"))
               (rule "polySimp_addComm1" (formula "1") (term "0,0"))
               (rule "add_literals" (formula "1") (term "0,0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
               (rule "add_literals" (formula "1") (term "1,1,0"))
               (rule "times_zero_1" (formula "1") (term "1,0"))
               (rule "add_zero_right" (formula "1") (term "0"))
               (rule "leq_literals" (formula "1"))
               (rule "closeFalse" (formula "1"))
            )
            (branch "CUT: 0 < v_rm_0 FALSE"
               (rule "cut" (inst "cutFormula=v_rm_0 = Z(0(#))") (userinteraction))
               (branch "CUT: v_rm_0 = 0 TRUE"
                  (rule "exRightHide" (formula "11") (inst "t=sub(v_qu_0, Z(1(#)))") (userinteraction))
                  (rule "exRightHide" (formula "11") (inst "t=sub(v_cnom_0, Z(1(#)))") (userinteraction))
                  (rule "replace_known_left" (formula "11") (term "0,1") (ifseqformula "2"))
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "polySimp_homoEq" (formula "4"))
                  (rule "polySimp_elimSub" (formula "11") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "11") (term "1,1,1,0,0"))
                  (rule "polySimp_elimSub" (formula "11") (term "0,1,1"))
                  (rule "mul_literals" (formula "11") (term "1,0,1,1"))
                  (rule "polySimp_elimSub" (formula "11") (term "0,0,1,0,0"))
                  (rule "mul_literals" (formula "11") (term "1,0,0,1,0,0"))
                  (rule "polySimp_elimSub" (formula "11") (term "0,0,0,1"))
                  (rule "mul_literals" (formula "11") (term "1,0,0,0,1"))
                  (rule "polySimp_elimSub" (formula "11") (term "1,1,0"))
                  (rule "mul_literals" (formula "11") (term "1,1,1,0"))
                  (rule "polySimp_elimNeg" (formula "11") (term "0,0,0"))
                  (rule "polySimp_elimNeg" (formula "11") (term "1,0,1,0,1"))
                  (rule "polySimp_elimNeg" (formula "4") (term "0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
                  (rule "polySimp_elimOne" (formula "4") (term "1,0"))
                  (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,1"))
                  (rule "polySimp_mulComm0" (formula "11") (term "0,1,0,0"))
                  (rule "polySimp_mulComm0" (formula "11") (term "0,0,1"))
                  (rule "polySimp_mulComm0" (formula "11") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "11") (term "1,0,1,0,1"))
                  (rule "polySimp_addComm0" (formula "4") (term "0,0"))
                  (rule "polySimp_addComm0" (formula "11") (term "1,1,0,0"))
                  (rule "polySimp_addComm0" (formula "11") (term "0,1,1"))
                  (rule "polySimp_addComm0" (formula "11") (term "1,1,0"))
                  (rule "polySimp_addComm0" (formula "11") (term "1,0,1,0,0"))
                  (rule "polySimp_addComm0" (formula "11") (term "1,0,0,1"))
                  (rule "polySimp_addComm0" (formula "11") (term "1,0,0,0"))
                  (rule "polySimp_addComm0" (formula "11") (term "1,1,0,1,0,1"))
                  (rule "polySimp_addComm1" (formula "4") (term "0"))
                  (rule "polySimp_addComm0" (formula "4") (term "0,0"))
                  (rule "polySimp_rightDist" (formula "11") (term "0,1,0,0"))
                  (rule "polySimp_addComm1" (formula "11") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "11") (term "0,0,1"))
                  (rule "polySimp_rightDist" (formula "11") (term "0,0,0"))
                  (rule "mul_literals" (formula "11") (term "0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "11") (term "1,0,1,0,1"))
                  (rule "mul_literals" (formula "11") (term "0,1,0,1,0,1"))
                  (rule "inEqSimp_ltToLeq" (formula "7"))
                  (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                  (rule "polySimp_addAssoc" (formula "11") (term "0,1,0,0"))
                  (rule "polySimp_homoEq" (formula "11") (term "0,0"))
                  (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0"))
                  (rule "polySimp_addComm0" (formula "11") (term "0,0,0,0,0,0"))
                  (rule "polySimp_pullOutFactor2b" (formula "11") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "11") (term "1,1,0,0,0,0,0"))
                  (rule "times_zero_1" (formula "11") (term "1,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "11") (term "0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "11") (term "0,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,0"))
                  (rule "polySimp_addComm1" (formula "11") (term "0,0,0"))
                  (rule "polySimp_addAssoc" (formula "11") (term "0,1,0,1"))
                  (rule "add_literals" (formula "11") (term "0,0,1,0,1"))
                  (rule "add_zero_left" (formula "11") (term "0,1,0,1"))
                  (rule "inEqSimp_ltToLeq" (formula "11") (term "1,1"))
                  (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,1"))
                  (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,0"))
                  (rule "add_literals" (formula "11") (term "0,0,0,0,0"))
                  (rule "add_zero_left" (formula "11") (term "0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "11") (term "0,1,1"))
                  (rule "polySimp_addComm1" (formula "11") (term "0,0,1,1"))
                  (rule "add_literals" (formula "11") (term "0,0,0,1,1"))
                  (rule "add_zero_left" (formula "11") (term "0,0,1,1"))
                  (rule "polySimp_pullOutFactor2" (formula "11") (term "0,1,1"))
                  (rule "add_literals" (formula "11") (term "1,0,1,1"))
                  (rule "times_zero_1" (formula "11") (term "0,1,1"))
                  (rule "leq_literals" (formula "11") (term "1,1"))
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "inEqSimp_homoInEq1" (formula "11") (term "1"))
                  (rule "polySimp_mulComm0" (formula "11") (term "1,0,1"))
                  (rule "polySimp_rightDist" (formula "11") (term "1,0,1"))
                  (rule "polySimp_mulAssoc" (formula "11") (term "0,1,0,1"))
                  (rule "polySimp_mulComm0" (formula "11") (term "0,0,1,0,1"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "0,1,0,1"))
                  (rule "polySimp_elimOne" (formula "11") (term "0,1,0,1"))
                  (rule "polySimp_addAssoc" (formula "11") (term "0,1"))
                  (rule "polySimp_pullOutFactor2b" (formula "11") (term "0,0,1"))
                  (rule "add_literals" (formula "11") (term "1,1,0,0,1"))
                  (rule "times_zero_1" (formula "11") (term "1,0,0,1"))
                  (rule "add_zero_right" (formula "11") (term "0,0,1"))
                  (rule "inEqSimp_homoInEq0" (formula "11") (term "1,0"))
                  (rule "times_zero_2" (formula "11") (term "1,0,1,0"))
                  (rule "add_zero_right" (formula "11") (term "0,1,0"))
                  (rule "applyEq" (formula "7") (term "1,0") (ifseqformula "1"))
                  (rule "add_zero_right" (formula "7") (term "0"))
                  (rule "applyEqRigid" (formula "4") (term "1,0,0") (ifseqformula "1"))
                  (rule "add_zero_right" (formula "4") (term "0,0"))
                  (rule "replace_known_left" (formula "11") (term "0,0") (ifseqformula "4"))
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "polySimp_sepPosMonomial" (formula "4"))
                  (rule "applyEq" (formula "11") (term "0,1,0,1") (ifseqformula "4"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1"))
                  (rule "polySimp_pullOutFactor0" (formula "11") (term "0,1"))
                  (rule "add_literals" (formula "11") (term "1,0,1"))
                  (rule "times_zero_1" (formula "11") (term "0,1"))
                  (rule "leq_literals" (formula "11") (term "1"))
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "inEqSimp_geqRight" (formula "11"))
                  (rule "times_zero_1" (formula "1") (term "1,0,0"))
                  (rule "add_zero_right" (formula "1") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0"))
                  (rule "add_literals" (formula "1") (term "0,0"))
                  (rule "add_zero_left" (formula "1") (term "0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "8"))
                  (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                  (rule "polySimp_elimOne" (formula "8") (term "0"))
                  (rule "inEqSimp_contradInEq0" (formula "8") (ifseqformula "1"))
                  (rule "qeq_literals" (formula "8") (term "0"))
                   (builtin "One Step Simplification" (formula "8"))
                  (rule "closeFalse" (formula "8"))
               )
               (branch "CUT: v_rm_0 = 0 FALSE"
                  (rule "inEqSimp_ltRight" (formula "10"))
                  (rule "add_zero_right" (formula "1") (term "0"))
                  (rule "polySimp_mulComm0" (formula "1") (term "0"))
                  (rule "inEqSimp_commuteLeq" (formula "5"))
                  (rule "inEqSimp_invertInEq1" (formula "1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                  (rule "times_zero_2" (formula "1") (term "1"))
                  (rule "polySimp_elimOne" (formula "1") (term "0"))
                  (rule "inEqSimp_strengthen1" (formula "5") (ifseqformula "10"))
                  (rule "add_zero_right" (formula "5") (term "1"))
                  (rule "inEqSimp_contradInEq0" (formula "5") (ifseqformula "1"))
                  (rule "qeq_literals" (formula "5") (term "0"))
                   (builtin "One Step Simplification" (formula "5"))
                  (rule "closeFalse" (formula "5"))
               )
            )
         )
         (branch "CUT: v_cnom_0 >= 0 FALSE"
            (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "7") (userinteraction))
             (builtin "One Step Simplification" (formula "4"))
            (rule "andLeft" (formula "4") (userinteraction))
            (rule "cut" (inst "cutFormula=lt(Z(0(#)), v_rm_0)") (userinteraction))
            (branch "CUT: 0 < v_rm_0 TRUE"
               (rule "exRightHide" (formula "10") (inst "t=v_qu_0") (userinteraction))
               (rule "exRightHide" (formula "10") (inst "t=sub(v_rm_0, Z(1(#)))") (userinteraction))
               (rule "replace_known_right" (formula "10") (term "0,1") (ifseqformula "9"))
                (builtin "One Step Simplification" (formula "10"))
               (rule "polySimp_homoEq" (formula "3"))
               (rule "polySimp_elimNeg" (formula "6") (term "1"))
               (rule "polySimp_elimSub" (formula "10") (term "0,1,1"))
               (rule "mul_literals" (formula "10") (term "1,0,1,1"))
               (rule "polySimp_elimNeg" (formula "10") (term "1,0,1,0,1"))
               (rule "polySimp_elimNeg" (formula "10") (term "1,1,1"))
               (rule "polySimp_homoEq" (formula "10") (term "0,0"))
               (rule "polySimp_elimSub" (formula "10") (term "1,1,0"))
               (rule "mul_literals" (formula "10") (term "1,1,1,0"))
               (rule "polySimp_elimNeg" (formula "3") (term "0,1,0"))
               (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
               (rule "polySimp_elimNeg" (formula "10") (term "0,1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0"))
               (rule "polySimp_elimSub" (formula "10") (term "1,0,0,0,0"))
               (rule "mul_literals" (formula "10") (term "1,1,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "3") (term "1,0"))
               (rule "polySimp_elimOne" (formula "10") (term "1,0,0,0"))
               (rule "polySimp_mulComm0" (formula "10") (term "1,0,1,0,1"))
               (rule "polySimp_addComm0" (formula "3") (term "0,0"))
               (rule "polySimp_addComm0" (formula "10") (term "0,1,1"))
               (rule "polySimp_addComm0" (formula "10") (term "1,1,0"))
               (rule "polySimp_addComm0" (formula "10") (term "0,0,0,0"))
               (rule "polySimp_addComm0" (formula "10") (term "1,0,0,0"))
               (rule "polySimp_addComm0" (formula "10") (term "1,1,0,1,0,1"))
               (rule "polySimp_addComm1" (formula "3") (term "0"))
               (rule "polySimp_addComm0" (formula "10") (term "0,0,0,0,0"))
               (rule "polySimp_addComm0" (formula "3") (term "0,0"))
               (rule "polySimp_addComm1" (formula "10") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "10") (term "0,0,0,0"))
               (rule "polySimp_rightDist" (formula "10") (term "1,0,1,0,1"))
               (rule "mul_literals" (formula "10") (term "0,1,0,1,0,1"))
               (rule "inEqSimp_ltToLeq" (formula "1"))
               (rule "add_zero_right" (formula "1") (term "0"))
               (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
               (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,0,0"))
               (rule "add_literals" (formula "10") (term "0,0,0,0,0,0"))
               (rule "add_zero_left" (formula "10") (term "0,0,0,0,0"))
               (rule "replace_known_left" (formula "10") (term "0,0") (ifseqformula "3"))
                (builtin "One Step Simplification" (formula "10"))
               (rule "inEqSimp_ltToLeq" (formula "6"))
               (rule "polySimp_mulAssoc" (formula "6") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "6") (term "0,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0"))
               (rule "polySimp_elimOne" (formula "6") (term "1,0,0"))
               (rule "polySimp_addAssoc" (formula "10") (term "0,1,0,1"))
               (rule "add_literals" (formula "10") (term "0,0,1,0,1"))
               (rule "add_zero_left" (formula "10") (term "0,1,0,1"))
               (rule "inEqSimp_ltToLeq" (formula "10") (term "1,1"))
               (rule "polySimp_mulAssoc" (formula "10") (term "1,0,0,1,1"))
               (rule "polySimp_mulComm0" (formula "10") (term "0,1,0,0,1,1"))
               (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,1,1"))
               (rule "polySimp_elimOne" (formula "10") (term "1,0,0,1,1"))
               (rule "polySimp_addAssoc" (formula "10") (term "0,1,1"))
               (rule "polySimp_addComm1" (formula "10") (term "0,0,1,1"))
               (rule "add_literals" (formula "10") (term "0,0,0,1,1"))
               (rule "add_zero_left" (formula "10") (term "0,0,1,1"))
               (rule "inEqSimp_homoInEq0" (formula "10") (term "0"))
               (rule "times_zero_2" (formula "10") (term "1,0,0"))
               (rule "add_zero_right" (formula "10") (term "0,0"))
               (rule "polySimp_sepPosMonomial" (formula "3"))
               (rule "polySimp_mulComm0" (formula "3") (term "1"))
               (rule "polySimp_rightDist" (formula "3") (term "1"))
               (rule "polySimp_mulComm0" (formula "3") (term "0,1"))
               (rule "applyEq" (formula "10") (term "0,0,1") (ifseqformula "3"))
               (rule "inEqSimp_homoInEq1" (formula "10") (term "0,1"))
               (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1"))
               (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1"))
               (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,1"))
               (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,1"))
               (rule "polySimp_mulAssoc" (formula "10") (term "0,1,0,0,1"))
               (rule "polySimp_mulComm0" (formula "10") (term "0,0,1,0,0,1"))
               (rule "polySimp_mulLiterals" (formula "10") (term "0,1,0,0,1"))
               (rule "polySimp_elimOne" (formula "10") (term "0,1,0,0,1"))
               (rule "polySimp_addAssoc" (formula "10") (term "0,0,1"))
               (rule "polySimp_addComm1" (formula "10") (term "0,0,0,1"))
               (rule "polySimp_pullOutFactor2" (formula "10") (term "0,0,0,0,1"))
               (rule "add_literals" (formula "10") (term "1,0,0,0,0,1"))
               (rule "times_zero_1" (formula "10") (term "0,0,0,0,1"))
               (rule "add_zero_left" (formula "10") (term "0,0,0,1"))
                (builtin "One Step Simplification" (formula "10"))
               (rule "inEqSimp_sepNegMonomial0" (formula "1"))
               (rule "polySimp_mulLiterals" (formula "1") (term "0"))
               (rule "polySimp_elimOne" (formula "1") (term "0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "6"))
               (rule "polySimp_mulComm0" (formula "6") (term "1"))
               (rule "polySimp_rightDist" (formula "6") (term "1"))
               (rule "mul_literals" (formula "6") (term "0,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1"))
               (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "0"))
               (rule "mul_literals" (formula "10") (term "1,0"))
               (rule "replace_known_left" (formula "10") (term "0") (ifseqformula "1"))
                (builtin "One Step Simplification" (formula "10"))
               (rule "inEqSimp_leqRight" (formula "10"))
               (rule "polySimp_mulAssoc" (formula "1") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
               (rule "polySimp_elimOne" (formula "1") (term "1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "1"))
               (rule "polySimp_mulComm0" (formula "1") (term "1"))
               (rule "polySimp_rightDist" (formula "1") (term "1"))
               (rule "mul_literals" (formula "1") (term "0,1"))
               (rule "inEqSimp_contradInEq1" (formula "7") (ifseqformula "1"))
               (rule "andLeft" (formula "7"))
               (rule "inEqSimp_homoInEq1" (formula "7"))
               (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
               (rule "polySimp_rightDist" (formula "7") (term "1,0"))
               (rule "mul_literals" (formula "7") (term "0,1,0"))
               (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0"))
               (rule "polySimp_elimOne" (formula "7") (term "1,1,0"))
               (rule "polySimp_addAssoc" (formula "7") (term "0"))
               (rule "polySimp_addComm1" (formula "7") (term "0,0"))
               (rule "add_literals" (formula "7") (term "0,0,0"))
               (rule "polySimp_pullOutFactor2b" (formula "7") (term "0"))
               (rule "add_literals" (formula "7") (term "1,1,0"))
               (rule "times_zero_1" (formula "7") (term "1,0"))
               (rule "add_zero_right" (formula "7") (term "0"))
               (rule "leq_literals" (formula "7"))
               (rule "closeFalse" (formula "7"))
            )
            (branch "CUT: 0 < v_rm_0 FALSE"
               (rule "cut" (inst "cutFormula=v_rm_0 = Z(0(#))") (userinteraction))
               (branch "CUT: v_rm_0 = 0 TRUE"
                  (rule "applyEqRigid" (formula "3") (term "1,1") (ifseqformula "1") (userinteraction))
                  (rule "add_zero_right" (formula "3") (term "1") (userinteraction))
                  (rule "exRightHide" (formula "11") (inst "t=add(v_qu_0, Z(1(#)))") (userinteraction))
                  (rule "exRightHide" (formula "11") (inst "t=sub(neg(v_cnom_0), Z(1(#)))") (userinteraction))
                  (rule "eqSymm" (formula "3"))
                  (rule "replace_known_right" (formula "11") (term "0,1") (ifseqformula "10"))
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "polySimp_elimNeg" (formula "3") (term "1"))
                  (rule "polySimp_elimNeg" (formula "11") (term "0,0,0"))
                  (rule "polySimp_elimSub" (formula "11") (term "1,1,0"))
                  (rule "mul_literals" (formula "11") (term "1,1,1,0"))
                  (rule "polySimp_elimNeg" (formula "11") (term "1,0,1,0,1"))
                  (rule "polySimp_elimNeg" (formula "11") (term "1,1,1"))
                  (rule "polySimp_elimSub" (formula "11") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "11") (term "1,1,1,0,0"))
                  (rule "polySimp_elimSub" (formula "11") (term "0,1,1"))
                  (rule "mul_literals" (formula "11") (term "1,0,1,1"))
                  (rule "polySimp_elimNeg" (formula "11") (term "0,1,1,0"))
                  (rule "polySimp_elimNeg" (formula "11") (term "0,1,1,0,0"))
                  (rule "polySimp_elimNeg" (formula "11") (term "0,0,1,1"))
                  (rule "polySimp_mulComm0" (formula "11") (term "0,1,0,0"))
                  (rule "polySimp_mulComm0" (formula "11") (term "0,0,1"))
                  (rule "polySimp_mulComm0" (formula "11") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "11") (term "1,0,1,0,1"))
                  (rule "polySimp_addComm0" (formula "11") (term "1,1,0"))
                  (rule "polySimp_addComm0" (formula "11") (term "1,1,0,0"))
                  (rule "polySimp_addComm0" (formula "11") (term "0,1,1"))
                  (rule "polySimp_addComm0" (formula "11") (term "1,0,1,0,0"))
                  (rule "polySimp_addComm0" (formula "11") (term "1,0,0,1"))
                  (rule "polySimp_addComm0" (formula "11") (term "1,0,0,0"))
                  (rule "polySimp_addComm0" (formula "11") (term "1,1,0,1,0,1"))
                  (rule "polySimp_rightDist" (formula "11") (term "0,1,0,0"))
                  (rule "polySimp_elimOne" (formula "11") (term "0,0,1,0,0"))
                  (rule "polySimp_addComm1" (formula "11") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "11") (term "0,0,1"))
                  (rule "polySimp_elimOne" (formula "11") (term "0,0,0,1"))
                  (rule "polySimp_rightDist" (formula "11") (term "0,0,0"))
                  (rule "mul_literals" (formula "11") (term "0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "11") (term "1,0,1,0,1"))
                  (rule "mul_literals" (formula "11") (term "0,1,0,1,0,1"))
                  (rule "inEqSimp_geqRight" (formula "10"))
                  (rule "times_zero_1" (formula "1") (term "1,0,0"))
                  (rule "add_zero_right" (formula "1") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "11") (term "0,1,0,0"))
                  (rule "polySimp_homoEq" (formula "11") (term "0,0"))
                  (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0"))
                  (rule "polySimp_addComm0" (formula "11") (term "0,0,0,0,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "11") (term "1,1,0,0,0,0,0"))
                  (rule "times_zero_1" (formula "11") (term "1,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "11") (term "0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "11") (term "0,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,0"))
                  (rule "polySimp_addComm1" (formula "11") (term "0,0,0"))
                  (rule "polySimp_addAssoc" (formula "11") (term "0,1,0,1"))
                  (rule "add_literals" (formula "11") (term "0,0,1,0,1"))
                  (rule "add_zero_left" (formula "11") (term "0,1,0,1"))
                  (rule "inEqSimp_ltToLeq" (formula "11") (term "1,1"))
                  (rule "polySimp_mulAssoc" (formula "11") (term "1,0,0,1,1"))
                  (rule "polySimp_mulComm0" (formula "11") (term "0,1,0,0,1,1"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,1,1"))
                  (rule "polySimp_elimOne" (formula "11") (term "1,0,0,1,1"))
                  (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,0"))
                  (rule "add_literals" (formula "11") (term "0,0,0,0,0"))
                  (rule "add_zero_left" (formula "11") (term "0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "11") (term "0,1,1"))
                  (rule "polySimp_addComm1" (formula "11") (term "0,0,1,1"))
                  (rule "add_literals" (formula "11") (term "0,0,0,1,1"))
                  (rule "add_zero_left" (formula "11") (term "0,0,1,1"))
                  (rule "polySimp_pullOutFactor1" (formula "11") (term "0,1,1"))
                  (rule "add_literals" (formula "11") (term "1,0,1,1"))
                  (rule "times_zero_1" (formula "11") (term "0,1,1"))
                  (rule "leq_literals" (formula "11") (term "1,1"))
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "inEqSimp_homoInEq1" (formula "11") (term "1"))
                  (rule "polySimp_mulComm0" (formula "11") (term "1,0,1"))
                  (rule "polySimp_rightDist" (formula "11") (term "1,0,1"))
                  (rule "polySimp_mulComm0" (formula "11") (term "0,1,0,1"))
                  (rule "polySimp_addAssoc" (formula "11") (term "0,1"))
                  (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,1"))
                  (rule "add_literals" (formula "11") (term "1,1,0,0,1"))
                  (rule "times_zero_1" (formula "11") (term "1,0,0,1"))
                  (rule "add_zero_right" (formula "11") (term "0,0,1"))
                  (rule "inEqSimp_homoInEq0" (formula "11") (term "1,0"))
                  (rule "times_zero_2" (formula "11") (term "1,0,1,0"))
                  (rule "add_zero_right" (formula "11") (term "0,1,0"))
                  (rule "applyEq" (formula "11") (term "0,1,0,1") (ifseqformula "4"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1"))
                  (rule "polySimp_pullOutFactor0" (formula "11") (term "0,1"))
                  (rule "add_literals" (formula "11") (term "1,0,1"))
                  (rule "times_zero_1" (formula "11") (term "0,1"))
                  (rule "leq_literals" (formula "11") (term "1"))
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "applyEqRigid" (formula "11") (term "1,0,0") (ifseqformula "4"))
                  (rule "polySimp_pullOutFactor1" (formula "11") (term "0,0"))
                  (rule "add_literals" (formula "11") (term "1,0,0"))
                  (rule "times_zero_1" (formula "11") (term "0,0"))
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "inEqSimp_geqRight" (formula "11"))
                  (rule "times_zero_1" (formula "1") (term "1,0,0"))
                  (rule "add_zero_right" (formula "1") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0"))
                  (rule "add_literals" (formula "1") (term "0,0"))
                  (rule "add_zero_left" (formula "1") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                  (rule "mul_literals" (formula "2") (term "1"))
                  (rule "inEqSimp_invertInEq0" (formula "1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                  (rule "times_zero_2" (formula "1") (term "1"))
                  (rule "polySimp_elimOne" (formula "1") (term "0"))
                  (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "2"))
                  (rule "qeq_literals" (formula "1") (term "0"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "closeFalse" (formula "1"))
               )
               (branch "CUT: v_rm_0 = 0 FALSE"
                  (rule "inEqSimp_ltRight" (formula "9"))
                  (rule "add_zero_right" (formula "1") (term "0"))
                  (rule "polySimp_mulComm0" (formula "1") (term "0"))
                  (rule "inEqSimp_commuteLeq" (formula "4"))
                  (rule "inEqSimp_invertInEq1" (formula "1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                  (rule "times_zero_2" (formula "1") (term "1"))
                  (rule "polySimp_elimOne" (formula "1") (term "0"))
                  (rule "inEqSimp_strengthen1" (formula "4") (ifseqformula "9"))
                  (rule "add_zero_right" (formula "4") (term "1"))
                  (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "1"))
                  (rule "qeq_literals" (formula "4") (term "0"))
                   (builtin "One Step Simplification" (formula "4"))
                  (rule "closeFalse" (formula "4"))
               )
            )
         )
      )
      (branch "Use Case"
         (rule "hide_right" (formula "4") (userinteraction))
         (rule "insert_hidden_taclet221_0" (userinteraction))
         (rule "allRight" (formula "4") (inst "sk=v_a_0") (userinteraction))
         (rule "cut" (inst "cutFormula=geq(v_a_0, Z(0(#)))") (userinteraction))
         (branch "CUT: v_a_0 >= 0 TRUE"
            (rule "instAll" (formula "5") (term "0,0,0,0,0") (ifseqformula "3") (userinteraction))
            (rule "replace_known_left" (formula "1") (term "0") (ifseqformula "2"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "6")))
            (rule "closeFalse" (formula "1"))
         )
         (branch "CUT: v_a_0 >= 0 FALSE"
            (rule "allLeftHide" (formula "1") (inst "t=neg(v_a_0)") (userinteraction))
            (rule "polySimp_elimNeg" (formula "1") (term "0,0"))
            (rule "polySimp_homoEq" (formula "5") (term "0,0,0,0"))
            (rule "polySimp_homoEq" (formula "1") (term "0,0,0,0,1"))
            (rule "polySimp_elimNeg" (formula "1") (term "1,0,1,0,1,1,0,0,1"))
            (rule "polySimp_elimNeg" (formula "1") (term "1,0,1,0,2,1,0,0,1"))
            (rule "polySimp_elimNeg" (formula "5") (term "1,1,2,1,0,0"))
            (rule "polySimp_elimNeg" (formula "1") (term "1,1,2,1,0,0,1"))
            (rule "polySimp_elimNeg" (formula "1") (term "0,0,1,0,0,0,0,0,1"))
            (rule "polySimp_elimNeg" (formula "1") (term "0,1,0,1,0,1,1,0,0,1"))
            (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0,1,1,0,0,1"))
            (rule "polySimp_elimNeg" (formula "1") (term "0,1,0,1,0,2,1,0,0,1"))
            (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0,2,1,0,0,1"))
            (rule "polySimp_elimNeg" (formula "1") (term "0,1,0,0,0,0,0,1"))
            (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,0,0,1"))
            (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,0,0,1"))
            (rule "polySimp_elimOne" (formula "1") (term "1,0,1,0,1,1,0,0,1"))
            (rule "polySimp_elimOne" (formula "1") (term "1,0,1,0,2,1,0,0,1"))
            (rule "replace_known_right" (formula "1") (term "1") (ifseqformula "5"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "notLeft" (formula "1"))
            (rule "inEqSimp_geqRight" (formula "4"))
            (rule "times_zero_1" (formula "1") (term "1,0,0"))
            (rule "add_zero_right" (formula "1") (term "0,0"))
            (rule "inEqSimp_geqRight" (formula "4"))
            (rule "times_zero_1" (formula "1") (term "1,0,0"))
            (rule "add_zero_right" (formula "1") (term "0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "2"))
            (rule "mul_literals" (formula "2") (term "1"))
            (rule "inEqSimp_sepNegMonomial0" (formula "1"))
            (rule "polySimp_mulLiterals" (formula "1") (term "0"))
            (rule "polySimp_elimOne" (formula "1") (term "0"))
            (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "1"))
            (rule "qeq_literals" (formula "2") (term "0"))
             (builtin "One Step Simplification" (formula "2"))
            (rule "closeFalse" (formula "2"))
         )
      )
   )
)
)
}
