\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Wed Apr 12 13:23:15 CEST 2023
[Labels]UseOriginLabels=true
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=JavaCard-JavaCard\\:on, Strings-Strings\\:on, assertions-assertions\\:on, bigint-bigint\\:on, floatRules-floatRules\\:strictfpOnly, initialisation-initialisation\\:disableStaticInitialisation, intRules-intRules\\:arithmeticSemanticsIgnoringOF, integerSimplificationRules-integerSimplificationRules\\:full, javaLoopTreatment-javaLoopTreatment\\:efficient, mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off, methodExpansion-methodExpansion\\:modularOnly, modelFields-modelFields\\:showSatisfiability, moreSeqRules-moreSeqRules\\:off, permissions-permissions\\:off, programRules-programRules\\:Java, reach-reach\\:on, runtimeExceptions-runtimeExceptions\\:ban, sequences-sequences\\:on, wdChecks-wdChecks\\:off, wdOperator-wdOperator\\:L
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_NONE
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_OFF
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_RESTRICTED
[Strategy]MaximumNumberOfAutomaticApplications=4000
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[Strategy]Timeout=-1
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_ON
[SMTSettings]useUninterpretedMultiplication=true
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[SMTSettings]maxGenericSorts=2
[StrategyProperty]OSS_OPTIONS_KEY=OSS_ON
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\proofObligation {
	"name": "jmodjmod",
	"class": "de.uka.ilkd.key.taclettranslation.lemma.TacletProofObligationInput",
 }

\proof {
(keyLog "0" (keyUser "Julian" ) (keyVersion "80a871ca3bac8bb405ecc216fcb6fa9ef6f8a395"))

(autoModeTime "0")

(branch "dummy ID"
(rule "allRight" (formula "1") (newnames "v_N,v_D1,v_D2") (inst "sk=v_N_0") (userinteraction))
(rule "allRight" (formula "1") (inst "sk=v_D1_0") (userinteraction))
(rule "allRight" (formula "1") (inst "sk=v_D2_0") (userinteraction))
(rule "impRight" (formula "1") (userinteraction))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "1"))
(rule "notLeft" (formula "1"))
(rule "jmod_axiom" (formula "1") (term "0") (userinteraction))
(rule "times_minus_one_1" (formula "1") (term "0,1,0") (userinteraction))
(rule "pull_out_neg_1" (formula "1") (term "1,0") (userinteraction))
(rule "add_eq" (formula "1") (inst "i=mul(jdiv(v_D1_0, v_D2_0), v_D2_0)") (userinteraction))
(rule "rotate_params" (formula "1") (term "0") (userinteraction))
(rule "add_sub_elim_right" (formula "1") (term "1,0") (userinteraction))
(rule "add_zero_right" (formula "1") (term "0") (userinteraction))
(rule "cut" (inst "cutFormula=geq(v_N_0, Z(0(#)))") (userinteraction))
(branch "CUT: v_N_0 >= 0 TRUE"
   (rule "jmodUnique1" (inst "x=x") (inst "cmod=cmod") (inst "deb=deb") (inst "a=a") (userinteraction))
   (rule "instAll" (formula "7") (term "0,0") (ifseqformula "1") (userinteraction))
   (rule "instAll" (formula "8") (term "1,0") (ifseqformula "1") (userinteraction))
   (rule "instAll" (formula "9") (term "1") (ifseqformula "1") (userinteraction))
   (rule "impLeft" (formula "1") (userinteraction))
   (branch
      (rule "replace_known_left" (formula "7") (term "0,0,0,0") (ifseqformula "4") (userinteraction))
      (rule "replace_known_right" (formula "7") (term "0,1,0,0,0") (ifseqformula "8") (userinteraction))
       (builtin "One Step Simplification" (formula "7"))
      (rule "jmod_geZero" (formula "7") (term "1,0,0") (userinteraction))
      (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "9") (userinteraction))
       (builtin "One Step Simplification" (formula "1"))
      (rule "jmod_geZero" (formula "1") (term "0,0,1") (userinteraction))
      (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "11") (userinteraction))
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "6")))
      (rule "leq_to_geq" (formula "1") (userinteraction))
      (rule "replace_known_left" (formula "2") (term "0,1") (ifseqformula "1") (userinteraction))
       (builtin "One Step Simplification" (formula "2"))
      (rule "replace_known_left" (formula "9") (term "0,0") (ifseqformula "2") (userinteraction))
       (builtin "One Step Simplification" (formula "9"))
      (rule "cut" (inst "cutFormula=gt(v_D2_0, Z(0(#)))") (userinteraction))
      (branch "CUT: v_D2_0 > 0 TRUE"
         (rule "replace_known_left" (formula "10") (term "0,1,0") (ifseqformula "1") (userinteraction))
          (builtin "One Step Simplification" (formula "10"))
         (rule "jmod_NumPos" (formula "10") (term "0,0,0") (userinteraction))
         (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "13") (userinteraction))
         (rule "replace_known_left" (formula "1") (term "1,0") (ifseqformula "8") (userinteraction))
          (builtin "One Step Simplification" (formula "1"))
         (rule "add_zero_right" (formula "9") (term "1") (userinteraction))
         (rule "cut" (inst "cutFormula=geq(v_D1_0, Z(0(#)))") (userinteraction))
         (branch "CUT: v_D1_0 >= 0 TRUE"
            (rule "replace_known_left" (formula "2") (term "0,1") (ifseqformula "1") (userinteraction))
             (builtin "One Step Simplification" (formula "2"))
            (rule "jmod_NumPos" (formula "12") (term "0,0") (userinteraction))
            (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "14") (userinteraction))
            (rule "replace_known_left" (formula "1") (term "1,0") (ifseqformula "5") (userinteraction))
             (builtin "One Step Simplification" (formula "1"))
            (rule "cut_direct" (formula "1") (term "0,1") (userinteraction))
            (branch "CUT: v_D2_0 >= 0 TRUE"
                (builtin "One Step Simplification" (formula "2"))
               (rule "replace_known_left" (formula "14") (term "0") (ifseqformula "2") (userinteraction))
                (builtin "One Step Simplification" (formula "14"))
               (rule "intDivRem" (formula "4") (term "0") (userinteraction))
               (rule "replace_known_right" (formula "4") (term "0,0") (ifseqformula "17") (userinteraction))
                (builtin "One Step Simplification" (formula "4"))
               (rule "applyEqRigid" (formula "4") (term "1,0,1") (ifseqformula "13") (userinteraction))
               (rule "polySimp_mulAssoc" (formula "4") (term "0,1") (userinteraction))
               (rule "intDivRem" (formula "8") (term "1") (userinteraction))
               (rule "replace_known_right" (formula "8") (term "0,0") (ifseqformula "17") (userinteraction))
                (builtin "One Step Simplification" (formula "8"))
               (rule "applyEqRigid" (formula "4") (term "1,1") (ifseqformula "8") (userinteraction))
               (rule "polySimp_addAssoc" (formula "4") (term "1") (userinteraction))
               (rule "exRightHide" (formula "16") (inst "t=add(mul(jdiv(v_N_0, v_D1_0), jdiv(v_D1_0, v_D2_0)),
    jdiv(jmod(v_N_0, v_D1_0), v_D2_0))") (userinteraction))
               (rule "polySimp_homoEq" (formula "4"))
               (rule "polySimp_addComm0" (formula "16") (term "1,0,1"))
               (rule "polySimp_addComm1" (formula "4") (term "0"))
               (rule "polySimp_addComm1" (formula "4") (term "0,0"))
               (rule "polySimp_addComm0" (formula "4") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "4") (term "0"))
               (rule "polySimp_addComm1" (formula "4") (term "0,0"))
               (rule "polySimp_addComm1" (formula "4") (term "0"))
               (rule "polySimp_rightDist" (formula "16") (term "0,1"))
               (rule "polySimp_homoEq" (formula "16"))
               (rule "polySimp_mulComm0" (formula "16") (term "0,0,0,0"))
               (rule "polySimp_addComm1" (formula "16") (term "0"))
               (rule "polySimp_addComm1" (formula "16") (term "0,0"))
               (rule "polySimp_addComm0" (formula "16") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "16") (term "0"))
               (rule "polySimp_addComm1" (formula "16") (term "0,0"))
               (rule "close" (formula "16") (ifseqformula "4"))
            )
            (branch "CUT: v_D2_0 >= 0 FALSE"
               (rule "replace_known_left" (formula "12") (term "0") (ifseqformula "2"))
                (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "13")))
               (rule "closeFalse" (formula "12"))
            )
         )
         (branch "CUT: v_D1_0 >= 0 FALSE"
            (rule "replace_known_right" (formula "10") (term "0") (ifseqformula "11"))
             (builtin "One Step Simplification" (formula "10"))
            (rule "notLeft" (formula "10"))
            (rule "inEqSimp_geqRight" (formula "10"))
            (rule "times_zero_1" (formula "1") (term "1,0,0"))
            (rule "add_zero_right" (formula "1") (term "0,0"))
            (rule "inEqSimp_gtToGeq" (formula "3"))
            (rule "times_zero_1" (formula "3") (term "1,0,0"))
            (rule "add_zero_right" (formula "3") (term "0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "1"))
            (rule "mul_literals" (formula "1") (term "1"))
            (rule "inEqSimp_sepPosMonomial1" (formula "3"))
            (rule "mul_literals" (formula "3") (term "1"))
            (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "3"))
            (rule "qeq_literals" (formula "1") (term "0"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "closeFalse" (formula "1"))
         )
      )
      (branch "CUT: v_D2_0 > 0 FALSE"
         (rule "replace_known_right" (formula "10") (term "0,1,0") (ifseqformula "9") (userinteraction))
          (builtin "One Step Simplification" (formula "10"))
         (rule "jmod_NumPos" (formula "10") (term "0,0") (userinteraction))
         (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "12") (userinteraction))
         (rule "replace_known_left" (formula "1") (term "1,0") (ifseqformula "2") (userinteraction))
          (builtin "One Step Simplification" (formula "1"))
         (rule "cut_direct" (formula "1") (term "0,1") (userinteraction))
         (branch "CUT: v_D2_0 >= 0 TRUE"
            (rule "inEqSimp_gtRight" (formula "11"))
            (rule "times_zero_1" (formula "1") (term "0,0"))
            (rule "add_zero_left" (formula "1") (term "0"))
            (rule "inEqSimp_strengthen1" (formula "2") (ifseqformula "13"))
            (rule "add_zero_right" (formula "2") (term "1"))
            (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "2"))
            (rule "qeq_literals" (formula "1") (term "0"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "closeFalse" (formula "1"))
         )
         (branch "CUT: v_D2_0 >= 0 FALSE"
             (builtin "One Step Simplification" (formula "1"))
            (rule "replace_known_left" (formula "12") (term "0") (ifseqformula "1") (userinteraction))
             (builtin "One Step Simplification" (formula "12"))
            (rule "intDivRem" (formula "2") (term "0") (userinteraction))
            (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "15") (userinteraction))
             (builtin "One Step Simplification" (formula "2"))
            (rule "add_zero_right" (formula "9") (term "1") (userinteraction))
            (rule "applyEqRigid" (formula "2") (term "1,0,1") (ifseqformula "9") (userinteraction))
            (rule "intDivRem" (formula "4") (term "1") (userinteraction))
            (rule "replace_known_right" (formula "4") (term "0,0") (ifseqformula "15") (userinteraction))
             (builtin "One Step Simplification" (formula "4"))
            (rule "applyEqRigid" (formula "2") (term "1,1") (ifseqformula "4") (userinteraction))
            (rule "polySimp_addAssoc" (formula "2") (term "1") (userinteraction))
            (rule "polySimp_mulAssoc" (formula "2") (term "0,0,1") (userinteraction))
            (rule "exRightHide" (formula "14") (inst "t=add(mul(jdiv(v_N_0, v_D1_0), jdiv(v_D1_0, v_D2_0)),
    jdiv(jmod(v_N_0, v_D1_0), v_D2_0))") (userinteraction))
            (rule "polySimp_homoEq" (formula "2"))
            (rule "polySimp_addComm0" (formula "14") (term "1,0,1"))
            (rule "polySimp_addComm1" (formula "2") (term "0"))
            (rule "polySimp_addComm1" (formula "2") (term "0,0"))
            (rule "polySimp_addComm1" (formula "2") (term "0"))
            (rule "polySimp_addComm0" (formula "2") (term "0,0,0"))
            (rule "polySimp_addComm1" (formula "2") (term "0,0"))
            (rule "polySimp_addComm1" (formula "2") (term "0"))
            (rule "polySimp_rightDist" (formula "14") (term "0,1"))
            (rule "polySimp_homoEq" (formula "14"))
            (rule "polySimp_mulComm0" (formula "14") (term "0,0,0,0"))
            (rule "polySimp_addComm1" (formula "14") (term "0"))
            (rule "polySimp_addComm1" (formula "14") (term "0,0"))
            (rule "polySimp_addComm1" (formula "14") (term "0"))
            (rule "polySimp_addComm0" (formula "14") (term "0,0,0"))
            (rule "polySimp_addComm1" (formula "14") (term "0,0"))
            (rule "close" (formula "14") (ifseqformula "2"))
         )
      )
   )
   (branch
      (rule "eqSymm" (formula "10"))
      (rule "close" (formula "10") (ifseqformula "1"))
   )
)
(branch "CUT: v_N_0 >= 0 FALSE"
   (rule "jmodUnique2" (inst "x=x") (inst "cmod=cmod") (inst "deb=deb") (inst "a=a") (userinteraction))
   (rule "instAll" (formula "7") (term "0,0") (ifseqformula "1") (userinteraction))
   (rule "instAll" (formula "8") (term "1,0") (ifseqformula "1") (userinteraction))
   (rule "instAll" (formula "9") (term "1") (ifseqformula "1") (userinteraction))
   (rule "impLeft" (formula "1") (userinteraction))
   (branch
      (rule "geq_to_leq" (formula "7") (userinteraction))
      (rule "cut_direct" (formula "6") (term "0,0,0,0") (userinteraction))
      (branch "CUT: v_N_0 <= 0 TRUE"
         (rule "replace_known_right" (formula "7") (term "0,1,0,0,0") (ifseqformula "9") (userinteraction))
          (builtin "One Step Simplification" (formula "7"))
         (rule "jmod_geZero" (formula "7") (term "0,1,0") (userinteraction))
         (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "10") (userinteraction))
          (builtin "One Step Simplification" (formula "1"))
         (rule "jmod_geZero" (formula "1") (term "0,0,1") (userinteraction))
         (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "12") (userinteraction))
          (builtin "One Step Simplification" (formula "1"))
         (rule "cut_direct" (formula "1") (term "0,1") (userinteraction))
         (branch "CUT: v_N_0 >= 0 TRUE"
            (rule "inEqSimp_leqRight" (formula "11"))
            (rule "add_zero_right" (formula "1") (term "0"))
            (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "1"))
            (rule "polySimp_mulLiterals" (formula "1") (term "0"))
            (rule "polySimp_elimOne" (formula "1") (term "0"))
            (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "1"))
            (rule "qeq_literals" (formula "2") (term "0"))
             (builtin "One Step Simplification" (formula "2"))
            (rule "closeFalse" (formula "2"))
         )
         (branch "CUT: v_N_0 >= 0 FALSE"
             (builtin "One Step Simplification" (formula "1"))
            (rule "cut_direct" (formula "2") (term "0,1") (userinteraction))
            (branch "CUT: jmod(v_N_0, v_D1_0) >= 0 TRUE"
               (rule "cut" (inst "cutFormula=neg(jmod(v_N_0, v_D1_0)) = Z(0(#))") (userinteraction))
               (branch "CUT: -jmod(v_N_0, v_D1_0) = 0 TRUE"
                  (rule "multiply_eq" (formula "1") (inst "multFac=Z(neglit(1(#)))") (userinteraction))
                  (rule "times_minus_one_1" (formula "1") (term "0") (userinteraction))
                  (rule "sub_sub_elim" (formula "1") (term "0") (userinteraction))
                  (rule "mul_literals" (formula "1") (term "1") (userinteraction))
                  (rule "applyEqRigid" (formula "13") (term "0,0,1,0") (ifseqformula "1") (userinteraction))
                   (builtin "One Step Simplification" (formula "5"))
                  (rule "jmod_axiom" (formula "13") (term "0,1,0") (userinteraction))
                  (rule "add_zero_left" (formula "13") (term "0,1,0") (userinteraction))
                  (rule "times_minus_one_1" (formula "13") (term "0,0,1,0") (userinteraction))
                  (rule "pull_out_neg_1" (formula "13") (term "0,1,0") (userinteraction))
                  (rule "jdiv_zero" (formula "13") (term "0,0,0,1,0") (userinteraction))
                  (branch
                     (rule "times_zero_2" (formula "13") (term "0,0,1,0") (userinteraction))
                     (rule "neg_literal" (formula "13") (term "0,1,0") (userinteraction))
                     (rule "sub_zero_1" (formula "13") (term "0,1,0") (userinteraction))
                     (rule "leq_literals" (formula "13") (term "1,0") (userinteraction))
                      (builtin "One Step Simplification" (formula "13"))
                     (rule "applyEqRigid" (formula "13") (term "0,0,0,0") (ifseqformula "1") (userinteraction))
                     (rule "jmod_axiom" (formula "13") (term "0,0,0") (userinteraction))
                     (rule "jdiv_zero" (formula "13") (term "0,0,1,0,0,0") (userinteraction))
                     (branch
                        (rule "add_zero_left" (formula "13") (term "0,0,0") (userinteraction))
                        (rule "times_zero_2" (formula "13") (term "0,0,0,0") (userinteraction))
                        (rule "times_zero_2" (formula "13") (term "0,0,0") (userinteraction))
                        (rule "neg_literal" (formula "13") (term "0,0") (userinteraction))
                        (rule "sub_zero_1" (formula "13") (term "0,0") (userinteraction))
                        (rule "cut_direct" (formula "13") (term "0") (userinteraction))
                        (branch "CUT: 0 < if (v_D2_0 > 0) then (v_D2_0) else (-v_D2_0) TRUE"
                            (builtin "One Step Simplification" (formula "14"))
                           (rule "intDivRem" (formula "2") (term "0") (userinteraction))
                           (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "18") (userinteraction))
                            (builtin "One Step Simplification" (formula "2"))
                           (rule "add_zero_right" (formula "12") (term "1") (userinteraction))
                           (rule "applyEqRigid" (formula "2") (term "1,0,1") (ifseqformula "12") (userinteraction))
                           (rule "intDivRem" (formula "7") (term "1") (userinteraction))
                           (rule "replace_known_right" (formula "7") (term "0,0") (ifseqformula "18") (userinteraction))
                            (builtin "One Step Simplification" (formula "7"))
                           (rule "applyEqRigid" (formula "2") (term "1,1") (ifseqformula "7") (userinteraction))
                           (rule "polySimp_addAssoc" (formula "2") (term "1") (userinteraction))
                           (rule "polySimp_mulAssoc" (formula "2") (term "0,0,1") (userinteraction))
                           (rule "exRightHide" (formula "16") (inst "t=add(mul(jdiv(v_N_0, v_D1_0), jdiv(v_D1_0, v_D2_0)),
    jdiv(jmod(v_N_0, v_D1_0), v_D2_0))") (userinteraction))
                           (rule "polySimp_homoEq" (formula "2"))
                           (rule "polySimp_addComm0" (formula "16") (term "1,0,1"))
                           (rule "polySimp_addComm1" (formula "2") (term "0"))
                           (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "2") (term "0"))
                           (rule "polySimp_addComm0" (formula "2") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "2") (term "0"))
                           (rule "polySimp_rightDist" (formula "16") (term "0,1"))
                           (rule "polySimp_homoEq" (formula "16"))
                           (rule "polySimp_mulComm0" (formula "16") (term "0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "16") (term "0"))
                           (rule "polySimp_addComm1" (formula "16") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "16") (term "0"))
                           (rule "polySimp_addComm0" (formula "16") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "16") (term "0,0"))
                           (rule "close" (formula "16") (ifseqformula "2"))
                        )
                        (branch "CUT: 0 < if (v_D2_0 > 0) then (v_D2_0) else (-v_D2_0) FALSE"
                           (rule "polySimp_elimNeg" (formula "13") (term "2,1"))
                           (rule "inEqSimp_ltRight" (formula "13"))
                           (rule "add_zero_right" (formula "1") (term "0"))
                           (rule "polySimp_mulComm0" (formula "1") (term "0"))
                           (rule "inEqSimp_gtToGeq" (formula "1") (term "0,0,0"))
                           (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "0,0,0"))
                           (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                           (rule "inEqSimp_invertInEq1" (formula "1"))
                           (rule "times_zero_2" (formula "1") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                           (rule "polySimp_elimOne" (formula "1") (term "0"))
                           (rule "equiv_left" (formula "12"))
                           (branch
                              (rule "inEqSimp_strengthen1" (formula "13") (ifseqformula "17"))
                              (rule "add_zero_right" (formula "13") (term "1"))
                              (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "13"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "inEqSimp_contradInEq0" (formula "13") (ifseqformula "1"))
                              (rule "qeq_literals" (formula "13") (term "0"))
                               (builtin "One Step Simplification" (formula "13"))
                              (rule "closeFalse" (formula "13"))
                           )
                           (branch
                              (rule "inEqSimp_geqRight" (formula "13"))
                              (rule "times_zero_1" (formula "1") (term "1,0,0"))
                              (rule "add_zero_right" (formula "1") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                              (rule "mul_literals" (formula "1") (term "1"))
                              (rule "inEqSimp_contradInEq0" (formula "2") (term "0,0") (ifseqformula "1"))
                              (rule "qeq_literals" (formula "2") (term "0,0,0"))
                               (builtin "One Step Simplification" (formula "2"))
                              (rule "inEqSimp_invertInEq0" (formula "2"))
                              (rule "times_zero_2" (formula "2") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                              (rule "polySimp_elimOne" (formula "2") (term "0"))
                              (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "2"))
                              (rule "qeq_literals" (formula "1") (term "0"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "closeFalse" (formula "1"))
                           )
                        )
                     )
                     (branch
                        (rule "notRight" (formula "13"))
                        (rule "close" (formula "16") (ifseqformula "1"))
                     )
                  )
                  (branch
                     (rule "notRight" (formula "13"))
                     (rule "close" (formula "16") (ifseqformula "1"))
                  )
               )
               (branch "CUT: -jmod(v_N_0, v_D1_0) = 0 FALSE"
                  (rule "polySimp_elimNeg" (formula "1") (term "1"))
                  (rule "polySimp_elimNeg" (formula "10") (term "0"))
                  (rule "inEqSimp_commuteLeq" (formula "1"))
                  (rule "polySimp_invertEq" (formula "10"))
                  (rule "times_zero_2" (formula "10") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                  (rule "polySimp_elimOne" (formula "10") (term "0"))
                  (rule "inEqSimp_invertInEq1" (formula "1"))
                  (rule "times_zero_2" (formula "1") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                  (rule "polySimp_elimOne" (formula "1") (term "0"))
                  (rule "inEqSimp_strengthen0" (formula "1") (ifseqformula "10"))
                  (rule "add_zero_right" (formula "1") (term "1"))
                  (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "1"))
                  (rule "qeq_literals" (formula "2") (term "0"))
                   (builtin "One Step Simplification" (formula "2"))
                  (rule "closeFalse" (formula "2"))
               )
            )
            (branch "CUT: jmod(v_N_0, v_D1_0) >= 0 FALSE"
                (builtin "One Step Simplification" (formula "2"))
               (rule "multiply_inEq0" (formula "2") (inst "multFac=Z(neglit(1(#)))") (userinteraction))
               (rule "qeq_literals" (formula "2") (term "0") (userinteraction))
                (builtin "One Step Simplification" (formula "2"))
               (rule "mul_literals" (formula "2") (term "0") (userinteraction))
               (rule "times_minus_one_1" (formula "2") (term "1") (userinteraction))
               (rule "sub_sub_elim" (formula "2") (term "1") (userinteraction))
               (rule "geq_to_leq" (formula "2") (userinteraction))
               (rule "replace_known_left" (formula "12") (term "1,0") (ifseqformula "2") (userinteraction))
                (builtin "One Step Simplification" (formula "12"))
               (rule "jmod_NumNeg" (formula "12") (term "0,0,0") (userinteraction))
               (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "15") (userinteraction))
               (rule "cut_direct" (formula "1") (term "1,0") (userinteraction))
               (branch "CUT: jmod(v_N_0, v_D1_0) <= 0 TRUE"
                   (builtin "One Step Simplification" (formula "2"))
                  (rule "cut" (inst "cutFormula=gt(v_D2_0, Z(0(#)))") (userinteraction))
                  (branch "CUT: v_D2_0 > 0 TRUE"
                     (rule "replace_known_left" (formula "15") (term "0,1,0") (ifseqformula "1") (userinteraction))
                      (builtin "One Step Simplification" (formula "15"))
                     (rule "cut_direct" (formula "3") (term "0,1") (userinteraction))
                     (branch "CUT: v_D2_0 >= 0 TRUE"
                         (builtin "One Step Simplification" (formula "4"))
                        (rule "cut_direct" (formula "16") (term "0") (userinteraction))
                        (branch "CUT: -jmod(jmod(v_N_0, v_D1_0), v_D2_0) < v_D2_0 TRUE"
                            (builtin "One Step Simplification" (formula "17"))
                           (rule "intDivRem" (formula "3") (term "0") (userinteraction))
                           (rule "replace_known_right" (formula "3") (term "0,0") (ifseqformula "21") (userinteraction))
                            (builtin "One Step Simplification" (formula "3"))
                           (rule "add_zero_right" (formula "14") (term "1") (userinteraction))
                           (rule "applyEqRigid" (formula "3") (term "1,0,1") (ifseqformula "14") (userinteraction))
                           (rule "intDivRem" (formula "6") (term "0") (userinteraction))
                           (rule "replace_known_right" (formula "6") (term "0,0") (ifseqformula "21") (userinteraction))
                            (builtin "One Step Simplification" (formula "6"))
                           (rule "applyEqRigid" (formula "3") (term "1,1") (ifseqformula "6") (userinteraction))
                           (rule "polySimp_mulAssoc" (formula "3") (term "0,1") (userinteraction))
                           (rule "cut" (inst "cutFormula=  v_N_0
= add(mul(add(mul(jdiv(v_N_0, v_D1_0),
                  jdiv(v_D1_0, v_D2_0)),
              jdiv(jmod(v_N_0, v_D1_0), v_D2_0)),
          v_D2_0),
      jmod(jmod(v_N_0, v_D1_0), v_D2_0))") (userinteraction))
                           (branch "CUT: v_N_0 = ( jdiv(v_N_0, v_D1_0) * jdiv(v_D1_0, v_D2_0) + jdiv(jmod(v_N_0, v_D1_0), v_D2_0)) * v_D2_0 + jmod(jmod(v_N_0, v_D1_0), v_D2_0) TRUE"
                              (rule "exRightHide" (formula "20") (inst "t=add(mul(jdiv(v_N_0, v_D1_0), jdiv(v_D1_0, v_D2_0)),
    jdiv(jmod(v_N_0, v_D1_0), v_D2_0))") (userinteraction))
                              (rule "polySimp_mulComm0" (formula "1") (term "0,1"))
                              (rule "close" (formula "20") (ifseqformula "1"))
                           )
                           (branch "CUT: v_N_0 = ( jdiv(v_N_0, v_D1_0) * jdiv(v_D1_0, v_D2_0) + jdiv(jmod(v_N_0, v_D1_0), v_D2_0)) * v_D2_0 + jmod(jmod(v_N_0, v_D1_0), v_D2_0) FALSE"
                              (rule "polySimp_mulComm0" (formula "17") (term "0,1"))
                              (rule "polySimp_addComm0" (formula "3") (term "1"))
                              (rule "polySimp_homoEq" (formula "3"))
                              (rule "polySimp_addComm0" (formula "17") (term "1,0,1"))
                              (rule "polySimp_addComm1" (formula "3") (term "0"))
                              (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                              (rule "polySimp_addComm0" (formula "3") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                              (rule "polySimp_rightDist" (formula "17") (term "0,1"))
                              (rule "polySimp_homoEq" (formula "17"))
                              (rule "polySimp_mulComm0" (formula "17") (term "0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "17") (term "0"))
                              (rule "polySimp_addComm1" (formula "17") (term "0,0"))
                              (rule "polySimp_addComm0" (formula "17") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "17") (term "0"))
                              (rule "polySimp_addComm1" (formula "17") (term "0,0"))
                              (rule "close" (formula "17") (ifseqformula "3"))
                           )
                        )
                        (branch "CUT: -jmod(jmod(v_N_0, v_D1_0), v_D2_0) < v_D2_0 FALSE"
                           (rule "polySimp_elimNeg" (formula "4") (term "1"))
                           (rule "polySimp_elimNeg" (formula "16") (term "0"))
                           (rule "inEqSimp_ltRight" (formula "16"))
                           (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                           (rule "inEqSimp_gtToGeq" (formula "5"))
                           (rule "polySimp_mulAssoc" (formula "5") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "5") (term "0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0"))
                           (rule "polySimp_elimOne" (formula "5") (term "1,0,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                           (rule "polySimp_elimOne" (formula "1") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                           (rule "polySimp_mulComm0" (formula "5") (term "1"))
                           (rule "polySimp_rightDist" (formula "5") (term "1"))
                           (rule "mul_literals" (formula "5") (term "0,1"))
                           (rule "inEqSimp_contradInEq0" (formula "5") (ifseqformula "1"))
                           (rule "andLeft" (formula "5"))
                           (rule "inEqSimp_homoInEq1" (formula "5"))
                           (rule "polySimp_mulLiterals" (formula "5") (term "1,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "5") (term "0"))
                           (rule "add_literals" (formula "5") (term "1,1,0"))
                           (rule "times_zero_1" (formula "5") (term "1,0"))
                           (rule "add_zero_right" (formula "5") (term "0"))
                           (rule "leq_literals" (formula "5"))
                           (rule "closeFalse" (formula "5"))
                        )
                     )
                     (branch "CUT: v_D2_0 >= 0 FALSE"
                        (rule "inEqSimp_geqRight" (formula "13"))
                        (rule "times_zero_1" (formula "1") (term "1,0,0"))
                        (rule "add_zero_right" (formula "1") (term "0,0"))
                        (rule "inEqSimp_gtToGeq" (formula "2"))
                        (rule "times_zero_1" (formula "2") (term "1,0,0"))
                        (rule "add_zero_right" (formula "2") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                        (rule "mul_literals" (formula "1") (term "1"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                        (rule "mul_literals" (formula "2") (term "1"))
                        (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "2"))
                        (rule "qeq_literals" (formula "1") (term "0"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "closeFalse" (formula "1"))
                     )
                  )
                  (branch "CUT: v_D2_0 > 0 FALSE"
                     (rule "replace_known_right" (formula "15") (term "0,1,0") (ifseqformula "12") (userinteraction))
                      (builtin "One Step Simplification" (formula "15"))
                     (rule "cut_direct" (formula "2") (term "0,1") (userinteraction))
                     (branch "CUT: v_D2_0 >= 0 TRUE"
                        (rule "inEqSimp_gtRight" (formula "13"))
                        (rule "times_zero_1" (formula "1") (term "0,0"))
                        (rule "add_zero_left" (formula "1") (term "0"))
                        (rule "inEqSimp_strengthen0" (formula "1") (ifseqformula "18"))
                        (rule "add_zero_right" (formula "1") (term "1"))
                        (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "1"))
                        (rule "qeq_literals" (formula "3") (term "0"))
                         (builtin "One Step Simplification" (formula "3"))
                        (rule "closeFalse" (formula "3"))
                     )
                     (branch "CUT: v_D2_0 >= 0 FALSE"
                         (builtin "One Step Simplification" (formula "2"))
                        (rule "cut_direct" (formula "16") (term "0") (userinteraction))
                        (branch "CUT: -jmod(jmod(v_N_0, v_D1_0), v_D2_0) < -v_D2_0 TRUE"
                            (builtin "One Step Simplification" (formula "17"))
                           (rule "intDivRem" (formula "2") (term "0") (userinteraction))
                           (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "21") (userinteraction))
                            (builtin "One Step Simplification" (formula "2"))
                           (rule "applyEqRigid" (formula "2") (term "1,0,1") (ifseqformula "12") (userinteraction))
                           (rule "intDivRem" (formula "4") (term "0") (userinteraction))
                           (rule "replace_known_right" (formula "4") (term "0,0") (ifseqformula "21") (userinteraction))
                            (builtin "One Step Simplification" (formula "4"))
                           (rule "applyEqRigid" (formula "2") (term "1,1") (ifseqformula "4") (userinteraction))
                           (rule "add_zero_right" (formula "2") (term "1,0,1") (userinteraction))
                           (rule "polySimp_mulAssoc" (formula "2") (term "0,1") (userinteraction))
                           (rule "polySimp_addAssoc" (formula "2") (term "1") (userinteraction))
                           (rule "exRightHide" (formula "19") (inst "t=add(mul(jdiv(v_N_0, v_D1_0), jdiv(v_D1_0, v_D2_0)),
    jdiv(jmod(v_N_0, v_D1_0), v_D2_0))") (userinteraction))
                           (rule "polySimp_homoEq" (formula "2"))
                           (rule "polySimp_addComm0" (formula "19") (term "1,0,1"))
                           (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "2") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "2") (term "0"))
                           (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "2") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "2") (term "0"))
                           (rule "polySimp_rightDist" (formula "19") (term "0,1"))
                           (rule "polySimp_homoEq" (formula "19"))
                           (rule "polySimp_mulComm0" (formula "19") (term "0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "19") (term "0"))
                           (rule "polySimp_addComm1" (formula "19") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "19") (term "0"))
                           (rule "polySimp_addComm0" (formula "19") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "19") (term "0,0"))
                           (rule "close" (formula "19") (ifseqformula "2"))
                        )
                        (branch "CUT: -jmod(jmod(v_N_0, v_D1_0), v_D2_0) < -v_D2_0 FALSE"
                           (rule "polySimp_elimNeg" (formula "16") (term "0"))
                           (rule "polySimp_elimNeg" (formula "16") (term "1"))
                           (rule "inEqSimp_gtToGeq" (formula "2"))
                           (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                           (rule "inEqSimp_ltRight" (formula "16"))
                           (rule "polySimp_mulAssoc" (formula "1") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "1") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "0,0"))
                           (rule "polySimp_elimOne" (formula "1") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                           (rule "polySimp_mulComm0" (formula "3") (term "1"))
                           (rule "polySimp_rightDist" (formula "3") (term "1"))
                           (rule "mul_literals" (formula "3") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                           (rule "polySimp_elimOne" (formula "1") (term "0"))
                           (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "3"))
                           (rule "andLeft" (formula "1"))
                           (rule "inEqSimp_homoInEq1" (formula "1"))
                           (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                           (rule "add_literals" (formula "1") (term "1,1,0"))
                           (rule "times_zero_1" (formula "1") (term "1,0"))
                           (rule "add_zero_right" (formula "1") (term "0"))
                           (rule "leq_literals" (formula "1"))
                           (rule "closeFalse" (formula "1"))
                        )
                     )
                  )
               )
               (branch "CUT: jmod(v_N_0, v_D1_0) <= 0 FALSE"
                  (rule "inEqSimp_leqRight" (formula "11"))
                  (rule "times_zero_1" (formula "1") (term "1,0,0"))
                  (rule "add_zero_right" (formula "1") (term "0,0"))
                  (rule "inEqSimp_geqRight" (formula "12"))
                  (rule "times_zero_1" (formula "1") (term "1,0,0"))
                  (rule "add_zero_right" (formula "1") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                  (rule "mul_literals" (formula "2") (term "1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                  (rule "mul_literals" (formula "1") (term "1"))
                  (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "1"))
                  (rule "qeq_literals" (formula "2") (term "0"))
                   (builtin "One Step Simplification" (formula "2"))
                  (rule "closeFalse" (formula "2"))
               )
            )
         )
      )
      (branch "CUT: v_N_0 <= 0 FALSE"
         (rule "inEqSimp_leqRight" (formula "8"))
         (rule "add_zero_right" (formula "1") (term "0"))
         (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
         (rule "inEqSimp_leqRight" (formula "7"))
         (rule "times_zero_1" (formula "1") (term "1,0,0"))
         (rule "add_zero_right" (formula "1") (term "0,0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "2"))
         (rule "polySimp_mulLiterals" (formula "2") (term "0"))
         (rule "polySimp_elimOne" (formula "2") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "1"))
         (rule "mul_literals" (formula "1") (term "1"))
         (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "2"))
         (rule "qeq_literals" (formula "1") (term "0"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "closeFalse" (formula "1"))
      )
   )
   (branch
      (rule "eqSymm" (formula "10"))
      (rule "close" (formula "10") (ifseqformula "1"))
   )
)
)
}
