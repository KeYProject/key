\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Wed Apr 12 13:23:30 CEST 2023
[Labels]UseOriginLabels=true
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=JavaCard-JavaCard\\:on, Strings-Strings\\:on, assertions-assertions\\:on, bigint-bigint\\:on, floatRules-floatRules\\:strictfpOnly, initialisation-initialisation\\:disableStaticInitialisation, intRules-intRules\\:arithmeticSemanticsIgnoringOF, integerSimplificationRules-integerSimplificationRules\\:full, javaLoopTreatment-javaLoopTreatment\\:efficient, mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off, methodExpansion-methodExpansion\\:modularOnly, modelFields-modelFields\\:showSatisfiability, moreSeqRules-moreSeqRules\\:off, permissions-permissions\\:off, programRules-programRules\\:Java, reach-reach\\:on, runtimeExceptions-runtimeExceptions\\:ban, sequences-sequences\\:on, wdChecks-wdChecks\\:off, wdOperator-wdOperator\\:L
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_NONE
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_OFF
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_RESTRICTED
[Strategy]MaximumNumberOfAutomaticApplications=4000
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[Strategy]Timeout=-1
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_ON
[SMTSettings]useUninterpretedMultiplication=true
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[SMTSettings]maxGenericSorts=2
[StrategyProperty]OSS_OPTIONS_KEY=OSS_ON
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\proofObligation {
	"name": "jmodUnique1",
	"class": "de.uka.ilkd.key.taclettranslation.lemma.TacletProofObligationInput",
 }

\proof {
(keyLog "0" (keyUser "Julian" ) (keyVersion "80a871ca3bac8bb405ecc216fcb6fa9ef6f8a395"))

(autoModeTime "0")

(branch "dummy ID"
(rule "allRight" (formula "1") (newnames "v_a,v_deb,v_cmod,v_x") (inst "sk=v_a_0") (userinteraction))
(rule "allRight" (formula "1") (inst "sk=v_deb_0") (userinteraction))
(rule "allRight" (formula "1") (inst "sk=v_cmod_0") (userinteraction))
(rule "impRight" (formula "1") (userinteraction))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "2"))
(rule "cut" (inst "cutFormula=gt(v_deb_0, Z(0(#)))") (userinteraction))
(branch "CUT: v_deb_0 > 0 TRUE"
   (rule "replace_known_left" (formula "4") (term "0,1") (ifseqformula "1") (userinteraction))
    (builtin "One Step Simplification" (formula "4"))
   (rule "exLeft" (formula "5") (inst "sk=v_x_0") (userinteraction))
   (rule "jmod_axiom" (formula "7") (term "1") (userinteraction))
   (rule "times_minus_one_1" (formula "7") (term "0,1,1") (userinteraction))
   (rule "pull_out_neg_1" (formula "7") (term "1,1") (userinteraction))
   (rule "jdiv_axiom_inline" (formula "7") (term "0,0,1,1") (userinteraction))
   (rule "replace_known_left" (formula "7") (term "0,0,0,1,1") (ifseqformula "2") (userinteraction))
    (builtin "One Step Simplification" (formula "7"))
   (rule "div_axiom" (formula "7") (term "0,0,1,1") (inst "quotient=quotient_0") (userinteraction))
   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "7") (userinteraction))
    (builtin "One Step Simplification" (formula "1"))
   (rule "andLeft" (formula "1"))
   (rule "andLeft" (formula "1"))
   (rule "cut_direct" (formula "3") (term "0") (userinteraction))
   (branch "CUT: v_deb_0 >= 0 TRUE"
       (builtin "One Step Simplification" (formula "4"))
      (rule "add_eq" (formula "9") (inst "i=neg(mul(v_deb_0, v_x_0))") (userinteraction))
      (rule "switch_params" (formula "9") (term "1,1") (userinteraction))
      (rule "rotate_params" (formula "9") (term "1") (userinteraction))
      (rule "add_sub_elim_left" (formula "9") (term "1,1") (userinteraction))
      (rule "add_zero_right" (formula "9") (term "1") (userinteraction))
      (rule "eqSymm" (formula "9") (userinteraction))
      (rule "times_minus_one_2" (formula "4") (term "1,1") (userinteraction))
      (rule "add_greatereq" (formula "4") (inst "i1=v_deb_0") (userinteraction))
      (rule "polySimp_addAssoc" (formula "4") (term "1") (userinteraction))
      (rule "switch_brackets" (formula "4") (term "1") (userinteraction))
      (rule "rotate_params" (formula "4") (term "1") (userinteraction))
      (rule "add_sub_elim_right" (formula "4") (term "1,1") (userinteraction))
      (rule "add_zero_right" (formula "4") (term "1") (userinteraction))
      (rule "geq_to_leq" (formula "4") (userinteraction))
      (rule "applyEqRigid" (formula "11") (term "0,0,1,1") (ifseqformula "1") (userinteraction))
      (rule "applyEqRigid" (formula "8") (term "0") (ifseqformula "9") (userinteraction))
      (rule "applyEqRigid" (formula "7") (term "1") (ifseqformula "9") (userinteraction))
      (rule "cut" (inst "cutFormula=lt(add(neg(mul(v_deb_0, v_x_0)),
       mul(quotient_0, v_deb_0)),
   v_deb_0)") (userinteraction))
      (branch "CUT: -(v_deb_0 * v_x_0) + quotient_0 * v_deb_0 < v_deb_0 TRUE"
         (rule "cut" (inst "cutFormula=lt(mul(sub(quotient_0, v_x_0), v_deb_0), v_deb_0)") (userinteraction))
         (branch "CUT: (quotient_0 - v_x_0) * v_deb_0 < v_deb_0 TRUE"
            (rule "add_lesseq" (formula "9") (inst "i1=Z(1(#))") (userinteraction))
            (rule "add_zero_right" (formula "9") (term "0") (userinteraction))
            (rule "rotate_params" (formula "9") (term "1") (userinteraction))
            (rule "cut" (inst "cutFormula=leq(Z(1(#)),
    add(neg(mul(v_deb_0, v_x_0)),
        mul(add(quotient_0, Z(1(#))), v_deb_0)))") (userinteraction))
            (branch "CUT: 1 <= -(v_deb_0 * v_x_0) + (quotient_0 + 1) * v_deb_0 TRUE"
               (rule "cut" (inst "cutFormula=leq(Z(1(#)),
    mul(sub(add(quotient_0, Z(1(#))), v_x_0), v_deb_0))") (userinteraction))
               (branch "CUT: 1 <= (quotient_0 + 1 - v_x_0) * v_deb_0 TRUE"
                  (rule "cut" (inst "cutFormula=leq(Z(1(#)), sub(add(quotient_0, Z(1(#))), v_x_0))") (userinteraction))
                  (branch "CUT: 1 <= quotient_0 + 1 - v_x_0 TRUE"
                     (rule "sub" (formula "1") (term "1") (userinteraction))
                     (rule "cut" (inst "cutFormula=leq(Z(0(#)), add(quotient_0, neg(v_x_0)))") (userinteraction))
                     (branch "CUT: 0 <= quotient_0 + -v_x_0 TRUE"
                        (rule "sub" (formula "5") (term "0,0") (userinteraction))
                        (rule "multiply_inEq0" (formula "1") (inst "multFac=v_deb_0") (userinteraction))
                        (rule "replace_known_left" (formula "1") (term "0") (ifseqformula "10") (userinteraction))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "times_zero_2" (formula "1") (term "0") (userinteraction))
                        (rule "switch_params" (formula "16") (term "1") (userinteraction))
                        (rule "mul_comm" (formula "16") (term "0,1,1") (userinteraction))
                        (rule "cut" (inst "cutFormula=lt(Z(0(#)), add(quotient_0, neg(v_x_0)))") (userinteraction))
                        (branch "CUT: 0 < quotient_0 + -v_x_0 TRUE"
                           (rule "cut" (inst "cutFormula=leq(Z(1(#)), add(quotient_0, neg(v_x_0)))") (userinteraction))
                           (branch "CUT: 1 <= quotient_0 + -v_x_0 TRUE"
                              (rule "multiply_inEq0" (formula "1") (inst "multFac=v_deb_0") (userinteraction))
                              (rule "replace_known_left" (formula "1") (term "0") (ifseqformula "13") (userinteraction))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "polySimp_elimOneLeft0" (formula "1") (term "0") (userinteraction))
                              (rule "polySimp_homoEq" (formula "19"))
                              (rule "polySimp_elimNeg" (formula "9") (term "1,0,0"))
                              (rule "polySimp_elimNeg" (formula "1") (term "1,0,1"))
                              (rule "polySimp_elimNeg" (formula "19") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "9") (term "0"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1"))
                              (rule "polySimp_addComm1" (formula "19") (term "0"))
                              (rule "polySimp_rightDist" (formula "9") (term "0"))
                              (rule "polySimp_mulComm1" (formula "9") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "1") (term "1"))
                              (rule "polySimp_mulComm1" (formula "1") (term "1,1"))
                              (rule "inEqSimp_ltToLeq" (formula "9"))
                              (rule "polySimp_mulComm0" (formula "9") (term "1,0,0"))
                              (rule "polySimp_addAssoc" (formula "9") (term "0"))
                              (rule "inEqSimp_homoInEq0" (formula "1"))
                              (rule "polySimp_addComm1" (formula "1") (term "0"))
                              (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                              (rule "polySimp_sepNegMonomial" (formula "19"))
                              (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                              (rule "polySimp_elimOne" (formula "19") (term "0"))
                              (rule "applyEqRigid" (formula "9") (term "0,1,0") (ifseqformula "19"))
                              (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "9") (term "1,0"))
                              (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0"))
                              (rule "polySimp_elimOne" (formula "9") (term "1,1,0"))
                              (rule "polySimp_mulComm0" (formula "9") (term "0,1,0"))
                              (rule "polySimp_addComm1" (formula "9") (term "0"))
                              (rule "polySimp_addComm1" (formula "9") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "9") (term "0,0,0"))
                              (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "19"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                              (rule "polySimp_elimOne" (formula "1") (term "1,1,0"))
                              (rule "polySimp_mulComm0" (formula "1") (term "0,1,0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0"))
                              (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "9"))
                              (rule "polySimp_mulComm0" (formula "9") (term "1"))
                              (rule "polySimp_rightDist" (formula "9") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "9") (term "1,1"))
                              (rule "polySimp_rightDist" (formula "9") (term "0,1"))
                              (rule "polySimp_rightDist" (formula "9") (term "0,0,1"))
                              (rule "mul_literals" (formula "9") (term "0,0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,1"))
                              (rule "polySimp_elimOne" (formula "9") (term "1,0,0,1"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1"))
                              (rule "polySimp_rightDist" (formula "1") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                              (rule "polySimp_rightDist" (formula "1") (term "0,1"))
                              (rule "polySimp_mulAssoc" (formula "1") (term "0,0,1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "0,0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "0,0,1"))
                              (rule "polySimp_elimOne" (formula "1") (term "0,0,1"))
                              (rule "inEqSimp_contradInEq1" (formula "9") (ifseqformula "1"))
                              (rule "andLeft" (formula "9"))
                              (rule "inEqSimp_homoInEq1" (formula "9"))
                              (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "9") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "9") (term "0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "9") (term "1,0,1,0"))
                              (rule "polySimp_elimOne" (formula "9") (term "1,0,1,0"))
                              (rule "polySimp_rightDist" (formula "9") (term "0,0,1,0"))
                              (rule "mul_literals" (formula "9") (term "0,0,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "9") (term "0"))
                              (rule "polySimp_addComm1" (formula "9") (term "0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "9") (term "0"))
                              (rule "add_literals" (formula "9") (term "1,1,0"))
                              (rule "times_zero_1" (formula "9") (term "1,0"))
                              (rule "add_zero_right" (formula "9") (term "0"))
                              (rule "polySimp_addAssoc" (formula "9") (term "0"))
                              (rule "polySimp_addComm1" (formula "9") (term "0,0"))
                              (rule "polySimp_pullOutFactor2b" (formula "9") (term "0"))
                              (rule "add_literals" (formula "9") (term "1,1,0"))
                              (rule "times_zero_1" (formula "9") (term "1,0"))
                              (rule "add_zero_right" (formula "9") (term "0"))
                              (rule "polySimp_addAssoc" (formula "9") (term "0"))
                              (rule "polySimp_addComm0" (formula "9") (term "0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "9") (term "0"))
                              (rule "add_literals" (formula "9") (term "1,1,0"))
                              (rule "times_zero_1" (formula "9") (term "1,0"))
                              (rule "add_zero_right" (formula "9") (term "0"))
                              (rule "leq_literals" (formula "9"))
                              (rule "closeFalse" (formula "9"))
                           )
                           (branch "CUT: 1 <= quotient_0 + -v_x_0 FALSE"
                              (rule "polySimp_elimNeg" (formula "1") (term "1,1"))
                              (rule "polySimp_elimNeg" (formula "18") (term "1,1"))
                              (rule "inEqSimp_leqRight" (formula "18"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                              (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "2"))
                              (rule "add_zero_right" (formula "2") (term "0"))
                              (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0"))
                              (rule "polySimp_elimOne" (formula "2") (term "1,1,0"))
                              (rule "polySimp_mulComm0" (formula "2") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                              (rule "add_literals" (formula "1") (term "0,0,0"))
                              (rule "add_zero_left" (formula "1") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "2") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                              (rule "polySimp_elimOne" (formula "1") (term "1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1"))
                              (rule "polySimp_rightDist" (formula "2") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                              (rule "mul_literals" (formula "2") (term "0,1"))
                              (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                              (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "2"))
                              (rule "andLeft" (formula "1"))
                              (rule "inEqSimp_homoInEq1" (formula "1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                              (rule "mul_literals" (formula "1") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0"))
                              (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                              (rule "add_literals" (formula "1") (term "1,1,0"))
                              (rule "times_zero_1" (formula "1") (term "1,0"))
                              (rule "add_zero_right" (formula "1") (term "0"))
                              (rule "leq_literals" (formula "1"))
                              (rule "closeFalse" (formula "1"))
                           )
                        )
                        (branch "CUT: 0 < quotient_0 + -v_x_0 FALSE"
                           (rule "polySimp_homoEq" (formula "19"))
                           (rule "polySimp_elimNeg" (formula "17") (term "1,1"))
                           (rule "polySimp_elimNeg" (formula "2") (term "1,1"))
                           (rule "polySimp_elimNeg" (formula "1") (term "1,0,1"))
                           (rule "polySimp_homoEq" (formula "16"))
                           (rule "polySimp_elimNeg" (formula "19") (term "1,0,0"))
                           (rule "polySimp_elimNeg" (formula "16") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1"))
                           (rule "polySimp_mulComm0" (formula "19") (term "0,1,0,0"))
                           (rule "polySimp_addComm1" (formula "16") (term "0"))
                           (rule "polySimp_addComm1" (formula "19") (term "0"))
                           (rule "polySimp_rightDist" (formula "1") (term "1"))
                           (rule "polySimp_mulComm1" (formula "1") (term "1,1"))
                           (rule "inEqSimp_ltRight" (formula "17"))
                           (rule "add_zero_right" (formula "1") (term "0"))
                           (rule "polySimp_rightDist" (formula "1") (term "0"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,0"))
                           (rule "polySimp_elimOne" (formula "1") (term "1,0"))
                           (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                           (rule "inEqSimp_homoInEq0" (formula "3"))
                           (rule "times_zero_2" (formula "3") (term "1,0"))
                           (rule "add_zero_right" (formula "3") (term "0"))
                           (rule "inEqSimp_homoInEq0" (formula "2"))
                           (rule "times_zero_2" (formula "2") (term "1,0"))
                           (rule "add_zero_right" (formula "2") (term "0"))
                           (rule "polySimp_sepNegMonomial" (formula "17"))
                           (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                           (rule "polySimp_elimOne" (formula "17") (term "0"))
                           (rule "applyEq" (formula "2") (term "0,1,0") (ifseqformula "17"))
                           (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0"))
                           (rule "polySimp_elimOne" (formula "2") (term "1,1,0"))
                           (rule "polySimp_mulComm0" (formula "2") (term "0,1,0"))
                           (rule "polySimp_addComm0" (formula "2") (term "0"))
                           (rule "polySimp_sepNegMonomial" (formula "19"))
                           (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                           (rule "polySimp_elimOne" (formula "19") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                           (rule "polySimp_elimOne" (formula "1") (term "1"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                           (rule "polySimp_elimOne" (formula "3") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                           (rule "polySimp_mulComm0" (formula "2") (term "1"))
                           (rule "polySimp_rightDist" (formula "2") (term "1"))
                           (rule "polySimp_mulAssoc" (formula "2") (term "0,1"))
                           (rule "polySimp_mulComm0" (formula "2") (term "0,0,1"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "0,1"))
                           (rule "polySimp_elimOne" (formula "2") (term "0,1"))
                           (rule "inEqSimp_strengthen1" (formula "2") (ifseqformula "19"))
                           (rule "polySimp_addAssoc" (formula "2") (term "1"))
                           (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "3"))
                           (rule "applyEqRigid" (formula "18") (term "0,0") (ifseqformula "1"))
                           (rule "polySimp_mulComm0" (formula "18") (term "0"))
                           (rule "applyEqRigid" (formula "3") (term "0") (ifseqformula "18"))
                           (rule "inEqSimp_homoInEq1" (formula "3"))
                           (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0"))
                           (rule "polySimp_elimOne" (formula "3") (term "1,1,0"))
                           (rule "polySimp_mulComm0" (formula "3") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "3") (term "0"))
                           (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                           (rule "polySimp_pullOutFactor2b" (formula "3") (term "0"))
                           (rule "add_literals" (formula "3") (term "1,1,0"))
                           (rule "times_zero_1" (formula "3") (term "1,0"))
                           (rule "add_zero_right" (formula "3") (term "0"))
                           (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                           (rule "add_literals" (formula "3") (term "1,1,0"))
                           (rule "times_zero_1" (formula "3") (term "1,0"))
                           (rule "add_zero_right" (formula "3") (term "0"))
                           (rule "leq_literals" (formula "3"))
                           (rule "closeFalse" (formula "3"))
                        )
                     )
                     (branch "CUT: 0 <= quotient_0 + -v_x_0 FALSE"
                        (rule "polySimp_elimNeg" (formula "15") (term "1,1"))
                        (rule "polySimp_elimNeg" (formula "1") (term "1,1"))
                        (rule "polySimp_addComm0" (formula "1") (term "0,1"))
                        (rule "inEqSimp_leqRight" (formula "15"))
                        (rule "add_zero_right" (formula "1") (term "0"))
                        (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                        (rule "polySimp_elimOne" (formula "1") (term "1,1,0"))
                        (rule "polySimp_mulComm0" (formula "1") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0"))
                        (rule "inEqSimp_homoInEq0" (formula "2"))
                        (rule "mul_literals" (formula "2") (term "1,0"))
                        (rule "polySimp_addComm1" (formula "2") (term "0"))
                        (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                        (rule "add_literals" (formula "2") (term "0,0,0"))
                        (rule "add_zero_left" (formula "2") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1"))
                        (rule "polySimp_rightDist" (formula "1") (term "1"))
                        (rule "mul_literals" (formula "1") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                        (rule "polySimp_elimOne" (formula "2") (term "0"))
                        (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "1"))
                        (rule "andLeft" (formula "2"))
                        (rule "inEqSimp_homoInEq1" (formula "2"))
                        (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                        (rule "add_literals" (formula "2") (term "1,1,0"))
                        (rule "times_zero_1" (formula "2") (term "1,0"))
                        (rule "add_zero_right" (formula "2") (term "0"))
                        (rule "leq_literals" (formula "2"))
                        (rule "closeFalse" (formula "2"))
                     )
                  )
                  (branch "CUT: 1 <= quotient_0 + 1 - v_x_0 FALSE"
                     (rule "cut" (inst "cutFormula=leq(sub(add(quotient_0, Z(1(#))), v_x_0), Z(0(#)))") (userinteraction))
                     (branch "CUT: quotient_0 + 1 - v_x_0 <= 0 TRUE"
                        (rule "multiply_inEq0" (formula "1") (inst "multFac=v_deb_0") (userinteraction))
                        (rule "cut_direct" (formula "1") (term "0") (userinteraction))
                        (branch "CUT: v_deb_0 >= 0 TRUE"
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "times_zero_2" (formula "1") (term "1") (userinteraction))
                           (rule "polySimp_elimSub" (formula "3") (term "0,1"))
                           (rule "polySimp_elimSub" (formula "1") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "3") (term "1"))
                           (rule "polySimp_mulComm0" (formula "1") (term "0"))
                           (rule "polySimp_addComm0" (formula "3") (term "0,1,1"))
                           (rule "polySimp_addComm0" (formula "1") (term "0,1,0"))
                           (rule "polySimp_rightDist" (formula "3") (term "1"))
                           (rule "polySimp_mulComm1" (formula "3") (term "1,1"))
                           (rule "polySimp_rightDist" (formula "1") (term "0"))
                           (rule "polySimp_mulComm1" (formula "1") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "3") (term "0,1"))
                           (rule "polySimp_elimOne" (formula "3") (term "0,0,1"))
                           (rule "polySimp_mulComm0" (formula "3") (term "1,0,1"))
                           (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                           (rule "polySimp_elimOne" (formula "1") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                           (rule "inEqSimp_homoInEq0" (formula "3"))
                           (rule "mul_literals" (formula "3") (term "1,0"))
                           (rule "polySimp_addComm1" (formula "3") (term "0"))
                           (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "3") (term "0,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                           (rule "polySimp_elimOne" (formula "1") (term "0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                           (rule "polySimp_elimOne" (formula "3") (term "0"))
                           (rule "inEqSimp_contradInEq1" (formula "3") (ifseqformula "1"))
                           (rule "andLeft" (formula "3"))
                           (rule "inEqSimp_homoInEq1" (formula "3"))
                           (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "3") (term "0,1,0"))
                           (rule "mul_literals" (formula "3") (term "0,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "3") (term "0"))
                           (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                           (rule "add_literals" (formula "3") (term "1,1,0"))
                           (rule "times_zero_1" (formula "3") (term "1,0"))
                           (rule "add_zero_right" (formula "3") (term "0"))
                           (rule "polySimp_addAssoc" (formula "3") (term "0"))
                           (rule "polySimp_addComm0" (formula "3") (term "0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                           (rule "add_literals" (formula "3") (term "1,1,0"))
                           (rule "times_zero_1" (formula "3") (term "1,0"))
                           (rule "add_zero_right" (formula "3") (term "0"))
                           (rule "leq_literals" (formula "3"))
                           (rule "closeFalse" (formula "3"))
                        )
                        (branch "CUT: v_deb_0 >= 0 FALSE"
                           (rule "inEqSimp_geqRight" (formula "16"))
                           (rule "times_zero_1" (formula "1") (term "1,0,0"))
                           (rule "add_zero_right" (formula "1") (term "0,0"))
                           (rule "inEqSimp_gtToGeq" (formula "12"))
                           (rule "times_zero_1" (formula "12") (term "1,0,0"))
                           (rule "add_zero_right" (formula "12") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                           (rule "mul_literals" (formula "1") (term "1"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                           (rule "mul_literals" (formula "12") (term "1"))
                           (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "12"))
                           (rule "qeq_literals" (formula "1") (term "0"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "closeFalse" (formula "1"))
                        )
                     )
                     (branch "CUT: quotient_0 + 1 - v_x_0 <= 0 FALSE"
                        (rule "polySimp_elimSub" (formula "14") (term "0"))
                        (rule "polySimp_elimSub" (formula "15") (term "1"))
                        (rule "polySimp_addComm0" (formula "14") (term "0,0"))
                        (rule "polySimp_addComm0" (formula "15") (term "0,1"))
                        (rule "inEqSimp_leqRight" (formula "14"))
                        (rule "times_zero_1" (formula "1") (term "1,0,0"))
                        (rule "add_zero_right" (formula "1") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                        (rule "add_literals" (formula "1") (term "0,0,0"))
                        (rule "add_zero_left" (formula "1") (term "0,0"))
                        (rule "inEqSimp_leqRight" (formula "15"))
                        (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "1") (term "0,1,0,0"))
                        (rule "mul_literals" (formula "1") (term "0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "1") (term "0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0,0,0"))
                        (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                        (rule "add_literals" (formula "1") (term "0,0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                        (rule "polySimp_elimOne" (formula "2") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1"))
                        (rule "polySimp_rightDist" (formula "1") (term "1"))
                        (rule "mul_literals" (formula "1") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                        (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "2"))
                        (rule "andLeft" (formula "1"))
                        (rule "inEqSimp_homoInEq1" (formula "1"))
                        (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                        (rule "add_literals" (formula "1") (term "1,1,0"))
                        (rule "times_zero_1" (formula "1") (term "1,0"))
                        (rule "add_zero_right" (formula "1") (term "0"))
                        (rule "leq_literals" (formula "1"))
                        (rule "closeFalse" (formula "1"))
                     )
                  )
               )
               (branch "CUT: 1 <= (quotient_0 + 1 - v_x_0) * v_deb_0 FALSE"
                  (rule "polySimp_elimSub" (formula "13") (term "0,1"))
                  (rule "polySimp_elimNeg" (formula "1") (term "0,1"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,1"))
                  (rule "polySimp_mulComm0" (formula "13") (term "1"))
                  (rule "polySimp_mulComm0" (formula "1") (term "0,0,1"))
                  (rule "polySimp_addComm0" (formula "1") (term "1,1,1"))
                  (rule "polySimp_addComm0" (formula "13") (term "0,1,1"))
                  (rule "polySimp_rightDist" (formula "1") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "1") (term "0,1,1"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,1,1"))
                  (rule "polySimp_rightDist" (formula "13") (term "1"))
                  (rule "polySimp_mulComm1" (formula "13") (term "1,1"))
                  (rule "polySimp_addComm0" (formula "1") (term "1"))
                  (rule "polySimp_rightDist" (formula "13") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "13") (term "0,0,1"))
                  (rule "polySimp_mulComm0" (formula "13") (term "1,0,1"))
                  (rule "close" (formula "13") (ifseqformula "1"))
               )
            )
            (branch "CUT: 1 <= -(v_deb_0 * v_x_0) + (quotient_0 + 1) * v_deb_0 FALSE"
               (rule "polySimp_elimNeg" (formula "9") (term "0,1"))
               (rule "polySimp_elimNeg" (formula "11") (term "0,1"))
               (rule "polySimp_elimNeg" (formula "12") (term "0,1"))
               (rule "polySimp_homoEq" (formula "11"))
               (rule "polySimp_mulComm0" (formula "12") (term "1,1"))
               (rule "polySimp_mulComm0" (formula "6") (term "1,1"))
               (rule "polySimp_mulComm0" (formula "9") (term "0,0,1"))
               (rule "polySimp_mulComm0" (formula "12") (term "0,0,1"))
               (rule "polySimp_mulComm0" (formula "11") (term "0,0,0,0"))
               (rule "polySimp_addComm0" (formula "12") (term "1,1,1"))
               (rule "polySimp_addComm0" (formula "9") (term "1"))
               (rule "polySimp_addComm0" (formula "11") (term "0,0"))
               (rule "polySimp_addComm1" (formula "11") (term "0"))
               (rule "polySimp_rightDist" (formula "12") (term "1,1"))
               (rule "polySimp_elimOne" (formula "12") (term "0,1,1"))
               (rule "polySimp_mulComm0" (formula "12") (term "1,1,1"))
               (rule "polySimp_addComm0" (formula "12") (term "1"))
               (rule "inEqSimp_leqRight" (formula "12"))
               (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
               (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "1") (term "0,1,0,0"))
               (rule "polySimp_mulComm0" (formula "1") (term "0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
               (rule "polySimp_addComm1" (formula "1") (term "0"))
               (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "1") (term "0,0"))
               (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
               (rule "add_literals" (formula "1") (term "0,0,0,0"))
               (rule "add_zero_left" (formula "1") (term "0,0,0"))
               (rule "inEqSimp_homoInEq0" (formula "7"))
               (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
               (rule "polySimp_rightDist" (formula "7") (term "1,0"))
               (rule "mul_literals" (formula "7") (term "0,1,0"))
               (rule "polySimp_addComm1" (formula "7") (term "0"))
               (rule "polySimp_addComm0" (formula "7") (term "0,0"))
               (rule "inEqSimp_homoInEq0" (formula "10"))
               (rule "mul_literals" (formula "10") (term "1,0"))
               (rule "polySimp_addComm1" (formula "10") (term "0"))
               (rule "polySimp_addComm1" (formula "10") (term "0,0"))
               (rule "add_literals" (formula "10") (term "0,0,0"))
               (rule "add_zero_left" (formula "10") (term "0,0"))
               (rule "polySimp_sepNegMonomial" (formula "12"))
               (rule "polySimp_mulLiterals" (formula "12") (term "0"))
               (rule "polySimp_elimOne" (formula "12") (term "0"))
               (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "12"))
               (rule "polySimp_addComm1" (formula "1") (term "0"))
               (rule "polySimp_addComm0" (formula "1") (term "0,0"))
               (rule "applyEqRigid" (formula "10") (term "0,1,0") (ifseqformula "12"))
               (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
               (rule "polySimp_rightDist" (formula "10") (term "1,0"))
               (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0"))
               (rule "polySimp_elimOne" (formula "10") (term "1,1,0"))
               (rule "polySimp_mulComm0" (formula "10") (term "0,1,0"))
               (rule "polySimp_addAssoc" (formula "10") (term "0"))
               (rule "polySimp_pullOutFactor1" (formula "10") (term "0,0"))
               (rule "add_literals" (formula "10") (term "1,0,0"))
               (rule "times_zero_1" (formula "10") (term "0,0"))
               (rule "add_zero_left" (formula "10") (term "0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "7"))
               (rule "polySimp_mulComm0" (formula "7") (term "1"))
               (rule "polySimp_rightDist" (formula "7") (term "1"))
               (rule "polySimp_rightDist" (formula "7") (term "0,1"))
               (rule "mul_literals" (formula "7") (term "0,0,1"))
               (rule "polySimp_mulLiterals" (formula "7") (term "1,0,1"))
               (rule "polySimp_elimOne" (formula "7") (term "1,0,1"))
               (rule "inEqSimp_sepNegMonomial1" (formula "1"))
               (rule "polySimp_mulLiterals" (formula "1") (term "0"))
               (rule "polySimp_elimOne" (formula "1") (term "0"))
               (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "1"))
               (rule "polySimp_rightDist" (formula "7") (term "0,0"))
               (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0"))
               (rule "polySimp_elimOne" (formula "7") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "7") (term "0,0,0"))
               (rule "mul_literals" (formula "7") (term "0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "7") (term "0"))
               (rule "polySimp_addComm1" (formula "7") (term "0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "7") (term "0"))
               (rule "add_literals" (formula "7") (term "1,1,0"))
               (rule "times_zero_1" (formula "7") (term "1,0"))
               (rule "add_zero_right" (formula "7") (term "0"))
               (rule "polySimp_addAssoc" (formula "7") (term "0"))
               (rule "polySimp_pullOutFactor2b" (formula "7") (term "0,0"))
               (rule "add_literals" (formula "7") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "7") (term "1,0,0"))
               (rule "add_zero_right" (formula "7") (term "0,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "7"))
               (rule "polySimp_mulLiterals" (formula "7") (term "0"))
               (rule "polySimp_elimOne" (formula "7") (term "0"))
               (rule "inEqSimp_contradInEq1" (formula "7") (ifseqformula "11"))
               (rule "qeq_literals" (formula "7") (term "0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "closeFalse" (formula "7"))
            )
         )
         (branch "CUT: (quotient_0 - v_x_0) * v_deb_0 < v_deb_0 FALSE"
            (rule "polySimp_elimSub" (formula "11") (term "0,0"))
            (rule "polySimp_elimNeg" (formula "1") (term "0,0"))
            (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
            (rule "polySimp_mulComm0" (formula "11") (term "0"))
            (rule "polySimp_mulComm0" (formula "1") (term "0,0,0"))
            (rule "polySimp_addComm0" (formula "1") (term "0"))
            (rule "polySimp_rightDist" (formula "11") (term "0"))
            (rule "polySimp_mulComm1" (formula "11") (term "1,0"))
            (rule "close" (formula "11") (ifseqformula "1"))
         )
      )
      (branch "CUT: -(v_deb_0 * v_x_0) + quotient_0 * v_deb_0 < v_deb_0 FALSE"
         (rule "polySimp_elimNeg" (formula "10") (term "0,0"))
         (rule "polySimp_elimNeg" (formula "9") (term "0,1"))
         (rule "polySimp_elimNeg" (formula "8") (term "0,0"))
         (rule "polySimp_homoEq" (formula "9"))
         (rule "polySimp_mulComm0" (formula "2") (term "0"))
         (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
         (rule "polySimp_mulComm0" (formula "10") (term "0,0,0"))
         (rule "polySimp_mulComm0" (formula "8") (term "0,0,0"))
         (rule "polySimp_mulComm0" (formula "9") (term "0,0,0,0"))
         (rule "polySimp_addComm0" (formula "10") (term "0"))
         (rule "polySimp_addComm0" (formula "8") (term "0"))
         (rule "polySimp_addComm0" (formula "9") (term "0,0"))
         (rule "polySimp_addComm1" (formula "9") (term "0"))
         (rule "inEqSimp_ltRight" (formula "10"))
         (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
         (rule "polySimp_addAssoc" (formula "1") (term "0"))
         (rule "inEqSimp_ltToLeq" (formula "9"))
         (rule "polySimp_mulComm0" (formula "9") (term "1,0,0"))
         (rule "polySimp_addAssoc" (formula "9") (term "0"))
         (rule "polySimp_addComm1" (formula "9") (term "0,0"))
         (rule "polySimp_sepNegMonomial" (formula "10"))
         (rule "polySimp_mulLiterals" (formula "10") (term "0"))
         (rule "polySimp_elimOne" (formula "10") (term "0"))
         (rule "applyEqRigid" (formula "1") (term "0,1,0") (ifseqformula "10"))
         (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
         (rule "polySimp_rightDist" (formula "1") (term "1,0"))
         (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
         (rule "polySimp_elimOne" (formula "1") (term "1,1,0"))
         (rule "polySimp_mulComm0" (formula "1") (term "0,1,0"))
         (rule "polySimp_addComm1" (formula "1") (term "0"))
         (rule "polySimp_addComm0" (formula "1") (term "0,0"))
         (rule "applyEq" (formula "9") (term "0,1,0") (ifseqformula "10"))
         (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
         (rule "polySimp_rightDist" (formula "9") (term "1,0"))
         (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0"))
         (rule "polySimp_elimOne" (formula "9") (term "1,1,0"))
         (rule "polySimp_mulComm0" (formula "9") (term "0,1,0"))
         (rule "polySimp_addComm1" (formula "9") (term "0"))
         (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,0"))
         (rule "add_literals" (formula "9") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "9") (term "1,0,0,0"))
         (rule "add_zero_right" (formula "9") (term "0,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "1"))
         (rule "polySimp_mulComm0" (formula "1") (term "1"))
         (rule "polySimp_rightDist" (formula "1") (term "1"))
         (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
         (rule "polySimp_elimOne" (formula "1") (term "1,1"))
         (rule "polySimp_rightDist" (formula "1") (term "0,1"))
         (rule "polySimp_mulAssoc" (formula "1") (term "0,0,1"))
         (rule "polySimp_mulComm0" (formula "1") (term "0,0,0,1"))
         (rule "polySimp_mulLiterals" (formula "1") (term "0,0,1"))
         (rule "polySimp_elimOne" (formula "1") (term "0,0,1"))
         (rule "inEqSimp_sepNegMonomial0" (formula "9"))
         (rule "polySimp_mulLiterals" (formula "9") (term "0"))
         (rule "polySimp_elimOne" (formula "9") (term "0"))
         (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "3"))
         (rule "polySimp_rightDist" (formula "1") (term "0,0"))
         (rule "polySimp_addComm1" (formula "1") (term "0"))
         (rule "polySimp_rightDist" (formula "1") (term "0,0,0"))
         (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0"))
         (rule "polySimp_elimOne" (formula "1") (term "1,0,0,0"))
         (rule "polySimp_mulComm0" (formula "1") (term "0,0,0,0"))
         (rule "polySimp_addComm1" (formula "1") (term "0,0"))
         (rule "polySimp_pullOutFactor2" (formula "1") (term "0,0,0"))
         (rule "add_literals" (formula "1") (term "1,0,0,0"))
         (rule "times_zero_1" (formula "1") (term "0,0,0"))
         (rule "add_zero_left" (formula "1") (term "0,0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "1"))
         (rule "polySimp_mulLiterals" (formula "1") (term "0"))
         (rule "polySimp_elimOne" (formula "1") (term "0"))
         (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "10"))
         (rule "andLeft" (formula "1"))
         (rule "inEqSimp_homoInEq1" (formula "1"))
         (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
         (rule "add_literals" (formula "1") (term "1,1,0"))
         (rule "times_zero_1" (formula "1") (term "1,0"))
         (rule "add_zero_right" (formula "1") (term "0"))
         (rule "leq_literals" (formula "1"))
         (rule "closeFalse" (formula "1"))
      )
   )
   (branch "CUT: v_deb_0 >= 0 FALSE"
      (rule "inEqSimp_geqRight" (formula "9"))
      (rule "times_zero_1" (formula "1") (term "1,0,0"))
      (rule "add_zero_right" (formula "1") (term "0,0"))
      (rule "inEqSimp_gtToGeq" (formula "5"))
      (rule "times_zero_1" (formula "5") (term "1,0,0"))
      (rule "add_zero_right" (formula "5") (term "0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "1"))
      (rule "mul_literals" (formula "1") (term "1"))
      (rule "inEqSimp_sepPosMonomial1" (formula "5"))
      (rule "mul_literals" (formula "5") (term "1"))
      (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "5"))
      (rule "qeq_literals" (formula "1") (term "0"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "closeFalse" (formula "1"))
   )
)
(branch "CUT: v_deb_0 > 0 FALSE"
   (rule "replace_known_right" (formula "3") (term "0,1") (ifseqformula "5") (userinteraction))
    (builtin "One Step Simplification" (formula "3"))
   (rule "exLeft" (formula "4") (inst "sk=v_x_0") (userinteraction))
   (rule "jmod_axiom" (formula "7") (term "1") (userinteraction))
   (rule "times_minus_one_1" (formula "7") (term "0,1,1") (userinteraction))
   (rule "pull_out_neg_1" (formula "7") (term "1,1") (userinteraction))
   (rule "jdiv_axiom_inline" (formula "7") (term "0,0,1,1") (userinteraction))
   (rule "replace_known_left" (formula "7") (term "0,0,0,1,1") (ifseqformula "1") (userinteraction))
    (builtin "One Step Simplification" (formula "7"))
   (rule "div_axiom" (formula "7") (term "0,0,1,1") (inst "quotient=quotient_0") (userinteraction))
   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "7") (userinteraction))
    (builtin "One Step Simplification" (formula "1"))
   (rule "andLeft" (formula "1"))
   (rule "andLeft" (formula "1"))
   (rule "cut_direct" (formula "3") (term "0") (userinteraction))
   (branch "CUT: v_deb_0 >= 0 TRUE"
      (rule "inEqSimp_gtRight" (formula "9"))
      (rule "times_zero_1" (formula "1") (term "0,0"))
      (rule "add_zero_left" (formula "1") (term "0"))
      (rule "inEqSimp_strengthen0" (formula "1") (ifseqformula "10"))
      (rule "add_zero_right" (formula "1") (term "1"))
      (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "1"))
      (rule "qeq_literals" (formula "4") (term "0"))
       (builtin "One Step Simplification" (formula "4"))
      (rule "closeFalse" (formula "4"))
   )
   (branch "CUT: v_deb_0 >= 0 FALSE"
       (builtin "One Step Simplification" (formula "3"))
      (rule "add_eq" (formula "7") (inst "i=neg(mul(v_deb_0, v_x_0))") (userinteraction))
      (rule "switch_params" (formula "7") (term "1,1") (userinteraction))
      (rule "rotate_params" (formula "7") (term "1") (userinteraction))
      (rule "add_sub_elim_left" (formula "7") (term "1,1") (userinteraction))
      (rule "add_zero_right" (formula "7") (term "1") (userinteraction))
      (rule "eqSymm" (formula "7") (userinteraction))
      (rule "geq_to_leq" (formula "3") (userinteraction))
      (rule "add_lesseq" (formula "3") (inst "i1=neg(v_deb_0)") (userinteraction))
      (rule "rotate_params" (formula "3") (term "0") (userinteraction))
      (rule "add_sub_elim_left" (formula "3") (term "1,0") (userinteraction))
      (rule "add_zero_right" (formula "3") (term "0") (userinteraction))
      (rule "applyEqRigid" (formula "11") (term "0,0,1,1") (ifseqformula "1") (userinteraction))
      (rule "applyEqRigid" (formula "6") (term "0") (ifseqformula "7") (userinteraction))
      (rule "applyEqRigid" (formula "5") (term "1") (ifseqformula "7") (userinteraction))
      (rule "cut" (inst "cutFormula=lt(add(neg(mul(v_deb_0, v_x_0)),
       mul(quotient_0, v_deb_0)),
   neg(v_deb_0))") (userinteraction))
      (branch "CUT: -(v_deb_0 * v_x_0) + quotient_0 * v_deb_0 < -v_deb_0 TRUE"
         (rule "cut" (inst "cutFormula=lt(mul(sub(quotient_0, v_x_0), v_deb_0), neg(v_deb_0))") (userinteraction))
         (branch "CUT: (quotient_0 - v_x_0) * v_deb_0 < -v_deb_0 TRUE"
            (rule "add_lesseq" (formula "7") (inst "i1=Z(1(#))") (userinteraction))
            (rule "add_zero_right" (formula "7") (term "0") (userinteraction))
            (rule "rotate_params" (formula "7") (term "1") (userinteraction))
            (rule "cut" (inst "cutFormula=leq(Z(1(#)),
    add(neg(mul(v_deb_0, v_x_0)),
        mul(sub(quotient_0, Z(1(#))), v_deb_0)))") (userinteraction))
            (branch "CUT: 1 <= -(v_deb_0 * v_x_0) + (quotient_0 - 1) * v_deb_0 TRUE"
               (rule "cut" (inst "cutFormula=leq(Z(1(#)),
    mul(sub(sub(quotient_0, Z(1(#))), v_x_0), v_deb_0))") (userinteraction))
               (branch "CUT: 1 <= (quotient_0 - 1 - v_x_0) * v_deb_0 TRUE"
                  (rule "cut" (inst "cutFormula=leq(Z(0(#)), sub(sub(quotient_0, Z(1(#))), v_x_0))") (userinteraction))
                  (branch "CUT: 0 <= quotient_0 - 1 - v_x_0 TRUE"
                     (rule "multiply_inEq0" (formula "1") (inst "multFac=v_deb_0") (userinteraction))
                     (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "14") (userinteraction))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "times_zero_2" (formula "1") (term "0") (userinteraction))
                     (rule "polySimp_elimSub" (formula "1") (term "0,1"))
                     (rule "polySimp_homoEq" (formula "13"))
                     (rule "polySimp_elimSub" (formula "3") (term "0,1"))
                     (rule "polySimp_elimSub" (formula "1") (term "0,0,1"))
                     (rule "mul_literals" (formula "1") (term "1,0,0,1"))
                     (rule "polySimp_elimNeg" (formula "13") (term "0,0,0"))
                     (rule "polySimp_elimSub" (formula "3") (term "0,0,1"))
                     (rule "mul_literals" (formula "3") (term "1,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1"))
                     (rule "polySimp_mulComm0" (formula "13") (term "0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "3") (term "1"))
                     (rule "polySimp_addComm0" (formula "1") (term "0,1,1"))
                     (rule "polySimp_addComm0" (formula "13") (term "0,0"))
                     (rule "polySimp_addComm0" (formula "3") (term "0,1,1"))
                     (rule "polySimp_addComm1" (formula "13") (term "0"))
                     (rule "polySimp_rightDist" (formula "1") (term "1"))
                     (rule "polySimp_mulComm1" (formula "1") (term "1,1"))
                     (rule "polySimp_rightDist" (formula "3") (term "1"))
                     (rule "polySimp_mulComm1" (formula "3") (term "1,1"))
                     (rule "polySimp_rightDist" (formula "1") (term "0,1"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,1"))
                     (rule "polySimp_rightDist" (formula "3") (term "0,1"))
                     (rule "polySimp_mulComm0" (formula "3") (term "1,0,1"))
                     (rule "inEqSimp_homoInEq1" (formula "1"))
                     (rule "times_zero_2" (formula "1") (term "1,0"))
                     (rule "add_zero_right" (formula "1") (term "0"))
                     (rule "inEqSimp_homoInEq0" (formula "3"))
                     (rule "mul_literals" (formula "3") (term "1,0"))
                     (rule "polySimp_addComm1" (formula "3") (term "0"))
                     (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                     (rule "polySimp_addComm0" (formula "3") (term "0,0,0"))
                     (rule "polySimp_sepNegMonomial" (formula "13"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                     (rule "polySimp_elimOne" (formula "13") (term "0"))
                     (rule "applyEqRigid" (formula "1") (term "0,1,0") (ifseqformula "13"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                     (rule "polySimp_elimOne" (formula "1") (term "1,1,0"))
                     (rule "polySimp_mulComm0" (formula "1") (term "0,1,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0"))
                     (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                     (rule "applyEq" (formula "3") (term "0,1,0") (ifseqformula "13"))
                     (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0"))
                     (rule "polySimp_elimOne" (formula "3") (term "1,1,0"))
                     (rule "polySimp_mulComm0" (formula "3") (term "0,1,0"))
                     (rule "polySimp_addComm1" (formula "3") (term "0"))
                     (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "3") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1"))
                     (rule "polySimp_rightDist" (formula "1") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                     (rule "polySimp_rightDist" (formula "1") (term "0,1"))
                     (rule "polySimp_mulAssoc" (formula "1") (term "0,0,1"))
                     (rule "polySimp_mulComm0" (formula "1") (term "0,0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "0,0,1"))
                     (rule "polySimp_elimOne" (formula "1") (term "0,0,1"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                     (rule "polySimp_mulComm0" (formula "3") (term "1"))
                     (rule "polySimp_rightDist" (formula "3") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                     (rule "polySimp_rightDist" (formula "3") (term "0,1"))
                     (rule "polySimp_rightDist" (formula "3") (term "0,0,1"))
                     (rule "mul_literals" (formula "3") (term "0,0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,1"))
                     (rule "polySimp_elimOne" (formula "3") (term "1,0,0,1"))
                     (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "1"))
                     (rule "andLeft" (formula "3"))
                     (rule "inEqSimp_homoInEq1" (formula "3"))
                     (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "3") (term "0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,0"))
                     (rule "polySimp_elimOne" (formula "3") (term "1,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "3") (term "0,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "3") (term "0"))
                     (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                     (rule "add_literals" (formula "3") (term "1,1,0"))
                     (rule "times_zero_1" (formula "3") (term "1,0"))
                     (rule "add_zero_right" (formula "3") (term "0"))
                     (rule "polySimp_addAssoc" (formula "3") (term "0"))
                     (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0,0"))
                     (rule "add_literals" (formula "3") (term "1,1,0,0,0"))
                     (rule "times_zero_1" (formula "3") (term "1,0,0,0"))
                     (rule "add_zero_right" (formula "3") (term "0,0,0"))
                     (rule "polySimp_pullOutFactor2b" (formula "3") (term "0"))
                     (rule "add_literals" (formula "3") (term "1,1,0"))
                     (rule "times_zero_1" (formula "3") (term "1,0"))
                     (rule "add_zero_right" (formula "3") (term "0"))
                     (rule "leq_literals" (formula "3"))
                     (rule "closeFalse" (formula "3"))
                  )
                  (branch "CUT: 0 <= quotient_0 - 1 - v_x_0 FALSE"
                     (rule "sub" (formula "12") (term "1") (userinteraction))
                     (rule "cut" (inst "cutFormula=leq(add(quotient_0, neg(v_x_0)), Z(0(#)))") (userinteraction))
                     (branch "CUT: quotient_0 + -v_x_0 <= 0 TRUE"
                        (rule "multiply_inEq0" (formula "1") (inst "multFac=v_deb_0") (userinteraction))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "15") (userinteraction))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "times_zero_2" (formula "1") (term "1") (userinteraction))
                        (rule "geq_to_leq" (formula "1") (userinteraction))
                        (rule "cut" (inst "cutFormula=lt(add(quotient_0, neg(v_x_0)), Z(0(#)))") (userinteraction))
                        (branch "CUT: quotient_0 + -v_x_0 < 0 TRUE"
                           (rule "cut" (inst "cutFormula=leq(add(quotient_0, neg(v_x_0)), Z(neglit(1(#))))") (userinteraction))
                           (branch "CUT: quotient_0 + -v_x_0 <= -1 TRUE"
                              (rule "multiply_inEq0" (formula "1") (inst "multFac=v_deb_0") (userinteraction))
                              (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "18") (userinteraction))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "times_minus_one_2" (formula "1") (term "1") (userinteraction))
                              (rule "polySimp_elimSub" (formula "8") (term "0,0"))
                              (rule "polySimp_elimNeg" (formula "8") (term "1"))
                              (rule "polySimp_homoEq" (formula "16"))
                              (rule "polySimp_elimNeg" (formula "1") (term "1,0,0"))
                              (rule "polySimp_elimNeg" (formula "1") (term "1"))
                              (rule "polySimp_elimNeg" (formula "16") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "8") (term "0"))
                              (rule "polySimp_mulComm0" (formula "1") (term "0"))
                              (rule "polySimp_mulComm0" (formula "16") (term "0,0,0,0"))
                              (rule "polySimp_addComm0" (formula "16") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "16") (term "0"))
                              (rule "polySimp_rightDist" (formula "8") (term "0"))
                              (rule "polySimp_mulComm1" (formula "8") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "1") (term "0"))
                              (rule "polySimp_mulComm1" (formula "1") (term "1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "8"))
                              (rule "polySimp_mulAssoc" (formula "8") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "8") (term "0,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0"))
                              (rule "polySimp_elimOne" (formula "8") (term "1,0,0"))
                              (rule "polySimp_addAssoc" (formula "8") (term "0"))
                              (rule "inEqSimp_homoInEq1" (formula "1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                              (rule "polySimp_elimOne" (formula "1") (term "1,1,0"))
                              (rule "polySimp_mulComm0" (formula "1") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0"))
                              (rule "polySimp_sepNegMonomial" (formula "16"))
                              (rule "polySimp_mulLiterals" (formula "16") (term "0"))
                              (rule "polySimp_elimOne" (formula "16") (term "0"))
                              (rule "applyEqRigid" (formula "1") (term "1,0") (ifseqformula "16"))
                              (rule "polySimp_addComm1" (formula "1") (term "0"))
                              (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                              (rule "applyEq" (formula "8") (term "0,1,0") (ifseqformula "16"))
                              (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "8") (term "1,0"))
                              (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0"))
                              (rule "polySimp_elimOne" (formula "8") (term "1,1,0"))
                              (rule "polySimp_mulComm0" (formula "8") (term "0,1,0"))
                              (rule "polySimp_addComm1" (formula "8") (term "0"))
                              (rule "polySimp_addComm1" (formula "8") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "8") (term "0,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                              (rule "polySimp_elimOne" (formula "1") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "8"))
                              (rule "polySimp_mulComm0" (formula "8") (term "1"))
                              (rule "polySimp_rightDist" (formula "8") (term "1"))
                              (rule "polySimp_rightDist" (formula "8") (term "0,1"))
                              (rule "polySimp_rightDist" (formula "8") (term "0,0,1"))
                              (rule "mul_literals" (formula "8") (term "0,0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,1"))
                              (rule "polySimp_elimOne" (formula "8") (term "1,0,0,1"))
                              (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "8"))
                              (rule "andLeft" (formula "1"))
                              (rule "inEqSimp_homoInEq1" (formula "1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                              (rule "polySimp_elimOne" (formula "1") (term "1,1,0"))
                              (rule "polySimp_rightDist" (formula "1") (term "0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0"))
                              (rule "polySimp_elimOne" (formula "1") (term "1,0,1,0"))
                              (rule "polySimp_rightDist" (formula "1") (term "0,0,1,0"))
                              (rule "mul_literals" (formula "1") (term "0,0,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                              (rule "polySimp_pullOutFactor2b" (formula "1") (term "0"))
                              (rule "add_literals" (formula "1") (term "1,1,0"))
                              (rule "times_zero_1" (formula "1") (term "1,0"))
                              (rule "add_zero_right" (formula "1") (term "0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                              (rule "polySimp_pullOutFactor2b" (formula "1") (term "0"))
                              (rule "add_literals" (formula "1") (term "1,1,0"))
                              (rule "times_zero_1" (formula "1") (term "1,0"))
                              (rule "add_zero_right" (formula "1") (term "0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0"))
                              (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                              (rule "add_literals" (formula "1") (term "1,1,0"))
                              (rule "times_zero_1" (formula "1") (term "1,0"))
                              (rule "add_zero_right" (formula "1") (term "0"))
                              (rule "leq_literals" (formula "1"))
                              (rule "closeFalse" (formula "1"))
                           )
                           (branch "CUT: quotient_0 + -v_x_0 <= -1 FALSE"
                              (rule "polySimp_elimNeg" (formula "15") (term "1,0"))
                              (rule "polySimp_elimNeg" (formula "1") (term "1,0"))
                              (rule "inEqSimp_leqRight" (formula "15"))
                              (rule "mul_literals" (formula "1") (term "1,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0"))
                              (rule "add_zero_left" (formula "1") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "2"))
                              (rule "times_zero_1" (formula "2") (term "1,0,0"))
                              (rule "add_zero_right" (formula "2") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "2") (term "0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                              (rule "polySimp_elimOne" (formula "1") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                              (rule "polySimp_elimOne" (formula "2") (term "0"))
                              (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "2"))
                              (rule "andLeft" (formula "1"))
                              (rule "inEqSimp_homoInEq1" (formula "1"))
                              (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                              (rule "add_literals" (formula "1") (term "1,1,0"))
                              (rule "times_zero_1" (formula "1") (term "1,0"))
                              (rule "add_zero_right" (formula "1") (term "0"))
                              (rule "leq_literals" (formula "1"))
                              (rule "closeFalse" (formula "1"))
                           )
                        )
                        (branch "CUT: quotient_0 + -v_x_0 < 0 FALSE"
                           (rule "polySimp_homoEq" (formula "13"))
                           (rule "polySimp_elimNeg" (formula "14") (term "1,0"))
                           (rule "polySimp_elimNeg" (formula "2") (term "1,0"))
                           (rule "polySimp_elimNeg" (formula "19") (term "1,1"))
                           (rule "polySimp_elimNeg" (formula "1") (term "1,0,1"))
                           (rule "polySimp_elimNeg" (formula "13") (term "0,0,0"))
                           (rule "polySimp_homoEq" (formula "19"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1"))
                           (rule "polySimp_mulComm0" (formula "13") (term "0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "19") (term "0,1,0,0"))
                           (rule "polySimp_addComm0" (formula "13") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "19") (term "0"))
                           (rule "polySimp_addComm1" (formula "13") (term "0"))
                           (rule "polySimp_rightDist" (formula "1") (term "1"))
                           (rule "polySimp_mulComm1" (formula "1") (term "1,1"))
                           (rule "inEqSimp_ltRight" (formula "14"))
                           (rule "times_zero_1" (formula "1") (term "0,0"))
                           (rule "add_zero_left" (formula "1") (term "0"))
                           (rule "inEqSimp_homoInEq0" (formula "2"))
                           (rule "times_zero_2" (formula "2") (term "1,0"))
                           (rule "add_zero_right" (formula "2") (term "0"))
                           (rule "polySimp_sepNegMonomial" (formula "19"))
                           (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                           (rule "polySimp_elimOne" (formula "19") (term "0"))
                           (rule "polySimp_sepNegMonomial" (formula "14"))
                           (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                           (rule "polySimp_elimOne" (formula "14") (term "0"))
                           (rule "applyEqRigid" (formula "2") (term "0,1,0") (ifseqformula "14"))
                           (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0"))
                           (rule "polySimp_elimOne" (formula "2") (term "1,1,0"))
                           (rule "polySimp_mulComm0" (formula "2") (term "0,1,0"))
                           (rule "polySimp_addComm0" (formula "2") (term "0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                           (rule "polySimp_elimOne" (formula "3") (term "0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                           (rule "polySimp_elimOne" (formula "1") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                           (rule "polySimp_mulComm0" (formula "2") (term "1"))
                           (rule "polySimp_rightDist" (formula "2") (term "1"))
                           (rule "polySimp_mulAssoc" (formula "2") (term "0,1"))
                           (rule "polySimp_mulComm0" (formula "2") (term "0,0,1"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "0,1"))
                           (rule "polySimp_elimOne" (formula "2") (term "0,1"))
                           (rule "inEqSimp_strengthen1" (formula "2") (ifseqformula "19"))
                           (rule "polySimp_addAssoc" (formula "2") (term "1"))
                           (rule "inEqSimp_antiSymm" (formula "3") (ifseqformula "1"))
                           (rule "applyEq" (formula "15") (term "0,0") (ifseqformula "3"))
                           (rule "polySimp_mulComm0" (formula "15") (term "0"))
                           (rule "applyEqRigid" (formula "2") (term "0") (ifseqformula "15"))
                           (rule "inEqSimp_homoInEq1" (formula "2"))
                           (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0"))
                           (rule "polySimp_elimOne" (formula "2") (term "1,1,0"))
                           (rule "polySimp_mulComm0" (formula "2") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "2") (term "0"))
                           (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                           (rule "polySimp_pullOutFactor2b" (formula "2") (term "0"))
                           (rule "add_literals" (formula "2") (term "1,1,0"))
                           (rule "times_zero_1" (formula "2") (term "1,0"))
                           (rule "add_zero_right" (formula "2") (term "0"))
                           (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                           (rule "add_literals" (formula "2") (term "1,1,0"))
                           (rule "times_zero_1" (formula "2") (term "1,0"))
                           (rule "add_zero_right" (formula "2") (term "0"))
                           (rule "leq_literals" (formula "2"))
                           (rule "closeFalse" (formula "2"))
                        )
                     )
                     (branch "CUT: quotient_0 + -v_x_0 <= 0 FALSE"
                        (rule "polySimp_elimNeg" (formula "12") (term "1,0"))
                        (rule "polySimp_elimSub" (formula "13") (term "0,1"))
                        (rule "mul_literals" (formula "13") (term "1,0,1"))
                        (rule "polySimp_elimNeg" (formula "13") (term "1,1"))
                        (rule "polySimp_addComm0" (formula "13") (term "0,1"))
                        (rule "inEqSimp_leqRight" (formula "12"))
                        (rule "times_zero_1" (formula "1") (term "1,0,0"))
                        (rule "add_zero_right" (formula "1") (term "0,0"))
                        (rule "inEqSimp_leqRight" (formula "13"))
                        (rule "add_zero_right" (formula "1") (term "0"))
                        (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                        (rule "polySimp_elimOne" (formula "1") (term "1,1,0"))
                        (rule "polySimp_rightDist" (formula "1") (term "0,1,0"))
                        (rule "mul_literals" (formula "1") (term "0,0,1,0"))
                        (rule "polySimp_addAssoc" (formula "2") (term "0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                        (rule "add_literals" (formula "1") (term "0,0,0"))
                        (rule "add_zero_left" (formula "1") (term "0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                        (rule "polySimp_elimOne" (formula "2") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                        (rule "polySimp_elimOne" (formula "1") (term "1"))
                        (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "2"))
                        (rule "andLeft" (formula "1"))
                        (rule "inEqSimp_homoInEq1" (formula "1"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                        (rule "mul_literals" (formula "1") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0"))
                        (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                        (rule "add_literals" (formula "1") (term "1,1,0"))
                        (rule "times_zero_1" (formula "1") (term "1,0"))
                        (rule "add_zero_right" (formula "1") (term "0"))
                        (rule "leq_literals" (formula "1"))
                        (rule "closeFalse" (formula "1"))
                     )
                  )
               )
               (branch "CUT: 1 <= (quotient_0 - 1 - v_x_0) * v_deb_0 FALSE"
                  (rule "polySimp_elimSub" (formula "11") (term "0,1"))
                  (rule "polySimp_elimNeg" (formula "1") (term "0,1"))
                  (rule "polySimp_elimSub" (formula "1") (term "0,1,1"))
                  (rule "mul_literals" (formula "1") (term "1,0,1,1"))
                  (rule "polySimp_elimSub" (formula "11") (term "0,0,1"))
                  (rule "mul_literals" (formula "11") (term "1,0,0,1"))
                  (rule "polySimp_mulComm0" (formula "1") (term "0,0,1"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,1"))
                  (rule "polySimp_mulComm0" (formula "11") (term "1"))
                  (rule "polySimp_addComm0" (formula "1") (term "1,1,1"))
                  (rule "polySimp_addComm0" (formula "11") (term "0,1,1"))
                  (rule "polySimp_rightDist" (formula "1") (term "1,1"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,1,1"))
                  (rule "polySimp_addComm0" (formula "1") (term "1"))
                  (rule "polySimp_rightDist" (formula "11") (term "1"))
                  (rule "polySimp_mulComm1" (formula "11") (term "1,1"))
                  (rule "polySimp_rightDist" (formula "11") (term "0,1"))
                  (rule "polySimp_mulComm0" (formula "11") (term "1,0,1"))
                  (rule "close" (formula "11") (ifseqformula "1"))
               )
            )
            (branch "CUT: 1 <= -(v_deb_0 * v_x_0) + (quotient_0 - 1) * v_deb_0 FALSE"
               (rule "polySimp_elimNeg" (formula "5") (term "0,1"))
               (rule "polySimp_elimNeg" (formula "7") (term "0,1"))
               (rule "polySimp_elimNeg" (formula "10") (term "0,1"))
               (rule "polySimp_elimSub" (formula "10") (term "0,1,1"))
               (rule "mul_literals" (formula "10") (term "1,0,1,1"))
               (rule "polySimp_elimNeg" (formula "9") (term "0,1"))
               (rule "polySimp_homoEq" (formula "9"))
               (rule "polySimp_mulComm0" (formula "5") (term "1,1"))
               (rule "polySimp_mulComm0" (formula "7") (term "0,0,1"))
               (rule "polySimp_mulComm0" (formula "10") (term "0,0,1"))
               (rule "polySimp_mulComm0" (formula "10") (term "1,1"))
               (rule "polySimp_mulComm0" (formula "9") (term "0,0,0,0"))
               (rule "polySimp_addComm0" (formula "7") (term "1"))
               (rule "polySimp_addComm0" (formula "10") (term "1,1,1"))
               (rule "polySimp_addComm0" (formula "9") (term "0,0"))
               (rule "polySimp_addComm1" (formula "9") (term "0"))
               (rule "polySimp_rightDist" (formula "10") (term "1,1"))
               (rule "polySimp_mulComm0" (formula "10") (term "1,1,1"))
               (rule "polySimp_addComm0" (formula "10") (term "1"))
               (rule "inEqSimp_leqRight" (formula "10"))
               (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
               (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "1") (term "0,1,0,0"))
               (rule "polySimp_mulAssoc" (formula "1") (term "0,0,1,0,0"))
               (rule "polySimp_mulComm0" (formula "1") (term "0,0,0,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "1") (term "0,0,1,0,0"))
               (rule "polySimp_elimOne" (formula "1") (term "0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
               (rule "polySimp_addComm1" (formula "1") (term "0"))
               (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "1") (term "0,0"))
               (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
               (rule "add_literals" (formula "1") (term "0,0,0,0"))
               (rule "add_zero_left" (formula "1") (term "0,0,0"))
               (rule "inEqSimp_homoInEq0" (formula "6"))
               (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
               (rule "polySimp_rightDist" (formula "6") (term "1,0"))
               (rule "mul_literals" (formula "6") (term "0,1,0"))
               (rule "polySimp_addComm1" (formula "6") (term "0"))
               (rule "polySimp_addComm0" (formula "6") (term "0,0"))
               (rule "inEqSimp_homoInEq0" (formula "8"))
               (rule "mul_literals" (formula "8") (term "1,0"))
               (rule "polySimp_addComm1" (formula "8") (term "0"))
               (rule "polySimp_addComm1" (formula "8") (term "0,0"))
               (rule "add_literals" (formula "8") (term "0,0,0"))
               (rule "add_zero_left" (formula "8") (term "0,0"))
               (rule "polySimp_sepNegMonomial" (formula "10"))
               (rule "polySimp_mulLiterals" (formula "10") (term "0"))
               (rule "polySimp_elimOne" (formula "10") (term "0"))
               (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "10"))
               (rule "polySimp_addComm1" (formula "1") (term "0"))
               (rule "polySimp_addComm0" (formula "1") (term "0,0"))
               (rule "applyEq" (formula "8") (term "0,1,0") (ifseqformula "10"))
               (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
               (rule "polySimp_rightDist" (formula "8") (term "1,0"))
               (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0"))
               (rule "polySimp_elimOne" (formula "8") (term "1,1,0"))
               (rule "polySimp_mulComm0" (formula "8") (term "0,1,0"))
               (rule "polySimp_addAssoc" (formula "8") (term "0"))
               (rule "polySimp_pullOutFactor1" (formula "8") (term "0,0"))
               (rule "add_literals" (formula "8") (term "1,0,0"))
               (rule "times_zero_1" (formula "8") (term "0,0"))
               (rule "add_zero_left" (formula "8") (term "0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "6"))
               (rule "polySimp_mulComm0" (formula "6") (term "1"))
               (rule "polySimp_rightDist" (formula "6") (term "1"))
               (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
               (rule "polySimp_elimOne" (formula "6") (term "1,1"))
               (rule "polySimp_rightDist" (formula "6") (term "0,1"))
               (rule "mul_literals" (formula "6") (term "0,0,1"))
               (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1"))
               (rule "polySimp_elimOne" (formula "6") (term "1,0,1"))
               (rule "inEqSimp_sepNegMonomial1" (formula "1"))
               (rule "polySimp_mulLiterals" (formula "1") (term "0"))
               (rule "polySimp_elimOne" (formula "1") (term "0"))
               (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "1"))
               (rule "polySimp_rightDist" (formula "6") (term "0,0"))
               (rule "polySimp_rightDist" (formula "6") (term "0,0,0"))
               (rule "mul_literals" (formula "6") (term "0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "6") (term "0"))
               (rule "polySimp_addComm1" (formula "6") (term "0,0"))
               (rule "polySimp_pullOutFactor2b" (formula "6") (term "0"))
               (rule "add_literals" (formula "6") (term "1,1,0"))
               (rule "times_zero_1" (formula "6") (term "1,0"))
               (rule "add_zero_right" (formula "6") (term "0"))
               (rule "polySimp_addAssoc" (formula "6") (term "0"))
               (rule "polySimp_pullOutFactor2b" (formula "6") (term "0,0"))
               (rule "add_literals" (formula "6") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "6") (term "1,0,0"))
               (rule "add_zero_right" (formula "6") (term "0,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "6"))
               (rule "polySimp_mulLiterals" (formula "6") (term "0"))
               (rule "polySimp_elimOne" (formula "6") (term "0"))
               (rule "inEqSimp_contradInEq1" (formula "6") (ifseqformula "9"))
               (rule "qeq_literals" (formula "6") (term "0"))
                (builtin "One Step Simplification" (formula "6"))
               (rule "closeFalse" (formula "6"))
            )
         )
         (branch "CUT: (quotient_0 - v_x_0) * v_deb_0 < -v_deb_0 FALSE"
            (rule "polySimp_elimSub" (formula "9") (term "0,0"))
            (rule "polySimp_elimNeg" (formula "9") (term "1"))
            (rule "polySimp_elimNeg" (formula "1") (term "0,0"))
            (rule "polySimp_elimNeg" (formula "1") (term "1"))
            (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
            (rule "polySimp_mulComm0" (formula "9") (term "0"))
            (rule "polySimp_mulComm0" (formula "1") (term "0,0,0"))
            (rule "polySimp_addComm0" (formula "1") (term "0"))
            (rule "polySimp_rightDist" (formula "9") (term "0"))
            (rule "polySimp_mulComm1" (formula "9") (term "1,0"))
            (rule "close" (formula "9") (ifseqformula "1"))
         )
      )
      (branch "CUT: -(v_deb_0 * v_x_0) + quotient_0 * v_deb_0 < -v_deb_0 FALSE"
         (rule "polySimp_elimNeg" (formula "7") (term "0,1"))
         (rule "polySimp_elimNeg" (formula "6") (term "0,0"))
         (rule "polySimp_elimNeg" (formula "6") (term "1"))
         (rule "polySimp_elimNeg" (formula "8") (term "0,0"))
         (rule "polySimp_elimNeg" (formula "8") (term "1"))
         (rule "polySimp_homoEq" (formula "7"))
         (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
         (rule "polySimp_mulComm0" (formula "2") (term "0"))
         (rule "polySimp_mulComm0" (formula "6") (term "0,0,0"))
         (rule "polySimp_mulComm0" (formula "8") (term "0,0,0"))
         (rule "polySimp_mulComm0" (formula "7") (term "0,0,0,0"))
         (rule "polySimp_addComm0" (formula "6") (term "0"))
         (rule "polySimp_addComm0" (formula "8") (term "0"))
         (rule "polySimp_addComm0" (formula "7") (term "0,0"))
         (rule "polySimp_addComm1" (formula "7") (term "0"))
         (rule "inEqSimp_ltRight" (formula "8"))
         (rule "polySimp_mulAssoc" (formula "1") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "1") (term "0,0,0"))
         (rule "polySimp_mulLiterals" (formula "1") (term "0,0"))
         (rule "polySimp_elimOne" (formula "1") (term "0,0"))
         (rule "polySimp_addAssoc" (formula "1") (term "0"))
         (rule "inEqSimp_ltToLeq" (formula "7"))
         (rule "polySimp_mulAssoc" (formula "7") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "7") (term "0,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0"))
         (rule "polySimp_elimOne" (formula "7") (term "1,0,0"))
         (rule "polySimp_addAssoc" (formula "7") (term "0"))
         (rule "polySimp_addComm1" (formula "7") (term "0,0"))
         (rule "polySimp_sepNegMonomial" (formula "8"))
         (rule "polySimp_mulLiterals" (formula "8") (term "0"))
         (rule "polySimp_elimOne" (formula "8") (term "0"))
         (rule "applyEq" (formula "7") (term "0,1,0") (ifseqformula "8"))
         (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
         (rule "polySimp_rightDist" (formula "7") (term "1,0"))
         (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0"))
         (rule "polySimp_elimOne" (formula "7") (term "1,1,0"))
         (rule "polySimp_mulComm0" (formula "7") (term "0,1,0"))
         (rule "polySimp_addComm1" (formula "7") (term "0"))
         (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,0"))
         (rule "add_literals" (formula "7") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "7") (term "1,0,0,0"))
         (rule "add_zero_right" (formula "7") (term "0,0,0"))
         (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "8"))
         (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
         (rule "polySimp_rightDist" (formula "1") (term "1,0"))
         (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
         (rule "polySimp_elimOne" (formula "1") (term "1,1,0"))
         (rule "polySimp_mulComm0" (formula "1") (term "0,1,0"))
         (rule "polySimp_addComm1" (formula "1") (term "0"))
         (rule "polySimp_addComm0" (formula "1") (term "0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "7"))
         (rule "polySimp_mulComm0" (formula "7") (term "1"))
         (rule "polySimp_rightDist" (formula "7") (term "1"))
         (rule "mul_literals" (formula "7") (term "0,1"))
         (rule "inEqSimp_sepPosMonomial1" (formula "1"))
         (rule "polySimp_mulComm0" (formula "1") (term "1"))
         (rule "polySimp_rightDist" (formula "1") (term "1"))
         (rule "polySimp_rightDist" (formula "1") (term "0,1"))
         (rule "polySimp_mulAssoc" (formula "1") (term "0,0,1"))
         (rule "polySimp_mulComm0" (formula "1") (term "0,0,0,1"))
         (rule "polySimp_mulLiterals" (formula "1") (term "0,0,1"))
         (rule "polySimp_elimOne" (formula "1") (term "0,0,1"))
         (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "3"))
         (rule "polySimp_rightDist" (formula "1") (term "0,0"))
         (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
         (rule "polySimp_elimOne" (formula "1") (term "1,0,0"))
         (rule "polySimp_addComm1" (formula "1") (term "0"))
         (rule "polySimp_rightDist" (formula "1") (term "0,0,0"))
         (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0"))
         (rule "polySimp_elimOne" (formula "1") (term "1,0,0,0"))
         (rule "polySimp_mulComm0" (formula "1") (term "0,0,0,0"))
         (rule "polySimp_addComm1" (formula "1") (term "0,0"))
         (rule "polySimp_pullOutFactor2" (formula "1") (term "0,0,0"))
         (rule "add_literals" (formula "1") (term "1,0,0,0"))
         (rule "times_zero_1" (formula "1") (term "0,0,0"))
         (rule "add_zero_left" (formula "1") (term "0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "1"))
         (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "8"))
         (rule "andLeft" (formula "1"))
         (rule "inEqSimp_homoInEq1" (formula "1"))
         (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
         (rule "polySimp_rightDist" (formula "1") (term "1,0"))
         (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
         (rule "mul_literals" (formula "1") (term "0,1,0"))
         (rule "polySimp_elimOne" (formula "1") (term "1,1,0"))
         (rule "polySimp_addAssoc" (formula "1") (term "0"))
         (rule "polySimp_addComm0" (formula "1") (term "0,0"))
         (rule "polySimp_pullOutFactor2b" (formula "1") (term "0"))
         (rule "add_literals" (formula "1") (term "1,1,0"))
         (rule "times_zero_1" (formula "1") (term "1,0"))
         (rule "add_zero_right" (formula "1") (term "0"))
         (rule "leq_literals" (formula "1"))
         (rule "closeFalse" (formula "1"))
      )
   )
)
)
}
