\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Sat Jan 26 15:17:00 CET 2019
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=assertions-assertions\\:on , intRules-intRules\\:arithmeticSemanticsIgnoringOF , initialisation-initialisation\\:disableStaticInitialisation , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:ban , JavaCard-JavaCard\\:on , Strings-Strings\\:on , modelFields-modelFields\\:showSatisfiability , bigint-bigint\\:on , sequences-sequences\\:on , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off , permissions-permissions\\:off , moreSeqRules-moreSeqRules\\:off , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off , nullPointerPolicy-nullPointerPolicy\\:nullCheck
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_EXPAND
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[Strategy]MaximumNumberOfAutomaticApplications=10000
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[Strategy]Timeout=-1
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[SMTSettings]useUninterpretedMultiplication=true
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_EXPAND
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[SMTSettings]maxGenericSorts=2
[StrategyProperty]OSS_OPTIONS_KEY=OSS_ON
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_NORMAL
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\proofObligation "#Proof Obligation Settings
#Sat Jan 26 15:17:00 CET 2019
name=jdivPulloutMinusDenom
class=de.uka.ilkd.key.taclettranslation.lemma.TacletProofObligationInput
";

\proof {
(keyLog "0" (keyUser "pschmitt" ) (keyVersion "3ec772c1917df8110cd6ddbbec896f5aa76222ef"))

(autoModeTime "3108")

(branch "dummy ID"
(rule "notRight" (formula "1") (newnames "f_divNum,f_divDenom"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "2"))
(builtin "One Step Simplification" (formula "1"))
(rule "jdiv_axiom" (formula "2") (term "0") (userinteraction))
(rule "jdiv_axiom" (formula "3") (term "0,1") (userinteraction))
(rule "cut" (inst "cutFormula=f_divNum = Z(0(#))") (userinteraction))
(branch "CUT: f_divNum = 0 TRUE"
   (rule "applyEqRigid" (formula "5") (term "0,0") (ifseqformula "1") (userinteraction))
   (rule "applyEqRigid" (formula "5") (term "0,0,1") (ifseqformula "1") (userinteraction))
   (rule "jdiv_zero" (formula "5") (term "0") (userinteraction))
   (branch "Case 1"
      (rule "jdiv_zero" (formula "5") (term "0,1") (userinteraction))
      (branch "Case 1"
         (rule "neg_literal" (formula "5") (term "1") (userinteraction))
         (rule "sub_zero_1" (formula "5") (term "1") (userinteraction))
         (rule "equal_literals" (formula "5") (userinteraction))
         (rule "closeTrue" (formula "5") (userinteraction))
      )
      (branch "Case 2"
         (rule "close" (formula "5") (ifseqformula "4"))
      )
   )
   (branch "Case 2"
      (rule "notRight" (formula "5"))
      (rule "notLeft" (formula "5"))
      (rule "jdiv_axiom_inline" (formula "6") (term "0"))
      (rule "qeq_literals" (formula "6") (term "0,0"))
      (builtin "One Step Simplification" (formula "6"))
      (rule "eqSymm" (formula "4"))
      (rule "eqSymm" (formula "3"))
      (rule "eqSymm" (formula "6"))
      (rule "jdiv_axiom_inline" (formula "6") (term "0,0"))
      (rule "qeq_literals" (formula "6") (term "0,0,0"))
      (builtin "One Step Simplification" (formula "6"))
      (rule "eqSymm" (formula "6"))
      (rule "polySimp_elimNeg" (formula "1") (term "0"))
      (rule "polySimp_elimNeg" (formula "4") (term "1,1"))
      (rule "polySimp_elimNeg" (formula "4") (term "1,0,2,0"))
      (rule "polySimp_elimNeg" (formula "4") (term "1,1,0"))
      (rule "polySimp_elimNeg" (formula "6") (term "1,0"))
      (rule "polySimp_elimNeg" (formula "6") (term "1"))
      (rule "applyEqRigid" (formula "3") (term "0,0,0,2,0") (ifseqformula "2"))
      (rule "times_zero_2" (formula "3") (term "0,0,2,0"))
      (rule "applyEq" (formula "3") (term "0,1,0") (ifseqformula "2"))
      (rule "applyEqRigid" (formula "4") (term "0,0,0,2,0") (ifseqformula "2"))
      (rule "times_zero_2" (formula "4") (term "0,0,2,0"))
      (rule "applyEq" (formula "4") (term "0,1,0") (ifseqformula "2"))
      (rule "applyEqRigid" (formula "3") (term "0,0,0") (ifseqformula "2"))
      (rule "qeq_literals" (formula "3") (term "0,0"))
      (builtin "One Step Simplification" (formula "3"))
      (rule "eqSymm" (formula "3"))
      (rule "applyEqRigid" (formula "4") (term "0,0,0") (ifseqformula "2"))
      (rule "qeq_literals" (formula "4") (term "0,0"))
      (builtin "One Step Simplification" (formula "4"))
      (rule "eqSymm" (formula "4"))
      (rule "applyEqRigid" (formula "3") (term "0,0") (ifseqformula "2"))
      (rule "jdiv_axiom_inline" (formula "3") (term "0"))
      (builtin "One Step Simplification" (formula "3"))
      (rule "times_zero_2" (formula "3") (term "0,0,0,1"))
      (rule "qeq_literals" (formula "3") (term "0"))
      (builtin "One Step Simplification" (formula "3"))
      (rule "true_left" (formula "3"))
      (rule "applyEq" (formula "3") (term "0,0") (ifseqformula "2"))
      (rule "jdiv_axiom_inline" (formula "3") (term "0"))
      (builtin "One Step Simplification" (formula "3"))
      (rule "times_zero_2" (formula "3") (term "0,0,0,1"))
      (rule "qeq_literals" (formula "3") (term "0"))
      (builtin "One Step Simplification" (formula "3"))
      (rule "true_left" (formula "3"))
      (rule "polySimp_invertEq" (formula "1"))
      (rule "times_zero_2" (formula "1") (term "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0"))
      (rule "polySimp_elimOne" (formula "1") (term "0"))
      (rule "close" (formula "3") (ifseqformula "1"))
   )
)
(branch "CUT: f_divNum = 0 FALSE"
   (rule "cut" (inst "cutFormula=geq(f_divNum, Z(0(#)))") (userinteraction))
   (branch "CUT: f_divNum >= 0 TRUE"
      (rule "replace_known_left" (formula "2") (term "0,1") (ifseqformula "1") (userinteraction))
      (rule "replace_known_left" (formula "3") (term "0,1") (ifseqformula "1") (userinteraction))
      (builtin "One Step Simplification" (formula "2"))
      (builtin "One Step Simplification" (formula "3"))
      (rule "applyEqRigid" (formula "6") (term "0") (ifseqformula "3") (userinteraction))
      (rule "applyEqRigid" (formula "6") (term "0,1") (ifseqformula "2") (userinteraction))
      (rule "hide_left" (formula "2") (userinteraction))
      (rule "hide_left" (formula "2") (userinteraction))
      (rule "div_axiom" (formula "4") (term "0") (inst "quotient=quotient_0") (userinteraction))
      (rule "div_axiom" (formula "5") (term "0,1") (inst "quotient=quotient_1") (userinteraction))
      (rule "notLeft" (formula "4") (userinteraction))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "4") (userinteraction))
      (builtin "One Step Simplification" (formula "1"))
      (rule "cut_direct" (formula "2") (term "0") (userinteraction))
      (branch "CUT: -f_divDenom = 0 TRUE"
         (builtin "One Step Simplification" (formula "3"))
         (rule "true_left" (formula "3"))
         (rule "andLeft" (formula "1"))
         (rule "andLeft" (formula "1"))
         (rule "polySimp_elimNeg" (formula "8") (term "1"))
         (rule "polySimp_elimNeg" (formula "8") (term "1,0"))
         (rule "polySimp_elimNeg" (formula "4") (term "0"))
         (rule "polySimp_mulComm0" (formula "3") (term "0,2"))
         (rule "polySimp_mulComm0" (formula "3") (term "1,1,1"))
         (rule "polySimp_mulComm0" (formula "3") (term "0,1"))
         (rule "polySimp_mulComm0" (formula "2") (term "0"))
         (rule "polySimp_addComm1" (formula "3") (term "1,2"))
         (rule "polySimp_addComm1" (formula "3") (term "1,1"))
         (rule "applyEqRigid" (formula "8") (term "0,1") (ifseqformula "1"))
         (rule "polySimp_invertEq" (formula "4"))
         (rule "polySimp_mulLiterals" (formula "4") (term "0"))
         (rule "times_zero_2" (formula "4") (term "1"))
         (rule "polySimp_elimOne" (formula "4") (term "0"))
         (rule "close" (formula "6") (ifseqformula "4"))
      )
      (branch "CUT: -f_divDenom = 0 FALSE"
         (builtin "One Step Simplification" (formula "2"))
         (rule "andLeft" (formula "1"))
         (rule "andLeft" (formula "3"))
         (rule "andLeft" (formula "1"))
         (rule "andLeft" (formula "4"))
         (rule "cut" (inst "cutFormula=geq(f_divDenom, Z(0(#)))") (userinteraction))
         (branch "CUT: f_divDenom >= 0 TRUE"
            (rule "replace_known_left" (formula "4") (term "0") (ifseqformula "1") (userinteraction))
            (builtin "One Step Simplification" (formula "4"))
            (rule "cut_direct" (formula "7") (term "0") (userinteraction))
            (branch "CUT: -f_divDenom >= 0 TRUE"
               (builtin "One Step Simplification" (formula "8"))
               (rule "polySimp_elimNeg" (formula "10") (term "0"))
               (rule "polySimp_elimNeg" (formula "13") (term "1,0"))
               (rule "polySimp_elimNeg" (formula "13") (term "1"))
               (rule "polySimp_elimNeg" (formula "6") (term "1,0"))
               (rule "polySimp_elimNeg" (formula "5") (term "1,0"))
               (rule "polySimp_elimNeg" (formula "7") (term "0"))
               (rule "polySimp_elimNeg" (formula "8") (term "1,0"))
               (rule "polySimp_elimNeg" (formula "8") (term "1,1,1"))
               (rule "polySimp_mulComm0" (formula "3") (term "0"))
               (rule "polySimp_mulComm0" (formula "4") (term "0"))
               (rule "polySimp_mulComm0" (formula "4") (term "1,1"))
               (rule "polySimp_mulAssoc" (formula "6") (term "0"))
               (rule "polySimp_mulComm0" (formula "6") (term "0,0"))
               (rule "polySimp_mulAssoc" (formula "8") (term "0"))
               (rule "polySimp_mulComm0" (formula "8") (term "0,0"))
               (rule "polySimp_mulAssoc" (formula "8") (term "1,1"))
               (rule "polySimp_mulComm0" (formula "8") (term "0,1,1"))
               (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
               (rule "polySimp_elimOne" (formula "8") (term "1,1"))
               (rule "polySimp_addComm1" (formula "4") (term "1"))
               (rule "polySimp_addComm1" (formula "8") (term "1"))
               (rule "inEqSimp_homoInEq0" (formula "6"))
               (rule "polySimp_mulLiterals" (formula "6") (term "1,0"))
               (rule "polySimp_elimOne" (formula "6") (term "1,0"))
               (rule "inEqSimp_homoInEq1" (formula "8"))
               (rule "polySimp_mulLiterals" (formula "8") (term "1,0"))
               (rule "polySimp_elimOne" (formula "8") (term "1,0"))
               (rule "applyEq" (formula "13") (term "0") (ifseqformula "5"))
               (rule "eqSymm" (formula "13"))
               (rule "polySimp_homoEq" (formula "13"))
               (rule "polySimp_mulLiterals" (formula "13") (term "1,0"))
               (rule "polySimp_elimOne" (formula "13") (term "1,0"))
               (rule "applyEq" (formula "13") (term "1,0") (ifseqformula "2"))
               (rule "polySimp_addComm0" (formula "13") (term "0"))
               (rule "polySimp_invertEq" (formula "10"))
               (rule "polySimp_mulLiterals" (formula "10") (term "0"))
               (rule "times_zero_2" (formula "10") (term "1"))
               (rule "polySimp_elimOne" (formula "10") (term "0"))
               (rule "polySimp_sepPosMonomial" (formula "12"))
               (rule "inEqSimp_invertInEq1" (formula "7"))
               (rule "times_zero_2" (formula "7") (term "1"))
               (rule "polySimp_mulLiterals" (formula "7") (term "0"))
               (rule "polySimp_elimOne" (formula "7") (term "0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "6"))
               (rule "inEqSimp_sepPosMonomial0" (formula "8"))
               (rule "polySimp_mulComm0" (formula "8") (term "1"))
               (rule "polySimp_rightDist" (formula "8") (term "1"))
               (rule "polySimp_rightDist" (formula "8") (term "0,1"))
               (rule "mul_literals" (formula "8") (term "0,0,1"))
               (rule "inEqSimp_strengthen0" (formula "7") (ifseqformula "10"))
               (rule "add_zero_right" (formula "7") (term "1"))
               (rule "inEqSimp_contradEq3" (formula "10") (ifseqformula "7"))
               (rule "times_zero_1" (formula "10") (term "1,0,0"))
               (rule "add_zero_right" (formula "10") (term "0,0"))
               (rule "qeq_literals" (formula "10") (term "0"))
               (builtin "One Step Simplification" (formula "10"))
               (rule "false_right" (formula "10"))
               (rule "inEqSimp_strengthen1" (formula "9") (ifseqformula "10"))
               (rule "add_zero_right" (formula "9") (term "1"))
               (rule "inEqSimp_contradEq7" (formula "10") (ifseqformula "9"))
               (rule "times_zero_1" (formula "10") (term "1,0,0"))
               (rule "add_zero_right" (formula "10") (term "0,0"))
               (rule "leq_literals" (formula "10") (term "0"))
               (builtin "One Step Simplification" (formula "10"))
               (rule "false_right" (formula "10"))
               (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "7"))
               (rule "qeq_literals" (formula "1") (term "0"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "closeFalse" (formula "1"))
            )
            (branch "CUT: -f_divDenom >= 0 FALSE"
               (builtin "One Step Simplification" (formula "7"))
               (rule "div_unique2" (formula "13") (term "0") (inst "a=a") (inst "cnom=cnom") (inst "x=x") (inst "y=y") (userinteraction))
               (rule "instAll" (formula "14") (term "0,0") (ifseqformula "1") (userinteraction))
               (rule "hide_left" (formula "2") (userinteraction))
               (rule "instAll" (formula "14") (term "1,0") (ifseqformula "1") (userinteraction))
               (rule "hide_left" (formula "2") (userinteraction))
               (rule "instAll" (formula "14") (term "0") (ifseqformula "1") (userinteraction))
               (rule "hide_left" (formula "2") (userinteraction))
               (rule "instAll" (formula "14") (term "1") (ifseqformula "1") (userinteraction))
               (rule "hide_left" (formula "2") (userinteraction))
               (rule "impLeft" (formula "1") (userinteraction))
               (branch "Case 1"
                  (rule "cut_direct" (formula "9") (term "0,0,0,0") (userinteraction))
                  (branch "CUT: -f_divDenom < 0 TRUE"
                     (builtin "One Step Simplification" (formula "10"))
                     (rule "andRight" (formula "10") (userinteraction))
                     (branch "Case 1"
                        (rule "polySimp_elimNeg" (formula "15") (term "1,0"))
                        (rule "polySimp_elimNeg" (formula "15") (term "1"))
                        (rule "polySimp_elimNeg" (formula "10") (term "1,0,0,0,0"))
                        (rule "polySimp_elimNeg" (formula "10") (term "1,0,0,0"))
                        (rule "polySimp_elimNeg" (formula "10") (term "1,1,1"))
                        (rule "polySimp_elimNeg" (formula "12") (term "0"))
                        (rule "polySimp_elimNeg" (formula "6") (term "1,0"))
                        (rule "polySimp_elimNeg" (formula "8") (term "1,0"))
                        (rule "polySimp_elimNeg" (formula "10") (term "1,0,0,1"))
                        (rule "polySimp_elimNeg" (formula "1") (term "0"))
                        (rule "polySimp_elimNeg" (formula "10") (term "0,0,1,0"))
                        (rule "polySimp_elimNeg" (formula "10") (term "1,0,1"))
                        (rule "polySimp_elimNeg" (formula "8") (term "1,1"))
                        (rule "polySimp_elimNeg" (formula "11") (term "0"))
                        (rule "polySimp_elimNeg" (formula "10") (term "1,0,1,0"))
                        (rule "polySimp_elimNeg" (formula "7") (term "1,0"))
                        (rule "polySimp_mulComm0" (formula "5") (term "0"))
                        (rule "polySimp_mulComm0" (formula "5") (term "1,1"))
                        (rule "polySimp_mulComm0" (formula "4") (term "0"))
                        (rule "polySimp_mulAssoc" (formula "10") (term "0,0,0"))
                        (rule "polySimp_mulAssoc" (formula "8") (term "0"))
                        (rule "polySimp_mulComm0" (formula "8") (term "0,0"))
                        (rule "polySimp_mulAssoc" (formula "10") (term "0,1"))
                        (rule "polySimp_mulAssoc" (formula "10") (term "0,1,0"))
                        (rule "polySimp_mulComm1" (formula "10") (term "0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "10") (term "0,1,0"))
                        (rule "polySimp_elimOne" (formula "10") (term "0,1,0"))
                        (rule "polySimp_mulAssoc" (formula "7") (term "0"))
                        (rule "polySimp_mulComm0" (formula "7") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "10") (term "1,1"))
                        (rule "polySimp_addComm1" (formula "8") (term "1"))
                        (rule "polySimp_addComm1" (formula "5") (term "1"))
                        (rule "inEqSimp_geqRight" (formula "11"))
                        (rule "times_zero_1" (formula "1") (term "1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "2"))
                        (rule "times_zero_1" (formula "2") (term "1,0,0"))
                        (rule "add_literals" (formula "2") (term "0,0"))
                        (rule "inEqSimp_homoInEq0" (formula "10") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "10") (term "1,0,0,0"))
                        (rule "inEqSimp_homoInEq0" (formula "7"))
                        (rule "polySimp_mulLiterals" (formula "7") (term "1,0"))
                        (rule "polySimp_elimOne" (formula "7") (term "1,0"))
                        (rule "inEqSimp_homoInEq1" (formula "10") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1"))
                        (rule "polySimp_elimOne" (formula "10") (term "1,0,1"))
                        (rule "inEqSimp_homoInEq1" (formula "8"))
                        (rule "polySimp_mulLiterals" (formula "8") (term "1,0"))
                        (rule "polySimp_elimOne" (formula "8") (term "1,0"))
                        (rule "applyEq" (formula "10") (term "0,1,0,0,0") (ifseqformula "6"))
                        (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0"))
                        (rule "replace_known_left" (formula "10") (term "0,0") (ifseqformula "7"))
                        (builtin "One Step Simplification" (formula "10"))
                        (rule "applyEqRigid" (formula "14") (term "0") (ifseqformula "6"))
                        (rule "eqSymm" (formula "14"))
                        (rule "polySimp_homoEq" (formula "14"))
                        (rule "polySimp_mulLiterals" (formula "14") (term "1,0"))
                        (rule "polySimp_elimOne" (formula "14") (term "1,0"))
                        (rule "applyEqRigid" (formula "14") (term "1,0") (ifseqformula "3"))
                        (rule "polySimp_addComm0" (formula "14") (term "0"))
                        (rule "applyEqRigid" (formula "10") (term "0,1,0,1") (ifseqformula "6"))
                        (rule "polySimp_mulComm0" (formula "10") (term "1,0,1"))
                        (rule "replace_known_left" (formula "10") (term "1") (ifseqformula "8"))
                        (builtin "One Step Simplification" (formula "10"))
                        (rule "inEqSimp_leqRight" (formula "10"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                        (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "4"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                        (rule "polySimp_invertEq" (formula "11"))
                        (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                        (rule "times_zero_2" (formula "11") (term "1"))
                        (rule "polySimp_elimOne" (formula "11") (term "0"))
                        (rule "polySimp_sepPosMonomial" (formula "13"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                        (rule "polySimp_elimOne" (formula "2") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "9"))
                        (rule "polySimp_mulComm0" (formula "9") (term "1"))
                        (rule "polySimp_rightDist" (formula "9") (term "1"))
                        (rule "polySimp_rightDist" (formula "9") (term "0,1"))
                        (rule "mul_literals" (formula "9") (term "0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "9") (term "1,0,1"))
                        (rule "polySimp_elimOne" (formula "9") (term "1,0,1"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1"))
                        (rule "polySimp_rightDist" (formula "1") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                        (rule "mul_literals" (formula "1") (term "0,1"))
                        (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                        (rule "inEqSimp_contradEq7" (formula "11") (ifseqformula "2"))
                        (rule "times_zero_1" (formula "11") (term "1,0,0"))
                        (rule "add_zero_right" (formula "11") (term "0,0"))
                        (rule "leq_literals" (formula "11") (term "0"))
                        (builtin "One Step Simplification" (formula "11"))
                        (rule "false_right" (formula "11"))
                        (rule "inEqSimp_strengthen1" (formula "10") (ifseqformula "11"))
                        (rule "add_zero_right" (formula "10") (term "1"))
                        (rule "inEqSimp_contradEq7" (formula "11") (ifseqformula "10"))
                        (rule "times_zero_1" (formula "11") (term "1,0,0"))
                        (rule "add_zero_right" (formula "11") (term "0,0"))
                        (rule "leq_literals" (formula "11") (term "0"))
                        (builtin "One Step Simplification" (formula "11"))
                        (rule "false_right" (formula "11"))
                        (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "2"))
                        (rule "leq_literals" (formula "3") (term "0"))
                        (builtin "One Step Simplification" (formula "3"))
                        (rule "true_left" (formula "3"))
                        (rule "inEqSimp_contradInEq1" (formula "4") (ifseqformula "1"))
                        (rule "andLeft" (formula "4"))
                        (rule "inEqSimp_homoInEq1" (formula "4"))
                        (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                        (rule "add_literals" (formula "4") (term "1,1,0"))
                        (rule "times_zero_1" (formula "4") (term "1,0"))
                        (rule "add_zero_right" (formula "4") (term "0"))
                        (rule "leq_literals" (formula "4"))
                        (rule "closeFalse" (formula "4"))
                     )
                     (branch "Case 2"
                        (rule "polySimp_elimNeg" (formula "10") (term "1,0"))
                        (rule "polySimp_elimNeg" (formula "7") (term "1,0"))
                        (rule "polySimp_elimNeg" (formula "6") (term "1,0"))
                        (rule "polySimp_elimNeg" (formula "11") (term "0"))
                        (rule "polySimp_elimNeg" (formula "15") (term "1,0"))
                        (rule "polySimp_elimNeg" (formula "15") (term "1"))
                        (rule "polySimp_elimNeg" (formula "8") (term "1,0"))
                        (rule "polySimp_elimNeg" (formula "1") (term "0"))
                        (rule "polySimp_elimNeg" (formula "12") (term "0"))
                        (rule "polySimp_elimNeg" (formula "10") (term "0,0"))
                        (rule "polySimp_elimNeg" (formula "10") (term "1,1"))
                        (rule "polySimp_elimNeg" (formula "8") (term "1,1"))
                        (rule "polySimp_mulComm0" (formula "5") (term "0"))
                        (rule "polySimp_mulComm0" (formula "5") (term "1,1"))
                        (rule "polySimp_mulComm0" (formula "4") (term "0"))
                        (rule "polySimp_mulAssoc" (formula "7") (term "0"))
                        (rule "polySimp_mulComm0" (formula "7") (term "0,0"))
                        (rule "polySimp_mulAssoc" (formula "8") (term "0"))
                        (rule "polySimp_mulComm0" (formula "8") (term "0,0"))
                        (rule "polySimp_mulAssoc" (formula "10") (term "0"))
                        (rule "polySimp_mulComm1" (formula "10") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                        (rule "polySimp_elimOne" (formula "10") (term "0"))
                        (rule "polySimp_addComm1" (formula "10") (term "1"))
                        (rule "polySimp_addComm1" (formula "8") (term "1"))
                        (rule "polySimp_addComm1" (formula "5") (term "1"))
                        (rule "inEqSimp_geqRight" (formula "11"))
                        (rule "times_zero_1" (formula "1") (term "1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "2"))
                        (rule "times_zero_1" (formula "2") (term "1,0,0"))
                        (rule "add_literals" (formula "2") (term "0,0"))
                        (rule "inEqSimp_geqRight" (formula "10"))
                        (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "1") (term "0,1,0,0"))
                        (rule "mul_literals" (formula "1") (term "0,0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0,0"))
                        (rule "polySimp_elimOne" (formula "1") (term "1,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0,0,0"))
                        (rule "add_zero_left" (formula "1") (term "0,0,0"))
                        (rule "inEqSimp_homoInEq0" (formula "8"))
                        (rule "polySimp_mulLiterals" (formula "8") (term "1,0"))
                        (rule "polySimp_elimOne" (formula "8") (term "1,0"))
                        (rule "inEqSimp_homoInEq1" (formula "9"))
                        (rule "polySimp_mulLiterals" (formula "9") (term "1,0"))
                        (rule "polySimp_elimOne" (formula "9") (term "1,0"))
                        (rule "applyEqRigid" (formula "14") (term "0") (ifseqformula "7"))
                        (rule "eqSymm" (formula "14"))
                        (rule "polySimp_homoEq" (formula "14"))
                        (rule "polySimp_mulLiterals" (formula "14") (term "1,0"))
                        (rule "polySimp_elimOne" (formula "14") (term "1,0"))
                        (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "4"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                        (rule "applyEq" (formula "14") (term "1,0") (ifseqformula "4"))
                        (rule "polySimp_addComm0" (formula "14") (term "0"))
                        (rule "polySimp_invertEq" (formula "11"))
                        (rule "times_zero_2" (formula "11") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                        (rule "polySimp_elimOne" (formula "11") (term "0"))
                        (rule "polySimp_sepPosMonomial" (formula "13"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                        (rule "polySimp_elimOne" (formula "2") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "9"))
                        (rule "polySimp_mulComm0" (formula "9") (term "1"))
                        (rule "polySimp_rightDist" (formula "9") (term "1"))
                        (rule "polySimp_rightDist" (formula "9") (term "0,1"))
                        (rule "mul_literals" (formula "9") (term "0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "9") (term "1,0,1"))
                        (rule "polySimp_elimOne" (formula "9") (term "1,0,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1"))
                        (rule "polySimp_rightDist" (formula "1") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                        (rule "polySimp_mulComm0" (formula "1") (term "0,1"))
                        (rule "inEqSimp_contradEq7" (formula "11") (ifseqformula "2"))
                        (rule "times_zero_1" (formula "11") (term "1,0,0"))
                        (rule "add_zero_right" (formula "11") (term "0,0"))
                        (rule "leq_literals" (formula "11") (term "0"))
                        (builtin "One Step Simplification" (formula "11"))
                        (rule "false_right" (formula "11"))
                        (rule "inEqSimp_strengthen1" (formula "10") (ifseqformula "11"))
                        (rule "add_zero_right" (formula "10") (term "1"))
                        (rule "inEqSimp_contradEq7" (formula "11") (ifseqformula "10"))
                        (rule "times_zero_1" (formula "11") (term "1,0,0"))
                        (rule "add_zero_right" (formula "11") (term "0,0"))
                        (rule "leq_literals" (formula "11") (term "0"))
                        (builtin "One Step Simplification" (formula "11"))
                        (rule "false_right" (formula "11"))
                        (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "2"))
                        (rule "leq_literals" (formula "3") (term "0"))
                        (builtin "One Step Simplification" (formula "3"))
                        (rule "true_left" (formula "3"))
                        (rule "inEqSimp_contradInEq0" (formula "5") (ifseqformula "1"))
                        (rule "andLeft" (formula "5"))
                        (rule "inEqSimp_homoInEq1" (formula "5"))
                        (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                        (rule "polySimp_mulAssoc" (formula "5") (term "0,1,0"))
                        (rule "polySimp_mulComm0" (formula "5") (term "0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "5") (term "0,1,0"))
                        (rule "polySimp_elimOne" (formula "5") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "5") (term "0"))
                        (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                        (rule "polySimp_pullOutFactor2b" (formula "5") (term "0,0,0"))
                        (rule "add_literals" (formula "5") (term "1,1,0,0,0"))
                        (rule "times_zero_1" (formula "5") (term "1,0,0,0"))
                        (rule "add_zero_right" (formula "5") (term "0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "5") (term "0"))
                        (rule "add_literals" (formula "5") (term "1,1,0"))
                        (rule "times_zero_1" (formula "5") (term "1,0"))
                        (rule "add_zero_right" (formula "5") (term "0"))
                        (rule "leq_literals" (formula "5"))
                        (rule "closeFalse" (formula "5"))
                     )
                  )
                  (branch "CUT: -f_divDenom < 0 FALSE"
                     (builtin "One Step Simplification" (formula "10"))
                     (rule "false_right" (formula "10"))
                     (rule "polySimp_elimNeg" (formula "7") (term "1,0"))
                     (rule "polySimp_elimNeg" (formula "7") (term "1,1"))
                     (rule "polySimp_elimNeg" (formula "9") (term "0"))
                     (rule "polySimp_elimNeg" (formula "11") (term "0"))
                     (rule "polySimp_elimNeg" (formula "14") (term "1,0"))
                     (rule "polySimp_elimNeg" (formula "14") (term "1"))
                     (rule "polySimp_elimNeg" (formula "5") (term "1,0"))
                     (rule "polySimp_elimNeg" (formula "10") (term "0"))
                     (rule "polySimp_elimNeg" (formula "6") (term "1,0"))
                     (rule "polySimp_mulComm0" (formula "4") (term "0"))
                     (rule "polySimp_mulComm0" (formula "3") (term "0"))
                     (rule "polySimp_mulComm0" (formula "4") (term "1,1"))
                     (rule "polySimp_mulAssoc" (formula "7") (term "0"))
                     (rule "polySimp_mulComm0" (formula "7") (term "0,0"))
                     (rule "polySimp_mulAssoc" (formula "6") (term "0"))
                     (rule "polySimp_mulComm0" (formula "6") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "7") (term "1"))
                     (rule "polySimp_addComm1" (formula "4") (term "1"))
                     (rule "inEqSimp_ltRight" (formula "9"))
                     (rule "times_zero_1" (formula "1") (term "0,0"))
                     (rule "add_zero_left" (formula "1") (term "0"))
                     (rule "close" (formula "10") (ifseqformula "1"))
                  )
               )
               (branch "Case 2"
                  (rule "close" (formula "14") (ifseqformula "1"))
               )
            )
         )
         (branch "CUT: f_divDenom >= 0 FALSE"
            (rule "replace_known_right" (formula "3") (term "0") (ifseqformula "8") (userinteraction))
            (builtin "One Step Simplification" (formula "3"))
            (rule "cut_direct" (formula "6") (term "0") (userinteraction))
            (branch "CUT: -f_divDenom >= 0 TRUE"
               (builtin "One Step Simplification" (formula "7"))
               (rule "div_unique1" (formula "13") (term "0") (inst "a=a") (inst "cnom=cnom") (inst "x=x") (inst "y=y") (userinteraction))
               (rule "instAll" (formula "14") (term "0,0") (ifseqformula "1") (userinteraction))
               (rule "hide_left" (formula "2") (userinteraction))
               (rule "instAll" (formula "14") (term "1,0") (ifseqformula "1") (userinteraction))
               (rule "hide_left" (formula "2") (userinteraction))
               (rule "instAll" (formula "14") (term "0") (ifseqformula "1") (userinteraction))
               (rule "hide_left" (formula "2") (userinteraction))
               (rule "instAll" (formula "14") (term "1") (ifseqformula "1") (userinteraction))
               (rule "hide_left" (formula "2") (userinteraction))
               (rule "impLeft" (formula "1") (userinteraction))
               (branch "Case 1"
                  (rule "polySimp_elimNeg" (formula "14") (term "1,0"))
                  (rule "polySimp_elimNeg" (formula "14") (term "1"))
                  (rule "polySimp_elimNeg" (formula "9") (term "1,0,1,0"))
                  (rule "polySimp_elimSub" (formula "9") (term "1,1,0"))
                  (rule "polySimp_elimNeg" (formula "9") (term "1,0,0,1,0"))
                  (rule "polySimp_elimNeg" (formula "9") (term "1,0,1"))
                  (rule "polySimp_elimSub" (formula "9") (term "1,1"))
                  (rule "polySimp_elimNeg" (formula "9") (term "1,0,1,0,0"))
                  (rule "polySimp_elimNeg" (formula "7") (term "1,0"))
                  (rule "polySimp_elimNeg" (formula "9") (term "1,0,0,1,0,0,0"))
                  (rule "polySimp_elimNeg" (formula "9") (term "1,0,1,0,0,0"))
                  (rule "polySimp_elimNeg" (formula "7") (term "1,1,1"))
                  (rule "polySimp_elimNeg" (formula "6") (term "0"))
                  (rule "polySimp_elimNeg" (formula "11") (term "0"))
                  (rule "polySimp_elimNeg" (formula "9") (term "0,0,1,0,0"))
                  (rule "polySimp_elimNeg" (formula "9") (term "0,0,1"))
                  (rule "polySimp_elimNeg" (formula "9") (term "0,0,0,0,0"))
                  (rule "polySimp_elimNeg" (formula "5") (term "1,0"))
                  (rule "polySimp_elimNeg" (formula "4") (term "1,0"))
                  (rule "polySimp_elimNeg" (formula "9") (term "0,1,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0"))
                  (rule "polySimp_elimNeg" (formula "9") (term "0,1,1,1"))
                  (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1"))
                  (rule "polySimp_mulComm0" (formula "3") (term "0"))
                  (rule "polySimp_mulComm0" (formula "2") (term "0"))
                  (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0"))
                  (rule "polySimp_elimOne" (formula "9") (term "1,1,1"))
                  (rule "polySimp_mulAssoc" (formula "9") (term "0,1,0"))
                  (rule "polySimp_mulAssoc" (formula "7") (term "0"))
                  (rule "polySimp_mulComm0" (formula "7") (term "0,0"))
                  (rule "polySimp_mulAssoc" (formula "9") (term "0,1,0,0,0"))
                  (rule "polySimp_mulAssoc" (formula "7") (term "1,1"))
                  (rule "polySimp_mulComm0" (formula "7") (term "0,1,1"))
                  (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "7") (term "1,1"))
                  (rule "polySimp_mulAssoc" (formula "9") (term "0,1,0,0"))
                  (rule "polySimp_mulAssoc" (formula "9") (term "0,1"))
                  (rule "polySimp_mulComm1" (formula "9") (term "0,0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "9") (term "0,1,0,0"))
                  (rule "polySimp_elimOne" (formula "9") (term "0,1,0,0"))
                  (rule "polySimp_mulComm1" (formula "9") (term "0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "9") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "9") (term "0,1"))
                  (rule "polySimp_mulAssoc" (formula "5") (term "0"))
                  (rule "polySimp_addComm1" (formula "3") (term "1"))
                  (rule "polySimp_mulComm0" (formula "5") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "9") (term "1,1,0"))
                  (rule "polySimp_addComm1" (formula "9") (term "1,1"))
                  (rule "polySimp_addComm1" (formula "7") (term "1"))
                  (rule "inEqSimp_geqRight" (formula "10"))
                  (rule "times_zero_1" (formula "1") (term "1,0,0"))
                  (rule "add_literals" (formula "1") (term "0,0"))
                  (rule "inEqSimp_gtToGeq" (formula "10") (term "0,0,0,0"))
                  (rule "times_zero_1" (formula "10") (term "1,0,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "10") (term "0,0,0,0,0,0"))
                  (rule "inEqSimp_homoInEq0" (formula "10") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "10") (term "1,0,1,0,0,0"))
                  (rule "inEqSimp_homoInEq0" (formula "6"))
                  (rule "polySimp_mulLiterals" (formula "6") (term "1,0"))
                  (rule "polySimp_elimOne" (formula "6") (term "1,0"))
                  (rule "inEqSimp_homoInEq1" (formula "10") (term "1,0"))
                  (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,0"))
                  (rule "polySimp_elimOne" (formula "10") (term "1,0,1,0"))
                  (rule "inEqSimp_homoInEq1" (formula "8"))
                  (rule "polySimp_mulLiterals" (formula "8") (term "1,0"))
                  (rule "polySimp_elimOne" (formula "8") (term "1,0"))
                  (rule "applyEqRigid" (formula "10") (term "0,1,0,1,0,0,0") (ifseqformula "5"))
                  (rule "polySimp_mulComm0" (formula "10") (term "1,0,1,0,0,0"))
                  (rule "replace_known_left" (formula "10") (term "1,0,0,0") (ifseqformula "6"))
                  (builtin "One Step Simplification" (formula "10"))
                  (rule "applyEqRigid" (formula "14") (term "0") (ifseqformula "5"))
                  (rule "eqSymm" (formula "14"))
                  (rule "polySimp_homoEq" (formula "14"))
                  (rule "polySimp_mulLiterals" (formula "14") (term "1,0"))
                  (rule "polySimp_elimOne" (formula "14") (term "1,0"))
                  (rule "applyEq" (formula "10") (term "0,0,1,0,0") (ifseqformula "2"))
                  (rule "polySimp_mulComm0" (formula "10") (term "0,1,0,0"))
                  (rule "replace_known_left" (formula "10") (term "1,0,0") (ifseqformula "3"))
                  (builtin "One Step Simplification" (formula "10"))
                  (rule "applyEqRigid" (formula "14") (term "1,0") (ifseqformula "2"))
                  (rule "polySimp_addComm0" (formula "14") (term "0"))
                  (rule "applyEqRigid" (formula "10") (term "0,1,0,1,0") (ifseqformula "5"))
                  (rule "polySimp_mulComm0" (formula "10") (term "1,0,1,0"))
                  (rule "replace_known_left" (formula "10") (term "1,0") (ifseqformula "8"))
                  (builtin "One Step Simplification" (formula "10"))
                  (rule "applyEqRigid" (formula "10") (term "0,0,1") (ifseqformula "2"))
                  (rule "polySimp_mulComm0" (formula "10") (term "0,1"))
                  (rule "replace_known_left" (formula "10") (term "1") (ifseqformula "4"))
                  (builtin "One Step Simplification" (formula "10"))
                  (rule "inEqSimp_geqRight" (formula "10"))
                  (rule "times_zero_1" (formula "1") (term "1,0,0"))
                  (rule "add_zero_right" (formula "1") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0"))
                  (rule "add_literals" (formula "1") (term "0,0"))
                  (rule "add_zero_left" (formula "1") (term "0"))
                  (rule "polySimp_invertEq" (formula "11"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                  (rule "times_zero_2" (formula "11") (term "1"))
                  (rule "polySimp_elimOne" (formula "11") (term "0"))
                  (rule "polySimp_sepPosMonomial" (formula "13"))
                  (rule "inEqSimp_invertInEq1" (formula "8"))
                  (rule "mul_literals" (formula "8") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                  (rule "polySimp_elimOne" (formula "8") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                  (rule "mul_literals" (formula "2") (term "1"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "9"))
                  (rule "polySimp_mulComm0" (formula "9") (term "1"))
                  (rule "polySimp_rightDist" (formula "9") (term "1"))
                  (rule "polySimp_rightDist" (formula "9") (term "0,1"))
                  (rule "mul_literals" (formula "9") (term "0,0,1"))
                  (rule "inEqSimp_invertInEq0" (formula "1"))
                  (rule "times_zero_2" (formula "1") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                  (rule "polySimp_elimOne" (formula "1") (term "0"))
                  (rule "inEqSimp_contradEq3" (formula "11") (ifseqformula "2"))
                  (rule "times_zero_1" (formula "11") (term "1,0,0"))
                  (rule "add_zero_right" (formula "11") (term "0,0"))
                  (rule "qeq_literals" (formula "11") (term "0"))
                  (builtin "One Step Simplification" (formula "11"))
                  (rule "false_right" (formula "11"))
                  (rule "inEqSimp_strengthen1" (formula "10") (ifseqformula "11"))
                  (rule "add_zero_right" (formula "10") (term "1"))
                  (rule "inEqSimp_contradEq7" (formula "11") (ifseqformula "10"))
                  (rule "times_zero_1" (formula "11") (term "1,0,0"))
                  (rule "add_zero_right" (formula "11") (term "0,0"))
                  (rule "leq_literals" (formula "11") (term "0"))
                  (builtin "One Step Simplification" (formula "11"))
                  (rule "false_right" (formula "11"))
                  (rule "inEqSimp_subsumption0" (formula "8") (ifseqformula "2"))
                  (rule "leq_literals" (formula "8") (term "0"))
                  (builtin "One Step Simplification" (formula "8"))
                  (rule "true_left" (formula "8"))
                  (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "1"))
                  (rule "qeq_literals" (formula "2") (term "0"))
                  (builtin "One Step Simplification" (formula "2"))
                  (rule "closeFalse" (formula "2"))
               )
               (branch "Case 2"
                  (rule "close" (formula "14") (ifseqformula "1"))
               )
            )
            (branch "CUT: -f_divDenom >= 0 FALSE"
               (builtin "One Step Simplification" (formula "6"))
               (rule "polySimp_elimNeg" (formula "13") (term "1"))
               (rule "polySimp_elimNeg" (formula "5") (term "1,0"))
               (rule "polySimp_elimNeg" (formula "4") (term "1,0"))
               (rule "polySimp_elimNeg" (formula "13") (term "1,0"))
               (rule "polySimp_elimNeg" (formula "10") (term "0"))
               (rule "polySimp_elimNeg" (formula "8") (term "0"))
               (rule "polySimp_elimNeg" (formula "6") (term "1,0"))
               (rule "polySimp_elimNeg" (formula "6") (term "1,1"))
               (rule "polySimp_mulComm0" (formula "2") (term "0"))
               (rule "polySimp_mulComm0" (formula "3") (term "0"))
               (rule "polySimp_mulAssoc" (formula "5") (term "0"))
               (rule "polySimp_mulComm0" (formula "5") (term "0,0"))
               (rule "polySimp_mulAssoc" (formula "6") (term "0"))
               (rule "polySimp_mulComm0" (formula "6") (term "0,0"))
               (rule "polySimp_addComm1" (formula "3") (term "1"))
               (rule "polySimp_addComm1" (formula "6") (term "1"))
               (rule "inEqSimp_geqRight" (formula "9"))
               (rule "times_zero_1" (formula "1") (term "1,0,0"))
               (rule "add_literals" (formula "1") (term "0,0"))
               (rule "inEqSimp_geqRight" (formula "9"))
               (rule "times_zero_1" (formula "1") (term "1,0,0"))
               (rule "add_zero_right" (formula "1") (term "0,0"))
               (rule "inEqSimp_homoInEq0" (formula "7"))
               (rule "polySimp_mulLiterals" (formula "7") (term "1,0"))
               (rule "polySimp_elimOne" (formula "7") (term "1,0"))
               (rule "inEqSimp_homoInEq1" (formula "8"))
               (rule "polySimp_mulLiterals" (formula "8") (term "1,0"))
               (rule "polySimp_elimOne" (formula "8") (term "1,0"))
               (rule "applyEq" (formula "13") (term "0") (ifseqformula "6"))
               (rule "eqSymm" (formula "13"))
               (rule "polySimp_homoEq" (formula "13"))
               (rule "polySimp_mulLiterals" (formula "13") (term "1,0"))
               (rule "polySimp_elimOne" (formula "13") (term "1,0"))
               (rule "applyEq" (formula "13") (term "1,0") (ifseqformula "3"))
               (rule "polySimp_addComm0" (formula "13") (term "0"))
               (rule "polySimp_invertEq" (formula "10"))
               (rule "times_zero_2" (formula "10") (term "1"))
               (rule "polySimp_mulLiterals" (formula "10") (term "0"))
               (rule "polySimp_elimOne" (formula "10") (term "0"))
               (rule "polySimp_sepPosMonomial" (formula "12"))
               (rule "inEqSimp_sepPosMonomial0" (formula "2"))
               (rule "mul_literals" (formula "2") (term "1"))
               (rule "inEqSimp_sepNegMonomial0" (formula "1"))
               (rule "polySimp_mulLiterals" (formula "1") (term "0"))
               (rule "polySimp_elimOne" (formula "1") (term "0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "7"))
               (rule "inEqSimp_sepPosMonomial0" (formula "8"))
               (rule "polySimp_mulComm0" (formula "8") (term "1"))
               (rule "polySimp_rightDist" (formula "8") (term "1"))
               (rule "polySimp_rightDist" (formula "8") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "8") (term "1,0,1"))
               (rule "mul_literals" (formula "8") (term "0,0,1"))
               (rule "polySimp_elimOne" (formula "8") (term "1,0,1"))
               (rule "inEqSimp_contradEq7" (formula "10") (ifseqformula "1"))
               (rule "times_zero_1" (formula "10") (term "1,0,0"))
               (rule "add_zero_right" (formula "10") (term "0,0"))
               (rule "leq_literals" (formula "10") (term "0"))
               (builtin "One Step Simplification" (formula "10"))
               (rule "false_right" (formula "10"))
               (rule "inEqSimp_strengthen1" (formula "9") (ifseqformula "10"))
               (rule "add_zero_right" (formula "9") (term "1"))
               (rule "inEqSimp_contradEq7" (formula "10") (ifseqformula "9"))
               (rule "times_zero_1" (formula "10") (term "1,0,0"))
               (rule "add_zero_right" (formula "10") (term "0,0"))
               (rule "leq_literals" (formula "10") (term "0"))
               (builtin "One Step Simplification" (formula "10"))
               (rule "false_right" (formula "10"))
               (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "2"))
               (rule "qeq_literals" (formula "1") (term "0"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "closeFalse" (formula "1"))
            )
         )
      )
   )
   (branch "CUT: f_divNum >= 0 FALSE"
      (rule "replace_known_right" (formula "1") (term "0,1") (ifseqformula "4") (userinteraction))
      (rule "replace_known_right" (formula "2") (term "0,1") (ifseqformula "4") (userinteraction))
      (builtin "One Step Simplification" (formula "1"))
      (builtin "One Step Simplification" (formula "2"))
      (rule "applyEqRigid" (formula "6") (term "0") (ifseqformula "2") (userinteraction))
      (rule "applyEqRigid" (formula "6") (term "0,1") (ifseqformula "1") (userinteraction))
      (rule "hide_left" (formula "1") (userinteraction))
      (rule "hide_left" (formula "1") (userinteraction))
      (rule "times_minus_one_1" (formula "4") (term "0,1") (userinteraction))
      (rule "sub_sub_elim" (formula "4") (term "1") (userinteraction))
      (rule "times_minus_one_1" (formula "4") (term "0") (userinteraction))
      (rule "times_minus_one_1" (formula "4") (term "0,0,0") (userinteraction))
      (rule "cut" (inst "cutFormula=geq(f_divDenom, Z(0(#)))") (userinteraction))
      (branch "CUT: f_divDenom >= 0 TRUE"
         (rule "div_unique1" (formula "5") (term "1") (inst "a=a") (inst "cnom=cnom") (inst "x=x") (inst "y=y") (userinteraction))
         (rule "times_minus_one_1" (formula "6") (term "0,1") (userinteraction))
         (rule "instAll" (formula "6") (term "0,1") (ifseqformula "1") (userinteraction))
         (rule "hide_left" (formula "2") (userinteraction))
         (rule "instAll" (formula "6") (term "1,1") (ifseqformula "1") (userinteraction))
         (rule "hide_left" (formula "2") (userinteraction))
         (rule "instAll" (formula "6") (term "1") (ifseqformula "1") (userinteraction))
         (rule "hide_left" (formula "2") (userinteraction))
         (rule "instAll" (formula "6") (term "0") (ifseqformula "1") (userinteraction))
         (rule "hide_left" (formula "2") (userinteraction))
         (rule "impLeft" (formula "1") (userinteraction))
         (branch "Case 1"
            (rule "notLeft" (formula "2"))
            (rule "polySimp_elimNeg" (formula "3") (term "0,0,0,1,0,0,0"))
            (rule "polySimp_elimNeg" (formula "3") (term "0,0,0,0,1,0,0"))
            (rule "polySimp_elimNeg" (formula "3") (term "1,0,0,0,1"))
            (rule "polySimp_elimNeg" (formula "3") (term "0,0,0,1,0"))
            (rule "polySimp_elimNeg" (formula "3") (term "1,1,0,0"))
            (rule "polySimp_elimNeg" (formula "3") (term "1,1,0,0,0"))
            (rule "polySimp_elimNeg" (formula "3") (term "1,0,0,0,1,0,0"))
            (rule "polySimp_elimNeg" (formula "6") (term "0,0,0"))
            (rule "polySimp_elimNeg" (formula "6") (term "1,0,0"))
            (rule "polySimp_elimNeg" (formula "3") (term "1,0,1,1"))
            (rule "polySimp_elimNeg" (formula "3") (term "1,0,1,1,0"))
            (rule "polySimp_elimNeg" (formula "3") (term "0,0,0,0,1"))
            (rule "polySimp_elimNeg" (formula "6") (term "0,1"))
            (rule "polySimp_elimNeg" (formula "3") (term "0,0,1,0,0"))
            (rule "polySimp_elimNeg" (formula "6") (term "0"))
            (rule "polySimp_elimSub" (formula "3") (term "1,1"))
            (rule "polySimp_elimSub" (formula "3") (term "1,1,0"))
            (rule "polySimp_elimNeg" (formula "3") (term "0,0,1"))
            (rule "polySimp_homoEq" (formula "6"))
            (rule "polySimp_mulLiterals" (formula "6") (term "1,0"))
            (rule "polySimp_elimOne" (formula "6") (term "1,0"))
            (rule "polySimp_mulComm1" (formula "3") (term "0,1,0,0"))
            (rule "polySimp_mulComm1" (formula "3") (term "0,1"))
            (rule "polySimp_addComm1" (formula "3") (term "1,1"))
            (rule "polySimp_addComm1" (formula "3") (term "1,1,0"))
            (rule "inEqSimp_geqRight" (formula "4"))
            (rule "times_zero_1" (formula "1") (term "1,0,0"))
            (rule "add_zero_right" (formula "1") (term "0,0"))
            (rule "inEqSimp_gtToGeq" (formula "4") (term "0,0,0,0"))
            (rule "times_zero_1" (formula "4") (term "1,0,0,0,0,0,0"))
            (rule "add_zero_right" (formula "4") (term "0,0,0,0,0,0"))
            (rule "inEqSimp_homoInEq0" (formula "4") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1,0,0"))
            (rule "polySimp_elimOne" (formula "4") (term "1,0,1,0,0"))
            (rule "inEqSimp_homoInEq1" (formula "4") (term "1"))
            (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1"))
            (rule "polySimp_elimOne" (formula "4") (term "1,0,1"))
            (rule "polySimp_sepPosMonomial" (formula "6"))
            (rule "inEqSimp_sepPosMonomial0" (formula "1"))
            (rule "mul_literals" (formula "1") (term "1"))
            (rule "inEqSimp_sepPosMonomial1" (formula "4") (term "0,0,0,0"))
            (rule "mul_literals" (formula "4") (term "1,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "4") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "4") (term "1,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "4") (term "1"))
            (rule "polySimp_mulComm0" (formula "4") (term "1,1"))
            (rule "polySimp_rightDist" (formula "4") (term "1,1"))
            (rule "polySimp_mulLiterals" (formula "4") (term "1,1,1"))
            (rule "polySimp_elimOne" (formula "4") (term "1,1,1"))
            (rule "polySimp_rightDist" (formula "4") (term "0,1,1"))
            (rule "mul_literals" (formula "4") (term "0,0,1,1"))
            (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1,1"))
            (rule "polySimp_elimOne" (formula "4") (term "1,0,1,1"))
            (rule "inEqSimp_contradEq3" (formula "5") (ifseqformula "1"))
            (rule "times_zero_1" (formula "5") (term "1,0,0"))
            (rule "add_zero_right" (formula "5") (term "0,0"))
            (rule "qeq_literals" (formula "5") (term "0"))
            (builtin "One Step Simplification" (formula "5"))
            (rule "false_right" (formula "5"))
            (rule "inEqSimp_strengthen1" (formula "2") (ifseqformula "3"))
            (rule "add_zero_right" (formula "2") (term "1"))
            (rule "replace_known_left" (formula "4") (term "0,0,0,0") (ifseqformula "2"))
            (builtin "One Step Simplification" (formula "4"))
            (rule "inEqSimp_contradEq7" (formula "3") (ifseqformula "2"))
            (rule "times_zero_1" (formula "3") (term "1,0,0"))
            (rule "add_zero_right" (formula "3") (term "0,0"))
            (rule "leq_literals" (formula "3") (term "0"))
            (builtin "One Step Simplification" (formula "3"))
            (rule "false_right" (formula "3"))
            (rule "commute_and_2" (formula "3") (term "0"))
            (rule "div_axiom" (formula "4") (term "0") (inst "quotient=quotient_0"))
            (rule "polySimp_mulAssoc" (formula "1") (term "0,2,1,1"))
            (rule "polySimp_mulComm0" (formula "1") (term "0,0,2,1,1"))
            (rule "polySimp_mulAssoc" (formula "1") (term "0,1,0,1"))
            (rule "polySimp_mulComm0" (formula "1") (term "0,0,1,0,1"))
            (rule "polySimp_mulAssoc" (formula "1") (term "0,1,1,1"))
            (rule "polySimp_mulComm0" (formula "1") (term "0,0,1,1,1"))
            (rule "polySimp_mulAssoc" (formula "1") (term "1,1,1,1,1"))
            (rule "polySimp_mulComm0" (formula "1") (term "0,1,1,1,1,1"))
            (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,1,1"))
            (rule "polySimp_elimOne" (formula "1") (term "1,1,1,1,1"))
            (rule "polySimp_addComm1" (formula "1") (term "1,2,1,1"))
            (rule "polySimp_addComm1" (formula "1") (term "1,1,1,1"))
            (rule "inEqSimp_homoInEq0" (formula "1") (term "1,0,1"))
            (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0,1"))
            (rule "polySimp_elimOne" (formula "1") (term "1,0,1,0,1"))
            (rule "inEqSimp_homoInEq1" (formula "1") (term "2,1,1"))
            (rule "polySimp_mulLiterals" (formula "1") (term "1,0,2,1,1"))
            (rule "polySimp_elimOne" (formula "1") (term "1,0,2,1,1"))
            (rule "inEqSimp_homoInEq1" (formula "1") (term "1,1,1"))
            (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,1,1"))
            (rule "polySimp_elimOne" (formula "1") (term "1,0,1,1,1"))
            (rule "polySimp_invertEq" (formula "1") (term "0"))
            (rule "polySimp_mulLiterals" (formula "1") (term "0,0"))
            (rule "times_zero_2" (formula "1") (term "1,0"))
            (rule "polySimp_elimOne" (formula "1") (term "0,0"))
            (rule "inEqSimp_invertInEq1" (formula "1") (term "0,1,1"))
            (rule "polySimp_mulLiterals" (formula "1") (term "0,0,1,1"))
            (rule "times_zero_2" (formula "1") (term "1,0,1,1"))
            (rule "polySimp_elimOne" (formula "1") (term "0,0,1,1"))
            (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,1"))
            (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,1"))
            (rule "polySimp_elimOne" (formula "1") (term "1,1,0,1"))
            (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "2,1,1"))
            (rule "polySimp_mulComm0" (formula "1") (term "1,2,1,1"))
            (rule "polySimp_rightDist" (formula "1") (term "1,2,1,1"))
            (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,1,1"))
            (rule "polySimp_elimOne" (formula "1") (term "1,1,2,1,1"))
            (rule "polySimp_rightDist" (formula "1") (term "0,1,2,1,1"))
            (rule "mul_literals" (formula "1") (term "0,0,1,2,1,1"))
            (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,2,1,1"))
            (rule "polySimp_elimOne" (formula "1") (term "1,0,1,2,1,1"))
            (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1,1,1"))
            (rule "polySimp_mulComm0" (formula "1") (term "1,1,1,1"))
            (rule "polySimp_rightDist" (formula "1") (term "1,1,1,1"))
            (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,1,1"))
            (rule "polySimp_elimOne" (formula "1") (term "1,1,1,1,1"))
            (rule "polySimp_rightDist" (formula "1") (term "0,1,1,1,1"))
            (rule "mul_literals" (formula "1") (term "0,0,1,1,1,1"))
            (rule "inEqSimp_contradEq7" (formula "1") (term "0") (ifseqformula "3"))
            (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
            (rule "add_zero_right" (formula "1") (term "0,0,0"))
            (rule "leq_literals" (formula "1") (term "0,0"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "andLeft" (formula "1"))
            (rule "andLeft" (formula "1"))
            (rule "applyEq" (formula "6") (term "0,0,1,0") (ifseqformula "1"))
            (rule "polySimp_mulComm0" (formula "6") (term "0,1,0"))
            (rule "replace_known_left" (formula "6") (term "1,0") (ifseqformula "2"))
            (builtin "One Step Simplification" (formula "6"))
            (rule "applyEqRigid" (formula "7") (term "0") (ifseqformula "1"))
            (rule "eqSymm" (formula "7"))
            (rule "polySimp_homoEq" (formula "7"))
            (rule "polySimp_mulLiterals" (formula "7") (term "1,0"))
            (rule "polySimp_elimOne" (formula "7") (term "1,0"))
            (rule "applyEqRigid" (formula "6") (term "0,0,1") (ifseqformula "1"))
            (rule "polySimp_mulComm0" (formula "6") (term "0,1"))
            (rule "polySimp_sepPosMonomial" (formula "7"))
            (rule "inEqSimp_contradInEq1" (formula "3") (term "0") (ifseqformula "5"))
            (rule "qeq_literals" (formula "3") (term "0,0"))
            (builtin "One Step Simplification" (formula "3"))
            (rule "replace_known_left" (formula "6") (term "1") (ifseqformula "3"))
            (builtin "One Step Simplification" (formula "6"))
            (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "3"))
            (rule "polySimp_mulComm0" (formula "2") (term "0,0"))
            (rule "polySimp_addAssoc" (formula "2") (term "0"))
            (rule "polySimp_addComm0" (formula "2") (term "0,0"))
            (rule "polySimp_pullOutFactor2b" (formula "2") (term "0"))
            (rule "add_literals" (formula "2") (term "1,1,0"))
            (rule "times_zero_1" (formula "2") (term "1,0"))
            (rule "add_zero_right" (formula "2") (term "0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "2"))
            (rule "mul_literals" (formula "2") (term "1"))
            (rule "div_axiom" (formula "7") (term "0") (inst "quotient=quotient_1"))
            (rule "polySimp_mulComm0" (formula "1") (term "1,1,1,1,1"))
            (rule "polySimp_mulComm0" (formula "1") (term "0,2,1,1"))
            (rule "polySimp_mulComm0" (formula "1") (term "0,1,1,1"))
            (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,1"))
            (rule "polySimp_addComm1" (formula "1") (term "1,2,1,1"))
            (rule "polySimp_addComm1" (formula "1") (term "1,1,1,1"))
            (rule "inEqSimp_contradEq7" (formula "1") (term "0") (ifseqformula "6"))
            (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
            (rule "add_zero_right" (formula "1") (term "0,0,0"))
            (rule "leq_literals" (formula "1") (term "0,0"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "andLeft" (formula "1"))
            (rule "andLeft" (formula "1"))
            (rule "applyEq" (formula "9") (term "0,0,1") (ifseqformula "1"))
            (rule "polySimp_mulComm0" (formula "9") (term "0,1"))
            (rule "applyEqRigid" (formula "9") (term "0,0,0") (ifseqformula "1"))
            (rule "polySimp_mulComm0" (formula "9") (term "0,0"))
            (rule "replace_known_left" (formula "9") (term "0") (ifseqformula "2"))
            (builtin "One Step Simplification" (formula "9"))
            (rule "replace_known_right" (formula "3") (term "1") (ifseqformula "9"))
            (rule "inEqSimp_geqRight" (formula "9"))
            (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "1") (term "0,1,0,0"))
            (rule "mul_literals" (formula "1") (term "0,0,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0,0"))
            (rule "polySimp_elimOne" (formula "1") (term "1,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
            (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
            (rule "add_literals" (formula "1") (term "0,0,0,0"))
            (rule "add_zero_left" (formula "1") (term "0,0,0"))
            (rule "applyEqRigid" (formula "10") (term "0") (ifseqformula "2"))
            (rule "eqSymm" (formula "10"))
            (rule "polySimp_homoEq" (formula "10"))
            (rule "polySimp_mulLiterals" (formula "10") (term "1,0"))
            (rule "polySimp_elimOne" (formula "10") (term "1,0"))
            (rule "polySimp_sepPosMonomial" (formula "10"))
            (rule "inEqSimp_sepPosMonomial0" (formula "1"))
            (rule "polySimp_mulComm0" (formula "1") (term "1"))
            (rule "polySimp_rightDist" (formula "1") (term "1"))
            (rule "polySimp_mulComm0" (formula "1") (term "0,1"))
            (rule "inEqSimp_subsumption1" (formula "4") (term "0") (ifseqformula "9"))
            (rule "leq_literals" (formula "4") (term "0,0"))
            (builtin "One Step Simplification" (formula "4"))
            (rule "closeFalse" (formula "4"))
         )
         (branch "Case 2"
            (rule "notLeft" (formula "3"))
            (rule "eqSymm" (formula "1"))
            (rule "close" (formula "6") (ifseqformula "1"))
         )
      )
      (branch "CUT: f_divDenom >= 0 FALSE"
         (rule "times_minus_one_1" (formula "5") (term "0,1") (userinteraction))
         (rule "div_axiom" (formula "5") (term "1") (inst "quotient=quotient_0") (userinteraction))
         (rule "notLeft" (formula "2") (userinteraction))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "2") (userinteraction))
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "3")))
         (rule "andLeft" (formula "1"))
         (rule "andLeft" (formula "1"))
         (rule "div_unique2" (formula "8") (term "1") (inst "a=a") (inst "cnom=cnom") (inst "x=x") (inst "y=y") (userinteraction))
         (rule "instAll" (formula "9") (term "0,1") (ifseqformula "1") (userinteraction))
         (rule "hide_left" (formula "2") (userinteraction))
         (rule "instAll" (formula "9") (term "1,1") (ifseqformula "1") (userinteraction))
         (rule "hide_left" (formula "2") (userinteraction))
         (rule "instAll" (formula "9") (term "0") (ifseqformula "1") (userinteraction))
         (rule "hide_left" (formula "2") (userinteraction))
         (rule "instAll" (formula "9") (term "1") (ifseqformula "1") (userinteraction))
         (rule "hide_left" (formula "2") (userinteraction))
         (rule "impLeft" (formula "1") (userinteraction))
         (branch "Case 1"
            (rule "hide_right" (formula "9") (userinteraction))
            (rule "polySimp_elimNeg" (formula "2") (term "1"))
            (rule "polySimp_elimNeg" (formula "3") (term "1,0,1"))
            (rule "polySimp_elimNeg" (formula "4") (term "0,0,0,1,0,0"))
            (rule "polySimp_elimNeg" (formula "4") (term "1,1,0,0"))
            (rule "polySimp_elimNeg" (formula "1") (term "0,0"))
            (rule "polySimp_elimNeg" (formula "4") (term "1,1,0,0,0"))
            (rule "polySimp_elimNeg" (formula "4") (term "0,0,0,1"))
            (rule "polySimp_elimNeg" (formula "4") (term "1,0,1,1,0"))
            (rule "polySimp_elimNeg" (formula "4") (term "0,0,1,0,0,0"))
            (rule "polySimp_elimNeg" (formula "4") (term "0,0,1,0"))
            (rule "polySimp_elimNeg" (formula "4") (term "1,0,1,1"))
            (rule "polySimp_elimNeg" (formula "4") (term "1,0,0,0,1,0,0,0"))
            (rule "polySimp_elimNeg" (formula "4") (term "0,0,0,0,1,0,0,0"))
            (rule "polySimp_elimNeg" (formula "4") (term "1,0,0,0,1,0"))
            (rule "polySimp_elimNeg" (formula "4") (term "0,0,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "3") (term "0"))
            (rule "polySimp_mulComm0" (formula "2") (term "0"))
            (rule "polySimp_mulComm1" (formula "4") (term "0,1,0,0,0"))
            (rule "polySimp_mulComm1" (formula "4") (term "0,1,0"))
            (rule "polySimp_addComm1" (formula "3") (term "1"))
            (rule "polySimp_addComm1" (formula "4") (term "1,1,0"))
            (rule "polySimp_addComm1" (formula "4") (term "1,1"))
            (rule "inEqSimp_geqRight" (formula "6"))
            (rule "times_zero_1" (formula "1") (term "1,0,0"))
            (rule "add_zero_right" (formula "1") (term "0,0"))
            (rule "inEqSimp_geqRight" (formula "7"))
            (rule "times_zero_1" (formula "1") (term "1,0,0"))
            (rule "add_zero_right" (formula "1") (term "0,0"))
            (rule "inEqSimp_ltToLeq" (formula "6") (term "0,0,0,0"))
            (rule "times_zero_1" (formula "6") (term "1,0,0,0,0,0,0"))
            (rule "add_zero_right" (formula "6") (term "0,0,0,0,0,0"))
            (rule "replace_known_left" (formula "6") (term "0,0,0,0") (ifseqformula "2"))
            (builtin "One Step Simplification" (formula "6"))
            (rule "inEqSimp_homoInEq1" (formula "6") (term "1,0"))
            (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1,0"))
            (rule "polySimp_elimOne" (formula "6") (term "1,0,1,0"))
            (rule "inEqSimp_homoInEq0" (formula "6") (term "0,0,0"))
            (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0,0,0"))
            (rule "polySimp_elimOne" (formula "6") (term "1,0,0,0,0"))
            (rule "applyEqRigid" (formula "6") (term "0,0,1,0,0") (ifseqformula "3"))
            (rule "polySimp_mulComm0" (formula "6") (term "0,1,0,0"))
            (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
            (builtin "One Step Simplification" (formula "6"))
            (rule "applyEqRigid" (formula "6") (term "0,0,1") (ifseqformula "3"))
            (rule "polySimp_mulComm0" (formula "6") (term "0,1"))
            (rule "replace_known_left" (formula "6") (term "1") (ifseqformula "5"))
            (builtin "One Step Simplification" (formula "6"))
            (rule "inEqSimp_sepPosMonomial0" (formula "2"))
            (rule "mul_literals" (formula "2") (term "1"))
            (rule "inEqSimp_sepPosMonomial0" (formula "1"))
            (rule "mul_literals" (formula "1") (term "1"))
            (rule "inEqSimp_sepPosMonomial1" (formula "6") (term "0"))
            (rule "polySimp_mulLiterals" (formula "6") (term "1,0"))
            (rule "polySimp_elimOne" (formula "6") (term "1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "1"))
            (rule "polySimp_mulComm0" (formula "6") (term "1,1"))
            (rule "polySimp_rightDist" (formula "6") (term "1,1"))
            (rule "polySimp_mulLiterals" (formula "6") (term "1,1,1"))
            (rule "polySimp_elimOne" (formula "6") (term "1,1,1"))
            (rule "polySimp_rightDist" (formula "6") (term "0,1,1"))
            (rule "mul_literals" (formula "6") (term "0,0,1,1"))
            (rule "inEqSimp_contradEq3" (formula "8") (ifseqformula "1"))
            (rule "times_zero_1" (formula "8") (term "1,0,0"))
            (rule "add_zero_right" (formula "8") (term "0,0"))
            (rule "qeq_literals" (formula "8") (term "0"))
            (builtin "One Step Simplification" (formula "8"))
            (rule "false_right" (formula "8"))
            (rule "inEqSimp_contradEq3" (formula "7") (ifseqformula "2"))
            (rule "times_zero_1" (formula "7") (term "1,0,0"))
            (rule "add_zero_right" (formula "7") (term "0,0"))
            (rule "qeq_literals" (formula "7") (term "0"))
            (builtin "One Step Simplification" (formula "7"))
            (rule "false_right" (formula "7"))
            (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "4"))
            (rule "polySimp_rightDist" (formula "5") (term "0,0"))
            (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0"))
            (rule "polySimp_pullOutFactor0b" (formula "5") (term "0"))
            (rule "add_literals" (formula "5") (term "1,1,0"))
            (rule "times_zero_1" (formula "5") (term "1,0"))
            (rule "add_zero_right" (formula "5") (term "0"))
            (rule "polySimp_rightDist" (formula "5") (term "0"))
            (rule "mul_literals" (formula "5") (term "0,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "5"))
            (rule "polySimp_mulLiterals" (formula "5") (term "0"))
            (rule "polySimp_elimOne" (formula "5") (term "0"))
            (rule "div_axiom" (formula "3") (term "0") (inst "quotient=quotient_1"))
            (rule "polySimp_mulComm0" (formula "3") (term "0,1,0,1"))
            (rule "polySimp_mulComm0" (formula "3") (term "0,1,1,1"))
            (rule "polySimp_mulComm0" (formula "3") (term "1,1,1,1,1"))
            (rule "polySimp_mulComm0" (formula "3") (term "0,2,1,1"))
            (rule "polySimp_addComm1" (formula "3") (term "1,2,1,1"))
            (rule "polySimp_addComm1" (formula "3") (term "1,1,1,1"))
            (rule "applyEqRigid" (formula "3") (term "0,0,0,1") (ifseqformula "4"))
            (rule "inEqSimp_contradEq3" (formula "3") (term "0") (ifseqformula "2"))
            (rule "times_zero_1" (formula "3") (term "1,0,0,0"))
            (rule "add_zero_right" (formula "3") (term "0,0,0"))
            (rule "qeq_literals" (formula "3") (term "0,0"))
            (builtin "One Step Simplification" (formula "3"))
            (rule "andLeft" (formula "3"))
            (rule "andLeft" (formula "3"))
            (rule "applyEq" (formula "7") (term "1,0") (ifseqformula "3"))
            (rule "applyEqRigid" (formula "7") (term "1,0") (ifseqformula "3"))
            (rule "replace_known_left" (formula "5") (term "2") (ifseqformula "7"))
            (rule "applyEqRigid" (formula "6") (term "1") (ifseqformula "3"))
            (rule "inEqSimp_contradInEq0" (formula "5") (term "0") (ifseqformula "2"))
            (rule "qeq_literals" (formula "5") (term "0,0"))
            (builtin "One Step Simplification" (formula "5"))
            (rule "true_left" (formula "5"))
            (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "4"))
            (rule "polySimp_rightDist" (formula "6") (term "0,0"))
            (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0"))
            (rule "polySimp_pullOutFactor0b" (formula "6") (term "0"))
            (rule "add_literals" (formula "6") (term "1,1,0"))
            (rule "times_zero_1" (formula "6") (term "1,0"))
            (rule "add_zero_right" (formula "6") (term "0"))
            (rule "polySimp_rightDist" (formula "6") (term "0"))
            (rule "mul_literals" (formula "6") (term "0,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "6"))
            (rule "polySimp_mulLiterals" (formula "6") (term "0"))
            (rule "polySimp_elimOne" (formula "6") (term "0"))
            (rule "div_axiom" (formula "7") (term "0,0,0") (inst "quotient=quotient_2"))
            (rule "polySimp_mulAssoc" (formula "1") (term "0,2,1,1"))
            (rule "polySimp_mulComm0" (formula "1") (term "0,0,2,1,1"))
            (rule "polySimp_mulAssoc" (formula "1") (term "0,1,1,1"))
            (rule "polySimp_mulComm0" (formula "1") (term "0,0,1,1,1"))
            (rule "polySimp_mulAssoc" (formula "1") (term "0,1,0,1"))
            (rule "polySimp_mulComm0" (formula "1") (term "0,0,1,0,1"))
            (rule "polySimp_mulAssoc" (formula "1") (term "1,1,1,1,1"))
            (rule "polySimp_mulComm0" (formula "1") (term "0,1,1,1,1,1"))
            (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,1,1"))
            (rule "polySimp_elimOne" (formula "1") (term "1,1,1,1,1"))
            (rule "polySimp_addComm1" (formula "1") (term "1,2,1,1"))
            (rule "polySimp_addComm1" (formula "1") (term "1,1,1,1"))
            (rule "inEqSimp_homoInEq0" (formula "1") (term "1,0,1"))
            (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0,1"))
            (rule "polySimp_elimOne" (formula "1") (term "1,0,1,0,1"))
            (rule "inEqSimp_homoInEq1" (formula "1") (term "2,1,1"))
            (rule "polySimp_mulLiterals" (formula "1") (term "1,0,2,1,1"))
            (rule "polySimp_elimOne" (formula "1") (term "1,0,2,1,1"))
            (rule "inEqSimp_homoInEq1" (formula "1") (term "1,1,1"))
            (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,1,1"))
            (rule "polySimp_elimOne" (formula "1") (term "1,0,1,1,1"))
            (rule "polySimp_invertEq" (formula "1") (term "0"))
            (rule "polySimp_mulLiterals" (formula "1") (term "0,0"))
            (rule "times_zero_2" (formula "1") (term "1,0"))
            (rule "polySimp_elimOne" (formula "1") (term "0,0"))
            (rule "inEqSimp_invertInEq1" (formula "1") (term "0,1,1"))
            (rule "polySimp_mulLiterals" (formula "1") (term "0,0,1,1"))
            (rule "times_zero_2" (formula "1") (term "1,0,1,1"))
            (rule "polySimp_elimOne" (formula "1") (term "0,0,1,1"))
            (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,1"))
            (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,1"))
            (rule "polySimp_elimOne" (formula "1") (term "1,1,0,1"))
            (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "2,1,1"))
            (rule "polySimp_mulComm0" (formula "1") (term "1,2,1,1"))
            (rule "polySimp_rightDist" (formula "1") (term "1,2,1,1"))
            (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,1,1"))
            (rule "polySimp_elimOne" (formula "1") (term "1,1,2,1,1"))
            (rule "polySimp_rightDist" (formula "1") (term "0,1,2,1,1"))
            (rule "mul_literals" (formula "1") (term "0,0,1,2,1,1"))
            (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,2,1,1"))
            (rule "polySimp_elimOne" (formula "1") (term "1,0,1,2,1,1"))
            (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1,1,1"))
            (rule "polySimp_mulComm0" (formula "1") (term "1,1,1,1"))
            (rule "polySimp_rightDist" (formula "1") (term "1,1,1,1"))
            (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,1,1"))
            (rule "polySimp_elimOne" (formula "1") (term "1,1,1,1,1"))
            (rule "polySimp_rightDist" (formula "1") (term "0,1,1,1,1"))
            (rule "mul_literals" (formula "1") (term "0,0,1,1,1,1"))
            (rule "inEqSimp_contradEq3" (formula "1") (term "0") (ifseqformula "3"))
            (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
            (rule "add_zero_right" (formula "1") (term "0,0,0"))
            (rule "qeq_literals" (formula "1") (term "0,0"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "andLeft" (formula "1"))
            (rule "andLeft" (formula "1"))
            (rule "applyEq" (formula "10") (term "0,0,1") (ifseqformula "1"))
            (rule "polySimp_mulComm0" (formula "10") (term "0,1"))
            (rule "applyEq" (formula "10") (term "0,0,0") (ifseqformula "1"))
            (rule "polySimp_mulComm0" (formula "10") (term "0,0"))
            (rule "replace_known_left" (formula "10") (term "0") (ifseqformula "2"))
            (builtin "One Step Simplification" (formula "10"))
            (rule "replace_known_right" (formula "3") (term "1") (ifseqformula "10"))
            (rule "inEqSimp_leqRight" (formula "10"))
            (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "1") (term "0,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0,0"))
            (rule "mul_literals" (formula "1") (term "0,0,1,0,0"))
            (rule "polySimp_elimOne" (formula "1") (term "1,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
            (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
            (rule "add_literals" (formula "1") (term "0,0,0,0"))
            (rule "add_zero_left" (formula "1") (term "0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "1"))
            (rule "polySimp_mulComm0" (formula "1") (term "1"))
            (rule "polySimp_rightDist" (formula "1") (term "1"))
            (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
            (rule "polySimp_elimOne" (formula "1") (term "1,1"))
            (rule "polySimp_mulComm0" (formula "1") (term "0,1"))
            (rule "inEqSimp_subsumption0" (formula "4") (term "0") (ifseqformula "6"))
            (rule "leq_literals" (formula "4") (term "0,0"))
            (builtin "One Step Simplification" (formula "4"))
            (rule "closeFalse" (formula "4"))
         )
         (branch "Case 2"
            (rule "close" (formula "9") (ifseqformula "1"))
         )
      )
   )
)
)
}
