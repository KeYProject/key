\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Wed Apr 12 13:21:27 CEST 2023
[Labels]UseOriginLabels=true
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=JavaCard-JavaCard\\:on, Strings-Strings\\:on, assertions-assertions\\:on, bigint-bigint\\:on, floatRules-floatRules\\:strictfpOnly, initialisation-initialisation\\:disableStaticInitialisation, intRules-intRules\\:arithmeticSemanticsIgnoringOF, integerSimplificationRules-integerSimplificationRules\\:full, javaLoopTreatment-javaLoopTreatment\\:efficient, mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off, methodExpansion-methodExpansion\\:modularOnly, modelFields-modelFields\\:showSatisfiability, moreSeqRules-moreSeqRules\\:off, permissions-permissions\\:off, programRules-programRules\\:Java, reach-reach\\:on, runtimeExceptions-runtimeExceptions\\:ban, sequences-sequences\\:on, wdChecks-wdChecks\\:off, wdOperator-wdOperator\\:L
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_NONE
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_OFF
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_RESTRICTED
[Strategy]MaximumNumberOfAutomaticApplications=4000
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[Strategy]Timeout=-1
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_ON
[SMTSettings]useUninterpretedMultiplication=true
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[SMTSettings]maxGenericSorts=2
[StrategyProperty]OSS_OPTIONS_KEY=OSS_ON
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\proofObligation {
	"name": "jdivAddMultDenom",
	"class": "de.uka.ilkd.key.taclettranslation.lemma.TacletProofObligationInput",
 }

\proof {
(keyLog "0" (keyUser "Julian" ) (keyVersion "80a871ca3bac8bb405ecc216fcb6fa9ef6f8a395"))

(autoModeTime "0")

(branch "dummy ID"
(rule "allRight" (formula "1") (newnames "v_N,v_D,v_A") (inst "sk=v_N_0") (userinteraction))
(rule "allRight" (formula "1") (inst "sk=v_D_0") (userinteraction))
(rule "allRight" (formula "1") (inst "sk=v_A_0") (userinteraction))
(rule "impRight" (formula "1") (userinteraction))
(rule "notLeft" (formula "1") (userinteraction))
(rule "cut" (inst "cutFormula=v_N_0 = mul(jdiv(v_N_0, v_D_0), v_D_0)") (userinteraction))
(branch "CUT: v_N_0 = jdiv(v_N_0, v_D_0) * v_D_0 TRUE"
   (rule "replace_known_left" (formula "3") (term "0,1") (ifseqformula "1") (userinteraction))
   (rule "replace_known_left" (formula "3") (term "0,0,0,2,1") (ifseqformula "1") (userinteraction))
   (rule "replace_known_left" (formula "3") (term "0,0,0,0,2,2,1") (ifseqformula "1") (userinteraction))
    (builtin "One Step Simplification" (formula "3"))
   (rule "applyEqRigid" (formula "3") (term "0,0,1") (ifseqformula "1") (userinteraction))
   (rule "jdivMultDenom2" (formula "3") (term "0,1") (userinteraction))
   (branch
      (rule "applyEqRigid" (formula "3") (term "0,0,0") (ifseqformula "1") (userinteraction))
      (rule "cut" (inst "cutFormula=  add(mul(jdiv(v_N_0, v_D_0), v_D_0),
      mul(v_A_0, v_D_0))
= mul(add(jdiv(v_N_0, v_D_0), v_A_0), v_D_0)") (userinteraction))
      (branch "CUT: jdiv(v_N_0, v_D_0) * v_D_0 + v_A_0 * v_D_0 = (jdiv(v_N_0, v_D_0) + v_A_0) * v_D_0 TRUE"
         (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "1") (userinteraction))
         (rule "jdivMultDenom2" (formula "4") (term "0") (userinteraction))
         (branch
             (builtin "One Step Simplification" (formula "4"))
            (rule "closeTrue" (formula "4"))
         )
         (branch
            (rule "notRight" (formula "4"))
            (rule "close" (formula "4") (ifseqformula "1"))
         )
      )
      (branch "CUT: jdiv(v_N_0, v_D_0) * v_D_0 + v_A_0 * v_D_0 = (jdiv(v_N_0, v_D_0) + v_A_0) * v_D_0 FALSE"
         (rule "polySimp_mulComm0" (formula "2") (term "1"))
         (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
         (rule "polySimp_addComm0" (formula "2") (term "1,1"))
         (rule "polySimp_addComm0" (formula "2") (term "0"))
         (rule "polySimp_rightDist" (formula "2") (term "1"))
          (builtin "One Step Simplification" (formula "2"))
         (rule "closeTrue" (formula "2"))
      )
   )
   (branch
      (rule "notRight" (formula "3"))
      (rule "close" (formula "3") (ifseqformula "1"))
   )
)
(branch "CUT: v_N_0 = jdiv(v_N_0, v_D_0) * v_D_0 FALSE"
   (rule "replace_known_right" (formula "3") (term "0,1") (ifseqformula "1") (userinteraction))
   (rule "replace_known_right" (formula "3") (term "0,0,0,2,1") (ifseqformula "1") (userinteraction))
   (rule "replace_known_right" (formula "3") (term "0,0,0,0,2,2,1") (ifseqformula "1") (userinteraction))
    (builtin "One Step Simplification" (formula "3"))
   (rule "cut" (inst "cutFormula=    geq(v_N_0, Z(0(#)))
<-> geq(add(v_N_0, mul(v_D_0, v_A_0)), Z(0(#)))") (userinteraction))
   (branch "CUT: v_N_0 >= 0 <-> v_N_0 + v_D_0 * v_A_0 >= 0 TRUE"
      (rule "replace_known_left" (formula "4") (term "0,1") (ifseqformula "1") (userinteraction))
       (builtin "One Step Simplification" (formula "4"))
      (rule "equiv_left" (formula "1") (userinteraction))
      (branch
         (rule "cut" (inst "cutFormula=gt(v_D_0, Z(0(#)))") (userinteraction))
         (branch "CUT: v_D_0 > 0 TRUE"
            (rule "jdiv_uniquePosPos" (formula "6") (term "0") (inst "y=y") (inst "x=x") (inst "cnom=cnom") (inst "a=a") (userinteraction))
            (rule "instAll" (formula "7") (term "0,0") (ifseqformula "1") (userinteraction))
            (rule "instAll" (formula "8") (term "1,0") (ifseqformula "1") (userinteraction))
            (rule "instAll" (formula "9") (term "0") (ifseqformula "1") (userinteraction))
            (rule "instAll" (formula "10") (term "1") (ifseqformula "1") (userinteraction))
            (rule "impLeft" (formula "1") (userinteraction))
            (branch
               (rule "andRight" (formula "8") (userinteraction))
               (branch
                  (rule "andRight" (formula "8") (userinteraction))
                  (branch
                     (rule "mul_comm" (formula "8") (term "1,0,0,0,0") (userinteraction))
                     (rule "replace_known_left" (formula "8") (term "0,0,0") (ifseqformula "7") (userinteraction))
                     (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "5") (userinteraction))
                      (builtin "One Step Simplification" (formula "8"))
                     (rule "andRight" (formula "8") (userinteraction))
                     (branch
                        (rule "jdiv_axiom_inline" (formula "8") (term "0,0") (userinteraction))
                        (rule "mul_comm" (formula "8") (term "1,0,0,0,0") (userinteraction))
                        (rule "replace_known_left" (formula "8") (term "0,0,0") (ifseqformula "7") (userinteraction))
                         (builtin "One Step Simplification" (formula "8"))
                        (rule "div_axiom" (formula "8") (term "0,0") (inst "quotient=quotient_0") (userinteraction))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "11") (userinteraction))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "andLeft" (formula "1"))
                        (rule "andLeft" (formula "1"))
                        (rule "polySimp_mulComm0" (formula "2") (term "0"))
                        (rule "polySimp_mulComm0" (formula "2") (term "1,1"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "11") (term "1,1"))
                        (rule "inEqSimp_leqRight" (formula "11"))
                        (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                        (rule "inEqSimp_homoInEq0" (formula "3"))
                        (rule "polySimp_addComm1" (formula "3") (term "0"))
                        (rule "applyEqRigid" (formula "1") (term "0,1,0") (ifseqformula "2"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                        (rule "polySimp_addComm1" (formula "1") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                        (rule "polySimp_mulComm0" (formula "3") (term "1"))
                        (rule "polySimp_rightDist" (formula "3") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                        (rule "polySimp_mulComm0" (formula "3") (term "0,1"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                        (rule "polySimp_elimOne" (formula "1") (term "0"))
                        (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "1"))
                        (rule "andLeft" (formula "3"))
                        (rule "inEqSimp_homoInEq1" (formula "3"))
                        (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "3") (term "0,1,0"))
                        (rule "mul_literals" (formula "3") (term "0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,0"))
                        (rule "polySimp_elimOne" (formula "3") (term "1,0,1,0"))
                        (rule "polySimp_addAssoc" (formula "3") (term "0"))
                        (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                        (rule "add_literals" (formula "3") (term "1,1,0"))
                        (rule "times_zero_1" (formula "3") (term "1,0"))
                        (rule "add_zero_right" (formula "3") (term "0"))
                        (rule "polySimp_addAssoc" (formula "3") (term "0"))
                        (rule "polySimp_addComm0" (formula "3") (term "0,0"))
                        (rule "polySimp_pullOutFactor2b" (formula "3") (term "0"))
                        (rule "add_literals" (formula "3") (term "1,1,0"))
                        (rule "times_zero_1" (formula "3") (term "1,0"))
                        (rule "add_zero_right" (formula "3") (term "0"))
                        (rule "leq_literals" (formula "3"))
                        (rule "closeFalse" (formula "3"))
                     )
                     (branch
                        (rule "jdiv_axiom_inline" (formula "8") (term "0,0,0") (userinteraction))
                        (rule "replace_known_left" (formula "8") (term "0,0,0,0") (ifseqformula "6") (userinteraction))
                         (builtin "One Step Simplification" (formula "8"))
                        (rule "div_axiom" (formula "8") (term "0,0,0") (inst "quotient=quotient_0") (userinteraction))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "11") (userinteraction))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "andLeft" (formula "1"))
                        (rule "andLeft" (formula "1"))
                        (rule "polySimp_mulComm0" (formula "11") (term "0"))
                        (rule "polySimp_mulComm0" (formula "11") (term "1,1"))
                        (rule "polySimp_mulComm0" (formula "2") (term "0"))
                        (rule "polySimp_addComm0" (formula "11") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "11") (term "0"))
                        (rule "inEqSimp_leqRight" (formula "11"))
                        (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0"))
                        (rule "polySimp_pullOutFactor2b" (formula "1") (term "0,0"))
                        (rule "add_literals" (formula "1") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "1") (term "1,0,0"))
                        (rule "add_zero_right" (formula "1") (term "0,0"))
                        (rule "applyEqRigid" (formula "1") (term "0,1,0") (ifseqformula "2"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1"))
                        (rule "polySimp_rightDist" (formula "1") (term "1"))
                        (rule "mul_literals" (formula "1") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                        (rule "inEqSimp_contradInEq1" (formula "3") (ifseqformula "1"))
                        (rule "andLeft" (formula "3"))
                        (rule "inEqSimp_homoInEq1" (formula "3"))
                        (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                        (rule "add_literals" (formula "3") (term "1,1,0"))
                        (rule "times_zero_1" (formula "3") (term "1,0"))
                        (rule "add_zero_right" (formula "3") (term "0"))
                        (rule "leq_literals" (formula "3"))
                        (rule "closeFalse" (formula "3"))
                     )
                  )
                  (branch
                     (rule "jdiv_axiom_inline" (formula "8") (term "0,0,0") (userinteraction))
                     (rule "mul_comm" (formula "8") (term "1,0,0,0,0,0") (userinteraction))
                     (rule "replace_known_left" (formula "8") (term "0,0,0,0") (ifseqformula "7") (userinteraction))
                      (builtin "One Step Simplification" (formula "8"))
                     (rule "div_axiom" (formula "8") (term "0,0,0") (inst "quotient=quotient_0") (userinteraction))
                     (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "11") (userinteraction))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "andLeft" (formula "1"))
                     (rule "andLeft" (formula "1"))
                     (rule "cut_direct" (formula "3") (term "0") (userinteraction))
                     (branch "CUT: v_D_0 >= 0 TRUE"
                         (builtin "One Step Simplification" (formula "4"))
                        (rule "polySimp_mulComm0" (formula "4") (term "0"))
                        (rule "polySimp_mulComm0" (formula "4") (term "1,1,0,1"))
                        (rule "polySimp_mulComm0" (formula "4") (term "1,1"))
                        (rule "polySimp_mulComm0" (formula "12") (term "0"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "12") (term "1,1"))
                        (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0"))
                        (rule "polySimp_addComm0" (formula "12") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "12") (term "0"))
                        (rule "polySimp_elimOne" (formula "12") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "4") (term "0,1"))
                        (rule "polySimp_addComm1" (formula "4") (term "1"))
                        (rule "polySimp_addComm1" (formula "4") (term "0,1"))
                        (rule "inEqSimp_gtRight" (formula "12"))
                        (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                        (rule "polySimp_mulComm0" (formula "1") (term "0,0,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0"))
                        (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                        (rule "polySimp_addComm0" (formula "1") (term "0,0,0"))
                        (rule "inEqSimp_homoInEq1" (formula "5"))
                        (rule "polySimp_addComm1" (formula "5") (term "0"))
                        (rule "applyEqRigid" (formula "1") (term "0,1,0") (ifseqformula "2"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                        (rule "polySimp_addComm1" (formula "1") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                        (rule "polySimp_mulComm0" (formula "5") (term "1"))
                        (rule "polySimp_rightDist" (formula "5") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "5") (term "0,1"))
                        (rule "polySimp_rightDist" (formula "5") (term "0,0,1"))
                        (rule "mul_literals" (formula "5") (term "0,0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,1"))
                        (rule "polySimp_elimOne" (formula "5") (term "1,0,0,1"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                        (rule "polySimp_elimOne" (formula "1") (term "0"))
                        (rule "inEqSimp_contradInEq1" (formula "5") (ifseqformula "1"))
                        (rule "andLeft" (formula "5"))
                        (rule "inEqSimp_homoInEq1" (formula "5"))
                        (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "5") (term "0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1,0"))
                        (rule "polySimp_elimOne" (formula "5") (term "1,0,1,0"))
                        (rule "polySimp_rightDist" (formula "5") (term "0,0,1,0"))
                        (rule "mul_literals" (formula "5") (term "0,0,0,1,0"))
                        (rule "polySimp_addAssoc" (formula "5") (term "0"))
                        (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "5") (term "0"))
                        (rule "add_literals" (formula "5") (term "1,1,0"))
                        (rule "times_zero_1" (formula "5") (term "1,0"))
                        (rule "add_zero_right" (formula "5") (term "0"))
                        (rule "polySimp_addAssoc" (formula "5") (term "0"))
                        (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                        (rule "polySimp_pullOutFactor2b" (formula "5") (term "0"))
                        (rule "add_literals" (formula "5") (term "1,1,0"))
                        (rule "times_zero_1" (formula "5") (term "1,0"))
                        (rule "add_zero_right" (formula "5") (term "0"))
                        (rule "polySimp_addAssoc" (formula "5") (term "0"))
                        (rule "polySimp_addComm0" (formula "5") (term "0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "5") (term "0"))
                        (rule "add_literals" (formula "5") (term "1,1,0"))
                        (rule "times_zero_1" (formula "5") (term "1,0"))
                        (rule "add_zero_right" (formula "5") (term "0"))
                        (rule "leq_literals" (formula "5"))
                        (rule "closeFalse" (formula "5"))
                     )
                     (branch "CUT: v_D_0 >= 0 FALSE"
                        (rule "inEqSimp_geqRight" (formula "11"))
                        (rule "times_zero_1" (formula "1") (term "1,0,0"))
                        (rule "add_zero_right" (formula "1") (term "0,0"))
                        (rule "inEqSimp_gtToGeq" (formula "9"))
                        (rule "times_zero_1" (formula "9") (term "1,0,0"))
                        (rule "add_zero_right" (formula "9") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                        (rule "mul_literals" (formula "1") (term "1"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                        (rule "mul_literals" (formula "9") (term "1"))
                        (rule "inEqSimp_contradInEq0" (formula "9") (ifseqformula "1"))
                        (rule "qeq_literals" (formula "9") (term "0"))
                         (builtin "One Step Simplification" (formula "9"))
                        (rule "closeFalse" (formula "9"))
                     )
                  )
               )
               (branch
                  (rule "jdiv_axiom_inline" (formula "8") (term "0,0,0,0") (userinteraction))
                  (rule "replace_known_left" (formula "8") (term "0,0,0,0,0") (ifseqformula "6") (userinteraction))
                   (builtin "One Step Simplification" (formula "8"))
                  (rule "div_axiom" (formula "8") (term "0,0,0,0") (inst "quotient=quotient_0") (userinteraction))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "11") (userinteraction))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "andLeft" (formula "1"))
                  (rule "andLeft" (formula "1"))
                  (rule "cut_direct" (formula "3") (term "0") (userinteraction))
                  (branch "CUT: v_D_0 >= 0 TRUE"
                      (builtin "One Step Simplification" (formula "4"))
                     (rule "polySimp_mulComm0" (formula "12") (term "0"))
                     (rule "polySimp_mulComm0" (formula "4") (term "0"))
                     (rule "polySimp_mulComm0" (formula "4") (term "1,1"))
                     (rule "polySimp_mulComm0" (formula "12") (term "1,1"))
                     (rule "polySimp_addComm1" (formula "12") (term "1,0"))
                     (rule "polySimp_addComm1" (formula "4") (term "1"))
                     (rule "polySimp_addComm0" (formula "12") (term "0,1,0"))
                     (rule "polySimp_addComm1" (formula "12") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "12") (term "0"))
                     (rule "polySimp_rightDist" (formula "12") (term "0,0"))
                     (rule "polySimp_elimOne" (formula "12") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "12") (term "1,0,0"))
                     (rule "inEqSimp_gtRight" (formula "12"))
                     (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                     (rule "polySimp_mulComm0" (formula "1") (term "0,0,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                     (rule "polySimp_pullOutFactor2b" (formula "1") (term "0,0"))
                     (rule "add_literals" (formula "1") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "1") (term "1,0,0"))
                     (rule "add_zero_right" (formula "1") (term "0,0"))
                     (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                     (rule "applyEqRigid" (formula "1") (term "0,1,0") (ifseqformula "2"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1"))
                     (rule "polySimp_rightDist" (formula "1") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                     (rule "polySimp_mulComm0" (formula "1") (term "0,1"))
                     (rule "inEqSimp_contradInEq0" (formula "5") (ifseqformula "1"))
                     (rule "andLeft" (formula "5"))
                     (rule "inEqSimp_homoInEq1" (formula "5"))
                     (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                     (rule "polySimp_mulAssoc" (formula "5") (term "0,1,0"))
                     (rule "polySimp_mulComm0" (formula "5") (term "0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "5") (term "0,1,0"))
                     (rule "polySimp_elimOne" (formula "5") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "5") (term "0"))
                     (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "5") (term "0"))
                     (rule "add_literals" (formula "5") (term "1,1,0"))
                     (rule "times_zero_1" (formula "5") (term "1,0"))
                     (rule "add_zero_right" (formula "5") (term "0"))
                     (rule "polySimp_pullOutFactor2b" (formula "5") (term "0"))
                     (rule "add_literals" (formula "5") (term "1,1,0"))
                     (rule "times_zero_1" (formula "5") (term "1,0"))
                     (rule "add_zero_right" (formula "5") (term "0"))
                     (rule "leq_literals" (formula "5"))
                     (rule "closeFalse" (formula "5"))
                  )
                  (branch "CUT: v_D_0 >= 0 FALSE"
                     (rule "inEqSimp_geqRight" (formula "11"))
                     (rule "times_zero_1" (formula "1") (term "1,0,0"))
                     (rule "add_zero_right" (formula "1") (term "0,0"))
                     (rule "inEqSimp_gtToGeq" (formula "9"))
                     (rule "times_zero_1" (formula "9") (term "1,0,0"))
                     (rule "add_zero_right" (formula "9") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                     (rule "mul_literals" (formula "1") (term "1"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                     (rule "mul_literals" (formula "9") (term "1"))
                     (rule "inEqSimp_contradInEq0" (formula "9") (ifseqformula "1"))
                     (rule "qeq_literals" (formula "9") (term "0"))
                      (builtin "One Step Simplification" (formula "9"))
                     (rule "closeFalse" (formula "9"))
                  )
               )
            )
            (branch
               (rule "close" (formula "11") (ifseqformula "1"))
            )
         )
         (branch "CUT: v_D_0 > 0 FALSE"
            (rule "cut" (inst "cutFormula=lt(v_D_0, Z(0(#)))") (userinteraction))
            (branch "CUT: v_D_0 < 0 TRUE"
               (rule "jdiv_uniquePosNeg" (formula "7") (term "0") (inst "y=y") (inst "x=x") (inst "cnom=cnom") (inst "a=a") (userinteraction))
               (rule "instAll" (formula "8") (term "0,0") (ifseqformula "1") (userinteraction))
               (rule "instAll" (formula "9") (term "1,0") (ifseqformula "1") (userinteraction))
               (rule "instAll" (formula "10") (term "0") (ifseqformula "1") (userinteraction))
               (rule "instAll" (formula "11") (term "1") (ifseqformula "1") (userinteraction))
               (rule "impLeft" (formula "1") (userinteraction))
               (branch
                  (rule "mul_comm" (formula "8") (term "1,0,0,0,0,0,0") (userinteraction))
                  (rule "replace_known_left" (formula "8") (term "0,0,0,0,0") (ifseqformula "7") (userinteraction))
                  (rule "replace_known_left" (formula "8") (term "1,0,0,0,0") (ifseqformula "5") (userinteraction))
                   (builtin "One Step Simplification" (formula "8"))
                  (rule "andRight" (formula "8") (userinteraction))
                  (branch
                     (rule "andRight" (formula "8") (userinteraction))
                     (branch
                        (rule "andRight" (formula "8") (userinteraction))
                        (branch
                           (rule "jdiv_axiom_inline" (formula "8") (term "0,0") (userinteraction))
                           (rule "mul_comm" (formula "8") (term "1,0,0,0,0") (userinteraction))
                           (rule "replace_known_left" (formula "8") (term "0,0,0") (ifseqformula "7") (userinteraction))
                            (builtin "One Step Simplification" (formula "8"))
                           (rule "div_axiom" (formula "8") (term "0,0") (inst "quotient=quotient_0") (userinteraction))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "12") (userinteraction))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "andLeft" (formula "1"))
                           (rule "andLeft" (formula "1"))
                           (rule "polySimp_mulComm0" (formula "11") (term "1,1"))
                           (rule "polySimp_mulComm0" (formula "2") (term "0"))
                           (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "2") (term "1,1"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                           (rule "inEqSimp_leqRight" (formula "11"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                           (rule "inEqSimp_homoInEq0" (formula "3"))
                           (rule "polySimp_addComm1" (formula "3") (term "0"))
                           (rule "applyEqRigid" (formula "1") (term "0,1,0") (ifseqformula "2"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                           (rule "polySimp_addComm1" (formula "1") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                           (rule "polySimp_mulComm0" (formula "3") (term "1"))
                           (rule "polySimp_rightDist" (formula "3") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                           (rule "polySimp_mulComm0" (formula "3") (term "0,1"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                           (rule "polySimp_elimOne" (formula "1") (term "0"))
                           (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "3"))
                           (rule "andLeft" (formula "1"))
                           (rule "inEqSimp_homoInEq1" (formula "1"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "1") (term "0,1,0"))
                           (rule "mul_literals" (formula "1") (term "0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0"))
                           (rule "polySimp_elimOne" (formula "1") (term "1,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0"))
                           (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                           (rule "add_literals" (formula "1") (term "1,1,0"))
                           (rule "times_zero_1" (formula "1") (term "1,0"))
                           (rule "add_zero_right" (formula "1") (term "0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0"))
                           (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                           (rule "polySimp_pullOutFactor2b" (formula "1") (term "0"))
                           (rule "add_literals" (formula "1") (term "1,1,0"))
                           (rule "times_zero_1" (formula "1") (term "1,0"))
                           (rule "add_zero_right" (formula "1") (term "0"))
                           (rule "leq_literals" (formula "1"))
                           (rule "closeFalse" (formula "1"))
                        )
                        (branch
                           (rule "jdiv_axiom_inline" (formula "8") (term "0,0,0") (userinteraction))
                           (rule "replace_known_left" (formula "8") (term "0,0,0,0") (ifseqformula "6") (userinteraction))
                            (builtin "One Step Simplification" (formula "8"))
                           (rule "div_axiom" (formula "8") (term "0,0,0") (inst "quotient=quotient_0") (userinteraction))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "12") (userinteraction))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "andLeft" (formula "1"))
                           (rule "andLeft" (formula "1"))
                           (rule "polySimp_mulComm0" (formula "2") (term "0"))
                           (rule "polySimp_mulComm0" (formula "11") (term "1,1"))
                           (rule "polySimp_mulComm0" (formula "11") (term "0"))
                           (rule "polySimp_addComm0" (formula "11") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "11") (term "0"))
                           (rule "inEqSimp_leqRight" (formula "11"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0"))
                           (rule "polySimp_pullOutFactor2b" (formula "1") (term "0,0"))
                           (rule "add_literals" (formula "1") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "1") (term "1,0,0"))
                           (rule "add_zero_right" (formula "1") (term "0,0"))
                           (rule "applyEqRigid" (formula "1") (term "0,1,0") (ifseqformula "2"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1"))
                           (rule "polySimp_rightDist" (formula "1") (term "1"))
                           (rule "mul_literals" (formula "1") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                           (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "3"))
                           (rule "andLeft" (formula "1"))
                           (rule "inEqSimp_homoInEq1" (formula "1"))
                           (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                           (rule "add_literals" (formula "1") (term "1,1,0"))
                           (rule "times_zero_1" (formula "1") (term "1,0"))
                           (rule "add_zero_right" (formula "1") (term "0"))
                           (rule "leq_literals" (formula "1"))
                           (rule "closeFalse" (formula "1"))
                        )
                     )
                     (branch
                        (rule "sub" (formula "8") (term "0,0") (userinteraction))
                        (rule "neg_literal" (formula "8") (term "1,0,0") (userinteraction))
                        (rule "jdiv_axiom_inline" (formula "8") (term "0,0,0") (userinteraction))
                        (rule "mul_comm" (formula "8") (term "1,0,0,0,0,0") (userinteraction))
                        (rule "replace_known_left" (formula "8") (term "0,0,0,0") (ifseqformula "7") (userinteraction))
                         (builtin "One Step Simplification" (formula "8"))
                        (rule "div_axiom" (formula "8") (term "0,0,0") (inst "quotient=quotient_0") (userinteraction))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "12") (userinteraction))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "andLeft" (formula "1"))
                        (rule "andLeft" (formula "1"))
                        (rule "cut_direct" (formula "3") (term "0") (userinteraction))
                        (branch "CUT: v_D_0 >= 0 TRUE"
                           (rule "inEqSimp_ltToLeq" (formula "9"))
                           (rule "times_zero_1" (formula "9") (term "1,0,0"))
                           (rule "add_zero_right" (formula "9") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "9"))
                           (rule "mul_literals" (formula "9") (term "1"))
                           (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "9"))
                           (rule "qeq_literals" (formula "3") (term "0"))
                            (builtin "One Step Simplification" (formula "3"))
                           (rule "closeFalse" (formula "3"))
                        )
                        (branch "CUT: v_D_0 >= 0 FALSE"
                            (builtin "One Step Simplification" (formula "3"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "12") (term "0"))
                           (rule "polySimp_mulComm0" (formula "3") (term "0"))
                           (rule "polySimp_mulComm0" (formula "3") (term "1,1,0,1"))
                           (rule "polySimp_mulComm0" (formula "12") (term "1,1"))
                           (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0"))
                           (rule "polySimp_addComm0" (formula "12") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "12") (term "0"))
                           (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                           (rule "polySimp_addComm1" (formula "3") (term "1"))
                           (rule "polySimp_addComm1" (formula "3") (term "0,1"))
                           (rule "inEqSimp_gtRight" (formula "12"))
                           (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "1") (term "0,0,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0"))
                           (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "1") (term "0,0,0"))
                           (rule "inEqSimp_homoInEq1" (formula "4"))
                           (rule "polySimp_addComm1" (formula "4") (term "0"))
                           (rule "applyEqRigid" (formula "1") (term "0,1,0") (ifseqformula "2"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                           (rule "polySimp_addComm1" (formula "1") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                           (rule "polySimp_mulComm0" (formula "4") (term "1"))
                           (rule "polySimp_rightDist" (formula "4") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                           (rule "polySimp_rightDist" (formula "4") (term "0,1"))
                           (rule "polySimp_rightDist" (formula "4") (term "0,0,1"))
                           (rule "mul_literals" (formula "4") (term "0,0,0,1"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                           (rule "polySimp_elimOne" (formula "1") (term "0"))
                           (rule "inEqSimp_contradInEq1" (formula "4") (ifseqformula "1"))
                           (rule "andLeft" (formula "4"))
                           (rule "inEqSimp_homoInEq1" (formula "4"))
                           (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "4") (term "0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1,0"))
                           (rule "polySimp_elimOne" (formula "4") (term "1,0,1,0"))
                           (rule "polySimp_rightDist" (formula "4") (term "0,0,1,0"))
                           (rule "mul_literals" (formula "4") (term "0,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,1,0"))
                           (rule "polySimp_elimOne" (formula "4") (term "1,0,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "4") (term "0"))
                           (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                           (rule "add_literals" (formula "4") (term "1,1,0"))
                           (rule "times_zero_1" (formula "4") (term "1,0"))
                           (rule "add_zero_right" (formula "4") (term "0"))
                           (rule "polySimp_addAssoc" (formula "4") (term "0"))
                           (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                           (rule "polySimp_pullOutFactor2b" (formula "4") (term "0"))
                           (rule "add_literals" (formula "4") (term "1,1,0"))
                           (rule "times_zero_1" (formula "4") (term "1,0"))
                           (rule "add_zero_right" (formula "4") (term "0"))
                           (rule "polySimp_addAssoc" (formula "4") (term "0"))
                           (rule "polySimp_addComm0" (formula "4") (term "0,0"))
                           (rule "polySimp_pullOutFactor2b" (formula "4") (term "0"))
                           (rule "add_literals" (formula "4") (term "1,1,0"))
                           (rule "times_zero_1" (formula "4") (term "1,0"))
                           (rule "add_zero_right" (formula "4") (term "0"))
                           (rule "leq_literals" (formula "4"))
                           (rule "closeFalse" (formula "4"))
                        )
                     )
                  )
                  (branch
                     (rule "jdiv_axiom_inline" (formula "8") (term "0,0,0,0") (userinteraction))
                     (rule "replace_known_left" (formula "8") (term "0,0,0,0,0") (ifseqformula "6") (userinteraction))
                      (builtin "One Step Simplification" (formula "8"))
                     (rule "sub" (formula "8") (term "0,0") (userinteraction))
                     (rule "neg_literal" (formula "8") (term "1,0,0") (userinteraction))
                     (rule "div_axiom" (formula "8") (term "0,0,0,0") (inst "quotient=quotient_0") (userinteraction))
                     (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "12") (userinteraction))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "andLeft" (formula "1"))
                     (rule "andLeft" (formula "1"))
                     (rule "cut_direct" (formula "3") (term "0") (userinteraction))
                     (branch "CUT: v_D_0 >= 0 TRUE"
                        (rule "inEqSimp_ltToLeq" (formula "9"))
                        (rule "times_zero_1" (formula "9") (term "1,0,0"))
                        (rule "add_zero_right" (formula "9") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "9"))
                        (rule "mul_literals" (formula "9") (term "1"))
                        (rule "inEqSimp_contradInEq1" (formula "9") (ifseqformula "3"))
                        (rule "qeq_literals" (formula "9") (term "0"))
                         (builtin "One Step Simplification" (formula "9"))
                        (rule "closeFalse" (formula "9"))
                     )
                     (branch "CUT: v_D_0 >= 0 FALSE"
                         (builtin "One Step Simplification" (formula "3"))
                        (rule "polySimp_mulComm0" (formula "3") (term "0"))
                        (rule "polySimp_mulComm0" (formula "12") (term "0"))
                        (rule "polySimp_mulComm0" (formula "12") (term "1,1"))
                        (rule "polySimp_addComm1" (formula "3") (term "1"))
                        (rule "polySimp_addComm1" (formula "12") (term "1,0"))
                        (rule "polySimp_addComm0" (formula "12") (term "0,1,0"))
                        (rule "polySimp_addComm1" (formula "12") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "12") (term "0"))
                        (rule "polySimp_rightDist" (formula "12") (term "0,0"))
                        (rule "polySimp_mulComm0" (formula "12") (term "1,0,0"))
                        (rule "inEqSimp_gtRight" (formula "12"))
                        (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                        (rule "polySimp_mulComm0" (formula "1") (term "0,0,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                        (rule "polySimp_pullOutFactor2b" (formula "1") (term "0,0"))
                        (rule "add_literals" (formula "1") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "1") (term "1,0,0"))
                        (rule "add_zero_right" (formula "1") (term "0,0"))
                        (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                        (rule "applyEqRigid" (formula "1") (term "0,1,0") (ifseqformula "2"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1"))
                        (rule "polySimp_rightDist" (formula "1") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                        (rule "polySimp_mulAssoc" (formula "1") (term "0,1"))
                        (rule "polySimp_mulComm0" (formula "1") (term "0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "0,1"))
                        (rule "polySimp_elimOne" (formula "1") (term "0,1"))
                        (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "1"))
                        (rule "andLeft" (formula "4"))
                        (rule "inEqSimp_homoInEq1" (formula "4"))
                        (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                        (rule "polySimp_mulComm0" (formula "4") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "4") (term "0"))
                        (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                        (rule "add_literals" (formula "4") (term "1,1,0"))
                        (rule "times_zero_1" (formula "4") (term "1,0"))
                        (rule "add_zero_right" (formula "4") (term "0"))
                        (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                        (rule "add_literals" (formula "4") (term "1,1,0"))
                        (rule "times_zero_1" (formula "4") (term "1,0"))
                        (rule "add_zero_right" (formula "4") (term "0"))
                        (rule "leq_literals" (formula "4"))
                        (rule "closeFalse" (formula "4"))
                     )
                  )
               )
               (branch
                  (rule "close" (formula "12") (ifseqformula "1"))
               )
            )
            (branch "CUT: v_D_0 < 0 FALSE"
               (rule "inEqSimp_ltRight" (formula "3"))
               (rule "times_zero_1" (formula "1") (term "0,0"))
               (rule "add_zero_left" (formula "1") (term "0"))
               (rule "inEqSimp_gtRight" (formula "4"))
               (rule "times_zero_1" (formula "1") (term "0,0"))
               (rule "add_zero_left" (formula "1") (term "0"))
               (rule "inEqSimp_strengthen0" (formula "1") (ifseqformula "6"))
               (rule "add_zero_right" (formula "1") (term "1"))
               (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "2"))
               (rule "qeq_literals" (formula "1") (term "0"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "closeFalse" (formula "1"))
            )
         )
      )
      (branch
         (rule "cut" (inst "cutFormula=gt(v_D_0, Z(0(#)))") (userinteraction))
         (branch "CUT: v_D_0 > 0 TRUE"
            (rule "jdiv_uniqueNegPos" (formula "6") (term "0") (inst "y=y") (inst "x=x") (inst "cnom=cnom") (inst "a=a") (userinteraction))
            (rule "instAll" (formula "7") (term "0,0") (ifseqformula "1") (userinteraction))
            (rule "instAll" (formula "8") (term "1,0") (ifseqformula "1") (userinteraction))
            (rule "instAll" (formula "9") (term "0") (ifseqformula "1") (userinteraction))
            (rule "instAll" (formula "10") (term "1") (ifseqformula "1") (userinteraction))
            (rule "impLeft" (formula "1") (userinteraction))
            (branch
               (rule "mul_comm" (formula "6") (term "1,0,0,0,0,0,0") (userinteraction))
               (rule "cut_direct" (formula "6") (term "0,0,0,0,0") (userinteraction))
               (branch "CUT: v_N_0 + v_D_0 * v_A_0 < 0 TRUE"
                  (rule "replace_known_left" (formula "7") (term "1,0,0,0,0") (ifseqformula "6") (userinteraction))
                   (builtin "One Step Simplification" (formula "7"))
                  (rule "andRight" (formula "7") (userinteraction))
                  (branch
                     (rule "andRight" (formula "7") (userinteraction))
                     (branch
                        (rule "andRight" (formula "7") (userinteraction))
                        (branch
                           (rule "jdiv_axiom_inline" (formula "7") (term "0,0") (userinteraction))
                           (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0") (userinteraction))
                           (rule "replace_known_right" (formula "7") (term "0,0,0") (ifseqformula "9") (userinteraction))
                            (builtin "One Step Simplification" (formula "7"))
                           (rule "times_minus_one_1" (formula "7") (term "0,0,0,0") (userinteraction))
                           (rule "times_minus_one_1" (formula "7") (term "0,0") (userinteraction))
                           (rule "div_axiom" (formula "7") (term "0,0,0") (inst "quotient=quotient_0") (userinteraction))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "12") (userinteraction))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "andLeft" (formula "1"))
                           (rule "andLeft" (formula "1"))
                           (rule "polySimp_elimNeg" (formula "10") (term "0,0"))
                           (rule "polySimp_elimNeg" (formula "1") (term "0,0"))
                           (rule "polySimp_elimNeg" (formula "2") (term "1"))
                           (rule "polySimp_elimNeg" (formula "10") (term "0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "2") (term "0"))
                           (rule "polySimp_mulComm0" (formula "10") (term "1,1"))
                           (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "2") (term "1"))
                           (rule "polySimp_mulComm0" (formula "10") (term "0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0"))
                           (rule "polySimp_mulComm0" (formula "2") (term "1,1,1"))
                           (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0,0,0"))
                           (rule "polySimp_mulComm1" (formula "10") (term "0"))
                           (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "1") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "2") (term "1"))
                           (rule "polySimp_mulComm0" (formula "2") (term "0,1"))
                           (rule "polySimp_rightDist" (formula "10") (term "0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "10") (term "0,0,0,0,0"))
                           (rule "inEqSimp_geqRight" (formula "10"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                           (rule "inEqSimp_homoInEq0" (formula "3"))
                           (rule "polySimp_addComm1" (formula "3") (term "0"))
                           (rule "applyEqRigid" (formula "1") (term "0,0,1,0") (ifseqformula "2"))
                           (rule "polySimp_mulComm0" (formula "1") (term "0,1,0"))
                           (rule "polySimp_addComm1" (formula "1") (term "0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                           (rule "polySimp_elimOne" (formula "3") (term "0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                           (rule "polySimp_elimOne" (formula "1") (term "0"))
                           (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "3"))
                           (rule "andLeft" (formula "1"))
                           (rule "inEqSimp_homoInEq1" (formula "1"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                           (rule "polySimp_elimOne" (formula "1") (term "1,1,0"))
                           (rule "polySimp_mulAssoc" (formula "1") (term "0,1,0"))
                           (rule "polySimp_mulComm0" (formula "1") (term "0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0"))
                           (rule "polySimp_elimOne" (formula "1") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0"))
                           (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                           (rule "polySimp_pullOutFactor2b" (formula "1") (term "0"))
                           (rule "add_literals" (formula "1") (term "1,1,0"))
                           (rule "times_zero_1" (formula "1") (term "1,0"))
                           (rule "add_zero_right" (formula "1") (term "0"))
                           (rule "polySimp_pullOutFactor2b" (formula "1") (term "0"))
                           (rule "add_literals" (formula "1") (term "1,1,0"))
                           (rule "times_zero_1" (formula "1") (term "1,0"))
                           (rule "add_zero_right" (formula "1") (term "0"))
                           (rule "leq_literals" (formula "1"))
                           (rule "closeFalse" (formula "1"))
                        )
                        (branch
                           (rule "jdiv_axiom_inline" (formula "7") (term "0,0,0") (userinteraction))
                           (rule "replace_known_right" (formula "7") (term "0,0,0,0") (ifseqformula "8") (userinteraction))
                            (builtin "One Step Simplification" (formula "7"))
                           (rule "times_minus_one_1" (formula "7") (term "0,0,0,0,0") (userinteraction))
                           (rule "times_minus_one_1" (formula "7") (term "0,0,0") (userinteraction))
                           (rule "div_axiom" (formula "7") (term "0,0,0,0") (inst "quotient=quotient_0") (userinteraction))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "12") (userinteraction))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "andLeft" (formula "1"))
                           (rule "andLeft" (formula "1"))
                           (rule "polySimp_elimNeg" (formula "10") (term "0,0,0,0,0"))
                           (rule "polySimp_elimNeg" (formula "2") (term "1"))
                           (rule "polySimp_elimNeg" (formula "1") (term "0,0"))
                           (rule "polySimp_elimNeg" (formula "10") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "10") (term "1,1"))
                           (rule "polySimp_mulComm0" (formula "2") (term "0"))
                           (rule "polySimp_mulComm0" (formula "10") (term "0"))
                           (rule "polySimp_addComm0" (formula "10") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "10") (term "0"))
                           (rule "polySimp_mulComm1" (formula "10") (term "1,0"))
                           (rule "inEqSimp_geqRight" (formula "10"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0"))
                           (rule "polySimp_pullOutFactor2b" (formula "1") (term "0,0"))
                           (rule "add_literals" (formula "1") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "1") (term "1,0,0"))
                           (rule "add_zero_right" (formula "1") (term "0,0"))
                           (rule "applyEqRigid" (formula "1") (term "0,0,1,0") (ifseqformula "2"))
                           (rule "polySimp_mulComm0" (formula "1") (term "0,1,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                           (rule "polySimp_elimOne" (formula "1") (term "0"))
                           (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "3"))
                           (rule "andLeft" (formula "1"))
                           (rule "inEqSimp_homoInEq1" (formula "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "1") (term "0"))
                           (rule "add_literals" (formula "1") (term "1,1,0"))
                           (rule "times_zero_1" (formula "1") (term "1,0"))
                           (rule "add_zero_right" (formula "1") (term "0"))
                           (rule "leq_literals" (formula "1"))
                           (rule "closeFalse" (formula "1"))
                        )
                     )
                     (branch
                        (rule "sub" (formula "7") (term "0,0") (userinteraction))
                        (rule "neg_literal" (formula "7") (term "1,0,0") (userinteraction))
                        (rule "jdiv_axiom_inline" (formula "7") (term "0,0,0") (userinteraction))
                        (rule "mul_comm" (formula "7") (term "1,0,0,0,0,0") (userinteraction))
                        (rule "replace_known_right" (formula "7") (term "0,0,0,0") (ifseqformula "9") (userinteraction))
                         (builtin "One Step Simplification" (formula "7"))
                        (rule "times_minus_one_1" (formula "7") (term "0,0,0,0,0") (userinteraction))
                        (rule "times_minus_one_1" (formula "7") (term "0,0,0") (userinteraction))
                        (rule "div_axiom" (formula "7") (term "0,0,0,0") (inst "quotient=quotient_0") (userinteraction))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "12") (userinteraction))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "andLeft" (formula "1"))
                        (rule "andLeft" (formula "1"))
                        (rule "cut_direct" (formula "3") (term "0") (userinteraction))
                        (branch "CUT: v_D_0 >= 0 TRUE"
                            (builtin "One Step Simplification" (formula "4"))
                           (rule "polySimp_elimNeg" (formula "11") (term "0,0,0"))
                           (rule "polySimp_elimNeg" (formula "4") (term "1,0,1"))
                           (rule "polySimp_elimNeg" (formula "1") (term "0,0"))
                           (rule "polySimp_elimNeg" (formula "11") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "11") (term "1,1"))
                           (rule "polySimp_mulComm0" (formula "4") (term "0"))
                           (rule "polySimp_mulComm0" (formula "4") (term "1,1"))
                           (rule "polySimp_mulComm0" (formula "4") (term "1,0,1"))
                           (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "4") (term "1,1,1,0,1"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0"))
                           (rule "polySimp_mulComm0" (formula "11") (term "0"))
                           (rule "polySimp_mulComm0" (formula "11") (term "0,0,0,1,0"))
                           (rule "polySimp_addComm0" (formula "11") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "4") (term "1,0,1"))
                           (rule "polySimp_mulComm0" (formula "4") (term "0,1,0,1"))
                           (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "1") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "11") (term "0"))
                           (rule "polySimp_mulComm1" (formula "11") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "11") (term "0,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "11") (term "0,0,0,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "4") (term "0,1"))
                           (rule "polySimp_addComm1" (formula "4") (term "1"))
                           (rule "polySimp_addComm1" (formula "4") (term "0,1"))
                           (rule "inEqSimp_ltRight" (formula "11"))
                           (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "1") (term "0,0,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0"))
                           (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "1") (term "0,0,0"))
                           (rule "inEqSimp_homoInEq1" (formula "5"))
                           (rule "polySimp_addComm1" (formula "5") (term "0"))
                           (rule "applyEq" (formula "1") (term "0,0,1,0") (ifseqformula "2"))
                           (rule "polySimp_mulComm0" (formula "1") (term "0,1,0"))
                           (rule "polySimp_addComm1" (formula "1") (term "0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                           (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                           (rule "polySimp_elimOne" (formula "5") (term "0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                           (rule "polySimp_elimOne" (formula "1") (term "0"))
                           (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "5"))
                           (rule "andLeft" (formula "1"))
                           (rule "inEqSimp_homoInEq1" (formula "1"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                           (rule "polySimp_elimOne" (formula "1") (term "1,1,0"))
                           (rule "polySimp_rightDist" (formula "1") (term "0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0"))
                           (rule "polySimp_elimOne" (formula "1") (term "1,0,1,0"))
                           (rule "polySimp_mulAssoc" (formula "1") (term "0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "1") (term "0,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "0,0,1,0"))
                           (rule "polySimp_elimOne" (formula "1") (term "0,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0"))
                           (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                           (rule "polySimp_pullOutFactor2b" (formula "1") (term "0"))
                           (rule "add_literals" (formula "1") (term "1,1,0"))
                           (rule "times_zero_1" (formula "1") (term "1,0"))
                           (rule "add_zero_right" (formula "1") (term "0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0"))
                           (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                           (rule "polySimp_pullOutFactor2b" (formula "1") (term "0"))
                           (rule "add_literals" (formula "1") (term "1,1,0"))
                           (rule "times_zero_1" (formula "1") (term "1,0"))
                           (rule "add_zero_right" (formula "1") (term "0"))
                           (rule "polySimp_pullOutFactor2b" (formula "1") (term "0"))
                           (rule "add_literals" (formula "1") (term "1,1,0"))
                           (rule "times_zero_1" (formula "1") (term "1,0"))
                           (rule "add_zero_right" (formula "1") (term "0"))
                           (rule "leq_literals" (formula "1"))
                           (rule "closeFalse" (formula "1"))
                        )
                        (branch "CUT: v_D_0 >= 0 FALSE"
                           (rule "inEqSimp_geqRight" (formula "10"))
                           (rule "times_zero_1" (formula "1") (term "1,0,0"))
                           (rule "add_literals" (formula "1") (term "0,0"))
                           (rule "inEqSimp_gtToGeq" (formula "10"))
                           (rule "times_zero_1" (formula "10") (term "1,0,0"))
                           (rule "add_zero_right" (formula "10") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                           (rule "mul_literals" (formula "1") (term "1"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                           (rule "mul_literals" (formula "10") (term "1"))
                           (rule "inEqSimp_contradInEq0" (formula "10") (ifseqformula "1"))
                           (rule "qeq_literals" (formula "10") (term "0"))
                            (builtin "One Step Simplification" (formula "10"))
                           (rule "closeFalse" (formula "10"))
                        )
                     )
                  )
                  (branch
                     (rule "jdiv_axiom_inline" (formula "7") (term "0,0,0,0") (userinteraction))
                     (rule "replace_known_right" (formula "7") (term "0,0,0,0,0") (ifseqformula "8") (userinteraction))
                      (builtin "One Step Simplification" (formula "7"))
                     (rule "times_minus_one_1" (formula "7") (term "0,0,0,0") (userinteraction))
                     (rule "sub" (formula "7") (term "0,0") (userinteraction))
                     (rule "neg_literal" (formula "7") (term "1,0,0") (userinteraction))
                     (rule "times_minus_one_1" (formula "7") (term "0,0,0,0,0,0") (userinteraction))
                     (rule "div_axiom" (formula "7") (term "0,0,0,0,0") (inst "quotient=quotient_0") (userinteraction))
                     (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "12") (userinteraction))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "andLeft" (formula "1"))
                     (rule "andLeft" (formula "1"))
                     (rule "cut_direct" (formula "3") (term "0") (userinteraction))
                     (branch "CUT: v_D_0 >= 0 TRUE"
                         (builtin "One Step Simplification" (formula "4"))
                        (rule "polySimp_elimNeg" (formula "1") (term "0,0"))
                        (rule "polySimp_elimNeg" (formula "4") (term "1,0,1"))
                        (rule "polySimp_elimNeg" (formula "11") (term "0,0,0,0"))
                        (rule "polySimp_elimNeg" (formula "11") (term "0,0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "4") (term "1,1"))
                        (rule "polySimp_mulComm0" (formula "11") (term "1,1"))
                        (rule "polySimp_mulComm0" (formula "4") (term "0"))
                        (rule "polySimp_mulComm0" (formula "11") (term "0"))
                        (rule "polySimp_addComm1" (formula "4") (term "1"))
                        (rule "polySimp_addComm0" (formula "11") (term "0,1,0"))
                        (rule "polySimp_addComm1" (formula "11") (term "1,0"))
                        (rule "polySimp_addComm0" (formula "11") (term "0,1,0"))
                        (rule "polySimp_rightDist" (formula "11") (term "0"))
                        (rule "polySimp_mulComm1" (formula "11") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "11") (term "0,0"))
                        (rule "polySimp_mulComm0" (formula "11") (term "1,0,0"))
                        (rule "inEqSimp_ltRight" (formula "11"))
                        (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                        (rule "polySimp_mulComm0" (formula "1") (term "0,0,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                        (rule "polySimp_pullOutFactor2b" (formula "1") (term "0,0"))
                        (rule "add_literals" (formula "1") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "1") (term "1,0,0"))
                        (rule "add_zero_right" (formula "1") (term "0,0"))
                        (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                        (rule "applyEq" (formula "1") (term "0,0,1,0") (ifseqformula "2"))
                        (rule "polySimp_mulComm0" (formula "1") (term "0,1,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                        (rule "polySimp_elimOne" (formula "1") (term "0"))
                        (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "5"))
                        (rule "andLeft" (formula "1"))
                        (rule "inEqSimp_homoInEq1" (formula "1"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                        (rule "polySimp_elimOne" (formula "1") (term "1,1,0"))
                        (rule "polySimp_mulAssoc" (formula "1") (term "0,1,0"))
                        (rule "polySimp_mulComm0" (formula "1") (term "0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0"))
                        (rule "polySimp_elimOne" (formula "1") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0"))
                        (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                        (rule "polySimp_pullOutFactor2b" (formula "1") (term "0"))
                        (rule "add_literals" (formula "1") (term "1,1,0"))
                        (rule "times_zero_1" (formula "1") (term "1,0"))
                        (rule "add_zero_right" (formula "1") (term "0"))
                        (rule "polySimp_pullOutFactor2b" (formula "1") (term "0"))
                        (rule "add_literals" (formula "1") (term "1,1,0"))
                        (rule "times_zero_1" (formula "1") (term "1,0"))
                        (rule "add_zero_right" (formula "1") (term "0"))
                        (rule "leq_literals" (formula "1"))
                        (rule "closeFalse" (formula "1"))
                     )
                     (branch "CUT: v_D_0 >= 0 FALSE"
                        (rule "inEqSimp_geqRight" (formula "10"))
                        (rule "times_zero_1" (formula "1") (term "1,0,0"))
                        (rule "add_zero_right" (formula "1") (term "0,0"))
                        (rule "inEqSimp_gtToGeq" (formula "10"))
                        (rule "times_zero_1" (formula "10") (term "1,0,0"))
                        (rule "add_zero_right" (formula "10") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                        (rule "mul_literals" (formula "1") (term "1"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                        (rule "mul_literals" (formula "10") (term "1"))
                        (rule "inEqSimp_contradInEq0" (formula "10") (ifseqformula "1"))
                        (rule "qeq_literals" (formula "10") (term "0"))
                         (builtin "One Step Simplification" (formula "10"))
                        (rule "closeFalse" (formula "10"))
                     )
                  )
               )
               (branch "CUT: v_N_0 + v_D_0 * v_A_0 < 0 FALSE"
                  (rule "inEqSimp_ltRight" (formula "6"))
                  (rule "times_zero_1" (formula "1") (term "0,0"))
                  (rule "add_zero_left" (formula "1") (term "0"))
                  (rule "close" (formula "9") (ifseqformula "1"))
               )
            )
            (branch
               (rule "close" (formula "11") (ifseqformula "1"))
            )
         )
         (branch "CUT: v_D_0 > 0 FALSE"
            (rule "mul_comm" (formula "6") (term "1,0,0") (userinteraction))
            (rule "cut" (inst "cutFormula=lt(add(v_N_0, mul(v_D_0, v_A_0)), Z(0(#)))") (userinteraction))
            (branch "CUT: v_N_0 + v_D_0 * v_A_0 < 0 TRUE"
               (rule "jdiv_uniqueNegNeg" (formula "7") (term "0") (inst "y=y") (inst "x=x") (inst "cnom=cnom") (inst "a=a") (userinteraction))
               (rule "instAll" (formula "8") (term "0,0") (ifseqformula "1") (userinteraction))
               (rule "instAll" (formula "9") (term "1,0") (ifseqformula "1") (userinteraction))
               (rule "instAll" (formula "10") (term "0") (ifseqformula "1") (userinteraction))
               (rule "instAll" (formula "11") (term "1") (ifseqformula "1") (userinteraction))
               (rule "impLeft" (formula "1") (userinteraction))
               (branch
                  (rule "replace_known_left" (formula "6") (term "0,0,0,0,0") (ifseqformula "5") (userinteraction))
                  (rule "cut_direct" (formula "6") (term "1,0,0,0,0") (userinteraction))
                  (branch "CUT: v_D_0 < 0 TRUE"
                      (builtin "One Step Simplification" (formula "7"))
                     (rule "andRight" (formula "7") (userinteraction))
                     (branch
                        (rule "andRight" (formula "7") (userinteraction))
                        (branch
                           (rule "andRight" (formula "7") (userinteraction))
                           (branch
                              (rule "jdiv_axiom_inline" (formula "7") (term "0,0") (userinteraction))
                              (rule "replace_known_right" (formula "7") (term "0,0,0") (ifseqformula "10") (userinteraction))
                               (builtin "One Step Simplification" (formula "7"))
                              (rule "times_minus_one_1" (formula "7") (term "0,0,0,0") (userinteraction))
                              (rule "times_minus_one_1" (formula "7") (term "0,0") (userinteraction))
                              (rule "div_axiom" (formula "7") (term "0,0,0") (inst "quotient=quotient_0") (userinteraction))
                              (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "13"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "andLeft" (formula "1"))
                              (rule "andLeft" (formula "1"))
                              (rule "polySimp_elimNeg" (formula "10") (term "0,0"))
                              (rule "polySimp_elimNeg" (formula "2") (term "1"))
                              (rule "polySimp_elimNeg" (formula "1") (term "0,0"))
                              (rule "polySimp_elimNeg" (formula "10") (term "0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "2") (term "0"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "10") (term "0,0,0,0"))
                              (rule "polySimp_mulComm1" (formula "10") (term "0"))
                              (rule "polySimp_rightDist" (formula "2") (term "1"))
                              (rule "polySimp_mulComm0" (formula "2") (term "0,1"))
                              (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "1") (term "0,0,0"))
                              (rule "polySimp_rightDist" (formula "10") (term "0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "10") (term "0,0,0,0,0"))
                              (rule "inEqSimp_geqRight" (formula "10"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                              (rule "inEqSimp_homoInEq0" (formula "3"))
                              (rule "polySimp_addComm1" (formula "3") (term "0"))
                              (rule "applyEq" (formula "1") (term "0,0,1,0") (ifseqformula "2"))
                              (rule "polySimp_mulComm0" (formula "1") (term "0,1,0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                              (rule "polySimp_elimOne" (formula "3") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                              (rule "polySimp_elimOne" (formula "1") (term "0"))
                              (rule "inEqSimp_contradInEq1" (formula "3") (ifseqformula "1"))
                              (rule "andLeft" (formula "3"))
                              (rule "inEqSimp_homoInEq1" (formula "3"))
                              (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0"))
                              (rule "polySimp_elimOne" (formula "3") (term "1,1,0"))
                              (rule "polySimp_mulAssoc" (formula "3") (term "0,1,0"))
                              (rule "polySimp_mulComm0" (formula "3") (term "0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "0,1,0"))
                              (rule "polySimp_elimOne" (formula "3") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "3") (term "0"))
                              (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                              (rule "polySimp_pullOutFactor2b" (formula "3") (term "0,0,0"))
                              (rule "add_literals" (formula "3") (term "1,1,0,0,0"))
                              (rule "times_zero_1" (formula "3") (term "1,0,0,0"))
                              (rule "add_zero_right" (formula "3") (term "0,0,0"))
                              (rule "polySimp_pullOutFactor2b" (formula "3") (term "0"))
                              (rule "add_literals" (formula "3") (term "1,1,0"))
                              (rule "times_zero_1" (formula "3") (term "1,0"))
                              (rule "add_zero_right" (formula "3") (term "0"))
                              (rule "leq_literals" (formula "3"))
                              (rule "closeFalse" (formula "3"))
                           )
                           (branch
                              (rule "jdiv_axiom_inline" (formula "7") (term "0,0,0") (userinteraction))
                              (rule "replace_known_right" (formula "7") (term "0,0,0,0") (ifseqformula "9") (userinteraction))
                               (builtin "One Step Simplification" (formula "7"))
                              (rule "times_minus_one_1" (formula "7") (term "0,0,0,0,0") (userinteraction))
                              (rule "times_minus_one_1" (formula "7") (term "0,0,0") (userinteraction))
                              (rule "div_axiom" (formula "7") (term "0,0,0,0") (inst "quotient=quotient_0") (userinteraction))
                              (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "13"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "andLeft" (formula "1"))
                              (rule "andLeft" (formula "1"))
                              (rule "polySimp_elimNeg" (formula "10") (term "0,0,0"))
                              (rule "polySimp_elimNeg" (formula "1") (term "0,0"))
                              (rule "polySimp_elimNeg" (formula "2") (term "1"))
                              (rule "polySimp_elimNeg" (formula "10") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "2") (term "0"))
                              (rule "polySimp_mulComm0" (formula "10") (term "0"))
                              (rule "polySimp_addComm0" (formula "10") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "10") (term "0"))
                              (rule "polySimp_mulComm1" (formula "10") (term "1,0"))
                              (rule "inEqSimp_geqRight" (formula "10"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0"))
                              (rule "polySimp_pullOutFactor2b" (formula "1") (term "0,0"))
                              (rule "add_literals" (formula "1") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "1") (term "1,0,0"))
                              (rule "add_zero_right" (formula "1") (term "0,0"))
                              (rule "applyEq" (formula "1") (term "0,0,1,0") (ifseqformula "2"))
                              (rule "polySimp_mulComm0" (formula "1") (term "0,1,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                              (rule "polySimp_elimOne" (formula "1") (term "0"))
                              (rule "inEqSimp_contradInEq1" (formula "3") (ifseqformula "1"))
                              (rule "andLeft" (formula "3"))
                              (rule "inEqSimp_homoInEq1" (formula "3"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "3") (term "0"))
                              (rule "add_literals" (formula "3") (term "1,1,0"))
                              (rule "times_zero_1" (formula "3") (term "1,0"))
                              (rule "add_zero_right" (formula "3") (term "0"))
                              (rule "leq_literals" (formula "3"))
                              (rule "closeFalse" (formula "3"))
                           )
                        )
                        (branch
                           (rule "jdiv_axiom_inline" (formula "7") (term "0,0,0") (userinteraction))
                           (rule "cut_direct" (formula "7") (term "0,0,0,0") (userinteraction))
                           (branch "CUT: v_N_0 + v_D_0 * v_A_0 >= 0 TRUE"
                              (rule "close" (formula "11") (ifseqformula "1"))
                           )
                           (branch "CUT: v_N_0 + v_D_0 * v_A_0 >= 0 FALSE"
                               (builtin "One Step Simplification" (formula "7"))
                              (rule "times_minus_one_1" (formula "7") (term "0,0,0,0,0") (userinteraction))
                              (rule "times_minus_one_1" (formula "7") (term "0,0,0") (userinteraction))
                              (rule "div_axiom" (formula "7") (term "0,0,0,0") (inst "quotient=quotient_0") (userinteraction))
                              (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "13") (userinteraction))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "andLeft" (formula "1"))
                              (rule "andLeft" (formula "1"))
                              (rule "cut_direct" (formula "3") (term "0") (userinteraction))
                              (branch "CUT: v_D_0 >= 0 TRUE"
                                 (rule "inEqSimp_ltToLeq" (formula "5"))
                                 (rule "times_zero_1" (formula "5") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "5") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                                 (rule "mul_literals" (formula "5") (term "1"))
                                 (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "5"))
                                 (rule "qeq_literals" (formula "3") (term "0"))
                                  (builtin "One Step Simplification" (formula "3"))
                                 (rule "closeFalse" (formula "3"))
                              )
                              (branch "CUT: v_D_0 >= 0 FALSE"
                                  (builtin "One Step Simplification" (formula "3"))
                                 (rule "polySimp_elimNeg" (formula "11") (term "0,0,0"))
                                 (rule "polySimp_elimNeg" (formula "3") (term "1,0,1"))
                                 (rule "polySimp_elimNeg" (formula "1") (term "0,0"))
                                 (rule "polySimp_elimNeg" (formula "11") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "1,0,1"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "11") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "11") (term "0,0,0,1,0"))
                                 (rule "polySimp_addComm0" (formula "11") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "3") (term "1,0,1"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "0,1,0,1"))
                                 (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "11") (term "0"))
                                 (rule "polySimp_elimOne" (formula "11") (term "0,0"))
                                 (rule "polySimp_mulComm1" (formula "11") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "11") (term "0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "11") (term "0,0,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                                 (rule "polySimp_addComm1" (formula "3") (term "1"))
                                 (rule "polySimp_addComm1" (formula "3") (term "0,1"))
                                 (rule "inEqSimp_ltRight" (formula "11"))
                                 (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "1") (term "0,0,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "4"))
                                 (rule "polySimp_addComm1" (formula "4") (term "0"))
                                 (rule "applyEqRigid" (formula "1") (term "0,0,1,0") (ifseqformula "2"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "0,1,0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                                 (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                 (rule "polySimp_elimOne" (formula "4") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "0"))
                                 (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "4"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "inEqSimp_homoInEq1" (formula "1"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "1,1,0"))
                                 (rule "polySimp_rightDist" (formula "1") (term "0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "1,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                 (rule "polySimp_pullOutFactor2b" (formula "1") (term "0"))
                                 (rule "add_literals" (formula "1") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "1") (term "1,0"))
                                 (rule "add_zero_right" (formula "1") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                 (rule "polySimp_pullOutFactor2b" (formula "1") (term "0"))
                                 (rule "add_literals" (formula "1") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "1") (term "1,0"))
                                 (rule "add_zero_right" (formula "1") (term "0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                 (rule "add_literals" (formula "1") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "1") (term "1,0"))
                                 (rule "add_zero_right" (formula "1") (term "0"))
                                 (rule "leq_literals" (formula "1"))
                                 (rule "closeFalse" (formula "1"))
                              )
                           )
                        )
                     )
                     (branch
                        (rule "jdiv_axiom_inline" (formula "7") (term "0,0,0,0") (userinteraction))
                        (rule "replace_known_right" (formula "7") (term "0,0,0,0,0") (ifseqformula "9") (userinteraction))
                         (builtin "One Step Simplification" (formula "7"))
                        (rule "times_minus_one_1" (formula "7") (term "0,0,0,0,0,0") (userinteraction))
                        (rule "times_minus_one_1" (formula "7") (term "0,0,0,0") (userinteraction))
                        (rule "div_axiom" (formula "7") (term "0,0,0,0,0") (inst "quotient=quotient_0") (userinteraction))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "13") (userinteraction))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "andLeft" (formula "1"))
                        (rule "andLeft" (formula "1"))
                        (rule "cut_direct" (formula "3") (term "0") (userinteraction))
                        (branch "CUT: v_D_0 >= 0 TRUE"
                           (rule "inEqSimp_ltToLeq" (formula "5"))
                           (rule "times_zero_1" (formula "5") (term "1,0,0"))
                           (rule "add_zero_right" (formula "5") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                           (rule "mul_literals" (formula "5") (term "1"))
                           (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "5"))
                           (rule "qeq_literals" (formula "3") (term "0"))
                            (builtin "One Step Simplification" (formula "3"))
                           (rule "closeFalse" (formula "3"))
                        )
                        (branch "CUT: v_D_0 >= 0 FALSE"
                            (builtin "One Step Simplification" (formula "3"))
                           (rule "polySimp_elimNeg" (formula "3") (term "1,0,1"))
                           (rule "polySimp_elimNeg" (formula "11") (term "0,0,0,0"))
                           (rule "polySimp_elimNeg" (formula "1") (term "0,0"))
                           (rule "polySimp_elimNeg" (formula "11") (term "0,0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "3") (term "0"))
                           (rule "polySimp_mulComm0" (formula "11") (term "0"))
                           (rule "polySimp_addComm1" (formula "3") (term "1"))
                           (rule "polySimp_addComm1" (formula "11") (term "1,0"))
                           (rule "polySimp_addComm0" (formula "11") (term "0,1,0"))
                           (rule "polySimp_addComm1" (formula "11") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "11") (term "0"))
                           (rule "polySimp_mulComm1" (formula "11") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "11") (term "0,0"))
                           (rule "polySimp_elimOne" (formula "11") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "11") (term "1,0,0"))
                           (rule "inEqSimp_ltRight" (formula "11"))
                           (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "1") (term "0,0,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor2b" (formula "1") (term "0,0"))
                           (rule "add_literals" (formula "1") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "1") (term "1,0,0"))
                           (rule "add_zero_right" (formula "1") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                           (rule "applyEqRigid" (formula "1") (term "0,0,1,0") (ifseqformula "2"))
                           (rule "polySimp_mulComm0" (formula "1") (term "0,1,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                           (rule "polySimp_elimOne" (formula "1") (term "0"))
                           (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "1"))
                           (rule "andLeft" (formula "4"))
                           (rule "inEqSimp_homoInEq1" (formula "4"))
                           (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                           (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0"))
                           (rule "polySimp_elimOne" (formula "4") (term "1,1,0"))
                           (rule "polySimp_mulComm0" (formula "4") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "4") (term "0"))
                           (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,0"))
                           (rule "add_literals" (formula "4") (term "1,1,0,0,0"))
                           (rule "times_zero_1" (formula "4") (term "1,0,0,0"))
                           (rule "add_zero_right" (formula "4") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor2b" (formula "4") (term "0"))
                           (rule "add_literals" (formula "4") (term "1,1,0"))
                           (rule "times_zero_1" (formula "4") (term "1,0"))
                           (rule "add_zero_right" (formula "4") (term "0"))
                           (rule "leq_literals" (formula "4"))
                           (rule "closeFalse" (formula "4"))
                        )
                     )
                  )
                  (branch "CUT: v_D_0 < 0 FALSE"
                     (rule "inEqSimp_gtRight" (formula "8"))
                     (rule "times_zero_1" (formula "1") (term "0,0"))
                     (rule "add_zero_left" (formula "1") (term "0"))
                     (rule "inEqSimp_ltRight" (formula "7"))
                     (rule "times_zero_1" (formula "1") (term "0,0"))
                     (rule "add_zero_left" (formula "1") (term "0"))
                     (rule "inEqSimp_strengthen1" (formula "1") (ifseqformula "12"))
                     (rule "add_zero_right" (formula "1") (term "1"))
                     (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "2"))
                     (rule "qeq_literals" (formula "1") (term "0"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "closeFalse" (formula "1"))
                  )
               )
               (branch
                  (rule "close" (formula "12") (ifseqformula "1"))
               )
            )
            (branch "CUT: v_N_0 + v_D_0 * v_A_0 < 0 FALSE"
               (rule "inEqSimp_ltRight" (formula "1"))
               (rule "times_zero_1" (formula "1") (term "0,0"))
               (rule "add_zero_left" (formula "1") (term "0"))
               (rule "close" (formula "4") (ifseqformula "1"))
            )
         )
      )
   )
   (branch "CUT: v_N_0 >= 0 <-> v_N_0 + v_D_0 * v_A_0 >= 0 FALSE"
      (rule "replace_known_right" (formula "4") (term "0,1") (ifseqformula "1") (userinteraction))
       (builtin "One Step Simplification" (formula "4"))
      (rule "cut" (inst "cutFormula=  (    geq(v_N_0, Z(0(#)))
   <-> lt(add(v_N_0, mul(v_D_0, v_A_0)), Z(0(#))))
& (    gt(v_D_0, Z(0(#)))
   <-> lt(add(v_N_0, mul(v_D_0, v_A_0)), Z(0(#))))") (userinteraction))
      (branch "CUT: (v_N_0 >= 0 <-> v_N_0 + v_D_0 * v_A_0 < 0) & (v_D_0 > 0 <-> v_N_0 + v_D_0 * v_A_0 < 0) TRUE"
         (rule "andLeft" (formula "1") (userinteraction))
         (rule "replace_known_left" (formula "6") (term "0,0,1") (ifseqformula "1") (userinteraction))
         (rule "replace_known_left" (formula "6") (term "1,0,1") (ifseqformula "2") (userinteraction))
          (builtin "One Step Simplification" (formula "6"))
         (rule "equiv_left" (formula "1") (userinteraction))
         (branch
            (rule "equiv_left" (formula "3") (userinteraction))
            (branch
               (rule "mul_comm" (formula "2") (term "1,0") (userinteraction))
               (rule "jdiv_uniqueNegPos" (formula "7") (term "0") (inst "y=y") (inst "x=x") (inst "cnom=cnom") (inst "a=a") (userinteraction))
               (rule "instAll" (formula "8") (term "0,0") (ifseqformula "1") (userinteraction))
               (rule "instAll" (formula "9") (term "1,0") (ifseqformula "1") (userinteraction))
               (rule "instAll" (formula "10") (term "0") (ifseqformula "1") (userinteraction))
               (rule "instAll" (formula "11") (term "1") (ifseqformula "1") (userinteraction))
               (rule "impLeft" (formula "1") (userinteraction))
               (branch
                  (rule "replace_known_left" (formula "8") (term "0,0,0,0,0") (ifseqformula "6") (userinteraction))
                  (rule "replace_known_left" (formula "8") (term "1,0,0,0,0") (ifseqformula "7") (userinteraction))
                   (builtin "One Step Simplification" (formula "8"))
                  (rule "andRight" (formula "8") (userinteraction))
                  (branch
                     (rule "andRight" (formula "8") (userinteraction))
                     (branch
                        (rule "andRight" (formula "8") (userinteraction))
                        (branch
                           (rule "jdiv_axiom_inline" (formula "8") (term "0,0") (userinteraction))
                           (rule "cut_direct" (formula "8") (term "0,0,0") (userinteraction))
                           (branch "CUT: v_N_0 + v_A_0 * v_D_0 >= 0 TRUE"
                              (rule "replace_known_left" (formula "10") (term "0") (ifseqformula "6"))
                               (builtin "One Step Simplification" (formula "10"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                              (rule "close" (formula "10") (ifseqformula "1"))
                           )
                           (branch "CUT: v_N_0 + v_A_0 * v_D_0 >= 0 FALSE"
                               (builtin "One Step Simplification" (formula "9"))
                              (rule "times_minus_one_1" (formula "9") (term "0,0,0,0") (userinteraction))
                              (rule "times_minus_one_1" (formula "9") (term "0,0") (userinteraction))
                              (rule "div_axiom" (formula "9") (term "0,0,0") (inst "quotient=quotient_0") (userinteraction))
                              (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "13"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "andLeft" (formula "1"))
                              (rule "andLeft" (formula "1"))
                              (rule "polySimp_elimNeg" (formula "12") (term "0,0"))
                              (rule "polySimp_elimNeg" (formula "2") (term "1"))
                              (rule "polySimp_elimNeg" (formula "1") (term "0,0"))
                              (rule "polySimp_elimNeg" (formula "12") (term "0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "12") (term "1,1"))
                              (rule "polySimp_mulComm0" (formula "2") (term "0"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                              (rule "polySimp_mulComm1" (formula "12") (term "0"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1,1,1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0"))
                              (rule "polySimp_mulComm0" (formula "12") (term "0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "2") (term "1"))
                              (rule "polySimp_mulComm0" (formula "2") (term "0,1"))
                              (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "1") (term "0,0,0"))
                              (rule "polySimp_rightDist" (formula "12") (term "0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "12") (term "0,0,0,0,0"))
                              (rule "inEqSimp_geqRight" (formula "12"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                              (rule "inEqSimp_homoInEq0" (formula "3"))
                              (rule "polySimp_addComm1" (formula "3") (term "0"))
                              (rule "applyEq" (formula "1") (term "0,0,1,0") (ifseqformula "2"))
                              (rule "polySimp_mulComm0" (formula "1") (term "0,1,0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                              (rule "polySimp_elimOne" (formula "3") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                              (rule "polySimp_elimOne" (formula "1") (term "0"))
                              (rule "inEqSimp_contradInEq1" (formula "3") (ifseqformula "1"))
                              (rule "andLeft" (formula "3"))
                              (rule "inEqSimp_homoInEq1" (formula "3"))
                              (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0"))
                              (rule "polySimp_elimOne" (formula "3") (term "1,1,0"))
                              (rule "polySimp_mulAssoc" (formula "3") (term "0,1,0"))
                              (rule "polySimp_mulComm0" (formula "3") (term "0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "0,1,0"))
                              (rule "polySimp_elimOne" (formula "3") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "3") (term "0"))
                              (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                              (rule "polySimp_pullOutFactor2b" (formula "3") (term "0"))
                              (rule "add_literals" (formula "3") (term "1,1,0"))
                              (rule "times_zero_1" (formula "3") (term "1,0"))
                              (rule "add_zero_right" (formula "3") (term "0"))
                              (rule "polySimp_pullOutFactor2b" (formula "3") (term "0"))
                              (rule "add_literals" (formula "3") (term "1,1,0"))
                              (rule "times_zero_1" (formula "3") (term "1,0"))
                              (rule "add_zero_right" (formula "3") (term "0"))
                              (rule "leq_literals" (formula "3"))
                              (rule "closeFalse" (formula "3"))
                           )
                        )
                        (branch
                           (rule "jdiv_axiom_inline" (formula "8") (term "0,0,0,0") (userinteraction))
                           (rule "replace_known_left" (formula "8") (term "0,0,0,0,0") (ifseqformula "5") (userinteraction))
                            (builtin "One Step Simplification" (formula "8"))
                           (rule "div_axiom" (formula "8") (term "0,0,0,0") (inst "quotient=quotient_0") (userinteraction))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "12"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "andLeft" (formula "1"))
                           (rule "andLeft" (formula "1"))
                           (rule "polySimp_mulComm0" (formula "11") (term "0"))
                           (rule "polySimp_mulComm0" (formula "11") (term "1,1"))
                           (rule "polySimp_mulComm0" (formula "3") (term "1,1,1"))
                           (rule "polySimp_mulComm0" (formula "3") (term "0,2"))
                           (rule "polySimp_mulComm0" (formula "3") (term "0,1"))
                           (rule "polySimp_addComm1" (formula "3") (term "1,2"))
                           (rule "polySimp_addComm1" (formula "11") (term "1,0"))
                           (rule "polySimp_addComm1" (formula "3") (term "1,1"))
                           (rule "polySimp_addComm0" (formula "11") (term "0,1,0"))
                           (rule "polySimp_addComm1" (formula "11") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "11") (term "0"))
                           (rule "polySimp_rightDist" (formula "11") (term "0,0"))
                           (rule "polySimp_elimOne" (formula "11") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "11") (term "1,0,0"))
                           (rule "inEqSimp_gtToGeq" (formula "10"))
                           (rule "times_zero_1" (formula "10") (term "1,0,0"))
                           (rule "add_zero_right" (formula "10") (term "0,0"))
                           (rule "inEqSimp_geqRight" (formula "11"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor2b" (formula "1") (term "0,0"))
                           (rule "add_literals" (formula "1") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "1") (term "1,0,0"))
                           (rule "add_zero_right" (formula "1") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                           (rule "applyEqRigid" (formula "1") (term "0,1,0") (ifseqformula "2"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                           (rule "mul_literals" (formula "11") (term "1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1"))
                           (rule "polySimp_rightDist" (formula "1") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                           (rule "polySimp_rightDist" (formula "1") (term "0,1"))
                           (rule "mul_literals" (formula "1") (term "0,0,1"))
                           (rule "inEqSimp_subsumption1" (formula "4") (term "0") (ifseqformula "11"))
                           (rule "leq_literals" (formula "4") (term "0,0"))
                            (builtin "One Step Simplification" (formula "4"))
                           (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "1"))
                           (rule "andLeft" (formula "4"))
                           (rule "inEqSimp_homoInEq1" (formula "4"))
                           (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "4") (term "0,1,0"))
                           (rule "mul_literals" (formula "4") (term "0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1,0"))
                           (rule "polySimp_elimOne" (formula "4") (term "1,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "4") (term "0"))
                           (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                           (rule "add_literals" (formula "4") (term "1,1,0"))
                           (rule "times_zero_1" (formula "4") (term "1,0"))
                           (rule "add_zero_right" (formula "4") (term "0"))
                           (rule "polySimp_addAssoc" (formula "4") (term "0"))
                           (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                           (rule "add_literals" (formula "4") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor2b" (formula "4") (term "0"))
                           (rule "add_literals" (formula "4") (term "1,1,0"))
                           (rule "times_zero_1" (formula "4") (term "1,0"))
                           (rule "add_zero_right" (formula "4") (term "0"))
                           (rule "leq_literals" (formula "4"))
                           (rule "closeFalse" (formula "4"))
                        )
                     )
                     (branch
                        (rule "jdiv_axiom_inline" (formula "8") (term "0,0,0") (userinteraction))
                        (rule "cut_direct" (formula "8") (term "0,0,0,0") (userinteraction))
                        (branch "CUT: v_N_0 + v_A_0 * v_D_0 >= 0 TRUE"
                           (rule "replace_known_left" (formula "10") (term "0") (ifseqformula "6"))
                            (builtin "One Step Simplification" (formula "10"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                           (rule "close" (formula "10") (ifseqformula "1"))
                        )
                        (branch "CUT: v_N_0 + v_A_0 * v_D_0 >= 0 FALSE"
                            (builtin "One Step Simplification" (formula "9"))
                           (rule "times_minus_one_1" (formula "9") (term "0,0,0,0,0") (userinteraction))
                           (rule "times_minus_one_1" (formula "9") (term "0,0,0") (userinteraction))
                           (rule "sub" (formula "9") (term "0,0") (userinteraction))
                           (rule "neg_literal" (formula "9") (term "1,0,0") (userinteraction))
                           (rule "div_axiom" (formula "9") (term "0,0,0,0") (inst "quotient=quotient_0") (userinteraction))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "13"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "andLeft" (formula "1"))
                           (rule "andLeft" (formula "1"))
                           (rule "polySimp_elimNeg" (formula "12") (term "0,0,0"))
                           (rule "polySimp_elimNeg" (formula "3") (term "1,0,1,2"))
                           (rule "polySimp_elimNeg" (formula "3") (term "1,0,1,1"))
                           (rule "polySimp_elimNeg" (formula "1") (term "0,0"))
                           (rule "polySimp_elimNeg" (formula "12") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "12") (term "1,1"))
                           (rule "polySimp_mulComm0" (formula "3") (term "0,1"))
                           (rule "polySimp_mulComm0" (formula "3") (term "1,1,1"))
                           (rule "polySimp_mulComm0" (formula "3") (term "0,2"))
                           (rule "polySimp_mulComm0" (formula "3") (term "1,0,1,0,1,2"))
                           (rule "polySimp_mulComm0" (formula "3") (term "1,0,1,1"))
                           (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "12") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "3") (term "1,0,1,2"))
                           (rule "polySimp_mulComm0" (formula "3") (term "1,1,1,0,1,1"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0"))
                           (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "12") (term "0"))
                           (rule "polySimp_addComm0" (formula "12") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "3") (term "1,0,1,2"))
                           (rule "polySimp_mulComm0" (formula "3") (term "0,1,0,1,2"))
                           (rule "polySimp_rightDist" (formula "3") (term "1,0,1,1"))
                           (rule "polySimp_mulComm0" (formula "3") (term "0,1,0,1,1"))
                           (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "1") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "12") (term "0"))
                           (rule "polySimp_mulComm1" (formula "12") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "12") (term "0,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "12") (term "0,0,0,0,1,0"))
                           (rule "inEqSimp_gtToGeq" (formula "10"))
                           (rule "times_zero_1" (formula "10") (term "1,0,0"))
                           (rule "add_zero_right" (formula "10") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "3") (term "0,1,2"))
                           (rule "polySimp_addComm1" (formula "3") (term "1,2"))
                           (rule "polySimp_addComm1" (formula "3") (term "0,1,2"))
                           (rule "polySimp_addAssoc" (formula "3") (term "0,1,1"))
                           (rule "polySimp_addComm1" (formula "3") (term "1,1"))
                           (rule "polySimp_addComm1" (formula "3") (term "0,1,1"))
                           (rule "inEqSimp_ltRight" (formula "12"))
                           (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "1") (term "0,0,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0"))
                           (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "1") (term "0,0,0"))
                           (rule "inEqSimp_homoInEq1" (formula "4") (term "2"))
                           (rule "polySimp_addComm1" (formula "4") (term "0,2"))
                           (rule "inEqSimp_homoInEq1" (formula "4") (term "1"))
                           (rule "polySimp_addComm1" (formula "4") (term "0,1"))
                           (rule "applyEq" (formula "1") (term "0,0,1,0") (ifseqformula "2"))
                           (rule "polySimp_mulComm0" (formula "1") (term "0,1,0"))
                           (rule "polySimp_addComm1" (formula "1") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                           (rule "mul_literals" (formula "11") (term "1"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "4") (term "2"))
                           (rule "polySimp_mulLiterals" (formula "4") (term "0,2"))
                           (rule "polySimp_elimOne" (formula "4") (term "0,2"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "4") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "4") (term "0,1"))
                           (rule "polySimp_elimOne" (formula "4") (term "0,1"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                           (rule "polySimp_elimOne" (formula "1") (term "0"))
                           (rule "inEqSimp_subsumption1" (formula "4") (term "0") (ifseqformula "11"))
                           (rule "leq_literals" (formula "4") (term "0,0"))
                            (builtin "One Step Simplification" (formula "4"))
                           (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "1"))
                           (rule "andLeft" (formula "4"))
                           (rule "inEqSimp_homoInEq1" (formula "4"))
                           (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                           (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0"))
                           (rule "polySimp_elimOne" (formula "4") (term "1,1,0"))
                           (rule "polySimp_rightDist" (formula "4") (term "0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1,0"))
                           (rule "polySimp_elimOne" (formula "4") (term "1,0,1,0"))
                           (rule "polySimp_mulAssoc" (formula "4") (term "0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "4") (term "0,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "4") (term "0,0,1,0"))
                           (rule "polySimp_elimOne" (formula "4") (term "0,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "4") (term "0"))
                           (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                           (rule "polySimp_pullOutFactor2b" (formula "4") (term "0"))
                           (rule "add_literals" (formula "4") (term "1,1,0"))
                           (rule "times_zero_1" (formula "4") (term "1,0"))
                           (rule "add_zero_right" (formula "4") (term "0"))
                           (rule "polySimp_addAssoc" (formula "4") (term "0"))
                           (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                           (rule "polySimp_pullOutFactor2b" (formula "4") (term "0"))
                           (rule "add_literals" (formula "4") (term "1,1,0"))
                           (rule "times_zero_1" (formula "4") (term "1,0"))
                           (rule "add_zero_right" (formula "4") (term "0"))
                           (rule "polySimp_pullOutFactor2b" (formula "4") (term "0"))
                           (rule "add_literals" (formula "4") (term "1,1,0"))
                           (rule "times_zero_1" (formula "4") (term "1,0"))
                           (rule "add_zero_right" (formula "4") (term "0"))
                           (rule "leq_literals" (formula "4"))
                           (rule "closeFalse" (formula "4"))
                        )
                     )
                  )
                  (branch
                     (rule "sub" (formula "8") (term "0,0") (userinteraction))
                     (rule "switch_brackets" (formula "8") (term "0,0") (userinteraction))
                     (rule "add_sub_elim_right" (formula "8") (term "1,0,0") (userinteraction))
                     (rule "add_zero_right" (formula "8") (term "0,0") (userinteraction))
                     (rule "mul_distribute_5" (formula "8") (term "0") (userinteraction))
                     (rule "cut" (inst "cutFormula=lt(mul(v_D_0, jdiv(v_N_0, v_D_0)), v_N_0)") (userinteraction))
                     (branch "CUT: v_D_0 * jdiv(v_N_0, v_D_0) < v_N_0 TRUE"
                        (rule "polySimp_mulComm0" (formula "1") (term "0"))
                        (rule "polySimp_mulComm0" (formula "9") (term "0,0"))
                        (rule "polySimp_mulComm0" (formula "9") (term "1,1"))
                        (rule "polySimp_addComm0" (formula "9") (term "0"))
                        (rule "inEqSimp_ltRight" (formula "9"))
                        (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                        (rule "polySimp_mulComm0" (formula "1") (term "0,0,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0"))
                        (rule "polySimp_pullOutFactor2b" (formula "1") (term "0,0"))
                        (rule "add_literals" (formula "1") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "1") (term "1,0,0"))
                        (rule "add_zero_right" (formula "1") (term "0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "2"))
                        (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                        (rule "polySimp_elimOne" (formula "1") (term "1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                        (rule "polySimp_mulComm0" (formula "2") (term "1"))
                        (rule "polySimp_rightDist" (formula "2") (term "1"))
                        (rule "mul_literals" (formula "2") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                        (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "2"))
                        (rule "andLeft" (formula "1"))
                        (rule "inEqSimp_homoInEq1" (formula "1"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                        (rule "mul_literals" (formula "1") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0"))
                        (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                        (rule "add_literals" (formula "1") (term "1,1,0"))
                        (rule "times_zero_1" (formula "1") (term "1,0"))
                        (rule "add_zero_right" (formula "1") (term "0"))
                        (rule "leq_literals" (formula "1"))
                        (rule "closeFalse" (formula "1"))
                     )
                     (branch "CUT: v_D_0 * jdiv(v_N_0, v_D_0) < v_N_0 FALSE"
                        (rule "jdiv_axiom_inline" (formula "8") (term "1,0") (userinteraction))
                        (rule "replace_known_left" (formula "8") (term "0,1,0") (ifseqformula "5") (userinteraction))
                         (builtin "One Step Simplification" (formula "8"))
                        (rule "div_axiom" (formula "8") (term "1,0") (inst "quotient=quotient_0") (userinteraction))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "13") (userinteraction))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "andLeft" (formula "1"))
                        (rule "andLeft" (formula "1"))
                        (rule "applyEqRigid" (formula "11") (term "1,0") (ifseqformula "1") (userinteraction))
                        (rule "hide_left" (formula "1") (userinteraction))
                        (rule "insert_hidden_taclet11000011_0" (userinteraction))
                        (rule "cut" (inst "cutFormula=mul(quotient_0, v_D_0) = v_N_0") (userinteraction))
                        (branch "CUT: quotient_0 * v_D_0 = v_N_0 TRUE"
                           (rule "jdiv_axiom_inline" (formula "15") (term "0,1") (userinteraction))
                           (rule "replace_known_left" (formula "15") (term "0,0,1") (ifseqformula "9") (userinteraction))
                            (builtin "One Step Simplification" (formula "15"))
                           (rule "applyEqRigid" (formula "15") (term "0,1") (ifseqformula "2") (userinteraction))
                           (rule "eqSymm" (formula "15") (userinteraction))
                           (rule "close" (formula "15") (ifseqformula "1") (userinteraction))
                        )
                        (branch "CUT: quotient_0 * v_D_0 = v_N_0 FALSE"
                           (rule "polySimp_mulComm0" (formula "2") (term "0"))
                           (rule "polySimp_mulComm0" (formula "11") (term "0"))
                           (rule "inEqSimp_ltRight" (formula "12"))
                           (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                           (rule "polySimp_elimOne" (formula "1") (term "1"))
                           (rule "inEqSimp_strengthen0" (formula "3") (ifseqformula "12"))
                           (rule "inEqSimp_contradInEq1" (formula "3") (ifseqformula "1"))
                           (rule "andLeft" (formula "3"))
                           (rule "inEqSimp_homoInEq1" (formula "3"))
                           (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                           (rule "mul_literals" (formula "3") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "3") (term "0"))
                           (rule "polySimp_addComm0" (formula "3") (term "0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                           (rule "add_literals" (formula "3") (term "1,1,0"))
                           (rule "times_zero_1" (formula "3") (term "1,0"))
                           (rule "add_zero_right" (formula "3") (term "0"))
                           (rule "leq_literals" (formula "3"))
                           (rule "closeFalse" (formula "3"))
                        )
                     )
                  )
               )
               (branch
                  (rule "close" (formula "12") (ifseqformula "1"))
               )
            )
            (branch
               (rule "close" (formula "4") (ifseqformula "2"))
            )
         )
         (branch
            (rule "replace_known_right" (formula "1") (term "1") (ifseqformula "3") (userinteraction))
             (builtin "One Step Simplification" (formula "1"))
            (rule "notLeft" (formula "1") (userinteraction))
            (rule "jdiv_uniquePosNeg" (formula "7") (term "0") (inst "a=a") (inst "cnom=cnom") (inst "x=x") (inst "y=y") (userinteraction))
            (rule "instAll" (formula "8") (term "0,0") (ifseqformula "1") (userinteraction))
            (rule "instAll" (formula "9") (term "1,0") (ifseqformula "1") (userinteraction))
            (rule "instAll" (formula "10") (term "0") (ifseqformula "1") (userinteraction))
            (rule "instAll" (formula "11") (term "1") (ifseqformula "1") (userinteraction))
            (rule "impLeft" (formula "1") (userinteraction))
            (branch
               (rule "cut_direct" (formula "5") (term "0,0,0,0,0") (userinteraction))
               (branch "CUT: v_N_0 + v_A_0 * v_D_0 >= 0 TRUE"
                  (rule "cut_direct" (formula "6") (term "1,0,0,0,0") (userinteraction))
                  (branch "CUT: v_D_0 < 0 TRUE"
                      (builtin "One Step Simplification" (formula "7"))
                     (rule "andRight" (formula "7") (userinteraction))
                     (branch
                        (rule "andRight" (formula "7") (userinteraction))
                        (branch
                           (rule "andRight" (formula "7") (userinteraction))
                           (branch
                              (rule "jdiv_axiom_inline" (formula "7") (term "0,0") (userinteraction))
                              (rule "replace_known_left" (formula "7") (term "0,0,0") (ifseqformula "2") (userinteraction))
                               (builtin "One Step Simplification" (formula "7"))
                              (rule "div_axiom" (formula "7") (term "0,0") (inst "quotient=quotient_0") (userinteraction))
                              (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "14") (userinteraction))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "andLeft" (formula "1"))
                              (rule "andLeft" (formula "1"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1,1"))
                              (rule "polySimp_mulComm0" (formula "2") (term "0"))
                              (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "10") (term "1,1"))
                              (rule "inEqSimp_leqRight" (formula "10"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                              (rule "inEqSimp_homoInEq0" (formula "3"))
                              (rule "polySimp_addComm1" (formula "3") (term "0"))
                              (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "2"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                              (rule "polySimp_mulComm0" (formula "3") (term "1"))
                              (rule "polySimp_rightDist" (formula "3") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                              (rule "polySimp_mulComm0" (formula "3") (term "0,1"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                              (rule "polySimp_elimOne" (formula "1") (term "0"))
                              (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "1"))
                              (rule "andLeft" (formula "3"))
                              (rule "inEqSimp_homoInEq1" (formula "3"))
                              (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "3") (term "0,1,0"))
                              (rule "mul_literals" (formula "3") (term "0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,0"))
                              (rule "polySimp_elimOne" (formula "3") (term "1,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "3") (term "0"))
                              (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                              (rule "add_literals" (formula "3") (term "1,1,0"))
                              (rule "times_zero_1" (formula "3") (term "1,0"))
                              (rule "add_zero_right" (formula "3") (term "0"))
                              (rule "polySimp_addAssoc" (formula "3") (term "0"))
                              (rule "polySimp_addComm0" (formula "3") (term "0,0"))
                              (rule "polySimp_pullOutFactor2b" (formula "3") (term "0"))
                              (rule "add_literals" (formula "3") (term "1,1,0"))
                              (rule "times_zero_1" (formula "3") (term "1,0"))
                              (rule "add_zero_right" (formula "3") (term "0"))
                              (rule "leq_literals" (formula "3"))
                              (rule "closeFalse" (formula "3"))
                           )
                           (branch
                              (rule "jdiv_axiom_inline" (formula "7") (term "0,0,0,0") (userinteraction))
                              (rule "replace_known_right" (formula "7") (term "0,0,0,0,0") (ifseqformula "9") (userinteraction))
                               (builtin "One Step Simplification" (formula "7"))
                              (rule "times_minus_one_1" (formula "7") (term "0,0,0,0,0,0") (userinteraction))
                              (rule "times_minus_one_1" (formula "7") (term "0,0,0,0") (userinteraction))
                              (rule "div_axiom" (formula "7") (term "0,0,0,0,0") (inst "quotient=quotient_0") (userinteraction))
                              (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "14"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "andLeft" (formula "1"))
                              (rule "andLeft" (formula "1"))
                              (rule "polySimp_elimNeg" (formula "10") (term "0,0,0,0"))
                              (rule "polySimp_elimNeg" (formula "3") (term "1,0,1,1"))
                              (rule "polySimp_elimNeg" (formula "3") (term "1,0,1,2"))
                              (rule "polySimp_elimNeg" (formula "1") (term "0,0"))
                              (rule "polySimp_elimNeg" (formula "10") (term "0,0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "10") (term "1,1"))
                              (rule "polySimp_mulComm0" (formula "3") (term "0,1"))
                              (rule "polySimp_mulComm0" (formula "3") (term "1,1,1"))
                              (rule "polySimp_mulComm0" (formula "3") (term "0,2"))
                              (rule "polySimp_mulComm0" (formula "10") (term "0"))
                              (rule "polySimp_addComm1" (formula "3") (term "1,2"))
                              (rule "polySimp_addComm1" (formula "3") (term "1,1"))
                              (rule "polySimp_addComm1" (formula "10") (term "1,0"))
                              (rule "polySimp_addComm0" (formula "10") (term "0,1,0"))
                              (rule "polySimp_addComm1" (formula "10") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "10") (term "0"))
                              (rule "polySimp_mulComm1" (formula "10") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "10") (term "0,0"))
                              (rule "polySimp_elimOne" (formula "10") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "10") (term "1,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "4"))
                              (rule "times_zero_1" (formula "4") (term "1,0,0"))
                              (rule "add_zero_right" (formula "4") (term "0,0"))
                              (rule "inEqSimp_leqRight" (formula "10"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                              (rule "polySimp_pullOutFactor2b" (formula "1") (term "0,0"))
                              (rule "add_literals" (formula "1") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "1") (term "1,0,0"))
                              (rule "add_zero_right" (formula "1") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                              (rule "applyEqRigid" (formula "1") (term "0,0,1,0") (ifseqformula "2"))
                              (rule "polySimp_mulComm0" (formula "1") (term "0,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                              (rule "mul_literals" (formula "5") (term "1"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                              (rule "polySimp_elimOne" (formula "1") (term "0"))
                              (rule "inEqSimp_contradInEq0" (formula "4") (term "0") (ifseqformula "5"))
                              (rule "qeq_literals" (formula "4") (term "0,0"))
                               (builtin "One Step Simplification" (formula "4"))
                              (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "4"))
                              (rule "andLeft" (formula "1"))
                              (rule "inEqSimp_homoInEq1" (formula "1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                              (rule "polySimp_elimOne" (formula "1") (term "1,1,0"))
                              (rule "polySimp_rightDist" (formula "1") (term "0,1,0"))
                              (rule "mul_literals" (formula "1") (term "0,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                              (rule "polySimp_pullOutFactor2b" (formula "1") (term "0"))
                              (rule "add_literals" (formula "1") (term "1,1,0"))
                              (rule "times_zero_1" (formula "1") (term "1,0"))
                              (rule "add_zero_right" (formula "1") (term "0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                              (rule "add_literals" (formula "1") (term "0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                              (rule "add_literals" (formula "1") (term "1,1,0"))
                              (rule "times_zero_1" (formula "1") (term "1,0"))
                              (rule "add_zero_right" (formula "1") (term "0"))
                              (rule "leq_literals" (formula "1"))
                              (rule "closeFalse" (formula "1"))
                           )
                        )
                        (branch
                           (rule "jdiv_axiom_inline" (formula "7") (term "0,0,0") (userinteraction))
                           (rule "replace_known_left" (formula "7") (term "0,0,0,0") (ifseqformula "2") (userinteraction))
                            (builtin "One Step Simplification" (formula "7"))
                           (rule "sub" (formula "7") (term "0,0") (userinteraction))
                           (rule "polySimp_addComm0" (formula "7") (term "0,0") (userinteraction))
                           (rule "neg_literal" (formula "7") (term "0,0,0") (userinteraction))
                           (rule "div_axiom" (formula "7") (term "1,0,0") (inst "quotient=quotient_0") (userinteraction))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "14") (userinteraction))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "andLeft" (formula "1"))
                           (rule "andLeft" (formula "1"))
                           (rule "cut_direct" (formula "3") (term "0") (userinteraction))
                           (branch "CUT: v_D_0 >= 0 TRUE"
                              (rule "inEqSimp_ltToLeq" (formula "5"))
                              (rule "times_zero_1" (formula "5") (term "1,0,0"))
                              (rule "add_zero_right" (formula "5") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                              (rule "mul_literals" (formula "5") (term "1"))
                              (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "5"))
                              (rule "qeq_literals" (formula "3") (term "0"))
                               (builtin "One Step Simplification" (formula "3"))
                              (rule "closeFalse" (formula "3"))
                           )
                           (branch "CUT: v_D_0 >= 0 FALSE"
                               (builtin "One Step Simplification" (formula "3"))
                              (rule "polySimp_mulComm0" (formula "3") (term "0"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "11") (term "0"))
                              (rule "polySimp_mulComm0" (formula "3") (term "1,1,0,1"))
                              (rule "polySimp_mulComm0" (formula "11") (term "1,1"))
                              (rule "polySimp_mulComm0" (formula "11") (term "1,0,1,1,0"))
                              (rule "polySimp_rightDist" (formula "11") (term "0"))
                              (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                              (rule "polySimp_addComm1" (formula "3") (term "1"))
                              (rule "polySimp_addComm1" (formula "3") (term "0,1"))
                              (rule "inEqSimp_gtRight" (formula "11"))
                              (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "1") (term "0,0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                              (rule "polySimp_addComm0" (formula "1") (term "0,0,0"))
                              (rule "inEqSimp_homoInEq1" (formula "4"))
                              (rule "polySimp_addComm1" (formula "4") (term "0"))
                              (rule "applyEqRigid" (formula "1") (term "0,1,0") (ifseqformula "2"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                              (rule "polySimp_mulComm0" (formula "4") (term "1"))
                              (rule "polySimp_rightDist" (formula "4") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                              (rule "polySimp_rightDist" (formula "4") (term "0,1"))
                              (rule "polySimp_rightDist" (formula "4") (term "0,0,1"))
                              (rule "mul_literals" (formula "4") (term "0,0,0,1"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                              (rule "polySimp_elimOne" (formula "1") (term "0"))
                              (rule "inEqSimp_contradInEq1" (formula "4") (ifseqformula "1"))
                              (rule "andLeft" (formula "4"))
                              (rule "inEqSimp_homoInEq1" (formula "4"))
                              (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "4") (term "0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1,0"))
                              (rule "polySimp_elimOne" (formula "4") (term "1,0,1,0"))
                              (rule "polySimp_rightDist" (formula "4") (term "0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,1,0"))
                              (rule "mul_literals" (formula "4") (term "0,0,0,1,0"))
                              (rule "polySimp_elimOne" (formula "4") (term "1,0,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "4") (term "0"))
                              (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                              (rule "add_literals" (formula "4") (term "1,1,0"))
                              (rule "times_zero_1" (formula "4") (term "1,0"))
                              (rule "add_zero_right" (formula "4") (term "0"))
                              (rule "polySimp_addAssoc" (formula "4") (term "0"))
                              (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                              (rule "polySimp_pullOutFactor2b" (formula "4") (term "0"))
                              (rule "add_literals" (formula "4") (term "1,1,0"))
                              (rule "times_zero_1" (formula "4") (term "1,0"))
                              (rule "add_zero_right" (formula "4") (term "0"))
                              (rule "polySimp_addAssoc" (formula "4") (term "0"))
                              (rule "polySimp_addComm0" (formula "4") (term "0,0"))
                              (rule "polySimp_pullOutFactor2b" (formula "4") (term "0"))
                              (rule "add_literals" (formula "4") (term "1,1,0"))
                              (rule "times_zero_1" (formula "4") (term "1,0"))
                              (rule "add_zero_right" (formula "4") (term "0"))
                              (rule "leq_literals" (formula "4"))
                              (rule "closeFalse" (formula "4"))
                           )
                        )
                     )
                     (branch
                        (rule "jdiv_axiom_inline" (formula "7") (term "0,0,0,0,0") (userinteraction))
                        (rule "replace_known_right" (formula "7") (term "0,0,0,0,0,0") (ifseqformula "9") (userinteraction))
                         (builtin "One Step Simplification" (formula "7"))
                        (rule "times_minus_one_1" (formula "7") (term "0,0,0,0,0,0,0") (userinteraction))
                        (rule "times_minus_one_1" (formula "7") (term "0,0,0,0,0") (userinteraction))
                        (rule "sub" (formula "7") (term "0,0") (userinteraction))
                        (rule "neg_literal" (formula "7") (term "1,0,0") (userinteraction))
                        (rule "switch_brackets" (formula "7") (term "0,0") (userinteraction))
                        (rule "add_literals" (formula "7") (term "1,0,0") (userinteraction))
                        (rule "add_zero_right" (formula "7") (term "0,0") (userinteraction))
                        (rule "mul_distribute_5" (formula "7") (term "0") (userinteraction))
                        (rule "mul_comm" (formula "7") (term "1,1") (userinteraction))
                        (rule "cut" (inst "cutFormula=gt(mul(v_D_0, neg(div(neg(v_N_0), v_D_0))), v_N_0)") (userinteraction))
                        (branch "CUT: v_D_0 * -(-v_N_0 / v_D_0) > v_N_0 TRUE"
                           (rule "polySimp_elimNeg" (formula "8") (term "1,0,0"))
                           (rule "polySimp_elimNeg" (formula "1") (term "1,0"))
                           (rule "polySimp_elimNeg" (formula "8") (term "0,0,1,0,0"))
                           (rule "polySimp_elimNeg" (formula "1") (term "0,0,1,0"))
                           (rule "polySimp_mulAssoc" (formula "8") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "8") (term "0,0,0"))
                           (rule "polySimp_mulAssoc" (formula "1") (term "0"))
                           (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "8") (term "0"))
                           (rule "inEqSimp_gtRight" (formula "8"))
                           (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "1") (term "0,0,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0"))
                           (rule "polySimp_pullOutFactor2b" (formula "1") (term "0,0"))
                           (rule "add_literals" (formula "1") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "1") (term "1,0,0"))
                           (rule "add_zero_right" (formula "1") (term "0,0"))
                           (rule "inEqSimp_gtToGeq" (formula "2"))
                           (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                           (rule "polySimp_elimOne" (formula "1") (term "0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                           (rule "polySimp_elimOne" (formula "2") (term "0"))
                           (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "2"))
                           (rule "andLeft" (formula "1"))
                           (rule "inEqSimp_homoInEq1" (formula "1"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                           (rule "mul_literals" (formula "1") (term "0,1,0"))
                           (rule "polySimp_elimOne" (formula "1") (term "1,1,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0"))
                           (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                           (rule "polySimp_pullOutFactor2b" (formula "1") (term "0"))
                           (rule "add_literals" (formula "1") (term "1,1,0"))
                           (rule "times_zero_1" (formula "1") (term "1,0"))
                           (rule "add_zero_right" (formula "1") (term "0"))
                           (rule "leq_literals" (formula "1"))
                           (rule "closeFalse" (formula "1"))
                        )
                        (branch "CUT: v_D_0 * -(-v_N_0 / v_D_0) > v_N_0 FALSE"
                           (rule "div_axiom" (formula "7") (term "0,1,0") (inst "quotient=quotient_0") (userinteraction))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "15") (userinteraction))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "andLeft" (formula "1"))
                           (rule "andLeft" (formula "1"))
                           (rule "applyEqRigid" (formula "10") (term "0,1,0") (ifseqformula "1") (userinteraction))
                           (rule "mul_comm" (formula "10") (term "0") (userinteraction))
                           (rule "jdiv_axiom_inline" (formula "16") (term "0,1") (userinteraction))
                           (rule "replace_known_right" (formula "16") (term "0,0,1") (ifseqformula "13") (userinteraction))
                            (builtin "One Step Simplification" (formula "16"))
                           (rule "times_minus_one_1" (formula "16") (term "0,0,0,1") (userinteraction))
                           (rule "times_minus_one_1" (formula "16") (term "0,1") (userinteraction))
                           (rule "applyEqRigid" (formula "16") (term "0,0,1") (ifseqformula "1") (userinteraction))
                           (rule "eqSymm" (formula "16"))
                           (rule "polySimp_elimNeg" (formula "10") (term "0,0"))
                           (rule "polySimp_elimNeg" (formula "2") (term "1"))
                           (rule "polySimp_elimNeg" (formula "16") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "2") (term "0"))
                           (rule "polySimp_mulComm1" (formula "10") (term "0"))
                           (rule "polySimp_mulComm1" (formula "16") (term "0"))
                           (rule "polySimp_homoEq" (formula "16"))
                           (rule "polySimp_mulLiterals" (formula "16") (term "1,0"))
                           (rule "polySimp_elimOne" (formula "16") (term "1,0"))
                           (rule "polySimp_mulComm0" (formula "10") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "16") (term "1,0"))
                           (rule "inEqSimp_gtRight" (formula "10"))
                           (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                           (rule "polySimp_sepPosMonomial" (formula "16"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                           (rule "polySimp_elimOne" (formula "1") (term "0"))
                           (rule "inEqSimp_strengthen0" (formula "3") (ifseqformula "16"))
                           (rule "inEqSimp_contradInEq1" (formula "3") (ifseqformula "1"))
                           (rule "andLeft" (formula "3"))
                           (rule "inEqSimp_homoInEq1" (formula "3"))
                           (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                           (rule "mul_literals" (formula "3") (term "0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0"))
                           (rule "polySimp_elimOne" (formula "3") (term "1,1,0"))
                           (rule "polySimp_addAssoc" (formula "3") (term "0"))
                           (rule "polySimp_addComm0" (formula "3") (term "0,0"))
                           (rule "polySimp_pullOutFactor2b" (formula "3") (term "0"))
                           (rule "add_literals" (formula "3") (term "1,1,0"))
                           (rule "times_zero_1" (formula "3") (term "1,0"))
                           (rule "add_zero_right" (formula "3") (term "0"))
                           (rule "leq_literals" (formula "3"))
                           (rule "closeFalse" (formula "3"))
                        )
                     )
                  )
                  (branch "CUT: v_D_0 < 0 FALSE"
                     (rule "inEqSimp_gtRight" (formula "8"))
                     (rule "times_zero_1" (formula "1") (term "0,0"))
                     (rule "add_zero_left" (formula "1") (term "0"))
                     (rule "inEqSimp_ltRight" (formula "7"))
                     (rule "times_zero_1" (formula "1") (term "0,0"))
                     (rule "add_zero_left" (formula "1") (term "0"))
                     (rule "inEqSimp_strengthen1" (formula "1") (ifseqformula "13"))
                     (rule "add_zero_right" (formula "1") (term "1"))
                     (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "2"))
                     (rule "qeq_literals" (formula "1") (term "0"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "closeFalse" (formula "1"))
                  )
               )
               (branch "CUT: v_N_0 + v_A_0 * v_D_0 >= 0 FALSE"
                  (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                  (rule "inEqSimp_ltRight" (formula "9"))
                  (rule "times_zero_1" (formula "1") (term "0,0"))
                  (rule "add_zero_left" (formula "1") (term "0"))
                  (rule "close" (formula "6") (ifseqformula "1"))
               )
            )
            (branch
               (rule "close" (formula "12") (ifseqformula "1"))
            )
         )
      )
      (branch "CUT: (v_N_0 >= 0 <-> v_N_0 + v_D_0 * v_A_0 < 0) & (v_D_0 > 0 <-> v_N_0 + v_D_0 * v_A_0 < 0) FALSE"
         (rule "replace_known_right" (formula "5") (term "0,1") (ifseqformula "1") (userinteraction))
          (builtin "One Step Simplification" (formula "5"))
         (rule "equiv_right" (formula "2") (userinteraction))
         (branch "Case '->'"
            (rule "replace_known_left" (formula "2") (term "0,0") (ifseqformula "1") (userinteraction))
             (builtin "One Step Simplification" (formula "2"))
            (rule "cut_direct" (formula "2") (term "1,1") (userinteraction))
            (branch "CUT: v_N_0 + v_D_0 * v_A_0 < 0 TRUE"
                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "1")))
               (rule "jdiv_uniqueNegNeg" (formula "7") (term "0") (inst "a=a") (inst "cnom=cnom") (inst "x=x") (inst "y=y") (userinteraction))
               (rule "instAll" (formula "8") (term "0,0") (ifseqformula "1") (userinteraction))
               (rule "instAll" (formula "9") (term "1,0") (ifseqformula "1") (userinteraction))
               (rule "instAll" (formula "10") (term "0") (ifseqformula "1") (userinteraction))
               (rule "sub" (formula "11") (term "1") (userinteraction))
               (rule "neg_literal" (formula "11") (term "1,1") (userinteraction))
               (rule "instAll" (formula "11") (term "1") (ifseqformula "1") (userinteraction))
               (rule "impLeft" (formula "1") (userinteraction))
               (branch
                  (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0,0,0") (userinteraction))
                  (rule "replace_known_left" (formula "7") (term "0,0,0,0,0") (ifseqformula "5") (userinteraction))
                  (rule "cut_direct" (formula "7") (term "1,0,0,0,0") (userinteraction))
                  (branch "CUT: v_D_0 < 0 TRUE"
                      (builtin "One Step Simplification" (formula "8"))
                     (rule "andRight" (formula "8") (userinteraction))
                     (branch
                        (rule "andRight" (formula "8") (userinteraction))
                        (branch
                           (rule "andRight" (formula "8") (userinteraction))
                           (branch
                              (rule "jdiv_axiom_inline" (formula "8") (term "0,0") (userinteraction))
                              (rule "cut_direct" (formula "8") (term "0,0,0") (userinteraction))
                              (branch "CUT: v_N_0 + v_A_0 * v_D_0 >= 0 TRUE"
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                 (rule "close" (formula "11") (ifseqformula "1"))
                              )
                              (branch "CUT: v_N_0 + v_A_0 * v_D_0 >= 0 FALSE"
                                  (builtin "One Step Simplification" (formula "9"))
                                 (rule "times_minus_one_1" (formula "9") (term "0,0,0,0") (userinteraction))
                                 (rule "times_minus_one_1" (formula "9") (term "0,0") (userinteraction))
                                 (rule "div_axiom" (formula "9") (term "0,0,0") (inst "quotient=quotient_0") (userinteraction))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "14") (userinteraction))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "polySimp_elimNeg" (formula "1") (term "0,0"))
                                 (rule "polySimp_elimNeg" (formula "2") (term "1"))
                                 (rule "polySimp_elimNeg" (formula "12") (term "0,0"))
                                 (rule "polySimp_elimNeg" (formula "12") (term "0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "12") (term "1,1"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "1,0,1"))
                                 (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "12") (term "0,0,0,0"))
                                 (rule "polySimp_mulComm1" (formula "12") (term "0"))
                                 (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "2") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "0,1"))
                                 (rule "polySimp_rightDist" (formula "12") (term "0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "12") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_geqRight" (formula "12"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "3"))
                                 (rule "polySimp_addComm1" (formula "3") (term "0"))
                                 (rule "applyEqRigid" (formula "1") (term "0,0,1,0") (ifseqformula "2"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "0,1,0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                 (rule "polySimp_elimOne" (formula "3") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "0"))
                                 (rule "inEqSimp_contradInEq1" (formula "3") (ifseqformula "1"))
                                 (rule "andLeft" (formula "3"))
                                 (rule "inEqSimp_homoInEq1" (formula "3"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0"))
                                 (rule "polySimp_elimOne" (formula "3") (term "1,1,0"))
                                 (rule "polySimp_mulAssoc" (formula "3") (term "0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "0,1,0"))
                                 (rule "polySimp_elimOne" (formula "3") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                 (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                 (rule "polySimp_pullOutFactor2b" (formula "3") (term "0"))
                                 (rule "add_literals" (formula "3") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "3") (term "1,0"))
                                 (rule "add_zero_right" (formula "3") (term "0"))
                                 (rule "polySimp_pullOutFactor2b" (formula "3") (term "0"))
                                 (rule "add_literals" (formula "3") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "3") (term "1,0"))
                                 (rule "add_zero_right" (formula "3") (term "0"))
                                 (rule "leq_literals" (formula "3"))
                                 (rule "closeFalse" (formula "3"))
                              )
                           )
                           (branch
                              (rule "jdiv_axiom_inline" (formula "8") (term "0,0,0,0") (userinteraction))
                              (rule "replace_known_left" (formula "8") (term "0,0,0,0,0") (ifseqformula "7") (userinteraction))
                               (builtin "One Step Simplification" (formula "8"))
                              (rule "div_axiom" (formula "8") (term "0,0,0,0") (inst "quotient=quotient_0") (userinteraction))
                              (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "13") (userinteraction))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "andLeft" (formula "1"))
                              (rule "andLeft" (formula "1"))
                              (rule "polySimp_mulComm0" (formula "3") (term "0,1"))
                              (rule "polySimp_mulComm0" (formula "3") (term "1,1,1"))
                              (rule "polySimp_mulComm0" (formula "3") (term "0,2"))
                              (rule "polySimp_mulComm0" (formula "11") (term "0"))
                              (rule "polySimp_mulComm0" (formula "11") (term "1,1"))
                              (rule "polySimp_addComm1" (formula "3") (term "1,2"))
                              (rule "polySimp_addComm1" (formula "3") (term "1,1"))
                              (rule "polySimp_addComm1" (formula "11") (term "1,0"))
                              (rule "polySimp_addComm0" (formula "11") (term "0,1,0"))
                              (rule "polySimp_addComm1" (formula "11") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "11") (term "0"))
                              (rule "polySimp_rightDist" (formula "11") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "11") (term "1,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "4"))
                              (rule "times_zero_1" (formula "4") (term "1,0,0"))
                              (rule "add_zero_right" (formula "4") (term "0,0"))
                              (rule "inEqSimp_geqRight" (formula "11"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                              (rule "polySimp_pullOutFactor2b" (formula "1") (term "0,0"))
                              (rule "add_literals" (formula "1") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "1") (term "1,0,0"))
                              (rule "add_zero_right" (formula "1") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                              (rule "applyEqRigid" (formula "1") (term "0,1,0") (ifseqformula "2"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                              (rule "mul_literals" (formula "5") (term "1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1"))
                              (rule "polySimp_rightDist" (formula "1") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                              (rule "polySimp_rightDist" (formula "1") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1"))
                              (rule "mul_literals" (formula "1") (term "0,0,1"))
                              (rule "polySimp_elimOne" (formula "1") (term "1,0,1"))
                              (rule "inEqSimp_contradInEq0" (formula "4") (term "0") (ifseqformula "5"))
                              (rule "qeq_literals" (formula "4") (term "0,0"))
                               (builtin "One Step Simplification" (formula "4"))
                              (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "4"))
                              (rule "andLeft" (formula "1"))
                              (rule "inEqSimp_homoInEq1" (formula "1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "1") (term "0,1,0"))
                              (rule "mul_literals" (formula "1") (term "0,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                              (rule "add_literals" (formula "1") (term "1,1,0"))
                              (rule "times_zero_1" (formula "1") (term "1,0"))
                              (rule "add_zero_right" (formula "1") (term "0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                              (rule "add_literals" (formula "1") (term "0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                              (rule "add_literals" (formula "1") (term "1,1,0"))
                              (rule "times_zero_1" (formula "1") (term "1,0"))
                              (rule "add_zero_right" (formula "1") (term "0"))
                              (rule "leq_literals" (formula "1"))
                              (rule "closeFalse" (formula "1"))
                           )
                        )
                        (branch
                           (rule "jdiv_axiom_inline" (formula "8") (term "0,0,0") (userinteraction))
                           (rule "cut_direct" (formula "8") (term "0,0,0,0") (userinteraction))
                           (branch "CUT: v_N_0 + v_A_0 * v_D_0 >= 0 TRUE"
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                              (rule "close" (formula "11") (ifseqformula "1"))
                           )
                           (branch "CUT: v_N_0 + v_A_0 * v_D_0 >= 0 FALSE"
                               (builtin "One Step Simplification" (formula "9"))
                              (rule "times_minus_one_1" (formula "9") (term "0,0,0,0,0") (userinteraction))
                              (rule "times_minus_one_1" (formula "9") (term "0,0,0") (userinteraction))
                              (rule "div_axiom" (formula "9") (term "0,0,0,0") (inst "quotient=quotient_0") (userinteraction))
                              (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "14") (userinteraction))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "andLeft" (formula "1"))
                              (rule "andLeft" (formula "1"))
                              (rule "cut_direct" (formula "3") (term "0") (userinteraction))
                              (branch "CUT: v_D_0 >= 0 TRUE"
                                 (rule "inEqSimp_ltToLeq" (formula "5"))
                                 (rule "times_zero_1" (formula "5") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "5") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                                 (rule "mul_literals" (formula "5") (term "1"))
                                 (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "5"))
                                 (rule "qeq_literals" (formula "3") (term "0"))
                                  (builtin "One Step Simplification" (formula "3"))
                                 (rule "closeFalse" (formula "3"))
                              )
                              (branch "CUT: v_D_0 >= 0 FALSE"
                                  (builtin "One Step Simplification" (formula "3"))
                                 (rule "polySimp_elimNeg" (formula "13") (term "0,0,0"))
                                 (rule "polySimp_elimNeg" (formula "3") (term "1,0,1"))
                                 (rule "polySimp_elimNeg" (formula "1") (term "0,0"))
                                 (rule "polySimp_elimNeg" (formula "13") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "13") (term "1,1"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "1,0,1,0,1"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "13") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "1,0,1"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "13") (term "0"))
                                 (rule "polySimp_addComm0" (formula "13") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "3") (term "1,0,1"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "0,1,0,1"))
                                 (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "13") (term "0"))
                                 (rule "polySimp_elimOne" (formula "13") (term "0,0"))
                                 (rule "polySimp_mulComm1" (formula "13") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "13") (term "0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "13") (term "0,0,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                                 (rule "polySimp_addComm1" (formula "3") (term "1"))
                                 (rule "polySimp_addComm1" (formula "3") (term "0,1"))
                                 (rule "inEqSimp_ltRight" (formula "13"))
                                 (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "1") (term "0,0,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "4"))
                                 (rule "polySimp_addComm1" (formula "4") (term "0"))
                                 (rule "applyEqRigid" (formula "1") (term "0,0,1,0") (ifseqformula "2"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "0,1,0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                                 (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                 (rule "polySimp_elimOne" (formula "4") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "0"))
                                 (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "1"))
                                 (rule "andLeft" (formula "4"))
                                 (rule "inEqSimp_homoInEq1" (formula "4"))
                                 (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0"))
                                 (rule "polySimp_elimOne" (formula "4") (term "1,1,0"))
                                 (rule "polySimp_rightDist" (formula "4") (term "0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "4") (term "1,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "4") (term "0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                 (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                                 (rule "polySimp_pullOutFactor2b" (formula "4") (term "0"))
                                 (rule "add_literals" (formula "4") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "4") (term "1,0"))
                                 (rule "add_zero_right" (formula "4") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                 (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,0"))
                                 (rule "add_literals" (formula "4") (term "1,1,0,0,0"))
                                 (rule "times_zero_1" (formula "4") (term "1,0,0,0"))
                                 (rule "add_zero_right" (formula "4") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor2b" (formula "4") (term "0"))
                                 (rule "add_literals" (formula "4") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "4") (term "1,0"))
                                 (rule "add_zero_right" (formula "4") (term "0"))
                                 (rule "leq_literals" (formula "4"))
                                 (rule "closeFalse" (formula "4"))
                              )
                           )
                        )
                     )
                     (branch
                        (rule "jdiv_axiom_inline" (formula "8") (term "0,0,0,0,0") (userinteraction))
                        (rule "replace_known_left" (formula "8") (term "0,0,0,0,0,0") (ifseqformula "7") (userinteraction))
                         (builtin "One Step Simplification" (formula "8"))
                        (rule "switch_brackets" (formula "8") (term "0,0") (userinteraction))
                        (rule "add_literals" (formula "8") (term "1,0,0") (userinteraction))
                        (rule "add_zero_right" (formula "8") (term "0,0") (userinteraction))
                        (rule "mul_distribute_5" (formula "8") (term "0") (userinteraction))
                        (rule "cut" (inst "cutFormula=lt(mul(v_D_0, div(v_N_0, v_D_0)), v_N_0)") (userinteraction))
                        (branch "CUT: v_D_0 * (v_N_0 / v_D_0) < v_N_0 TRUE"
                           (rule "polySimp_mulComm0" (formula "9") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "1") (term "0"))
                           (rule "polySimp_mulComm0" (formula "9") (term "1,1"))
                           (rule "polySimp_addComm0" (formula "9") (term "0"))
                           (rule "inEqSimp_ltRight" (formula "9"))
                           (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "1") (term "0,0,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0"))
                           (rule "polySimp_pullOutFactor2b" (formula "1") (term "0,0"))
                           (rule "add_literals" (formula "1") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "1") (term "1,0,0"))
                           (rule "add_zero_right" (formula "1") (term "0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "2"))
                           (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                           (rule "polySimp_elimOne" (formula "1") (term "1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                           (rule "polySimp_mulComm0" (formula "2") (term "1"))
                           (rule "polySimp_rightDist" (formula "2") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                           (rule "mul_literals" (formula "2") (term "0,1"))
                           (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                           (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "2"))
                           (rule "andLeft" (formula "1"))
                           (rule "inEqSimp_homoInEq1" (formula "1"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                           (rule "mul_literals" (formula "1") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0"))
                           (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                           (rule "add_literals" (formula "1") (term "1,1,0"))
                           (rule "times_zero_1" (formula "1") (term "1,0"))
                           (rule "add_zero_right" (formula "1") (term "0"))
                           (rule "leq_literals" (formula "1"))
                           (rule "closeFalse" (formula "1"))
                        )
                        (branch "CUT: v_D_0 * (v_N_0 / v_D_0) < v_N_0 FALSE"
                           (rule "div_axiom" (formula "8") (term "1,0") (inst "quotient=quotient_0") (userinteraction))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "14") (userinteraction))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "andLeft" (formula "1"))
                           (rule "andLeft" (formula "1"))
                           (rule "applyEqRigid" (formula "11") (term "1,0") (ifseqformula "1") (userinteraction))
                           (rule "jdiv_axiom_inline" (formula "15") (term "0,1") (userinteraction))
                           (rule "replace_known_left" (formula "15") (term "0,0,1") (ifseqformula "10") (userinteraction))
                            (builtin "One Step Simplification" (formula "15"))
                           (rule "applyEqRigid" (formula "15") (term "0,1") (ifseqformula "1") (userinteraction))
                           (rule "eqSymm" (formula "15"))
                           (rule "polySimp_mulComm0" (formula "2") (term "0"))
                           (rule "polySimp_mulComm0" (formula "15") (term "0"))
                           (rule "inEqSimp_ltRight" (formula "11"))
                           (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                           (rule "polySimp_elimOne" (formula "1") (term "1"))
                           (rule "inEqSimp_strengthen0" (formula "3") (ifseqformula "15"))
                           (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "3"))
                           (rule "andLeft" (formula "1"))
                           (rule "inEqSimp_homoInEq1" (formula "1"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                           (rule "mul_literals" (formula "1") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0"))
                           (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                           (rule "add_literals" (formula "1") (term "1,1,0"))
                           (rule "times_zero_1" (formula "1") (term "1,0"))
                           (rule "add_zero_right" (formula "1") (term "0"))
                           (rule "leq_literals" (formula "1"))
                           (rule "closeFalse" (formula "1"))
                        )
                     )
                  )
                  (branch "CUT: v_D_0 < 0 FALSE"
                     (rule "inEqSimp_gtRight" (formula "9"))
                     (rule "times_zero_1" (formula "1") (term "0,0"))
                     (rule "add_zero_left" (formula "1") (term "0"))
                     (rule "inEqSimp_ltRight" (formula "8"))
                     (rule "times_zero_1" (formula "1") (term "0,0"))
                     (rule "add_zero_left" (formula "1") (term "0"))
                     (rule "inEqSimp_strengthen1" (formula "1") (ifseqformula "12"))
                     (rule "add_zero_right" (formula "1") (term "1"))
                     (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "1"))
                     (rule "qeq_literals" (formula "2") (term "0"))
                      (builtin "One Step Simplification" (formula "2"))
                     (rule "closeFalse" (formula "2"))
                  )
               )
               (branch
                  (rule "close" (formula "12") (ifseqformula "1"))
               )
            )
            (branch "CUT: v_N_0 + v_D_0 * v_A_0 < 0 FALSE"
               (rule "inEqSimp_geqRight" (formula "4"))
               (rule "times_zero_1" (formula "1") (term "1,0,0"))
               (rule "add_zero_right" (formula "1") (term "0,0"))
               (rule "polySimp_addAssoc" (formula "1") (term "0"))
               (rule "inEqSimp_ltRight" (formula "3"))
               (rule "times_zero_1" (formula "1") (term "0,0"))
               (rule "add_zero_left" (formula "1") (term "0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "2"))
               (rule "polySimp_mulComm0" (formula "2") (term "1"))
               (rule "polySimp_rightDist" (formula "2") (term "1"))
               (rule "mul_literals" (formula "2") (term "0,1"))
               (rule "inEqSimp_sepPosMonomial1" (formula "1"))
               (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "2"))
               (rule "andLeft" (formula "1"))
               (rule "inEqSimp_homoInEq1" (formula "1"))
               (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
               (rule "polySimp_rightDist" (formula "1") (term "1,0"))
               (rule "mul_literals" (formula "1") (term "0,1,0"))
               (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
               (rule "polySimp_elimOne" (formula "1") (term "1,1,0"))
               (rule "polySimp_addAssoc" (formula "1") (term "0"))
               (rule "polySimp_addComm0" (formula "1") (term "0,0"))
               (rule "polySimp_pullOutFactor2b" (formula "1") (term "0"))
               (rule "add_literals" (formula "1") (term "1,1,0"))
               (rule "times_zero_1" (formula "1") (term "1,0"))
               (rule "add_zero_right" (formula "1") (term "0"))
               (rule "leq_literals" (formula "1"))
               (rule "closeFalse" (formula "1"))
            )
         )
         (branch "Case '<-'"
            (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "3") (userinteraction))
             (builtin "One Step Simplification" (formula "2"))
            (rule "cut_direct" (formula "2") (term "1,1") (userinteraction))
            (branch "CUT: v_N_0 + v_D_0 * v_A_0 < 0 TRUE"
               (rule "inEqSimp_ltToLeq" (formula "1"))
               (rule "times_zero_1" (formula "1") (term "1,0,0"))
               (rule "add_zero_right" (formula "1") (term "0,0"))
               (rule "polySimp_addAssoc" (formula "1") (term "0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "2"))
               (rule "inEqSimp_sepPosMonomial0" (formula "1"))
               (rule "polySimp_mulComm0" (formula "1") (term "1"))
               (rule "polySimp_rightDist" (formula "1") (term "1"))
               (rule "mul_literals" (formula "1") (term "0,1"))
               (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "1"))
               (rule "andLeft" (formula "2"))
               (rule "inEqSimp_homoInEq1" (formula "2"))
               (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
               (rule "polySimp_rightDist" (formula "2") (term "1,0"))
               (rule "mul_literals" (formula "2") (term "0,1,0"))
               (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0"))
               (rule "polySimp_elimOne" (formula "2") (term "1,1,0"))
               (rule "polySimp_addAssoc" (formula "2") (term "0"))
               (rule "polySimp_addComm0" (formula "2") (term "0,0"))
               (rule "polySimp_pullOutFactor2b" (formula "2") (term "0"))
               (rule "add_literals" (formula "2") (term "1,1,0"))
               (rule "times_zero_1" (formula "2") (term "1,0"))
               (rule "add_zero_right" (formula "2") (term "0"))
               (rule "leq_literals" (formula "2"))
               (rule "closeFalse" (formula "2"))
            )
            (branch "CUT: v_N_0 + v_D_0 * v_A_0 < 0 FALSE"
                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "2")))
               (rule "notRight" (formula "3") (userinteraction))
               (rule "jdiv_uniquePosPos" (formula "7") (term "0") (inst "a=a") (inst "cnom=cnom") (inst "x=x") (inst "y=y") (userinteraction))
               (rule "instAll" (formula "8") (term "0,0") (ifseqformula "1") (userinteraction))
               (rule "instAll" (formula "9") (term "1,0") (ifseqformula "1") (userinteraction))
               (rule "instAll" (formula "10") (term "0") (ifseqformula "1") (userinteraction))
               (rule "instAll" (formula "11") (term "1") (ifseqformula "1") (userinteraction))
               (rule "impLeft" (formula "1") (userinteraction))
               (branch
                  (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0,0,0") (userinteraction))
                  (rule "replace_known_left" (formula "7") (term "0,0,0,0,0") (ifseqformula "6") (userinteraction))
                  (rule "replace_known_left" (formula "7") (term "1,0,0,0,0") (ifseqformula "5") (userinteraction))
                   (builtin "One Step Simplification" (formula "7"))
                  (rule "andRight" (formula "7") (userinteraction))
                  (branch
                     (rule "andRight" (formula "7") (userinteraction))
                     (branch
                        (rule "andRight" (formula "7") (userinteraction))
                        (branch
                           (rule "jdiv_axiom_inline" (formula "7") (term "0,0") (userinteraction))
                           (rule "mul_comm" (formula "7") (term "1,0,0,0,0") (userinteraction))
                           (rule "replace_known_left" (formula "7") (term "0,0,0") (ifseqformula "6") (userinteraction))
                            (builtin "One Step Simplification" (formula "7"))
                           (rule "div_axiom" (formula "7") (term "0,0") (inst "quotient=quotient_0") (userinteraction))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "12") (userinteraction))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "andLeft" (formula "1"))
                           (rule "andLeft" (formula "1"))
                           (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "10") (term "1,1"))
                           (rule "polySimp_mulComm0" (formula "2") (term "1,1"))
                           (rule "polySimp_mulComm0" (formula "2") (term "0"))
                           (rule "inEqSimp_leqRight" (formula "10"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                           (rule "inEqSimp_homoInEq0" (formula "3"))
                           (rule "polySimp_addComm1" (formula "3") (term "0"))
                           (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "2"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                           (rule "polySimp_addComm1" (formula "1") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                           (rule "polySimp_mulComm0" (formula "3") (term "1"))
                           (rule "polySimp_rightDist" (formula "3") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                           (rule "polySimp_mulComm0" (formula "3") (term "0,1"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                           (rule "polySimp_elimOne" (formula "1") (term "0"))
                           (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "3"))
                           (rule "andLeft" (formula "1"))
                           (rule "inEqSimp_homoInEq1" (formula "1"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "1") (term "0,1,0"))
                           (rule "mul_literals" (formula "1") (term "0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0"))
                           (rule "polySimp_elimOne" (formula "1") (term "1,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0"))
                           (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                           (rule "add_literals" (formula "1") (term "1,1,0"))
                           (rule "times_zero_1" (formula "1") (term "1,0"))
                           (rule "add_zero_right" (formula "1") (term "0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0"))
                           (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                           (rule "polySimp_pullOutFactor2b" (formula "1") (term "0"))
                           (rule "add_literals" (formula "1") (term "1,1,0"))
                           (rule "times_zero_1" (formula "1") (term "1,0"))
                           (rule "add_zero_right" (formula "1") (term "0"))
                           (rule "leq_literals" (formula "1"))
                           (rule "closeFalse" (formula "1"))
                        )
                        (branch
                           (rule "sub" (formula "7") (term "0,0") (userinteraction))
                           (rule "polySimp_addComm0" (formula "7") (term "0,0") (userinteraction))
                           (rule "neg_literal" (formula "7") (term "0,0,0") (userinteraction))
                           (rule "jdiv_axiom_inline" (formula "7") (term "0,1,0,0") (userinteraction))
                           (rule "replace_known_right" (formula "7") (term "0,0,1,0,0") (ifseqformula "9") (userinteraction))
                            (builtin "One Step Simplification" (formula "7"))
                           (rule "times_minus_one_1" (formula "7") (term "0,1,0,0") (userinteraction))
                           (rule "times_minus_one_1" (formula "7") (term "0,0,0,1,0,0") (userinteraction))
                           (rule "div_axiom" (formula "7") (term "0,0,1,0,0") (inst "quotient=quotient_0") (userinteraction))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "12"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "andLeft" (formula "1"))
                           (rule "andLeft" (formula "1"))
                           (rule "polySimp_elimNeg" (formula "10") (term "0,1,0,0"))
                           (rule "polySimp_elimNeg" (formula "3") (term "1,0,1,2"))
                           (rule "polySimp_elimNeg" (formula "3") (term "1,0,1,1"))
                           (rule "polySimp_elimNeg" (formula "1") (term "0,0"))
                           (rule "polySimp_elimNeg" (formula "10") (term "0,0,0,1,0,0"))
                           (rule "polySimp_mulComm0" (formula "10") (term "1,1"))
                           (rule "polySimp_mulComm0" (formula "3") (term "0,2"))
                           (rule "polySimp_mulComm0" (formula "3") (term "0,1"))
                           (rule "polySimp_mulComm0" (formula "3") (term "1,1,1"))
                           (rule "polySimp_mulComm0" (formula "10") (term "0"))
                           (rule "polySimp_addComm1" (formula "3") (term "1,2"))
                           (rule "polySimp_addComm1" (formula "3") (term "1,1"))
                           (rule "polySimp_addComm0" (formula "10") (term "1,1,0"))
                           (rule "polySimp_rightDist" (formula "10") (term "0"))
                           (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "10") (term "1,0"))
                           (rule "polySimp_mulComm1" (formula "10") (term "1,1,0"))
                           (rule "polySimp_addAssoc" (formula "10") (term "0"))
                           (rule "inEqSimp_gtToGeq" (formula "8"))
                           (rule "times_zero_1" (formula "8") (term "1,0,0"))
                           (rule "add_zero_right" (formula "8") (term "0,0"))
                           (rule "inEqSimp_leqRight" (formula "10"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor2b" (formula "1") (term "0,0"))
                           (rule "add_literals" (formula "1") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "1") (term "1,0,0"))
                           (rule "add_zero_right" (formula "1") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                           (rule "applyEq" (formula "1") (term "0,0,1,0") (ifseqformula "2"))
                           (rule "polySimp_mulComm0" (formula "1") (term "0,1,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                           (rule "mul_literals" (formula "9") (term "1"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                           (rule "polySimp_elimOne" (formula "1") (term "0"))
                           (rule "inEqSimp_contradInEq0" (formula "4") (term "1") (ifseqformula "1"))
                           (rule "inEqSimp_homoInEq1" (formula "4") (term "0,1"))
                           (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,1"))
                           (rule "polySimp_rightDist" (formula "4") (term "1,0,0,1"))
                           (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,0,1"))
                           (rule "polySimp_elimOne" (formula "4") (term "1,1,0,0,1"))
                           (rule "polySimp_rightDist" (formula "4") (term "0,1,0,0,1"))
                           (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1,0,0,1"))
                           (rule "mul_literals" (formula "4") (term "0,0,1,0,0,1"))
                           (rule "polySimp_elimOne" (formula "4") (term "1,0,1,0,0,1"))
                           (rule "polySimp_addAssoc" (formula "4") (term "0,0,1"))
                           (rule "polySimp_addComm1" (formula "4") (term "0,0,0,1"))
                           (rule "polySimp_pullOutFactor2b" (formula "4") (term "0,0,1"))
                           (rule "add_literals" (formula "4") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "4") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "4") (term "0,0,1"))
                           (rule "polySimp_addAssoc" (formula "4") (term "0,0,1"))
                           (rule "polySimp_addComm1" (formula "4") (term "0,0,0,1"))
                           (rule "add_literals" (formula "4") (term "0,0,0,0,1"))
                           (rule "polySimp_pullOutFactor2b" (formula "4") (term "0,0,1"))
                           (rule "add_literals" (formula "4") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "4") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "4") (term "0,0,1"))
                           (rule "leq_literals" (formula "4") (term "0,1"))
                            (builtin "One Step Simplification" (formula "4"))
                           (rule "inEqSimp_subsumption1" (formula "4") (term "0") (ifseqformula "9"))
                           (rule "leq_literals" (formula "4") (term "0,0"))
                            (builtin "One Step Simplification" (formula "4"))
                           (rule "closeFalse" (formula "4"))
                        )
                     )
                     (branch
                        (rule "jdiv_axiom_inline" (formula "7") (term "0,0,0") (userinteraction))
                        (rule "mul_comm" (formula "7") (term "1,0,0,0,0,0") (userinteraction))
                        (rule "replace_known_left" (formula "7") (term "0,0,0,0") (ifseqformula "6") (userinteraction))
                         (builtin "One Step Simplification" (formula "7"))
                        (rule "div_axiom" (formula "7") (term "0,0,0") (inst "quotient=quotient_0") (userinteraction))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "12"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "andLeft" (formula "1"))
                        (rule "andLeft" (formula "1"))
                        (rule "polySimp_mulComm0" (formula "10") (term "1,1"))
                        (rule "polySimp_mulComm0" (formula "10") (term "0"))
                        (rule "polySimp_mulComm0" (formula "3") (term "0,2"))
                        (rule "polySimp_mulComm0" (formula "3") (term "1,1,0,1,1"))
                        (rule "polySimp_mulComm0" (formula "3") (term "1,1,1"))
                        (rule "polySimp_mulComm0" (formula "3") (term "0,1"))
                        (rule "polySimp_mulComm0" (formula "3") (term "1,1,0,1,2"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0"))
                        (rule "polySimp_addComm0" (formula "10") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "10") (term "0"))
                        (rule "polySimp_elimOne" (formula "10") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "3") (term "0,1,1"))
                        (rule "polySimp_addComm1" (formula "3") (term "1,1"))
                        (rule "polySimp_addComm1" (formula "3") (term "0,1,1"))
                        (rule "polySimp_addAssoc" (formula "3") (term "0,1,2"))
                        (rule "polySimp_addComm1" (formula "3") (term "1,2"))
                        (rule "polySimp_addComm1" (formula "3") (term "0,1,2"))
                        (rule "inEqSimp_gtToGeq" (formula "8"))
                        (rule "times_zero_1" (formula "8") (term "1,0,0"))
                        (rule "add_zero_right" (formula "8") (term "0,0"))
                        (rule "inEqSimp_gtRight" (formula "10"))
                        (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                        (rule "polySimp_mulComm0" (formula "1") (term "0,0,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0"))
                        (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                        (rule "polySimp_addComm0" (formula "1") (term "0,0,0"))
                        (rule "inEqSimp_homoInEq1" (formula "4") (term "1"))
                        (rule "polySimp_addComm1" (formula "4") (term "0,1"))
                        (rule "inEqSimp_homoInEq1" (formula "4") (term "2"))
                        (rule "polySimp_addComm1" (formula "4") (term "0,2"))
                        (rule "applyEqRigid" (formula "1") (term "0,1,0") (ifseqformula "2"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                        (rule "polySimp_addComm1" (formula "1") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                        (rule "mul_literals" (formula "9") (term "1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "4") (term "1"))
                        (rule "polySimp_mulComm0" (formula "4") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "4") (term "1,1"))
                        (rule "polySimp_mulLiterals" (formula "4") (term "1,1,1"))
                        (rule "polySimp_elimOne" (formula "4") (term "1,1,1"))
                        (rule "polySimp_rightDist" (formula "4") (term "0,1,1"))
                        (rule "polySimp_rightDist" (formula "4") (term "0,0,1,1"))
                        (rule "mul_literals" (formula "4") (term "0,0,0,1,1"))
                        (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,1,1"))
                        (rule "polySimp_elimOne" (formula "4") (term "1,0,0,1,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "4") (term "2"))
                        (rule "polySimp_mulComm0" (formula "4") (term "1,2"))
                        (rule "polySimp_rightDist" (formula "4") (term "1,2"))
                        (rule "polySimp_mulLiterals" (formula "4") (term "1,1,2"))
                        (rule "polySimp_elimOne" (formula "4") (term "1,1,2"))
                        (rule "polySimp_rightDist" (formula "4") (term "0,1,2"))
                        (rule "polySimp_rightDist" (formula "4") (term "0,0,1,2"))
                        (rule "mul_literals" (formula "4") (term "0,0,0,1,2"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                        (rule "polySimp_elimOne" (formula "1") (term "0"))
                        (rule "inEqSimp_subsumption1" (formula "4") (term "0") (ifseqformula "9"))
                        (rule "leq_literals" (formula "4") (term "0,0"))
                         (builtin "One Step Simplification" (formula "4"))
                        (rule "inEqSimp_contradInEq1" (formula "4") (ifseqformula "1"))
                        (rule "andLeft" (formula "4"))
                        (rule "inEqSimp_homoInEq1" (formula "4"))
                        (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "4") (term "0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1,0"))
                        (rule "polySimp_elimOne" (formula "4") (term "1,0,1,0"))
                        (rule "polySimp_rightDist" (formula "4") (term "0,0,1,0"))
                        (rule "mul_literals" (formula "4") (term "0,0,0,1,0"))
                        (rule "polySimp_addAssoc" (formula "4") (term "0"))
                        (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                        (rule "add_literals" (formula "4") (term "1,1,0"))
                        (rule "times_zero_1" (formula "4") (term "1,0"))
                        (rule "add_zero_right" (formula "4") (term "0"))
                        (rule "polySimp_addAssoc" (formula "4") (term "0"))
                        (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                        (rule "polySimp_pullOutFactor2b" (formula "4") (term "0"))
                        (rule "add_literals" (formula "4") (term "1,1,0"))
                        (rule "times_zero_1" (formula "4") (term "1,0"))
                        (rule "add_zero_right" (formula "4") (term "0"))
                        (rule "polySimp_addAssoc" (formula "4") (term "0"))
                        (rule "polySimp_addComm0" (formula "4") (term "0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                        (rule "add_literals" (formula "4") (term "1,1,0"))
                        (rule "times_zero_1" (formula "4") (term "1,0"))
                        (rule "add_zero_right" (formula "4") (term "0"))
                        (rule "leq_literals" (formula "4"))
                        (rule "closeFalse" (formula "4"))
                     )
                  )
                  (branch
                     (rule "sub" (formula "7") (term "0,0,0") (userinteraction))
                     (rule "neg_literal" (formula "7") (term "1,0,0,0") (userinteraction))
                     (rule "switch_brackets" (formula "7") (term "0,0") (userinteraction))
                     (rule "add_literals" (formula "7") (term "1,0,0") (userinteraction))
                     (rule "add_zero_right" (formula "7") (term "0,0") (userinteraction))
                     (rule "jdiv_axiom_inline" (formula "7") (term "0,0,0") (userinteraction))
                     (rule "replace_known_right" (formula "7") (term "0,0,0,0") (ifseqformula "9") (userinteraction))
                      (builtin "One Step Simplification" (formula "7"))
                     (rule "times_minus_one_1" (formula "7") (term "0,0,0,0,0") (userinteraction))
                     (rule "times_minus_one_1" (formula "7") (term "0,0,0") (userinteraction))
                     (rule "div_axiom" (formula "7") (term "0,0,0,0") (inst "quotient=quotient_0") (userinteraction))
                     (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "12") (userinteraction))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "andLeft" (formula "1"))
                     (rule "andLeft" (formula "1"))
                     (rule "jdiv_axiom_inline" (formula "13") (term "0,1") (userinteraction))
                     (rule "replace_known_right" (formula "13") (term "0,0,1") (ifseqformula "12") (userinteraction))
                      (builtin "One Step Simplification" (formula "13"))
                     (rule "polySimp_elimNeg" (formula "10") (term "0,0,0"))
                     (rule "polySimp_elimNeg" (formula "2") (term "1"))
                     (rule "polySimp_elimNeg" (formula "1") (term "0,0"))
                     (rule "polySimp_elimNeg" (formula "10") (term "0,0,0,0,0"))
                     (rule "polySimp_mulComm1" (formula "13") (term "1"))
                     (rule "eqSymm" (formula "13"))
                     (rule "polySimp_homoEq" (formula "13"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "1,0"))
                     (rule "polySimp_elimOne" (formula "13") (term "1,0"))
                     (rule "polySimp_mulComm0" (formula "10") (term "1,1"))
                     (rule "polySimp_mulComm0" (formula "2") (term "0"))
                     (rule "polySimp_mulComm0" (formula "10") (term "0"))
                     (rule "polySimp_addComm0" (formula "10") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "10") (term "0"))
                     (rule "polySimp_mulComm1" (formula "10") (term "1,0"))
                     (rule "inEqSimp_gtRight" (formula "10"))
                     (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                     (rule "polySimp_mulComm0" (formula "1") (term "0,0,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0"))
                     (rule "polySimp_pullOutFactor2b" (formula "1") (term "0,0"))
                     (rule "add_literals" (formula "1") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "1") (term "1,0,0"))
                     (rule "add_zero_right" (formula "1") (term "0,0"))
                     (rule "applyEqRigid" (formula "13") (term "0,1,0") (ifseqformula "2"))
                     (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
                     (rule "applyEqRigid" (formula "1") (term "0,0,1,0") (ifseqformula "2"))
                     (rule "polySimp_mulComm0" (formula "1") (term "0,1,0"))
                     (rule "polySimp_sepPosMonomial" (formula "13"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                     (rule "polySimp_elimOne" (formula "1") (term "0"))
                     (rule "inEqSimp_strengthen0" (formula "3") (ifseqformula "13"))
                     (rule "inEqSimp_contradInEq1" (formula "3") (ifseqformula "1"))
                     (rule "andLeft" (formula "3"))
                     (rule "inEqSimp_homoInEq1" (formula "3"))
                     (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0"))
                     (rule "mul_literals" (formula "3") (term "0,1,0"))
                     (rule "polySimp_elimOne" (formula "3") (term "1,1,0"))
                     (rule "polySimp_addAssoc" (formula "3") (term "0"))
                     (rule "polySimp_addComm0" (formula "3") (term "0,0"))
                     (rule "polySimp_pullOutFactor2b" (formula "3") (term "0"))
                     (rule "add_literals" (formula "3") (term "1,1,0"))
                     (rule "times_zero_1" (formula "3") (term "1,0"))
                     (rule "add_zero_right" (formula "3") (term "0"))
                     (rule "leq_literals" (formula "3"))
                     (rule "closeFalse" (formula "3"))
                  )
               )
               (branch
                  (rule "close" (formula "12") (ifseqformula "1"))
               )
            )
         )
      )
   )
)
)
}
