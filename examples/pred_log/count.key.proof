\settings {
"#Proof-Settings-Config-File
#Mon Apr 24 09:46:27 CEST 2006
[General]SoundNotification=false
[View]FontIndex=2
[SimultaneousUpdateSimplifier]DeleteEffectLessLocations=true
[General]SuggestiveVarNames=false
[View]ShowWholeTaclet=false
[General]ProofAssistant=false
[View]MaxTooltipLines=40
[SimultaneousUpdateSimplifier]EagerSimplification=false
[General]StupidMode=true
[Strategy]MaximumNumberOfAutomaticApplications=10000

[Choice]DefaultChoices=transactions-transactions\:transactionsOn , transactionsPolicy-transactionsPolicy\:abortTransaction , programRules-programRules\:Java , transactionAbort-transactionAbort\:abortOn , throughout-throughout\:toutOn , initialisation-initialisation\:disableStaticInitialisation , intRules-intRules\:arithmeticSemanticsIgnoringOF , nullPointerPolicy-nullPointerPolicy\:nullCheck
[OCLRef]Null=false
[OCLRef]ExcThrown=false
[Model]Source=1
[Choice]Choices=transactions-transactions\:transactionsOff-transactions\:transactionsOn , programRules-programRules\:ODL-programRules\:Java , transactionsPolicy-transactionsPolicy\:abortTransaction-transactionsPolicy\:noAbortTransaction , initialisation-initialisation\:disableStaticInitialisation-initialisation\:enableStaticInitialisation , throughout-throughout\:toutOff-throughout\:toutOn , transactionAbort-transactionAbort\:abortOff-transactionAbort\:abortOn , intRules-intRules\:arithmeticSemanticsCheckingOF-intRules\:javaSemantics-intRules\:arithmeticSemanticsIgnoringOF , nullPointerPolicy-nullPointerPolicy\:noNullCheck-nullPointerPolicy\:nullCheck
[OCLRef]Array=false
[DecisionProcedure]=SIMPLIFY
[General]OuterRenaming=false
[Strategy]ActiveStrategy=Simple FOL
"
}

// Input file for KeY standalone prover version 0.497
\sorts {
	s;
}

\predicates {
	p(int);
}

\problem {
\forall int x;  (p(x) -> p(x + 1)) & p(0) -> p(2)

}

\proof {
(keyLog "0" (keyUser "steffen" ) (keyVersion "0.2054"))

(branch "dummy ID"
(rule "imp_right" (formula "1"))
(rule "and_left" (formula "1"))
(rule "inst_all" (formula "2") (term "0") (ifseqformula "1"))
(rule "imp_left" (formula "2"))
(branch " Case 1"
   (rule "close_goal" (formula "3") (ifseqformula "2"))
)
(branch " Case 2"
   (rule "add_zero_left" (formula "2") (term "0"))
   (rule "inst_all" (formula "2") (term "0") (ifseqformula "1"))
   (rule "add_literals" (formula "2") (term "0,1"))
   (rule "imp_left" (formula "2"))
   (branch " Case 1"
      (rule "close_goal" (formula "4") (ifseqformula "2"))
   )
   (branch " Case 2"
      (rule "close_goal" (formula "5") (ifseqformula "2"))
   )
)
)

}
