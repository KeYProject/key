\settings {
"#Proof-Settings-Config-File
#Mon Apr 11 17:32:09 CEST 2005
[General]SoundNotification=false
[View]FontIndex=0
[SimultaneousUpdateSimplifier]DeleteEffectLessLocations=true
[General]SuggestiveVarNames=false
[General]ProofAssistant=false
[View]ShowWholeTaclet=false
[View]MaxTooltipLines=40
[General]StupidMode=true
[Strategy]MaximumNumberOfAutomaticApplications=10000
[Choice]DefaultChoices=transactionsPolicy-transactionsPolicy\:abortTransaction , programRules-programRules\:Java , initialisation-initialisation\:disableStaticInitialisation , intRules-intRules\:arithmeticSemanticsIgnoringOF , nullPointerPolicy-nullPointerPolicy\:nullCheck
[OCLRef]Null=true
[OCLRef]ExcThrown=true
[Model]Source=1
[Choice]Choices=programRules-programRules\:ODL-programRules\:Java , transactionsPolicy-transactionsPolicy\:abortTransaction-transactionsPolicy\:noAbortTransaction , initialisation-initialisation\:disableStaticInitialisation-initialisation\:enableStaticInitialisation , intRules-intRules\:arithmeticSemanticsCheckingOF-intRules\:javaSemantics-intRules\:arithmeticSemanticsIgnoringOF , nullPointerPolicy-nullPointerPolicy\:noNullCheck-nullPointerPolicy\:nullCheck
[OCLRef]Array=true
[DecisionProcedure]=SIMPLIFY
[General]OuterRenaming=true
[Strategy]ActiveStrategy=FOLStrategy
"
}

// This file is part of KeY - Integrated Deductive Software Design 
// Copyright (C) 2001 Universitaet Karlsruhe, Germany
//                    and Chalmers University of Technology, Sweden          
//
// The KeY system is protected by the GNU General 
// Public License. See LICENSE.TXT for details.
//

// File     : SET044+1 : TPTP v2.5.0. Released v2.0.0.
// Domain   : Set Theory
// Problem  : Anti-Russell Sets
// Version  : Especial.
// English  : If there were an anti-Russell set (a set that contains 
//            exactly those sets that are members of themselves), then not 
//            every set has a complement.


\sorts {
  S;
}

\predicates {
  member(S, S);
  subset(S, S);
}


\problem {
   \exists S x1; 
     \forall S x2;  (member(x2, x1) <-> member(x2, x2))
-> !\forall S x3; 
      \exists S x4; 
        \forall S x5;  (member(x5, x4) <-> !member(x5, x3))

}

