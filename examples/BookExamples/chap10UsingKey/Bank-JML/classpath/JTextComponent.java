// This file is part of KeY - Integrated Deductive Software Design
// Copyright (C) 2001-2009 Universitaet Karlsruhe, Germany
//                         Universitaet Koblenz-Landau, Germany
//                         Chalmers University of Technology, Sweden
//
// The KeY system is protected by the GNU General Public License. 
// See LICENSE.TXT for details.
/* This file has been generated by Stubmaker (de.uka.ilkd.stubmaker)
 * Date: Wed May 14 11:55:39 CEST 2008
 */
package javax.swing.text;

public abstract class JTextComponent extends javax.swing.JComponent implements javax.swing.Scrollable, javax.accessibility.Accessible
{
   public final static java.lang.String FOCUS_ACCELERATOR_KEY = "focusAcceleratorKey";
   public final static java.lang.String DEFAULT_KEYMAP = "default";

   public JTextComponent();
   public javax.swing.plaf.TextUI getUI();
   public void setUI(javax.swing.plaf.TextUI arg0);
   public void updateUI();
   public void addCaretListener(javax.swing.event.CaretListener arg0);
   public void removeCaretListener(javax.swing.event.CaretListener arg0);
   public javax.swing.event.CaretListener[] getCaretListeners();
   protected void fireCaretUpdate(javax.swing.event.CaretEvent arg0);
   public void setDocument(javax.swing.text.Document arg0);
   public javax.swing.text.Document getDocument();
   public void setComponentOrientation(java.awt.ComponentOrientation arg0);
   public javax.swing.Action[] getActions();
   public void setMargin(java.awt.Insets arg0);
   public java.awt.Insets getMargin();
   public void setNavigationFilter(javax.swing.text.NavigationFilter arg0);
   public javax.swing.text.NavigationFilter getNavigationFilter();
   public javax.swing.text.Caret getCaret();
   public void setCaret(javax.swing.text.Caret arg0);
   public javax.swing.text.Highlighter getHighlighter();
   public void setHighlighter(javax.swing.text.Highlighter arg0);
   public void setKeymap(javax.swing.text.Keymap arg0);
   public void setDragEnabled(boolean arg0);
   public boolean getDragEnabled();
   public final void setDropMode(javax.swing.DropMode arg0);
   public final javax.swing.DropMode getDropMode();
   public final javax.swing.text.JTextComponent$DropLocation getDropLocation();
   public javax.swing.text.Keymap getKeymap();
   public static javax.swing.text.Keymap addKeymap(java.lang.String arg0, javax.swing.text.Keymap arg1);
   public static javax.swing.text.Keymap removeKeymap(java.lang.String arg0);
   public static javax.swing.text.Keymap getKeymap(java.lang.String arg0);
   public static void loadKeymap(javax.swing.text.Keymap arg0, javax.swing.text.JTextComponent$KeyBinding[] arg1, javax.swing.Action[] arg2);
   public java.awt.Color getCaretColor();
   public void setCaretColor(java.awt.Color arg0);
   public java.awt.Color getSelectionColor();
   public void setSelectionColor(java.awt.Color arg0);
   public java.awt.Color getSelectedTextColor();
   public void setSelectedTextColor(java.awt.Color arg0);
   public java.awt.Color getDisabledTextColor();
   public void setDisabledTextColor(java.awt.Color arg0);
   public void replaceSelection(java.lang.String arg0);
   public java.lang.String getText(int arg0, int arg1) throws javax.swing.text.BadLocationException;
   public java.awt.Rectangle modelToView(int arg0) throws javax.swing.text.BadLocationException;
   public int viewToModel(java.awt.Point arg0);
   public void cut();
   public void copy();
   public void paste();
   public void moveCaretPosition(int arg0);
   public void setFocusAccelerator(char arg0);
   public char getFocusAccelerator();
   public void read(java.io.Reader arg0, java.lang.Object arg1) throws java.io.IOException;
   public void write(java.io.Writer arg0) throws java.io.IOException;
   public void removeNotify();
   public void setCaretPosition(int arg0);
   public int getCaretPosition();
   public void setText(java.lang.String arg0);
   public java.lang.String getText();
   public java.lang.String getSelectedText();
   public boolean isEditable();
   public void setEditable(boolean arg0);
   public int getSelectionStart();
   public void setSelectionStart(int arg0);
   public int getSelectionEnd();
   public void setSelectionEnd(int arg0);
   public void select(int arg0, int arg1);
   public void selectAll();
   public java.lang.String getToolTipText(java.awt.event.MouseEvent arg0);
   public java.awt.Dimension getPreferredScrollableViewportSize();
   public int getScrollableUnitIncrement(java.awt.Rectangle arg0, int arg1, int arg2);
   public int getScrollableBlockIncrement(java.awt.Rectangle arg0, int arg1, int arg2);
   public boolean getScrollableTracksViewportWidth();
   public boolean getScrollableTracksViewportHeight();
   public boolean print() throws java.awt.print.PrinterException;
   public boolean print(java.text.MessageFormat arg0, java.text.MessageFormat arg1) throws java.awt.print.PrinterException;
   public boolean print(java.text.MessageFormat arg0, java.text.MessageFormat arg1, boolean arg2, javax.print.PrintService arg3, javax.print.attribute.PrintRequestAttributeSet arg4, boolean arg5) throws java.awt.print.PrinterException;
   public java.awt.print.Printable getPrintable(java.text.MessageFormat arg0, java.text.MessageFormat arg1);
   public javax.accessibility.AccessibleContext getAccessibleContext();
   protected java.lang.String paramString();
   protected void processInputMethodEvent(java.awt.event.InputMethodEvent arg0);
   public java.awt.im.InputMethodRequests getInputMethodRequests();
   public void addInputMethodListener(java.awt.event.InputMethodListener arg0);
}
