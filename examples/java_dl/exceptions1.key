\settings {
"#Proof-Settings-Config-File
#Mon Apr 11 17:32:09 CEST 2005
[General]SoundNotification=false
[View]FontIndex=0
[SimultaneousUpdateSimplifier]DeleteEffectLessLocations=true
[General]SuggestiveVarNames=false
[General]ProofAssistant=false
[View]ShowWholeTaclet=false
[View]MaxTooltipLines=40
[General]StupidMode=true
[Strategy]MaximumNumberOfAutomaticApplications=10000
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_NORMAL
[Choice]DefaultChoices=transactionsPolicy-transactionsPolicy\:abortTransaction , programRules-programRules\:Java , initialisation-initialisation\:disableStaticInitialisation , intRules-intRules\:arithmeticSemanticsIgnoringOF , nullPointerPolicy-nullPointerPolicy\:nullCheck
[OCLRef]Null=true
[OCLRef]ExcThrown=true
[Model]Source=1
[Choice]Choices=programRules-programRules\:ODL-programRules\:Java , transactionsPolicy-transactionsPolicy\:abortTransaction-transactionsPolicy\:noAbortTransaction , initialisation-initialisation\:disableStaticInitialisation-initialisation\:enableStaticInitialisation , intRules-intRules\:arithmeticSemanticsCheckingOF-intRules\:javaSemantics-intRules\:arithmeticSemanticsIgnoringOF , nullPointerPolicy-nullPointerPolicy\:noNullCheck-nullPointerPolicy\:nullCheck
[OCLRef]Array=true
[DecisionProcedure]=SIMPLIFY
[General]OuterRenaming=true
[Strategy]ActiveStrategy=JavaCardDLStrategy
"
}

/**
@provable automatic
@statistic nodes 118
@statistic branches 3
@see <a href="http://java.sun.com/docs/books/jls/third_edition/html/exceptions.html#11.3">Handling of an Exception (JLS, Sect. 11.3)</a>
@author Sebastian Wirkert (doc)

Proof example showing how exceptions are handled.  After the exception is
thrown, java completes the try block abruptly and tries to find a suited catch
clause (the object thrown has to be an instanceof the declared parameter
type).<br> Since <tt>NullPointerEception</tt> is a subtype of
<tt>RuntimeException</tt>, the catch clause will be executed.<br> Of course, the
finally clause will still be executed after the catch clause is done.  

*/


// Input file for KeY standalone prover version 0.550
\problem {
\<{
   int i =0;
     try {
       throw new  NullPointerException ();
     i=i+1;
   }  catch (RuntimeException e1) {
     i=i+4;
   }  finally {
     i=i+8;
   }
 }\> i = 12

}


