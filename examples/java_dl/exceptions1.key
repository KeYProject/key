// This file is part of KeY - Integrated Deductive Software Design
// Copyright (C) 2001-2009 Universitaet Karlsruhe, Germany
//                         Universitaet Koblenz-Landau, Germany
//                         Chalmers University of Technology, Sweden
//
// The KeY system is protected by the GNU General Public License. 
// See LICENSE.TXT for details.
/**
@provable automatic
@statistic nodes 118
@statistic branches 3
@see <a href="http://java.sun.com/docs/books/jls/third_edition/html/exceptions.html#11.3">Handling of an Exception (JLS, Sect. 11.3)</a>
@author Sebastian Wirkert (doc)

Proof example showing how exceptions are handled.  After the exception is
thrown, java completes the try block abruptly and tries to find a suited catch
clause (the object thrown has to be an instanceof the declared parameter
type).<br> Since <tt>NullPointerEception</tt> is a subtype of
<tt>RuntimeException</tt>, the catch clause will be executed.<br> Of course, the
finally clause will still be executed after the catch clause is done.  

*/


// Input file for KeY standalone prover version 0.550
\problem {
\<{
   int i =0;
     try {
       throw new  NullPointerException ();
     i=i+1;
   }  catch (RuntimeException e1) {
     i=i+4;
   }  finally {
     i=i+8;
   }
 }\> i = 12

}


