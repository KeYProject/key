// This file is part of KeY - Integrated Deductive Software Design
// Copyright (C) 2001-2009 Universitaet Karlsruhe, Germany
//                         Universitaet Koblenz-Landau, Germany
//                         Chalmers University of Technology, Sweden
//
// The KeY system is protected by the GNU General Public License. 
// See LICENSE.TXT for details.
/**
@provable automatic
@statistic nodes 40
@statistic branches 1
@author Sebastian Wirkert (doc)

Proof example showing how a labeled break statement is evaluated in a
try-catch-finally construct.  A break statement with label identifier attempts
to transfer control to the enclosing labeled statement that has the same
identifier as its label; this statement, which is called the break target,
then immediately completes normally. A break statement must refer to a label
within the immediately enclosing method or initializer block. There are no
non-local jumps. <br> The preceding descriptions say "attempts to transfer
control" rather than just "transfers control" because if there are any try
statements within the break target whose try blocks contain the break
statement, then any finally clauses of those try statements are executed, in
order, innermost to outermost, before control is transferred to the break
target. Abrupt completion of a finally clause can disrupt the transfer of
control initiated by a break statement.  */

\classpath "classpath";
\javaSource "testcontext_java/";

\problem {
\<{
   int i =Break.tryBreak (0);
 }\> i = 2

}

