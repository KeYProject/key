// This file is part of KeY - Integrated Deductive Software Design
// Copyright (C) 2001-2009 Universitaet Karlsruhe, Germany
//                         Universitaet Koblenz-Landau, Germany
//                         Chalmers University of Technology, Sweden
//
// The KeY system is protected by the GNU General Public License. 
// See LICENSE.TXT for details.
/**
@provable interactive
@statistic nodes 339
@statistic branches 5
@author Sebastian Wirkert (doc)

Proof example showing how loops are evaluated using invariantes. 

Proofing this example needs some interaction:
<ol>
<li> In the tab "Proof Search Strategy" select "None" on the topic "Loop treatment" and "Expand" on the topic "Method treatment"</li>
<li> Run the strategy</li>
<li> Select the formula inclusive updates and select the rule "while_invariant"</li>
<li> in the cell "#modifies" enter "{i_1}"</li>
<li> in the cell "inv (formula)" enter "i_1>=0"</li>
<li> Click on the "Apply" button</li>
<li> Once again run the strategy</li>
</ol>
By performing this interaction, you told KeY, it should proof the loop by using the invariant i_1>=0.
The modifies clause tells key, which elements can be modified inside the while loop to prove the invariant.
*/

\javaSource "while_demo/";

\problem {
\<{ int i;}\>\forall int x; (x>0->{i:=x}\[{int res=While.loop(i);}\](res=0 | res=3))

}


// invariant: i >= 0

