

/** @provable interactive
    @statistic nodes 7735
    @statistic branches 53
    @statistic manualInstantiations 2
    @author Mattias Ulbrich
    
    Given a (relatively) large enum declaration with 50 constants, it is possible
    to prove that a switch statement (in Large.m()) is complete and a succeeding 
    throw statement will not be called.
    
    Due to the nature of enum constants, the problem can mainly be reduced to a problem
    on natural numbers which is handled by the decision procedure.
    
    (At least) two interactions are needed however:
    <ol>
    <li>expand_dynamic_type on the variable "large"
    <li>system invariant for created on "large.<created> = TRUE"
    </ol>
    which are not applied automatically.
*/

\javaSource "src" ;

\programVariables {
   Large large;

}

\problem {

   Large.<nextToCreate>=50 & large.<created>=TRUE & !(large = null) & inReachableState -> \<{int j=Large.m(large);}\>true

}
