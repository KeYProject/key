\settings {
"#Proof-Settings-Config-File
#Wed Mar 22 14:49:59 CET 2006
[General]SoundNotification=false
[View]FontIndex=0
[SimultaneousUpdateSimplifier]DeleteEffectLessLocations=true
[General]SuggestiveVarNames=false
[View]ShowWholeTaclet=false
[General]ProofAssistant=false
[View]MaxTooltipLines=40
[SimultaneousUpdateSimplifier]EagerSimplification=false
[General]StupidMode=false
[Strategy]MaximumNumberOfAutomaticApplications=10000

[Choice]DefaultChoices=transactions-transactions\:transactionsOn , programRules-programRules\:Java , throughout-throughout\:toutOn , transactionAbort-transactionAbort\:abortOn , initialisation-initialisation\:disableStaticInitialisation , intRules-intRules\:arithmeticSemanticsIgnoringOF , nullPointerPolicy-nullPointerPolicy\:nullCheck
[OCLRef]Null=false
[OCLRef]ExcThrown=false
[Model]Source=1
[Choice]Choices=transactions-transactions\:transactionsOff-transactions\:transactionsOn , transactionsPolicy-transactionsPolicy\:abortTransaction-transactionsPolicy\:noAbortTransaction , programRules-programRules\:ODL-programRules\:Java , throughout-throughout\:toutOff-throughout\:toutOn , initialisation-initialisation\:disableStaticInitialisation-initialisation\:enableStaticInitialisation , transactionAbort-transactionAbort\:abortOff-transactionAbort\:abortOn , intRules-intRules\:arithmeticSemanticsCheckingOF-intRules\:javaSemantics-intRules\:arithmeticSemanticsIgnoringOF , nullPointerPolicy-nullPointerPolicy\:noNullCheck-nullPointerPolicy\:nullCheck
[OCLRef]Array=false
[DecisionProcedure]=SIMPLIFY
[General]OuterRenaming=true
[Strategy]ActiveStrategy=Simple JavaCardDL without unwinding loops
"
}

\javaSource "while_demo/";

\withOptions throughout:toutOn;

\problem {
\<{
    int i;
  }\> \forall int x; 
        (   x >= 0
         -> {i:=x}
              \[[{
                   while ( true )
                     i++;
                 }\]] i >= 0)

}

\proof {
(keyLog "0" (keyUser "woj" ) (keyVersion "0.1998"))

(branch "dummy ID"
(rule "geq_to_lt" (formula "1") (term "0,0,0"))
(rule "geq_to_lt" (formula "1") (term "0,1,1,0,0"))
(rule "eliminate_variable_declaration" (formula "1"))
(rule "empty_modality" (formula "1"))
(rule "all_right" (formula "1") (inst "sk=x_0"))
(rule "imp_right" (formula "1"))
(rule "not_left" (formula "1"))
(rule "while_inv_throughout" (formula "2") (inst "inv=i >= 0") (inst "#modifies={i}") (inst "#v1=b"))
(branch " Invariant Initially Valid"
   (builtin "Update Simplification" (formula "2"))
   (rule "geq_to_lt" (formula "2"))
   (rule "not_right" (formula "2"))
   (rule "close_goal" (formula "2") (ifseqformula "1"))
)
(branch " Body Preserves Invariant"
   (builtin "Update Simplification" (formula "2"))
   (rule "imp_right" (formula "2"))
   (rule "imp_right" (formula "3"))
   (rule "geq_to_lt" (formula "2"))
   (rule "not_left" (formula "2"))
   (rule "geq_to_lt" (formula "4") (term "1,1,0,1"))
   (rule "variable_declaration_allmodal" (formula "1"))
   (rule "box_true" (formula "4") (term "1,0,0,1"))
   (rule "concrete_impl_4" (formula "4") (term "0,0,1"))
   (rule "concrete_and_1" (formula "4") (term "0,1"))
   (rule "eliminate_variable_declaration" (formula "1"))
   (rule "variable_declaration_allmodal" (formula "4") (term "1"))
   (rule "assignment_normalassign" (formula "1"))
   (rule "eliminate_variable_declaration" (formula "4") (term "1"))
   (rule "method_call_empty" (formula "1") (term "1"))
   (rule "assignment_normalassign" (formula "4") (term "1"))
   (builtin "Update Simplification" (formula "4"))
   (rule "empty_modality" (formula "1") (term "1"))
   (builtin "Update Simplification" (formula "1"))
   (rule "boolean_equal" (formula "1"))
   (rule "true_left" (formula "1"))
   (rule "eliminate_variable_declaration" (formula "3") (term "2"))
   (rule "if_split" (formula "3"))
   (branch " if true true"
      (rule "boolean_equal" (formula "1") (term "2"))
      (builtin "Update Simplification" (formula "1"))
      (rule "true_left" (formula "1"))
      (rule "postincrement" (formula "3") (term "2"))
      (rule "compound_int_cast_expression" (formula "3") (term "2") (inst "#v=i_1"))
      (rule "variable_declaration_allmodal" (formula "3") (term "2"))
      (rule "eliminate_variable_declaration" (formula "3") (term "2"))
      (rule "remove_parentheses_right" (formula "3") (term "2"))
      (rule "assignment_addition" (formula "3") (term "2"))
      (builtin "Update Simplification" (formula "3"))
      (rule "switch_params" (formula "3") (term "2"))
      (rule "cast_4" (formula "3") (term "3"))
      (rule "assignment_normalassign" (formula "3") (term "3"))
      (builtin "Update Simplification" (formula "3"))
      (rule "try_empty" (formula "3") (term "2"))
      (rule "method_call_empty" (formula "3") (term "2"))
      (rule "empty_modality" (formula "3") (term "2"))
      (builtin "Update Simplification" (formula "3"))
      (rule "boolean_not_equal_2" (formula "3") (term "0,0"))
      (rule "concrete_not_2" (formula "3") (term "0"))
      (rule "concrete_impl_1" (formula "3"))
      (rule "not_right" (formula "3"))
      (builtin "Decision Procedure Simplify")
   )
   (branch " if true false"
      (rule "boolean_not_equal_1" (formula "1") (term "2"))
      (builtin "Update Simplification" (formula "1"))
      (rule "close_by_false" (formula "1"))
   )
)
(branch " Throughout Property Holds in Body"
   (builtin "Update Simplification" (formula "2"))
   (rule "imp_right" (formula "2"))
   (rule "imp_right" (formula "3"))
   (rule "geq_to_lt" (formula "2"))
   (rule "not_left" (formula "2"))
   (rule "variable_declaration_allmodal" (formula "1"))
   (rule "variable_declaration_allmodal" (formula "4") (term "1"))
   (rule "eliminate_variable_declaration" (formula "1"))
   (rule "eliminate_variable_declaration" (formula "4") (term "1"))
   (rule "assignment_normalassign" (formula "1"))
   (rule "throw_in_block_ignore_trail" (formula "4") (term "1,0,0,1"))
   (rule "method_call_empty" (formula "1") (term "1"))
   (rule "assignment_throughout" (formula "4") (term "1"))
   (builtin "Update Simplification" (formula "4"))
   (rule "replace_known_right" (formula "4") (term "0,1,1,0") (ifseqformula "2"))
   (rule "concrete_not_2" (formula "4") (term "1,1,0"))
   (rule "concrete_impl_4" (formula "4") (term "1,0"))
   (rule "concrete_and_3" (formula "4") (term "0"))
   (rule "replace_known_right" (formula "4") (term "0,1,1,0,1") (ifseqformula "2"))
   (rule "concrete_not_2" (formula "4") (term "1,1,0,1"))
   (rule "concrete_impl_4" (formula "4") (term "1,0,1"))
   (rule "concrete_and_3" (formula "4") (term "0,1"))
   (rule "and_right" (formula "4"))
   (branch " Case 1"
      (rule "imp_right" (formula "4"))
      (rule "make_insert_eq_nonrigid" (formula "1"))
      (rule "empty_modality" (formula "2") (term "1"))
      (builtin "Update Simplification" (formula "2"))
      (rule "boolean_equal" (formula "2"))
      (rule "true_left" (formula "2"))
      (rule "throw_single_throughout" (formula "4") (term "1"))
      (builtin "Update Simplification" (formula "4"))
      (rule "not_right" (formula "4"))
      (rule "close_goal" (formula "3") (ifseqformula "1"))
   )
   (branch " Case 2"
      (rule "imp_right" (formula "4"))
      (rule "imp_left" (formula "1"))
      (branch " Case 1"
         (rule "empty_modality" (formula "1") (term "1"))
         (builtin "Update Simplification" (formula "1"))
         (rule "boolean_equal" (formula "1"))
         (rule "true_left" (formula "1"))
         (rule "throw_single_throughout" (formula "4") (term "1,0,0,2"))
         (rule "eliminate_variable_declaration" (formula "4") (term "2"))
         (rule "if_split_imp_new" (formula "4") (term "2"))
         (rule "boolean_equal" (formula "4") (term "0,2"))
         (builtin "Update Simplification" (formula "4"))
         (rule "ifthenelse_true_for" (formula "4"))
         (rule "postincrement" (formula "4") (term "2"))
         (rule "compound_int_cast_expression" (formula "4") (term "2") (inst "#v=i_1"))
         (rule "variable_declaration_allmodal" (formula "4") (term "2"))
         (rule "eliminate_variable_declaration" (formula "4") (term "2"))
         (rule "remove_parentheses_right" (formula "4") (term "2"))
         (rule "assignment_addition_tout" (formula "4") (term "2"))
         (builtin "Update Simplification" (formula "4"))
         (rule "boolean_not_equal_2" (formula "4") (term "0,0,0"))
         (rule "boolean_not_equal_2" (formula "4") (term "0,0,1,0"))
         (rule "boolean_not_equal_2" (formula "4") (term "0,0,0,1"))
         (rule "boolean_not_equal_2" (formula "4") (term "0,0,1,0,1"))
         (rule "concrete_impl_2" (formula "4") (term "0,0"))
         (rule "concrete_not_2" (formula "4") (term "0,1,0"))
         (rule "concrete_impl_2" (formula "4") (term "0,0,1"))
         (rule "concrete_not_2" (formula "4") (term "0,1,0,1"))
         (rule "concrete_and_1" (formula "4") (term "0"))
         (rule "concrete_and_1" (formula "4") (term "0,1"))
         (rule "concrete_impl_1" (formula "4") (term "0"))
         (rule "concrete_impl_1" (formula "4") (term "0,1"))
         (rule "switch_params" (formula "4") (term "2,1,1"))
         (rule "replace_known_right" (formula "4") (term "0,0,1") (ifseqformula "2"))
         (rule "concrete_not_2" (formula "4") (term "0,1"))
         (rule "concrete_impl_1" (formula "4") (term "1"))
         (rule "replace_known_right" (formula "4") (term "0,0") (ifseqformula "2"))
         (rule "concrete_not_2" (formula "4") (term "0"))
         (rule "concrete_and_1" (formula "4"))
         (rule "cast_4" (formula "4") (term "3"))
         (rule "assignment_throughout" (formula "4") (term "3"))
         (builtin "Update Simplification" (formula "4"))
         (rule "boolean_not_equal_2" (formula "4") (term "0,0,0"))
         (rule "boolean_not_equal_2" (formula "4") (term "0,0,1,0"))
         (rule "boolean_not_equal_2" (formula "4") (term "0,0,0,1"))
         (rule "boolean_not_equal_2" (formula "4") (term "0,0,1,0,1"))
         (rule "concrete_impl_2" (formula "4") (term "0,0"))
         (rule "concrete_not_2" (formula "4") (term "0,1,0"))
         (rule "concrete_impl_2" (formula "4") (term "0,0,1"))
         (rule "concrete_not_2" (formula "4") (term "0,1,0,1"))
         (rule "concrete_and_1" (formula "4") (term "0"))
         (rule "concrete_and_1" (formula "4") (term "0,1"))
         (rule "concrete_impl_1" (formula "4") (term "0"))
         (rule "concrete_impl_1" (formula "4") (term "0,1"))
         (rule "replace_known_right" (formula "4") (term "0,0,1") (ifseqformula "2"))
         (rule "concrete_not_2" (formula "4") (term "0,1"))
         (rule "concrete_impl_1" (formula "4") (term "1"))
         (rule "replace_known_right" (formula "4") (term "0,0") (ifseqformula "2"))
         (rule "concrete_not_2" (formula "4") (term "0"))
         (rule "concrete_and_1" (formula "4"))
         (rule "try_empty" (formula "4") (term "2"))
         (rule "method_call_empty" (formula "4") (term "2"))
         (rule "empty_modality" (formula "4") (term "2"))
         (builtin "Update Simplification" (formula "4"))
         (rule "boolean_not_equal_2" (formula "4") (term "0,0"))
         (rule "boolean_not_equal_2" (formula "4") (term "0,0,1"))
         (rule "concrete_impl_2" (formula "4") (term "0"))
         (rule "concrete_not_2" (formula "4") (term "0,1"))
         (rule "concrete_and_1" (formula "4"))
         (rule "concrete_impl_1" (formula "4"))
         (rule "not_right" (formula "4"))
         (builtin "Decision Procedure Simplify")
      )
      (branch " Case 2"
         (rule "empty_modality" (formula "2") (term "1"))
         (builtin "Update Simplification" (formula "2"))
         (rule "boolean_equal" (formula "2"))
         (rule "true_left" (formula "2"))
         (rule "eliminate_variable_declaration" (formula "4") (term "2"))
         (rule "throw_single_throughout" (formula "1") (term "1"))
         (builtin "Update Simplification" (formula "1"))
         (rule "not_left" (formula "1"))
         (rule "if_split" (formula "3"))
         (branch " if true true"
            (rule "boolean_equal" (formula "1") (term "2"))
            (builtin "Update Simplification" (formula "1"))
            (rule "true_left" (formula "1"))
            (rule "postincrement" (formula "3") (term "2"))
            (rule "compound_int_cast_expression" (formula "3") (term "2") (inst "#v=i_1"))
            (rule "throw_single_throughout" (formula "3") (term "1,0,0,2"))
            (rule "variable_declaration_allmodal" (formula "3") (term "2"))
            (rule "eliminate_variable_declaration" (formula "3") (term "2"))
            (rule "remove_parentheses_right" (formula "3") (term "2"))
            (rule "assignment_addition_tout" (formula "3") (term "2"))
            (builtin "Update Simplification" (formula "3"))
            (rule "boolean_not_equal_2" (formula "3") (term "0,0,0"))
            (rule "boolean_not_equal_2" (formula "3") (term "0,0,1,0"))
            (rule "boolean_not_equal_2" (formula "3") (term "0,0,0,1"))
            (rule "boolean_not_equal_2" (formula "3") (term "0,0,1,0,1"))
            (rule "concrete_impl_2" (formula "3") (term "0,0"))
            (rule "concrete_not_2" (formula "3") (term "0,1,0"))
            (rule "concrete_impl_2" (formula "3") (term "0,0,1"))
            (rule "concrete_not_2" (formula "3") (term "0,1,0,1"))
            (rule "concrete_and_1" (formula "3") (term "0"))
            (rule "concrete_and_1" (formula "3") (term "0,1"))
            (rule "concrete_impl_1" (formula "3") (term "0"))
            (rule "concrete_impl_1" (formula "3") (term "0,1"))
            (rule "switch_params" (formula "3") (term "2,1,1"))
            (rule "replace_known_right" (formula "3") (term "0,0,1") (ifseqformula "1"))
            (rule "concrete_not_2" (formula "3") (term "0,1"))
            (rule "concrete_impl_1" (formula "3") (term "1"))
            (rule "replace_known_right" (formula "3") (term "0,0") (ifseqformula "1"))
            (rule "concrete_not_2" (formula "3") (term "0"))
            (rule "concrete_and_1" (formula "3"))
            (rule "cast_4" (formula "3") (term "3"))
            (rule "assignment_throughout" (formula "3") (term "3"))
            (builtin "Update Simplification" (formula "3"))
            (rule "boolean_not_equal_2" (formula "3") (term "0,0,0"))
            (rule "boolean_not_equal_2" (formula "3") (term "0,0,1,0"))
            (rule "boolean_not_equal_2" (formula "3") (term "0,0,0,1"))
            (rule "boolean_not_equal_2" (formula "3") (term "0,0,1,0,1"))
            (rule "concrete_impl_2" (formula "3") (term "0,0"))
            (rule "concrete_not_2" (formula "3") (term "0,1,0"))
            (rule "concrete_impl_2" (formula "3") (term "0,0,1"))
            (rule "concrete_not_2" (formula "3") (term "0,1,0,1"))
            (rule "concrete_and_1" (formula "3") (term "0"))
            (rule "concrete_and_1" (formula "3") (term "0,1"))
            (rule "concrete_impl_1" (formula "3") (term "0"))
            (rule "concrete_impl_1" (formula "3") (term "0,1"))
            (rule "replace_known_right" (formula "3") (term "0,0,1") (ifseqformula "1"))
            (rule "concrete_not_2" (formula "3") (term "0,1"))
            (rule "concrete_impl_1" (formula "3") (term "1"))
            (rule "replace_known_right" (formula "3") (term "0,0") (ifseqformula "1"))
            (rule "concrete_not_2" (formula "3") (term "0"))
            (rule "concrete_and_1" (formula "3"))
            (rule "try_empty" (formula "3") (term "2"))
            (rule "method_call_empty" (formula "3") (term "2"))
            (rule "empty_modality" (formula "3") (term "2"))
            (builtin "Update Simplification" (formula "3"))
            (rule "boolean_not_equal_2" (formula "3") (term "0,0"))
            (rule "boolean_not_equal_2" (formula "3") (term "0,0,1"))
            (rule "concrete_impl_2" (formula "3") (term "0"))
            (rule "concrete_not_2" (formula "3") (term "0,1"))
            (rule "concrete_and_1" (formula "3"))
            (rule "concrete_impl_1" (formula "3"))
            (rule "not_right" (formula "3"))
            (builtin "Decision Procedure Simplify")
         )
         (branch " if true false"
            (rule "boolean_not_equal_1" (formula "1") (term "2"))
            (builtin "Update Simplification" (formula "1"))
            (rule "close_by_false" (formula "1"))
         )
      )
   )
)
(branch " Use Case"
   (builtin "Update Simplification" (formula "2"))
   (rule "false_to_not_true" (formula "2") (term "0,0,1,1"))
   (rule "imp_right" (formula "2"))
   (rule "geq_to_lt" (formula "1"))
   (rule "not_left" (formula "1"))
   (rule "variable_declaration_allmodal" (formula "3") (term "1"))
   (rule "empty_modality" (formula "3") (term "1,0,1"))
   (rule "eliminate_variable_declaration" (formula "3") (term "1"))
   (rule "assignment_normalassign" (formula "3") (term "1"))
   (builtin "Update Simplification" (formula "3"))
   (rule "method_call_empty" (formula "3") (term "2"))
   (rule "empty_modality" (formula "3") (term "2"))
   (builtin "Update Simplification" (formula "3"))
   (rule "boolean_equal" (formula "3") (term "0,0"))
   (rule "concrete_not_1" (formula "3") (term "0"))
   (rule "concrete_impl_2" (formula "3"))
   (rule "close_by_true" (formula "3"))
)
)

}
