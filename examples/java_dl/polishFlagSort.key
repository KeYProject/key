// This file is part of KeY - Integrated Deductive Software Design
// Copyright (C) 2001-2009 Universitaet Karlsruhe, Germany
//                         Universitaet Koblenz-Landau, Germany
//                         Chalmers University of Technology, Sweden
//
// The KeY system is protected by the GNU General Public License. 
// See LICENSE.TXT for details.
\settings {
"#Proof-Settings-Config-File
#Wed Jun 20 18:51:42 CEST 2007
[General]SoundNotification=false
[DecisionProcedure]SmtBenchmarkArchiving=false
[View]FontIndex=0
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_EXPAND
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[SimultaneousUpdateSimplifier]DeleteEffectLessLocations=true
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_NONE
[General]SuggestiveVarNames=false
[View]ShowWholeTaclet=false
[General]ProofAssistant=false
[View]MaxTooltipLines=40
[General]DnDDirectionSensitive=false
[SimultaneousUpdateSimplifier]EagerSimplification=false
[General]StupidMode=false
[Strategy]Timeout=-1
[Strategy]MaximumNumberOfAutomaticApplications=10000

[StrategyProperty]QUERY_OPTIONS_KEY=QUERY_EXPAND
[Choice]DefaultChoices=transactions-transactions\:transactionsOn , programRules-programRules\:Java , throughout-throughout\:toutOn , transactionAbort-transactionAbort\:abortOn , initialisation-initialisation\:disableStaticInitialisation , intRules-intRules\:arithmeticSemanticsIgnoringOF , assertions-assertions\:on , nullPointerPolicy-nullPointerPolicy\:nullCheck
[DecisionProcedure]SmtZipProblemDir=false
[Model]Source=1
[Choice]Choices=transactions-transactions\:transactionsOn-transactions\:transactionsOff , programRules-programRules\:ODL-programRules\:Java , throughout-throughout\:toutOff-throughout\:toutOn , initialisation-initialisation\:disableStaticInitialisation-initialisation\:enableStaticInitialisation , transactionAbort-transactionAbort\:abortOff-transactionAbort\:abortOn , intRules-intRules\:arithmeticSemanticsCheckingOF-intRules\:javaSemantics-intRules\:arithmeticSemanticsIgnoringOF , assertions-assertions\:safe-assertions\:off-assertions\:on , nullPointerPolicy-nullPointerPolicy\:noNullCheck-nullPointerPolicy\:nullCheck
[DecisionProcedure]SmtUseQuantifiers=true
[View]HideIntermediateProofsteps=false
[DecisionProcedure]=SIMPLIFY
[General]OuterRenaming=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_NORMAL
"
}

\javaSource "PolishFlagSort/";

\programVariables {
int[] ar;
int[] oldie;
PolishFlagSort self_PolishFlagSort;
}

\functions {
}

\problem {
   inReachableState
-> \forall jint[] ar_lv; 
     {ar:=ar_lv}
       (     ar.<created>@(java.lang.Object) = TRUE
           & !ar = null
         | ar = null
        -> {oldie:=ar}
             (     !ar = null
                 & \forall jint i; 
                     (   0 <= i & i <  ar.length
                      ->   ar[i] = PolishFlagSort.RED
                         | ar[i] = PolishFlagSort.WHITE)
              -> \<{ {
                       PolishFlagSort.sort(ar)@PolishFlagSort;
                     }
                   }\> \forall jint I; 
                         \forall jint J; 
                           (     0 <= I
                               & (  I <  J
                                  &    J
                                    <  oldie.length)
                            ->    oldie[I]
                               <= oldie[J])))

}
