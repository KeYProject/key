\settings {
"#Proof-Settings-Config-File
#Tue Apr 04 15:37:17 CEST 2006
[General]SoundNotification=false
[View]FontIndex=0
[SimultaneousUpdateSimplifier]DeleteEffectLessLocations=true
[General]SuggestiveVarNames=false
[View]ShowWholeTaclet=false
[General]ProofAssistant=false
[View]MaxTooltipLines=40
[SimultaneousUpdateSimplifier]EagerSimplification=false
[General]StupidMode=false
[Strategy]MaximumNumberOfAutomaticApplications=10000

[Choice]DefaultChoices=transactions-transactions\:transactionsOn , programRules-programRules\:Java , throughout-throughout\:toutOn , transactionAbort-transactionAbort\:abortOff , initialisation-initialisation\:disableStaticInitialisation , intRules-intRules\:arithmeticSemanticsIgnoringOF , nullPointerPolicy-nullPointerPolicy\:nullCheck
[OCLRef]Null=false
[OCLRef]ExcThrown=false
[Model]Source=1
[Choice]Choices=transactions-transactions\:transactionsOff-transactions\:transactionsOn , programRules-programRules\:ODL-programRules\:Java , transactionsPolicy-transactionsPolicy\:abortTransaction-transactionsPolicy\:noAbortTransaction , transactionAbort-transactionAbort\:abortOff-transactionAbort\:abortOn , initialisation-initialisation\:disableStaticInitialisation-initialisation\:enableStaticInitialisation , throughout-throughout\:toutOff-throughout\:toutOn , intRules-intRules\:arithmeticSemanticsCheckingOF-intRules\:javaSemantics-intRules\:arithmeticSemanticsIgnoringOF , nullPointerPolicy-nullPointerPolicy\:noNullCheck-nullPointerPolicy\:nullCheck
[OCLRef]Array=false
[DecisionProcedure]=SIMPLIFY
[General]OuterRenaming=true
[Strategy]ActiveStrategy=Simple JavaCardDL without unwinding loops
"
}





\javaSource "while_demo_trans/";

\withOptions intRules:arithmeticSemanticsIgnoringOF,
             throughout:toutOn,
	     transactions:transactionsOn,
	     transactionAbort:abortOff;


\programVariables { MyClass self;}


\problem {
   !self = null
-> \throughout_trc{
                    self.i=0;
                    self.j=0;
                    while ( self.i++<10 ) {
                      self.j++;
                    }
                    de.uka.ilkd.key.javacard.KeYJCSystem.jvmCommitTransaction();
                  }\endmodality self.j@(MyClass) = 10

}

\proof {
(keyLog "0" (keyUser "woj" ) (keyVersion "0.1998"))
(keyLog "1" (keyUser "richard" ) (keyVersion "0.2004"))
(keyLog "2" (keyUser "richard" ) (keyVersion "0.2037"))

(branch "dummy ID"
(rule "imp_right" (formula "1"))
(rule "not_left" (formula "1"))
(rule "assignment_write_attribute" (formula "2"))
(branch " Normal Execution (self != null)"
   (rule "assignment_write_attribute" (formula "2") (term "2"))
   (branch " Normal Execution (self != null)"
      (builtin "Update Simplification" (formula "3"))
      (builtin "Update Simplification" (formula "2"))
      (rule "while_inv_boxtout_trc" (formula "2") (inst "#modifies={self.i@(MyClass),self.j@(MyClass)}") (inst "inv=  self.i@(MyClass) = self.j@(MyClass)
& self.i@(MyClass) >= 0
& self.i@(MyClass) <= 10") (inst "#v1=b"))
      (branch " Invariant Initially Valid"
         (builtin "Update Simplification" (formula "2"))
         (rule "close_eq" (formula "2") (term "0,0"))
         (rule "concrete_and_1" (formula "2") (term "0"))
         (rule "leq_literals" (formula "2") (term "1"))
         (rule "concrete_and_3" (formula "2"))
         (rule "qeq_literals" (formula "2"))
         (rule "close_by_true" (formula "2"))
      )
      (branch " Body Preserves Invariant"
         (builtin "Update Simplification" (formula "2"))
         (rule "commute_eq" (formula "2") (term "0,0,0"))
         (rule "commute_eq" (formula "2") (term "0,0,1,1,0,4,1,1"))
         (rule "imp_right" (formula "2"))
         (rule "imp_right" (formula "3"))
         (rule "and_left" (formula "2"))
         (rule "and_left" (formula "2"))
         (rule "apply_eq" (formula "6") (term "3") (ifseqformula "2"))
         (rule "apply_eq" (formula "1") (term "3") (ifseqformula "2"))
         (rule "make_insert_eq_nonrigid" (formula "2"))
         (rule "leq_to_gt" (formula "4"))
         (rule "not_left" (formula "4"))
         (rule "geq_to_lt" (formula "3"))
         (rule "not_left" (formula "3"))
         (rule "geq_to_lt" (formula "6") (term "1,0,1,1,0,4"))
         (rule "leq_to_gt" (formula "6") (term "1,1,1,0,4"))
         (rule "greater" (formula "4"))
         (rule "greater" (formula "6") (term "0,1,1,1,0,4"))
         (rule "throw_in_block_ignore_trail" (formula "6") (term "1,0,0,4"))
         (rule "variable_declaration_allmodal" (formula "1") (term "4"))
         (rule "variable_declaration_allmodal" (formula "6") (term "4"))
         (rule "eliminate_variable_declaration" (formula "1") (term "4"))
         (rule "throw_single_partial" (formula "6") (term "1,0,0,4"))
         (rule "concrete_impl_4" (formula "6") (term "0,0,4"))
         (rule "concrete_and_1" (formula "6") (term "0,4"))
         (rule "compound_less_than_comparison_1" (formula "1") (term "4") (inst "#v0=i"))
         (rule "eliminate_variable_declaration" (formula "6") (term "4"))
         (rule "variable_declaration_allmodal" (formula "1") (term "4"))
         (rule "assignment_normalassign" (formula "6") (term "4"))
         (builtin "Update Simplification" (formula "6"))
         (rule "eliminate_variable_declaration" (formula "1") (term "4"))
         (rule "postincrement_assignment_attribute" (formula "1") (term "4") (inst "#v1=i_1") (inst "#v=myClass"))
         (rule "eliminate_variable_declaration" (formula "6") (term "5"))
         (rule "variable_declaration_allmodal" (formula "1") (term "4"))
         (rule "if_eval" (formula "6") (term "5") (inst "#boolv=b"))
         (rule "eliminate_variable_declaration" (formula "1") (term "4"))
         (rule "eliminate_variable_declaration" (formula "6") (term "5"))
         (rule "assignment_normalassign" (formula "1") (term "4"))
         (builtin "Update Simplification" (formula "1"))
         (rule "compound_less_than_comparison_1" (formula "6") (term "5") (inst "#v0=i"))
         (rule "variable_declaration_allmodal" (formula "1") (term "5"))
         (rule "variable_declaration_allmodal" (formula "6") (term "5"))
         (rule "eliminate_variable_declaration" (formula "1") (term "5"))
         (rule "eliminate_variable_declaration" (formula "6") (term "5"))
         (rule "postincrement_assignment_attribute" (formula "6") (term "5") (inst "#v1=i_3") (inst "#v=myClass"))
         (rule "assignment_read_attribute" (formula "1") (term "5"))
         (branch " Normal Execution (myClass != null)"
            (builtin "Update Simplification" (formula "1"))
            (builtin "Update Simplification" (formula "3"))
            (rule "variable_declaration_allmodal" (formula "6") (term "5"))
            (rule "eval_order_access4" (formula "1") (term "6") (inst "#v1=i_2") (inst "#v0=myClass_1"))
            (rule "eliminate_variable_declaration" (formula "6") (term "5"))
            (rule "if_eval" (formula "1") (term "6") (inst "#boolv=b_1"))
            (rule "assignment_normalassign" (formula "6") (term "5"))
            (builtin "Update Simplification" (formula "6"))
            (rule "eliminate_variable_declaration" (formula "1") (term "6"))
            (rule "variable_declaration_allmodal" (formula "6") (term "6"))
            (rule "equality_comparison_new" (formula "1") (term "6"))
            (builtin "Update Simplification" (formula "1"))
            (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "5"))
            (rule "concrete_not_2" (formula "1") (term "0"))
            (rule "ifthenelse_true_for" (formula "1"))
            (rule "if_skip_then" (formula "1") (term "6"))
            (rule "eliminate_variable_declaration" (formula "6") (term "6"))
            (rule "assignment_normalassign" (formula "1") (term "6"))
            (builtin "Update Simplification" (formula "1"))
            (rule "assignment_read_attribute" (formula "6") (term "6"))
            (branch " Normal Execution (myClass_1 != null)"
               (builtin "Update Simplification" (formula "7"))
               (builtin "Update Simplification" (formula "6"))
               (rule "variable_declaration_allmodal" (formula "1") (term "6"))
               (rule "eval_order_access4" (formula "6") (term "7") (inst "#v1=i_4") (inst "#v0=myClass_2"))
               (rule "eliminate_variable_declaration" (formula "1") (term "6"))
               (rule "if_eval" (formula "6") (term "7") (inst "#boolv=b_2"))
               (rule "assignment_normalassign" (formula "1") (term "6"))
               (builtin "Update Simplification" (formula "1"))
               (rule "eliminate_variable_declaration" (formula "6") (term "7"))
               (rule "variable_declaration_allmodal" (formula "1") (term "7"))
               (rule "equality_comparison_new" (formula "6") (term "7"))
               (builtin "Update Simplification" (formula "6"))
               (rule "replace_known_right" (formula "6") (term "0,0") (ifseqformula "5"))
               (rule "concrete_not_2" (formula "6") (term "0"))
               (rule "ifthenelse_true_for" (formula "6"))
               (rule "if_skip_then" (formula "6") (term "7"))
               (rule "eliminate_variable_declaration" (formula "1") (term "7"))
               (rule "assignment_normalassign" (formula "6") (term "7"))
               (builtin "Update Simplification" (formula "6"))
               (rule "compound_int_cast_expression" (formula "1") (term "7") (inst "#v=i_5"))
               (rule "variable_declaration_allmodal" (formula "6") (term "7"))
               (rule "variable_declaration_allmodal" (formula "1") (term "7"))
               (rule "eliminate_variable_declaration" (formula "6") (term "7"))
               (rule "eliminate_variable_declaration" (formula "1") (term "7"))
               (rule "assignment_normalassign" (formula "6") (term "7"))
               (builtin "Update Simplification" (formula "6"))
               (rule "remove_parentheses_right" (formula "1") (term "7"))
               (rule "variable_declaration_allmodal" (formula "6") (term "8"))
               (rule "compound_addition_1" (formula "1") (term "7") (inst "#v=i_6"))
               (rule "eliminate_variable_declaration" (formula "6") (term "8"))
               (rule "variable_declaration_allmodal" (formula "1") (term "7"))
               (rule "compound_int_cast_expression" (formula "6") (term "8") (inst "#v=i_7"))
               (rule "eliminate_variable_declaration" (formula "1") (term "7"))
               (rule "variable_declaration_allmodal" (formula "6") (term "8"))
               (rule "assignment_read_attribute" (formula "1") (term "7"))
               (branch " Normal Execution (myClass != null)"
                  (builtin "Update Simplification" (formula "1"))
                  (builtin "Update Simplification" (formula "3"))
                  (rule "assignment_addition" (formula "1") (term "7"))
                  (builtin "Update Simplification" (formula "1"))
                  (rule "polySimp_mulOne3" (formula "1") (term "1"))
                  (rule "polySimp_addComm0" (formula "1") (term "1"))
                  (rule "cast_4" (formula "1") (term "7"))
                  (rule "eliminate_variable_declaration" (formula "6") (term "8"))
                  (rule "assignment_normalassign" (formula "1") (term "7"))
                  (builtin "Update Simplification" (formula "1"))
                  (rule "remove_parentheses_right" (formula "6") (term "8"))
                  (rule "assignment_write_attribute" (formula "1") (term "7"))
                  (branch " Normal Execution (myClass_2 != null)"
                     (builtin "Update Simplification" (formula "1"))
                     (builtin "Update Simplification" (formula "3"))
                     (rule "compound_addition_1" (formula "6") (term "8") (inst "#v=i_9"))
                     (rule "assignment_normalassign" (formula "1") (term "5"))
                     (builtin "Update Simplification" (formula "1"))
                     (rule "variable_declaration_allmodal" (formula "6") (term "8"))
                     (rule "less_than_comparison_new" (formula "1") (term "5"))
                     (builtin "Update Simplification" (formula "1"))
                     (rule "ifthenelse_split_for" (formula "1"))
                     (branch " MyClass__i_7(self) <  10 TRUE"
                        (rule "eliminate_variable_declaration" (formula "7") (term "8"))
                        (rule "assignment_normalassign" (formula "2") (term "4"))
                        (builtin "Update Simplification" (formula "2"))
                        (rule "assignment_read_attribute" (formula "7") (term "8"))
                        (branch " Normal Execution (myClass_1 != null)"
                           (builtin "Update Simplification" (formula "8"))
                           (builtin "Update Simplification" (formula "7"))
                           (rule "assignment_addition" (formula "7") (term "8"))
                           (builtin "Update Simplification" (formula "7"))
                           (rule "polySimp_mulOne3" (formula "7") (term "2"))
                           (rule "polySimp_addComm0" (formula "7") (term "2"))
                           (rule "cast_4" (formula "7") (term "8"))
                           (rule "method_call_empty" (formula "2") (term "5"))
                           (rule "assignment_normalassign" (formula "7") (term "8"))
                           (builtin "Update Simplification" (formula "7"))
                           (rule "empty_modality" (formula "2") (term "5"))
                           (builtin "Update Simplification" (formula "2"))
                           (rule "boolean_equal" (formula "2"))
                           (rule "true_left" (formula "2"))
                           (rule "assignment_write_attribute" (formula "6") (term "8"))
                           (branch " Normal Execution (myClass_3 != null)"
                              (builtin "Update Simplification" (formula "7"))
                              (builtin "Update Simplification" (formula "6"))
                              (rule "assignment_normalassign" (formula "6") (term "6"))
                              (builtin "Update Simplification" (formula "6"))
                              (rule "less_than_comparison_new" (formula "6") (term "6"))
                              (builtin "Update Simplification" (formula "6"))
                              (rule "replace_known_left" (formula "6") (term "0") (ifseqformula "1"))
                              (rule "ifthenelse_true_for" (formula "6"))
                              (rule "if_enter_then" (formula "6") (term "5"))
                              (rule "assignment_normalassign" (formula "6") (term "5"))
                              (builtin "Update Simplification" (formula "6"))
                              (rule "postincrement_attribute" (formula "6") (term "5") (inst "#v=myClass"))
                              (rule "variable_declaration_allmodal" (formula "6") (term "5"))
                              (rule "eliminate_variable_declaration" (formula "6") (term "5"))
                              (rule "assignment_normalassign" (formula "6") (term "5"))
                              (builtin "Update Simplification" (formula "6"))
                              (rule "eval_order_access4" (formula "6") (term "6") (inst "#v1=i") (inst "#v0=myClass_5"))
                              (rule "if_eval" (formula "6") (term "6") (inst "#boolv=b"))
                              (rule "eliminate_variable_declaration" (formula "6") (term "6"))
                              (rule "equality_comparison_new" (formula "6") (term "6"))
                              (builtin "Update Simplification" (formula "6"))
                              (rule "replace_known_right" (formula "6") (term "0,0") (ifseqformula "5"))
                              (rule "concrete_not_2" (formula "6") (term "0"))
                              (rule "ifthenelse_true_for" (formula "6"))
                              (rule "if_skip_then" (formula "6") (term "6"))
                              (rule "assignment_normalassign" (formula "6") (term "6"))
                              (builtin "Update Simplification" (formula "6"))
                              (rule "variable_declaration_allmodal" (formula "6") (term "6"))
                              (rule "eliminate_variable_declaration" (formula "6") (term "6"))
                              (rule "assignment_normalassign" (formula "6") (term "6"))
                              (builtin "Update Simplification" (formula "6"))
                              (rule "variable_declaration_allmodal" (formula "6") (term "7"))
                              (rule "eliminate_variable_declaration" (formula "6") (term "7"))
                              (rule "compound_int_cast_expression" (formula "6") (term "7") (inst "#v=i_11"))
                              (rule "variable_declaration_allmodal" (formula "6") (term "7"))
                              (rule "eliminate_variable_declaration" (formula "6") (term "7"))
                              (rule "remove_parentheses_right" (formula "6") (term "7"))
                              (rule "compound_addition_1" (formula "6") (term "7") (inst "#v=i_12"))
                              (rule "variable_declaration_allmodal" (formula "6") (term "7"))
                              (rule "eliminate_variable_declaration" (formula "6") (term "7"))
                              (rule "assignment_read_attribute" (formula "6") (term "7"))
                              (branch " Normal Execution (myClass_4 != null)"
                                 (builtin "Update Simplification" (formula "7"))
                                 (builtin "Update Simplification" (formula "6"))
                                 (rule "assignment_addition" (formula "6") (term "7"))
                                 (builtin "Update Simplification" (formula "6"))
                                 (rule "polySimp_mulOne3" (formula "6") (term "1"))
                                 (rule "polySimp_addComm0" (formula "6") (term "1"))
                                 (rule "cast_4" (formula "6") (term "7"))
                                 (rule "assignment_normalassign" (formula "6") (term "7"))
                                 (builtin "Update Simplification" (formula "6"))
                                 (rule "assignment_write_attribute" (formula "6") (term "7"))
                                 (branch " Normal Execution (myClass_5 != null)"
                                    (builtin "Update Simplification" (formula "7"))
                                    (builtin "Update Simplification" (formula "6"))
                                    (rule "try_empty" (formula "6") (term "5"))
                                    (rule "method_call_empty" (formula "6") (term "5"))
                                    (rule "empty_modality" (formula "6") (term "5"))
                                    (builtin "Update Simplification" (formula "6"))
                                    (rule "boolean_not_equal_2" (formula "6") (term "0,0"))
                                    (rule "close_eq" (formula "6") (term "0,0,1"))
                                    (rule "concrete_not_2" (formula "6") (term "0"))
                                    (rule "concrete_and_1" (formula "6") (term "0,1"))
                                    (rule "concrete_impl_1" (formula "6"))
                                    (rule "and_right" (formula "6"))
                                    (branch " Case 1"
                                       (rule "not_right" (formula "6"))
                                       (builtin "Decision Procedure Simplify")
                                    )
                                    (branch " Case 2"
                                       (rule "not_right" (formula "6"))
                                       (rule "less_trans" (formula "1") (ifseqformula "2"))
                                       (builtin "Decision Procedure Simplify")
                                    )
                                 )
                                 (branch " Null Reference (myClass_5 = null)"
                                    (builtin "Update Simplification" (formula "7"))
                                    (builtin "Update Simplification" (formula "1"))
                                    (rule "close_goal" (formula "6") (ifseqformula "1"))
                                 )
                              )
                              (branch " Null Reference (myClass_4 = null)"
                                 (builtin "Update Simplification" (formula "7"))
                                 (builtin "Update Simplification" (formula "1"))
                                 (rule "close_goal" (formula "6") (ifseqformula "1"))
                              )
                           )
                           (branch " Null Reference (myClass_3 = null)"
                              (builtin "Update Simplification" (formula "7"))
                              (builtin "Update Simplification" (formula "1"))
                              (rule "close_goal" (formula "6") (ifseqformula "1"))
                           )
                        )
                        (branch " Null Reference (myClass_1 = null)"
                           (builtin "Update Simplification" (formula "8"))
                           (builtin "Update Simplification" (formula "1"))
                           (rule "close_goal" (formula "7") (ifseqformula "1"))
                        )
                     )
                     (branch " MyClass__i_7(self) <  10 FALSE"
                        (rule "less_is_alternative_2" (formula "5") (ifseqformula "3"))
                        (rule "apply_eq" (formula "2") (term "0,1,1") (ifseqformula "1"))
                        (rule "mul_literals" (formula "2") (term "1,1"))
                        (rule "add_literals" (formula "2") (term "1"))
                        (rule "apply_eq" (formula "4") (term "0") (ifseqformula "1"))
                        (rule "less_literals" (formula "4"))
                        (rule "false_right" (formula "4"))
                        (rule "apply_eq" (formula "2") (term "3") (ifseqformula "1"))
                        (rule "apply_eq" (formula "5") (term "1") (ifseqformula "1"))
                        (rule "less_literals" (formula "5"))
                        (rule "false_right" (formula "5"))
                        (rule "apply_eq" (formula "3") (term "1") (ifseqformula "1"))
                        (rule "apply_eq" (formula "6") (term "1") (ifseqformula "1"))
                        (rule "apply_eq" (formula "4") (term "0") (ifseqformula "1"))
                        (rule "less_literals" (formula "4"))
                        (rule "false_right" (formula "4"))
                        (rule "apply_eq" (formula "5") (term "5") (ifseqformula "1"))
                        (rule "apply_eq" (formula "5") (term "7") (ifseqformula "1"))
                        (rule "make_insert_eq_nonrigid" (formula "1"))
                        (rule "make_insert_eq_nonrigid" (formula "3"))
                        (rule "assignment_normalassign" (formula "2") (term "4"))
                        (builtin "Update Simplification" (formula "2"))
                        (rule "eliminate_variable_declaration" (formula "5") (term "8"))
                        (rule "method_call_empty" (formula "2") (term "5"))
                        (rule "assignment_read_attribute" (formula "5") (term "8"))
                        (branch " Normal Execution (myClass_1 != null)"
                           (builtin "Update Simplification" (formula "6"))
                           (builtin "Update Simplification" (formula "5"))
                           (rule "assignment_addition" (formula "5") (term "8"))
                           (builtin "Update Simplification" (formula "5"))
                           (rule "add_literals" (formula "5") (term "2"))
                           (rule "cast_4" (formula "5") (term "8"))
                           (rule "empty_modality" (formula "2") (term "5"))
                           (builtin "Update Simplification" (formula "2"))
                           (rule "boolean_not_equal_2" (formula "2"))
                           (rule "close_by_false" (formula "2"))
                        )
                        (branch " Null Reference (myClass_1 = null)"
                           (builtin "Update Simplification" (formula "6"))
                           (builtin "Update Simplification" (formula "1"))
                           (rule "close_goal" (formula "5") (ifseqformula "1"))
                        )
                     )
                  )
                  (branch " Null Reference (myClass_2 = null)"
                     (builtin "Update Simplification" (formula "2"))
                     (builtin "Update Simplification" (formula "1"))
                     (rule "close_goal" (formula "6") (ifseqformula "1"))
                  )
               )
               (branch " Null Reference (myClass = null)"
                  (builtin "Update Simplification" (formula "2"))
                  (builtin "Update Simplification" (formula "1"))
                  (rule "close_goal" (formula "6") (ifseqformula "1"))
               )
            )
            (branch " Null Reference (myClass_1 = null)"
               (builtin "Update Simplification" (formula "1"))
               (rule "close_goal" (formula "6") (ifseqformula "1"))
            )
         )
         (branch " Null Reference (myClass = null)"
            (builtin "Update Simplification" (formula "1"))
            (rule "close_goal" (formula "6") (ifseqformula "1"))
         )
      )
      (branch " Use Case"
         (builtin "Update Simplification" (formula "2"))
         (rule "false_to_not_true" (formula "2") (term "0,0,4,1"))
         (rule "commute_eq" (formula "2") (term "0,0,0"))
         (rule "imp_right" (formula "2"))
         (rule "and_left" (formula "1"))
         (rule "and_left" (formula "1"))
         (rule "apply_eq" (formula "5") (term "3") (ifseqformula "1"))
         (rule "make_insert_eq_nonrigid" (formula "1"))
         (rule "leq_to_gt" (formula "3"))
         (rule "not_left" (formula "3"))
         (rule "geq_to_lt" (formula "2"))
         (rule "not_left" (formula "2"))
         (rule "greater" (formula "3"))
         (rule "variable_declaration_allmodal" (formula "5") (term "4"))
         (rule "static_method_call_static_via_typereference" (formula "5") (term "1,0,4"))
         (rule "eliminate_variable_declaration" (formula "5") (term "4"))
         (rule "compound_less_than_comparison_1" (formula "5") (term "4") (inst "#v0=i"))
         (rule "tout_transaction_commit1" (formula "5") (term "1,0,4"))
         (rule "polySimp_mulOne3" (formula "5") (term "0,1,0,4"))
         (rule "polySimp_addComm0" (formula "5") (term "0,1,0,4"))
         (rule "variable_declaration_allmodal" (formula "5") (term "4"))
         (rule "empty_modality" (formula "5") (term "1,1,0,4"))
         (rule "eliminate_variable_declaration" (formula "5") (term "4"))
         (rule "postincrement_assignment_attribute" (formula "5") (term "4") (inst "#v1=i_1") (inst "#v=myClass"))
         (rule "variable_declaration_allmodal" (formula "5") (term "4"))
         (rule "eliminate_variable_declaration" (formula "5") (term "4"))
         (rule "assignment_normalassign" (formula "5") (term "4"))
         (builtin "Update Simplification" (formula "5"))
         (rule "variable_declaration_allmodal" (formula "5") (term "5"))
         (rule "eliminate_variable_declaration" (formula "5") (term "5"))
         (rule "assignment_read_attribute" (formula "5") (term "5"))
         (branch " Normal Execution (myClass != null)"
            (builtin "Update Simplification" (formula "6"))
            (builtin "Update Simplification" (formula "5"))
            (rule "eval_order_access4" (formula "5") (term "6") (inst "#v1=i_2") (inst "#v0=myClass_1"))
            (rule "if_eval" (formula "5") (term "6") (inst "#boolv=b_1"))
            (rule "eliminate_variable_declaration" (formula "5") (term "6"))
            (rule "equality_comparison_new" (formula "5") (term "6"))
            (builtin "Update Simplification" (formula "5"))
            (rule "replace_known_right" (formula "5") (term "0,0") (ifseqformula "4"))
            (rule "concrete_not_2" (formula "5") (term "0"))
            (rule "ifthenelse_true_for" (formula "5"))
            (rule "if_skip_then" (formula "5") (term "6"))
            (rule "assignment_normalassign" (formula "5") (term "6"))
            (builtin "Update Simplification" (formula "5"))
            (rule "variable_declaration_allmodal" (formula "5") (term "6"))
            (rule "eliminate_variable_declaration" (formula "5") (term "6"))
            (rule "assignment_normalassign" (formula "5") (term "6"))
            (builtin "Update Simplification" (formula "5"))
            (rule "variable_declaration_allmodal" (formula "5") (term "7"))
            (rule "eliminate_variable_declaration" (formula "5") (term "7"))
            (rule "compound_int_cast_expression" (formula "5") (term "7") (inst "#v=i_3"))
            (rule "variable_declaration_allmodal" (formula "5") (term "7"))
            (rule "eliminate_variable_declaration" (formula "5") (term "7"))
            (rule "remove_parentheses_right" (formula "5") (term "7"))
            (rule "compound_addition_1" (formula "5") (term "7") (inst "#v=i_4"))
            (rule "variable_declaration_allmodal" (formula "5") (term "7"))
            (rule "eliminate_variable_declaration" (formula "5") (term "7"))
            (rule "assignment_read_attribute" (formula "5") (term "7"))
            (branch " Normal Execution (myClass != null)"
               (builtin "Update Simplification" (formula "6"))
               (builtin "Update Simplification" (formula "5"))
               (rule "assignment_addition" (formula "5") (term "7"))
               (builtin "Update Simplification" (formula "5"))
               (rule "polySimp_mulOne3" (formula "5") (term "1"))
               (rule "polySimp_addComm0" (formula "5") (term "1"))
               (rule "cast_4" (formula "5") (term "7"))
               (rule "assignment_normalassign" (formula "5") (term "7"))
               (builtin "Update Simplification" (formula "5"))
               (rule "assignment_write_attribute" (formula "5") (term "7"))
               (branch " Normal Execution (myClass_1 != null)"
                  (builtin "Update Simplification" (formula "6"))
                  (builtin "Update Simplification" (formula "5"))
                  (rule "assignment_normalassign" (formula "5") (term "5"))
                  (builtin "Update Simplification" (formula "5"))
                  (rule "less_than_comparison_new" (formula "5") (term "5"))
                  (builtin "Update Simplification" (formula "5"))
                  (rule "ifthenelse_split_for" (formula "5"))
                  (branch " MyClass__i_6(self) <  10 TRUE"
                     (rule "assignment_normalassign" (formula "6") (term "4"))
                     (builtin "Update Simplification" (formula "6"))
                     (rule "method_call_empty" (formula "6") (term "5"))
                     (rule "empty_modality" (formula "6") (term "5"))
                     (builtin "Update Simplification" (formula "6"))
                     (rule "boolean_equal" (formula "6") (term "0,0"))
                     (rule "concrete_not_1" (formula "6") (term "0"))
                     (rule "concrete_impl_2" (formula "6"))
                     (rule "close_by_true" (formula "6"))
                  )
                  (branch " MyClass__i_6(self) <  10 FALSE"
                     (rule "less_is_alternative_2" (formula "3") (ifseqformula "5"))
                     (rule "apply_eq" (formula "6") (term "0") (ifseqformula "1"))
                     (rule "less_literals" (formula "6"))
                     (rule "false_right" (formula "6"))
                     (rule "apply_eq" (formula "6") (term "0,1,1") (ifseqformula "1"))
                     (rule "mul_literals" (formula "6") (term "1,1"))
                     (rule "add_literals" (formula "6") (term "1"))
                     (rule "apply_eq" (formula "2") (term "1") (ifseqformula "1"))
                     (rule "apply_eq" (formula "3") (term "0") (ifseqformula "1"))
                     (rule "less_literals" (formula "3"))
                     (rule "false_right" (formula "3"))
                     (rule "apply_eq" (formula "3") (term "1") (ifseqformula "1"))
                     (rule "less_literals" (formula "3"))
                     (rule "false_right" (formula "3"))
                     (rule "apply_eq" (formula "4") (term "3") (ifseqformula "1"))
                     (rule "make_insert_eq_nonrigid" (formula "1"))
                     (rule "make_insert_eq_nonrigid" (formula "2"))
                     (rule "assignment_normalassign" (formula "4") (term "4"))
                     (builtin "Update Simplification" (formula "4"))
                     (rule "method_call_empty" (formula "4") (term "5"))
                     (rule "empty_modality" (formula "4") (term "5"))
                     (builtin "Update Simplification" (formula "4"))
                     (rule "boolean_not_equal_2" (formula "4") (term "0,0"))
                     (rule "close_eq" (formula "4") (term "1"))
                     (rule "concrete_not_2" (formula "4") (term "0"))
                     (rule "concrete_impl_4" (formula "4"))
                     (rule "close_by_true" (formula "4"))
                  )
               )
               (branch " Null Reference (myClass_1 = null)"
                  (builtin "Update Simplification" (formula "6"))
                  (builtin "Update Simplification" (formula "1"))
                  (rule "close_goal" (formula "5") (ifseqformula "1"))
               )
            )
            (branch " Null Reference (myClass = null)"
               (builtin "Update Simplification" (formula "6"))
               (builtin "Update Simplification" (formula "1"))
               (rule "close_goal" (formula "5") (ifseqformula "1"))
            )
         )
         (branch " Null Reference (myClass = null)"
            (builtin "Update Simplification" (formula "1"))
            (rule "close_goal" (formula "5") (ifseqformula "1"))
         )
      )
   )
   (branch " Null Reference (self = null)"
      (builtin "Update Simplification" (formula "1"))
      (rule "close_goal" (formula "2") (ifseqformula "1"))
   )
)
(branch " Null Reference (self = null)"
   (rule "close_goal" (formula "2") (ifseqformula "1"))
)
)

}
