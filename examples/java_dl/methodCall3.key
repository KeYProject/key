\settings {
"#Proof-Settings-Config-File
#Mon Apr 11 17:32:09 CEST 2005
[General]SoundNotification=false
[View]FontIndex=0
[SimultaneousUpdateSimplifier]DeleteEffectLessLocations=true
[General]SuggestiveVarNames=false
[General]ProofAssistant=false
[View]ShowWholeTaclet=false
[View]MaxTooltipLines=40
[General]StupidMode=true
[Strategy]MaximumNumberOfAutomaticApplications=10000
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_NORMAL
[Choice]DefaultChoices=transactionsPolicy-transactionsPolicy\:abortTransaction , programRules-programRules\:Java , initialisation-initialisation\:disableStaticInitialisation , intRules-intRules\:arithmeticSemanticsIgnoringOF , nullPointerPolicy-nullPointerPolicy\:nullCheck
[OCLRef]Null=true
[OCLRef]ExcThrown=true
[Model]Source=1
[Choice]Choices=programRules-programRules\:ODL-programRules\:Java , transactionsPolicy-transactionsPolicy\:abortTransaction-transactionsPolicy\:noAbortTransaction , initialisation-initialisation\:disableStaticInitialisation-initialisation\:enableStaticInitialisation , intRules-intRules\:arithmeticSemanticsCheckingOF-intRules\:javaSemantics-intRules\:arithmeticSemanticsIgnoringOF , nullPointerPolicy-nullPointerPolicy\:noNullCheck-nullPointerPolicy\:nullCheck
[OCLRef]Array=true
[DecisionProcedure]=SIMPLIFY
[General]OuterRenaming=true
[Strategy]ActiveStrategy=JavaCardDLStrategy
"
}

/**
@provable automatic
@statistic nodes 49
@statistic branches 2
@author Sebastian Wirkert (doc)

Example containing a recursive method invocation.
Because the if statement evaluates false,
	<i>recurse(true);</i>
will be called, recursively calling the method recurse.<br>
This method is executed, but the evaluated value is discarded, since it is not
assigned. 
Now our programm continues normally, returning the local variable x, which
holds the value 1. <br> 
Note that if the recursive method invocation statement would have been
	   <tt>return recurse(true);</tt>
our originally called method would have returned 0, since that is the value,
	    <tt>recurse(true);</tt>
evaluates.
*/


\javaSource "methodcall_java/";

// works in KeY 0.1235

\programVariables {
  Recurse o;
  int res;
}

\problem {
  o = null
| \<{
     res=o.recurse (false);
   }\> res = 1

}


