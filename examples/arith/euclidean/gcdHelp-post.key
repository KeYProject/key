\settings {
"#Proof-Settings-Config-File
#Wed Oct 10 14:13:20 CEST 2007
[General]SoundNotification=false
[DecisionProcedure]SmtBenchmarkArchiving=false
[View]FontIndex=2
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_EXPAND
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[SimultaneousUpdateSimplifier]DeleteEffectLessLocations=true
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[General]SuggestiveVarNames=false
[View]ShowWholeTaclet=false
[General]ProofAssistant=false
[View]MaxTooltipLines=40
[General]DnDDirectionSensitive=false
[SimultaneousUpdateSimplifier]EagerSimplification=false
[General]StupidMode=false
[Strategy]Timeout=-1
[Strategy]MaximumNumberOfAutomaticApplications=10000
[Libraries]Default=acc.key-false, stringRules.key-false, deprecatedRules.key-false
[StrategyProperty]QUERY_OPTIONS_KEY=QUERY_NONE
[Choice]DefaultChoices=One2OneZeroBufferChannel-One2OneZeroBufferChannel\:welchOriginal , transactions-transactions\:transactionsOn , programRules-programRules\:Java , throughout-throughout\:toutOn , transactionAbort-transactionAbort\:abortOn , initialisation-initialisation\:disableStaticInitialisation , intRules-intRules\:arithmeticSemanticsIgnoringOF , assertions-assertions\:on , nullPointerPolicy-nullPointerPolicy\:nullCheck , CSPRuleSet-CSPRuleSet\:ptNets
[DecisionProcedure]SmtZipProblemDir=false
[DecisionProcedureForTest]=SIMPLIFY
[Model]Source=1
[Choice]Choices=One2OneZeroBufferChannel-One2OneZeroBufferChannel\:welchCheckingClashes-One2OneZeroBufferChannel\:any2AnyWithPending-One2OneZeroBufferChannel\:welchOriginal , transactions-transactions\:transactionsOff-transactions\:transactionsOn , programRules-programRules\:ODL-programRules\:Java , throughout-throughout\:toutOff-throughout\:toutOn , initialisation-initialisation\:disableStaticInitialisation-initialisation\:enableStaticInitialisation , transactionAbort-transactionAbort\:abortOff-transactionAbort\:abortOn , intRules-intRules\:arithmeticSemanticsCheckingOF-intRules\:javaSemantics-intRules\:arithmeticSemanticsIgnoringOF , assertions-assertions\:safe-assertions\:off-assertions\:on , nullPointerPolicy-nullPointerPolicy\:noNullCheck-nullPointerPolicy\:nullCheck , CSPRuleSet-CSPRuleSet\:hnfRewriting-CSPRuleSet\:ptNets
[DecisionProcedure]SmtUseQuantifiers=true
[View]HideIntermediateProofsteps=false
[DecisionProcedure]=SIMPLIFY
[General]OuterRenaming=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
"
}

\javaSource "src/";

\programVariables {
int _big;
int b;
int _old1_b;
int _old0_a;
int _old2__big;
int _jmlresult8;
int a;
int _old3__small;
Gcd self_Gcd;
int _small;
int _jmlresult9;
}

\functions {
}

\problem {
   inReachableState
-> \forall int _small_lv; 
     {_small:=_small_lv}
       \forall int _big_lv; 
         {_big:=_big_lv}
           {_old3__small:=_small}
             {_old2__big:=_big}
               (   _small >= 0 & _big >= _small
                -> \<{ {
                         _jmlresult9=Gcd.gcdHelp(_big,_small)@Gcd;
                       }
                     }\> (   !_old2__big = 0
                          ->     jmod(_old2__big,
                                      _jmlresult9)
                               = 0
                             & (    jmod(_old3__small,
                                         _jmlresult9)
                                  = 0
                                & \forall jint x; 
                                    (     x >  0
                                        & (    jmod(_old2__big,
                                                    x)
                                             = 0
                                           &   jmod(_old3__small,
                                                    x)
                                             = 0)
                                     ->   jmod(_jmlresult9,
                                               x)
                                        = 0))))

}
