// This file is part of KeY - Integrated Deductive Software Design
// Copyright (C) 2001-2009 Universitaet Karlsruhe, Germany
//                         Universitaet Koblenz-Landau, Germany
//                         Chalmers University of Technology, Sweden
//
// The KeY system is protected by the GNU General Public License. 
// See LICENSE.TXT for details.
\settings {
"#Proof-Settings-Config-File
#Thu Jan 04 13:39:18 CET 2007
[General]SoundNotification=false
[DecisionProcedure]SmtBenchmarkArchiving=false
[View]FontIndex=2
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_EXPAND
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[SimultaneousUpdateSimplifier]DeleteEffectLessLocations=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_NONE
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_NORMAL
[General]SuggestiveVarNames=false
[View]ShowWholeTaclet=false
[General]ProofAssistant=false
[View]MaxTooltipLines=40
[General]DnDDirectionSensitive=false
[SimultaneousUpdateSimplifier]EagerSimplification=false
[General]StupidMode=false
[Strategy]MaximumNumberOfAutomaticApplications=1000

[StrategyProperty]QUERY_OPTIONS_KEY=QUERY_NONE
[Choice]DefaultChoices=testGeneration-testGeneration\:testOff , transactions-transactions\:transactionsOn , programRules-programRules\:Java , initialisation-initialisation\:disableStaticInitialisation , transactionAbort-transactionAbort\:abortOn , throughout-throughout\:toutOn , intRules-intRules\:arithmeticSemanticsIgnoringOF , assertions-assertions\:on , nullPointerPolicy-nullPointerPolicy\:nullCheck
[DecisionProcedure]SmtZipProblemDir=false
[Model]Source=1
[Choice]Choices=testGeneration-testGeneration\:testOn-testGeneration\:testOff , transactions-transactions\:transactionsOff-transactions\:transactionsOn , programRules-programRules\:ODL-programRules\:Java , transactionAbort-transactionAbort\:abortOff-transactionAbort\:abortOn , initialisation-initialisation\:disableStaticInitialisation-initialisation\:enableStaticInitialisation , throughout-throughout\:toutOff-throughout\:toutOn , intRules-intRules\:arithmeticSemanticsCheckingOF-intRules\:javaSemantics-intRules\:arithmeticSemanticsIgnoringOF , assertions-assertions\:safe-assertions\:off-assertions\:on , nullPointerPolicy-nullPointerPolicy\:noNullCheck-nullPointerPolicy\:nullCheck
[DecisionProcedure]=SIMPLIFY
[General]OuterRenaming=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
"
}

\javaSource "CubicSum_src/";

\programVariables {
int _old14_n;
java.lang.Exception _exc157;
int n;
CubicSum self_CubicSum;
int _jmlresult92;
}

\functions {
}

\problem {
   inReachableState
-> \forall int n_lv; 
     {n:=n_lv}
       {_old14_n:=n}
         (   n >= 0
          -> \[{
                 java.lang.Exception _exc157 = null;try {
                   _jmlresult92=CubicSum.cubicSum(n)@CubicSum;
                 }  catch (java.lang.Exception e) {
                   _exc157=e;
                 }
               }\] (  _exc157 = null
                    &   4 * _jmlresult92
                      =   _old14_n
                        * _old14_n
                        * (_old14_n + 1)
                        * (_old14_n + 1)))

}
