<?xml version="1.0" encoding="UTF-8"?>
<startNode name="&lt;start&gt;" pathCondition="true" pathConditionChanged="false">
   <methodCall name="UseOperationContractNormalAndExceptionalBranchTest.main(value);" pathCondition="true" pathConditionChanged="false">
      <statement name="int magicNumber = magic(value);" pathCondition="true" pathConditionChanged="false">
         <useOperationContract name="result = magic(x) catch(exc)
pre: x &lt; 0 &amp; x &gt;= javaUnaryMinusInt(10)
| x &lt; javaUnaryMinusInt(10)
| x &gt;= 0
&amp; x &lt; 10
| x &gt;= 10
post: (   x &lt; 0 &amp; x &gt;= javaUnaryMinusInt(10)
   -&gt;   !exc = null
      &amp; java.lang.Exception::instance(exc) = TRUE)
&amp; (   x &lt; javaUnaryMinusInt(10)
   -&gt;   !exc = null
      &amp; java.lang.Exception::instance(exc) = TRUE)
&amp; (x &gt;= 0 &amp; x &lt; 10 -&gt; result = 42 &amp; exc = null)
&amp; (x &gt;= 10 -&gt; result = 84 &amp; exc = null)
mod: allLocs \cup allLocs \cup allLocs \cup allLocs
termination: diamond" pathCondition="true" pathConditionChanged="false" preconditionComplied="true" hasNotNullCheck="false" notNullCheckComplied="false">
            <branchCondition name="value &gt;= 0 &amp; value &lt; 10 | value &gt;= 10" pathCondition="!value &lt;= -1" pathConditionChanged="true" branchCondition="value &gt;= 0 &amp; value &lt; 10 | value &gt;= 10" mergedBranchCondition="false">
               <statement name="int magicNumberCopy = magicNumber;" pathCondition="!value &lt;= -1" pathConditionChanged="false">
                  <statement name="return magicNumber+magicNumberCopy;" pathCondition="!value &lt;= -1" pathConditionChanged="false">
                     <methodReturn name="&lt;return of UseOperationContractNormalAndExceptionalBranchTest.main(value);&gt;" pathCondition="!value &lt;= -1" pathConditionChanged="false" nameIncludingReturnValue="&lt;return &apos;result_0 * 2&apos; as result of UseOperationContractNormalAndExceptionalBranchTest.main(value);&gt;">
                        <termination name="&lt;end&gt;" pathCondition="!value &lt;= -1" pathConditionChanged="false" exceptionalTermination="false">
                        </termination>
                     </methodReturn>
                  </statement>
               </statement>
            </branchCondition>
            <branchCondition name="  value &lt; 0 &amp; value &gt;= javaUnaryMinusInt(10)
| value &lt; javaUnaryMinusInt(10)" pathCondition="!value &gt;= 0" pathConditionChanged="true" branchCondition="  value &lt; 0 &amp; value &gt;= javaUnaryMinusInt(10)
| value &lt; javaUnaryMinusInt(10)" mergedBranchCondition="false">
               <statement name="return -1;" pathCondition="!value &gt;= 0" pathConditionChanged="false">
                  <methodReturn name="&lt;return of UseOperationContractNormalAndExceptionalBranchTest.main(value);&gt;" pathCondition="!value &gt;= 0" pathConditionChanged="false" nameIncludingReturnValue="&lt;return &apos;-1&apos; as result of UseOperationContractNormalAndExceptionalBranchTest.main(value);&gt;">
                     <termination name="&lt;end&gt;" pathCondition="!value &gt;= 0" pathConditionChanged="false" exceptionalTermination="false">
                     </termination>
                  </methodReturn>
               </statement>
            </branchCondition>
         </useOperationContract>
      </statement>
   </methodCall>
</startNode>
