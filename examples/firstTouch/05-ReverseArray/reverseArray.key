// This file is part of KeY - Integrated Deductive Software Design 
//
// Copyright (C) 2001-2011 Universitaet Karlsruhe (TH), Germany 
//                         Universitaet Koblenz-Landau, Germany
//                         Chalmers University of Technology, Sweden
// Copyright (C) 2011-2013 Karlsruhe Institute of Technology, Germany 
//                         Technical University Darmstadt, Germany
//                         Chalmers University of Technology, Sweden
//
// The KeY system is protected by the GNU General 
// Public License. See LICENSE.TXT for details.
// 

\settings {
"#Proof-Settings-Config-File
#Thu Feb 07 00:07:44 CET 2008
[General]SoundNotification=false
[DecisionProcedure]SmtBenchmarkArchiving=false
[View]FontIndex=0
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_EXPAND
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[SimultaneousUpdateSimplifier]DeleteEffectLessLocations=true
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[View]ShowWholeTaclet=false
[General]ProofAssistant=false
[View]MaxTooltipLines=40
[General]DnDDirectionSensitive=false
[SimultaneousUpdateSimplifier]EagerSimplification=false
[General]StupidMode=true
[Strategy]Timeout=-1
[Strategy]MaximumNumberOfAutomaticApplications=10000

[StrategyProperty]QUERY_OPTIONS_KEY=QUERY_NONE
[Choice]DefaultChoices=transactions-transactions\:transactionsOn , javacard-javacard\:jcOff , programRules-programRules\:Java , transactionsPolicy-transactionsPolicy\:abortTransaction , initialisation-initialisation\:disableStaticInitialisation , throughout-throughout\:toutOn , transactionAbort-transactionAbort\:abortOn , intRules-intRules\:arithmeticSemanticsIgnoringOF , assertions-assertions\:on , nullPointerPolicy-nullPointerPolicy\:nullCheck
[DecisionProcedure]SmtZipProblemDir=false
[DecisionProcedureForTest]=SIMPLIFY
[General]UseJML=true
[Model]Source=1
[Choice]Choices=transactions-transactions\:transactionsOn-transactions\:transactionsOff , javacard-javacard\:jcOn-javacard\:jcOff , programRules-programRules\:ODL-programRules\:Java , transactionsPolicy-transactionsPolicy\:abortTransaction-transactionsPolicy\:noAbortTransaction , throughout-throughout\:toutOff-throughout\:toutOn , initialisation-initialisation\:disableStaticInitialisation-initialisation\:enableStaticInitialisation , transactionAbort-transactionAbort\:abortOff-transactionAbort\:abortOn , intRules-intRules\:arithmeticSemanticsCheckingOF-intRules\:javaSemantics-intRules\:arithmeticSemanticsIgnoringOF , assertions-assertions\:safe-assertions\:off-assertions\:on , nullPointerPolicy-nullPointerPolicy\:noNullCheck-nullPointerPolicy\:nullCheck
[DecisionProcedure]SmtUseQuantifiers=true
[View]HideIntermediateProofsteps=false
[DecisionProcedure]=SIMPLIFY
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_NORMAL
"
}

\classpath "./classpath";
\javaSource "./reverseArray/.";


\programVariables {
java.lang.Exception exc;
ReverseArray self;
Heap heapAtPre;
}


\problem {
     inReachableState
   & \forall ReverseArray r; 
       (     r.<created>@(java.lang.Object) = TRUE
           & !r = null
        -> !r.a@(ReverseArray) = null)
   & (  self.<created>@(java.lang.Object) = TRUE
      & !self = null)
   & (  !self.a@(ReverseArray) = null
      & self.a@(ReverseArray).length >= 0)
-> {heapAtPre:=heap}
     \[{
         exc=null;try {
           self.reverse()@ReverseArray;
         }  catch (java.lang.Throwable e) {
           exc=e;
         }
       }\] (  \forall int j; 
                (     j >= 0
                    & j <  self.a@(ReverseArray).length
                 ->   self.a@(ReverseArray)[j]
                    = {heap:=heapAtPre}(self.a@(ReverseArray)[self.a.length-j-1]) 
                )
            & exc = null)

}

