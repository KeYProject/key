\settings {
"#Proof-Settings-Config-File
#Mon Apr 11 17:32:09 CEST 2005
[General]SoundNotification=false
[View]FontIndex=0
[SimultaneousUpdateSimplifier]DeleteEffectLessLocations=true
[General]SuggestiveVarNames=false
[General]ProofAssistant=false
[View]ShowWholeTaclet=false
[View]MaxTooltipLines=40
[General]StupidMode=true
[Strategy]MaximumNumberOfAutomaticApplications=10000
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_NORMAL
[Choice]DefaultChoices=transactionsPolicy-transactionsPolicy\:abortTransaction , programRules-programRules\:Java , initialisation-initialisation\:disableStaticInitialisation , intRules-intRules\:arithmeticSemanticsIgnoringOF , nullPointerPolicy-nullPointerPolicy\:nullCheck
[OCLRef]Null=true
[OCLRef]ExcThrown=true
[Model]Source=1
[Choice]Choices=programRules-programRules\:ODL-programRules\:Java , transactionsPolicy-transactionsPolicy\:abortTransaction-transactionsPolicy\:noAbortTransaction , initialisation-initialisation\:disableStaticInitialisation-initialisation\:enableStaticInitialisation , intRules-intRules\:arithmeticSemanticsCheckingOF-intRules\:javaSemantics-intRules\:arithmeticSemanticsIgnoringOF , nullPointerPolicy-nullPointerPolicy\:noNullCheck-nullPointerPolicy\:nullCheck
[OCLRef]Array=true
[DecisionProcedure]=SIMPLIFY
[General]OuterRenaming=true
[Strategy]ActiveStrategy=JavaCardDLStrategy
"
}

/*
  @provable automatic

    Access on a static field triggers the initialisation of the
    class where the field is declared not.
     In the case below this means class A is initialized as 
    static field ATTR_A1 is declared in A, but class B remains 
    uninitialized.
*/

\javaSource "java/";

\withOptions initialisation:enableStaticInitialisation;

\problem {
     (inReachableState &
      java.lang.Object.<classInitialized> = TRUE &
      A.<classInitialized> = FALSE &
      A.<classPrepared>    = FALSE &
      A.<classInitializationInProgress> = FALSE &
      A.<classErroneous>                = FALSE &

      B.<classInitialized> = FALSE &
      B.<classPrepared>    = FALSE &
      B.<classInitializationInProgress> = FALSE &
      B.<classErroneous> = FALSE)
    ->
     \<{ B.ATTR_A1 = 1; }\>(A.<classInitialized> = TRUE &
                            B.<classInitialized> = FALSE)
    
}
