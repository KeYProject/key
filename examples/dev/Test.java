// This file is part of KeY - Integrated Deductive Software Design
// Copyright (C) 2001-2009 Universitaet Karlsruhe, Germany
//                         Universitaet Koblenz-Landau, Germany
//                         Chalmers University of Technology, Sweden
//
// The KeY system is protected by the GNU General Public License. 
// See LICENSE.TXT for details.
/* Generated by Together */


public class Test  {
 
    public int f = -1;
    public Test a;
    public Test b = null;
    //    public Test[][] c;

    /*    public Test() {
      f = 0;
    }
  
    public Test(int d) {
        f = d;
	}*/
 

    /**
     * @preconditions self.a<>self.b
     * @postconditions self.a=self.b implies self.a.f=self.b.f
     */
    public void incomplete() {	
	//	super.test(f);
	Test s;
	//	Test s = new Test();
	a.f =a.f+1;
	a = s;
	//	c[0]=3;
    }

    public void m() {
	this.f = 4;
    }

    public void test() {
	f=3;
    }

    public void test2(int i, int j) {
	int a = i+j;
    }

    public static int aroth() {
	int[] a = new int[]{1,2,3};
	int i=0;
	a[i]=++i;	
    }

}

class C extends B {
    
    private int c = 5;

    public C() {
    }

    public C(int c) {
	this();
	this.c = c;
    }

    public void test() {}

    public void m() {
	int j = 0;
    }

    public void g(int j) {
	j = 0;
    }

}

class B {
    static final int circularC = 0;
    static final int circularB = circularC; 
    private int f=5;
  
    public B() {
    }

    public void p() {this.f=0; System.out.println("in TEST");}

    public void m() {
	this.f=4;
	p();
    }

    public static void main(String args[]){
	A a=new A();
	a.test();
    }

}


class A extends Test {
    static int circularA = 0; //B.circular; 
    
    public int f=5;
    int i;
    A[] arr;

    public void p(){this.f=10;System.out.println("in B");}
    
    public static void staticMethod() {circularA=circularA;}

    public void staticTest() {
	staticMethod();
	circularA = circularA;
    }

    public void test(){
	super.f=5;
	super.m();
    }

   public int zero() {int zero = null; return zero;}
}
