// This file is part of KeY - Integrated Deductive Software Design
// Copyright (C) 2001-2009 Universitaet Karlsruhe, Germany
//                         Universitaet Koblenz-Landau, Germany
//                         Chalmers University of Technology, Sweden
//
// The KeY system is protected by the GNU General Public License. 
// See LICENSE.TXT for details.
//

\javaSource "./";

\schemaVariables {

/*  
 \formula post;
 \program ImplicitNext #next;
 \program ImplicitFieldReference  #implicitReference;
 \program Variable #v, #v0, #v1, #v2, #boolv, #k;
 \program SimpleExpression #slhs, #o, #r;
 \program ArrayCreation #na;
*/
}

\rules {
}

\problem {
//<{ C c = new C();}> !(c = null)
//<{ C c = new C(); C c2 = new C(); }> !(c2 = c)
//<{ NullPointerException ne = new NullPointerException(); }> true
//<{ B d; d.m(); }> true
//<{ int _var0; int i;}> {_var0:=add(50,10), i:=10}{i:=_var0} <{}>(i = 60)
//<{ C c; int j; j = 50; c.g(j); }> j = 50
//<{ int[] j; int i; i = j.length; }> (j.length = i)
//<{ int j; j = 0; C c = new C(j=2); }> j = 2
//<{ int[] a = new int[3]; int [] b = new int[4]; }> ! (a = b)
//<{ int[][]a = new int[2][]; }> true
//<{  Test a = new Test(); }> true
//<{ A d; d.circularA = 4; }> d.circularA = 4
\<{  Test a = new Test();}\> !(a = null)
}
