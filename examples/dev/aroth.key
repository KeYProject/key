// This file is part of KeY - Integrated Deductive Software Design
// Copyright (C) 2001-2009 Universitaet Karlsruhe, Germany
//                         Universitaet Koblenz-Landau, Germany
//                         Chalmers University of Technology, Sweden
//
// The KeY system is protected by the GNU General Public License. 
// See LICENSE.TXT for details.
\javaSource "aroth_java";

\programVariables {int j; int k; pack.pack1.MyClass x;int i; int i0; int i1;}

\contracts {
bla {
  \programVariables { int i2; pack.pack1.MyClass o; pack.pack1.MyClass o1; pack.pack1.MyClass old_o; int old_b;}
(! o=null) ->
    \diamond{
	#catchAll(Exception e) {
	    o1=o.m(i0,i1,i2)@pack.pack1.MyClass;
	}
  }\endmodality (pack.pack1.MyClass::b@pre(o@pre)=1 & e=null & old_o=o1 & !old_b=o.b)
  \modifies {o.b, o.arr[*], \for int x; \if (1<=x & x<o.arr.length) o.arr[x]}
  \displayname "blub"
};
}

\contracts {
bla1 {
  \programVariables { int i2; pack.pack1.MyClass o; pack.pack1.MyClass o1; pack.pack1.MyClass old_o; int old_b;}
( o=null) ->
    \diamond{
	#catchAll(Exception e) {
	    o1=o.m(i0,i1,i2)@pack.pack1.MyClass;
	}
  }\endmodality (pack.pack1.MyClass::b@pre(o@pre)=1 & e=null & old_o=o1 & !old_b=o.b)
  \modifies {o.b}
  \displayname "blub2"
};
}

\contracts {
test { \programVariables { int i2; pack.pack1.MyClass o; pack.pack1.MyClass o1; pack.pack1.MyClass old_o; int old_b;}
true -> \diamond{ o1=o.m(i0,i1,i2)@pack.pack1.MyClass; } \endmodality o1 = null 
\modifies {}
\displayname "test" 
};

}

\problem {
(x.<created>=TRUE & ! x=null) -> {j:=3}\diamond{
try { { try{   x =x.m (1,2,3); x =x.m (1,2,3); } catch (Exception e) {throw e;} catch (Exception e0) {throw e0;}}
 }}\endmodality x=null

}

