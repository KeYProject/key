\settings {
"#Proof-Settings-Config-File
#Tue Oct 23 18:39:35 CEST 2007
[General]SoundNotification=false
[DecisionProcedure]SmtBenchmarkArchiving=false
[View]FontIndex=2
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_EXPAND
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[SimultaneousUpdateSimplifier]DeleteEffectLessLocations=true
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[General]SuggestiveVarNames=false
[View]ShowWholeTaclet=false
[General]ProofAssistant=false
[View]MaxTooltipLines=40
[General]DnDDirectionSensitive=false
[SimultaneousUpdateSimplifier]EagerSimplification=true
[General]StupidMode=false
[Strategy]Timeout=-1
[Strategy]MaximumNumberOfAutomaticApplications=7000
[Libraries]Default=acc.key-false, stringRules.key-false, deprecatedRules.key-false
[StrategyProperty]QUERY_OPTIONS_KEY=QUERY_NONE
[Choice]DefaultChoices=transactions-transactions\:transactionsOn , programRules-programRules\:Java , transactionAbort-transactionAbort\:abortOn , throughout-throughout\:toutOn , initialisation-initialisation\:disableStaticInitialisation , intRules-intRules\:arithmeticSemanticsIgnoringOF , assertions-assertions\:on , nullPointerPolicy-nullPointerPolicy\:nullCheck
[DecisionProcedure]SmtZipProblemDir=false
[DecisionProcedureForTest]=SIMPLIFY
[Model]Source=1
[Choice]Choices=transactions-transactions\:transactionsOn-transactions\:transactionsOff , programRules-programRules\:ODL-programRules\:Java , transactionAbort-transactionAbort\:abortOff-transactionAbort\:abortOn , initialisation-initialisation\:disableStaticInitialisation-initialisation\:enableStaticInitialisation , throughout-throughout\:toutOff-throughout\:toutOn , intRules-intRules\:arithmeticSemanticsCheckingOF-intRules\:javaSemantics-intRules\:arithmeticSemanticsIgnoringOF , assertions-assertions\:safe-assertions\:off-assertions\:on , nullPointerPolicy-nullPointerPolicy\:noNullCheck-nullPointerPolicy\:nullCheck
[DecisionProcedure]SmtUseQuantifiers=true
[View]HideIntermediateProofsteps=false
[DecisionProcedure]=SIMPLIFY
[General]OuterRenaming=false
[Strategy]ActiveStrategy=HoareStrategy
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
"
}

\functions {
   int _big;
   int _small;
}

\programVariables {
  int big;
  int small;
  int t;
  int result;
}

/* invariant
      small >= 0 & big >= small &
      (big = 0 -> _big = 0) &
      (\forall int x; 
           (x > 0 -> ((_big % x = 0 & _small % x = 0) <->
               (big % x = 0 & small % x = 0))))
*/

\problem {
(
_small >= 0 & _big >= _small

) ->
(
{big:=_big ||
  small:=_small}
  \[{
      while ( !(small==0) ) {
        t=big%small;
        big=small;
        small=t;
      }
      result=big;
    }\] (   !_big = 0
         ->   _big % result = 0
            & _small % result = 0
            & \forall int x; 
                (     x >  0
                    & _big % x = 0
                    & _small % x = 0
                 -> result % x = 0))

)
}

\proof {
(keyLog "0" (keyUser "bubel" ) (keyVersion "90bb886cd7b78027c8f6703803461f09e5699bb9"))

(branch "dummy ID"
(builtin "Loop Invariant" (formula "2") (hoareLoopInvariant "small >= 0
& big >= small
& (big = 0 -> _big = 0)
& \\forall int x; 
    (   x >  0
     -> (    _big % x = 0 & _small % x = 0
         <-> big % x = 0 & small % x = 0))"))
(branch " Invariant Initially Valid"
   (builtin "Update Simplification" (formula "2"))
   (rule "andLeft" (formula "1"))
   (rule "castDelInt" (formula "3") (term "0,0,0,0"))
   (rule "castDelInt" (formula "3") (term "0,1,0,0"))
   (rule "castDelInt" (formula "3") (term "1,1,0,0"))
   (rule "castDelInt" (formula "3") (term "0,0,1,0"))
   (rule "eq_imp" (formula "3") (term "1,0"))
   (rule "concrete_and_3" (formula "3") (term "0"))
   (rule "castDelInt" (formula "3") (term "0,0,0,1,1,0,1"))
   (rule "castDelInt" (formula "3") (term "0,0,1,1,1,0,1"))
   (rule "eq_eq" (formula "3") (term "1,0,1"))
   (rule "concrete_impl_4" (formula "3") (term "0,1"))
   (rule "replace_known_left" (formula "3") (term "1,0") (ifseqformula "2"))
   (rule "concrete_and_3" (formula "3") (term "0"))
   (rule "replace_known_left" (formula "3") (term "0") (ifseqformula "1"))
   (rule "concrete_and_1" (formula "3"))
   (rule "allRight" (formula "3") (inst "sk=x_0"))
   (rule "closeTrue" (formula "3"))
)
(branch " Preserves Invariant"
   (rule "assignment" (formula "2") (userinteraction))
   (rule "assignment" (formula "2") (userinteraction))
   (rule "assignment" (formula "2") (userinteraction))
   (rule "exit" (formula "2") (userinteraction))
   (builtin "Update Simplification" (formula "2"))
   (rule "andLeft" (formula "1"))
   (rule "andLeft" (formula "1"))
   (rule "notLeft" (formula "3"))
   (rule "andLeft" (formula "1"))
   (rule "andLeft" (formula "1"))
   (rule "castDelInt" (formula "6") (term "0,0,0,0"))
   (rule "castDelInt" (formula "6") (term "1,1,0,0"))
   (rule "castDelInt" (formula "6") (term "0,0,1,1,1,0,1"))
   (rule "translateJavaMod" (formula "6") (term "0,0,0,0"))
   (rule "translateJavaMod" (formula "6") (term "1,1,0,0"))
   (rule "translateJavaMod" (formula "6") (term "0,0,1,1,1,0,1"))
   (rule "replace_known_right" (formula "6") (term "0,1,0") (ifseqformula "5"))
   (rule "concrete_impl_2" (formula "6") (term "1,0"))
   (rule "concrete_and_3" (formula "6") (term "0"))
   (rule "inEqSimp_gtToGeq" (formula "6") (term "0,0,1"))
   (rule "times_zero_1" (formula "6") (term "1,0,0,0,0,1"))
   (rule "add_literals" (formula "6") (term "0,0,0,0,1"))
   (rule "inEqSimp_gtToGeq" (formula "4") (term "0,0"))
   (rule "times_zero_1" (formula "4") (term "1,0,0,0,0"))
   (rule "add_literals" (formula "4") (term "0,0,0,0"))
   (rule "inEqSimp_commuteGeq" (formula "2"))
   (rule "inEqSimp_commuteGeq" (formula "6") (term "1,0"))
   (rule "mod_axiom" (formula "6") (term "0,0,0,1,0,1"))
   (rule "polySimp_mulComm1" (formula "6") (term "1,0,0,0,1,0,1"))
   (rule "mod_axiom" (formula "6") (term "0,1,0,1,0,1"))
   (rule "polySimp_mulComm1" (formula "6") (term "1,0,1,0,1,0,1"))
   (rule "mod_axiom" (formula "6") (term "0,0,1,1,0,1"))
   (rule "polySimp_mulComm1" (formula "6") (term "1,0,0,1,1,0,1"))
   (rule "mod_axiom" (formula "4") (term "0,0,1,1,0"))
   (rule "polySimp_mulComm1" (formula "4") (term "1,0,0,1,1,0"))
   (rule "mod_axiom" (formula "4") (term "0,1,0,1,0"))
   (rule "polySimp_mulComm1" (formula "4") (term "1,0,1,0,1,0"))
   (rule "mod_axiom" (formula "4") (term "0,0,0,1,0"))
   (rule "polySimp_mulComm1" (formula "4") (term "1,0,0,0,1,0"))
   (rule "mod_axiom" (formula "4") (term "0,1,1,1,0"))
   (rule "polySimp_mulComm1" (formula "4") (term "1,0,1,1,1,0"))
   (rule "mod_axiom" (formula "6") (term "0,0,1,1,1,0,1"))
   (rule "polySimp_mulComm1" (formula "6") (term "1,0,0,1,1,1,0,1"))
   (rule "mod_axiom" (formula "6") (term "0,0,0"))
   (rule "polySimp_mulComm1" (formula "6") (term "1,0,0,0"))
   (rule "mod_axiom" (formula "6") (term "0,1,0"))
   (rule "polySimp_mulComm1" (formula "6") (term "1,0,1,0"))
   (rule "inEqSimp_homoInEq0" (formula "6") (term "1,0"))
   (rule "polySimp_mulComm0" (formula "6") (term "1,0,1,0"))
   (rule "polySimp_rightDist" (formula "6") (term "1,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,1,0"))
   (rule "polySimp_elimOne" (formula "6") (term "1,1,0,1,0"))
   (rule "polySimp_mulComm0" (formula "6") (term "0,1,0,1,0"))
   (rule "polySimp_addAssoc" (formula "6") (term "0,1,0"))
   (rule "polySimp_addComm0" (formula "6") (term "0,0,1,0"))
   (rule "polySimp_sepNegMonomial" (formula "6") (term "0,0,1,0,1"))
   (rule "polySimp_mulLiterals" (formula "6") (term "0,0,0,1,0,1"))
   (rule "polySimp_elimOne" (formula "6") (term "0,0,0,1,0,1"))
   (rule "polySimp_sepNegMonomial" (formula "6") (term "1,0,1,0,1"))
   (rule "polySimp_mulLiterals" (formula "6") (term "0,1,0,1,0,1"))
   (rule "polySimp_elimOne" (formula "6") (term "0,1,0,1,0,1"))
   (rule "polySimp_sepNegMonomial" (formula "6") (term "0,1,1,0,1"))
   (rule "polySimp_mulLiterals" (formula "6") (term "0,0,1,1,0,1"))
   (rule "polySimp_elimOne" (formula "6") (term "0,0,1,1,0,1"))
   (rule "polySimp_sepNegMonomial" (formula "4") (term "0,1,1,0"))
   (rule "polySimp_mulLiterals" (formula "4") (term "0,0,1,1,0"))
   (rule "polySimp_elimOne" (formula "4") (term "0,0,1,1,0"))
   (rule "polySimp_sepNegMonomial" (formula "4") (term "1,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "4") (term "0,1,0,1,0"))
   (rule "polySimp_elimOne" (formula "4") (term "0,1,0,1,0"))
   (rule "polySimp_sepNegMonomial" (formula "4") (term "0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "4") (term "0,0,0,1,0"))
   (rule "polySimp_elimOne" (formula "4") (term "0,0,0,1,0"))
   (rule "polySimp_sepNegMonomial" (formula "4") (term "1,1,1,0"))
   (rule "polySimp_mulLiterals" (formula "4") (term "0,1,1,1,0"))
   (rule "polySimp_elimOne" (formula "4") (term "0,1,1,1,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "6") (term "0,0,1"))
   (rule "mul_literals" (formula "6") (term "1,0,0,1"))
   (rule "inEqSimp_sepPosMonomial1" (formula "4") (term "0,0"))
   (rule "mul_literals" (formula "4") (term "1,0,0"))
   (rule "inEqSimp_sepNegMonomial1" (formula "6") (term "0,0"))
   (rule "polySimp_mulLiterals" (formula "6") (term "0,0,0"))
   (rule "polySimp_elimOne" (formula "6") (term "0,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "6") (term "1,0"))
   (rule "polySimp_mulComm0" (formula "6") (term "1,1,0"))
   (rule "polySimp_rightDist" (formula "6") (term "1,1,0"))
   (rule "polySimp_mulAssoc" (formula "6") (term "0,1,1,0"))
   (rule "polySimp_mulComm0" (formula "6") (term "0,0,1,1,0"))
   (rule "polySimp_mulLiterals" (formula "6") (term "0,1,1,0"))
   (rule "polySimp_elimOne" (formula "6") (term "0,1,1,0"))
   (rule "inEqSimp_strengthen1" (formula "1") (ifseqformula "5"))
   (rule "add_zero_right" (formula "1") (term "1"))
   (rule "inEqSimp_contradEq7" (formula "5") (ifseqformula "1"))
   (rule "times_zero_1" (formula "5") (term "1,0,0"))
   (rule "add_zero_right" (formula "5") (term "0,0"))
   (rule "leq_literals" (formula "5") (term "0"))
   (rule "concrete_and_2" (formula "5"))
   (rule "false_right" (formula "5"))
   (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
   (rule "mul_literals" (formula "1") (term "0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "1"))
   (rule "mul_literals" (formula "1") (term "1"))
   (rule "inEqSimp_contradEq7" (formula "4") (term "0") (ifseqformula "1"))
   (rule "times_zero_1" (formula "4") (term "1,0,0,0"))
   (rule "add_zero_right" (formula "4") (term "0,0,0"))
   (rule "leq_literals" (formula "4") (term "0,0"))
   (rule "concrete_and_2" (formula "4") (term "0"))
   (rule "concrete_impl_2" (formula "4"))
   (rule "true_left" (formula "4"))
   (rule "nnf_imp2or" (formula "4") (term "0"))
   (rule "inEqSimp_notGeq" (formula "4") (term "0,0"))
   (rule "mul_literals" (formula "4") (term "1,0,0,0,0"))
   (rule "add_literals" (formula "4") (term "0,0,0,0"))
   (rule "add_zero_left" (formula "4") (term "0,0,0"))
   (rule "nnf_imp2or" (formula "5") (term "0,1"))
   (rule "inEqSimp_notGeq" (formula "5") (term "0,0,1"))
   (rule "mul_literals" (formula "5") (term "1,0,0,0,0,1"))
   (rule "add_literals" (formula "5") (term "0,0,0,0,1"))
   (rule "add_zero_left" (formula "5") (term "0,0,0,1"))
   (rule "cnf_eqv" (formula "4") (term "1,0"))
   (rule "nnf_notAnd" (formula "4") (term "1,0,1,0"))
   (rule "nnf_notAnd" (formula "4") (term "0,1,1,0"))
   (rule "commute_or" (formula "4") (term "0,1,0"))
   (rule "cnf_rightDist" (formula "4") (term "1,1,0"))
   (rule "commute_or_2" (formula "4") (term "0,1,1,0"))
   (rule "commute_or" (formula "4") (term "0,0,1,1,0"))
   (rule "shift_paren_or" (formula "4") (term "1,1,1,0"))
   (rule "cnf_rightDist" (formula "4") (term "0,1,0"))
   (rule "commute_or" (formula "4") (term "1,0,1,0"))
   (rule "cnf_rightDist" (formula "4") (term "0"))
   (rule "distr_forallAnd" (formula "4"))
   (rule "andLeft" (formula "4"))
   (rule "commute_or" (formula "5") (term "0"))
   (rule "cnf_rightDist" (formula "4") (term "0"))
   (rule "distr_forallAnd" (formula "4"))
   (rule "andLeft" (formula "4"))
   (rule "commute_or_2" (formula "5") (term "0"))
   (rule "commute_or_2" (formula "5") (term "0,0"))
   (rule "commute_or" (formula "5") (term "0,0,0"))
   (rule "shift_paren_or" (formula "4") (term "0"))
   (rule "shift_paren_or" (formula "4") (term "0,0"))
   (rule "cnf_rightDist" (formula "6") (term "0"))
   (rule "distr_forallAnd" (formula "6"))
   (rule "andLeft" (formula "6"))
   (rule "commute_or_2" (formula "7") (term "0"))
   (rule "commute_or_2" (formula "7") (term "0,0"))
   (rule "commute_or" (formula "7") (term "0,0,0"))
   (rule "shift_paren_or" (formula "6") (term "0"))
   (rule "shift_paren_or" (formula "6") (term "0,0"))
   (rule "div_axiom" (formula "8") (term "0,0,0,0") (inst "quotient=quotient_0"))
   (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,1"))
   (rule "polySimp_mulComm0" (formula "1") (term "1,1,1,1,1"))
   (rule "polySimp_mulComm0" (formula "1") (term "0,2,1,1"))
   (rule "polySimp_mulComm0" (formula "1") (term "0,1,1,1"))
   (rule "inEqSimp_contradEq7" (formula "1") (term "0") (ifseqformula "3"))
   (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
   (rule "add_zero_right" (formula "1") (term "0,0,0"))
   (rule "leq_literals" (formula "1") (term "0,0"))
   (rule "concrete_and_2" (formula "1") (term "0"))
   (rule "concrete_or_2" (formula "1"))
   (rule "andLeft" (formula "1"))
   (rule "andLeft" (formula "1"))
   (rule "applyEq" (formula "11") (term "0,0,1,0") (ifseqformula "1"))
   (rule "polySimp_mulComm0" (formula "11") (term "0,1,0"))
   (rule "applyEq" (formula "11") (term "0,0,0,0") (ifseqformula "1"))
   (rule "polySimp_mulComm0" (formula "11") (term "0,0,0"))
   (rule "replace_known_left" (formula "11") (term "0,0") (ifseqformula "2"))
   (rule "concrete_and_1" (formula "11") (term "0"))
   (rule "applyEq" (formula "11") (term "0,0,1,0,0,1,1,1,0,1") (ifseqformula "1"))
   (rule "polySimp_mulComm0" (formula "11") (term "0,1,0,0,1,1,1,0,1"))
   (rule "mod_axiom" (formula "11") (term "0,1,1,1,0,1"))
   (rule "polySimp_mulComm1" (formula "11") (term "1,0,1,1,1,0,1"))
   (rule "polySimp_sepNegMonomial" (formula "11") (term "1,1,1,0,1"))
   (rule "polySimp_mulLiterals" (formula "11") (term "0,1,1,1,0,1"))
   (rule "polySimp_elimOne" (formula "11") (term "0,1,1,1,0,1"))
   (rule "inEqSimp_subsumption1" (formula "3") (term "0") (ifseqformula "5"))
   (rule "leq_literals" (formula "3") (term "0,0"))
   (rule "concrete_or_1" (formula "3") (term "0"))
   (rule "ifthenelse_true_for" (formula "3"))
   (rule "inEqSimp_subsumption1" (formula "11") (term "0") (ifseqformula "3"))
   (rule "inEqSimp_homoInEq0" (formula "11") (term "0,0"))
   (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0"))
   (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0"))
   (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,0"))
   (rule "polySimp_mulComm0" (formula "11") (term "0,1,0,0,0"))
   (rule "polySimp_addAssoc" (formula "11") (term "0,0,0"))
   (rule "polySimp_addComm1" (formula "11") (term "0,0,0,0"))
   (rule "polySimp_pullOutFactor2b" (formula "11") (term "0,0,0"))
   (rule "add_literals" (formula "11") (term "1,1,0,0,0"))
   (rule "times_zero_1" (formula "11") (term "1,0,0,0"))
   (rule "add_zero_right" (formula "11") (term "0,0,0"))
   (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,0"))
   (rule "add_literals" (formula "11") (term "1,1,0,0,0"))
   (rule "times_zero_1" (formula "11") (term "1,0,0,0"))
   (rule "add_zero_right" (formula "11") (term "0,0,0"))
   (rule "qeq_literals" (formula "11") (term "0,0"))
   (rule "concrete_or_1" (formula "11") (term "0"))
   (rule "concrete_and_1" (formula "11"))
   (rule "allRight" (formula "11") (inst "sk=x_1"))
   (rule "orRight" (formula "11"))
   (rule "inEqSimp_leqRight" (formula "11"))
   (rule "times_zero_1" (formula "1") (term "1,0,0"))
   (rule "add_zero_right" (formula "1") (term "0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "1"))
   (rule "mul_literals" (formula "1") (term "1"))
   (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "3"))
   (rule "polySimp_rightDist" (formula "4") (term "0,0"))
   (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0"))
   (rule "polySimp_elimOne" (formula "4") (term "1,0,0"))
   (rule "polySimp_addComm1" (formula "4") (term "0"))
   (rule "polySimp_rightDist" (formula "4") (term "0,0,0"))
   (rule "mul_literals" (formula "4") (term "0,0,0,0"))
   (rule "polySimp_pullOutFactor2b" (formula "4") (term "0,0"))
   (rule "add_literals" (formula "4") (term "1,1,0,0"))
   (rule "times_zero_1" (formula "4") (term "1,0,0"))
   (rule "add_zero_right" (formula "4") (term "0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "4"))
   (rule "mul_literals" (formula "4") (term "1"))
   (rule "equiv_right" (formula "12"))
   (branch " Case 1"
      (rule "andLeft" (formula "1"))
      (rule "div_axiom" (formula "14") (term "0,0,1") (inst "quotient=quotient_1"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,1"))
      (rule "inEqSimp_homoInEq0" (formula "1") (term "1,0,1"))
      (rule "polySimp_addComm1" (formula "1") (term "0,1,0,1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,1,1,1,1"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,1,1"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,2,1,1"))
      (rule "polySimp_addAssoc" (formula "1") (term "0,1,2,1,1"))
      (rule "polySimp_addComm1" (formula "1") (term "1,2,1,1"))
      (rule "polySimp_addAssoc" (formula "1") (term "0,1,1,1,1"))
      (rule "polySimp_addComm1" (formula "1") (term "1,1,1,1"))
      (rule "inEqSimp_homoInEq1" (formula "1") (term "2,1,1"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,1,1"))
      (rule "inEqSimp_homoInEq1" (formula "1") (term "1,1,1"))
      (rule "polySimp_addComm1" (formula "1") (term "0,1,1,1"))
      (rule "inEqSimp_sepNegMonomial1" (formula "1") (term "1,0,1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,1"))
      (rule "polySimp_elimOne" (formula "1") (term "0,1,0,1"))
      (rule "inEqSimp_contradEq7" (formula "1") (term "0") (ifseqformula "4"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0"))
      (rule "leq_literals" (formula "1") (term "0,0"))
      (rule "concrete_and_2" (formula "1") (term "0"))
      (rule "concrete_or_2" (formula "1"))
      (rule "andLeft" (formula "1"))
      (rule "andLeft" (formula "1"))
      (rule "applyEq" (formula "17") (term "0,0,1") (ifseqformula "1"))
      (rule "polySimp_mulComm0" (formula "17") (term "0,1"))
      (rule "polySimp_homoEq" (formula "17") (term "1"))
      (rule "polySimp_addComm1" (formula "17") (term "0,1"))
      (rule "polySimp_sepNegMonomial" (formula "17") (term "1"))
      (rule "polySimp_mulLiterals" (formula "17") (term "0,1"))
      (rule "polySimp_elimOne" (formula "17") (term "0,1"))
      (rule "inEqSimp_sepNegMonomial0" (formula "3") (term "1"))
      (rule "polySimp_mulLiterals" (formula "3") (term "0,1"))
      (rule "polySimp_elimOne" (formula "3") (term "0,1"))
      (rule "inEqSimp_sepNegMonomial0" (formula "3") (term "2"))
      (rule "polySimp_mulLiterals" (formula "3") (term "0,2"))
      (rule "polySimp_elimOne" (formula "3") (term "0,2"))
      (rule "inEqSimp_subsumption1" (formula "3") (term "0") (ifseqformula "6"))
      (rule "leq_literals" (formula "3") (term "0,0"))
      (rule "concrete_or_1" (formula "3") (term "0"))
      (rule "ifthenelse_true_for" (formula "3"))
      (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "2"))
      (rule "polySimp_rightDist" (formula "9") (term "0,0"))
      (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0"))
      (rule "polySimp_elimOne" (formula "9") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "9") (term "0,0,0"))
      (rule "mul_literals" (formula "9") (term "0,0,0,0"))
      (rule "polySimp_addAssoc" (formula "9") (term "0"))
      (rule "polySimp_addComm1" (formula "9") (term "0,0"))
      (rule "polySimp_pullOutFactor2b" (formula "9") (term "0,0,0"))
      (rule "add_literals" (formula "9") (term "1,1,0,0,0"))
      (rule "times_zero_1" (formula "9") (term "1,0,0,0"))
      (rule "add_zero_right" (formula "9") (term "0,0,0"))
      (rule "inEqSimp_sepNegMonomial1" (formula "9"))
      (rule "polySimp_mulLiterals" (formula "9") (term "0"))
      (rule "polySimp_elimOne" (formula "9") (term "0"))
      (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "8"))
      (rule "polySimp_rightDist" (formula "3") (term "0,0"))
      (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
      (rule "polySimp_elimOne" (formula "3") (term "1,0,0"))
      (rule "polySimp_addComm1" (formula "3") (term "0"))
      (rule "polySimp_rightDist" (formula "3") (term "0,0,0"))
      (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0"))
      (rule "polySimp_elimOne" (formula "3") (term "1,0,0,0"))
      (rule "polySimp_addComm1" (formula "3") (term "0,0"))
      (rule "polySimp_rightDist" (formula "3") (term "0,0,0,0"))
      (rule "mul_literals" (formula "3") (term "0,0,0,0,0"))
      (rule "polySimp_pullOutFactor2b" (formula "3") (term "0,0,0"))
      (rule "add_literals" (formula "3") (term "1,1,0,0,0"))
      (rule "times_zero_1" (formula "3") (term "1,0,0,0"))
      (rule "add_zero_right" (formula "3") (term "0,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "3"))
      (rule "polySimp_mulComm0" (formula "3") (term "1"))
      (rule "polySimp_rightDist" (formula "3") (term "1"))
      (rule "mul_literals" (formula "3") (term "0,1"))
      (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "2"))
      (rule "polySimp_rightDist" (formula "4") (term "0,0"))
      (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0"))
      (rule "polySimp_elimOne" (formula "4") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "4") (term "0,0,0"))
      (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,0"))
      (rule "polySimp_elimOne" (formula "4") (term "1,0,0,0"))
      (rule "polySimp_rightDist" (formula "4") (term "0,0,0,0"))
      (rule "mul_literals" (formula "4") (term "0,0,0,0,0"))
      (rule "polySimp_addAssoc" (formula "4") (term "0"))
      (rule "polySimp_addComm1" (formula "4") (term "0,0"))
      (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
      (rule "add_literals" (formula "4") (term "1,1,0"))
      (rule "times_zero_1" (formula "4") (term "1,0"))
      (rule "add_zero_right" (formula "4") (term "0"))
      (rule "polySimp_addComm1" (formula "4") (term "0"))
      (rule "polySimp_pullOutFactor2b" (formula "4") (term "0,0"))
      (rule "add_literals" (formula "4") (term "1,1,0,0"))
      (rule "times_zero_1" (formula "4") (term "1,0,0"))
      (rule "add_zero_right" (formula "4") (term "0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "4"))
      (rule "mul_literals" (formula "4") (term "1"))
      (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "10"))
      (rule "polySimp_rightDist" (formula "3") (term "0,0"))
      (rule "mul_literals" (formula "3") (term "0,0,0"))
      (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
      (rule "polySimp_elimOne" (formula "3") (term "1,0,0"))
      (rule "polySimp_addComm1" (formula "3") (term "0"))
      (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
      (rule "add_literals" (formula "3") (term "0,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "3"))
      (rule "polySimp_mulComm0" (formula "3") (term "1"))
      (rule "polySimp_rightDist" (formula "3") (term "1"))
      (rule "mul_literals" (formula "3") (term "0,1"))
      (rule "div_axiom" (formula "20") (term "0,0,0") (inst "quotient=quotient_4"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,1"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,2,1,1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,1,1,1,1"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,1,1"))
      (rule "inEqSimp_contradEq7" (formula "1") (term "0") (ifseqformula "9"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0"))
      (rule "leq_literals" (formula "1") (term "0,0"))
      (rule "concrete_and_2" (formula "1") (term "0"))
      (rule "concrete_or_2" (formula "1"))
      (rule "andLeft" (formula "1"))
      (rule "andLeft" (formula "1"))
      (rule "applyEq" (formula "23") (term "0,0,0") (ifseqformula "1"))
      (rule "polySimp_mulComm0" (formula "23") (term "0,0"))
      (rule "inEqSimp_subsumption1" (formula "3") (term "0") (ifseqformula "11"))
      (rule "leq_literals" (formula "3") (term "0,0"))
      (rule "concrete_or_1" (formula "3") (term "0"))
      (rule "ifthenelse_true_for" (formula "3"))
      (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "2"))
      (rule "polySimp_rightDist" (formula "3") (term "0,0"))
      (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
      (rule "polySimp_elimOne" (formula "3") (term "1,0,0"))
      (rule "polySimp_addComm1" (formula "3") (term "0"))
      (rule "polySimp_rightDist" (formula "3") (term "0,0,0"))
      (rule "mul_literals" (formula "3") (term "0,0,0,0"))
      (rule "polySimp_pullOutFactor2b" (formula "3") (term "0,0"))
      (rule "add_literals" (formula "3") (term "1,1,0,0"))
      (rule "times_zero_1" (formula "3") (term "1,0,0"))
      (rule "add_zero_right" (formula "3") (term "0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "3"))
      (rule "mul_literals" (formula "3") (term "1"))
      (rule "div_axiom" (formula "10") (term "0,0") (inst "quotient=quotient_5"))
      (rule "polySimp_mulComm0" (formula "10") (term "0,1,0,1"))
      (rule "polySimp_mulComm0" (formula "10") (term "1,1,1,1,1"))
      (rule "polySimp_mulComm0" (formula "10") (term "0,2,1,1"))
      (rule "polySimp_mulComm0" (formula "10") (term "0,1,1,1"))
      (rule "inEqSimp_contradEq7" (formula "10") (term "0") (ifseqformula "12"))
      (rule "times_zero_1" (formula "10") (term "1,0,0,0"))
      (rule "add_zero_right" (formula "10") (term "0,0,0"))
      (rule "leq_literals" (formula "10") (term "0,0"))
      (rule "concrete_and_2" (formula "10") (term "0"))
      (rule "concrete_or_2" (formula "10"))
      (rule "andLeft" (formula "10"))
      (rule "andLeft" (formula "10"))
      (rule "applyEqRigid" (formula "13") (term "0,0") (ifseqformula "10"))
      (rule "polySimp_mulComm0" (formula "13") (term "0"))
      (rule "applyEq" (formula "11") (term "0") (ifseqformula "13"))
      (rule "inEqSimp_homoInEq0" (formula "11"))
      (rule "polySimp_pullOutFactor1" (formula "11") (term "0"))
      (rule "add_literals" (formula "11") (term "1,0"))
      (rule "times_zero_1" (formula "11") (term "0"))
      (rule "qeq_literals" (formula "11"))
      (rule "true_left" (formula "11"))
      (rule "applyEq" (formula "11") (term "0,2") (ifseqformula "12"))
      (rule "inEqSimp_homoInEq1" (formula "11") (term "2"))
      (rule "polySimp_addComm1" (formula "11") (term "0,2"))
      (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,2"))
      (rule "add_literals" (formula "11") (term "1,1,0,0,2"))
      (rule "times_zero_1" (formula "11") (term "1,0,0,2"))
      (rule "add_zero_right" (formula "11") (term "0,0,2"))
      (rule "applyEq" (formula "11") (term "0,1") (ifseqformula "12"))
      (rule "inEqSimp_homoInEq1" (formula "11") (term "1"))
      (rule "polySimp_addComm1" (formula "11") (term "0,1"))
      (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,1"))
      (rule "add_literals" (formula "11") (term "1,1,0,0,1"))
      (rule "times_zero_1" (formula "11") (term "1,0,0,1"))
      (rule "add_zero_right" (formula "11") (term "0,0,1"))
      (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "2"))
      (rule "mul_literals" (formula "11") (term "1,2"))
      (rule "inEqSimp_sepNegMonomial0" (formula "11") (term "1"))
      (rule "polySimp_mulLiterals" (formula "11") (term "0,1"))
      (rule "polySimp_elimOne" (formula "11") (term "0,1"))
      (rule "replace_known_left" (formula "11") (term "1") (ifseqformula "13"))
      (rule "inEqSimp_subsumption1" (formula "11") (term "0") (ifseqformula "13"))
      (rule "leq_literals" (formula "11") (term "0,0"))
      (rule "concrete_or_1" (formula "11") (term "0"))
      (rule "ifthenelse_true_for" (formula "11"))
      (rule "true_left" (formula "11"))
      (rule "div_axiom" (formula "9") (term "0,0") (inst "quotient=quotient_8"))
      (rule "polySimp_mulComm0" (formula "9") (term "0,1,0,1"))
      (rule "polySimp_mulComm0" (formula "9") (term "1,1,1,1,1"))
      (rule "polySimp_mulComm0" (formula "9") (term "0,1,1,1"))
      (rule "polySimp_mulComm0" (formula "9") (term "0,2,1,1"))
      (rule "inEqSimp_contradEq7" (formula "9") (term "0") (ifseqformula "13"))
      (rule "times_zero_1" (formula "9") (term "1,0,0,0"))
      (rule "add_zero_right" (formula "9") (term "0,0,0"))
      (rule "leq_literals" (formula "9") (term "0,0"))
      (rule "concrete_and_2" (formula "9") (term "0"))
      (rule "concrete_or_2" (formula "9"))
      (rule "andLeft" (formula "9"))
      (rule "andLeft" (formula "9"))
      (rule "applyEq" (formula "12") (term "0,0") (ifseqformula "9"))
      (rule "polySimp_mulComm0" (formula "12") (term "0"))
      (rule "applyEq" (formula "10") (term "0") (ifseqformula "12"))
      (rule "inEqSimp_homoInEq0" (formula "10"))
      (rule "polySimp_pullOutFactor1" (formula "10") (term "0"))
      (rule "add_literals" (formula "10") (term "1,0"))
      (rule "times_zero_1" (formula "10") (term "0"))
      (rule "qeq_literals" (formula "10"))
      (rule "true_left" (formula "10"))
      (rule "applyEq" (formula "10") (term "0,2") (ifseqformula "11"))
      (rule "inEqSimp_homoInEq1" (formula "10") (term "2"))
      (rule "polySimp_addComm1" (formula "10") (term "0,2"))
      (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,2"))
      (rule "add_literals" (formula "10") (term "1,1,0,0,2"))
      (rule "times_zero_1" (formula "10") (term "1,0,0,2"))
      (rule "add_zero_right" (formula "10") (term "0,0,2"))
      (rule "applyEq" (formula "10") (term "0,1") (ifseqformula "11"))
      (rule "inEqSimp_homoInEq1" (formula "10") (term "1"))
      (rule "polySimp_addComm1" (formula "10") (term "0,1"))
      (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,1"))
      (rule "add_literals" (formula "10") (term "1,1,0,0,1"))
      (rule "times_zero_1" (formula "10") (term "1,0,0,1"))
      (rule "add_zero_right" (formula "10") (term "0,0,1"))
      (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "2"))
      (rule "mul_literals" (formula "10") (term "1,2"))
      (rule "inEqSimp_subsumption1" (formula "10") (term "0") (ifseqformula "14"))
      (rule "leq_literals" (formula "10") (term "0,0"))
      (rule "concrete_or_1" (formula "10") (term "0"))
      (rule "ifthenelse_true_for" (formula "10"))
      (rule "inEqSimp_sepNegMonomial0" (formula "10"))
      (rule "polySimp_mulLiterals" (formula "10") (term "0"))
      (rule "polySimp_elimOne" (formula "10") (term "0"))
      (rule "allLeft" (formula "23") (inst "t=x_1"))
      (rule "applyEq" (formula "23") (term "0,0,0,1,0") (ifseqformula "9"))
      (rule "polySimp_mulComm0" (formula "23") (term "0,0,1,0"))
      (rule "replace_known_left" (formula "23") (term "0,1,0") (ifseqformula "10"))
      (rule "concrete_not_1" (formula "23") (term "1,0"))
      (rule "concrete_or_4" (formula "23") (term "0"))
      (rule "applyEqRigid" (formula "23") (term "0,0,0,1") (ifseqformula "11"))
      (rule "polySimp_mulComm0" (formula "23") (term "0,0,1"))
      (rule "replace_known_left" (formula "23") (term "0,1") (ifseqformula "12"))
      (rule "concrete_not_1" (formula "23") (term "1"))
      (rule "concrete_or_4" (formula "23"))
      (rule "inEqSimp_contradInEq1" (formula "23") (term "0") (ifseqformula "13"))
      (rule "qeq_literals" (formula "23") (term "0,0"))
      (rule "concrete_and_2" (formula "23") (term "0"))
      (rule "concrete_or_2" (formula "23"))
      (rule "allLeft" (formula "25") (inst "t=x_1"))
      (rule "applyEq" (formula "25") (term "0,0,1,0,0") (ifseqformula "1"))
      (rule "polySimp_mulComm0" (formula "25") (term "0,1,0,0"))
      (rule "applyEqRigid" (formula "25") (term "0,0,0,1,0") (ifseqformula "9"))
      (rule "polySimp_mulComm0" (formula "25") (term "0,0,1,0"))
      (rule "replace_known_left" (formula "25") (term "0,1,0") (ifseqformula "10"))
      (rule "concrete_not_1" (formula "25") (term "1,0"))
      (rule "concrete_or_4" (formula "25") (term "0"))
      (rule "applyEq" (formula "25") (term "0,0,0,1") (ifseqformula "11"))
      (rule "polySimp_mulComm0" (formula "25") (term "0,0,1"))
      (rule "replace_known_left" (formula "25") (term "0,1") (ifseqformula "12"))
      (rule "concrete_not_1" (formula "25") (term "1"))
      (rule "concrete_or_4" (formula "25"))
      (rule "inEqSimp_contradInEq1" (formula "25") (term "0") (ifseqformula "13"))
      (rule "qeq_literals" (formula "25") (term "0,0"))
      (rule "concrete_and_2" (formula "25") (term "0"))
      (rule "concrete_or_2" (formula "25"))
      (rule "replace_known_left" (formula "27") (term "0") (ifseqformula "25"))
      (rule "concrete_and_1" (formula "27"))
      (rule "applyEq" (formula "3") (term "0") (ifseqformula "25"))
      (rule "inEqSimp_homoInEq1" (formula "3"))
      (rule "polySimp_addComm1" (formula "3") (term "0"))
      (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0"))
      (rule "add_literals" (formula "3") (term "1,1,0,0"))
      (rule "times_zero_1" (formula "3") (term "1,0,0"))
      (rule "add_zero_right" (formula "3") (term "0,0"))
      (rule "applyEq" (formula "2") (term "0") (ifseqformula "25"))
      (rule "inEqSimp_homoInEq0" (formula "2"))
      (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
      (rule "add_literals" (formula "2") (term "1,0"))
      (rule "times_zero_1" (formula "2") (term "0"))
      (rule "qeq_literals" (formula "2"))
      (rule "true_left" (formula "2"))
      (rule "inEqSimp_sepNegMonomial0" (formula "2"))
      (rule "polySimp_mulLiterals" (formula "2") (term "0"))
      (rule "polySimp_elimOne" (formula "2") (term "0"))
      (rule "inEqSimp_strengthen0" (formula "3") (ifseqformula "25"))
      (rule "polySimp_addAssoc" (formula "3") (term "1"))
      (rule "inEqSimp_contradEq3" (formula "25") (ifseqformula "3"))
      (rule "polySimp_rightDist" (formula "25") (term "1,0,0"))
      (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0"))
      (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0"))
      (rule "polySimp_mulComm0" (formula "25") (term "0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "25") (term "0,0"))
      (rule "polySimp_addComm1" (formula "25") (term "0,0,0"))
      (rule "polySimp_pullOutFactor2b" (formula "25") (term "0,0"))
      (rule "add_literals" (formula "25") (term "1,1,0,0"))
      (rule "times_zero_1" (formula "25") (term "1,0,0"))
      (rule "add_zero_right" (formula "25") (term "0,0"))
      (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0"))
      (rule "add_literals" (formula "25") (term "1,1,0,0"))
      (rule "times_zero_1" (formula "25") (term "1,0,0"))
      (rule "add_zero_right" (formula "25") (term "0,0"))
      (rule "qeq_literals" (formula "25") (term "0"))
      (rule "concrete_and_2" (formula "25"))
      (rule "false_right" (formula "25"))
      (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "3"))
      (rule "polySimp_rightDist" (formula "6") (term "0,0"))
      (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0"))
      (rule "polySimp_elimOne" (formula "6") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "6") (term "0,0,0"))
      (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0,0"))
      (rule "polySimp_elimOne" (formula "6") (term "1,0,0,0"))
      (rule "polySimp_rightDist" (formula "6") (term "0,0,0,0"))
      (rule "mul_literals" (formula "6") (term "0,0,0,0,0"))
      (rule "polySimp_addAssoc" (formula "6") (term "0"))
      (rule "polySimp_addComm1" (formula "6") (term "0,0"))
      (rule "polySimp_pullOutFactor1b" (formula "6") (term "0"))
      (rule "add_literals" (formula "6") (term "1,1,0"))
      (rule "times_zero_1" (formula "6") (term "1,0"))
      (rule "add_zero_right" (formula "6") (term "0"))
      (rule "polySimp_addComm1" (formula "6") (term "0"))
      (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
      (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
      (rule "add_literals" (formula "6") (term "0,0,0,0"))
      (rule "polySimp_pullOutFactor2b" (formula "6") (term "0,0"))
      (rule "add_literals" (formula "6") (term "1,1,0,0"))
      (rule "times_zero_1" (formula "6") (term "1,0,0"))
      (rule "add_zero_right" (formula "6") (term "0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "6"))
      (rule "mul_literals" (formula "6") (term "1"))
      (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "6"))
      (rule "leq_literals" (formula "12") (term "0"))
      (rule "concrete_or_1" (formula "12"))
      (rule "true_left" (formula "12"))
      (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "3"))
      (rule "polySimp_rightDist" (formula "15") (term "0,0"))
      (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0"))
      (rule "polySimp_elimOne" (formula "15") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "15") (term "0,0,0"))
      (rule "mul_literals" (formula "15") (term "0,0,0,0"))
      (rule "polySimp_addAssoc" (formula "15") (term "0"))
      (rule "polySimp_addComm1" (formula "15") (term "0,0"))
      (rule "polySimp_addAssoc" (formula "15") (term "0,0,0"))
      (rule "polySimp_addComm1" (formula "15") (term "0,0,0,0"))
      (rule "add_literals" (formula "15") (term "0,0,0,0,0"))
      (rule "polySimp_pullOutFactor2b" (formula "15") (term "0,0,0"))
      (rule "add_literals" (formula "15") (term "1,1,0,0,0"))
      (rule "times_zero_1" (formula "15") (term "1,0,0,0"))
      (rule "add_zero_right" (formula "15") (term "0,0,0"))
      (rule "inEqSimp_sepNegMonomial1" (formula "15"))
      (rule "polySimp_mulLiterals" (formula "15") (term "0"))
      (rule "polySimp_elimOne" (formula "15") (term "0"))
      (rule "inEqSimp_subsumption0" (formula "14") (ifseqformula "15"))
      (rule "inEqSimp_homoInEq0" (formula "14") (term "0"))
      (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "14") (term "1,0,0"))
      (rule "mul_literals" (formula "14") (term "0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "14") (term "0,0"))
      (rule "polySimp_addComm1" (formula "14") (term "0,0,0"))
      (rule "add_literals" (formula "14") (term "0,0,0,0"))
      (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0"))
      (rule "add_literals" (formula "14") (term "1,1,0,0"))
      (rule "times_zero_1" (formula "14") (term "1,0,0"))
      (rule "add_zero_right" (formula "14") (term "0,0"))
      (rule "qeq_literals" (formula "14") (term "0"))
      (rule "concrete_or_1" (formula "14"))
      (rule "true_left" (formula "14"))
      (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "14"))
      (rule "polySimp_rightDist" (formula "5") (term "0,0"))
      (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0"))
      (rule "mul_literals" (formula "5") (term "0,0,0"))
      (rule "polySimp_elimOne" (formula "5") (term "1,0,0"))
      (rule "polySimp_addComm1" (formula "5") (term "0"))
      (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
      (rule "add_literals" (formula "5") (term "0,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "5"))
      (rule "polySimp_mulComm0" (formula "5") (term "1"))
      (rule "polySimp_rightDist" (formula "5") (term "1"))
      (rule "mul_literals" (formula "5") (term "0,1"))
      (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "5"))
      (rule "inEqSimp_homoInEq0" (formula "4") (term "0"))
      (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
      (rule "mul_literals" (formula "4") (term "0,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,0"))
      (rule "polySimp_elimOne" (formula "4") (term "1,1,0,0"))
      (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
      (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
      (rule "add_literals" (formula "4") (term "0,0,0,0"))
      (rule "polySimp_pullOutFactor2b" (formula "4") (term "0,0"))
      (rule "add_literals" (formula "4") (term "1,1,0,0"))
      (rule "times_zero_1" (formula "4") (term "1,0,0"))
      (rule "add_zero_right" (formula "4") (term "0,0"))
      (rule "qeq_literals" (formula "4") (term "0"))
      (rule "concrete_or_1" (formula "4"))
      (rule "true_left" (formula "4"))
      (rule "polyDiv_pullOut" (formula "2") (term "0") (inst "polyDivCoeff=quotient_0 * quotient_4 * -1"))
      (rule "polySimp_mulLiterals" (formula "2") (term "0,1,0,0,2,0"))
      (rule "polySimp_elimOneLeft1" (formula "2") (term "1,0,0,2,0"))
      (rule "polySimp_mulComm1" (formula "2") (term "1,0,0,2,0"))
      (rule "polySimp_mulComm0" (formula "2") (term "0,1,0,0,2,0"))
      (rule "polySimp_addComm0" (formula "2") (term "2,0"))
      (rule "apply_eq_monomials" (formula "2") (term "1,0,1,2,0") (ifseqformula "23"))
      (rule "polySimp_rightDist" (formula "2") (term "0,1,0,1,2,0"))
      (rule "polySimp_mulComm1" (formula "2") (term "1,0,1,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "2") (term "0,0,1,0,1,2,0"))
      (rule "polySimp_mulComm1" (formula "2") (term "0,1,0,1,0,1,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "2") (term "1,0,1,2,0"))
      (rule "add_literals" (formula "2") (term "1,1,1,0,1,2,0"))
      (rule "times_zero_1" (formula "2") (term "1,1,0,1,2,0"))
      (rule "add_zero_right" (formula "2") (term "1,0,1,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "2") (term "0,1,2,0"))
      (rule "add_literals" (formula "2") (term "1,1,0,1,2,0"))
      (rule "times_zero_1" (formula "2") (term "1,0,1,2,0"))
      (rule "add_zero_right" (formula "2") (term "0,1,2,0"))
      (rule "polySimp_addComm0" (formula "2") (term "2,0"))
      (rule "inEqSimp_contradEq7" (formula "2") (term "0,0") (ifseqformula "6"))
      (rule "times_zero_1" (formula "2") (term "1,0,0,0,0"))
      (rule "add_zero_right" (formula "2") (term "0,0,0,0"))
      (rule "leq_literals" (formula "2") (term "0,0,0"))
      (rule "concrete_and_2" (formula "2") (term "0,0"))
      (rule "ifthenelse_false" (formula "2") (term "0"))
      (rule "polySimp_homoEq" (formula "2"))
      (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
      (rule "polySimp_rightDist" (formula "2") (term "1,0"))
      (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0"))
      (rule "polySimp_elimOne" (formula "2") (term "1,1,0"))
      (rule "polySimp_mulComm0" (formula "2") (term "0,1,0"))
      (rule "polySimp_addAssoc" (formula "2") (term "0"))
      (rule "polySimp_sepPosMonomial" (formula "2"))
      (rule "polySimp_mulComm0" (formula "2") (term "1"))
      (rule "polySimp_rightDist" (formula "2") (term "1"))
      (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
      (rule "polySimp_elimOne" (formula "2") (term "1,1"))
      (rule "polySimp_mulComm0" (formula "2") (term "0,1"))
      (rule "allLeft" (formula "20") (inst "t=small"))
      (rule "applyEq" (formula "20") (term "0,0,0,1,0,0") (ifseqformula "12"))
      (rule "polySimp_mulComm0" (formula "20") (term "0,0,1,0,0"))
      (rule "inEqSimp_contradInEq1" (formula "20") (term "0,0,0") (ifseqformula "17"))
      (rule "qeq_literals" (formula "20") (term "0,0,0,0"))
      (rule "concrete_and_2" (formula "20") (term "0,0,0"))
      (rule "concrete_or_2" (formula "20") (term "0,0"))
      (rule "polyDiv_pullOut" (formula "20") (term "0,0,0,1,0") (inst "polyDivCoeff=1"))
      (rule "mul_literals" (formula "20") (term "0,1,0,0,2,0,0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,2,0,0,0,1,0"))
      (rule "polySimp_pullOutFactor1" (formula "20") (term "0,0,2,0,0,0,1,0"))
      (rule "add_literals" (formula "20") (term "1,0,0,2,0,0,0,1,0"))
      (rule "times_zero_1" (formula "20") (term "0,0,2,0,0,0,1,0"))
      (rule "polySimp_addComm0" (formula "20") (term "2,0,0,0,1,0"))
      (rule "inEqSimp_contradEq7" (formula "20") (term "0,0,0,0,1,0") (ifseqformula "17"))
      (rule "times_zero_1" (formula "20") (term "1,0,0,0,0,0,0,1,0"))
      (rule "add_zero_right" (formula "20") (term "0,0,0,0,0,0,1,0"))
      (rule "leq_literals" (formula "20") (term "0,0,0,0,0,1,0"))
      (rule "concrete_and_2" (formula "20") (term "0,0,0,0,1,0"))
      (rule "ifthenelse_false" (formula "20") (term "0,0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "20") (term "0,0,1,0"))
      (rule "polySimp_rightDist" (formula "20") (term "0,0,1,0"))
      (rule "polySimp_elimOne" (formula "20") (term "0,0,0,1,0"))
      (rule "polySimp_homoEq" (formula "20") (term "0,1,0"))
      (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0"))
      (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "20") (term "0,1,0,0,1,0"))
      (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0"))
      (rule "polySimp_pullOutFactor1" (formula "20") (term "0,0,0,1,0"))
      (rule "add_literals" (formula "20") (term "1,0,0,0,1,0"))
      (rule "times_zero_1" (formula "20") (term "0,0,0,1,0"))
      (rule "add_zero_left" (formula "20") (term "0,0,1,0"))
      (rule "polySimp_invertEq" (formula "20") (term "0,1,0"))
      (rule "polySimp_mulLiterals" (formula "20") (term "0,0,1,0"))
      (rule "times_zero_2" (formula "20") (term "1,0,1,0"))
      (rule "polySimp_elimOne" (formula "20") (term "0,0,1,0"))
      (rule "polyDiv_zero" (formula "20") (term "0,0,0,1,0"))
      (rule "div_literals" (formula "20") (term "1,0,0,0,1,0"))
      (rule "inEqSimp_contradEq7" (formula "20") (term "0,0,0,0,1,0") (ifseqformula "17"))
      (rule "times_zero_1" (formula "20") (term "1,0,0,0,0,0,0,1,0"))
      (rule "add_zero_right" (formula "20") (term "0,0,0,0,0,0,1,0"))
      (rule "leq_literals" (formula "20") (term "0,0,0,0,0,1,0"))
      (rule "concrete_and_2" (formula "20") (term "0,0,0,0,1,0"))
      (rule "ifthenelse_false" (formula "20") (term "0,0,0,1,0"))
      (rule "times_zero_2" (formula "20") (term "0,0,1,0"))
      (rule "eqClose" (formula "20") (term "0,1,0"))
      (rule "concrete_not_1" (formula "20") (term "1,0"))
      (rule "concrete_or_4" (formula "20") (term "0"))
      (rule "allLeft" (formula "23") (inst "t=small"))
      (rule "applyEq" (formula "23") (term "0,0,1,0,0") (ifseqformula "12"))
      (rule "polySimp_mulComm0" (formula "23") (term "0,1,0,0"))
      (rule "inEqSimp_contradInEq1" (formula "23") (term "0,0,0") (ifseqformula "17"))
      (rule "qeq_literals" (formula "23") (term "0,0,0,0"))
      (rule "concrete_and_2" (formula "23") (term "0,0,0"))
      (rule "concrete_or_2" (formula "23") (term "0,0"))
      (rule "allLeft" (formula "19") (inst "t=small"))
      (rule "applyEq" (formula "19") (term "0,0,0,1,0,0") (ifseqformula "12"))
      (rule "polySimp_mulComm0" (formula "19") (term "0,0,1,0,0"))
      (rule "inEqSimp_contradInEq1" (formula "19") (term "0,0,0") (ifseqformula "17"))
      (rule "qeq_literals" (formula "19") (term "0,0,0,0"))
      (rule "concrete_and_2" (formula "19") (term "0,0,0"))
      (rule "concrete_or_2" (formula "19") (term "0,0"))
      (rule "polyDiv_pullOut" (formula "19") (term "0,0,0,1,0") (inst "polyDivCoeff=1"))
      (rule "mul_literals" (formula "19") (term "0,1,0,0,2,0,0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,2,0,0,0,1,0"))
      (rule "polySimp_pullOutFactor1" (formula "19") (term "0,0,2,0,0,0,1,0"))
      (rule "add_literals" (formula "19") (term "1,0,0,2,0,0,0,1,0"))
      (rule "times_zero_1" (formula "19") (term "0,0,2,0,0,0,1,0"))
      (rule "polySimp_addComm0" (formula "19") (term "2,0,0,0,1,0"))
      (rule "inEqSimp_contradEq7" (formula "19") (term "0,0,0,0,1,0") (ifseqformula "17"))
      (rule "times_zero_1" (formula "19") (term "1,0,0,0,0,0,0,1,0"))
      (rule "add_zero_right" (formula "19") (term "0,0,0,0,0,0,1,0"))
      (rule "leq_literals" (formula "19") (term "0,0,0,0,0,1,0"))
      (rule "concrete_and_2" (formula "19") (term "0,0,0,0,1,0"))
      (rule "ifthenelse_false" (formula "19") (term "0,0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "19") (term "0,0,1,0"))
      (rule "polySimp_rightDist" (formula "19") (term "0,0,1,0"))
      (rule "polySimp_homoEq" (formula "19") (term "0,1,0"))
      (rule "polySimp_elimOne" (formula "19") (term "0,0,1,0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0"))
      (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "19") (term "0,1,0,0,1,0"))
      (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0"))
      (rule "polySimp_pullOutFactor1" (formula "19") (term "0,0,0,1,0"))
      (rule "add_literals" (formula "19") (term "1,0,0,0,1,0"))
      (rule "times_zero_1" (formula "19") (term "0,0,0,1,0"))
      (rule "add_zero_left" (formula "19") (term "0,0,1,0"))
      (rule "polySimp_invertEq" (formula "19") (term "0,1,0"))
      (rule "times_zero_2" (formula "19") (term "1,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "19") (term "0,0,1,0"))
      (rule "polySimp_elimOne" (formula "19") (term "0,0,1,0"))
      (rule "polyDiv_zero" (formula "19") (term "0,0,0,1,0"))
      (rule "div_literals" (formula "19") (term "1,0,0,0,1,0"))
      (rule "inEqSimp_contradEq7" (formula "19") (term "0,0,0,0,1,0") (ifseqformula "17"))
      (rule "times_zero_1" (formula "19") (term "1,0,0,0,0,0,0,1,0"))
      (rule "add_zero_right" (formula "19") (term "0,0,0,0,0,0,1,0"))
      (rule "leq_literals" (formula "19") (term "0,0,0,0,0,1,0"))
      (rule "concrete_and_2" (formula "19") (term "0,0,0,0,1,0"))
      (rule "ifthenelse_false" (formula "19") (term "0,0,0,1,0"))
      (rule "times_zero_2" (formula "19") (term "0,0,1,0"))
      (rule "eqClose" (formula "19") (term "0,1,0"))
      (rule "concrete_not_1" (formula "19") (term "1,0"))
      (rule "concrete_or_4" (formula "19") (term "0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0") (inst "polyDivCoeff=quotient_4"))
      (rule "polySimp_mulComm1" (formula "1") (term "1,0,0,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,0,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "2,0"))
      (rule "applyEq" (formula "1") (term "0,1,0,1,2,0") (ifseqformula "26"))
      (rule "polySimp_pullOutFactor1" (formula "1") (term "0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "0,1,2,0"))
      (rule "inEqSimp_contradEq7" (formula "1") (term "0,0") (ifseqformula "6"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,0"))
      (rule "leq_literals" (formula "1") (term "0,0,0"))
      (rule "concrete_and_2" (formula "1") (term "0,0"))
      (rule "ifthenelse_false" (formula "1") (term "0"))
      (rule "polySimp_homoEq" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "0"))
      (rule "polySimp_pullOutFactor1" (formula "1") (term "0,0"))
      (rule "add_literals" (formula "1") (term "1,0,0"))
      (rule "times_zero_1" (formula "1") (term "0,0"))
      (rule "add_zero_left" (formula "1") (term "0"))
      (rule "polySimp_invertEq" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0"))
      (rule "times_zero_2" (formula "1") (term "1"))
      (rule "polySimp_elimOne" (formula "1") (term "0"))
      (rule "polyDiv_zero" (formula "1") (term "0"))
      (rule "div_literals" (formula "1") (term "1,0"))
      (rule "inEqSimp_contradEq7" (formula "1") (term "0,0") (ifseqformula "6"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,0"))
      (rule "leq_literals" (formula "1") (term "0,0,0"))
      (rule "concrete_and_2" (formula "1") (term "0,0"))
      (rule "ifthenelse_false" (formula "1") (term "0"))
      (rule "eqClose" (formula "1"))
      (rule "true_left" (formula "1"))
      (rule "div_axiom" (formula "22") (term "0,0") (inst "quotient=quotient_9"))
      (rule "polySimp_mulComm0" (formula "22") (term "0,1,0,1"))
      (rule "polySimp_mulComm0" (formula "22") (term "0,2,1,1"))
      (rule "polySimp_mulComm0" (formula "22") (term "0,1,1,1"))
      (rule "polySimp_mulComm0" (formula "22") (term "1,1,1,1,1"))
      (rule "inEqSimp_contradEq7" (formula "22") (term "0") (ifseqformula "5"))
      (rule "times_zero_1" (formula "22") (term "1,0,0,0"))
      (rule "add_zero_right" (formula "22") (term "0,0,0"))
      (rule "leq_literals" (formula "22") (term "0,0"))
      (rule "concrete_and_2" (formula "22") (term "0"))
      (rule "concrete_or_2" (formula "22"))
      (rule "andLeft" (formula "22"))
      (rule "andLeft" (formula "22"))
      (rule "applyEq" (formula "25") (term "0,0") (ifseqformula "22"))
      (rule "polySimp_mulComm0" (formula "25") (term "0"))
      (rule "applyEq" (formula "23") (term "0") (ifseqformula "25"))
      (rule "inEqSimp_homoInEq0" (formula "23"))
      (rule "polySimp_pullOutFactor1" (formula "23") (term "0"))
      (rule "add_literals" (formula "23") (term "1,0"))
      (rule "times_zero_1" (formula "23") (term "0"))
      (rule "qeq_literals" (formula "23"))
      (rule "true_left" (formula "23"))
      (rule "applyEq" (formula "1") (term "1,1") (ifseqformula "22"))
      (rule "polySimp_addComm0" (formula "1") (term "1"))
      (rule "applyEq" (formula "23") (term "0,2") (ifseqformula "24"))
      (rule "inEqSimp_homoInEq1" (formula "23") (term "2"))
      (rule "polySimp_addComm1" (formula "23") (term "0,2"))
      (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,2"))
      (rule "add_literals" (formula "23") (term "1,1,0,0,2"))
      (rule "times_zero_1" (formula "23") (term "1,0,0,2"))
      (rule "add_zero_right" (formula "23") (term "0,0,2"))
      (rule "applyEq" (formula "23") (term "0,1") (ifseqformula "24"))
      (rule "inEqSimp_homoInEq1" (formula "23") (term "1"))
      (rule "polySimp_addComm1" (formula "23") (term "0,1"))
      (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1"))
      (rule "add_literals" (formula "23") (term "1,1,0,0,1"))
      (rule "times_zero_1" (formula "23") (term "1,0,0,1"))
      (rule "add_zero_right" (formula "23") (term "0,0,1"))
      (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "2"))
      (rule "mul_literals" (formula "23") (term "1,2"))
      (rule "inEqSimp_sepNegMonomial0" (formula "23") (term "1"))
      (rule "polySimp_mulLiterals" (formula "23") (term "0,1"))
      (rule "polySimp_elimOne" (formula "23") (term "0,1"))
      (rule "inEqSimp_subsumption1" (formula "23") (term "0") (ifseqformula "5"))
      (rule "leq_literals" (formula "23") (term "0,0"))
      (rule "concrete_or_1" (formula "23") (term "0"))
      (rule "ifthenelse_true_for" (formula "23"))
      (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "5"))
      (rule "leq_literals" (formula "23") (term "0"))
      (rule "concrete_or_1" (formula "23"))
      (rule "true_left" (formula "23"))
      (rule "polyDiv_pullOut" (formula "9") (term "0") (inst "polyDivCoeff=quotient_5"))
      (rule "polySimp_mulComm1" (formula "9") (term "1,0,0,2,0"))
      (rule "polySimp_mulComm0" (formula "9") (term "0,1,0,0,2,0"))
      (rule "polySimp_addComm0" (formula "9") (term "2,0"))
      (rule "applyEq" (formula "9") (term "0,1,0,1,2,0") (ifseqformula "10"))
      (rule "polySimp_pullOutFactor1" (formula "9") (term "0,1,2,0"))
      (rule "add_literals" (formula "9") (term "1,0,1,2,0"))
      (rule "times_zero_1" (formula "9") (term "0,1,2,0"))
      (rule "inEqSimp_contradEq7" (formula "9") (term "0,0") (ifseqformula "5"))
      (rule "times_zero_1" (formula "9") (term "1,0,0,0,0"))
      (rule "add_zero_right" (formula "9") (term "0,0,0,0"))
      (rule "leq_literals" (formula "9") (term "0,0,0"))
      (rule "concrete_and_2" (formula "9") (term "0,0"))
      (rule "ifthenelse_false" (formula "9") (term "0"))
      (rule "polySimp_homoEq" (formula "9"))
      (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
      (rule "polySimp_rightDist" (formula "9") (term "1,0"))
      (rule "polySimp_mulComm0" (formula "9") (term "0,1,0"))
      (rule "polySimp_addAssoc" (formula "9") (term "0"))
      (rule "polySimp_pullOutFactor1" (formula "9") (term "0,0"))
      (rule "add_literals" (formula "9") (term "1,0,0"))
      (rule "times_zero_1" (formula "9") (term "0,0"))
      (rule "add_zero_left" (formula "9") (term "0"))
      (rule "polySimp_invertEq" (formula "9"))
      (rule "times_zero_2" (formula "9") (term "1"))
      (rule "polySimp_mulLiterals" (formula "9") (term "0"))
      (rule "polySimp_elimOne" (formula "9") (term "0"))
      (rule "polyDiv_zero" (formula "9") (term "0"))
      (rule "div_literals" (formula "9") (term "1,0"))
      (rule "inEqSimp_contradEq7" (formula "9") (term "0,0") (ifseqformula "5"))
      (rule "times_zero_1" (formula "9") (term "1,0,0,0,0"))
      (rule "add_zero_right" (formula "9") (term "0,0,0,0"))
      (rule "leq_literals" (formula "9") (term "0,0,0"))
      (rule "concrete_and_2" (formula "9") (term "0,0"))
      (rule "ifthenelse_false" (formula "9") (term "0"))
      (rule "eqClose" (formula "9"))
      (rule "true_left" (formula "9"))
      (rule "polyDiv_pullOut" (formula "7") (term "0") (inst "polyDivCoeff=quotient_8"))
      (rule "polySimp_mulComm1" (formula "7") (term "1,0,0,2,0"))
      (rule "polySimp_mulComm0" (formula "7") (term "0,1,0,0,2,0"))
      (rule "polySimp_addComm0" (formula "7") (term "2,0"))
      (rule "applyEq" (formula "7") (term "0,1,0,1,2,0") (ifseqformula "8"))
      (rule "polySimp_pullOutFactor1" (formula "7") (term "0,1,2,0"))
      (rule "add_literals" (formula "7") (term "1,0,1,2,0"))
      (rule "times_zero_1" (formula "7") (term "0,1,2,0"))
      (rule "inEqSimp_contradEq7" (formula "7") (term "0,0") (ifseqformula "5"))
      (rule "times_zero_1" (formula "7") (term "1,0,0,0,0"))
      (rule "add_zero_right" (formula "7") (term "0,0,0,0"))
      (rule "leq_literals" (formula "7") (term "0,0,0"))
      (rule "concrete_and_2" (formula "7") (term "0,0"))
      (rule "ifthenelse_false" (formula "7") (term "0"))
      (rule "polySimp_homoEq" (formula "7"))
      (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
      (rule "polySimp_rightDist" (formula "7") (term "1,0"))
      (rule "polySimp_mulComm0" (formula "7") (term "0,1,0"))
      (rule "polySimp_addAssoc" (formula "7") (term "0"))
      (rule "polySimp_pullOutFactor1" (formula "7") (term "0,0"))
      (rule "add_literals" (formula "7") (term "1,0,0"))
      (rule "times_zero_1" (formula "7") (term "0,0"))
      (rule "add_zero_left" (formula "7") (term "0"))
      (rule "polySimp_invertEq" (formula "7"))
      (rule "times_zero_2" (formula "7") (term "1"))
      (rule "polySimp_mulLiterals" (formula "7") (term "0"))
      (rule "polySimp_elimOne" (formula "7") (term "0"))
      (rule "polyDiv_zero" (formula "7") (term "0"))
      (rule "div_literals" (formula "7") (term "1,0"))
      (rule "inEqSimp_contradEq7" (formula "7") (term "0,0") (ifseqformula "5"))
      (rule "times_zero_1" (formula "7") (term "1,0,0,0,0"))
      (rule "add_zero_right" (formula "7") (term "0,0,0,0"))
      (rule "leq_literals" (formula "7") (term "0,0,0"))
      (rule "concrete_and_2" (formula "7") (term "0,0"))
      (rule "ifthenelse_false" (formula "7") (term "0"))
      (rule "eqClose" (formula "7"))
      (rule "true_left" (formula "7"))
      (rule "polySimp_critPair" (formula "8") (ifseqformula "7"))
      (rule "polySimp_mulComm0" (formula "8") (term "1,1,1,0"))
      (rule "polySimp_mulComm0" (formula "8") (term "0,1,0,0"))
      (rule "polySimp_rightDist" (formula "8") (term "1,0"))
      (rule "polySimp_mulComm0" (formula "8") (term "0,1,0"))
      (rule "polySimp_mulComm1" (formula "8") (term "1,1,0"))
      (rule "polySimp_rightDist" (formula "8") (term "0,0"))
      (rule "polySimp_mulComm1" (formula "8") (term "1,0,0"))
      (rule "polySimp_mulAssoc" (formula "8") (term "0,0,0"))
      (rule "polySimp_mulComm0" (formula "8") (term "0,0,0,0"))
      (rule "polySimp_addAssoc" (formula "8") (term "0"))
      (rule "polySimp_addComm1" (formula "8") (term "0,0"))
      (rule "polySimp_pullOutFactor1b" (formula "8") (term "0"))
      (rule "add_literals" (formula "8") (term "1,1,0"))
      (rule "times_zero_1" (formula "8") (term "1,0"))
      (rule "add_zero_right" (formula "8") (term "0"))
      (rule "polySimp_addComm0" (formula "8") (term "0"))
      (rule "polySimp_sepNegMonomial" (formula "8"))
      (rule "polySimp_mulLiterals" (formula "8") (term "0"))
      (rule "polySimp_elimOne" (formula "8") (term "0"))
      (rule "div_axiom" (formula "19") (term "0,0,1") (inst "quotient=quotient_10"))
      (rule "polySimp_mulComm0" (formula "19") (term "0,1,0,1"))
      (rule "polySimp_mulComm0" (formula "19") (term "1,1,1,1,1"))
      (rule "polySimp_mulComm0" (formula "19") (term "0,1,1,1"))
      (rule "polySimp_mulComm0" (formula "19") (term "0,2,1,1"))
      (rule "polySimp_addComm1" (formula "19") (term "1,2,1,1"))
      (rule "polySimp_addComm1" (formula "19") (term "1,1,1,1"))
      (rule "inEqSimp_contradEq7" (formula "19") (term "0") (ifseqformula "15"))
      (rule "times_zero_1" (formula "19") (term "1,0,0,0"))
      (rule "add_zero_right" (formula "19") (term "0,0,0"))
      (rule "leq_literals" (formula "19") (term "0,0"))
      (rule "concrete_and_2" (formula "19") (term "0"))
      (rule "concrete_or_2" (formula "19"))
      (rule "andLeft" (formula "19"))
      (rule "andLeft" (formula "19"))
      (rule "applyEq" (formula "26") (term "0,0,0,1") (ifseqformula "19"))
      (rule "polySimp_mulComm0" (formula "26") (term "0,0,1"))
      (rule "applyEq" (formula "22") (term "0,0,1") (ifseqformula "19"))
      (rule "polySimp_mulComm0" (formula "22") (term "0,1"))
      (rule "inEqSimp_subsumption1" (formula "21") (term "0") (ifseqformula "15"))
      (rule "leq_literals" (formula "21") (term "0,0"))
      (rule "concrete_or_1" (formula "21") (term "0"))
      (rule "ifthenelse_true_for" (formula "21"))
      (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "20"))
      (rule "polySimp_rightDist" (formula "21") (term "0,0"))
      (rule "polySimp_pullOutFactor2b" (formula "21") (term "0"))
      (rule "add_literals" (formula "21") (term "1,1,0"))
      (rule "times_zero_1" (formula "21") (term "1,0"))
      (rule "add_zero_right" (formula "21") (term "0"))
      (rule "polySimp_rightDist" (formula "21") (term "0"))
      (rule "mul_literals" (formula "21") (term "0,0"))
      (rule "polySimp_mulLiterals" (formula "21") (term "1,0"))
      (rule "polySimp_elimOne" (formula "21") (term "1,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "21"))
      (rule "mul_literals" (formula "21") (term "1"))
      (rule "div_axiom" (formula "26") (term "0,0,0,1,0") (inst "quotient=quotient_11"))
      (rule "polySimp_mulComm0" (formula "26") (term "0,1,0,1"))
      (rule "polySimp_mulComm0" (formula "26") (term "0,2,1,1"))
      (rule "polySimp_mulComm0" (formula "26") (term "0,1,1,1"))
      (rule "polySimp_mulComm0" (formula "26") (term "1,1,1,1,1"))
      (rule "polySimp_addComm1" (formula "26") (term "1,2,1,1"))
      (rule "polySimp_addComm1" (formula "26") (term "1,1,1,1"))
      (rule "inEqSimp_contradEq7" (formula "26") (term "0") (ifseqformula "15"))
      (rule "times_zero_1" (formula "26") (term "1,0,0,0"))
      (rule "add_zero_right" (formula "26") (term "0,0,0"))
      (rule "leq_literals" (formula "26") (term "0,0"))
      (rule "concrete_and_2" (formula "26") (term "0"))
      (rule "concrete_or_2" (formula "26"))
      (rule "andLeft" (formula "26"))
      (rule "andLeft" (formula "26"))
      (rule "applyEq" (formula "17") (term "0,0,1") (ifseqformula "26"))
      (rule "polySimp_mulComm0" (formula "17") (term "0,1"))
      (rule "applyEq" (formula "29") (term "0,0,0,1,0") (ifseqformula "26"))
      (rule "polySimp_mulComm0" (formula "29") (term "0,0,1,0"))
      (rule "inEqSimp_subsumption1" (formula "28") (term "0") (ifseqformula "15"))
      (rule "leq_literals" (formula "28") (term "0,0"))
      (rule "concrete_or_1" (formula "28") (term "0"))
      (rule "ifthenelse_true_for" (formula "28"))
      (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "27"))
      (rule "polySimp_rightDist" (formula "28") (term "0,0"))
      (rule "polySimp_pullOutFactor2b" (formula "28") (term "0"))
      (rule "add_literals" (formula "28") (term "1,1,0"))
      (rule "times_zero_1" (formula "28") (term "1,0"))
      (rule "add_zero_right" (formula "28") (term "0"))
      (rule "polySimp_rightDist" (formula "28") (term "0"))
      (rule "polySimp_mulLiterals" (formula "28") (term "1,0"))
      (rule "mul_literals" (formula "28") (term "0,0"))
      (rule "polySimp_elimOne" (formula "28") (term "1,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "28"))
      (rule "mul_literals" (formula "28") (term "1"))
      (rule "allLeft" (formula "23") (inst "t=x_1"))
      (rule "applyEq" (formula "23") (term "0,0,0,1,0,0") (ifseqformula "25"))
      (rule "polySimp_mulComm0" (formula "23") (term "0,0,1,0,0"))
      (rule "replace_known_left" (formula "23") (term "0,1,0,0") (ifseqformula "26"))
      (rule "concrete_not_1" (formula "23") (term "1,0,0"))
      (rule "concrete_or_4" (formula "23") (term "0,0"))
      (rule "inEqSimp_contradInEq1" (formula "23") (term "0,0") (ifseqformula "5"))
      (rule "qeq_literals" (formula "23") (term "0,0,0"))
      (rule "concrete_and_2" (formula "23") (term "0,0"))
      (rule "concrete_or_2" (formula "23") (term "0"))
      (rule "polyDiv_pullOut" (formula "23") (term "0,0,0,0") (inst "polyDivCoeff=quotient_4"))
      (rule "polySimp_mulComm1" (formula "23") (term "1,0,0,2,0,0,0,0"))
      (rule "polySimp_mulComm0" (formula "23") (term "0,1,0,0,2,0,0,0,0"))
      (rule "polySimp_addComm0" (formula "23") (term "2,0,0,0,0"))
      (rule "applyEq" (formula "23") (term "0,1,0,1,2,0,0,0,0") (ifseqformula "32"))
      (rule "polySimp_pullOutFactor1" (formula "23") (term "0,1,2,0,0,0,0"))
      (rule "add_literals" (formula "23") (term "1,0,1,2,0,0,0,0"))
      (rule "times_zero_1" (formula "23") (term "0,1,2,0,0,0,0"))
      (rule "inEqSimp_contradEq7" (formula "23") (term "0,0,0,0,0") (ifseqformula "5"))
      (rule "times_zero_1" (formula "23") (term "1,0,0,0,0,0,0,0"))
      (rule "add_zero_right" (formula "23") (term "0,0,0,0,0,0,0"))
      (rule "leq_literals" (formula "23") (term "0,0,0,0,0,0"))
      (rule "concrete_and_2" (formula "23") (term "0,0,0,0,0"))
      (rule "ifthenelse_false" (formula "23") (term "0,0,0,0"))
      (rule "polySimp_mulComm0" (formula "23") (term "0,0,0"))
      (rule "polySimp_rightDist" (formula "23") (term "0,0,0"))
      (rule "polySimp_homoEq" (formula "23") (term "0,0"))
      (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0"))
      (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0"))
      (rule "polySimp_mulComm0" (formula "23") (term "0,1,0,0,0"))
      (rule "polySimp_addAssoc" (formula "23") (term "0,0,0"))
      (rule "applyEq" (formula "23") (term "0,1,0,0,0,0") (ifseqformula "32"))
      (rule "polySimp_pullOutFactor1" (formula "23") (term "0,0,0,0"))
      (rule "add_literals" (formula "23") (term "1,0,0,0,0"))
      (rule "times_zero_1" (formula "23") (term "0,0,0,0"))
      (rule "add_zero_left" (formula "23") (term "0,0,0"))
      (rule "polySimp_invertEq" (formula "23") (term "0,0"))
      (rule "polySimp_mulLiterals" (formula "23") (term "0,0,0"))
      (rule "times_zero_2" (formula "23") (term "1,0,0"))
      (rule "polySimp_elimOne" (formula "23") (term "0,0,0"))
      (rule "polyDiv_zero" (formula "23") (term "0,0,0,0"))
      (rule "div_literals" (formula "23") (term "1,0,0,0,0"))
      (rule "inEqSimp_contradEq7" (formula "23") (term "0,0,0,0,0") (ifseqformula "5"))
      (rule "times_zero_1" (formula "23") (term "1,0,0,0,0,0,0,0"))
      (rule "add_zero_right" (formula "23") (term "0,0,0,0,0,0,0"))
      (rule "leq_literals" (formula "23") (term "0,0,0,0,0,0"))
      (rule "concrete_and_2" (formula "23") (term "0,0,0,0,0"))
      (rule "ifthenelse_false" (formula "23") (term "0,0,0,0"))
      (rule "times_zero_2" (formula "23") (term "0,0,0"))
      (rule "eqClose" (formula "23") (term "0,0"))
      (rule "concrete_not_1" (formula "23") (term "0"))
      (rule "concrete_or_2" (formula "23"))
      (rule "polyDiv_pullOut" (formula "23") (term "0,0") (inst "polyDivCoeff=quotient_5"))
      (rule "polySimp_mulComm1" (formula "23") (term "1,0,0,2,0,0"))
      (rule "polySimp_mulComm0" (formula "23") (term "0,1,0,0,2,0,0"))
      (rule "polySimp_addComm0" (formula "23") (term "2,0,0"))
      (rule "applyEqRigid" (formula "23") (term "0,1,0,1,2,0,0") (ifseqformula "9"))
      (rule "polySimp_pullOutFactor1" (formula "23") (term "0,1,2,0,0"))
      (rule "add_literals" (formula "23") (term "1,0,1,2,0,0"))
      (rule "times_zero_1" (formula "23") (term "0,1,2,0,0"))
      (rule "inEqSimp_contradEq7" (formula "23") (term "0,0,0") (ifseqformula "5"))
      (rule "times_zero_1" (formula "23") (term "1,0,0,0,0,0"))
      (rule "add_zero_right" (formula "23") (term "0,0,0,0,0"))
      (rule "leq_literals" (formula "23") (term "0,0,0,0"))
      (rule "concrete_and_2" (formula "23") (term "0,0,0"))
      (rule "ifthenelse_false" (formula "23") (term "0,0"))
      (rule "polySimp_mulComm0" (formula "23") (term "0"))
      (rule "polySimp_rightDist" (formula "23") (term "0"))
      (rule "polySimp_homoEq" (formula "23"))
      (rule "polySimp_mulComm0" (formula "23") (term "1,0"))
      (rule "polySimp_rightDist" (formula "23") (term "1,0"))
      (rule "polySimp_mulComm0" (formula "23") (term "0,1,0"))
      (rule "polySimp_addAssoc" (formula "23") (term "0"))
      (rule "applyEqRigid" (formula "23") (term "0,1,0,0") (ifseqformula "9"))
      (rule "polySimp_pullOutFactor1" (formula "23") (term "0,0"))
      (rule "add_literals" (formula "23") (term "1,0,0"))
      (rule "times_zero_1" (formula "23") (term "0,0"))
      (rule "add_zero_left" (formula "23") (term "0"))
      (rule "polySimp_invertEq" (formula "23"))
      (rule "polySimp_mulLiterals" (formula "23") (term "0"))
      (rule "times_zero_2" (formula "23") (term "1"))
      (rule "polySimp_elimOne" (formula "23") (term "0"))
      (rule "polyDiv_zero" (formula "23") (term "0,0"))
      (rule "div_literals" (formula "23") (term "1,0,0"))
      (rule "inEqSimp_contradEq7" (formula "23") (term "0,0,0") (ifseqformula "5"))
      (rule "times_zero_1" (formula "23") (term "1,0,0,0,0,0"))
      (rule "add_zero_right" (formula "23") (term "0,0,0,0,0"))
      (rule "leq_literals" (formula "23") (term "0,0,0,0"))
      (rule "concrete_and_2" (formula "23") (term "0,0,0"))
      (rule "ifthenelse_false" (formula "23") (term "0,0"))
      (rule "times_zero_2" (formula "23") (term "0"))
      (rule "eqClose" (formula "23"))
      (rule "true_left" (formula "23"))
      (rule "allLeft" (formula "18") (inst "t=x_1"))
      (rule "applyEq" (formula "18") (term "0,0,0,1,0,0") (ifseqformula "25"))
      (rule "polySimp_mulComm0" (formula "18") (term "0,0,1,0,0"))
      (rule "replace_known_left" (formula "18") (term "0,1,0,0") (ifseqformula "26"))
      (rule "concrete_not_1" (formula "18") (term "1,0,0"))
      (rule "concrete_or_4" (formula "18") (term "0,0"))
      (rule "inEqSimp_contradInEq1" (formula "18") (term "0,0") (ifseqformula "5"))
      (rule "qeq_literals" (formula "18") (term "0,0,0"))
      (rule "concrete_and_2" (formula "18") (term "0,0"))
      (rule "concrete_or_2" (formula "18") (term "0"))
      (rule "polyDiv_pullOut" (formula "18") (term "0,0,0,0") (inst "polyDivCoeff=quotient_4"))
      (rule "polySimp_mulComm1" (formula "18") (term "1,0,0,2,0,0,0,0"))
      (rule "polySimp_mulComm0" (formula "18") (term "0,1,0,0,2,0,0,0,0"))
      (rule "polySimp_addComm0" (formula "18") (term "2,0,0,0,0"))
      (rule "applyEq" (formula "18") (term "0,1,0,1,2,0,0,0,0") (ifseqformula "32"))
      (rule "polySimp_pullOutFactor1" (formula "18") (term "0,1,2,0,0,0,0"))
      (rule "add_literals" (formula "18") (term "1,0,1,2,0,0,0,0"))
      (rule "times_zero_1" (formula "18") (term "0,1,2,0,0,0,0"))
      (rule "inEqSimp_contradEq7" (formula "18") (term "0,0,0,0,0") (ifseqformula "5"))
      (rule "times_zero_1" (formula "18") (term "1,0,0,0,0,0,0,0"))
      (rule "add_zero_right" (formula "18") (term "0,0,0,0,0,0,0"))
      (rule "leq_literals" (formula "18") (term "0,0,0,0,0,0"))
      (rule "concrete_and_2" (formula "18") (term "0,0,0,0,0"))
      (rule "ifthenelse_false" (formula "18") (term "0,0,0,0"))
      (rule "polySimp_mulComm0" (formula "18") (term "0,0,0"))
      (rule "polySimp_rightDist" (formula "18") (term "0,0,0"))
      (rule "polySimp_homoEq" (formula "18") (term "0,0"))
      (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0"))
      (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0"))
      (rule "polySimp_mulComm0" (formula "18") (term "0,1,0,0,0"))
      (rule "polySimp_addAssoc" (formula "18") (term "0,0,0"))
      (rule "applyEq" (formula "18") (term "0,1,0,0,0,0") (ifseqformula "32"))
      (rule "polySimp_pullOutFactor1" (formula "18") (term "0,0,0,0"))
      (rule "add_literals" (formula "18") (term "1,0,0,0,0"))
      (rule "times_zero_1" (formula "18") (term "0,0,0,0"))
      (rule "add_zero_left" (formula "18") (term "0,0,0"))
      (rule "polySimp_invertEq" (formula "18") (term "0,0"))
      (rule "times_zero_2" (formula "18") (term "1,0,0"))
      (rule "polySimp_mulLiterals" (formula "18") (term "0,0,0"))
      (rule "polySimp_elimOne" (formula "18") (term "0,0,0"))
      (rule "polyDiv_zero" (formula "18") (term "0,0,0,0"))
      (rule "div_literals" (formula "18") (term "1,0,0,0,0"))
      (rule "inEqSimp_contradEq7" (formula "18") (term "0,0,0,0,0") (ifseqformula "5"))
      (rule "times_zero_1" (formula "18") (term "1,0,0,0,0,0,0,0"))
      (rule "add_zero_right" (formula "18") (term "0,0,0,0,0,0,0"))
      (rule "leq_literals" (formula "18") (term "0,0,0,0,0,0"))
      (rule "concrete_and_2" (formula "18") (term "0,0,0,0,0"))
      (rule "ifthenelse_false" (formula "18") (term "0,0,0,0"))
      (rule "times_zero_2" (formula "18") (term "0,0,0"))
      (rule "eqClose" (formula "18") (term "0,0"))
      (rule "concrete_not_1" (formula "18") (term "0"))
      (rule "concrete_or_2" (formula "18"))
      (rule "polyDiv_pullOut" (formula "18") (term "0,0") (inst "polyDivCoeff=quotient_8"))
      (rule "polySimp_mulComm1" (formula "18") (term "1,0,0,2,0,0"))
      (rule "polySimp_mulComm0" (formula "18") (term "0,1,0,0,2,0,0"))
      (rule "polySimp_addComm0" (formula "18") (term "2,0,0"))
      (rule "applyEqRigid" (formula "18") (term "0,1,0,1,2,0,0") (ifseqformula "7"))
      (rule "polySimp_pullOutFactor1" (formula "18") (term "0,1,2,0,0"))
      (rule "add_literals" (formula "18") (term "1,0,1,2,0,0"))
      (rule "times_zero_1" (formula "18") (term "0,1,2,0,0"))
      (rule "inEqSimp_contradEq7" (formula "18") (term "0,0,0") (ifseqformula "5"))
      (rule "times_zero_1" (formula "18") (term "1,0,0,0,0,0"))
      (rule "add_zero_right" (formula "18") (term "0,0,0,0,0"))
      (rule "leq_literals" (formula "18") (term "0,0,0,0"))
      (rule "concrete_and_2" (formula "18") (term "0,0,0"))
      (rule "ifthenelse_false" (formula "18") (term "0,0"))
      (rule "polySimp_mulComm0" (formula "18") (term "0"))
      (rule "polySimp_rightDist" (formula "18") (term "0"))
      (rule "polySimp_homoEq" (formula "18"))
      (rule "polySimp_mulComm0" (formula "18") (term "1,0"))
      (rule "polySimp_rightDist" (formula "18") (term "1,0"))
      (rule "polySimp_mulComm0" (formula "18") (term "0,1,0"))
      (rule "polySimp_addAssoc" (formula "18") (term "0"))
      (rule "applyEq" (formula "18") (term "0,1,0,0") (ifseqformula "7"))
      (rule "polySimp_pullOutFactor1" (formula "18") (term "0,0"))
      (rule "add_literals" (formula "18") (term "1,0,0"))
      (rule "times_zero_1" (formula "18") (term "0,0"))
      (rule "add_zero_left" (formula "18") (term "0"))
      (rule "polySimp_invertEq" (formula "18"))
      (rule "times_zero_2" (formula "18") (term "1"))
      (rule "polySimp_mulLiterals" (formula "18") (term "0"))
      (rule "polySimp_elimOne" (formula "18") (term "0"))
      (rule "polyDiv_zero" (formula "18") (term "0,0"))
      (rule "div_literals" (formula "18") (term "1,0,0"))
      (rule "inEqSimp_contradEq7" (formula "18") (term "0,0,0") (ifseqformula "5"))
      (rule "times_zero_1" (formula "18") (term "1,0,0,0,0,0"))
      (rule "add_zero_right" (formula "18") (term "0,0,0,0,0"))
      (rule "leq_literals" (formula "18") (term "0,0,0,0"))
      (rule "concrete_and_2" (formula "18") (term "0,0,0"))
      (rule "ifthenelse_false" (formula "18") (term "0,0"))
      (rule "times_zero_2" (formula "18") (term "0"))
      (rule "eqClose" (formula "18"))
      (rule "true_left" (formula "18"))
      (rule "polySimp_critPair" (formula "31") (ifseqformula "1"))
      (rule "polySimp_mulComm0" (formula "31") (term "1,1,1,0"))
      (rule "polySimp_rightDist" (formula "31") (term "0,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "31") (term "1,0,1,0,0"))
      (rule "polySimp_elimOne" (formula "31") (term "1,0,1,0,0"))
      (rule "polySimp_mulComm0" (formula "31") (term "0,0,1,0,0"))
      (rule "polySimp_rightDist" (formula "31") (term "1,0"))
      (rule "polySimp_mulComm1" (formula "31") (term "1,1,0"))
      (rule "polySimp_mulComm0" (formula "31") (term "0,1,0"))
      (rule "polySimp_mulComm1" (formula "31") (term "0,1,1,0"))
      (rule "polySimp_rightDist" (formula "31") (term "0,0"))
      (rule "polySimp_mulComm1" (formula "31") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "31") (term "0,1,0,0"))
      (rule "polySimp_rightDist" (formula "31") (term "0,0,0"))
      (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0"))
      (rule "polySimp_mulAssoc" (formula "31") (term "0,0,0,0"))
      (rule "polySimp_addAssoc" (formula "31") (term "0"))
      (rule "polySimp_addComm1" (formula "31") (term "0,0"))
      (rule "polySimp_pullOutFactor1b" (formula "31") (term "0"))
      (rule "add_literals" (formula "31") (term "1,1,0"))
      (rule "times_zero_1" (formula "31") (term "1,0"))
      (rule "add_zero_right" (formula "31") (term "0"))
      (rule "applyEq" (formula "31") (term "0,0,0,0") (ifseqformula "25"))
      (rule "polySimp_sepPosMonomial" (formula "31"))
      (rule "polySimp_mulComm0" (formula "31") (term "1"))
      (rule "polySimp_rightDist" (formula "31") (term "1"))
      (rule "polySimp_mulAssoc" (formula "31") (term "0,1"))
      (rule "polySimp_mulComm0" (formula "31") (term "0,0,1"))
      (rule "polySimp_mulLiterals" (formula "31") (term "0,1"))
      (rule "polySimp_elimOne" (formula "31") (term "0,1"))
      (rule "applyEq" (formula "2") (term "0") (ifseqformula "31"))
      (rule "inEqSimp_homoInEq0" (formula "2"))
      (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
      (rule "polySimp_rightDist" (formula "2") (term "1,0"))
      (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0"))
      (rule "polySimp_elimOne" (formula "2") (term "1,1,0"))
      (rule "polySimp_mulComm0" (formula "2") (term "0,1,0"))
      (rule "polySimp_addAssoc" (formula "2") (term "0"))
      (rule "polySimp_addComm1" (formula "2") (term "0,0"))
      (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,0"))
      (rule "add_literals" (formula "2") (term "1,1,0,0,0"))
      (rule "times_zero_1" (formula "2") (term "1,0,0,0"))
      (rule "add_zero_right" (formula "2") (term "0,0,0"))
      (rule "polySimp_pullOutFactor2b" (formula "2") (term "0"))
      (rule "add_literals" (formula "2") (term "1,1,0"))
      (rule "times_zero_1" (formula "2") (term "1,0"))
      (rule "add_zero_right" (formula "2") (term "0"))
      (rule "qeq_literals" (formula "2"))
      (rule "closeFalse" (formula "2"))
   )
   (branch " Case 2"
      (rule "andLeft" (formula "1"))
      (rule "polyDiv_pullOut" (formula "2") (term "0,0") (inst "polyDivCoeff=quotient_0 * (small / x_1) * -1"))
      (rule "polySimp_mulLiterals" (formula "2") (term "0,1,0,0,2,0,0"))
      (rule "polySimp_elimOneLeft1" (formula "2") (term "1,0,0,2,0,0"))
      (rule "polySimp_mulComm0" (formula "2") (term "0,1,2,0,0"))
      (rule "polySimp_mulComm0" (formula "2") (term "0,1,0,0,2,0,0"))
      (rule "polySimp_mulComm1" (formula "2") (term "1,0,0,2,0,0"))
      (rule "polySimp_addComm0" (formula "2") (term "2,0,0"))
      (rule "applyEq" (formula "2") (term "0,1,0,1,2,0,0") (ifseqformula "1"))
      (rule "polySimp_pullOutFactor2b" (formula "2") (term "0,1,2,0,0"))
      (rule "add_literals" (formula "2") (term "1,1,0,1,2,0,0"))
      (rule "times_zero_1" (formula "2") (term "1,0,1,2,0,0"))
      (rule "add_zero_right" (formula "2") (term "0,1,2,0,0"))
      (rule "polySimp_addComm0" (formula "2") (term "2,0,0"))
      (rule "inEqSimp_contradEq7" (formula "2") (term "0,0,0") (ifseqformula "3"))
      (rule "times_zero_1" (formula "2") (term "1,0,0,0,0,0"))
      (rule "add_zero_right" (formula "2") (term "0,0,0,0,0"))
      (rule "leq_literals" (formula "2") (term "0,0,0,0"))
      (rule "concrete_and_2" (formula "2") (term "0,0,0"))
      (rule "ifthenelse_false" (formula "2") (term "0,0"))
      (rule "polySimp_mulComm0" (formula "2") (term "0"))
      (rule "polySimp_rightDist" (formula "2") (term "0"))
      (rule "polySimp_homoEq" (formula "2"))
      (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
      (rule "polySimp_mulComm1" (formula "2") (term "1,1,1,0"))
      (rule "polySimp_mulComm0" (formula "2") (term "0,1,1,0"))
      (rule "polySimp_mulComm1" (formula "2") (term "0,1,1,1,0"))
      (rule "polySimp_rightDist" (formula "2") (term "1,0"))
      (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0"))
      (rule "polySimp_elimOne" (formula "2") (term "1,1,0"))
      (rule "polySimp_mulComm0" (formula "2") (term "0,1,0"))
      (rule "polySimp_addAssoc" (formula "2") (term "0"))
      (rule "applyEq" (formula "2") (term "0,1,0") (ifseqformula "1"))
      (rule "polySimp_addComm1" (formula "2") (term "0"))
      (rule "polySimp_pullOutFactor2b" (formula "2") (term "0,0"))
      (rule "add_literals" (formula "2") (term "1,1,0,0"))
      (rule "times_zero_1" (formula "2") (term "1,0,0"))
      (rule "add_zero_right" (formula "2") (term "0,0"))
      (rule "polySimp_sepNegMonomial" (formula "2"))
      (rule "polySimp_mulLiterals" (formula "2") (term "0"))
      (rule "polySimp_elimOne" (formula "2") (term "0"))
      (rule "div_axiom" (formula "14") (term "0,0,0") (inst "quotient=quotient_2"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,1"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,2,1,1"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,1,1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,1,1,1,1"))
      (rule "inEqSimp_contradEq7" (formula "1") (term "0") (ifseqformula "4"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0"))
      (rule "leq_literals" (formula "1") (term "0,0"))
      (rule "concrete_and_2" (formula "1") (term "0"))
      (rule "concrete_or_2" (formula "1"))
      (rule "andLeft" (formula "1"))
      (rule "andLeft" (formula "1"))
      (rule "applyEq" (formula "17") (term "0,0,0") (ifseqformula "1"))
      (rule "polySimp_mulComm0" (formula "17") (term "0,0"))
      (rule "inEqSimp_subsumption1" (formula "3") (term "0") (ifseqformula "6"))
      (rule "leq_literals" (formula "3") (term "0,0"))
      (rule "concrete_or_1" (formula "3") (term "0"))
      (rule "ifthenelse_true_for" (formula "3"))
      (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "2"))
      (rule "polySimp_rightDist" (formula "3") (term "0,0"))
      (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
      (rule "polySimp_elimOne" (formula "3") (term "1,0,0"))
      (rule "polySimp_addComm1" (formula "3") (term "0"))
      (rule "polySimp_rightDist" (formula "3") (term "0,0,0"))
      (rule "mul_literals" (formula "3") (term "0,0,0,0"))
      (rule "polySimp_pullOutFactor2b" (formula "3") (term "0,0"))
      (rule "add_literals" (formula "3") (term "1,1,0,0"))
      (rule "times_zero_1" (formula "3") (term "1,0,0"))
      (rule "add_zero_right" (formula "3") (term "0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "3"))
      (rule "mul_literals" (formula "3") (term "1"))
      (rule "div_axiom" (formula "17") (term "0,0,1") (inst "quotient=quotient_3"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,1"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,1,1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,1,1,1,1"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,2,1,1"))
      (rule "inEqSimp_contradEq7" (formula "1") (term "0") (ifseqformula "7"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0"))
      (rule "leq_literals" (formula "1") (term "0,0"))
      (rule "concrete_and_2" (formula "1") (term "0"))
      (rule "concrete_or_2" (formula "1"))
      (rule "andLeft" (formula "1"))
      (rule "andLeft" (formula "1"))
      (rule "applyEq" (formula "20") (term "0,0,1") (ifseqformula "1"))
      (rule "polySimp_mulComm0" (formula "20") (term "0,1"))
      (rule "inEqSimp_subsumption1" (formula "3") (term "0") (ifseqformula "9"))
      (rule "leq_literals" (formula "3") (term "0,0"))
      (rule "concrete_or_1" (formula "3") (term "0"))
      (rule "ifthenelse_true_for" (formula "3"))
      (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "2"))
      (rule "polySimp_rightDist" (formula "3") (term "0,0"))
      (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
      (rule "polySimp_elimOne" (formula "3") (term "1,0,0"))
      (rule "polySimp_addComm1" (formula "3") (term "0"))
      (rule "polySimp_rightDist" (formula "3") (term "0,0,0"))
      (rule "mul_literals" (formula "3") (term "0,0,0,0"))
      (rule "polySimp_pullOutFactor2b" (formula "3") (term "0,0"))
      (rule "add_literals" (formula "3") (term "1,1,0,0"))
      (rule "times_zero_1" (formula "3") (term "1,0,0"))
      (rule "add_zero_right" (formula "3") (term "0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "3"))
      (rule "mul_literals" (formula "3") (term "1"))
      (rule "div_axiom" (formula "7") (term "0,0") (inst "quotient=quotient_6"))
      (rule "polySimp_mulComm0" (formula "7") (term "0,1,0,1"))
      (rule "polySimp_mulComm0" (formula "7") (term "0,2,1,1"))
      (rule "polySimp_mulComm0" (formula "7") (term "1,1,1,1,1"))
      (rule "polySimp_mulComm0" (formula "7") (term "0,1,1,1"))
      (rule "inEqSimp_contradEq7" (formula "7") (term "0") (ifseqformula "10"))
      (rule "times_zero_1" (formula "7") (term "1,0,0,0"))
      (rule "add_zero_right" (formula "7") (term "0,0,0"))
      (rule "leq_literals" (formula "7") (term "0,0"))
      (rule "concrete_and_2" (formula "7") (term "0"))
      (rule "concrete_or_2" (formula "7"))
      (rule "andLeft" (formula "7"))
      (rule "andLeft" (formula "7"))
      (rule "applyEq" (formula "10") (term "0,0") (ifseqformula "7"))
      (rule "polySimp_mulComm0" (formula "10") (term "0"))
      (rule "applyEq" (formula "8") (term "0") (ifseqformula "10"))
      (rule "inEqSimp_homoInEq0" (formula "8"))
      (rule "polySimp_pullOutFactor1" (formula "8") (term "0"))
      (rule "add_literals" (formula "8") (term "1,0"))
      (rule "times_zero_1" (formula "8") (term "0"))
      (rule "qeq_literals" (formula "8"))
      (rule "true_left" (formula "8"))
      (rule "applyEq" (formula "8") (term "0,2") (ifseqformula "9"))
      (rule "inEqSimp_homoInEq1" (formula "8") (term "2"))
      (rule "polySimp_addComm1" (formula "8") (term "0,2"))
      (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,2"))
      (rule "add_literals" (formula "8") (term "1,1,0,0,2"))
      (rule "times_zero_1" (formula "8") (term "1,0,0,2"))
      (rule "add_zero_right" (formula "8") (term "0,0,2"))
      (rule "applyEq" (formula "8") (term "0,1") (ifseqformula "9"))
      (rule "inEqSimp_homoInEq1" (formula "8") (term "1"))
      (rule "polySimp_addComm1" (formula "8") (term "0,1"))
      (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,1"))
      (rule "add_literals" (formula "8") (term "1,1,0,0,1"))
      (rule "times_zero_1" (formula "8") (term "1,0,0,1"))
      (rule "add_zero_right" (formula "8") (term "0,0,1"))
      (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "2"))
      (rule "mul_literals" (formula "8") (term "1,2"))
      (rule "inEqSimp_sepNegMonomial0" (formula "8") (term "1"))
      (rule "polySimp_mulLiterals" (formula "8") (term "0,1"))
      (rule "polySimp_elimOne" (formula "8") (term "0,1"))
      (rule "replace_known_left" (formula "8") (term "1") (ifseqformula "11"))
      (rule "inEqSimp_subsumption1" (formula "8") (term "0") (ifseqformula "11"))
      (rule "leq_literals" (formula "8") (term "0,0"))
      (rule "concrete_or_1" (formula "8") (term "0"))
      (rule "ifthenelse_true_for" (formula "8"))
      (rule "true_left" (formula "8"))
      (rule "div_axiom" (formula "9") (term "0,0") (inst "quotient=quotient_7"))
      (rule "polySimp_mulComm0" (formula "9") (term "0,1,0,1"))
      (rule "polySimp_mulComm0" (formula "9") (term "0,2,1,1"))
      (rule "polySimp_mulComm0" (formula "9") (term "1,1,1,1,1"))
      (rule "polySimp_mulComm0" (formula "9") (term "0,1,1,1"))
      (rule "inEqSimp_contradEq7" (formula "9") (term "0") (ifseqformula "11"))
      (rule "times_zero_1" (formula "9") (term "1,0,0,0"))
      (rule "add_zero_right" (formula "9") (term "0,0,0"))
      (rule "leq_literals" (formula "9") (term "0,0"))
      (rule "concrete_and_2" (formula "9") (term "0"))
      (rule "concrete_or_2" (formula "9"))
      (rule "andLeft" (formula "9"))
      (rule "andLeft" (formula "9"))
      (rule "applyEq" (formula "12") (term "0,0") (ifseqformula "9"))
      (rule "polySimp_mulComm0" (formula "12") (term "0"))
      (rule "applyEq" (formula "10") (term "0") (ifseqformula "12"))
      (rule "inEqSimp_homoInEq0" (formula "10"))
      (rule "polySimp_pullOutFactor1" (formula "10") (term "0"))
      (rule "add_literals" (formula "10") (term "1,0"))
      (rule "times_zero_1" (formula "10") (term "0"))
      (rule "qeq_literals" (formula "10"))
      (rule "true_left" (formula "10"))
      (rule "applyEq" (formula "10") (term "0,1") (ifseqformula "11"))
      (rule "inEqSimp_homoInEq1" (formula "10") (term "1"))
      (rule "polySimp_addComm1" (formula "10") (term "0,1"))
      (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,1"))
      (rule "add_literals" (formula "10") (term "1,1,0,0,1"))
      (rule "times_zero_1" (formula "10") (term "1,0,0,1"))
      (rule "add_zero_right" (formula "10") (term "0,0,1"))
      (rule "applyEq" (formula "10") (term "0,2") (ifseqformula "11"))
      (rule "inEqSimp_homoInEq1" (formula "10") (term "2"))
      (rule "polySimp_addComm1" (formula "10") (term "0,2"))
      (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,2"))
      (rule "add_literals" (formula "10") (term "1,1,0,0,2"))
      (rule "times_zero_1" (formula "10") (term "1,0,0,2"))
      (rule "add_zero_right" (formula "10") (term "0,0,2"))
      (rule "inEqSimp_sepNegMonomial0" (formula "10") (term "1"))
      (rule "polySimp_mulLiterals" (formula "10") (term "0,1"))
      (rule "polySimp_elimOne" (formula "10") (term "0,1"))
      (rule "replace_known_left" (formula "10") (term "1") (ifseqformula "12"))
      (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "2"))
      (rule "mul_literals" (formula "10") (term "1,2"))
      (rule "inEqSimp_subsumption1" (formula "10") (term "0") (ifseqformula "12"))
      (rule "leq_literals" (formula "10") (term "0,0"))
      (rule "concrete_or_1" (formula "10") (term "0"))
      (rule "ifthenelse_true_for" (formula "10"))
      (rule "true_left" (formula "10"))
      (rule "allLeft" (formula "18") (inst "t=x_1"))
      (rule "applyEq" (formula "18") (term "0,0,1") (ifseqformula "4"))
      (rule "polySimp_mulComm0" (formula "18") (term "0,1"))
      (rule "applyEq" (formula "18") (term "0,0,0,1,0,0") (ifseqformula "9"))
      (rule "polySimp_mulComm0" (formula "18") (term "0,0,1,0,0"))
      (rule "replace_known_left" (formula "18") (term "0,1,0,0") (ifseqformula "10"))
      (rule "concrete_not_1" (formula "18") (term "1,0,0"))
      (rule "concrete_or_4" (formula "18") (term "0,0"))
      (rule "applyEq" (formula "18") (term "0,0,0,1,0") (ifseqformula "7"))
      (rule "polySimp_mulComm0" (formula "18") (term "0,0,1,0"))
      (rule "replace_known_left" (formula "18") (term "0,1,0") (ifseqformula "8"))
      (rule "concrete_not_1" (formula "18") (term "1,0"))
      (rule "concrete_or_4" (formula "18") (term "0"))
      (rule "inEqSimp_contradInEq1" (formula "18") (term "0") (ifseqformula "11"))
      (rule "qeq_literals" (formula "18") (term "0,0"))
      (rule "concrete_and_2" (formula "18") (term "0"))
      (rule "concrete_or_2" (formula "18"))
      (rule "replace_known_left" (formula "23") (term "0") (ifseqformula "18"))
      (rule "concrete_and_1" (formula "23"))
      (rule "applyEqRigid" (formula "6") (term "0") (ifseqformula "18"))
      (rule "inEqSimp_homoInEq1" (formula "6"))
      (rule "polySimp_addComm1" (formula "6") (term "0"))
      (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0"))
      (rule "add_literals" (formula "6") (term "1,1,0,0"))
      (rule "times_zero_1" (formula "6") (term "1,0,0"))
      (rule "add_zero_right" (formula "6") (term "0,0"))
      (rule "applyEq" (formula "5") (term "0") (ifseqformula "18"))
      (rule "inEqSimp_homoInEq0" (formula "5"))
      (rule "polySimp_pullOutFactor1" (formula "5") (term "0"))
      (rule "add_literals" (formula "5") (term "1,0"))
      (rule "times_zero_1" (formula "5") (term "0"))
      (rule "qeq_literals" (formula "5"))
      (rule "true_left" (formula "5"))
      (rule "inEqSimp_sepNegMonomial0" (formula "5"))
      (rule "polySimp_mulLiterals" (formula "5") (term "0"))
      (rule "polySimp_elimOne" (formula "5") (term "0"))
      (rule "inEqSimp_strengthen0" (formula "2") (ifseqformula "21"))
      (rule "inEqSimp_contradEq3" (formula "21") (ifseqformula "2"))
      (rule "polySimp_mulComm0" (formula "21") (term "1,0,0"))
      (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0"))
      (rule "add_literals" (formula "21") (term "1,1,0,0"))
      (rule "times_zero_1" (formula "21") (term "1,0,0"))
      (rule "add_zero_right" (formula "21") (term "0,0"))
      (rule "qeq_literals" (formula "21") (term "0"))
      (rule "concrete_and_2" (formula "21"))
      (rule "false_right" (formula "21"))
      (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "2"))
      (rule "polySimp_rightDist" (formula "3") (term "0,0"))
      (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
      (rule "polySimp_elimOne" (formula "3") (term "1,0,0"))
      (rule "polySimp_addComm1" (formula "3") (term "0"))
      (rule "polySimp_rightDist" (formula "3") (term "0,0,0"))
      (rule "mul_literals" (formula "3") (term "0,0,0,0"))
      (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
      (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
      (rule "add_literals" (formula "3") (term "0,0,0,0"))
      (rule "polySimp_pullOutFactor2b" (formula "3") (term "0,0"))
      (rule "add_literals" (formula "3") (term "1,1,0,0"))
      (rule "times_zero_1" (formula "3") (term "1,0,0"))
      (rule "add_zero_right" (formula "3") (term "0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "3"))
      (rule "mul_literals" (formula "3") (term "1"))
      (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "3"))
      (rule "leq_literals" (formula "10") (term "0"))
      (rule "concrete_or_1" (formula "10"))
      (rule "true_left" (formula "10"))
      (rule "allLeft" (formula "18") (inst "t=x_1"))
      (rule "applyEq" (formula "18") (term "0,0,0,1,0") (ifseqformula "6"))
      (rule "polySimp_mulComm0" (formula "18") (term "0,0,1,0"))
      (rule "replace_known_left" (formula "18") (term "0,1,0") (ifseqformula "7"))
      (rule "concrete_not_1" (formula "18") (term "1,0"))
      (rule "concrete_or_4" (formula "18") (term "0"))
      (rule "applyEq" (formula "18") (term "0,0,1") (ifseqformula "1"))
      (rule "polySimp_mulComm0" (formula "18") (term "0,1"))
      (rule "applyEq" (formula "18") (term "0,0,0,1,0") (ifseqformula "8"))
      (rule "polySimp_mulComm0" (formula "18") (term "0,0,1,0"))
      (rule "replace_known_left" (formula "18") (term "0,1,0") (ifseqformula "9"))
      (rule "concrete_not_1" (formula "18") (term "1,0"))
      (rule "concrete_or_4" (formula "18") (term "0"))
      (rule "inEqSimp_contradEq3" (formula "18") (term "1") (ifseqformula "2"))
      (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1"))
      (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1"))
      (rule "add_literals" (formula "18") (term "1,1,0,0,1"))
      (rule "times_zero_1" (formula "18") (term "1,0,0,1"))
      (rule "add_zero_right" (formula "18") (term "0,0,1"))
      (rule "qeq_literals" (formula "18") (term "0,1"))
      (rule "concrete_and_2" (formula "18") (term "1"))
      (rule "concrete_or_4" (formula "18"))
      (rule "inEqSimp_contradInEq1" (formula "18") (ifseqformula "3"))
      (rule "qeq_literals" (formula "18") (term "0"))
      (rule "concrete_and_2" (formula "18"))
      (rule "closeFalse" (formula "18"))
   )
)
(branch " Use Invariant"
   (rule "assignment" (formula "2") (userinteraction))
   (rule "exit" (formula "2") (userinteraction))
   (builtin "Update Simplification" (formula "2"))
   (rule "double_not" (formula "1") (term "1"))
   (rule "impRight" (formula "2"))
   (rule "andLeft" (formula "2"))
   (rule "notLeft" (formula "1"))
   (rule "andLeft" (formula "1"))
   (rule "andLeft" (formula "1"))
   (rule "andLeft" (formula "1"))
   (rule "replace_known_right" (formula "3") (term "1") (ifseqformula "6"))
   (rule "concrete_impl_3" (formula "3"))
   (rule "notLeft" (formula "3"))
   (rule "inEqSimp_gtToGeq" (formula "7") (term "0,0,0,0,1"))
   (rule "times_zero_1" (formula "7") (term "1,0,0,0,0,0,0,1"))
   (rule "add_zero_right" (formula "7") (term "0,0,0,0,0,0,1"))
   (rule "inEqSimp_gtToGeq" (formula "3") (term "0,0"))
   (rule "times_zero_1" (formula "3") (term "1,0,0,0,0"))
   (rule "add_zero_right" (formula "3") (term "0,0,0,0"))
   (rule "inEqSimp_commuteGeq" (formula "2"))
   (rule "applyEq" (formula "1") (term "0") (ifseqformula "4"))
   (rule "qeq_literals" (formula "1"))
   (rule "true_left" (formula "1"))
   (rule "applyEq" (formula "1") (term "0") (ifseqformula "3"))
   (rule "inEqSimp_commuteLeq" (formula "1"))
   (rule "applyEq" (formula "2") (term "0,0,1,1,1,0") (ifseqformula "3"))
   (rule "mod_axiom" (formula "6") (term "0,1,0,0,1"))
   (rule "polySimp_mulComm1" (formula "6") (term "1,0,1,0,0,1"))
   (rule "mod_axiom" (formula "6") (term "0,1,0,0,0,1"))
   (rule "polySimp_mulComm1" (formula "6") (term "1,0,1,0,0,0,1"))
   (rule "mod_axiom" (formula "6") (term "0,1,0"))
   (rule "polySimp_mulComm1" (formula "6") (term "1,0,1,0"))
   (rule "mod_axiom" (formula "6") (term "0,0,0"))
   (rule "polySimp_mulComm1" (formula "6") (term "1,0,0,0"))
   (rule "mod_axiom" (formula "6") (term "0,1,0,1"))
   (rule "polySimp_mulComm1" (formula "6") (term "1,0,1,0,1"))
   (rule "mod_axiom" (formula "2") (term "0,0,0,1,0"))
   (rule "polySimp_mulComm1" (formula "2") (term "1,0,0,0,1,0"))
   (rule "mod_axiom" (formula "2") (term "0,0,1,1,0"))
   (rule "polySimp_mulComm1" (formula "2") (term "1,0,0,1,1,0"))
   (rule "mod_axiom" (formula "2") (term "0,1,0,1,0"))
   (rule "polySimp_mulComm1" (formula "2") (term "1,0,1,0,1,0"))
   (rule "mod_axiom" (formula "2") (term "0,1,1,1,0"))
   (rule "add_zero_left" (formula "2") (term "0,1,1,1,0"))
   (rule "polySimp_mulComm1" (formula "2") (term "0,1,1,1,0"))
   (rule "polySimp_sepNegMonomial" (formula "6") (term "1,0,0,1"))
   (rule "polySimp_mulLiterals" (formula "6") (term "0,1,0,0,1"))
   (rule "polySimp_elimOne" (formula "6") (term "0,1,0,0,1"))
   (rule "polySimp_sepNegMonomial" (formula "6") (term "1,0,0,0,1"))
   (rule "polySimp_mulLiterals" (formula "6") (term "0,1,0,0,0,1"))
   (rule "polySimp_elimOne" (formula "6") (term "0,1,0,0,0,1"))
   (rule "polySimp_sepNegMonomial" (formula "6") (term "1,0"))
   (rule "polySimp_mulLiterals" (formula "6") (term "0,1,0"))
   (rule "polySimp_elimOne" (formula "6") (term "0,1,0"))
   (rule "polySimp_sepNegMonomial" (formula "6") (term "0,0"))
   (rule "polySimp_mulLiterals" (formula "6") (term "0,0,0"))
   (rule "polySimp_elimOne" (formula "6") (term "0,0,0"))
   (rule "polySimp_sepNegMonomial" (formula "6") (term "1,0,1"))
   (rule "polySimp_mulLiterals" (formula "6") (term "0,1,0,1"))
   (rule "polySimp_elimOne" (formula "6") (term "0,1,0,1"))
   (rule "polySimp_sepNegMonomial" (formula "2") (term "0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "2") (term "0,0,0,1,0"))
   (rule "polySimp_elimOne" (formula "2") (term "0,0,0,1,0"))
   (rule "polySimp_sepNegMonomial" (formula "2") (term "0,1,1,0"))
   (rule "polySimp_mulLiterals" (formula "2") (term "0,0,1,1,0"))
   (rule "polySimp_elimOne" (formula "2") (term "0,0,1,1,0"))
   (rule "polySimp_sepNegMonomial" (formula "2") (term "1,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "2") (term "0,1,0,1,0"))
   (rule "polySimp_elimOne" (formula "2") (term "0,1,0,1,0"))
   (rule "polySimp_invertEq" (formula "2") (term "1,1,1,0"))
   (rule "polySimp_mulLiterals" (formula "2") (term "0,1,1,1,0"))
   (rule "times_zero_2" (formula "2") (term "1,1,1,1,0"))
   (rule "polySimp_elimOne" (formula "2") (term "0,1,1,1,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "6") (term "0,0,0,0,1"))
   (rule "mul_literals" (formula "6") (term "1,0,0,0,0,1"))
   (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "0,0"))
   (rule "mul_literals" (formula "2") (term "1,0,0"))
   (rule "inEqSimp_strengthen1" (formula "1") (ifseqformula "4"))
   (rule "add_zero_right" (formula "1") (term "1"))
   (rule "inEqSimp_contradEq7" (formula "4") (ifseqformula "1"))
   (rule "times_zero_1" (formula "4") (term "1,0,0"))
   (rule "add_zero_right" (formula "4") (term "0,0"))
   (rule "leq_literals" (formula "4") (term "0"))
   (rule "concrete_and_2" (formula "4"))
   (rule "false_right" (formula "4"))
   (rule "polyDiv_zero" (formula "2") (term "0,0,1,1,1,0"))
   (rule "div_literals" (formula "2") (term "1,0,0,1,1,1,0"))
   (rule "nnf_imp2or" (formula "5") (term "0,1"))
   (rule "nnf_imp2or" (formula "2") (term "0"))
   (rule "inEqSimp_notGeq" (formula "2") (term "0,0"))
   (rule "mul_literals" (formula "2") (term "1,0,0,0,0"))
   (rule "add_literals" (formula "2") (term "0,0,0,0"))
   (rule "add_zero_left" (formula "2") (term "0,0,0"))
   (rule "nnf_notAnd" (formula "5") (term "0,0,1"))
   (rule "nnf_notAnd" (formula "5") (term "0,0,0,1"))
   (rule "inEqSimp_notGeq" (formula "5") (term "0,0,0,0,1"))
   (rule "mul_literals" (formula "5") (term "1,0,0,0,0,0,0,1"))
   (rule "add_literals" (formula "5") (term "0,0,0,0,0,0,1"))
   (rule "add_zero_left" (formula "5") (term "0,0,0,0,0,1"))
   (rule "cnf_eqv" (formula "2") (term "1,0"))
   (rule "nnf_notAnd" (formula "2") (term "1,0,1,0"))
   (rule "nnf_notAnd" (formula "2") (term "0,1,1,0"))
   (rule "commute_or" (formula "2") (term "0,1,0"))
   (rule "cnf_rightDist" (formula "2") (term "1,1,0"))
   (rule "commute_or_2" (formula "2") (term "0,1,1,0"))
   (rule "commute_or" (formula "2") (term "1,1,1,0"))
   (rule "commute_or" (formula "2") (term "0,0,1,1,0"))
   (rule "cnf_rightDist" (formula "2") (term "0,1,0"))
   (rule "commute_or_2" (formula "2") (term "0,0,1,0"))
   (rule "shift_paren_or" (formula "2") (term "1,0,1,0"))
   (rule "commute_or" (formula "2") (term "0,1,0,1,0"))
   (rule "cnf_rightDist" (formula "2") (term "0"))
   (rule "distr_forallAnd" (formula "2"))
   (rule "andLeft" (formula "2"))
   (rule "commute_or" (formula "3") (term "0"))
   (rule "cnf_rightDist" (formula "2") (term "0"))
   (rule "distr_forallAnd" (formula "2"))
   (rule "andLeft" (formula "2"))
   (rule "commute_or_2" (formula "3") (term "0"))
   (rule "commute_or_2" (formula "3") (term "0,0"))
   (rule "commute_or" (formula "3") (term "0,0,0"))
   (rule "shift_paren_or" (formula "2") (term "0"))
   (rule "shift_paren_or" (formula "2") (term "0,0"))
   (rule "cnf_rightDist" (formula "4") (term "0"))
   (rule "distr_forallAnd" (formula "4"))
   (rule "andLeft" (formula "4"))
   (rule "commute_or_2" (formula "5") (term "0"))
   (rule "commute_or_2" (formula "5") (term "0,0"))
   (rule "commute_or" (formula "5") (term "0,0,0"))
   (rule "shift_paren_or" (formula "4") (term "0"))
   (rule "shift_paren_or" (formula "4") (term "0,0"))
   (rule "div_axiom" (formula "8") (term "0,0,1,0") (inst "quotient=quotient_12"))
   (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,1"))
   (rule "polySimp_mulComm0" (formula "1") (term "1,1,1,1,1"))
   (rule "polySimp_mulComm0" (formula "1") (term "0,2,1,1"))
   (rule "polySimp_mulComm0" (formula "1") (term "0,1,1,1"))
   (rule "polySimp_addComm1" (formula "1") (term "1,2,1,1"))
   (rule "polySimp_addComm1" (formula "1") (term "1,1,1,1"))
   (rule "inEqSimp_contradEq7" (formula "1") (term "0") (ifseqformula "2"))
   (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
   (rule "add_zero_right" (formula "1") (term "0,0,0"))
   (rule "leq_literals" (formula "1") (term "0,0"))
   (rule "concrete_and_2" (formula "1") (term "0"))
   (rule "concrete_or_2" (formula "1"))
   (rule "andLeft" (formula "1"))
   (rule "andLeft" (formula "1"))
   (rule "applyEq" (formula "11") (term "0,0,1,0") (ifseqformula "1"))
   (rule "polySimp_mulComm0" (formula "11") (term "0,1,0"))
   (rule "inEqSimp_subsumption1" (formula "3") (term "0") (ifseqformula "4"))
   (rule "leq_literals" (formula "3") (term "0,0"))
   (rule "concrete_or_1" (formula "3") (term "0"))
   (rule "ifthenelse_true_for" (formula "3"))
   (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "2"))
   (rule "polySimp_rightDist" (formula "3") (term "0,0"))
   (rule "polySimp_pullOutFactor2b" (formula "3") (term "0"))
   (rule "add_literals" (formula "3") (term "1,1,0"))
   (rule "times_zero_1" (formula "3") (term "1,0"))
   (rule "add_zero_right" (formula "3") (term "0"))
   (rule "polySimp_rightDist" (formula "3") (term "0"))
   (rule "mul_literals" (formula "3") (term "0,0"))
   (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
   (rule "polySimp_elimOne" (formula "3") (term "1,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "3"))
   (rule "mul_literals" (formula "3") (term "1"))
   (rule "div_axiom" (formula "11") (term "0,0,0,0") (inst "quotient=quotient_13"))
   (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,1"))
   (rule "polySimp_mulComm0" (formula "1") (term "0,1,1,1"))
   (rule "polySimp_mulComm0" (formula "1") (term "0,2,1,1"))
   (rule "polySimp_mulComm0" (formula "1") (term "1,1,1,1,1"))
   (rule "polySimp_addComm1" (formula "1") (term "1,2,1,1"))
   (rule "polySimp_addComm1" (formula "1") (term "1,1,1,1"))
   (rule "inEqSimp_contradEq7" (formula "1") (term "0") (ifseqformula "5"))
   (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
   (rule "add_literals" (formula "1") (term "0,0,0"))
   (rule "leq_literals" (formula "1") (term "0,0"))
   (rule "concrete_and_2" (formula "1") (term "0"))
   (rule "concrete_or_2" (formula "1"))
   (rule "andLeft" (formula "1"))
   (rule "andLeft" (formula "1"))
   (rule "applyEq" (formula "14") (term "0,0,0,0") (ifseqformula "1"))
   (rule "polySimp_mulComm0" (formula "14") (term "0,0,0"))
   (rule "inEqSimp_subsumption1" (formula "3") (term "0") (ifseqformula "7"))
   (rule "leq_literals" (formula "3") (term "0,0"))
   (rule "concrete_or_1" (formula "3") (term "0"))
   (rule "ifthenelse_true_for" (formula "3"))
   (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "2"))
   (rule "polySimp_rightDist" (formula "3") (term "0,0"))
   (rule "polySimp_pullOutFactor2b" (formula "3") (term "0"))
   (rule "add_literals" (formula "3") (term "1,1,0"))
   (rule "times_zero_1" (formula "3") (term "1,0"))
   (rule "add_zero_right" (formula "3") (term "0"))
   (rule "polySimp_rightDist" (formula "3") (term "0"))
   (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
   (rule "mul_literals" (formula "3") (term "0,0"))
   (rule "polySimp_elimOne" (formula "3") (term "1,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "3"))
   (rule "mul_literals" (formula "3") (term "1"))
   (rule "andRight" (formula "14"))
   (branch " Case 1"
      (rule "andRight" (formula "14"))
      (branch " Case 1"
         (rule "inEqSimp_strengthen0" (formula "2") (ifseqformula "14"))
         (rule "inEqSimp_contradEq3" (formula "14") (ifseqformula "2"))
         (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0"))
         (rule "add_literals" (formula "14") (term "1,1,0,0"))
         (rule "times_zero_1" (formula "14") (term "1,0,0"))
         (rule "add_literals" (formula "14") (term "0,0"))
         (rule "qeq_literals" (formula "14") (term "0"))
         (rule "concrete_and_2" (formula "14"))
         (rule "false_right" (formula "14"))
         (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "2"))
         (rule "polySimp_rightDist" (formula "3") (term "0,0"))
         (rule "polySimp_rightDist" (formula "3") (term "0,0,0"))
         (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0"))
         (rule "mul_literals" (formula "3") (term "0,0,0,0"))
         (rule "polySimp_elimOne" (formula "3") (term "1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "3") (term "0"))
         (rule "polySimp_addComm1" (formula "3") (term "0,0"))
         (rule "polySimp_pullOutFactor2b" (formula "3") (term "0"))
         (rule "add_literals" (formula "3") (term "1,1,0"))
         (rule "times_zero_1" (formula "3") (term "1,0"))
         (rule "add_zero_right" (formula "3") (term "0"))
         (rule "polySimp_addComm1" (formula "3") (term "0"))
         (rule "add_literals" (formula "3") (term "0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "3"))
         (rule "mul_literals" (formula "3") (term "1"))
         (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "3"))
         (rule "leq_literals" (formula "8") (term "0"))
         (rule "concrete_or_1" (formula "8"))
         (rule "true_left" (formula "8"))
         (rule "allLeft" (formula "11") (inst "t=big"))
         (rule "applyEq" (formula "11") (term "0,0,0,1,0") (ifseqformula "5"))
         (rule "polySimp_mulComm0" (formula "11") (term "0,0,1,0"))
         (rule "applyEq" (formula "11") (term "0,0,0,1,0,0") (ifseqformula "1"))
         (rule "polySimp_mulComm0" (formula "11") (term "0,0,1,0,0"))
         (rule "inEqSimp_contradEq3" (formula "11") (term "0,1,0,0") (ifseqformula "2"))
         (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,1,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,0,1,0,0"))
         (rule "add_literals" (formula "11") (term "1,1,0,0,0,1,0,0"))
         (rule "times_zero_1" (formula "11") (term "1,0,0,0,1,0,0"))
         (rule "add_zero_right" (formula "11") (term "0,0,0,1,0,0"))
         (rule "qeq_literals" (formula "11") (term "0,0,1,0,0"))
         (rule "concrete_and_2" (formula "11") (term "0,1,0,0"))
         (rule "concrete_not_2" (formula "11") (term "1,0,0"))
         (rule "concrete_or_3" (formula "11") (term "0,0"))
         (rule "concrete_or_1" (formula "11") (term "0"))
         (rule "concrete_or_1" (formula "11"))
         (rule "true_left" (formula "11"))
         (rule "allLeft" (formula "10") (inst "t=big"))
         (rule "applyEq" (formula "10") (term "0,0,0,1") (ifseqformula "5"))
         (rule "polySimp_mulComm0" (formula "10") (term "0,0,1"))
         (rule "applyEq" (formula "10") (term "0,0,0,1,0") (ifseqformula "1"))
         (rule "polySimp_mulComm0" (formula "10") (term "0,0,1,0"))
         (rule "inEqSimp_contradEq3" (formula "10") (term "0,1,0") (ifseqformula "2"))
         (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,0,1,0"))
         (rule "add_literals" (formula "10") (term "1,1,0,0,0,1,0"))
         (rule "times_zero_1" (formula "10") (term "1,0,0,0,1,0"))
         (rule "add_zero_right" (formula "10") (term "0,0,0,1,0"))
         (rule "qeq_literals" (formula "10") (term "0,0,1,0"))
         (rule "concrete_and_2" (formula "10") (term "0,1,0"))
         (rule "concrete_not_2" (formula "10") (term "1,0"))
         (rule "concrete_or_3" (formula "10") (term "0"))
         (rule "concrete_or_1" (formula "10"))
         (rule "true_left" (formula "10"))
         (rule "allLeft" (formula "8") (inst "t=big"))
         (rule "applyEq" (formula "8") (term "0,0,1,0") (ifseqformula "1"))
         (rule "polySimp_mulComm0" (formula "8") (term "0,1,0"))
         (rule "inEqSimp_contradEq3" (formula "8") (term "1,0") (ifseqformula "2"))
         (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,1,0"))
         (rule "add_literals" (formula "8") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "8") (term "1,0,0,1,0"))
         (rule "add_zero_right" (formula "8") (term "0,0,1,0"))
         (rule "qeq_literals" (formula "8") (term "0,1,0"))
         (rule "concrete_and_2" (formula "8") (term "1,0"))
         (rule "concrete_or_4" (formula "8") (term "0"))
         (rule "inEqSimp_contradEq7" (formula "8") (term "0,0,0,0,1") (ifseqformula "3"))
         (rule "times_zero_1" (formula "8") (term "1,0,0,0,0,0,0,1"))
         (rule "add_zero_right" (formula "8") (term "0,0,0,0,0,0,1"))
         (rule "leq_literals" (formula "8") (term "0,0,0,0,0,1"))
         (rule "concrete_and_2" (formula "8") (term "0,0,0,0,1"))
         (rule "ifthenelse_false" (formula "8") (term "0,0,0,1"))
         (rule "times_zero_2" (formula "8") (term "0,0,1"))
         (rule "eqClose" (formula "8") (term "0,1"))
         (rule "concrete_not_1" (formula "8") (term "1"))
         (rule "concrete_or_4" (formula "8"))
         (rule "inEqSimp_contradInEq1" (formula "8") (term "0") (ifseqformula "3"))
         (rule "qeq_literals" (formula "8") (term "0,0"))
         (rule "concrete_and_2" (formula "8") (term "0"))
         (rule "concrete_or_2" (formula "8"))
         (rule "notLeft" (formula "8"))
         (rule "polyDiv_pullOut" (formula "13") (term "0,0") (inst "polyDivCoeff=1"))
         (rule "mul_literals" (formula "13") (term "0,1,0,0,2,0,0"))
         (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,2,0,0"))
         (rule "polySimp_pullOutFactor1" (formula "13") (term "0,0,2,0,0"))
         (rule "add_literals" (formula "13") (term "1,0,0,2,0,0"))
         (rule "times_zero_1" (formula "13") (term "0,0,2,0,0"))
         (rule "polySimp_addComm0" (formula "13") (term "2,0,0"))
         (rule "inEqSimp_contradEq7" (formula "13") (term "0,0,0") (ifseqformula "3"))
         (rule "times_zero_1" (formula "13") (term "1,0,0,0,0,0"))
         (rule "add_zero_right" (formula "13") (term "0,0,0,0,0"))
         (rule "leq_literals" (formula "13") (term "0,0,0,0"))
         (rule "concrete_and_2" (formula "13") (term "0,0,0"))
         (rule "ifthenelse_false" (formula "13") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "13") (term "0"))
         (rule "polySimp_rightDist" (formula "13") (term "0"))
         (rule "polySimp_elimOne" (formula "13") (term "0,0"))
         (rule "polySimp_homoEq" (formula "13"))
         (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
         (rule "polySimp_rightDist" (formula "13") (term "1,0"))
         (rule "polySimp_mulComm0" (formula "13") (term "0,1,0"))
         (rule "polySimp_addAssoc" (formula "13") (term "0"))
         (rule "polySimp_pullOutFactor1" (formula "13") (term "0,0"))
         (rule "add_literals" (formula "13") (term "1,0,0"))
         (rule "times_zero_1" (formula "13") (term "0,0"))
         (rule "add_zero_left" (formula "13") (term "0"))
         (rule "polySimp_invertEq" (formula "13"))
         (rule "polySimp_mulLiterals" (formula "13") (term "0"))
         (rule "times_zero_2" (formula "13") (term "1"))
         (rule "polySimp_elimOne" (formula "13") (term "0"))
         (rule "polyDiv_zero" (formula "13") (term "0,0"))
         (rule "div_literals" (formula "13") (term "1,0,0"))
         (rule "inEqSimp_contradEq7" (formula "13") (term "0,0,0") (ifseqformula "3"))
         (rule "times_zero_1" (formula "13") (term "1,0,0,0,0,0"))
         (rule "add_zero_right" (formula "13") (term "0,0,0,0,0"))
         (rule "leq_literals" (formula "13") (term "0,0,0,0"))
         (rule "concrete_and_2" (formula "13") (term "0,0,0"))
         (rule "ifthenelse_false" (formula "13") (term "0,0"))
         (rule "times_zero_2" (formula "13") (term "0"))
         (rule "eqClose" (formula "13"))
         (rule "closeTrue" (formula "13"))
      )
      (branch " Case 2"
         (rule "inEqSimp_strengthen0" (formula "5") (ifseqformula "14"))
         (rule "inEqSimp_contradEq3" (formula "14") (ifseqformula "5"))
         (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0"))
         (rule "add_literals" (formula "14") (term "1,1,0,0"))
         (rule "times_zero_1" (formula "14") (term "1,0,0"))
         (rule "add_literals" (formula "14") (term "0,0"))
         (rule "qeq_literals" (formula "14") (term "0"))
         (rule "concrete_and_2" (formula "14"))
         (rule "false_right" (formula "14"))
         (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "5"))
         (rule "polySimp_rightDist" (formula "6") (term "0,0"))
         (rule "polySimp_rightDist" (formula "6") (term "0,0,0"))
         (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0,0"))
         (rule "mul_literals" (formula "6") (term "0,0,0,0"))
         (rule "polySimp_elimOne" (formula "6") (term "1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "6") (term "0"))
         (rule "polySimp_addComm1" (formula "6") (term "0,0"))
         (rule "polySimp_pullOutFactor2b" (formula "6") (term "0"))
         (rule "add_literals" (formula "6") (term "1,1,0"))
         (rule "times_zero_1" (formula "6") (term "1,0"))
         (rule "add_zero_right" (formula "6") (term "0"))
         (rule "polySimp_addComm1" (formula "6") (term "0"))
         (rule "add_literals" (formula "6") (term "0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "6"))
         (rule "mul_literals" (formula "6") (term "1"))
         (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "6"))
         (rule "leq_literals" (formula "8") (term "0"))
         (rule "concrete_or_1" (formula "8"))
         (rule "true_left" (formula "8"))
         (rule "allLeft" (formula "11") (inst "t=big"))
         (rule "applyEq" (formula "11") (term "0,0,0,1,0") (ifseqformula "4"))
         (rule "polySimp_mulComm0" (formula "11") (term "0,0,1,0"))
         (rule "applyEq" (formula "11") (term "0,0,0,1,0,0") (ifseqformula "1"))
         (rule "polySimp_mulComm0" (formula "11") (term "0,0,1,0,0"))
         (rule "inEqSimp_contradEq3" (formula "11") (term "0,1,0") (ifseqformula "5"))
         (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,0,1,0"))
         (rule "add_literals" (formula "11") (term "1,1,0,0,0,1,0"))
         (rule "times_zero_1" (formula "11") (term "1,0,0,0,1,0"))
         (rule "add_zero_right" (formula "11") (term "0,0,0,1,0"))
         (rule "qeq_literals" (formula "11") (term "0,0,1,0"))
         (rule "concrete_and_2" (formula "11") (term "0,1,0"))
         (rule "concrete_not_2" (formula "11") (term "1,0"))
         (rule "concrete_or_3" (formula "11") (term "0"))
         (rule "concrete_or_1" (formula "11"))
         (rule "true_left" (formula "11"))
         (rule "allLeft" (formula "10") (inst "t=big"))
         (rule "applyEq" (formula "10") (term "0,0,0,1") (ifseqformula "4"))
         (rule "polySimp_mulComm0" (formula "10") (term "0,0,1"))
         (rule "applyEq" (formula "10") (term "0,0,0,1,0") (ifseqformula "1"))
         (rule "polySimp_mulComm0" (formula "10") (term "0,0,1,0"))
         (rule "inEqSimp_contradEq3" (formula "10") (term "0,1") (ifseqformula "5"))
         (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,1"))
         (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,0,1"))
         (rule "add_literals" (formula "10") (term "1,1,0,0,0,1"))
         (rule "times_zero_1" (formula "10") (term "1,0,0,0,1"))
         (rule "add_zero_right" (formula "10") (term "0,0,0,1"))
         (rule "qeq_literals" (formula "10") (term "0,0,1"))
         (rule "concrete_and_2" (formula "10") (term "0,1"))
         (rule "concrete_not_2" (formula "10") (term "1"))
         (rule "concrete_or_3" (formula "10"))
         (rule "true_left" (formula "10"))
         (rule "allLeft" (formula "8") (inst "t=big"))
         (rule "applyEq" (formula "8") (term "0,0,1,0") (ifseqformula "1"))
         (rule "polySimp_mulComm0" (formula "8") (term "0,1,0"))
         (rule "inEqSimp_contradEq7" (formula "8") (term "0,0,0,0,1") (ifseqformula "6"))
         (rule "times_zero_1" (formula "8") (term "1,0,0,0,0,0,0,1"))
         (rule "add_zero_right" (formula "8") (term "0,0,0,0,0,0,1"))
         (rule "leq_literals" (formula "8") (term "0,0,0,0,0,1"))
         (rule "concrete_and_2" (formula "8") (term "0,0,0,0,1"))
         (rule "ifthenelse_false" (formula "8") (term "0,0,0,1"))
         (rule "times_zero_2" (formula "8") (term "0,0,1"))
         (rule "eqClose" (formula "8") (term "0,1"))
         (rule "concrete_not_1" (formula "8") (term "1"))
         (rule "concrete_or_4" (formula "8"))
         (rule "inEqSimp_contradInEq1" (formula "8") (term "0,0") (ifseqformula "6"))
         (rule "qeq_literals" (formula "8") (term "0,0,0"))
         (rule "concrete_and_2" (formula "8") (term "0,0"))
         (rule "concrete_or_2" (formula "8") (term "0"))
         (rule "polyDiv_pullOut" (formula "8") (term "0,0,0,0") (inst "polyDivCoeff=1"))
         (rule "mul_literals" (formula "8") (term "0,1,0,0,2,0,0,0,0"))
         (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,2,0,0,0,0"))
         (rule "polySimp_pullOutFactor1" (formula "8") (term "0,0,2,0,0,0,0"))
         (rule "add_literals" (formula "8") (term "1,0,0,2,0,0,0,0"))
         (rule "times_zero_1" (formula "8") (term "0,0,2,0,0,0,0"))
         (rule "polySimp_addComm0" (formula "8") (term "2,0,0,0,0"))
         (rule "inEqSimp_contradEq7" (formula "8") (term "0,0,0,0,0") (ifseqformula "6"))
         (rule "times_zero_1" (formula "8") (term "1,0,0,0,0,0,0,0"))
         (rule "add_zero_right" (formula "8") (term "0,0,0,0,0,0,0"))
         (rule "leq_literals" (formula "8") (term "0,0,0,0,0,0"))
         (rule "concrete_and_2" (formula "8") (term "0,0,0,0,0"))
         (rule "ifthenelse_false" (formula "8") (term "0,0,0,0"))
         (rule "polySimp_mulComm0" (formula "8") (term "0,0,0"))
         (rule "polySimp_rightDist" (formula "8") (term "0,0,0"))
         (rule "polySimp_homoEq" (formula "8") (term "0,0"))
         (rule "polySimp_elimOne" (formula "8") (term "0,0,1,0,0,0"))
         (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0"))
         (rule "polySimp_mulComm0" (formula "8") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "8") (term "0,0,0"))
         (rule "polySimp_pullOutFactor1" (formula "8") (term "0,0,0,0"))
         (rule "add_literals" (formula "8") (term "1,0,0,0,0"))
         (rule "times_zero_1" (formula "8") (term "0,0,0,0"))
         (rule "add_zero_left" (formula "8") (term "0,0,0"))
         (rule "polySimp_invertEq" (formula "8") (term "0,0"))
         (rule "polySimp_mulLiterals" (formula "8") (term "0,0,0"))
         (rule "times_zero_2" (formula "8") (term "1,0,0"))
         (rule "polySimp_elimOne" (formula "8") (term "0,0,0"))
         (rule "polyDiv_zero" (formula "8") (term "0,0,0,0"))
         (rule "div_literals" (formula "8") (term "1,0,0,0,0"))
         (rule "inEqSimp_contradEq7" (formula "8") (term "0,0,0,0,0") (ifseqformula "6"))
         (rule "times_zero_1" (formula "8") (term "1,0,0,0,0,0,0,0"))
         (rule "add_zero_right" (formula "8") (term "0,0,0,0,0,0,0"))
         (rule "leq_literals" (formula "8") (term "0,0,0,0,0,0"))
         (rule "concrete_and_2" (formula "8") (term "0,0,0,0,0"))
         (rule "ifthenelse_false" (formula "8") (term "0,0,0,0"))
         (rule "times_zero_2" (formula "8") (term "0,0,0"))
         (rule "eqClose" (formula "8") (term "0,0"))
         (rule "concrete_not_1" (formula "8") (term "0"))
         (rule "concrete_or_2" (formula "8"))
         (rule "applyEq" (formula "3") (term "0") (ifseqformula "8"))
         (rule "inEqSimp_homoInEq1" (formula "3"))
         (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
         (rule "add_literals" (formula "3") (term "1,1,0"))
         (rule "times_zero_1" (formula "3") (term "1,0"))
         (rule "add_zero_right" (formula "3") (term "0"))
         (rule "applyEq" (formula "2") (term "0") (ifseqformula "8"))
         (rule "inEqSimp_homoInEq0" (formula "2"))
         (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
         (rule "add_literals" (formula "2") (term "1,0"))
         (rule "times_zero_1" (formula "2") (term "0"))
         (rule "qeq_literals" (formula "2"))
         (rule "true_left" (formula "2"))
         (rule "inEqSimp_sepNegMonomial0" (formula "2"))
         (rule "polySimp_mulLiterals" (formula "2") (term "0"))
         (rule "polySimp_elimOne" (formula "2") (term "0"))
         (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "5"))
         (rule "leq_literals" (formula "2") (term "0"))
         (rule "concrete_or_1" (formula "2"))
         (rule "true_left" (formula "2"))
         (rule "polyDiv_pullOut" (formula "1") (term "0") (inst "polyDivCoeff=quotient_13"))
         (rule "polySimp_mulComm1" (formula "1") (term "1,0,0,2,0"))
         (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,0,2,0"))
         (rule "polySimp_addComm0" (formula "1") (term "2,0"))
         (rule "applyEq" (formula "1") (term "0,1,0,1,2,0") (ifseqformula "6"))
         (rule "polySimp_pullOutFactor1" (formula "1") (term "0,1,2,0"))
         (rule "add_literals" (formula "1") (term "1,0,1,2,0"))
         (rule "times_zero_1" (formula "1") (term "0,1,2,0"))
         (rule "inEqSimp_contradEq7" (formula "1") (term "0,0") (ifseqformula "4"))
         (rule "times_zero_1" (formula "1") (term "1,0,0,0,0"))
         (rule "add_zero_right" (formula "1") (term "0,0,0,0"))
         (rule "leq_literals" (formula "1") (term "0,0,0"))
         (rule "concrete_and_2" (formula "1") (term "0,0"))
         (rule "ifthenelse_false" (formula "1") (term "0"))
         (rule "polySimp_homoEq" (formula "1"))
         (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
         (rule "polySimp_rightDist" (formula "1") (term "1,0"))
         (rule "polySimp_mulComm0" (formula "1") (term "0,1,0"))
         (rule "polySimp_addAssoc" (formula "1") (term "0"))
         (rule "polySimp_pullOutFactor1" (formula "1") (term "0,0"))
         (rule "add_literals" (formula "1") (term "1,0,0"))
         (rule "times_zero_1" (formula "1") (term "0,0"))
         (rule "add_zero_left" (formula "1") (term "0"))
         (rule "polySimp_invertEq" (formula "1"))
         (rule "polySimp_mulLiterals" (formula "1") (term "0"))
         (rule "times_zero_2" (formula "1") (term "1"))
         (rule "polySimp_elimOne" (formula "1") (term "0"))
         (rule "polyDiv_zero" (formula "1") (term "0"))
         (rule "div_literals" (formula "1") (term "1,0"))
         (rule "inEqSimp_contradEq7" (formula "1") (term "0,0") (ifseqformula "4"))
         (rule "times_zero_1" (formula "1") (term "1,0,0,0,0"))
         (rule "add_zero_right" (formula "1") (term "0,0,0,0"))
         (rule "leq_literals" (formula "1") (term "0,0,0"))
         (rule "concrete_and_2" (formula "1") (term "0,0"))
         (rule "ifthenelse_false" (formula "1") (term "0"))
         (rule "eqClose" (formula "1"))
         (rule "true_left" (formula "1"))
         (rule "allLeft" (formula "7") (inst "t=big"))
         (rule "applyEq" (formula "7") (term "0,0,1,0") (ifseqformula "1"))
         (rule "polySimp_mulComm0" (formula "7") (term "0,1,0"))
         (rule "inEqSimp_contradEq7" (formula "7") (term "0,0,0,0,1") (ifseqformula "3"))
         (rule "times_zero_1" (formula "7") (term "1,0,0,0,0,0,0,1"))
         (rule "add_zero_right" (formula "7") (term "0,0,0,0,0,0,1"))
         (rule "leq_literals" (formula "7") (term "0,0,0,0,0,1"))
         (rule "concrete_and_2" (formula "7") (term "0,0,0,0,1"))
         (rule "ifthenelse_false" (formula "7") (term "0,0,0,1"))
         (rule "times_zero_2" (formula "7") (term "0,0,1"))
         (rule "eqClose" (formula "7") (term "0,1"))
         (rule "concrete_not_1" (formula "7") (term "1"))
         (rule "concrete_or_4" (formula "7"))
         (rule "inEqSimp_contradEq3" (formula "7") (term "1") (ifseqformula "2"))
         (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1"))
         (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,1"))
         (rule "add_literals" (formula "7") (term "1,1,0,0,1"))
         (rule "times_zero_1" (formula "7") (term "1,0,0,1"))
         (rule "add_zero_right" (formula "7") (term "0,0,1"))
         (rule "qeq_literals" (formula "7") (term "0,1"))
         (rule "concrete_and_2" (formula "7") (term "1"))
         (rule "concrete_or_4" (formula "7"))
         (rule "inEqSimp_contradInEq1" (formula "7") (term "0") (ifseqformula "3"))
         (rule "qeq_literals" (formula "7") (term "0,0"))
         (rule "concrete_and_2" (formula "7") (term "0"))
         (rule "concrete_or_2" (formula "7"))
         (rule "notLeft" (formula "7"))
         (rule "polyDiv_pullOut" (formula "11") (term "0,0") (inst "polyDivCoeff=1"))
         (rule "mul_literals" (formula "11") (term "0,1,0,0,2,0,0"))
         (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,2,0,0"))
         (rule "polySimp_pullOutFactor1" (formula "11") (term "0,0,2,0,0"))
         (rule "add_literals" (formula "11") (term "1,0,0,2,0,0"))
         (rule "times_zero_1" (formula "11") (term "0,0,2,0,0"))
         (rule "polySimp_addComm0" (formula "11") (term "2,0,0"))
         (rule "inEqSimp_contradEq7" (formula "11") (term "0,0,0") (ifseqformula "3"))
         (rule "times_zero_1" (formula "11") (term "1,0,0,0,0,0"))
         (rule "add_zero_right" (formula "11") (term "0,0,0,0,0"))
         (rule "leq_literals" (formula "11") (term "0,0,0,0"))
         (rule "concrete_and_2" (formula "11") (term "0,0,0"))
         (rule "ifthenelse_false" (formula "11") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "11") (term "0"))
         (rule "polySimp_rightDist" (formula "11") (term "0"))
         (rule "polySimp_elimOne" (formula "11") (term "0,0"))
         (rule "polySimp_homoEq" (formula "11"))
         (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
         (rule "polySimp_rightDist" (formula "11") (term "1,0"))
         (rule "polySimp_mulComm0" (formula "11") (term "0,1,0"))
         (rule "polySimp_addAssoc" (formula "11") (term "0"))
         (rule "polySimp_pullOutFactor1" (formula "11") (term "0,0"))
         (rule "add_literals" (formula "11") (term "1,0,0"))
         (rule "times_zero_1" (formula "11") (term "0,0"))
         (rule "add_zero_left" (formula "11") (term "0"))
         (rule "polySimp_invertEq" (formula "11"))
         (rule "times_zero_2" (formula "11") (term "1"))
         (rule "polySimp_mulLiterals" (formula "11") (term "0"))
         (rule "polySimp_elimOne" (formula "11") (term "0"))
         (rule "polyDiv_zero" (formula "11") (term "0,0"))
         (rule "div_literals" (formula "11") (term "1,0,0"))
         (rule "inEqSimp_contradEq7" (formula "11") (term "0,0,0") (ifseqformula "3"))
         (rule "times_zero_1" (formula "11") (term "1,0,0,0,0,0"))
         (rule "add_zero_right" (formula "11") (term "0,0,0,0,0"))
         (rule "leq_literals" (formula "11") (term "0,0,0,0"))
         (rule "concrete_and_2" (formula "11") (term "0,0,0"))
         (rule "ifthenelse_false" (formula "11") (term "0,0"))
         (rule "times_zero_2" (formula "11") (term "0"))
         (rule "eqClose" (formula "11"))
         (rule "closeTrue" (formula "11"))
      )
   )
   (branch " Case 2"
      (rule "allRight" (formula "14") (inst "sk=x_2"))
      (rule "orRight" (formula "14"))
      (rule "orRight" (formula "14"))
      (rule "notRight" (formula "15"))
      (rule "orRight" (formula "15"))
      (rule "notRight" (formula "16"))
      (rule "inEqSimp_leqRight" (formula "16"))
      (rule "times_zero_1" (formula "1") (term "1,0,0"))
      (rule "add_literals" (formula "1") (term "0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "1"))
      (rule "mul_literals" (formula "1") (term "1"))
      (rule "allLeft" (formula "13") (inst "t=x_2"))
      (rule "replace_known_left" (formula "13") (term "0,1") (ifseqformula "3"))
      (rule "concrete_not_1" (formula "13") (term "1"))
      (rule "concrete_or_4" (formula "13"))
      (rule "replace_known_left" (formula "13") (term "0,1") (ifseqformula "2"))
      (rule "concrete_not_1" (formula "13") (term "1"))
      (rule "concrete_or_4" (formula "13"))
      (rule "replace_known_right" (formula "13") (term "1") (ifseqformula "18"))
      (rule "concrete_or_4" (formula "13"))
      (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "13"))
      (rule "qeq_literals" (formula "1") (term "0"))
      (rule "concrete_and_2" (formula "1"))
      (rule "closeFalse" (formula "1"))
   )
)
)

}
