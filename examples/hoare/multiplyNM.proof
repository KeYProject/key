\settings {
"#Proof-Settings-Config-File
#Thu Sep 06 16:39:01 CEST 2007
[General]SoundNotification=false
[DecisionProcedure]SmtBenchmarkArchiving=false
[View]FontIndex=3
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_NONE
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_EXPAND
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[SimultaneousUpdateSimplifier]DeleteEffectLessLocations=true
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NONE
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_NONE
[General]SuggestiveVarNames=false
[View]ShowWholeTaclet=false
[General]ProofAssistant=false
[View]MaxTooltipLines=40
[General]DnDDirectionSensitive=true
[SimultaneousUpdateSimplifier]EagerSimplification=true
[General]StupidMode=true
[Strategy]Timeout=-1
[Strategy]MaximumNumberOfAutomaticApplications=1000
[Libraries]Default=acc.key-false, stringRules.key-false, deprecatedRules.key-false
[StrategyProperty]QUERY_OPTIONS_KEY=QUERY_NONE
[Choice]DefaultChoices=transactions-transactions\:transactionsOn , programRules-programRules\:Java , throughout-throughout\:toutOn , transactionAbort-transactionAbort\:abortOn , initialisation-initialisation\:disableStaticInitialisation , intRules-intRules\:arithmeticSemanticsIgnoringOF , assertions-assertions\:on , nullPointerPolicy-nullPointerPolicy\:nullCheck
[DecisionProcedure]SmtZipProblemDir=false
[DecisionProcedureForTest]=SIMPLIFY
[Model]Source=1
[Choice]Choices=transactions-transactions\:transactionsOn-transactions\:transactionsOff , programRules-programRules\:ODL-programRules\:Java , transactionAbort-transactionAbort\:abortOff-transactionAbort\:abortOn , initialisation-initialisation\:disableStaticInitialisation-initialisation\:enableStaticInitialisation , throughout-throughout\:toutOff-throughout\:toutOn , intRules-intRules\:arithmeticSemanticsCheckingOF-intRules\:javaSemantics-intRules\:arithmeticSemanticsIgnoringOF , assertions-assertions\:safe-assertions\:off-assertions\:on , nullPointerPolicy-nullPointerPolicy\:noNullCheck-nullPointerPolicy\:nullCheck
[DecisionProcedure]SmtUseQuantifiers=true
[View]HideIntermediateProofsteps=false
[DecisionProcedure]=SIMPLIFY
[General]OuterRenaming=false
[Strategy]ActiveStrategy=HoareStrategy
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_NORMAL
"
}

null\problem {
{m:=mv ||
  n:=nv}
  \[{
      res=0;
      while ( n>0 ) {
        res=res+m;
        n=n-1;
      }
    }\] res = nv * mv

}

\proof {
(keyLog "0" (keyUser "bubel" ) (keyVersion "hoareWithUpdates.5"))
(keyLog "1" (keyUser "bubel" ) (keyVersion "hoareWithUpdates.5"))

(branch "dummy ID"
(rule "assignment" (formula "2") (userinteraction))
(builtin "Update Simplification" (formula "2"))
(builtin "Loop Invariant" (formula "2") (hoareLoopInvariant "and(and(equals(res,mul(sub(nv,n),m)),geq(n,Z(0(#)))),equals(m,mv))"))
(branch " Invariant Initially Valid"
   (builtin "Update Simplification" (formula "2"))
   (rule "and_left" (formula "1"))
   (rule "and_left" (formula "1"))
   (rule "del_cast_1" (formula "4") (term "0,0,0"))
   (rule "del_cast_1" (formula "4") (term "1,0,1,0,0"))
   (rule "del_cast_1" (formula "4") (term "1,1,0,0"))
   (rule "del_cast_1" (formula "4") (term "0,1,0"))
   (rule "del_cast_1" (formula "4") (term "0,1"))
   (rule "close_eq" (formula "4") (term "1"))
   (rule "concrete_and_3" (formula "4"))
   (rule "commute_eq" (formula "3"))
   (rule "commute_eq" (formula "2"))
   (rule "commute_eq" (formula "4") (term "0"))
   (rule "replace_known_left" (formula "4") (term "1") (ifseqformula "1"))
   (rule "concrete_and_3" (formula "4"))
   (rule "polySimp_elimSub" (formula "4") (term "0,0"))
   (rule "polySimp_pullOutFactor1" (formula "4") (term "0,0"))
   (rule "add_literals" (formula "4") (term "1,0,0"))
   (rule "times_zero_1" (formula "4") (term "0,0"))
   (rule "times_zero_2" (formula "4") (term "0"))
   (rule "close_eq" (formula "4"))
   (rule "close_by_true" (formula "4"))
)
(branch " Preserves Invariant"
   (rule "assignment" (formula "2") (userinteraction))
   (rule "assignment" (formula "2") (userinteraction))
   (builtin "Update Simplification" (formula "2"))
   (rule "and_left" (formula "1"))
   (rule "and_left" (formula "1"))
   (rule "and_left" (formula "1"))
   (rule "commute_eq" (formula "5") (term "1,0,2"))
   (rule "commute_eq" (formula "5") (term "0,0,0,2"))
   (rule "translateJavaAddInt" (formula "5") (term "1"))
   (rule "translateJavaSubInt" (formula "5") (term "0"))
   (rule "commute_eq" (formula "3"))
   (rule "commute_eq" (formula "1"))
   (rule "polySimp_elimSub" (formula "5") (term "0,0,0,0,0,2"))
   (rule "polySimp_elimSub" (formula "5") (term "0"))
   (rule "mul_literals" (formula "5") (term "1,0"))
   (rule "polySimp_elimSub" (formula "1") (term "0,0"))
   (rule "polySimp_mulComm0" (formula "5") (term "0,0,0,0,2"))
   (rule "polySimp_mulComm0" (formula "1") (term "0"))
   (rule "inEqSimp_gtToGeq" (formula "4"))
   (rule "times_zero_1" (formula "4") (term "1,0,0"))
   (rule "add_zero_right" (formula "4") (term "0,0"))
   (rule "polySimp_addComm0" (formula "5") (term "1"))
   (rule "polySimp_addComm0" (formula "5") (term "0"))
   (rule "polySimp_addComm0" (formula "5") (term "1,0,0,0,0,2"))
   (rule "polySimp_addComm0" (formula "1") (term "1,0"))
   (rule "polySimp_rightDist" (formula "5") (term "0,0,0,0,2"))
   (rule "polySimp_homoEq" (formula "5") (term "0,0,0,2"))
   (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,0,2"))
   (rule "polySimp_mulAssoc" (formula "5") (term "0,1,1,0,0,0,0,2"))
   (rule "polySimp_mulComm0" (formula "5") (term "0,0,1,1,0,0,0,0,2"))
   (rule "polySimp_rightDist" (formula "1") (term "0"))
   (rule "polySimp_homoEq" (formula "1"))
   (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
   (rule "polySimp_mulAssoc" (formula "1") (term "0,1,1,0"))
   (rule "polySimp_mulComm0" (formula "1") (term "0,0,1,1,0"))
   (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0,0,2"))
   (rule "polySimp_mulAssoc" (formula "5") (term "0,1,0,0,0,0,2"))
   (rule "polySimp_mulComm0" (formula "5") (term "0,0,1,0,0,0,0,2"))
   (rule "polySimp_mulLiterals" (formula "5") (term "0,1,0,0,0,0,2"))
   (rule "polySimp_elimOne" (formula "5") (term "0,1,0,0,0,0,2"))
   (rule "polySimp_rightDist" (formula "1") (term "1,0"))
   (rule "polySimp_mulAssoc" (formula "1") (term "0,1,0"))
   (rule "polySimp_mulComm0" (formula "1") (term "0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0"))
   (rule "polySimp_elimOne" (formula "1") (term "0,1,0"))
   (rule "polySimp_addAssoc" (formula "5") (term "0,0,0,0,2"))
   (rule "polySimp_addAssoc" (formula "1") (term "0"))
   (rule "polySimp_sepNegMonomial" (formula "5") (term "0,0,0,2"))
   (rule "polySimp_mulLiterals" (formula "5") (term "0,0,0,0,2"))
   (rule "polySimp_elimOne" (formula "5") (term "0,0,0,0,2"))
   (rule "polySimp_sepNegMonomial" (formula "1"))
   (rule "polySimp_mulLiterals" (formula "1") (term "0"))
   (rule "polySimp_elimOne" (formula "1") (term "0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "4"))
   (rule "mul_literals" (formula "4") (term "1"))
   (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "4"))
   (rule "leq_literals" (formula "2") (term "0"))
   (rule "concrete_or_1" (formula "2"))
   (rule "true_left" (formula "2"))
   (rule "exit" (formula "4") (userinteraction))
   (builtin "Update Simplification" (formula "4"))
   (rule "del_cast_1" (formula "4") (term "0,1,0,0"))
   (rule "del_cast_1" (formula "4") (term "0,1,1,0,0"))
   (rule "del_cast_1" (formula "4") (term "0,1,0"))
   (rule "replace_known_left" (formula "4") (term "1") (ifseqformula "2"))
   (rule "concrete_and_3" (formula "4"))
   (rule "polySimp_mulComm0" (formula "4") (term "1,1,0"))
   (rule "polySimp_rightDist" (formula "4") (term "1,1,0"))
   (rule "polySimp_addAssoc" (formula "4") (term "1,0"))
   (rule "polySimp_addComm1" (formula "4") (term "0,1,0"))
   (rule "polySimp_pullOutFactor1" (formula "4") (term "0,0,1,0"))
   (rule "add_literals" (formula "4") (term "1,0,0,1,0"))
   (rule "times_zero_1" (formula "4") (term "0,0,1,0"))
   (rule "add_zero_left" (formula "4") (term "0,1,0"))
   (rule "replace_known_left" (formula "4") (term "0") (ifseqformula "1"))
   (rule "concrete_and_1" (formula "4"))
   (rule "inEqSimp_geqRight" (formula "4"))
   (rule "times_zero_1" (formula "1") (term "1,0,0"))
   (rule "add_zero_right" (formula "1") (term "0,0"))
   (rule "polySimp_addAssoc" (formula "1") (term "0"))
   (rule "add_literals" (formula "1") (term "0,0"))
   (rule "add_zero_left" (formula "1") (term "0"))
   (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "4"))
   (rule "qeq_literals" (formula "1") (term "0"))
   (rule "concrete_and_2" (formula "1"))
   (rule "close_by_false" (formula "1"))
)
(branch " Use Invariant"
   (rule "commute_eq" (formula "2") (term "0"))
   (rule "and_left" (formula "1"))
   (rule "and_left" (formula "1"))
   (rule "not_left" (formula "3"))
   (rule "and_left" (formula "1"))
   (rule "commute_eq" (formula "3"))
   (rule "commute_eq" (formula "1"))
   (rule "polySimp_elimSub" (formula "1") (term "0,0"))
   (rule "polySimp_mulComm0" (formula "1") (term "0"))
   (rule "inEqSimp_gtRight" (formula "4"))
   (rule "times_zero_1" (formula "1") (term "0,0"))
   (rule "add_zero_left" (formula "1") (term "0"))
   (rule "polySimp_addComm0" (formula "2") (term "1,0"))
   (rule "polySimp_rightDist" (formula "2") (term "0"))
   (rule "polySimp_homoEq" (formula "2"))
   (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
   (rule "polySimp_mulAssoc" (formula "2") (term "0,1,1,0"))
   (rule "polySimp_mulComm0" (formula "2") (term "0,0,1,1,0"))
   (rule "polySimp_rightDist" (formula "2") (term "1,0"))
   (rule "polySimp_mulAssoc" (formula "2") (term "0,1,0"))
   (rule "polySimp_mulComm0" (formula "2") (term "0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "2") (term "0,1,0"))
   (rule "polySimp_elimOne" (formula "2") (term "0,1,0"))
   (rule "polySimp_addAssoc" (formula "2") (term "0"))
   (rule "polySimp_sepNegMonomial" (formula "2"))
   (rule "polySimp_mulLiterals" (formula "2") (term "0"))
   (rule "polySimp_elimOne" (formula "2") (term "0"))
   (rule "inEqSimp_antiSymm" (formula "3") (ifseqformula "1"))
   (rule "apply_eq" (formula "4") (term "0") (ifseqformula "3"))
   (rule "qeq_literals" (formula "4"))
   (rule "true_left" (formula "4"))
   (rule "apply_eq" (formula "1") (term "0") (ifseqformula "3"))
   (rule "leq_literals" (formula "1"))
   (rule "true_left" (formula "1"))
   (rule "apply_eq" (formula "1") (term "0,1,1") (ifseqformula "2"))
   (rule "times_zero_2" (formula "1") (term "1,1"))
   (rule "add_zero_right" (formula "1") (term "1"))
   (rule "exit" (formula "4") (userinteraction))
   (rule "apply_eq" (formula "4") (term "1,0") (ifseqformula "3"))
   (rule "close_goal" (formula "4") (ifseqformula "1"))
)
)

}
