<?xml version="1.0"?>
<project name="key.nui" default="deploy" basedir=".">

	<!-- Properties definition (global variables for paths) -->
	<property name="src.dir" value="${basedir}/src" />
	<property name="key.dir" value="${basedir}/../" />
	<property name="build.dir" value="${basedir}/bin" />
	<property name="dist.dir" value="${basedir}/../deployment" />
	<property name="NUIdefault" value="${build.dir}/de/uka/ilkd/key/nui/NUIdefault.fxml" />
	<property name="components" value="${basedir}/resources/de/uka/ilkd/key/nui/components/" />
	<tstamp>
		<format property="time.stamp" pattern="yyyyMMdd-HHmmss" />
	</tstamp>

	<!-- Definition of classpath -->
	<path id="key.nui.class.path">
		<pathelement path="${basedir}/../key.util/bin" />
		<pathelement path="${basedir}/../key.core/bin" />
		<pathelement path="${basedir}/../key.core.testgen/bin" />
		<pathelement path="${basedir}/../key.ui/bin" />
		<pathelement location="${basedir}/../key.core/lib/antlr.jar" />
		<pathelement location="${basedir}/../key.core/lib/recoderKey.jar" />
		<pathelement location="${basedir}/ant-lib/junit/junit-4.12.jar" />
		<pathelement location="${basedir}/testfx-4/testfx-core-4.0.2-SNAPSHOT.jar" />
		<pathelement location="${basedir}/testfx-4/testfx-legacy-4.0.2-SNAPSHOT.jar" />
		<pathelement location="${basedir}/testfx-4/testfx-junit-4.0.2-SNAPSHOT.jar" />
		<pathelement location="${basedir}/testfx-4/guava-18.0.jar" />
		<pathelement location="${basedir}/ant-lib/junit/hamcrest-core-1.3.jar" />
	</path>

	<path id="key.nui.run.class.path">
		<pathelement path="${basedir}/../key.nui/bin" />
		<path refid="key.nui.class.path" />
	</path>

	<!-- Set properties ============== -->
	<!-- Sets the property taclet.match to ${taclet.match} if it is not set yet, else it is set to 'vm' -->
	<condition property="taclet.match" value="${taclet.match}" else="vm">
		<isset property="taclet.match" />
	</condition>

	<condition property="tacletindex.threading.enabled" value="${tacletindex.threading.enabled}" else="false">
		<isset property="tacletindex.threading.enabled" />
	</condition>
	<!-- ============================= -->

	<!-- Includes ANT-CONTRIB library -->
	<taskdef resource="net/sf/antcontrib/antlib.xml">
		<classpath>
			<fileset dir="${basedir}/ant-lib/" />
		</classpath>
	</taskdef>

	<!-- Reporting -->
	<taskdef name="findbugs" classname="edu.umd.cs.findbugs.anttask.FindBugsTask">
		<classpath>
			<fileset dir="${basedir}/ant-lib/findbugs" />
		</classpath>
	</taskdef>

	<taskdef resource="com/puppycrawl/tools/checkstyle/ant/checkstyle-ant-task.properties" classpath="${basedir}/ant-lib/checkstyle/checkstyle-6.14.1-all.jar" />

	<path id="pmd.classpath">
		<pathelement location="${build.dir}" />
		<fileset dir="${basedir}/ant-lib/pmd/">
			<include name="*.jar" />
		</fileset>
	</path>

	<taskdef name="pmd" classname="net.sourceforge.pmd.ant.PMDTask" classpathref="pmd.classpath" />


	<!-- Definition of target START -->
	<target name="start" depends="compile" description="Starts the KeY NUI.">
		<java classname="de.uka.ilkd.key.nui.NUI" classpathref="key.nui.run.class.path" fork="true">
			<jvmarg value="-Xmx2048m" />
			<jvmarg value="-XX:MaxPermSize=256m" />
			<jvmarg value="-ea" />
			<jvmarg value="-Dtaclet.match=${taclet.match}" />
			<jvmarg value="-Dtacletindex.threading.enabled=${tacletindex.threading.enabled}" />
		</java>
	</target>

	<!-- Definition of target DEPLOY -->
	<target name="deploy" depends="compile" description="Create a JAR archive in the destination directory.">
		<mkdir dir="${dist.dir}" />
		<mkdir dir="${dist.dir}/components" />
		<jar destfile="${dist.dir}/components/key.nui.jar" basedir="${build.dir}" manifest="${basedir}/META-INF/MANIFEST.MF" />
	</target>

	<!-- Definition of target DEPLOYALL -->
	<target name="deployAll">
		<!-- Create Jar archives -->
		<ant antfile="${key.dir}/key.util/build.xml" target="deploy" dir="${key.dir}/key.util" inheritall="false" />
		<ant antfile="${key.dir}/key.core/build.xml" target="deploy" dir="${key.dir}/key.core" inheritall="false" />
		<ant antfile="${key.dir}/key.core.testgen/build.xml" target="deploy" dir="${key.dir}/key.core.testgen" inheritall="false" />
		<ant antfile="${key.dir}/key.ui/build.xml" target="deploy" dir="${key.dir}/key.ui" inheritall="false" />
		<ant antfile="${key.dir}/key.nui/build.xml" target="deploy" dir="${key.dir}/key.nui" inheritall="false" />
		<ant antfile="${key.dir}/key.core.symbolic_execution/build.xml" target="deploy" dir="${key.dir}/key.core.symbolic_execution" inheritall="false" />
		<ant antfile="${key.dir}/key.core.proof_references/build.xml" target="deploy" dir="${key.dir}/key.core.proof_references" inheritall="false" />
		<ant antfile="${key.dir}/key.core.example/build.xml" target="deploy" dir="${key.dir}/key.core.example" inheritall="false" />
		<ant antfile="${key.dir}/key.removegenerics/build.xml" target="deploy" dir="${key.dir}/key.removegenerics" inheritall="false" />
		<ant antfile="${key.dir}/key.core.symbolic_execution.example/build.xml" target="deploy" dir="${key.dir}/key.core.symbolic_execution.example" inheritall="false" />
		<!-- Deploy license -->
		<copy todir="${key.dir}/deployment">
			<fileset file="${key.dir}/LICENSE.TXT" />
		</copy>
		<!-- Deploy KeY.jar -->
		<copy todir="${basedir}/KeY.jar">
			<fileset dir="${basedir}/KeY.jar-template" />
			<fileset dir="${key.dir}/key.util/bin/" />
			<fileset dir="${key.dir}/key.core/bin/" />
			<fileset dir="${key.dir}/key.nui/bin/" />
			<fileset dir="${key.dir}/key.core.symbolic_execution/bin/" />
			<fileset dir="${key.dir}/key.core.proof_references/bin/" />
			<fileset dir="${key.dir}/key.core.example/bin/" />
			<fileset dir="${key.dir}/key.removegenerics/bin/" />
			<fileset dir="${key.dir}/key.core.symbolic_execution.example/bin/" />
		</copy>
		<copy todir="${basedir}/KeY.jar" file="${key.dir}/key.ui/resources/de/uka/ilkd/key/gui/images/key-color.gif" />
		<jar destfile="${key.dir}/deployment/KeY.jar" basedir="${basedir}/KeY.jar" manifest="${basedir}/KeY.jar-template/META-INF/MANIFEST.MF" />
		<delete dir="${basedir}/KeY.jar" />
	</target>

	<!-- Definition of target COMPILE -->
	<target name="compile" description="Compile all source files into the build directory.">
		<mkdir dir="${build.dir}" />
		<javac srcdir="${src.dir}" destdir="${build.dir}" includeantruntime="false" source="1.8" target="1.8" deprecation="off" debug="on" depend="${build.depend}" optimize="off">
			<!-- <exclude name="**/guitests/*.java" /> -->
			<!-- GUI tests are not compiled by ANT Buildfile-->
			<classpath refid="key.nui.class.path" />
		</javac>
	</target>

	<!-- Definition of target COPY -->
	<target name="copy" description="Copy all resources into the binary directory.">
		<copy todir="${build.dir}" overwrite="true">
			<fileset dir="${basedir}/resources/" />
		</copy>
	</target>

	<!-- Generate Reports -->

	<!-- Definition of target FINDBUGS -->
	<target name="findbugs" description="Generates FindBugs Report.">
		<findbugs home="${basedir}/ant-lib/findbugs" output="xml" outputFile="${basedir}/reports/findBugs.xml">
			<class location="${basedir}/bin" />
			<auxClasspath path="${basedir}/testfx-4/" />
			<auxClasspath path="${basedir}/ant-lib/" />
		</findbugs>
		<xslt in="${basedir}/reports/findBugs.xml" style="${basedir}/reports-templates/findbugs/plain.xsl" out="${basedir}/reports/findBugs.html" />
	</target>

	<!-- Definition of target CHECKSTYLE -->
	<target name="checkstyle" description="Generates Checkstyle Report.">
		<checkstyle config="${basedir}/reports-config/checkstyle/checkstyle_bp_key_160130.xml" classpath="${basedir}/ant-lib/checkstyle/checkstyle-6.14.1-all.jar">
			<fileset dir="${basedir}/src" includes="**/*.java" />
			<formatter type="xml" tofile="${basedir}/reports/checkstyle.xml" />
		</checkstyle>
		<xslt in="${basedir}/reports/checkstyle.xml" out="${basedir}/reports/checkstyle.html" style="${basedir}/reports-templates/checkstyle/checkstyle-noframes.xsl" />
	</target>

	<!-- Definition of target PMD -->
	<target name="pmd" description="Generates PMD Report.">
		<pmd rulesetfiles="${basedir}/reports-config/pmd/pmd_bp_key_163001.xml" shortFilenames="true">
			<sourceLanguage name="java" version="1.8" />
			<!-- <ruleset>rulesets/java/design.xml</ruleset>
			<ruleset>java-basic</ruleset> -->
			<formatter type="xml" toFile="${basedir}/reports/pmd.xml" toConsole="true">
				<param name="linkPrefix" value="http://pmd.sourceforge.net/xref/" />
			</formatter>
			<fileset dir="${basedir}/src/">
				<include name="**/*.java" />
			</fileset>
		</pmd>
		<xslt in="${basedir}/reports/pmd.xml" style="${basedir}/reports-templates/pmd/pmd-nicerhtml.xsl" out="${basedir}/reports/pmd.html" />
	</target>

	<!-- Definition of target JUnit -->
	<target name="runTests" description="Run JUnit Tests">
		<junit printsummary="withOutAndErr" haltonfailure="no" fork="yes" forkMode="once" haltonerror="no" enableTestListenerEvents="false" showoutput="yes" dir="${basedir}">
			<classpath refid="key.nui.class.path" />
			<classpath>
				<pathelement location="${build.dir}" />
			</classpath>
			<formatter type="xml" />
			<formatter type="plain" />
			<test name="de.uka.ilkd.key.nui.tests.junittests.JUnitTestSuite" todir="${basedir}/reports" />
			<!--<batchtest todir="${basedir}/reports">
				<fileset dir="${basedir}/src">
					<include name="**/J*Test.java" />
				</fileset>
			</batchtest> -->
		</junit>
	</target>

	<!-- Definition of target CLEAN -->
	<target name="clean" description="Deletes all generated files and folders.">
		<delete failonerror="false" includeemptydirs="true">
			<fileset dir="${build.dir}" includes="**/*" />
			<fileset file="${dist.dir}/components/key.nui.jar" />
		</delete>
	</target>
</project>
