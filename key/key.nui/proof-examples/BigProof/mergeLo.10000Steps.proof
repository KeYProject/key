\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Thu Dec 10 15:13:44 CET 2015
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]useUninterpretedMultiplication=true
[SMTSettings]SelectedTaclets=\\#begboolean_equal_2\\#end,\\#begboolean_not_equal_1\\#end,\\#begboolean_not_equal_2\\#end,\\#begtrue_to_not_false\\#end,\\#begfalse_to_not_true\\#end,\\#begboolean_true_commute\\#end,\\#begboolean_false_commute\\#end,\\#begapply_eq_boolean\\#end,\\#begapply_eq_boolean_2\\#end,\\#begapply_eq_boolean_rigid\\#end,\\#begapply_eq_boolean_rigid_2\\#end,\\#begexpand_inByte\\#end,\\#begexpand_inChar\\#end,\\#begexpand_inShort\\#end,\\#begexpand_inInt\\#end,\\#begexpand_inLong\\#end,\\#begreplace_byte_MAX\\#end,\\#begreplace_byte_MIN\\#end,\\#begreplace_char_MAX\\#end,\\#begreplace_char_MIN\\#end,\\#begreplace_short_MAX\\#end,\\#begreplace_short_MIN\\#end,\\#begreplace_int_MAX\\#end,\\#begreplace_int_MIN\\#end,\\#begreplace_long_MAX\\#end,\\#begreplace_long_MIN\\#end,\\#begreplace_byte_RANGE\\#end,\\#begreplace_byte_HALFRANGE\\#end,\\#begreplace_short_RANGE\\#end,\\#begreplace_short_HALFRANGE\\#end,\\#begreplace_char_RANGE\\#end,\\#begreplace_int_RANGE\\#end,\\#begreplace_int_HALFRANGE\\#end,\\#begreplace_long_RANGE\\#end,\\#begreplace_long_HALFRANGE\\#end,\\#begtranslateJavaUnaryMinusInt\\#end,\\#begtranslateJavaUnaryMinusLong\\#end,\\#begtranslateJavaBitwiseNegation\\#end,\\#begtranslateJavaAddInt\\#end,\\#begtranslateJavaAddLong\\#end,\\#begtranslateJavaSubInt\\#end,\\#begtranslateJavaSubLong\\#end,\\#begtranslateJavaMulInt\\#end,\\#begtranslateJavaMulLong\\#end,\\#begtranslateJavaMod\\#end,\\#begtranslateJavaDivInt\\#end,\\#begtranslateJavaDivLong\\#end,\\#begtranslateJavaCastByte\\#end,\\#begtranslateJavaCastShort\\#end,\\#begtranslateJavaCastInt\\#end,\\#begtranslateJavaCastLong\\#end,\\#begtranslateJavaCastChar\\#end,\\#begtranslateJavaShiftRightInt\\#end,\\#begtranslateJavaShiftRightLong\\#end,\\#begtranslateJavaShiftLeftInt\\#end,\\#begtranslateJavaShiftLeftLong\\#end,\\#begtranslateJavaUnsignedShiftRightInt\\#end,\\#begtranslateJavaUnsignedShiftRightLong\\#end,\\#begtranslateJavaBitwiseOrInt\\#end,\\#begtranslateJavaBitwiseOrLong\\#end,\\#begtranslateJavaBitwiseAndInt\\#end,\\#begtranslateJavaBitwiseAndLong\\#end,\\#begtranslateJavaBitwiseXOrInt\\#end,\\#begtranslateJavaBitwiseXOrLong\\#end,\\#begselectOfStore\\#end,\\#begselectOfCreate\\#end,\\#begselectOfAnon\\#end,\\#begselectOfMemset\\#end,\\#begonlyCreatedObjectsAreReferenced\\#end,\\#begonlyCreatedObjectsAreInLocSets\\#end,\\#begonlyCreatedObjectsAreInLocSetsEQ\\#end,\\#begarrayLengthNotNegative\\#end,\\#begwellFormedStoreObject\\#end,\\#begwellFormedStoreLocSet\\#end,\\#begwellFormedStorePrimitive\\#end,\\#begwellFormedCreate\\#end,\\#begwellFormedAnon\\#end,\\#begwellFormedMemsetObject\\#end,\\#begwellFormedMemsetLocSet\\#end,\\#begwellFormedMemsetPrimitive\\#end,\\#begselectOfStoreEQ\\#end,\\#begselectOfCreateEQ\\#end,\\#begselectOfAnonEQ\\#end,\\#begselectOfMemsetEQ\\#end,\\#begmemsetEmpty\\#end,\\#begselectCreatedOfAnonEQ\\#end,\\#begwellFormedStoreObjectEQ\\#end,\\#begwellFormedStoreLocSetEQ\\#end,\\#begwellFormedStorePrimitiveEQ\\#end,\\#begwellFormedAnonEQ\\#end,\\#begwellFormedMemsetObjectEQ\\#end,\\#begwellFormedMemsetPrimitiveEQ\\#end
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[StrategyProperty]DEP_OPTIONS_KEY=DEP_OFF
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_DELAYED
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[Strategy]Timeout=-1
[Strategy]MaximumNumberOfAutomaticApplications=10000
[SMTSettings]integersMaximum=2147483645
[Choice]DefaultChoices=assertions-assertions\\:off , intRules-intRules\\:javaSemantics , initialisation-initialisation\\:disableStaticInitialisation , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:ban , JavaCard-JavaCard\\:off , Strings-Strings\\:on , modelFields-modelFields\\:treatAsAxiom , bigint-bigint\\:on , sequences-sequences\\:on , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off , permissions-permissions\\:off , moreSeqRules-moreSeqRules\\:off , joinGenerateIsWeakeningGoal-joinGenerateIsWeakeningGoal\\:off
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]maxGenericSorts=2
[SMTSettings]integersMinimum=-2147483645
[SMTSettings]invariantForall=false
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
"
}

\bootclasspath "jre";

\javaSource "src";

\include "symbols.key",  "bitwise_local.key";

\proofObligation "#Proof Obligation Settings
#Thu Dec 10 15:13:44 CET 2015
name=java.util.TimSort[java.util.TimSort\\:\\:mergeLo(int,int,int,int)].JML normal_behavior operation contract.0
contract=java.util.TimSort[java.util.TimSort\\:\\:mergeLo(int,int,int,int)].JML normal_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "dscheurer" ) (keyVersion "95467a458722ff3a384af8dde73de2b9f173c436"))

(autoModeTime "21403871159")

(branch "dummy ID"
(rule "false_to_not_true" (formula "1") (term "0,1,0,0,0,0,1,1") (newnames "base1,len1,base2,len2,self,exc,heapAtPre,o,f"))
(rule "expand_inInt" (formula "1") (term "0,0,0,1,0,0,0"))
(rule "expand_inInt" (formula "1") (term "1,0,0,1,0,0,0"))
(rule "expand_inInt" (formula "1") (term "1,0,1,0,0,0"))
(rule "expand_inInt" (formula "1") (term "1,1,0,0,0"))
(rule "replace_int_MIN" (formula "1") (term "0,1,0,0,0,1,0,0,0"))
(rule "replace_int_MAX" (formula "1") (term "1,0,0,0,0,1,0,0,0"))
(rule "replace_int_MAX" (formula "1") (term "1,0,1,0,0,1,0,0,0"))
(rule "replace_int_MIN" (formula "1") (term "0,1,1,0,0,1,0,0,0"))
(rule "replace_int_MIN" (formula "1") (term "0,1,1,0,1,0,0,0"))
(rule "replace_int_MAX" (formula "1") (term "1,0,1,0,1,0,0,0"))
(rule "replace_int_MIN" (formula "1") (term "0,1,1,1,0,0,0"))
(rule "replace_int_MAX" (formula "1") (term "1,0,1,1,0,0,0"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "4"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "7"))
(rule "andLeft" (formula "6"))
(rule "andLeft" (formula "4"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "9"))
(rule "andLeft" (formula "5"))
(rule "andLeft" (formula "4"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "12"))
(rule "andLeft" (formula "6"))
(rule "andLeft" (formula "5"))
(rule "notLeft" (formula "2"))
(rule "eqSymm" (formula "21") (term "0,0,0,0,0,0,1"))
(rule "eqSymm" (formula "21") (term "1,0,0,1,0,1"))
(rule "polySimp_elimSub" (formula "21") (term "2,1,2,0,0,0,0,1,0,1"))
(rule "mul_literals" (formula "21") (term "1,2,1,2,0,0,0,0,1,0,1"))
(rule "polySimp_elimSub" (formula "21") (term "2,1,0,0,2,0,0,0,0,1,0,1"))
(rule "mul_literals" (formula "21") (term "1,2,1,0,0,2,0,0,0,0,1,0,1"))
(rule "polySimp_homoEq" (formula "17"))
(rule "polySimp_mulComm0" (formula "17") (term "1,0"))
(rule "polySimp_addComm0" (formula "21") (term "2,1,2,0,0,0,0,1,0,1"))
(rule "polySimp_addComm0" (formula "21") (term "2,1,0,0,2,0,0,0,0,1,0,1"))
(rule "polySimp_rightDist" (formula "17") (term "1,0"))
(rule "polySimp_mulComm0" (formula "17") (term "0,1,0"))
(rule "polySimp_addAssoc" (formula "17") (term "0"))
(rule "polySimp_addComm0" (formula "17") (term "0,0"))
(rule "inEqSimp_gtToGeq" (formula "15"))
(rule "times_zero_1" (formula "15") (term "1,0,0"))
(rule "add_zero_right" (formula "15") (term "0,0"))
(rule "inEqSimp_gtToGeq" (formula "14"))
(rule "times_zero_1" (formula "14") (term "1,0,0"))
(rule "add_zero_right" (formula "14") (term "0,0"))
(rule "inEqSimp_commuteLeq" (formula "18"))
(rule "inEqSimp_commuteLeq" (formula "16"))
(rule "inEqSimp_commuteLeq" (formula "11"))
(rule "inEqSimp_commuteLeq" (formula "9"))
(rule "inEqSimp_commuteLeq" (formula "7"))
(rule "inEqSimp_commuteLeq" (formula "5"))
(rule "assignment" (formula "21") (term "1"))
(rule "sequentialToParallel2" (formula "21"))
(rule "simplifyUpdate3" (formula "21") (term "1,0"))
(rule "polySimp_sepNegMonomial" (formula "17"))
(rule "polySimp_mulLiterals" (formula "17") (term "0"))
(rule "polySimp_elimOne" (formula "17") (term "0"))
(rule "applyEq" (formula "14") (term "1,0") (ifseqformula "17"))
(rule "polySimp_addAssoc" (formula "14") (term "0"))
(rule "applyEq" (formula "7") (term "0") (ifseqformula "17"))
(rule "inEqSimp_homoInEq1" (formula "7"))
(rule "polySimp_mulComm0" (formula "7") (term "1,0"))
(rule "polySimp_rightDist" (formula "7") (term "1,0"))
(rule "polySimp_mulAssoc" (formula "7") (term "0,1,0"))
(rule "polySimp_mulComm0" (formula "7") (term "0,0,1,0"))
(rule "polySimp_mulLiterals" (formula "7") (term "0,1,0"))
(rule "polySimp_elimOne" (formula "7") (term "0,1,0"))
(rule "polySimp_addAssoc" (formula "7") (term "0"))
(rule "applyEq" (formula "16") (term "1") (ifseqformula "17"))
(rule "applyEq" (formula "21") (term "0,1,0,0,0,0") (ifseqformula "17"))
(rule "applyEq" (formula "6") (term "0") (ifseqformula "17"))
(rule "inEqSimp_homoInEq0" (formula "6"))
(rule "polySimp_mulComm0" (formula "6") (term "1,0"))
(rule "polySimp_rightDist" (formula "6") (term "1,0"))
(rule "polySimp_mulAssoc" (formula "6") (term "0,1,0"))
(rule "polySimp_mulComm0" (formula "6") (term "0,0,1,0"))
(rule "polySimp_mulLiterals" (formula "6") (term "0,1,0"))
(rule "polySimp_elimOne" (formula "6") (term "0,1,0"))
(rule "polySimp_addAssoc" (formula "6") (term "0"))
(rule "inEqSimp_sepPosMonomial1" (formula "15"))
(rule "mul_literals" (formula "15") (term "1"))
(rule "inEqSimp_sepPosMonomial1" (formula "14"))
(rule "polySimp_mulComm0" (formula "14") (term "1"))
(rule "polySimp_rightDist" (formula "14") (term "1"))
(rule "mul_literals" (formula "14") (term "0,1"))
(rule "polySimp_mulLiterals" (formula "14") (term "1,1"))
(rule "polySimp_elimOne" (formula "14") (term "1,1"))
(rule "inEqSimp_sepNegMonomial0" (formula "7"))
(rule "polySimp_mulLiterals" (formula "7") (term "0"))
(rule "polySimp_elimOne" (formula "7") (term "0"))
(rule "inEqSimp_sepNegMonomial1" (formula "6"))
(rule "polySimp_mulLiterals" (formula "6") (term "0"))
(rule "polySimp_elimOne" (formula "6") (term "0"))
(rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "14"))
(rule "inEqSimp_homoInEq0" (formula "7") (term "0"))
(rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
(rule "polySimp_rightDist" (formula "7") (term "1,0,0"))
(rule "mul_literals" (formula "7") (term "0,1,0,0"))
(rule "polySimp_addAssoc" (formula "7") (term "0,0"))
(rule "polySimp_addComm1" (formula "7") (term "0,0,0"))
(rule "add_literals" (formula "7") (term "0,0,0,0"))
(rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0"))
(rule "add_literals" (formula "7") (term "1,1,0,0"))
(rule "times_zero_1" (formula "7") (term "1,0,0"))
(rule "add_zero_right" (formula "7") (term "0,0"))
(rule "qeq_literals" (formula "7") (term "0"))
(rule "concrete_or_1" (formula "7"))
(rule "true_left" (formula "7"))
(rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "14"))
(rule "leq_literals" (formula "10") (term "0"))
(rule "concrete_or_1" (formula "10"))
(rule "true_left" (formula "10"))
(rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "11"))
(rule "leq_literals" (formula "5") (term "0"))
(rule "concrete_or_1" (formula "5"))
(rule "true_left" (formula "5"))
(rule "elementOfUnion" (formula "18") (term "0,0,0,0,1,0,1"))
(rule "elementOfUnion" (formula "18") (term "0,0,0,0,0,1,0,1"))
(rule "elementOfSingleton" (formula "18") (term "1,0,0,0,0,0,1,0,1"))
(rule "elementOfArrayRange" (formula "18") (term "1,0,0,0,0,1,0,1") (inst "iv=iv"))
(rule "inEqSimp_commuteLeq" (formula "18") (term "1,0,0,1,1,0,0,0,0,1,0,1"))
(rule "elementOfUnion" (formula "18") (term "0,0,0,0,0,0,1,0,1"))
(rule "elementOfSingleton" (formula "18") (term "0,0,0,0,0,0,0,1,0,1"))
(rule "elementOfArrayRange" (formula "18") (term "1,0,0,0,0,0,0,1,0,1") (inst "iv=iv"))
(rule "inEqSimp_commuteLeq" (formula "18") (term "1,0,0,1,1,0,0,0,0,0,0,1,0,1"))
(rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "6"))
(rule "polySimp_rightDist" (formula "11") (term "0,0"))
(rule "mul_literals" (formula "11") (term "0,0,0"))
(rule "polySimp_addComm1" (formula "11") (term "0"))
(rule "add_literals" (formula "11") (term "0,0"))
(rule "inEqSimp_sepNegMonomial1" (formula "11"))
(rule "polySimp_mulLiterals" (formula "11") (term "0"))
(rule "polySimp_elimOne" (formula "11") (term "0"))
(rule "inEqSimp_subsumption0" (formula "4") (ifseqformula "11"))
(rule "leq_literals" (formula "4") (term "0"))
(rule "concrete_or_1" (formula "4"))
(rule "true_left" (formula "4"))
(rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "4"))
(rule "mul_literals" (formula "6") (term "0,0"))
(rule "polySimp_addAssoc" (formula "6") (term "0"))
(rule "add_literals" (formula "6") (term "0,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "6"))
(rule "mul_literals" (formula "6") (term "1"))
(rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "10"))
(rule "leq_literals" (formula "6") (term "0"))
(rule "concrete_or_1" (formula "6"))
(rule "true_left" (formula "6"))
(rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "7"))
(rule "polySimp_rightDist" (formula "13") (term "0,0"))
(rule "polySimp_mulAssoc" (formula "13") (term "0,0,0"))
(rule "polySimp_mulComm0" (formula "13") (term "0,0,0,0"))
(rule "polySimp_mulLiterals" (formula "13") (term "0,0,0"))
(rule "polySimp_elimOne" (formula "13") (term "0,0,0"))
(rule "polySimp_addComm1" (formula "13") (term "0"))
(rule "polySimp_addComm0" (formula "13") (term "0,0"))
(rule "inEqSimp_sepNegMonomial1" (formula "13"))
(rule "polySimp_mulLiterals" (formula "13") (term "0"))
(rule "polySimp_elimOne" (formula "13") (term "0"))
(rule "methodBodyExpand" (formula "18") (term "1") (newnames "heapBefore_mergeLo,savedHeapBefore_mergeLo,_base1Before_mergeLo,_base2Before_mergeLo,_len1Before_mergeLo,_len2Before_mergeLo"))
(rule "simplifyUpdate2" (formula "18") (term "1"))
(rule "sequentialToParallel2" (formula "18"))
(rule "simplifyUpdate3" (formula "18") (term "1,0"))
(rule "applyOnParallel" (formula "18") (term "1,0"))
(rule "simplifyUpdate3" (formula "18") (term "0,1,0"))
(rule "simplifyUpdate3" (formula "18") (term "1,1,0"))
(rule "applyOnElementary" (formula "18") (term "0,1,0"))
(rule "applyOnPV" (formula "18") (term "0,0,1,0"))
(rule "applyOnElementary" (formula "18") (term "1,1,0"))
(rule "applyOnPV" (formula "18") (term "0,1,1,0"))
(rule "skipAssert_2" (formula "18") (term "1"))
(rule "variableDeclarationAssign" (formula "18") (term "1"))
(rule "variableDeclaration" (formula "18") (term "1") (newnames "a"))
(rule "assignment_read_attribute_this" (formula "18"))
(rule "sequentialToParallel2" (formula "18"))
(rule "simplifyUpdate3" (formula "18") (term "1,0"))
(rule "variableDeclarationAssign" (formula "18") (term "1"))
(rule "variableDeclaration" (formula "18") (term "1") (newnames "tmp"))
(rule "arrayLengthIsAnInt" (formula "15") (term "0"))
(rule "expand_inInt" (formula "15"))
(rule "replace_int_MAX" (formula "15") (term "1,0"))
(rule "replace_int_MIN" (formula "15") (term "0,1"))
(rule "andLeft" (formula "15"))
(rule "inEqSimp_commuteLeq" (formula "16"))
(rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "15"))
(rule "polySimp_rightDist" (formula "17") (term "0,0"))
(rule "polySimp_mulComm0" (formula "17") (term "0,0,0"))
(rule "polySimp_addComm1" (formula "17") (term "0"))
(rule "polySimp_addComm0" (formula "17") (term "0,0"))
(rule "inEqSimp_sepNegMonomial1" (formula "17"))
(rule "polySimp_mulLiterals" (formula "17") (term "0"))
(rule "polySimp_elimOne" (formula "17") (term "0"))
(rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "17"))
(rule "polySimp_rightDist" (formula "13") (term "0,0"))
(rule "polySimp_mulAssoc" (formula "13") (term "0,0,0"))
(rule "polySimp_mulComm0" (formula "13") (term "0,0,0,0"))
(rule "polySimp_mulLiterals" (formula "13") (term "0,0,0"))
(rule "polySimp_elimOne" (formula "13") (term "0,0,0"))
(rule "polySimp_addAssoc" (formula "13") (term "0"))
(rule "polySimp_addComm1" (formula "13") (term "0,0"))
(rule "polySimp_pullOutFactor0b" (formula "13") (term "0"))
(rule "add_literals" (formula "13") (term "1,1,0"))
(rule "polySimp_addComm0" (formula "13") (term "0,0"))
(rule "inEqSimp_sepNegMonomial1" (formula "13"))
(rule "polySimp_mulLiterals" (formula "13") (term "0"))
(rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "18"))
(rule "mul_literals" (formula "12") (term "0,0"))
(rule "polySimp_addAssoc" (formula "12") (term "0"))
(rule "add_literals" (formula "12") (term "0,0"))
(rule "inEqSimp_sepNegMonomial1" (formula "12"))
(rule "polySimp_mulLiterals" (formula "12") (term "0"))
(rule "polySimp_elimOne" (formula "12") (term "0"))
(rule "inEqSimp_subsumption0" (formula "5") (ifseqformula "12"))
(rule "leq_literals" (formula "5") (term "0"))
(rule "concrete_or_1" (formula "5"))
(rule "true_left" (formula "5"))
(rule "inEqSimp_exactShadow2" (formula "5") (ifseqformula "13"))
(rule "mul_literals" (formula "5") (term "1,0,0,1"))
(rule "greater_literals" (formula "5") (term "0"))
(rule "concrete_impl_1" (formula "5"))
(rule "mul_literals" (formula "5") (term "0,0"))
(rule "polySimp_addAssoc" (formula "5") (term "0"))
(rule "add_literals" (formula "5") (term "0,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "5"))
(rule "mul_literals" (formula "5") (term "1"))
(rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "9"))
(rule "leq_literals" (formula "5") (term "0"))
(rule "concrete_or_1" (formula "5"))
(rule "true_left" (formula "5"))
(rule "inEqSimp_exactShadow2" (formula "10") (ifseqformula "13"))
(rule "greater_literals" (formula "10") (term "0"))
(rule "concrete_impl_1" (formula "10"))
(rule "polySimp_rightDist" (formula "10") (term "1,0,0"))
(rule "mul_literals" (formula "10") (term "0,1,0,0"))
(rule "polySimp_rightDist" (formula "10") (term "0,0"))
(rule "polySimp_mulLiterals" (formula "10") (term "1,0,0"))
(rule "mul_literals" (formula "10") (term "0,0,0"))
(rule "polySimp_addAssoc" (formula "10") (term "0"))
(rule "polySimp_addComm1" (formula "10") (term "0,0"))
(rule "add_literals" (formula "10") (term "0,0,0"))
(rule "polySimp_pullOutFactor2b" (formula "10") (term "0"))
(rule "add_literals" (formula "10") (term "1,1,0"))
(rule "inEqSimp_sepNegMonomial1" (formula "10"))
(rule "polySimp_mulLiterals" (formula "10") (term "0"))
(rule "polySimp_elimOne" (formula "10") (term "0"))
(rule "inEqSimp_subsumption0" (formula "9") (ifseqformula "10"))
(rule "leq_literals" (formula "9") (term "0"))
(rule "concrete_or_1" (formula "9"))
(rule "true_left" (formula "9"))
(rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "11"))
(rule "polySimp_rightDist" (formula "10") (term "0,0"))
(rule "mul_literals" (formula "10") (term "0,0,0"))
(rule "polySimp_addComm1" (formula "10") (term "0"))
(rule "add_literals" (formula "10") (term "0,0"))
(rule "inEqSimp_sepNegMonomial1" (formula "10"))
(rule "polySimp_mulLiterals" (formula "10") (term "0"))
(rule "polySimp_elimOne" (formula "10") (term "0"))
(rule "arrayLengthNotNegative" (formula "19") (term "0"))
(rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "19"))
(rule "leq_literals" (formula "17") (term "0"))
(rule "concrete_or_1" (formula "17"))
(rule "true_left" (formula "17"))
(builtin "Use Operation Contract" (formula "22") (newnames "heapBefore_ensureCapacity,result,exc_0,heapAfter_ensureCapacity,anon_heap_ensureCapacity") (contract "java.util.TimSort[java.util.TimSort::ensureCapacity(int)].JML normal_behavior operation contract.0"))
(branch "Post (ensureCapacity)"
   (rule "false_to_not_true" (formula "22") (term "0,1,1,0,0,0,1,1,1,1,1"))
   (rule "simplifyUpdate2" (formula "22"))
   (rule "eqSymm" (formula "22") (term "0,0,0,0,0,1,1,1,1,1"))
   (rule "eqSymm" (formula "22") (term "0,0,1,0,0,0,1,1,1,1,1"))
   (rule "sequentialToParallel2" (formula "24"))
   (rule "simplifyUpdate3" (formula "24") (term "1,0"))
   (rule "sequentialToParallel2" (formula "22"))
   (rule "simplifyUpdate3" (formula "22") (term "1,0"))
   (rule "andLeft" (formula "22"))
   (rule "simplifyUpdate2" (formula "22"))
   (rule "sequentialToParallel2" (formula "23"))
   (rule "simplifyUpdate3" (formula "23") (term "1,0"))
   (rule "andLeft" (formula "23"))
   (rule "simplifyUpdate2" (formula "23"))
   (rule "andLeft" (formula "24"))
   (rule "simplifyUpdate2" (formula "25"))
   (rule "andLeft" (formula "23"))
   (rule "simplifyUpdate2" (formula "23"))
   (rule "andLeft" (formula "24"))
   (rule "simplifyUpdate2" (formula "25"))
   (rule "andLeft" (formula "24"))
   (rule "simplifyUpdate2" (formula "25"))
   (rule "andLeft" (formula "24"))
   (rule "simplifyUpdate2" (formula "24"))
   (rule "simplifyUpdate2" (formula "25"))
   (rule "notLeft" (formula "26"))
   (rule "andLeft" (formula "24"))
   (rule "simplifyUpdate2" (formula "24"))
   (rule "applyOnRigidFormula" (formula "23"))
   (rule "simplifyUpdate2" (formula "23") (term "0"))
   (rule "replace_known_right" (formula "23") (term "0") (ifseqformula "29"))
   (rule "concrete_or_2" (formula "23"))
   (rule "applyOnRigidFormula" (formula "27"))
   (rule "applyOnPV" (formula "27") (term "0"))
   (rule "simplifyUpdate1" (formula "27") (term "1"))
   (rule "applyOnRigidFormula" (formula "26"))
   (rule "applyOnRigidFormula" (formula "25"))
   (rule "simplifyUpdate1" (formula "25") (term "0"))
   (rule "simplifyUpdate1" (formula "25") (term "1"))
   (rule "applyOnPV" (formula "25") (term "1"))
   (rule "applyOnRigidFormula" (formula "24"))
   (rule "simplifyUpdate1" (formula "24") (term "1"))
   (rule "applyOnRigidFormula" (formula "23"))
   (rule "simplifyUpdate1" (formula "23") (term "1"))
   (rule "applyOnRigidFormula" (formula "26") (term "0"))
   (rule "applyOnRigidFormula" (formula "26") (term "1"))
   (rule "simplifyUpdate2" (formula "26") (term "1,1"))
   (rule "applyOnRigidTerm" (formula "25") (term "0"))
   (rule "applyOnRigidTerm" (formula "24") (term "0"))
   (rule "simplifyUpdate1" (formula "24") (term "2,0"))
   (rule "applyOnPV" (formula "24") (term "0,0"))
   (rule "simplifyUpdate1" (formula "24") (term "1,0"))
   (rule "applyOnRigidTerm" (formula "23") (term "0"))
   (rule "applyOnPV" (formula "23") (term "0,0"))
   (rule "simplifyUpdate1" (formula "23") (term "1,0"))
   (rule "simplifyUpdate1" (formula "23") (term "2,0"))
   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "23") (ifseqformula "22"))
   (rule "applyOnRigidFormula" (formula "26") (term "0,0"))
   (rule "simplifyUpdate1" (formula "26") (term "0,0,0"))
   (rule "simplifyUpdate1" (formula "26") (term "1,0,0"))
   (rule "applyOnRigidFormula" (formula "26") (term "0,1"))
   (rule "applyOnRigidFormula" (formula "26") (term "1,1"))
   (rule "applyOnRigidTerm" (formula "25") (term "0,0"))
   (rule "simplifyUpdate1" (formula "25") (term "1,0,0"))
   (rule "simplifyUpdate1" (formula "25") (term "2,0,0"))
   (rule "applyOnPV" (formula "25") (term "0,0,0"))
   (rule "applyOnRigidTerm" (formula "26") (term "0,0,0"))
   (rule "simplifyUpdate1" (formula "26") (term "1,0,0,0"))
   (rule "applyOnPV" (formula "26") (term "0,0,0,0"))
   (rule "simplifyUpdate1" (formula "26") (term "2,0,0,0"))
   (rule "eqSymm" (formula "26") (term "0,0"))
   (rule "applyOnRigidFormula" (formula "26") (term "0,0,1"))
   (rule "simplifyUpdate1" (formula "26") (term "1,0,0,1"))
   (rule "applyOnRigidFormula" (formula "26") (term "0,1,1"))
   (rule "simplifyUpdate1" (formula "26") (term "1,0,1,1"))
   (rule "applyOnRigidTerm" (formula "26") (term "0,0,0"))
   (rule "simplifyUpdate1" (formula "26") (term "2,0,0,0"))
   (rule "applyOnPV" (formula "26") (term "0,0,0,0"))
   (rule "simplifyUpdate1" (formula "26") (term "1,0,0,0"))
   (rule "applyOnRigidTerm" (formula "26") (term "0,0,0,1"))
   (rule "simplifyUpdate1" (formula "26") (term "1,0,0,0,1"))
   (rule "simplifyUpdate1" (formula "26") (term "2,0,0,0,1"))
   (rule "simplifyUpdate1" (formula "26") (term "0,0,0,0,1"))
   (rule "applyOnPV" (formula "26") (term "0,0,0,0,1"))
   (rule "applyOnRigidTerm" (formula "26") (term "0,0,1,1"))
   (rule "applyOnPV" (formula "26") (term "0,0,0,1,1"))
   (rule "simplifyUpdate1" (formula "26") (term "1,0,0,1,1"))
   (rule "simplifyUpdate1" (formula "26") (term "2,0,0,1,1"))
   (rule "applyOnRigidTerm" (formula "26") (term "1,0,0,0,1"))
   (rule "simplifyUpdate1" (formula "26") (term "2,1,0,0,0,1"))
   (rule "applyOnPV" (formula "26") (term "0,1,0,0,0,1"))
   (rule "simplifyUpdate1" (formula "26") (term "1,1,0,0,0,1"))
   (rule "assignment" (formula "31") (term "1"))
   (rule "sequentialToParallel2" (formula "31"))
   (rule "simplifyUpdate3" (formula "31") (term "1,0"))
   (rule "pullOutSelect" (formula "24") (term "0") (inst "selectSK=java_util_TimSort_tmp_0"))
   (rule "applyEq" (formula "27") (term "0,0,0") (ifseqformula "24"))
   (rule "applyEq" (formula "26") (term "0,0") (ifseqformula "24"))
   (rule "applyEq" (formula "27") (term "0,0,1,1") (ifseqformula "24"))
   (rule "applyEq" (formula "27") (term "1,0,0,0,1") (ifseqformula "24"))
   (rule "simplifySelectOfAnonEQ" (formula "24") (ifseqformula "22"))
   (rule "elementOfFreshLocs" (formula "24") (term "1,0,0"))
   (rule "equalUnique" (formula "24") (term "0,1,0,0,0"))
   (rule "concrete_not_2" (formula "24") (term "1,0,0,0"))
   (rule "concrete_and_3" (formula "24") (term "0,0,0"))
   (rule "eqSymm" (formula "25"))
   (rule "applyEqReverse" (formula "27") (term "0,0,0") (ifseqformula "25"))
   (rule "applyEqReverse" (formula "24") (term "1") (ifseqformula "25"))
   (rule "applyEqReverse" (formula "27") (term "0,0,1,1") (ifseqformula "25"))
   (rule "applyEqReverse" (formula "26") (term "0,0") (ifseqformula "25"))
   (rule "applyEqReverse" (formula "27") (term "1,0,0,0,1") (ifseqformula "25"))
   (rule "hideAuxiliaryEq" (formula "25"))
   (rule "eqSymm" (formula "26") (term "0,0"))
   (rule "replace_known_left" (formula "24") (term "0,1,1,0,0") (ifseqformula "2"))
   (rule "concrete_not_1" (formula "24") (term "1,1,0,0"))
   (rule "concrete_and_4" (formula "24") (term "1,0,0"))
   (rule "concrete_or_4" (formula "24") (term "0,0"))
   (rule "replace_known_right" (formula "26") (term "0,1,1") (ifseqformula "29"))
   (rule "concrete_not_2" (formula "26") (term "1,1"))
   (rule "concrete_and_3" (formula "26") (term "1"))
   (rule "elementOfSingleton" (formula "24") (term "0,0"))
   (rule "eqClose" (formula "24") (term "0,0,0"))
   (rule "concrete_and_1" (formula "24") (term "0,0"))
   (rule "eqClose" (formula "24") (term "0,0"))
   (rule "ifthenelse_true" (formula "24") (term "0"))
   (rule "onlyCreatedObjectsAreReferenced" (formula "19") (term "0,0") (ifseqformula "1"))
   (builtin "Use Operation Contract" (formula "32") (newnames "heapBefore_arraycopy,exc_1,heapAfter_arraycopy,anon_heap_arraycopy") (contract "java.lang.System[java.lang.System::arraycopy(java.lang.Object,int,java.lang.Object,int,int)].JML normal_behavior operation contract.0"))
   (branch "Post (arraycopy)"
      (rule "castDel" (formula "31") (term "0,1,0,0,1,1"))
      (rule "castDel" (formula "31") (term "1,1,1,0,0,1,1,1,1,1"))
      (rule "castDel" (formula "31") (term "1,0,1,0,0,1,1,1,1,1"))
      (rule "expand_inInt" (formula "31") (term "1,0,0,0,1,1,1,1,1"))
      (rule "simplifyUpdate2" (formula "31"))
      (rule "replace_int_MAX" (formula "31") (term "1,0,1,0,0,0,1,1,1,1,1"))
      (rule "replace_int_MIN" (formula "31") (term "0,1,1,0,0,0,1,1,1,1,1"))
      (rule "translateJavaAddInt" (formula "31") (term "0,2,1,1,0,0,1,1,1,1,1"))
      (rule "translateJavaSubInt" (formula "31") (term "2,1,0,0,1,1"))
      (rule "translateJavaAddInt" (formula "31") (term "0,2,0,1,0,0,1,1,1,1,1"))
      (rule "translateJavaAddInt" (formula "31") (term "0,2,1,0,0,1,1"))
      (rule "eqSymm" (formula "31") (term "1,0,0,1,1,1,1,1"))
      (rule "sequentialToParallel2" (formula "34"))
      (rule "simplifyUpdate2" (formula "34"))
      (rule "simplifyUpdate3" (formula "34") (term "1,0"))
      (rule "sequentialToParallel2" (formula "31"))
      (rule "simplifyUpdate3" (formula "31") (term "1,0"))
      (rule "andLeft" (formula "31"))
      (rule "simplifyUpdate2" (formula "31"))
      (rule "simplifyUpdate3" (formula "31") (term "1,0"))
      (rule "parallelWithSkip2" (formula "31") (term "0"))
      (rule "applyOnElementary" (formula "32") (term "1,0"))
      (rule "applyOnPV" (formula "32") (term "0,1,0"))
      (rule "sequentialToParallel2" (formula "32"))
      (rule "simplifyUpdate2" (formula "32"))
      (rule "simplifyUpdate3" (formula "32") (term "1,0"))
      (rule "andLeft" (formula "32"))
      (rule "simplifyUpdate2" (formula "32"))
      (rule "andLeft" (formula "33"))
      (rule "simplifyUpdate2" (formula "34"))
      (rule "applyOnRigidFormula" (formula "31"))
      (rule "simplifyUpdate1" (formula "31") (term "1"))
      (rule "applyOnRigidFormula" (formula "33"))
      (rule "applyOnRigidTerm" (formula "31") (term "0"))
      (rule "simplifyUpdate1" (formula "31") (term "0,0"))
      (rule "simplifyUpdate1" (formula "31") (term "1,0"))
      (rule "simplifyUpdate1" (formula "31") (term "2,0"))
      (rule "applyOnPV" (formula "31") (term "0,0"))
      (rule "applyOnRigidFormula" (formula "33") (term "0"))
      (rule "simplifyUpdate2" (formula "33") (term "0,0"))
      (rule "simplifyUpdate2" (formula "33") (term "1,0"))
      (rule "applyOnRigidTerm" (formula "31") (term "1,0"))
      (rule "simplifyUpdate1" (formula "31") (term "2,1,0"))
      (rule "simplifyUpdate1" (formula "31") (term "0,1,0"))
      (rule "simplifyUpdate1" (formula "31") (term "1,1,0"))
      (rule "applyOnPV" (formula "31") (term "0,1,0"))
      (rule "applyOnRigidFormula" (formula "33") (term "0,0"))
      (rule "simplifyUpdate2" (formula "33") (term "1,0,0"))
      (rule "applyOnRigidFormula" (formula "33") (term "1,0"))
      (rule "simplifyUpdate1" (formula "33") (term "1,1,0"))
      (rule "simplifyUpdate1" (formula "33") (term "0,1,0"))
      (rule "applyOnRigidTerm" (formula "31") (term "2,1,0"))
      (rule "simplifyUpdate1" (formula "31") (term "1,2,1,0"))
      (rule "applyOnRigidFormula" (formula "33") (term "0,0,0"))
      (rule "simplifyUpdate2" (formula "33") (term "0,0,0,0"))
      (rule "applyOnRigidTerm" (formula "33") (term "1,1,0"))
      (rule "simplifyUpdate1" (formula "33") (term "1,1,1,0"))
      (rule "simplifyUpdate1" (formula "33") (term "0,1,1,0"))
      (rule "simplifyUpdate1" (formula "33") (term "2,1,1,0"))
      (rule "applyOnPV" (formula "33") (term "1,1,1,0"))
      (rule "applyOnPV" (formula "33") (term "0,1,1,0"))
      (rule "applyOnRigidTerm" (formula "33") (term "0,1,0"))
      (rule "simplifyUpdate1" (formula "33") (term "0,0,1,0"))
      (rule "simplifyUpdate1" (formula "33") (term "1,0,1,0"))
      (rule "simplifyUpdate1" (formula "33") (term "2,0,1,0"))
      (rule "applyOnPV" (formula "33") (term "0,0,1,0"))
      (rule "applyOnPV" (formula "33") (term "1,0,1,0"))
      (rule "applyOnRigidTerm" (formula "31") (term "0,2,1,0"))
      (rule "simplifyUpdate1" (formula "31") (term "0,0,2,1,0"))
      (rule "applyOnPV" (formula "31") (term "1,0,2,1,0"))
      (rule "applyOnRigidFormula" (formula "33") (term "1,0,0,0"))
      (rule "simplifyUpdate1" (formula "33") (term "0,1,0,0,0"))
      (rule "applyOnPV" (formula "33") (term "1,1,0,0,0"))
      (rule "applyOnRigidTerm" (formula "33") (term "2,0,1,0"))
      (rule "applyOnRigidTerm" (formula "33") (term "0,2,0,1,0"))
      (rule "simplifyUpdate1" (formula "33") (term "1,0,2,0,1,0"))
      (rule "applyOnPV" (formula "33") (term "0,0,2,0,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0,0"))
      (rule "polySimp_rightDist" (formula "33") (term "1,0,0,1,0,0,0"))
      (rule "polySimp_mulAssoc" (formula "33") (term "0,1,0,0,1,0,0,0"))
      (rule "polySimp_mulComm0" (formula "33") (term "0,0,1,0,0,1,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "33") (term "0,1,0,0,1,0,0,0"))
      (rule "polySimp_elimOne" (formula "33") (term "0,1,0,0,1,0,0,0"))
      (rule "polySimp_addAssoc" (formula "33") (term "0,0,1,0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "33") (term "1,1,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0,0,0"))
      (rule "variableDeclarationAssign" (formula "36") (term "1"))
      (rule "variableDeclaration" (formula "36") (term "1") (newnames "cursor1"))
      (rule "assignment" (formula "36") (term "1"))
      (rule "sequentialToParallel2" (formula "36"))
      (rule "simplifyUpdate3" (formula "36") (term "1,0"))
      (rule "variableDeclarationAssign" (formula "36") (term "1"))
      (rule "variableDeclaration" (formula "36") (term "1") (newnames "cursor2"))
      (rule "assignment" (formula "36") (term "1"))
      (rule "sequentialToParallel2" (formula "36"))
      (rule "simplifyUpdate3" (formula "36") (term "1,0"))
      (rule "applyOnElementary" (formula "36") (term "1,0"))
      (rule "applyOnPV" (formula "36") (term "0,1,0"))
      (rule "variableDeclarationAssign" (formula "36") (term "1"))
      (rule "variableDeclaration" (formula "36") (term "1") (newnames "dest"))
      (rule "assignment" (formula "36") (term "1"))
      (rule "sequentialToParallel2" (formula "36"))
      (rule "simplifyUpdate2" (formula "36"))
      (rule "simplifyUpdate3" (formula "36") (term "1,0"))
      (rule "applyOnElementary" (formula "36") (term "1,0"))
      (rule "applyOnPV" (formula "36") (term "0,1,0"))
      (rule "eval_order_array_access2" (formula "36") (term "1") (inst "#v0=x") (inst "#ar1=o_arr"))
      (rule "variableDeclarationAssign" (formula "36") (term "1"))
      (rule "variableDeclaration" (formula "36") (term "1") (newnames "o_arr"))
      (rule "assignment" (formula "36") (term "1"))
      (rule "sequentialToParallel2" (formula "36"))
      (rule "simplifyUpdate3" (formula "36") (term "1,0"))
      (rule "applyOnElementary" (formula "36") (term "1,0"))
      (rule "applyOnPV" (formula "36") (term "0,1,0"))
      (rule "variableDeclarationAssign" (formula "36") (term "1"))
      (rule "variableDeclaration" (formula "36") (term "1") (newnames "x"))
      (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1,0,0,0"))
      (rule "polySimp_mulComm0" (formula "33") (term "1,1,0,0,0"))
      (rule "polySimp_rightDist" (formula "33") (term "1,1,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0,0,0"))
      (rule "polySimp_elimOne" (formula "33") (term "1,1,1,0,0,0"))
      (rule "polySimp_rightDist" (formula "33") (term "0,1,1,0,0,0"))
      (rule "mul_literals" (formula "33") (term "0,0,1,1,0,0,0"))
      (rule "expand_addJint" (formula "33") (term "0,2,1,1,0"))
      (rule "add_zero_left" (formula "33") (term "0,0,2,1,1,0"))
      (rule "expand_subJint" (formula "31") (term "2,1,0"))
      (rule "polySimp_elimSub" (formula "31") (term "0,2,1,0"))
      (rule "mul_literals" (formula "31") (term "1,0,2,1,0"))
      (rule "polySimp_addComm0" (formula "31") (term "0,2,1,0"))
      (rule "expand_addJint" (formula "33") (term "0,2,0,1,0"))
      (rule "expand_moduloInteger" (formula "33") (term "0,2,1,1,0"))
      (rule "replace_int_RANGE" (formula "33") (term "1,1,0,2,1,1,0"))
      (rule "replace_int_MIN" (formula "33") (term "0,0,2,1,1,0"))
      (rule "replace_int_HALFRANGE" (formula "33") (term "0,0,1,0,2,1,1,0"))
      (rule "mod_axiom" (formula "33") (term "1,0,2,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,2,1,1,0"))
      (rule "polySimp_addAssoc" (formula "33") (term "0,2,1,1,0"))
      (rule "polySimp_addAssoc" (formula "33") (term "0,0,2,1,1,0"))
      (rule "add_literals" (formula "33") (term "0,0,0,2,1,1,0"))
      (rule "add_zero_left" (formula "33") (term "0,0,2,1,1,0"))
      (rule "expand_addJint" (formula "31") (term "1,0,2,1,0"))
      (rule "add_zero_left" (formula "31") (term "0,1,0,2,1,0"))
      (rule "expand_moduloInteger" (formula "33") (term "0,2,0,1,0"))
      (rule "replace_int_RANGE" (formula "33") (term "1,1,0,2,0,1,0"))
      (rule "replace_int_HALFRANGE" (formula "33") (term "0,0,1,0,2,0,1,0"))
      (rule "replace_int_MIN" (formula "33") (term "0,0,2,0,1,0"))
      (rule "polySimp_addAssoc" (formula "33") (term "0,1,0,2,0,1,0"))
      (rule "mod_axiom" (formula "33") (term "1,0,2,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,2,0,1,0"))
      (rule "polySimp_addAssoc" (formula "33") (term "0,2,0,1,0"))
      (rule "polySimp_addAssoc" (formula "33") (term "0,0,2,0,1,0"))
      (rule "polySimp_addAssoc" (formula "33") (term "0,0,0,2,0,1,0"))
      (rule "add_literals" (formula "33") (term "0,0,0,0,2,0,1,0"))
      (rule "add_zero_left" (formula "33") (term "0,0,0,2,0,1,0"))
      (rule "expand_moduloInteger" (formula "31") (term "2,1,0"))
      (rule "replace_int_MIN" (formula "31") (term "0,2,1,0"))
      (rule "replace_int_HALFRANGE" (formula "31") (term "0,0,1,2,1,0"))
      (rule "replace_int_RANGE" (formula "31") (term "1,1,2,1,0"))
      (rule "polySimp_addAssoc" (formula "31") (term "0,1,2,1,0"))
      (rule "add_literals" (formula "31") (term "0,0,1,2,1,0"))
      (rule "mod_axiom" (formula "31") (term "1,2,1,0"))
      (rule "polySimp_mulLiterals" (formula "31") (term "1,1,2,1,0"))
      (rule "polySimp_addAssoc" (formula "31") (term "2,1,0"))
      (rule "polySimp_addAssoc" (formula "31") (term "0,2,1,0"))
      (rule "add_literals" (formula "31") (term "0,0,2,1,0"))
      (rule "expand_moduloInteger" (formula "31") (term "1,0,0,1,2,1,0"))
      (rule "replace_int_RANGE" (formula "31") (term "1,1,1,0,0,1,2,1,0"))
      (rule "replace_int_HALFRANGE" (formula "31") (term "0,0,1,1,0,0,1,2,1,0"))
      (rule "replace_int_MIN" (formula "31") (term "0,1,0,0,1,2,1,0"))
      (rule "polySimp_addAssoc" (formula "31") (term "0,1,1,0,0,1,2,1,0"))
      (rule "polySimp_addAssoc" (formula "31") (term "0,0,1,2,1,0"))
      (rule "add_literals" (formula "31") (term "0,0,0,1,2,1,0"))
      (rule "mod_axiom" (formula "31") (term "1,0,0,1,2,1,0"))
      (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0,1,2,1,0"))
      (rule "polySimp_addComm1" (formula "31") (term "2,1,0"))
      (rule "polySimp_addAssoc" (formula "31") (term "0,0,1,0,2,1,0"))
      (rule "polySimp_addAssoc" (formula "31") (term "0,0,0,1,0,2,1,0"))
      (rule "polySimp_addAssoc" (formula "31") (term "0,0,0,0,1,0,2,1,0"))
      (rule "add_literals" (formula "31") (term "0,0,0,0,0,1,0,2,1,0"))
      (rule "polyDiv_pullOut" (formula "31") (term "0,1,0,2,1,0") (inst "polyDivCoeff=mul(div(add(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
                mul(base1, Z(neglit(1(#))))),
            base2),
        Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
    Z(neglit(1(#))))"))
      (rule "equal_literals" (formula "31") (term "0,0,1,0,2,1,0"))
      (rule "ifthenelse_false" (formula "31") (term "0,1,0,2,1,0"))
      (rule "polySimp_mulLiterals" (formula "31") (term "1,0,0,0,1,0,2,1,0"))
      (rule "polySimp_mulLiterals" (formula "31") (term "1,0,0,0,1,0,2,1,0"))
      (rule "polySimp_pullOutFactor0b" (formula "31") (term "0,0,0,1,0,2,1,0"))
      (rule "add_literals" (formula "31") (term "1,1,0,0,0,1,0,2,1,0"))
      (rule "times_zero_1" (formula "31") (term "1,0,0,0,1,0,2,1,0"))
      (rule "add_zero_right" (formula "31") (term "0,0,0,1,0,2,1,0"))
      (rule "polySimp_mulComm0" (formula "31") (term "1,0,2,1,0"))
      (rule "polySimp_rightDist" (formula "31") (term "1,0,2,1,0"))
      (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,2,1,0"))
      (rule "polySimp_mulComm0" (formula "31") (term "0,1,0,2,1,0"))
      (rule "polySimp_addAssoc" (formula "31") (term "0,2,1,0"))
      (rule "nnf_imp2or" (formula "33") (term "0"))
      (rule "expand_moduloInteger" (formula "31") (term "1,2,1,0"))
      (rule "replace_int_HALFRANGE" (formula "31") (term "0,0,1,1,2,1,0"))
      (rule "replace_int_MIN" (formula "31") (term "0,1,2,1,0"))
      (rule "replace_int_RANGE" (formula "31") (term "1,1,1,2,1,0"))
      (rule "polySimp_addAssoc" (formula "31") (term "0,1,1,2,1,0"))
      (rule "polySimp_addAssoc" (formula "31") (term "2,1,0"))
      (rule "polySimp_addComm1" (formula "31") (term "0,2,1,0"))
      (rule "polySimp_addComm1" (formula "31") (term "0,0,2,1,0"))
      (rule "add_literals" (formula "31") (term "0,0,0,2,1,0"))
      (rule "mod_axiom" (formula "31") (term "1,2,1,0"))
      (rule "polySimp_mulLiterals" (formula "31") (term "1,1,2,1,0"))
      (rule "polySimp_addAssoc" (formula "31") (term "2,1,0"))
      (rule "polySimp_addComm1" (formula "31") (term "0,2,1,0"))
      (rule "polySimp_pullOutFactor0b" (formula "31") (term "2,1,0"))
      (rule "add_literals" (formula "31") (term "1,1,2,1,0"))
      (rule "times_zero_1" (formula "31") (term "1,2,1,0"))
      (rule "add_zero_right" (formula "31") (term "2,1,0"))
      (rule "polySimp_addComm1" (formula "31") (term "2,1,0"))
      (rule "polySimp_addAssoc" (formula "31") (term "0,2,1,0"))
      (rule "polySimp_addAssoc" (formula "31") (term "0,0,2,1,0"))
      (rule "add_literals" (formula "31") (term "0,0,0,2,1,0"))
      (rule "nnf_notAnd" (formula "33") (term "0,0"))
      (rule "nnf_notAnd" (formula "33") (term "1,0,0"))
      (rule "inEqSimp_notLeq" (formula "33") (term "0,1,0,0"))
      (rule "mul_literals" (formula "33") (term "1,0,0,0,1,0,0"))
      (rule "add_literals" (formula "33") (term "0,0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "33") (term "0,1,0,0"))
      (rule "mul_literals" (formula "33") (term "1,0,1,0,0"))
      (rule "inEqSimp_notGeq" (formula "33") (term "1,1,0,0"))
      (rule "mul_literals" (formula "33") (term "1,0,0,1,1,0,0"))
      (rule "add_literals" (formula "33") (term "0,0,1,1,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1,1,0,0"))
      (rule "mul_literals" (formula "33") (term "1,1,1,0,0"))
      (rule "nnf_notAnd" (formula "33") (term "0,0,0"))
      (rule "inEqSimp_notLeq" (formula "33") (term "1,0,0,0"))
      (rule "polySimp_rightDist" (formula "33") (term "1,0,0,1,0,0,0"))
      (rule "polySimp_rightDist" (formula "33") (term "0,1,0,0,1,0,0,0"))
      (rule "mul_literals" (formula "33") (term "0,0,1,0,0,1,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "33") (term "1,0,1,0,0,1,0,0,0"))
      (rule "polySimp_elimOne" (formula "33") (term "1,0,1,0,0,1,0,0,0"))
      (rule "polySimp_addAssoc" (formula "33") (term "0,0,1,0,0,0"))
      (rule "polySimp_addAssoc" (formula "33") (term "0,0,0,1,0,0,0"))
      (rule "add_literals" (formula "33") (term "0,0,0,0,1,0,0,0"))
      (rule "add_zero_left" (formula "33") (term "0,0,0,1,0,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "33") (term "1,0,0,0"))
      (rule "polySimp_mulComm0" (formula "33") (term "1,1,0,0,0"))
      (rule "polySimp_rightDist" (formula "33") (term "1,1,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0,0,0"))
      (rule "polySimp_elimOne" (formula "33") (term "1,1,1,0,0,0"))
      (rule "polySimp_mulComm0" (formula "33") (term "0,1,1,0,0,0"))
      (rule "inEqSimp_notGeq" (formula "33") (term "0,0,0,0"))
      (rule "times_zero_1" (formula "33") (term "1,0,0,0,0,0,0"))
      (rule "add_zero_right" (formula "33") (term "0,0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "0,0,0,0"))
      (rule "mul_literals" (formula "33") (term "1,0,0,0,0"))
      (rule "postincrement_assignment" (formula "36") (term "1") (inst "#v=x_1"))
      (rule "variableDeclarationAssign" (formula "36") (term "1"))
      (rule "variableDeclaration" (formula "36") (term "1") (newnames "x_1"))
      (rule "assignment" (formula "36") (term "1"))
      (rule "sequentialToParallel2" (formula "36"))
      (rule "simplifyUpdate3" (formula "36") (term "1,0"))
      (rule "applyOnElementary" (formula "36") (term "1,0"))
      (rule "applyOnPV" (formula "36") (term "0,1,0"))
      (rule "commute_or" (formula "33") (term "1,0,0"))
      (rule "commute_or_2" (formula "33") (term "0,0"))
      (rule "arrayLengthIsAnInt" (formula "26") (term "0"))
      (rule "expand_inInt" (formula "26"))
      (rule "replace_int_MAX" (formula "26") (term "1,0"))
      (rule "replace_int_MIN" (formula "26") (term "0,1"))
      (rule "andLeft" (formula "26"))
      (rule "inEqSimp_commuteLeq" (formula "27"))
      (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "26"))
      (rule "polySimp_rightDist" (formula "28") (term "0,0"))
      (rule "polySimp_mulAssoc" (formula "28") (term "0,0,0"))
      (rule "polySimp_mulComm0" (formula "28") (term "0,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "28") (term "0,0,0"))
      (rule "polySimp_elimOne" (formula "28") (term "0,0,0"))
      (rule "polySimp_addComm1" (formula "28") (term "0"))
      (rule "polySimp_addComm0" (formula "28") (term "0,0"))
      (rule "inEqSimp_sepNegMonomial1" (formula "28"))
      (rule "polySimp_mulLiterals" (formula "28") (term "0"))
      (rule "polySimp_elimOne" (formula "28") (term "0"))
      (rule "arrayLengthNotNegative" (formula "28") (term "0"))
      (rule "inEqSimp_subsumption1" (formula "27") (ifseqformula "28"))
      (rule "leq_literals" (formula "27") (term "0"))
      (rule "concrete_or_1" (formula "27"))
      (rule "true_left" (formula "27"))
      (rule "shift_paren_or" (formula "35") (term "0,0,0"))
      (rule "commute_or" (formula "35") (term "0,0,0,0"))
      (rule "inEqSimp_or_subsumption0" (formula "35") (term "0,0,0,0"))
      (rule "qeq_literals" (formula "35") (term "0,0,0,0,0,0"))
      (rule "concrete_and_2" (formula "35") (term "0,0,0,0,0"))
      (rule "concrete_or_2" (formula "35") (term "0,0,0,0"))
      (rule "compound_int_cast_expression" (formula "38") (term "1") (inst "#v=x_2"))
      (rule "variableDeclarationAssign" (formula "38") (term "1"))
      (rule "variableDeclaration" (formula "38") (term "1") (newnames "x_2"))
      (rule "remove_parentheses_right" (formula "38") (term "1"))
      (rule "assignmentAdditionInt" (formula "38") (term "1"))
      (rule "translateJavaAddInt" (formula "38") (term "0,0,1"))
      (rule "sequentialToParallel2" (formula "38"))
      (rule "simplifyUpdate3" (formula "38") (term "1,0"))
      (rule "applyOnElementary" (formula "38") (term "1,0"))
      (rule "applyOnRigidTerm" (formula "38") (term "0,1,0"))
      (rule "applyOnPV" (formula "38") (term "0,0,1,0"))
      (rule "simplifyUpdate1" (formula "38") (term "1,0,1,0"))
      (rule "expand_addJint" (formula "38") (term "0,1,0"))
      (rule "polySimp_addComm0" (formula "38") (term "0,0,1,0"))
      (rule "expand_moduloInteger" (formula "38") (term "0,1,0"))
      (rule "replace_int_MIN" (formula "38") (term "0,0,1,0"))
      (rule "replace_int_HALFRANGE" (formula "38") (term "0,0,1,0,1,0"))
      (rule "replace_int_RANGE" (formula "38") (term "1,1,0,1,0"))
      (rule "polySimp_addAssoc" (formula "38") (term "0,1,0,1,0"))
      (rule "add_literals" (formula "38") (term "0,0,1,0,1,0"))
      (rule "polyMod_pullOut" (formula "38") (term "1,0,1,0") (inst "polyDivCoeff=Z(1(#))"))
      (rule "polySimp_mulLiterals" (formula "38") (term "1,0,1,0,1,0"))
      (rule "mul_literals" (formula "38") (term "1,0,1,0,1,0"))
      (rule "polySimp_addComm1" (formula "38") (term "0,1,0,1,0"))
      (rule "add_literals" (formula "38") (term "0,0,1,0,1,0"))
      (rule "widening_identity_cast_5" (formula "38") (term "1"))
      (rule "assignment" (formula "38") (term "1"))
      (rule "sequentialToParallel2" (formula "38"))
      (rule "simplifyUpdate2" (formula "38"))
      (rule "simplifyUpdate3" (formula "38") (term "1,0"))
      (rule "applyOnElementary" (formula "38") (term "1,0"))
      (rule "applyOnPV" (formula "38") (term "0,1,0"))
      (rule "assignment" (formula "38") (term "1"))
      (rule "sequentialToParallel2" (formula "38"))
      (rule "simplifyUpdate2" (formula "38"))
      (rule "simplifyUpdate3" (formula "38") (term "1,0"))
      (rule "applyOnElementary" (formula "38") (term "1,0"))
      (rule "applyOnPV" (formula "38") (term "0,1,0"))
      (rule "eval_order_array_access3" (formula "38") (inst "#v1=o") (inst "#v2=x_1") (inst "#v0=o_arr_1"))
      (branch "ArrayIndexOutOfBounds (x<0 | x>=o_arr.length)"
         (opengoal " ")
      )
      (branch "Normal Execution"
         (rule "variableDeclarationAssign" (formula "38") (term "1"))
         (rule "variableDeclaration" (formula "38") (term "1") (newnames "o_arr_1"))
         (rule "assignment" (formula "38") (term "1"))
         (rule "sequentialToParallel2" (formula "38"))
         (rule "simplifyUpdate2" (formula "38"))
         (rule "simplifyUpdate3" (formula "38") (term "1,0"))
         (rule "applyOnElementary" (formula "38") (term "1,0"))
         (rule "applyOnPV" (formula "38") (term "0,1,0"))
         (rule "variableDeclarationAssign" (formula "38") (term "1"))
         (rule "variableDeclaration" (formula "38") (term "1") (newnames "x_3"))
         (rule "assignment" (formula "38") (term "1"))
         (rule "sequentialToParallel2" (formula "38"))
         (rule "simplifyUpdate2" (formula "38"))
         (rule "simplifyUpdate3" (formula "38") (term "1,0"))
         (rule "applyOnElementary" (formula "38") (term "1,0"))
         (rule "applyOnPV" (formula "38") (term "0,1,0"))
         (rule "variableDeclarationAssign" (formula "38") (term "1"))
         (rule "variableDeclaration" (formula "38") (term "1") (newnames "o"))
         (rule "eval_order_array_access5" (formula "38") (term "1") (inst "#v1=x_4") (inst "#ar1=o_arr_2"))
         (rule "variableDeclarationAssign" (formula "38") (term "1"))
         (rule "variableDeclaration" (formula "38") (term "1") (newnames "o_arr_2"))
         (rule "assignment" (formula "38") (term "1"))
         (rule "sequentialToParallel2" (formula "38"))
         (rule "simplifyUpdate3" (formula "38") (term "1,0"))
         (rule "applyOnElementary" (formula "38") (term "1,0"))
         (rule "applyOnPV" (formula "38") (term "0,1,0"))
         (rule "variableDeclarationAssign" (formula "38") (term "1"))
         (rule "variableDeclaration" (formula "38") (term "1") (newnames "x_4"))
         (rule "div_axiom" (formula "33") (term "0,1,2,1,0") (inst "quotient=quotient_24"))
         (rule "equal_literals" (formula "33") (term "0"))
         (rule "concrete_or_2" (formula "33"))
         (rule "qeq_literals" (formula "33") (term "0,1"))
         (rule "ifthenelse_true_for" (formula "33") (term "1"))
         (rule "mul_literals" (formula "33") (term "1,1,1"))
         (rule "andLeft" (formula "33"))
         (rule "andLeft" (formula "33"))
         (rule "polySimp_addAssoc" (formula "35") (term "0,1"))
         (rule "polySimp_addComm1" (formula "35") (term "1"))
         (rule "polySimp_addAssoc" (formula "35") (term "0,0,1"))
         (rule "add_literals" (formula "35") (term "0,0,0,1"))
         (rule "polySimp_addComm1" (formula "35") (term "0,1"))
         (rule "add_literals" (formula "35") (term "0,0,1"))
         (rule "inEqSimp_homoInEq0" (formula "34"))
         (rule "polySimp_mulLiterals" (formula "34") (term "1,0"))
         (rule "polySimp_addComm1" (formula "34") (term "0"))
         (rule "polySimp_addComm1" (formula "34") (term "0,0"))
         (rule "inEqSimp_homoInEq1" (formula "35"))
         (rule "polySimp_mulLiterals" (formula "35") (term "1,0"))
         (rule "polySimp_addComm1" (formula "35") (term "0"))
         (rule "polySimp_addComm1" (formula "35") (term "0,0"))
         (rule "applyEq" (formula "36") (term "0,1,2,1,0") (ifseqformula "33"))
         (rule "polySimp_addComm1" (formula "36") (term "2,1,0"))
         (rule "polySimp_addComm1" (formula "36") (term "0,2,1,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "34"))
         (rule "polySimp_mulComm0" (formula "34") (term "1"))
         (rule "polySimp_rightDist" (formula "34") (term "1"))
         (rule "polySimp_mulLiterals" (formula "34") (term "1,1"))
         (rule "polySimp_elimOne" (formula "34") (term "1,1"))
         (rule "polySimp_rightDist" (formula "34") (term "0,1"))
         (rule "mul_literals" (formula "34") (term "0,0,1"))
         (rule "polySimp_mulLiterals" (formula "34") (term "1,0,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "35"))
         (rule "polySimp_mulComm0" (formula "35") (term "1"))
         (rule "polySimp_rightDist" (formula "35") (term "1"))
         (rule "polySimp_mulLiterals" (formula "35") (term "1,1"))
         (rule "polySimp_elimOne" (formula "35") (term "1,1"))
         (rule "polySimp_rightDist" (formula "35") (term "0,1"))
         (rule "polySimp_mulLiterals" (formula "35") (term "1,0,1"))
         (rule "mul_literals" (formula "35") (term "0,0,1"))
         (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "35"))
         (rule "mul_literals" (formula "5") (term "0,0"))
         (rule "polySimp_addAssoc" (formula "5") (term "0"))
         (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
         (rule "add_literals" (formula "5") (term "0,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "5"))
         (rule "polySimp_mulComm0" (formula "5") (term "1"))
         (rule "polySimp_rightDist" (formula "5") (term "1"))
         (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
         (rule "mul_literals" (formula "5") (term "0,1"))
         (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "36"))
         (rule "polySimp_rightDist" (formula "11") (term "0,0"))
         (rule "mul_literals" (formula "11") (term "0,0,0"))
         (rule "polySimp_addAssoc" (formula "11") (term "0"))
         (rule "polySimp_addComm1" (formula "11") (term "0,0"))
         (rule "polySimp_pullOutFactor2b" (formula "11") (term "0"))
         (rule "add_literals" (formula "11") (term "1,1,0"))
         (rule "times_zero_1" (formula "11") (term "1,0"))
         (rule "add_zero_right" (formula "11") (term "0"))
         (rule "polySimp_addAssoc" (formula "11") (term "0"))
         (rule "add_literals" (formula "11") (term "0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "11"))
         (rule "mul_literals" (formula "11") (term "1"))
         (rule "elimGcdGeq_antec" (formula "11") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_24") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
         (rule "leq_literals" (formula "11") (term "0,0"))
         (rule "concrete_or_2" (formula "11") (term "0"))
         (rule "times_zero_1" (formula "11") (term "1,0,0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0"))
         (rule "polySimp_addLiterals" (formula "11") (term "0,0,0,0"))
         (rule "add_literals" (formula "11") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,0"))
         (rule "add_literals" (formula "11") (term "1,1,0,0"))
         (rule "times_zero_1" (formula "11") (term "1,0,0"))
         (rule "add_zero_right" (formula "11") (term "0,0"))
         (rule "leq_literals" (formula "11") (term "0"))
         (rule "concrete_or_2" (formula "11"))
         (rule "inEqSimp_exactShadow3" (formula "36") (ifseqformula "4"))
         (rule "polySimp_rightDist" (formula "36") (term "0,0"))
         (rule "polySimp_rightDist" (formula "36") (term "0,0,0"))
         (rule "polySimp_mulLiterals" (formula "36") (term "1,0,0,0"))
         (rule "mul_literals" (formula "36") (term "0,0,0,0"))
         (rule "polySimp_addAssoc" (formula "36") (term "0"))
         (rule "polySimp_addComm1" (formula "36") (term "0,0"))
         (rule "polySimp_pullOutFactor2b" (formula "36") (term "0"))
         (rule "add_literals" (formula "36") (term "1,1,0"))
         (rule "times_zero_1" (formula "36") (term "1,0"))
         (rule "add_zero_right" (formula "36") (term "0"))
         (rule "polySimp_addComm1" (formula "36") (term "0"))
         (rule "add_literals" (formula "36") (term "0,0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "36"))
         (rule "polySimp_mulLiterals" (formula "36") (term "0"))
         (rule "elimGcdLeq_antec" (formula "36") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_24") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
         (rule "polySimp_mulLiterals" (formula "36") (term "1,0,1,0"))
         (rule "times_zero_1" (formula "36") (term "1,0,0,0,0,1,0"))
         (rule "leq_literals" (formula "36") (term "0,0"))
         (rule "concrete_or_2" (formula "36") (term "0"))
         (rule "polySimp_addLiterals" (formula "36") (term "0,0,0,0"))
         (rule "neg_literal" (formula "36") (term "0,0,0,0,0"))
         (rule "add_literals" (formula "36") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor0b" (formula "36") (term "0,0"))
         (rule "add_literals" (formula "36") (term "1,1,0,0"))
         (rule "times_zero_1" (formula "36") (term "1,0,0"))
         (rule "add_zero_right" (formula "36") (term "0,0"))
         (rule "qeq_literals" (formula "36") (term "0"))
         (rule "concrete_or_2" (formula "36"))
         (rule "inEqSimp_exactShadow2" (formula "37") (ifseqformula "15"))
         (rule "greater_literals" (formula "37") (term "0"))
         (rule "concrete_impl_1" (formula "37"))
         (rule "polySimp_rightDist" (formula "37") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "37") (term "0,1,0,0"))
         (rule "mul_literals" (formula "37") (term "0,0,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "37") (term "1,0,1,0,0"))
         (rule "polySimp_rightDist" (formula "37") (term "0,0"))
         (rule "polySimp_mulLiterals" (formula "37") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "37") (term "0,0,0"))
         (rule "polySimp_mulLiterals" (formula "37") (term "1,0,0,0"))
         (rule "mul_literals" (formula "37") (term "0,0,0,0"))
         (rule "polySimp_addAssoc" (formula "37") (term "0"))
         (rule "polySimp_addComm1" (formula "37") (term "0,0"))
         (rule "polySimp_pullOutFactor2b" (formula "37") (term "0"))
         (rule "add_literals" (formula "37") (term "1,1,0"))
         (rule "polySimp_addComm1" (formula "37") (term "0,0"))
         (rule "add_literals" (formula "37") (term "0,0,0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "37"))
         (rule "polySimp_mulLiterals" (formula "37") (term "0"))
         (rule "polySimp_elimOne" (formula "37") (term "0"))
         (rule "inEqSimp_exactShadow3" (formula "38") (ifseqformula "13"))
         (rule "polySimp_rightDist" (formula "38") (term "0,0"))
         (rule "polySimp_addComm1" (formula "38") (term "0"))
         (rule "polySimp_rightDist" (formula "38") (term "0,0,0"))
         (rule "mul_literals" (formula "38") (term "0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "38") (term "1,0,0,0"))
         (rule "polySimp_addComm1" (formula "38") (term "0,0"))
         (rule "add_literals" (formula "38") (term "0,0,0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "38"))
         (rule "polySimp_mulLiterals" (formula "38") (term "0"))
         (rule "polySimp_elimOne" (formula "38") (term "0"))
         (rule "inEqSimp_antiSymm" (formula "11") (ifseqformula "36"))
         (rule "applyEqRigid" (formula "12") (term "0") (ifseqformula "11"))
         (rule "qeq_literals" (formula "12"))
         (rule "true_left" (formula "12"))
         (rule "applyEqRigid" (formula "5") (term "0,1,1") (ifseqformula "11"))
         (rule "mul_literals" (formula "5") (term "1,1"))
         (rule "add_zero_right" (formula "5") (term "1"))
         (rule "applyEq" (formula "37") (term "0,1,1") (ifseqformula "11"))
         (rule "mul_literals" (formula "37") (term "1,1"))
         (rule "add_zero_right" (formula "37") (term "1"))
         (rule "applyEq" (formula "38") (term "0,1,1") (ifseqformula "11"))
         (rule "mul_literals" (formula "38") (term "1,1"))
         (rule "add_zero_right" (formula "38") (term "1"))
         (rule "applyEq" (formula "36") (term "0") (ifseqformula "11"))
         (rule "leq_literals" (formula "36"))
         (rule "true_left" (formula "36"))
         (rule "applyEqRigid" (formula "38") (term "0,1,0,1") (ifseqformula "11"))
         (rule "times_zero_2" (formula "38") (term "1,0,1"))
         (rule "add_zero_right" (formula "38") (term "0,1"))
         (rule "applyEq" (formula "39") (term "0,1,0,1") (ifseqformula "11"))
         (rule "times_zero_2" (formula "39") (term "1,0,1"))
         (rule "add_zero_right" (formula "39") (term "0,1"))
         (rule "applyEqRigid" (formula "35") (term "1") (ifseqformula "11"))
         (rule "applyEq" (formula "40") (term "0,1,0,0,2,1,0") (ifseqformula "11"))
         (rule "mul_literals" (formula "40") (term "1,0,0,2,1,0"))
         (rule "add_zero_right" (formula "40") (term "0,0,2,1,0"))
         (rule "inEqSimp_subsumption1" (formula "38") (ifseqformula "12"))
         (rule "inEqSimp_homoInEq0" (formula "38") (term "0"))
         (rule "polySimp_mulComm0" (formula "38") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "38") (term "1,0,0"))
         (rule "mul_literals" (formula "38") (term "0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "38") (term "0,0"))
         (rule "polySimp_addComm1" (formula "38") (term "0,0,0"))
         (rule "add_literals" (formula "38") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "38") (term "0,0"))
         (rule "add_literals" (formula "38") (term "1,1,0,0"))
         (rule "times_zero_1" (formula "38") (term "1,0,0"))
         (rule "add_zero_right" (formula "38") (term "0,0"))
         (rule "qeq_literals" (formula "38") (term "0"))
         (rule "concrete_or_1" (formula "38"))
         (rule "true_left" (formula "38"))
         (rule "inEqSimp_subsumption0" (formula "38") (ifseqformula "4"))
         (rule "inEqSimp_homoInEq0" (formula "38") (term "0"))
         (rule "polySimp_mulComm0" (formula "38") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "38") (term "1,0,0"))
         (rule "mul_literals" (formula "38") (term "0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "38") (term "0,0"))
         (rule "polySimp_addComm1" (formula "38") (term "0,0,0"))
         (rule "add_literals" (formula "38") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "38") (term "0,0"))
         (rule "add_literals" (formula "38") (term "1,1,0,0"))
         (rule "times_zero_1" (formula "38") (term "1,0,0"))
         (rule "add_zero_right" (formula "38") (term "0,0"))
         (rule "qeq_literals" (formula "38") (term "0"))
         (rule "concrete_or_1" (formula "38"))
         (rule "true_left" (formula "38"))
         (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "9"))
         (rule "leq_literals" (formula "5") (term "0"))
         (rule "concrete_or_1" (formula "5"))
         (rule "true_left" (formula "5"))
         (rule "inEqSimp_subsumption0" (formula "35") (ifseqformula "36"))
         (rule "leq_literals" (formula "35") (term "0"))
         (rule "concrete_or_1" (formula "35"))
         (rule "true_left" (formula "35"))
         (rule "inEqSimp_subsumption0" (formula "35") (ifseqformula "9"))
         (rule "leq_literals" (formula "35") (term "0"))
         (rule "concrete_or_1" (formula "35"))
         (rule "true_left" (formula "35"))
         (rule "postincrement_assignment" (formula "40") (term "1") (inst "#v=x_5"))
         (rule "variableDeclarationAssign" (formula "40") (term "1"))
         (rule "variableDeclaration" (formula "40") (term "1") (newnames "x_5"))
         (rule "assignment" (formula "40") (term "1"))
         (rule "sequentialToParallel2" (formula "40"))
         (rule "simplifyUpdate3" (formula "40") (term "1,0"))
         (rule "applyOnElementary" (formula "40") (term "1,0"))
         (rule "applyOnPV" (formula "40") (term "0,1,0"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "30") (term "0,0,0") (ifseqformula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "26") (term "0") (ifseqformula "23"))
         (rule "applyEq" (formula "26") (term "1,0,1") (ifseqformula "27"))
         (rule "applyEq" (formula "26") (term "0,0") (ifseqformula "27"))
         (rule "replace_known_right" (formula "26") (term "0") (ifseqformula "40"))
         (rule "concrete_or_2" (formula "26"))
         (rule "replace_known_left" (formula "25") (term "1") (ifseqformula "26"))
         (rule "concrete_or_3" (formula "25"))
         (rule "true_left" (formula "25"))
         (rule "compound_int_cast_expression" (formula "41") (term "1") (inst "#v=x_6"))
         (rule "variableDeclarationAssign" (formula "41") (term "1"))
         (rule "variableDeclaration" (formula "41") (term "1") (newnames "x_6"))
         (rule "remove_parentheses_right" (formula "41") (term "1"))
         (rule "assignmentAdditionInt" (formula "41") (term "1"))
         (rule "translateJavaAddInt" (formula "41") (term "0,0,1"))
         (rule "sequentialToParallel2" (formula "41"))
         (rule "simplifyUpdate3" (formula "41") (term "1,0"))
         (rule "applyOnElementary" (formula "41") (term "1,0"))
         (rule "applyOnRigidTerm" (formula "41") (term "0,1,0"))
         (rule "simplifyUpdate1" (formula "41") (term "1,0,1,0"))
         (rule "applyOnPV" (formula "41") (term "0,0,1,0"))
         (rule "expand_addJint" (formula "41") (term "0,1,0"))
         (rule "polySimp_addComm0" (formula "41") (term "0,0,1,0"))
         (rule "expand_moduloInteger" (formula "41") (term "0,1,0"))
         (rule "replace_int_RANGE" (formula "41") (term "1,1,0,1,0"))
         (rule "replace_int_MIN" (formula "41") (term "0,0,1,0"))
         (rule "replace_int_HALFRANGE" (formula "41") (term "0,0,1,0,1,0"))
         (rule "polySimp_addAssoc" (formula "41") (term "0,1,0,1,0"))
         (rule "add_literals" (formula "41") (term "0,0,1,0,1,0"))
         (rule "polyMod_pullOut" (formula "41") (term "1,0,1,0") (inst "polyDivCoeff=Z(1(#))"))
         (rule "polySimp_mulLiterals" (formula "41") (term "1,0,1,0,1,0"))
         (rule "mul_literals" (formula "41") (term "1,0,1,0,1,0"))
         (rule "polySimp_addComm1" (formula "41") (term "0,1,0,1,0"))
         (rule "add_literals" (formula "41") (term "0,0,1,0,1,0"))
         (rule "widening_identity_cast_5" (formula "41") (term "1"))
         (rule "assignment" (formula "41") (term "1"))
         (rule "sequentialToParallel2" (formula "41"))
         (rule "simplifyUpdate2" (formula "41"))
         (rule "simplifyUpdate3" (formula "41") (term "1,0"))
         (rule "applyOnElementary" (formula "41") (term "1,0"))
         (rule "applyOnPV" (formula "41") (term "0,1,0"))
         (rule "assignment" (formula "41") (term "1"))
         (rule "sequentialToParallel2" (formula "41"))
         (rule "simplifyUpdate2" (formula "41"))
         (rule "simplifyUpdate3" (formula "41") (term "1,0"))
         (rule "applyOnElementary" (formula "41") (term "1,0"))
         (rule "applyOnPV" (formula "41") (term "0,1,0"))
         (rule "assignment_array2" (formula "41"))
         (branch "Normal Execution (o_arr_2 != null)"
            (opengoal " ")
         )
         (branch "Null Reference (o_arr_2 = null)"
            (opengoal " ")
         )
         (branch "Index Out of Bounds (o_arr_2 != null, but x_4 Out of Bounds!)"
            (rule "false_right" (formula "42"))
            (rule "simplifyUpdate2" (formula "1"))
            (rule "andLeft" (formula "1"))
            (rule "simplifyUpdate2" (formula "1"))
            (rule "notLeft" (formula "1"))
            (rule "applyOnRigidFormula" (formula "1"))
            (rule "simplifyUpdate2" (formula "1") (term "1"))
            (rule "applyOnRigidFormula" (formula "40"))
            (rule "simplifyUpdate1" (formula "40") (term "1"))
            (rule "applyOnPV" (formula "40") (term "0"))
            (rule "replace_known_right" (formula "21") (term "0") (ifseqformula "40"))
            (rule "concrete_or_2" (formula "21"))
            (rule "applyOnRigidFormula" (formula "1") (term "0"))
            (rule "simplifyUpdate1" (formula "1") (term "1,0"))
            (rule "simplifyUpdate1" (formula "1") (term "0,0"))
            (rule "applyOnPV" (formula "1") (term "1,0"))
            (rule "applyOnRigidFormula" (formula "1") (term "1"))
            (rule "applyOnPV" (formula "1") (term "0,1"))
            (rule "simplifyUpdate1" (formula "1") (term "1,1"))
            (rule "applyOnRigidTerm" (formula "1") (term "0,0"))
            (rule "applyOnPV" (formula "1") (term "0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
            (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
            (rule "add_zero_right" (formula "1") (term "0,0,1"))
            (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
            (rule "mul_literals" (formula "1") (term "1,1"))
            (rule "Class_invariant_axiom_for_java_util_TimSort" (formula "23") (inst "i=i") (inst "i_0=i_0") (inst "i_1=i_1") (ifseqformula "4"))
            (rule "insert_constant_value" (formula "23") (term "0,3,1,0,0,0,1,0"))
            (rule "insert_constant_value" (formula "23") (term "0,3,1,0,0,0,0,1,0"))
            (rule "insert_constant_value" (formula "23") (term "0,3,1,0,1,0,0,0,0,0,0,1,0"))
            (rule "expand_inInt" (formula "23") (term "1,1"))
            (rule "replace_int_MAX" (formula "23") (term "1,0,1,1"))
            (rule "replace_int_MIN" (formula "23") (term "0,1,1,1"))
            (rule "andLeft" (formula "23"))
            (rule "andLeft" (formula "24"))
            (rule "andLeft" (formula "23"))
            (rule "andLeft" (formula "26"))
            (rule "andLeft" (formula "24"))
            (rule "andLeft" (formula "23"))
            (rule "andLeft" (formula "25"))
            (rule "notLeft" (formula "24"))
            (rule "andLeft" (formula "23"))
            (rule "andLeft" (formula "25"))
            (rule "notLeft" (formula "24"))
            (rule "notLeft" (formula "23"))
            (rule "andLeft" (formula "23"))
            (rule "andLeft" (formula "23"))
            (rule "andLeft" (formula "23"))
            (rule "andLeft" (formula "23"))
            (rule "andLeft" (formula "23"))
            (rule "andLeft" (formula "23"))
            (rule "andLeft" (formula "25"))
            (rule "andLeft" (formula "23"))
            (rule "andLeft" (formula "23"))
            (rule "andLeft" (formula "23"))
            (rule "andLeft" (formula "23"))
            (rule "andLeft" (formula "23"))
            (rule "notLeft" (formula "24"))
            (rule "andLeft" (formula "23"))
            (rule "notLeft" (formula "24"))
            (rule "andLeft" (formula "23"))
            (rule "andLeft" (formula "23"))
            (rule "notLeft" (formula "25"))
            (rule "notLeft" (formula "24"))
            (rule "andLeft" (formula "23"))
            (rule "notLeft" (formula "24"))
            (rule "andLeft" (formula "23"))
            (rule "andLeft" (formula "23"))
            (rule "notLeft" (formula "25"))
            (rule "andLeft" (formula "23"))
            (rule "notLeft" (formula "25"))
            (rule "notLeft" (formula "24"))
            (rule "eqSymm" (formula "37") (term "1,0"))
            (rule "translateJavaDivInt" (formula "34") (term "3"))
            (rule "translateJavaDivInt" (formula "33") (term "3"))
            (rule "translateJavaDivInt" (formula "31") (term "3,1,0"))
            (rule "eqSymm" (formula "60"))
            (rule "eqSymm" (formula "59"))
            (rule "eqSymm" (formula "23"))
            (rule "eqSymm" (formula "58"))
            (rule "eqSymm" (formula "57"))
            (rule "replace_known_right" (formula "48") (term "0") (ifseqformula "63"))
            (rule "concrete_or_2" (formula "48"))
            (rule "polySimp_elimSub" (formula "37") (term "1,1,0,0"))
            (rule "mul_literals" (formula "37") (term "1,1,1,0,0"))
            (rule "polySimp_elimSub" (formula "35") (term "2"))
            (rule "mul_literals" (formula "35") (term "1,2"))
            (rule "polySimp_elimSub" (formula "34") (term "2"))
            (rule "mul_literals" (formula "34") (term "1,2"))
            (rule "polySimp_elimSub" (formula "33") (term "2"))
            (rule "mul_literals" (formula "33") (term "1,2"))
            (rule "polySimp_elimSub" (formula "32") (term "2"))
            (rule "mul_literals" (formula "32") (term "1,2"))
            (rule "polySimp_elimSub" (formula "31") (term "1,1,0,0"))
            (rule "mul_literals" (formula "31") (term "1,1,1,0,0"))
            (rule "polySimp_addComm0" (formula "37") (term "0,2,0,1,0"))
            (rule "polySimp_addComm0" (formula "37") (term "1,1,0,0"))
            (rule "polySimp_addComm0" (formula "35") (term "2"))
            (rule "polySimp_addComm0" (formula "34") (term "2"))
            (rule "polySimp_addComm0" (formula "33") (term "2"))
            (rule "polySimp_addComm0" (formula "32") (term "2"))
            (rule "polySimp_addComm0" (formula "31") (term "1,1,0,0"))
            (rule "sortsDisjointModuloNull" (formula "62"))
            (rule "replace_known_right" (formula "62") (term "0") (ifseqformula "63"))
            (rule "concrete_and_2" (formula "62"))
            (rule "false_right" (formula "62"))
            (rule "sortsDisjointModuloNull" (formula "61"))
            (rule "replace_known_right" (formula "61") (term "0") (ifseqformula "62"))
            (rule "concrete_and_2" (formula "61"))
            (rule "false_right" (formula "61"))
            (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0"))
            (rule "mul_literals" (formula "26") (term "1,0,0,1,0"))
            (rule "add_literals" (formula "26") (term "0,0,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0"))
            (rule "mul_literals" (formula "25") (term "1,0,0,1,0"))
            (rule "add_literals" (formula "25") (term "0,0,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "24") (term "0"))
            (rule "mul_literals" (formula "24") (term "1,0,0,0"))
            (rule "add_literals" (formula "24") (term "0,0,0"))
            (rule "sortsDisjointModuloNull" (formula "59"))
            (rule "replace_known_right" (formula "59") (term "0") (ifseqformula "64"))
            (rule "concrete_and_2" (formula "59"))
            (rule "false_right" (formula "59"))
            (rule "sortsDisjointModuloNull" (formula "58"))
            (rule "replace_known_right" (formula "58") (term "1") (ifseqformula "64"))
            (rule "concrete_and_4" (formula "58"))
            (rule "false_right" (formula "58"))
            (rule "inEqSimp_commuteLeq" (formula "40"))
            (rule "inEqSimp_commuteLeq" (formula "37") (term "0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "31") (term "0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "29"))
            (rule "inEqSimp_ltToLeq" (formula "37") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "37") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "37") (term "0,1,0,0,1,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "31") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "37") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "37") (term "0,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "31") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "31") (term "0,0,0,1,0,0"))
            (rule "inEqSimp_homoInEq0" (formula "28"))
            (rule "polySimp_mulComm0" (formula "28") (term "1,0"))
            (rule "polySimp_rightDist" (formula "28") (term "1,0"))
            (rule "polySimp_mulComm0" (formula "28") (term "0,1,0"))
            (rule "polySimp_addAssoc" (formula "28") (term "0"))
            (rule "applyEq" (formula "24") (term "0,1") (ifseqformula "23"))
            (rule "applyEq" (formula "25") (term "0,1") (ifseqformula "23"))
            (rule "applyEq" (formula "30") (term "1") (ifseqformula "23"))
            (rule "applyEq" (formula "26") (term "0,1") (ifseqformula "23"))
            (rule "applyEq" (formula "27") (term "0,1") (ifseqformula "23"))
            (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0"))
            (rule "mul_literals" (formula "26") (term "1,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0"))
            (rule "mul_literals" (formula "25") (term "1,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0"))
            (rule "mul_literals" (formula "24") (term "1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "37") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "37") (term "1,1,0,0"))
            (rule "mul_literals" (formula "37") (term "0,1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "37") (term "1,1,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "31") (term "1,1,0,0"))
            (rule "mul_literals" (formula "31") (term "0,1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "28"))
            (rule "polySimp_mulLiterals" (formula "28") (term "0"))
            (rule "polySimp_elimOne" (formula "28") (term "0"))
            (rule "inEqSimp_exactShadow3" (formula "29") (ifseqformula "30"))
            (rule "times_zero_1" (formula "29") (term "0,0"))
            (rule "add_zero_left" (formula "29") (term "0"))
            (rule "expand_divJint" (formula "35") (term "3"))
            (rule "jdiv_axiom_inline" (formula "35") (term "0,3"))
            (rule "mul_literals" (formula "35") (term "0,0,2,0,3"))
            (rule "qeq_literals" (formula "35") (term "0,0,3"))
            (rule "ifthenelse_true" (formula "35") (term "0,3"))
            (rule "div_literals" (formula "35") (term "0,3"))
            (rule "expand_divJint" (formula "34") (term "3"))
            (rule "jdiv_axiom_inline" (formula "34") (term "0,3"))
            (rule "mul_literals" (formula "34") (term "0,0,2,0,3"))
            (rule "qeq_literals" (formula "34") (term "0,0,3"))
            (rule "ifthenelse_true" (formula "34") (term "0,3"))
            (rule "div_literals" (formula "34") (term "0,3"))
            (rule "expand_divJint" (formula "32") (term "3,1,0"))
            (rule "jdiv_axiom_inline" (formula "32") (term "0,3,1,0"))
            (rule "mul_literals" (formula "32") (term "0,0,2,0,3,1,0"))
            (rule "qeq_literals" (formula "32") (term "0,0,3,1,0"))
            (rule "ifthenelse_true" (formula "32") (term "0,3,1,0"))
            (rule "div_literals" (formula "32") (term "0,3,1,0"))
            (rule "nnf_imp2or" (formula "38") (term "0"))
            (rule "expand_moduloInteger" (formula "35") (term "3"))
            (rule "replace_int_HALFRANGE" (formula "35") (term "0,0,1,3"))
            (rule "replace_int_MIN" (formula "35") (term "0,3"))
            (rule "replace_int_RANGE" (formula "35") (term "1,1,3"))
            (rule "add_literals" (formula "35") (term "0,1,3"))
            (rule "mod_axiom" (formula "35") (term "1,3"))
            (rule "polySimp_mulLiterals" (formula "35") (term "1,1,3"))
            (rule "div_literals" (formula "35") (term "0,1,1,3"))
            (rule "times_zero_2" (formula "35") (term "1,1,3"))
            (rule "add_zero_right" (formula "35") (term "1,3"))
            (rule "add_literals" (formula "35") (term "3"))
            (rule "expand_moduloInteger" (formula "34") (term "3"))
            (rule "replace_int_RANGE" (formula "34") (term "1,1,3"))
            (rule "replace_int_MIN" (formula "34") (term "0,3"))
            (rule "replace_int_HALFRANGE" (formula "34") (term "0,0,1,3"))
            (rule "add_literals" (formula "34") (term "0,1,3"))
            (rule "mod_axiom" (formula "34") (term "1,3"))
            (rule "polySimp_mulLiterals" (formula "34") (term "1,1,3"))
            (rule "div_literals" (formula "34") (term "0,1,1,3"))
            (rule "times_zero_2" (formula "34") (term "1,1,3"))
            (rule "add_zero_right" (formula "34") (term "1,3"))
            (rule "add_literals" (formula "34") (term "3"))
            (rule "expand_moduloInteger" (formula "32") (term "3,1,0"))
            (rule "replace_int_HALFRANGE" (formula "32") (term "0,0,1,3,1,0"))
            (rule "replace_int_MIN" (formula "32") (term "0,3,1,0"))
            (rule "replace_int_RANGE" (formula "32") (term "1,1,3,1,0"))
            (rule "add_literals" (formula "32") (term "0,1,3,1,0"))
            (rule "mod_axiom" (formula "32") (term "1,3,1,0"))
            (rule "polySimp_mulLiterals" (formula "32") (term "1,1,3,1,0"))
            (rule "div_literals" (formula "32") (term "0,1,1,3,1,0"))
            (rule "times_zero_2" (formula "32") (term "1,1,3,1,0"))
            (rule "add_zero_right" (formula "32") (term "1,3,1,0"))
            (rule "add_literals" (formula "32") (term "3,1,0"))
            (rule "nnf_notAnd" (formula "38") (term "0,0"))
            (rule "inEqSimp_notGeq" (formula "38") (term "0,0,0"))
            (rule "times_zero_1" (formula "38") (term "1,0,0,0,0,0"))
            (rule "add_literals" (formula "38") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0,0"))
            (rule "mul_literals" (formula "38") (term "1,0,0,0"))
            (rule "inEqSimp_notLeq" (formula "38") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "38") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "38") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "38") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "38") (term "0,0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "38") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "38") (term "1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1,0,0"))
            (rule "mul_literals" (formula "38") (term "0,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "38") (term "1,1,1,0,0"))
            (rule "Class_invariant_axiom_for_java_util_TimSort" (formula "51") (inst "i=i") (inst "i_0=i_0") (inst "i_1=i_1") (ifseqformula "4"))
            (rule "replaceKnownSelect_taclet0_0" (formula "51") (term "0,0,0,1"))
            (rule "replaceKnownAuxiliaryConstant_taclet0_1" (formula "51") (term "0,0,0,1"))
            (rule "insert_constant_value" (formula "51") (term "0,3,1,0,0,0,1,0"))
            (rule "insert_constant_value" (formula "51") (term "0,3,1,0,0,0,0,1,0"))
            (rule "insert_constant_value" (formula "51") (term "0,3,1,0,1,0,0,0,0,0,0,1,0"))
            (rule "replaceKnownSelect_taclet0_0" (formula "51") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0_1" (formula "51") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0"))
            (rule "replaceKnownSelect_taclet0_0" (formula "51") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0_1" (formula "51") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0"))
            (rule "replaceKnownSelect_taclet0_0" (formula "51") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0_1" (formula "51") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0"))
            (rule "replaceKnownSelect_taclet0_0" (formula "51") (term "1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0_1" (formula "51") (term "1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0"))
            (rule "expand_inInt" (formula "51") (term "1,1"))
            (rule "replace_int_MAX" (formula "51") (term "1,0,1,1"))
            (rule "replace_int_MIN" (formula "51") (term "0,1,1,1"))
            (rule "andLeft" (formula "51"))
            (rule "andLeft" (formula "52"))
            (rule "andLeft" (formula "51"))
            (rule "andLeft" (formula "54"))
            (rule "andLeft" (formula "51"))
            (rule "andLeft" (formula "53"))
            (rule "notLeft" (formula "52"))
            (rule "andLeft" (formula "51"))
            (rule "andLeft" (formula "53"))
            (rule "notLeft" (formula "51"))
            (rule "notLeft" (formula "51"))
            (rule "andLeft" (formula "51"))
            (rule "andLeft" (formula "51"))
            (rule "andLeft" (formula "51"))
            (rule "andLeft" (formula "51"))
            (rule "andLeft" (formula "51"))
            (rule "andLeft" (formula "51"))
            (rule "andLeft" (formula "52"))
            (rule "andLeft" (formula "51"))
            (rule "andLeft" (formula "51"))
            (rule "andLeft" (formula "51"))
            (rule "andLeft" (formula "51"))
            (rule "andLeft" (formula "51"))
            (rule "andLeft" (formula "51"))
            (rule "andLeft" (formula "51"))
            (rule "notLeft" (formula "53"))
            (rule "notLeft" (formula "52"))
            (rule "andLeft" (formula "51"))
            (rule "notLeft" (formula "52"))
            (rule "andLeft" (formula "51"))
            (rule "andLeft" (formula "51"))
            (rule "notLeft" (formula "53"))
            (rule "andLeft" (formula "51"))
            (rule "notLeft" (formula "53"))
            (rule "andLeft" (formula "51"))
            (rule "notLeft" (formula "53"))
            (rule "andLeft" (formula "51"))
            (rule "notLeft" (formula "53"))
            (rule "notLeft" (formula "52"))
            (rule "eqSymm" (formula "65") (term "1,0"))
            (rule "translateJavaDivInt" (formula "62") (term "3"))
            (rule "translateJavaDivInt" (formula "61") (term "3"))
            (rule "translateJavaDivInt" (formula "59") (term "3,1,0"))
            (rule "eqSymm" (formula "81"))
            (rule "eqSymm" (formula "80"))
            (rule "eqSymm" (formula "51"))
            (rule "eqSymm" (formula "75"))
            (rule "polySimp_elimSub" (formula "65") (term "1,1,0,0"))
            (rule "mul_literals" (formula "65") (term "1,1,1,0,0"))
            (rule "polySimp_elimSub" (formula "63") (term "2"))
            (rule "mul_literals" (formula "63") (term "1,2"))
            (rule "polySimp_elimSub" (formula "62") (term "2"))
            (rule "mul_literals" (formula "62") (term "1,2"))
            (rule "polySimp_elimSub" (formula "61") (term "2"))
            (rule "mul_literals" (formula "61") (term "1,2"))
            (rule "polySimp_elimSub" (formula "60") (term "2"))
            (rule "mul_literals" (formula "60") (term "1,2"))
            (rule "polySimp_elimSub" (formula "59") (term "1,1,0,0"))
            (rule "mul_literals" (formula "59") (term "1,1,1,0,0"))
            (rule "polySimp_addComm0" (formula "65") (term "0,2,0,1,0"))
            (rule "polySimp_addComm0" (formula "65") (term "1,1,0,0"))
            (rule "polySimp_addComm0" (formula "63") (term "2"))
            (rule "polySimp_addComm0" (formula "62") (term "2"))
            (rule "polySimp_addComm0" (formula "61") (term "2"))
            (rule "polySimp_addComm0" (formula "60") (term "2"))
            (rule "polySimp_addComm0" (formula "59") (term "1,1,0,0"))
            (rule "sortsDisjointModuloNull" (formula "77"))
            (rule "replace_known_right" (formula "77") (term "0") (ifseqformula "79"))
            (rule "concrete_and_2" (formula "77"))
            (rule "false_right" (formula "77"))
            (rule "sortsDisjointModuloNull" (formula "76"))
            (rule "replace_known_right" (formula "76") (term "1") (ifseqformula "81"))
            (rule "concrete_and_4" (formula "76"))
            (rule "false_right" (formula "76"))
            (rule "inEqSimp_ltToLeq" (formula "54") (term "1,0"))
            (rule "mul_literals" (formula "54") (term "1,0,0,1,0"))
            (rule "add_literals" (formula "54") (term "0,0,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "53") (term "1,0"))
            (rule "mul_literals" (formula "53") (term "1,0,0,1,0"))
            (rule "add_literals" (formula "53") (term "0,0,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "52") (term "0"))
            (rule "mul_literals" (formula "52") (term "1,0,0,0"))
            (rule "add_literals" (formula "52") (term "0,0,0"))
            (rule "sortsDisjointModuloNull" (formula "79"))
            (rule "replace_known_right" (formula "79") (term "1") (ifseqformula "90"))
            (rule "concrete_and_4" (formula "79"))
            (rule "false_right" (formula "79"))
            (rule "sortsDisjointModuloNull" (formula "78"))
            (rule "replace_known_right" (formula "78") (term "0") (ifseqformula "81"))
            (rule "concrete_and_2" (formula "78"))
            (rule "false_right" (formula "78"))
            (rule "inEqSimp_commuteLeq" (formula "68"))
            (rule "inEqSimp_commuteLeq" (formula "65") (term "0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "59") (term "0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "58"))
            (rule "inEqSimp_commuteLeq" (formula "57"))
            (rule "inEqSimp_ltToLeq" (formula "65") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "65") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "65") (term "0,1,0,0,1,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "59") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "59") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "59") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "65") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "65") (term "0,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "59") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "59") (term "0,0,0,1,0,0"))
            (rule "inEqSimp_homoInEq0" (formula "56"))
            (rule "polySimp_mulComm0" (formula "56") (term "1,0"))
            (rule "polySimp_rightDist" (formula "56") (term "1,0"))
            (rule "polySimp_mulComm0" (formula "56") (term "0,1,0"))
            (rule "polySimp_addAssoc" (formula "56") (term "0"))
            (rule "polySimp_addComm0" (formula "56") (term "0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "54") (term "1,0"))
            (rule "mul_literals" (formula "54") (term "1,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "1,0"))
            (rule "mul_literals" (formula "53") (term "1,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "0"))
            (rule "mul_literals" (formula "52") (term "1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "65") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "65") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "65") (term "1,1,0,0"))
            (rule "mul_literals" (formula "65") (term "0,1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "65") (term "1,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "65") (term "1,1,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "59") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "59") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "59") (term "1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "59") (term "1,1,1,0,0"))
            (rule "mul_literals" (formula "59") (term "0,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "59") (term "1,1,1,0,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "56"))
            (rule "polySimp_mulLiterals" (formula "56") (term "0"))
            (rule "polySimp_elimOne" (formula "56") (term "0"))
            (rule "pullOutSelect" (formula "67") (term "0") (inst "selectSK=java_util_TimSort_minGallop_1"))
            (rule "applyEq" (formula "69") (term "0") (ifseqformula "67"))
            (rule "simplifySelectOfAnonEQ" (formula "67") (ifseqformula "43"))
            (rule "elementOfFreshLocs" (formula "67") (term "1,0,0"))
            (rule "equalUnique" (formula "67") (term "0,1,0,0,0"))
            (rule "concrete_not_2" (formula "67") (term "1,0,0,0"))
            (rule "concrete_and_3" (formula "67") (term "0,0,0"))
            (rule "replace_known_right" (formula "67") (term "0,0,1,0,0") (ifseqformula "90"))
            (rule "concrete_not_2" (formula "67") (term "0,1,0,0"))
            (rule "concrete_and_1" (formula "67") (term "1,0,0"))
            (rule "replace_known_left" (formula "67") (term "0,1,0,0") (ifseqformula "3"))
            (rule "concrete_not_1" (formula "67") (term "1,0,0"))
            (rule "concrete_or_4" (formula "67") (term "0,0"))
            (rule "elementOfSingleton" (formula "67") (term "0,0"))
            (rule "eqClose" (formula "67") (term "0,0,0"))
            (rule "concrete_and_1" (formula "67") (term "0,0"))
            (rule "equalUnique" (formula "67") (term "0,0"))
            (rule "ifthenelse_false" (formula "67") (term "0"))
            (rule "applyEqReverse" (formula "68") (term "0") (ifseqformula "67"))
            (rule "applyEqReverse" (formula "68") (term "0") (ifseqformula "67"))
            (rule "hideAuxiliaryEq" (formula "67"))
            (rule "pullOutSelect" (formula "78") (term "0") (inst "selectSK=java_util_TimSort_runLen_1"))
            (rule "applyEq" (formula "64") (term "1") (ifseqformula "1"))
            (rule "applyEq" (formula "56") (term "0,0,1") (ifseqformula "1"))
            (rule "applyEq" (formula "60") (term "1,1,0") (ifseqformula "1"))
            (rule "applyEq" (formula "74") (term "0") (ifseqformula "1"))
            (rule "applyEq" (formula "55") (term "0,0,1") (ifseqformula "1"))
            (rule "applyEq" (formula "62") (term "1") (ifseqformula "1"))
            (rule "applyEq" (formula "53") (term "0,0,1") (ifseqformula "1"))
            (rule "applyEq" (formula "57") (term "1,2,0") (ifseqformula "1"))
            (rule "applyEq" (formula "66") (term "1,1,1,1,0") (ifseqformula "1"))
            (rule "applyEq" (formula "61") (term "1") (ifseqformula "1"))
            (rule "applyEq" (formula "59") (term "0,0") (ifseqformula "1"))
            (rule "applyEq" (formula "52") (term "0,0") (ifseqformula "1"))
            (rule "applyEq" (formula "54") (term "0,0,1") (ifseqformula "1"))
            (rule "applyEq" (formula "63") (term "1") (ifseqformula "1"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "44"))
            (rule "elementOfFreshLocs" (formula "1") (term "1,0,0"))
            (rule "equalUnique" (formula "1") (term "0,1,0,0,0"))
            (rule "concrete_not_2" (formula "1") (term "1,0,0,0"))
            (rule "concrete_and_3" (formula "1") (term "0,0,0"))
            (rule "eqSymm" (formula "74"))
            (rule "eqSymm" (formula "52"))
            (rule "replace_known_left" (formula "1") (term "0,1,1,0,0") (ifseqformula "4"))
            (rule "concrete_not_1" (formula "1") (term "1,1,0,0"))
            (rule "concrete_and_4" (formula "1") (term "1,0,0"))
            (rule "concrete_or_4" (formula "1") (term "0,0"))
            (rule "polySimp_addComm0" (formula "66") (term "1,1,0"))
            (rule "elementOfSingleton" (formula "1") (term "0,0"))
            (rule "eqClose" (formula "1") (term "0,0,0"))
            (rule "concrete_and_1" (formula "1") (term "0,0"))
            (rule "equalUnique" (formula "1") (term "0,0"))
            (rule "ifthenelse_false" (formula "1") (term "0"))
            (rule "applyEqReverse" (formula "66") (term "1,0,1,1,0") (ifseqformula "1"))
            (rule "applyEqReverse" (formula "64") (term "1") (ifseqformula "1"))
            (rule "applyEqReverse" (formula "79") (term "0") (ifseqformula "1"))
            (rule "applyEqReverse" (formula "56") (term "0,0,1") (ifseqformula "1"))
            (rule "applyEqReverse" (formula "55") (term "0,0,1") (ifseqformula "1"))
            (rule "applyEqReverse" (formula "57") (term "1,2,0") (ifseqformula "1"))
            (rule "applyEqReverse" (formula "61") (term "1") (ifseqformula "1"))
            (rule "applyEqReverse" (formula "53") (term "0,0,1") (ifseqformula "1"))
            (rule "applyEqReverse" (formula "74") (term "1") (ifseqformula "1"))
            (rule "applyEqReverse" (formula "52") (term "0,1") (ifseqformula "1"))
            (rule "applyEqReverse" (formula "59") (term "0,0") (ifseqformula "1"))
            (rule "applyEqReverse" (formula "63") (term "1") (ifseqformula "1"))
            (rule "applyEqReverse" (formula "62") (term "1") (ifseqformula "1"))
            (rule "applyEqReverse" (formula "54") (term "0,0,1") (ifseqformula "1"))
            (rule "applyEqReverse" (formula "60") (term "1,1,0") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "inEqSimp_commuteGeq" (formula "58"))
            (rule "applyEq" (formula "52") (term "0,1") (ifseqformula "23"))
            (rule "applyEq" (formula "55") (term "0,1") (ifseqformula "23"))
            (rule "applyEq" (formula "53") (term "0,1") (ifseqformula "23"))
            (rule "applyEq" (formula "58") (term "1") (ifseqformula "23"))
            (rule "applyEq" (formula "54") (term "0,1") (ifseqformula "23"))
            (rule "applyEq" (formula "51") (term "1") (ifseqformula "23"))
            (rule "pullOutSelect" (formula "64") (term "1") (inst "selectSK=java_util_TimSort_runBase_1"))
            (rule "applyEq" (formula "56") (term "1,0,0,1") (ifseqformula "64"))
            (rule "applyEq" (formula "77") (term "0") (ifseqformula "64"))
            (rule "applyEq" (formula "51") (term "0,0") (ifseqformula "64"))
            (rule "applyEq" (formula "74") (term "0") (ifseqformula "64"))
            (rule "applyEq" (formula "66") (term "1,0,1,0") (ifseqformula "64"))
            (rule "applyEq" (formula "66") (term "1,1,1,1,0") (ifseqformula "64"))
            (rule "simplifySelectOfAnonEQ" (formula "64") (ifseqformula "43"))
            (rule "elementOfFreshLocs" (formula "64") (term "1,0,0"))
            (rule "equalUnique" (formula "64") (term "0,1,0,0,0"))
            (rule "concrete_not_2" (formula "64") (term "1,0,0,0"))
            (rule "concrete_and_3" (formula "64") (term "0,0,0"))
            (rule "eqSymm" (formula "51"))
            (rule "eqSymm" (formula "74"))
            (rule "replace_known_right" (formula "64") (term "0,0,1,0,0") (ifseqformula "87"))
            (rule "concrete_not_2" (formula "64") (term "0,1,0,0"))
            (rule "concrete_and_1" (formula "64") (term "1,0,0"))
            (rule "replace_known_left" (formula "64") (term "0,1,0,0") (ifseqformula "3"))
            (rule "concrete_not_1" (formula "64") (term "1,0,0"))
            (rule "concrete_or_4" (formula "64") (term "0,0"))
            (rule "polySimp_addComm0" (formula "66") (term "1,1,0"))
            (rule "elementOfSingleton" (formula "64") (term "0,0"))
            (rule "eqClose" (formula "64") (term "0,0,0"))
            (rule "concrete_and_1" (formula "64") (term "0,0"))
            (rule "equalUnique" (formula "64") (term "0,0"))
            (rule "ifthenelse_false" (formula "64") (term "0"))
            (rule "applyEqReverse" (formula "66") (term "1,0,1,0") (ifseqformula "64"))
            (rule "applyEqReverse" (formula "74") (term "1") (ifseqformula "64"))
            (rule "applyEqReverse" (formula "51") (term "0,1") (ifseqformula "64"))
            (rule "eqClose" (formula "51"))
            (rule "true_left" (formula "51"))
            (rule "applyEqReverse" (formula "65") (term "1,0,1,1,0") (ifseqformula "63"))
            (rule "applyEqReverse" (formula "55") (term "1,0,0,1") (ifseqformula "63"))
            (rule "applyEqReverse" (formula "75") (term "0") (ifseqformula "63"))
            (rule "applyEqReverse" (formula "64") (term "1") (ifseqformula "63"))
            (rule "hideAuxiliaryEq" (formula "63"))
            (rule "pullOutSelect" (formula "74") (term "0") (inst "selectSK=java_util_TimSort_c_1"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "44"))
            (rule "elementOfFreshLocs" (formula "1") (term "1,0,0"))
            (rule "equalUnique" (formula "1") (term "0,1,0,0,0"))
            (rule "concrete_not_2" (formula "1") (term "1,0,0,0"))
            (rule "concrete_and_3" (formula "1") (term "0,0,0"))
            (rule "replace_known_right" (formula "1") (term "0,0,1,0,0") (ifseqformula "84"))
            (rule "concrete_not_2" (formula "1") (term "0,1,0,0"))
            (rule "concrete_and_1" (formula "1") (term "1,0,0"))
            (rule "replace_known_left" (formula "1") (term "0,1,0,0") (ifseqformula "4"))
            (rule "concrete_not_1" (formula "1") (term "1,0,0"))
            (rule "concrete_or_4" (formula "1") (term "0,0"))
            (rule "elementOfSingleton" (formula "1") (term "0,0"))
            (rule "eqClose" (formula "1") (term "0,0,0"))
            (rule "concrete_and_1" (formula "1") (term "0,0"))
            (rule "equalUnique" (formula "1") (term "0,0"))
            (rule "ifthenelse_false" (formula "1") (term "0"))
            (rule "applyEqReverse" (formula "75") (term "0") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "pullOutSelect" (formula "54") (term "0,0,0") (inst "selectSK=java_util_TimSort_a_1"))
            (rule "applyEq" (formula "52") (term "0,0,1,0") (ifseqformula "54"))
            (rule "applyEq" (formula "52") (term "0,0,0,0") (ifseqformula "54"))
            (rule "applyEq" (formula "74") (term "0") (ifseqformula "54"))
            (rule "applyEq" (formula "53") (term "0,0,1,0") (ifseqformula "54"))
            (rule "applyEq" (formula "73") (term "0") (ifseqformula "54"))
            (rule "applyEq" (formula "53") (term "0,0,0,0") (ifseqformula "54"))
            (rule "applyEq" (formula "56") (term "0,1,1") (ifseqformula "54"))
            (rule "applyEq" (formula "51") (term "0,0,0") (ifseqformula "54"))
            (rule "simplifySelectOfAnonEQ" (formula "54") (ifseqformula "43"))
            (rule "elementOfFreshLocs" (formula "54") (term "1,0,0"))
            (rule "equalUnique" (formula "54") (term "0,1,0,0,0"))
            (rule "concrete_not_2" (formula "54") (term "1,0,0,0"))
            (rule "concrete_and_3" (formula "54") (term "0,0,0"))
            (rule "eqSymm" (formula "73"))
            (rule "replace_known_right" (formula "54") (term "0,0,1,0,0") (ifseqformula "83"))
            (rule "concrete_not_2" (formula "54") (term "0,1,0,0"))
            (rule "concrete_and_1" (formula "54") (term "1,0,0"))
            (rule "replace_known_left" (formula "54") (term "0,1,0,0") (ifseqformula "3"))
            (rule "concrete_not_1" (formula "54") (term "1,0,0"))
            (rule "concrete_or_4" (formula "54") (term "0,0"))
            (rule "polySimp_addComm0" (formula "56") (term "1"))
            (rule "elementOfSingleton" (formula "54") (term "0,0"))
            (rule "eqClose" (formula "54") (term "0,0,0"))
            (rule "concrete_and_1" (formula "54") (term "0,0"))
            (rule "equalUnique" (formula "54") (term "0,0"))
            (rule "ifthenelse_false" (formula "54") (term "0"))
            (rule "applyEqReverse" (formula "56") (term "0,0,1") (ifseqformula "54"))
            (rule "applyEqReverse" (formula "74") (term "0") (ifseqformula "54"))
            (rule "applyEqReverse" (formula "52") (term "0,0,1,0") (ifseqformula "54"))
            (rule "applyEqReverse" (formula "53") (term "0,0,0,0") (ifseqformula "54"))
            (rule "applyEqReverse" (formula "52") (term "0,0,0,0") (ifseqformula "54"))
            (rule "applyEqReverse" (formula "72") (term "1") (ifseqformula "53"))
            (rule "applyEqReverse" (formula "51") (term "0,0,0") (ifseqformula "53"))
            (rule "applyEqReverse" (formula "51") (term "0,0,1,0") (ifseqformula "52"))
            (rule "applyEqReverse" (formula "52") (term "0,0,0") (ifseqformula "51"))
            (rule "hideAuxiliaryEq" (formula "51"))
            (rule "eqSymm" (formula "68"))
            (rule "pullOutSelect" (formula "58") (term "1,2") (inst "selectSK=java_util_TimSort_stackSize_1"))
            (rule "applyEq" (formula "55") (term "1,2") (ifseqformula "58"))
            (rule "applyEq" (formula "56") (term "1,2") (ifseqformula "58"))
            (rule "applyEq" (formula "52") (term "0") (ifseqformula "58"))
            (rule "applyEq" (formula "57") (term "1,2") (ifseqformula "58"))
            (rule "applyEq" (formula "61") (term "1,1,1,0,0") (ifseqformula "58"))
            (rule "applyEq" (formula "51") (term "1,0") (ifseqformula "58"))
            (rule "applyEq" (formula "54") (term "1,1,1,0,0") (ifseqformula "58"))
            (rule "applyEq" (formula "53") (term "0") (ifseqformula "58"))
            (rule "simplifySelectOfAnonEQ" (formula "58") (ifseqformula "43"))
            (rule "elementOfFreshLocs" (formula "58") (term "1,0,0"))
            (rule "equalUnique" (formula "58") (term "0,1,0,0,0"))
            (rule "concrete_not_2" (formula "58") (term "1,0,0,0"))
            (rule "concrete_and_3" (formula "58") (term "0,0,0"))
            (rule "replace_known_left" (formula "58") (term "0,1,1,0,0") (ifseqformula "3"))
            (rule "concrete_not_1" (formula "58") (term "1,1,0,0"))
            (rule "concrete_and_4" (formula "58") (term "1,0,0"))
            (rule "concrete_or_4" (formula "58") (term "0,0"))
            (rule "elementOfSingleton" (formula "58") (term "0,0"))
            (rule "eqClose" (formula "58") (term "0,0,0"))
            (rule "concrete_and_1" (formula "58") (term "0,0"))
            (rule "equalUnique" (formula "58") (term "0,0"))
            (rule "ifthenelse_false" (formula "58") (term "0"))
            (rule "applyEqReverse" (formula "61") (term "1,1,1,0,0") (ifseqformula "58"))
            (rule "applyEqReverse" (formula "51") (term "1,0") (ifseqformula "58"))
            (rule "applyEqReverse" (formula "55") (term "1,2") (ifseqformula "58"))
            (rule "applyEqReverse" (formula "52") (term "0") (ifseqformula "58"))
            (rule "applyEqReverse" (formula "52") (term "0") (ifseqformula "57"))
            (rule "applyEqReverse" (formula "55") (term "1,2") (ifseqformula "56"))
            (rule "applyEqReverse" (formula "57") (term "1,2") (ifseqformula "56"))
            (rule "applyEqReverse" (formula "54") (term "1,2") (ifseqformula "56"))
            (rule "applyEqReverse" (formula "52") (term "1,1,1,0,0") (ifseqformula "56"))
            (rule "hideAuxiliaryEq" (formula "56"))
            (rule "pullOutSelect" (formula "51") (term "0,1,1") (inst "selectSK=arr_1"))
            (rule "simplifySelectOfAnonEQ" (formula "51") (ifseqformula "43"))
            (rule "elementOfFreshLocs" (formula "51") (term "1,0,0"))
            (rule "equalUnique" (formula "51") (term "0,1,0,0,0"))
            (rule "concrete_not_2" (formula "51") (term "1,0,0,0"))
            (rule "concrete_and_3" (formula "51") (term "0,0,0"))
            (rule "replace_known_right" (formula "51") (term "0,0,1,0,0") (ifseqformula "72"))
            (rule "concrete_not_2" (formula "51") (term "0,1,0,0"))
            (rule "concrete_and_1" (formula "51") (term "1,0,0"))
            (rule "polySimp_addComm0" (formula "52") (term "1"))
            (rule "elementOfSingleton" (formula "51") (term "0,0,0"))
            (rule "equalUnique" (formula "51") (term "1,0,0,0"))
            (rule "concrete_and_4" (formula "51") (term "0,0,0"))
            (rule "concrete_or_2" (formula "51") (term "0,0"))
            (rule "ifthenelse_negated" (formula "51") (term "0"))
            (rule "nnf_imp2or" (formula "32") (term "0"))
            (rule "commute_or" (formula "1"))
            (rule "expand_divJint" (formula "56") (term "3"))
            (rule "jdiv_axiom_inline" (formula "56") (term "0,3"))
            (rule "div_literals" (formula "56") (term "1,0,3"))
            (rule "mul_literals" (formula "56") (term "0,0,2,0,3"))
            (rule "qeq_literals" (formula "56") (term "0,0,3"))
            (rule "ifthenelse_true" (formula "56") (term "0,3"))
            (rule "expand_divJint" (formula "55") (term "3"))
            (rule "jdiv_axiom_inline" (formula "55") (term "0,3"))
            (rule "div_literals" (formula "55") (term "1,0,3"))
            (rule "mul_literals" (formula "55") (term "0,0,2,0,3"))
            (rule "qeq_literals" (formula "55") (term "0,0,3"))
            (rule "ifthenelse_true" (formula "55") (term "0,3"))
            (rule "expand_divJint" (formula "53") (term "3,1,0"))
            (rule "jdiv_axiom_inline" (formula "53") (term "0,3,1,0"))
            (rule "div_literals" (formula "53") (term "1,0,3,1,0"))
            (rule "mul_literals" (formula "53") (term "0,0,2,0,3,1,0"))
            (rule "qeq_literals" (formula "53") (term "0,0,3,1,0"))
            (rule "ifthenelse_true" (formula "53") (term "0,3,1,0"))
            (rule "cut_direct" (formula "50") (term "0,0"))
            (branch "CUT: self.tmp = result TRUE"
               (opengoal " ")
            )
            (branch "CUT: self.tmp = result FALSE"
               (rule "concrete_not_2" (formula "50") (term "0"))
               (rule "concrete_impl_1" (formula "50"))
               (rule "notLeft" (formula "50"))
               (rule "cut_direct" (formula "27") (term "0"))
               (branch "CUT: self.a.length >= 119151 TRUE"
                  (opengoal " ")
               )
               (branch "CUT: self.a.length >= 119151 FALSE"
                  (rule "concrete_impl_2" (formula "27"))
                  (rule "true_left" (formula "27"))
                  (rule "inEqSimp_geqRight" (formula "65"))
                  (rule "mul_literals" (formula "1") (term "1,0,0"))
                  (rule "add_literals" (formula "1") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                  (rule "mul_literals" (formula "1") (term "1"))
                  (rule "replace_known_left" (formula "27") (term "1,0") (ifseqformula "1"))
                  (rule "concrete_and_3" (formula "27") (term "0"))
                  (rule "inEqSimp_subsumption0" (formula "19") (ifseqformula "1"))
                  (rule "leq_literals" (formula "19") (term "0"))
                  (rule "concrete_or_1" (formula "19"))
                  (rule "true_left" (formula "19"))
                  (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "1"))
                  (rule "polySimp_rightDist" (formula "22") (term "0,0"))
                  (rule "polySimp_mulComm0" (formula "22") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "22") (term "0"))
                  (rule "polySimp_addComm0" (formula "22") (term "0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "22"))
                  (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                  (rule "polySimp_elimOne" (formula "22") (term "0"))
                  (rule "inEqSimp_subsumption0" (formula "19") (ifseqformula "22"))
                  (rule "inEqSimp_homoInEq0" (formula "19") (term "0"))
                  (rule "polySimp_mulComm0" (formula "19") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "19") (term "1,0,0"))
                  (rule "mul_literals" (formula "19") (term "0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "19") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "19") (term "0,0,0"))
                  (rule "add_literals" (formula "19") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor2b" (formula "19") (term "0,0"))
                  (rule "add_literals" (formula "19") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "19") (term "1,0,0"))
                  (rule "add_zero_right" (formula "19") (term "0,0"))
                  (rule "qeq_literals" (formula "19") (term "0"))
                  (rule "concrete_or_1" (formula "19"))
                  (rule "true_left" (formula "19"))
                  (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "21"))
                  (rule "mul_literals" (formula "15") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "15") (term "0"))
                  (rule "add_literals" (formula "15") (term "0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "15"))
                  (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                  (rule "polySimp_elimOne" (formula "15") (term "0"))
                  (rule "inEqSimp_subsumption0" (formula "14") (ifseqformula "15"))
                  (rule "leq_literals" (formula "14") (term "0"))
                  (rule "concrete_or_1" (formula "14"))
                  (rule "true_left" (formula "14"))
                  (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "21"))
                  (rule "polySimp_rightDist" (formula "17") (term "0,0"))
                  (rule "polySimp_mulAssoc" (formula "17") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "17") (term "0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "17") (term "0,0,0"))
                  (rule "polySimp_elimOne" (formula "17") (term "0,0,0"))
                  (rule "polySimp_addAssoc" (formula "17") (term "0"))
                  (rule "polySimp_addComm1" (formula "17") (term "0,0"))
                  (rule "polySimp_pullOutFactor3b" (formula "17") (term "0"))
                  (rule "polySimp_mulLiterals" (formula "17") (term "1,0"))
                  (rule "polySimp_addComm0" (formula "17") (term "0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "17"))
                  (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                  (rule "inEqSimp_subsumption2" (formula "16") (ifseqformula "17"))
                  (rule "eq_and" (formula "16") (term "0,0"))
                  (rule "greater_literals" (formula "16") (term "0,0"))
                  (rule "concrete_and_1" (formula "16") (term "0"))
                  (rule "polySimp_rightDist" (formula "16") (term "0,0"))
                  (rule "mul_literals" (formula "16") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "16") (term "1,0"))
                  (rule "mul_literals" (formula "16") (term "0,1,0"))
                  (rule "inEqSimp_homoInEq0" (formula "16") (term "0"))
                  (rule "polySimp_mulComm0" (formula "16") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "16") (term "1,0,0"))
                  (rule "mul_literals" (formula "16") (term "0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "16") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "16") (term "0,0,0"))
                  (rule "add_literals" (formula "16") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "16") (term "0,0"))
                  (rule "add_literals" (formula "16") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "16") (term "1,0,0"))
                  (rule "add_zero_right" (formula "16") (term "0,0"))
                  (rule "qeq_literals" (formula "16") (term "0"))
                  (rule "concrete_or_1" (formula "16"))
                  (rule "true_left" (formula "16"))
                  (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "14"))
                  (rule "polySimp_rightDist" (formula "13") (term "0,0"))
                  (rule "mul_literals" (formula "13") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "13") (term "0"))
                  (rule "add_literals" (formula "13") (term "0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "13"))
                  (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                  (rule "polySimp_elimOne" (formula "13") (term "0"))
                  (rule "inEqSimp_subsumption0" (formula "11") (ifseqformula "13"))
                  (rule "leq_literals" (formula "11") (term "0"))
                  (rule "concrete_or_1" (formula "11"))
                  (rule "true_left" (formula "11"))
                  (rule "inEqSimp_exactShadow2" (formula "7") (ifseqformula "16"))
                  (rule "mul_literals" (formula "7") (term "1,0,0,1"))
                  (rule "greater_literals" (formula "7") (term "0"))
                  (rule "concrete_impl_1" (formula "7"))
                  (rule "mul_literals" (formula "7") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "7") (term "0"))
                  (rule "add_literals" (formula "7") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                  (rule "mul_literals" (formula "7") (term "1"))
                  (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "11"))
                  (rule "leq_literals" (formula "7") (term "0"))
                  (rule "concrete_or_1" (formula "7"))
                  (rule "true_left" (formula "7"))
                  (rule "inEqSimp_exactShadow2" (formula "13") (ifseqformula "16"))
                  (rule "greater_literals" (formula "13") (term "0"))
                  (rule "concrete_impl_1" (formula "13"))
                  (rule "polySimp_rightDist" (formula "13") (term "1,0,0"))
                  (rule "mul_literals" (formula "13") (term "0,1,0,0"))
                  (rule "polySimp_rightDist" (formula "13") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0"))
                  (rule "mul_literals" (formula "13") (term "0,0,0"))
                  (rule "polySimp_addAssoc" (formula "13") (term "0"))
                  (rule "polySimp_addComm1" (formula "13") (term "0,0"))
                  (rule "add_literals" (formula "13") (term "0,0,0"))
                  (rule "polySimp_pullOutFactor2b" (formula "13") (term "0"))
                  (rule "add_literals" (formula "13") (term "1,1,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "13"))
                  (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                  (rule "polySimp_elimOne" (formula "13") (term "0"))
                  (rule "cut_direct" (formula "25") (term "0,0"))
                  (branch "CUT: self.a.length >= 120 TRUE"
                     (opengoal " ")
                  )
                  (branch "CUT: self.a.length >= 120 FALSE"
                     (rule "concrete_and_2" (formula "25") (term "0"))
                     (rule "concrete_impl_2" (formula "25"))
                     (rule "true_left" (formula "25"))
                     (rule "inEqSimp_geqRight" (formula "64"))
                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                     (rule "mul_literals" (formula "1") (term "1"))
                     (rule "replace_known_left" (formula "25") (term "0") (ifseqformula "1"))
                     (rule "concrete_impl_1" (formula "25"))
                     (rule "applyEq" (formula "28") (term "0") (ifseqformula "25"))
                     (rule "qeq_literals" (formula "28"))
                     (rule "true_left" (formula "28"))
                     (rule "applyEq" (formula "29") (term "1") (ifseqformula "25"))
                     (rule "applyEq" (formula "26") (term "0,1") (ifseqformula "25"))
                     (rule "equal_literals" (formula "26") (term "1"))
                     (rule "concrete_impl_3" (formula "26"))
                     (rule "notLeft" (formula "26"))
                     (rule "inEqSimp_geqRight" (formula "63"))
                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0"))
                     (rule "applyEq" (formula "25") (term "1") (ifseqformula "26"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                     (rule "mul_literals" (formula "1") (term "1"))
                     (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "1"))
                     (rule "leq_literals" (formula "3") (term "0"))
                     (rule "concrete_or_1" (formula "3"))
                     (rule "true_left" (formula "3"))
                     (rule "inEqSimp_subsumption0" (formula "1") (ifseqformula "2"))
                     (rule "leq_literals" (formula "1") (term "0"))
                     (rule "concrete_or_1" (formula "1"))
                     (rule "true_left" (formula "1"))
                     (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "1"))
                     (rule "polySimp_rightDist" (formula "22") (term "0,0"))
                     (rule "polySimp_mulComm0" (formula "22") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "22") (term "0"))
                     (rule "polySimp_addComm0" (formula "22") (term "0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "22"))
                     (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                     (rule "polySimp_elimOne" (formula "22") (term "0"))
                     (rule "inEqSimp_subsumption0" (formula "21") (ifseqformula "22"))
                     (rule "inEqSimp_homoInEq0" (formula "21") (term "0"))
                     (rule "polySimp_mulComm0" (formula "21") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "21") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "21") (term "0,1,0,0"))
                     (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "21") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "21") (term "0,0,0"))
                     (rule "add_literals" (formula "21") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor2b" (formula "21") (term "0,0"))
                     (rule "add_literals" (formula "21") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "21") (term "1,0,0"))
                     (rule "add_zero_right" (formula "21") (term "0,0"))
                     (rule "qeq_literals" (formula "21") (term "0"))
                     (rule "concrete_or_1" (formula "21"))
                     (rule "true_left" (formula "21"))
                     (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "21"))
                     (rule "polySimp_rightDist" (formula "17") (term "0,0"))
                     (rule "polySimp_mulAssoc" (formula "17") (term "0,0,0"))
                     (opengoal " ")
                  )
               )
            )
         )
      )
   )
   (branch "Exceptional Post (arraycopy)"
      (rule "castDel" (formula "31") (term "1,0,1,0,0,1,1,1,1,1"))
      (rule "castDel" (formula "31") (term "1,1,1,0,0,1,1,1,1,1"))
      (rule "castDel" (formula "31") (term "0,1,0,0,1,1"))
      (rule "expand_inInt" (formula "31") (term "1,0,0,0,1,1,1,1,1"))
      (rule "simplifyUpdate2" (formula "31"))
      (rule "replace_int_MIN" (formula "31") (term "0,1,1,0,0,0,1,1,1,1,1"))
      (rule "replace_int_MAX" (formula "31") (term "1,0,1,0,0,0,1,1,1,1,1"))
      (rule "translateJavaAddInt" (formula "31") (term "0,2,1,0,0,1,1"))
      (rule "translateJavaAddInt" (formula "31") (term "0,2,1,1,0,0,1,1,1,1,1"))
      (rule "translateJavaAddInt" (formula "31") (term "0,2,0,1,0,0,1,1,1,1,1"))
      (rule "translateJavaSubInt" (formula "31") (term "2,1,0,0,1,1"))
      (rule "eqSymm" (formula "31") (term "1,0,0,1,1,1,1,1"))
      (rule "sequentialToParallel2" (formula "34"))
      (rule "simplifyUpdate2" (formula "34"))
      (rule "simplifyUpdate3" (formula "34") (term "1,0"))
      (rule "sequentialToParallel2" (formula "31"))
      (rule "simplifyUpdate3" (formula "31") (term "1,0"))
      (rule "andLeft" (formula "31"))
      (rule "simplifyUpdate2" (formula "31"))
      (rule "simplifyUpdate3" (formula "31") (term "1,0"))
      (rule "parallelWithSkip2" (formula "31") (term "0"))
      (rule "applyOnElementary" (formula "32") (term "1,0"))
      (rule "applyOnPV" (formula "32") (term "0,1,0"))
      (rule "sequentialToParallel2" (formula "32"))
      (rule "simplifyUpdate2" (formula "32"))
      (rule "simplifyUpdate3" (formula "32") (term "1,0"))
      (rule "andLeft" (formula "32"))
      (rule "simplifyUpdate2" (formula "32"))
      (rule "andLeft" (formula "33"))
      (rule "simplifyUpdate2" (formula "34"))
      (rule "andLeft" (formula "32"))
      (rule "simplifyUpdate2" (formula "32"))
      (rule "notLeft" (formula "32"))
      (rule "close" (formula "35") (ifseqformula "34"))
   )
   (branch "Pre (arraycopy)"
      (rule "instanceof_static_type" (formula "32") (term "0,1,0,0,0,0,0,0,0,0,0,1,1"))
      (rule "instanceof_static_type" (formula "32") (term "0,1,1,0,0,0,0,0,0,0,0,1,1"))
      (rule "boolean_equal" (formula "32") (term "1,0,0,0,0,0,0,0,0,0,1,1"))
      (rule "boolean_equal" (formula "32") (term "1,1,0,0,0,0,0,0,0,0,1,1"))
      (rule "concrete_and_3" (formula "32") (term "0,0,0,0,0,0,0,0,0,1,1"))
      (rule "concrete_and_3" (formula "32") (term "1,0,0,0,0,0,0,0,0,1,1"))
      (rule "castDel" (formula "32") (term "0,1,1,0,0,0,0,1,1"))
      (rule "castDel" (formula "32") (term "0,1,1,0,0,0,0,0,0,1,1"))
      (rule "castDel" (formula "32") (term "1,1,1,0,1,0,0,1,1"))
      (rule "expand_inInt" (formula "32") (term "1,0,1,1,1"))
      (rule "qeq_literals" (formula "32") (term "1,0,0,0,0,0,1,1"))
      (rule "concrete_and_3" (formula "32") (term "0,0,0,0,0,1,1"))
      (rule "expand_inInt" (formula "32") (term "1,0,0,0,1,1,1"))
      (rule "expand_inInt" (formula "32") (term "1,1,1,1"))
      (rule "expand_inInt" (formula "32") (term "1,0,0,1,0,0,1,1"))
      (rule "replace_int_MAX" (formula "32") (term "1,0,1,0,1,1,1"))
      (rule "replace_int_MIN" (formula "32") (term "0,1,1,0,1,1,1"))
      (rule "replace_int_MIN" (formula "32") (term "0,1,1,0,0,0,1,1,1"))
      (rule "replace_int_MAX" (formula "32") (term "1,0,1,0,0,0,1,1,1"))
      (rule "replace_int_MIN" (formula "32") (term "0,1,1,1,1,1"))
      (rule "replace_int_MAX" (formula "32") (term "1,0,1,1,1,1"))
      (rule "replace_int_MAX" (formula "32") (term "1,0,1,0,0,1,0,0,1,1"))
      (rule "replace_int_MIN" (formula "32") (term "0,1,1,0,0,1,0,0,1,1"))
      (rule "leq_literals" (formula "32") (term "0,1,0,1,1,1"))
      (rule "concrete_and_1" (formula "32") (term "1,0,1,1,1"))
      (rule "simplifyUpdate2" (formula "32"))
      (rule "leq_literals" (formula "32") (term "1,0,1,1,1"))
      (rule "concrete_and_3" (formula "32") (term "0,1,1,1"))
      (rule "simplifyUpdate2" (formula "32") (term "1"))
      (rule "translateJavaAddInt" (formula "32") (term "1,1,0,0,0,1,0,0,1"))
      (rule "translateJavaAddInt" (formula "32") (term "0,1,0,0,0,0,0,1"))
      (rule "translateJavaAddInt" (formula "32") (term "0,1,0,0,0,0,1"))
      (rule "applyOnRigidFormula" (formula "32"))
      (rule "applyOnRigidFormula" (formula "32") (term "1"))
      (rule "simplifyUpdate2" (formula "32") (term "1,1"))
      (rule "simplifyUpdate2" (formula "32") (term "0,1"))
      (rule "applyOnRigidFormula" (formula "32") (term "0"))
      (rule "simplifyUpdate2" (formula "32") (term "1,0"))
      (rule "applyOnRigidFormula" (formula "32") (term "1,1"))
      (rule "applyOnRigidFormula" (formula "32") (term "0,1"))
      (rule "simplifyUpdate2" (formula "32") (term "0,0,1"))
      (rule "simplifyUpdate2" (formula "32") (term "1,0,1"))
      (rule "applyOnRigidFormula" (formula "32") (term "0,0"))
      (rule "simplifyUpdate2" (formula "32") (term "0,0,0"))
      (rule "applyOnRigidFormula" (formula "32") (term "1,0"))
      (rule "simplifyUpdate2" (formula "32") (term "0,1,0"))
      (rule "simplifyUpdate2" (formula "32") (term "1,1,0"))
      (rule "applyOnRigidFormula" (formula "32") (term "1,1,1"))
      (rule "applyOnPV" (formula "32") (term "1,1,1,1"))
      (rule "simplifyUpdate1" (formula "32") (term "0,1,1,1"))
      (rule "applyOnRigidFormula" (formula "32") (term "0,1,1"))
      (rule "simplifyUpdate1" (formula "32") (term "1,0,1,1"))
      (rule "applyOnPV" (formula "32") (term "0,0,1,1"))
      (rule "applyOnRigidFormula" (formula "32") (term "0,0,1"))
      (rule "simplifyUpdate2" (formula "32") (term "1,0,0,1"))
      (rule "simplifyUpdate2" (formula "32") (term "0,0,0,1"))
      (rule "applyOnRigidFormula" (formula "32") (term "1,0,1"))
      (rule "simplifyUpdate2" (formula "32") (term "0,1,0,1"))
      (rule "applyOnRigidFormula" (formula "32") (term "1,0,0"))
      (rule "applyOnRigidFormula" (formula "32") (term "0,0,0"))
      (rule "simplifyUpdate2" (formula "32") (term "1,0,0,0"))
      (rule "applyOnRigidFormula" (formula "32") (term "0,1,0"))
      (rule "applyOnRigidFormula" (formula "32") (term "1,1,0"))
      (rule "applyOnRigidFormula" (formula "32") (term "1,0,0,1"))
      (rule "applyOnRigidFormula" (formula "32") (term "0,0,0,1"))
      (rule "simplifyUpdate2" (formula "32") (term "0,0,0,0,1"))
      (rule "applyOnRigidFormula" (formula "32") (term "1,1,0,1"))
      (rule "simplifyUpdate1" (formula "32") (term "1,1,1,0,1"))
      (rule "applyOnRigidFormula" (formula "32") (term "0,1,0,1"))
      (rule "applyOnPV" (formula "32") (term "0,0,1,0,1"))
      (rule "simplifyUpdate1" (formula "32") (term "1,0,1,0,1"))
      (rule "replace_known_right" (formula "32") (term "0,1,0,1") (ifseqformula "30"))
      (rule "concrete_or_2" (formula "32") (term "1,0,1"))
      (rule "applyOnRigidFormula" (formula "32") (term "0,1,0,0"))
      (rule "simplifyUpdate2" (formula "32") (term "1,0,1,0,0"))
      (rule "simplifyUpdate2" (formula "32") (term "0,0,1,0,0"))
      (rule "applyOnRigidFormula" (formula "32") (term "0,0,0,0"))
      (rule "simplifyUpdate2" (formula "32") (term "1,0,0,0,0"))
      (rule "applyOnRigidFormula" (formula "32") (term "1,0,0,0"))
      (rule "simplifyUpdate1" (formula "32") (term "1,1,0,0,0"))
      (rule "applyOnPV" (formula "32") (term "0,1,0,0,0"))
      (rule "applyOnRigidFormula" (formula "32") (term "0,0,1,0"))
      (rule "applyOnPV" (formula "32") (term "0,0,0,1,0"))
      (rule "simplifyUpdate1" (formula "32") (term "1,0,0,1,0"))
      (rule "applyOnRigidFormula" (formula "32") (term "0,1,1,0"))
      (rule "applyOnPV" (formula "32") (term "0,0,1,1,0"))
      (rule "simplifyUpdate1" (formula "32") (term "1,0,1,1,0"))
      (rule "replace_known_right" (formula "32") (term "0,1,1,0") (ifseqformula "30"))
      (rule "concrete_not_2" (formula "32") (term "1,1,0"))
      (rule "concrete_and_3" (formula "32") (term "1,0"))
      (rule "applyOnRigidFormula" (formula "32") (term "1,1,0,0,1"))
      (rule "applyOnPV" (formula "32") (term "1,1,1,0,0,1"))
      (rule "simplifyUpdate1" (formula "32") (term "0,1,1,0,0,1"))
      (rule "applyOnRigidFormula" (formula "32") (term "0,1,0,0,1"))
      (rule "applyOnPV" (formula "32") (term "0,0,1,0,0,1"))
      (rule "simplifyUpdate1" (formula "32") (term "1,0,1,0,0,1"))
      (rule "applyOnRigidFormula" (formula "32") (term "1,0,0,0,1"))
      (rule "simplifyUpdate2" (formula "32") (term "0,1,0,0,0,1"))
      (rule "applyOnRigidFormula" (formula "32") (term "0,0,0,0,1"))
      (rule "applyOnPV" (formula "32") (term "0,0,0,0,0,1"))
      (rule "wellFormedAnonEQ" (formula "32") (term "0,0,0,0,1") (ifseqformula "23"))
      (rule "replace_known_left" (formula "32") (term "1,0,0,0,0,1") (ifseqformula "22"))
      (rule "concrete_and_3" (formula "32") (term "0,0,0,0,1"))
      (rule "replace_known_left" (formula "32") (term "0,0,0,0,1") (ifseqformula "1"))
      (rule "concrete_and_1" (formula "32") (term "0,0,0,1"))
      (rule "applyOnRigidTerm" (formula "32") (term "0,1,0,1"))
      (rule "simplifyUpdate1" (formula "32") (term "2,0,1,0,1"))
      (rule "simplifyUpdate1" (formula "32") (term "0,0,1,0,1"))
      (rule "simplifyUpdate1" (formula "32") (term "1,0,1,0,1"))
      (rule "applyOnPV" (formula "32") (term "0,0,1,0,1"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "32") (term "1,0,1") (ifseqformula "23"))
      (rule "applyOnPV" (formula "32") (term "1,0,1,1,0,1"))
      (rule "applyOnPV" (formula "32") (term "1,0,0,1,0,1"))
      (rule "replace_known_left" (formula "32") (term "1,0,1") (ifseqformula "24"))
      (rule "concrete_and_3" (formula "32") (term "0,1"))
      (rule "applyOnRigidFormula" (formula "32") (term "1,0,1,0,0"))
      (rule "simplifyUpdate1" (formula "32") (term "0,1,0,1,0,0"))
      (rule "simplifyUpdate1" (formula "32") (term "1,1,0,1,0,0"))
      (rule "applyOnPV" (formula "32") (term "0,1,0,1,0,0"))
      (rule "applyOnRigidFormula" (formula "32") (term "0,0,1,0,0"))
      (rule "simplifyUpdate2" (formula "32") (term "1,0,0,1,0,0"))
      (rule "applyOnRigidFormula" (formula "32") (term "0,0,0,0,0"))
      (rule "simplifyUpdate2" (formula "32") (term "0,0,0,0,0,0"))
      (rule "simplifyUpdate2" (formula "32") (term "1,0,0,0,0,0"))
      (rule "applyOnRigidFormula" (formula "32") (term "1,0,0,0,0"))
      (rule "simplifyUpdate1" (formula "32") (term "0,1,0,0,0,0"))
      (rule "simplifyUpdate1" (formula "32") (term "1,1,0,0,0,0"))
      (rule "applyOnRigidFormula" (formula "32") (term "0,0,0,1"))
      (rule "simplifyUpdate1" (formula "32") (term "1,0,0,0,1"))
      (rule "applyOnPV" (formula "32") (term "0,0,0,0,1"))
      (rule "applyOnRigidFormula" (formula "32") (term "1,0,0,1"))
      (rule "simplifyUpdate1" (formula "32") (term "1,1,0,0,1"))
      (rule "applyOnRigidTerm" (formula "32") (term "1,1,0,1,0,0"))
      (rule "simplifyUpdate1" (formula "32") (term "2,1,1,0,1,0,0"))
      (rule "simplifyUpdate1" (formula "32") (term "0,1,1,0,1,0,0"))
      (rule "simplifyUpdate1" (formula "32") (term "1,1,1,0,1,0,0"))
      (rule "applyOnPV" (formula "32") (term "0,1,1,0,1,0,0"))
      (rule "applyOnPV" (formula "32") (term "1,1,1,0,1,0,0"))
      (rule "applyOnRigidFormula" (formula "32") (term "0,0,0,1,0,0"))
      (rule "simplifyUpdate2" (formula "32") (term "0,0,0,0,1,0,0"))
      (rule "applyOnRigidFormula" (formula "32") (term "0,0,0,0,0,0"))
      (rule "simplifyUpdate2" (formula "32") (term "1,0,0,0,0,0,0"))
      (rule "simplifyUpdate2" (formula "32") (term "0,0,0,0,0,0,0"))
      (rule "applyOnRigidFormula" (formula "32") (term "1,0,0,0,0,0"))
      (rule "simplifyUpdate1" (formula "32") (term "0,1,0,0,0,0,0"))
      (rule "simplifyUpdate1" (formula "32") (term "1,1,0,0,0,0,0"))
      (rule "applyOnRigidTerm" (formula "32") (term "0,1,0,0,0,0"))
      (rule "simplifyUpdate1" (formula "32") (term "0,0,1,0,0,0,0"))
      (rule "applyOnPV" (formula "32") (term "1,0,1,0,0,0,0"))
      (rule "applyOnRigidTerm" (formula "32") (term "1,1,0,0,0,0"))
      (rule "applyOnPV" (formula "32") (term "0,1,1,0,0,0,0"))
      (rule "applyOnRigidTerm" (formula "32") (term "0,1,0,0,1"))
      (rule "simplifyUpdate1" (formula "32") (term "0,0,1,0,0,1"))
      (rule "simplifyUpdate1" (formula "32") (term "2,0,1,0,0,1"))
      (rule "simplifyUpdate1" (formula "32") (term "1,0,1,0,0,1"))
      (rule "applyOnPV" (formula "32") (term "0,0,1,0,0,1"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "32") (term "1,0,0,1") (ifseqformula "23"))
      (rule "applyOnPV" (formula "32") (term "1,0,0,1,0,0,1"))
      (rule "applyOnPV" (formula "32") (term "1,0,1,1,0,0,1"))
      (rule "applyOnRigidFormula" (formula "32") (term "1,0,0,0,1,0,0"))
      (rule "simplifyUpdate1" (formula "32") (term "0,1,0,0,0,1,0,0"))
      (rule "applyOnRigidFormula" (formula "32") (term "0,0,0,0,1,0,0"))
      (rule "simplifyUpdate1" (formula "32") (term "1,0,0,0,0,1,0,0"))
      (rule "applyOnPV" (formula "32") (term "0,0,0,0,0,1,0,0"))
      (rule "applyOnRigidFormula" (formula "32") (term "1,0,0,0,0,0,0"))
      (rule "simplifyUpdate1" (formula "32") (term "1,1,0,0,0,0,0,0"))
      (rule "applyOnPV" (formula "32") (term "0,1,0,0,0,0,0,0"))
      (rule "replace_known_left" (formula "32") (term "1,0,0,0,0,0,0") (ifseqformula "8"))
      (rule "concrete_and_3" (formula "32") (term "0,0,0,0,0,0"))
      (rule "applyOnRigidTerm" (formula "32") (term "0,1,0,0,0,0,0"))
      (rule "simplifyUpdate1" (formula "32") (term "1,0,1,0,0,0,0,0"))
      (rule "simplifyUpdate1" (formula "32") (term "0,0,1,0,0,0,0,0"))
      (rule "applyOnPV" (formula "32") (term "1,0,1,0,0,0,0,0"))
      (rule "applyOnPV" (formula "32") (term "0,0,1,0,0,0,0,0"))
      (rule "applyOnRigidTerm" (formula "32") (term "1,1,0,0,0,0,0"))
      (rule "applyOnPV" (formula "32") (term "0,1,1,0,0,0,0,0"))
      (rule "inEqSimp_homoInEq0" (formula "32") (term "1,1,1"))
      (rule "mul_literals" (formula "32") (term "1,0,1,1,1"))
      (rule "polySimp_addComm1" (formula "32") (term "0,1,1,1"))
      (rule "polySimp_addComm0" (formula "32") (term "0,0,1,1,1"))
      (rule "inEqSimp_homoInEq0" (formula "32") (term "0,1,1"))
      (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,1"))
      (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1,1"))
      (rule "polySimp_mulAssoc" (formula "32") (term "0,1,0,0,1,1"))
      (rule "polySimp_mulComm0" (formula "32") (term "0,0,1,0,0,1,1"))
      (rule "polySimp_mulLiterals" (formula "32") (term "0,1,0,0,1,1"))
      (rule "polySimp_elimOne" (formula "32") (term "0,1,0,0,1,1"))
      (rule "applyOnRigidTerm" (formula "32") (term "1,1,0,0,0,1,0,0"))
      (rule "simplifyUpdate1" (formula "32") (term "0,1,1,0,0,0,1,0,0"))
      (rule "simplifyUpdate1" (formula "32") (term "1,1,1,0,0,0,1,0,0"))
      (rule "applyOnPV" (formula "32") (term "0,1,1,0,0,0,1,0,0"))
      (rule "applyOnPV" (formula "32") (term "1,1,1,0,0,0,1,0,0"))
      (rule "applyOnRigidFormula" (formula "32") (term "0,0,0,0,0,0"))
      (rule "simplifyUpdate2" (formula "32") (term "1,0,0,0,0,0,0"))
      (rule "simplifyUpdate2" (formula "32") (term "0,0,0,0,0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "32") (term "1,1,0,1"))
      (rule "polySimp_addAssoc" (formula "32") (term "0,0,1,1"))
      (rule "inEqSimp_commuteLeq" (formula "32") (term "1,1,0,0,1,0,0"))
      (rule "applyOnRigidFormula" (formula "32") (term "1,0,0,0,0,0,0"))
      (rule "applyOnRigidFormula" (formula "32") (term "0,0,0,0,0,0,0"))
      (rule "applyOnRigidFormula" (formula "32") (term "0,1,0,0,0,0,0,0"))
      (rule "simplifyUpdate1" (formula "32") (term "1,0,1,0,0,0,0,0,0"))
      (rule "applyOnPV" (formula "32") (term "0,0,1,0,0,0,0,0,0"))
      (rule "replace_known_right" (formula "32") (term "0,1,0,0,0,0,0,0") (ifseqformula "30"))
      (rule "concrete_not_2" (formula "32") (term "1,0,0,0,0,0,0"))
      (rule "concrete_and_3" (formula "32") (term "0,0,0,0,0,0"))
      (rule "applyOnRigidFormula" (formula "32") (term "0,0,0,0,0,0,0"))
      (rule "applyOnPV" (formula "32") (term "0,0,0,0,0,0,0,0"))
      (rule "simplifyUpdate1" (formula "32") (term "1,0,0,0,0,0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "32") (term "1,0,0,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "32") (term "1,0,0,0,1,0,0"))
      (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0,0,1,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "32") (term "0,0,0,0,1,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "32") (term "1,0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "32") (term "1,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,0,0"))
      (rule "polySimp_elimOne" (formula "32") (term "1,1,0,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "32") (term "1,1,1"))
      (rule "polySimp_mulComm0" (formula "32") (term "1,1,1,1"))
      (rule "polySimp_rightDist" (formula "32") (term "1,1,1,1"))
      (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,1,1"))
      (rule "mul_literals" (formula "32") (term "0,1,1,1,1"))
      (rule "polySimp_elimOne" (formula "32") (term "1,1,1,1,1"))
      (rule "inEqSimp_sepNegMonomial1" (formula "32") (term "0,1,1"))
      (rule "polySimp_mulLiterals" (formula "32") (term "0,0,1,1"))
      (rule "polySimp_elimOne" (formula "32") (term "0,0,1,1"))
      (rule "replace_known_left" (formula "32") (term "0,1,1") (ifseqformula "4"))
      (rule "concrete_and_1" (formula "32") (term "1,1"))
      (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0,0,0,1,0,0"))
      (rule "polySimp_mulComm0" (formula "32") (term "1,1,0,0,0,1,0,0"))
      (rule "polySimp_rightDist" (formula "32") (term "1,1,0,0,0,1,0,0"))
      (rule "mul_literals" (formula "32") (term "0,1,1,0,0,0,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0,0,0,1,0,0"))
      (rule "polySimp_elimOne" (formula "32") (term "1,1,1,0,0,0,1,0,0"))
      (rule "inEqSimp_subsumption1" (formula "32") (term "1,1") (ifseqformula "10"))
      (rule "inEqSimp_homoInEq0" (formula "32") (term "0,1,1"))
      (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,1"))
      (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1,1"))
      (rule "mul_literals" (formula "32") (term "0,1,0,0,1,1"))
      (rule "polySimp_addAssoc" (formula "32") (term "0,0,1,1"))
      (rule "polySimp_addComm1" (formula "32") (term "0,0,0,1,1"))
      (rule "add_literals" (formula "32") (term "0,0,0,0,1,1"))
      (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,0,1,1"))
      (rule "add_literals" (formula "32") (term "1,1,0,0,1,1"))
      (rule "times_zero_1" (formula "32") (term "1,0,0,1,1"))
      (rule "add_zero_right" (formula "32") (term "0,0,1,1"))
      (rule "qeq_literals" (formula "32") (term "0,1,1"))
      (rule "concrete_or_1" (formula "32") (term "1,1"))
      (rule "concrete_and_3" (formula "32") (term "1"))
      (rule "inEqSimp_subsumption1" (formula "32") (term "1,0,0,0") (ifseqformula "10"))
      (rule "inEqSimp_homoInEq0" (formula "32") (term "0,1,0,0,0"))
      (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,0,1,0,0,0"))
      (rule "add_literals" (formula "32") (term "1,1,0,0,1,0,0,0"))
      (rule "times_zero_1" (formula "32") (term "1,0,0,1,0,0,0"))
      (rule "add_zero_right" (formula "32") (term "0,0,1,0,0,0"))
      (rule "qeq_literals" (formula "32") (term "0,1,0,0,0"))
      (rule "concrete_or_1" (formula "32") (term "1,0,0,0"))
      (rule "concrete_and_3" (formula "32") (term "0,0,0"))
      (rule "inEqSimp_subsumption1" (formula "32") (term "1,1,1") (ifseqformula "8"))
      (rule "leq_literals" (formula "32") (term "0,1,1,1"))
      (rule "concrete_or_1" (formula "32") (term "1,1,1"))
      (rule "concrete_and_3" (formula "32") (term "1,1"))
      (rule "inEqSimp_subsumption0" (formula "32") (term "1,1") (ifseqformula "9"))
      (rule "leq_literals" (formula "32") (term "0,1,1"))
      (rule "concrete_or_1" (formula "32") (term "1,1"))
      (rule "concrete_and_3" (formula "32") (term "1"))
      (rule "expand_addJint" (formula "32") (term "1,1,1,0,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "32") (term "0,1,1,1,0,0,0,1,0,0"))
      (rule "polySimp_pullOutFactor1" (formula "32") (term "0,0,1,1,1,0,0,0,1,0,0"))
      (rule "add_literals" (formula "32") (term "1,0,0,1,1,1,0,0,0,1,0,0"))
      (rule "times_zero_1" (formula "32") (term "0,0,1,1,1,0,0,0,1,0,0"))
      (rule "add_zero_left" (formula "32") (term "0,1,1,1,0,0,0,1,0,0"))
      (rule "Class_invariant_axiom_for_java_util_TimSort" (formula "28") (inst "i=i") (inst "i_0=i_0") (inst "i_1=i_1") (ifseqformula "3"))
      (rule "replaceKnownSelect_taclet0_0" (formula "28") (term "0,0,0,1"))
      (rule "replaceKnownAuxiliaryConstant_taclet0_1" (formula "28") (term "0,0,0,1"))
      (rule "insert_constant_value" (formula "28") (term "0,3,1,0,0,0,1,0"))
      (rule "insert_constant_value" (formula "28") (term "0,3,1,0,0,0,0,1,0"))
      (rule "insert_constant_value" (formula "28") (term "0,3,1,0,1,0,0,0,0,0,0,1,0"))
      (rule "replaceKnownSelect_taclet0_0" (formula "28") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet0_1" (formula "28") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0"))
      (rule "replaceKnownSelect_taclet0_0" (formula "28") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet0_1" (formula "28") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0"))
      (rule "replaceKnownSelect_taclet0_0" (formula "28") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet0_1" (formula "28") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0"))
      (rule "replaceKnownSelect_taclet0_0" (formula "28") (term "1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet0_1" (formula "28") (term "1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0"))
      (rule "expand_inInt" (formula "28") (term "1,1"))
      (rule "replace_int_MAX" (formula "28") (term "1,0,1,1"))
      (rule "replace_int_MIN" (formula "28") (term "0,1,1,1"))
      (rule "andLeft" (formula "28"))
      (rule "andLeft" (formula "29"))
      (rule "andLeft" (formula "28"))
      (rule "andLeft" (formula "31"))
      (rule "andLeft" (formula "28"))
      (rule "andLeft" (formula "30"))
      (rule "notLeft" (formula "29"))
      (rule "andLeft" (formula "28"))
      (rule "andLeft" (formula "30"))
      (rule "notLeft" (formula "29"))
      (rule "notLeft" (formula "28"))
      (rule "andLeft" (formula "28"))
      (rule "andLeft" (formula "28"))
      (rule "andLeft" (formula "28"))
      (rule "andLeft" (formula "28"))
      (rule "andLeft" (formula "28"))
      (rule "andLeft" (formula "28"))
      (rule "andLeft" (formula "28"))
      (rule "andLeft" (formula "30"))
      (rule "andLeft" (formula "28"))
      (rule "andLeft" (formula "28"))
      (rule "andLeft" (formula "28"))
      (rule "andLeft" (formula "28"))
      (rule "andLeft" (formula "28"))
      (rule "andLeft" (formula "28"))
      (rule "notLeft" (formula "30"))
      (rule "notLeft" (formula "29"))
      (rule "andLeft" (formula "28"))
      (rule "notLeft" (formula "29"))
      (rule "andLeft" (formula "28"))
      (rule "andLeft" (formula "28"))
      (rule "notLeft" (formula "30"))
      (rule "andLeft" (formula "28"))
      (rule "notLeft" (formula "30"))
      (rule "notLeft" (formula "29"))
      (rule "andLeft" (formula "28"))
      (rule "notLeft" (formula "29"))
      (rule "andLeft" (formula "28"))
      (rule "notLeft" (formula "29"))
      (rule "eqSymm" (formula "42") (term "1,0"))
      (rule "translateJavaDivInt" (formula "39") (term "3"))
      (rule "translateJavaDivInt" (formula "38") (term "3"))
      (rule "translateJavaDivInt" (formula "36") (term "3,1,0"))
      (rule "eqSymm" (formula "53"))
      (rule "eqSymm" (formula "52"))
      (rule "eqSymm" (formula "28"))
      (rule "eqSymm" (formula "47"))
      (rule "polySimp_elimSub" (formula "42") (term "1,1,0,0"))
      (rule "mul_literals" (formula "42") (term "1,1,1,0,0"))
      (rule "polySimp_elimSub" (formula "40") (term "2"))
      (rule "mul_literals" (formula "40") (term "1,2"))
      (rule "polySimp_elimSub" (formula "39") (term "2"))
      (rule "mul_literals" (formula "39") (term "1,2"))
      (rule "polySimp_elimSub" (formula "38") (term "2"))
      (rule "mul_literals" (formula "38") (term "1,2"))
      (rule "polySimp_elimSub" (formula "37") (term "2"))
      (rule "mul_literals" (formula "37") (term "1,2"))
      (rule "polySimp_elimSub" (formula "36") (term "1,1,0,0"))
      (rule "mul_literals" (formula "36") (term "1,1,1,0,0"))
      (rule "polySimp_addComm0" (formula "42") (term "0,2,0,1,0"))
      (rule "polySimp_addComm0" (formula "42") (term "1,1,0,0"))
      (rule "polySimp_addComm0" (formula "40") (term "2"))
      (rule "polySimp_addComm0" (formula "39") (term "2"))
      (rule "polySimp_addComm0" (formula "38") (term "2"))
      (rule "polySimp_addComm0" (formula "37") (term "2"))
      (rule "polySimp_addComm0" (formula "36") (term "1,1,0,0"))
      (rule "sortsDisjointModuloNull" (formula "49"))
      (rule "replace_known_right" (formula "49") (term "1") (ifseqformula "56"))
      (rule "concrete_and_4" (formula "49"))
      (rule "false_right" (formula "49"))
      (rule "sortsDisjointModuloNull" (formula "48"))
      (rule "replace_known_right" (formula "48") (term "0") (ifseqformula "50"))
      (rule "concrete_and_2" (formula "48"))
      (rule "false_right" (formula "48"))
      (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0"))
      (rule "mul_literals" (formula "31") (term "1,0,0,1,0"))
      (rule "add_literals" (formula "31") (term "0,0,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0"))
      (rule "mul_literals" (formula "30") (term "1,0,0,1,0"))
      (rule "add_literals" (formula "30") (term "0,0,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "29") (term "0"))
      (rule "mul_literals" (formula "29") (term "1,0,0,0"))
      (rule "add_literals" (formula "29") (term "0,0,0"))
      (rule "sortsDisjointModuloNull" (formula "51"))
      (rule "replace_known_right" (formula "51") (term "0") (ifseqformula "53"))
      (rule "concrete_and_2" (formula "51"))
      (rule "false_right" (formula "51"))
      (rule "sortsDisjointModuloNull" (formula "50"))
      (rule "replace_known_right" (formula "50") (term "0") (ifseqformula "53"))
      (rule "concrete_and_2" (formula "50"))
      (rule "false_right" (formula "50"))
      (rule "array_store_known_dynamic_array_type" (formula "55") (term "1,0,1,0,0") (ifseqformula "43"))
      (rule "instanceof_static_type" (formula "55") (term "0,1,1,0,1,0,0"))
      (rule "boolean_equal" (formula "55") (term "1,1,0,1,0,0"))
      (rule "concrete_or_3" (formula "55") (term "1,0,1,0,0"))
      (rule "concrete_impl_4" (formula "55") (term "0,1,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "45"))
      (rule "inEqSimp_commuteLeq" (formula "42") (term "0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "36") (term "0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "35"))
      (rule "inEqSimp_commuteLeq" (formula "34"))
      (rule "inEqSimp_ltToLeq" (formula "42") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "42") (term "1,0,0,1,0,0"))
      (rule "mul_literals" (formula "42") (term "0,1,0,0,1,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "36") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "36") (term "1,0,0,1,0,0"))
      (rule "mul_literals" (formula "36") (term "0,1,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "42") (term "0,0,1,0,0"))
      (rule "add_literals" (formula "42") (term "0,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "36") (term "0,0,1,0,0"))
      (rule "add_literals" (formula "36") (term "0,0,0,1,0,0"))
      (rule "inEqSimp_homoInEq0" (formula "33"))
      (rule "polySimp_mulComm0" (formula "33") (term "1,0"))
      (rule "polySimp_rightDist" (formula "33") (term "1,0"))
      (rule "polySimp_mulComm0" (formula "33") (term "0,1,0"))
      (rule "polySimp_addAssoc" (formula "33") (term "0"))
      (rule "polySimp_addComm0" (formula "33") (term "0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0"))
      (rule "mul_literals" (formula "31") (term "1,1,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0"))
      (rule "mul_literals" (formula "30") (term "1,1,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "0"))
      (rule "mul_literals" (formula "29") (term "1,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "42") (term "1,1,0,0"))
      (rule "polySimp_rightDist" (formula "42") (term "1,1,0,0"))
      (rule "mul_literals" (formula "42") (term "0,1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "42") (term "1,1,1,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "36") (term "1,1,0,0"))
      (rule "polySimp_rightDist" (formula "36") (term "1,1,0,0"))
      (rule "mul_literals" (formula "36") (term "0,1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "36") (term "1,1,1,0,0"))
      (rule "inEqSimp_sepNegMonomial1" (formula "33"))
      (rule "polySimp_mulLiterals" (formula "33") (term "0"))
      (rule "polySimp_elimOne" (formula "33") (term "0"))
      (rule "pullOutSelect" (formula "44") (term "0") (inst "selectSK=java_util_TimSort_minGallop_0"))
      (rule "applyEq" (formula "46") (term "0") (ifseqformula "44"))
      (rule "simplifySelectOfAnonEQ" (formula "44") (ifseqformula "23"))
      (rule "elementOfFreshLocs" (formula "44") (term "1,0,0"))
      (rule "equalUnique" (formula "44") (term "0,1,0,0,0"))
      (rule "concrete_not_2" (formula "44") (term "1,0,0,0"))
      (rule "concrete_and_3" (formula "44") (term "0,0,0"))
      (rule "replace_known_right" (formula "44") (term "0,0,1,0,0") (ifseqformula "55"))
      (rule "concrete_not_2" (formula "44") (term "0,1,0,0"))
      (rule "concrete_and_1" (formula "44") (term "1,0,0"))
      (rule "replace_known_left" (formula "44") (term "0,1,0,0") (ifseqformula "2"))
      (rule "concrete_not_1" (formula "44") (term "1,0,0"))
      (rule "concrete_or_4" (formula "44") (term "0,0"))
      (rule "elementOfSingleton" (formula "44") (term "0,0"))
      (rule "eqClose" (formula "44") (term "0,0,0"))
      (rule "concrete_and_1" (formula "44") (term "0,0"))
      (rule "equalUnique" (formula "44") (term "0,0"))
      (rule "ifthenelse_false" (formula "44") (term "0"))
      (rule "applyEqReverse" (formula "46") (term "0") (ifseqformula "44"))
      (rule "applyEqReverse" (formula "45") (term "0") (ifseqformula "44"))
      (rule "hideAuxiliaryEq" (formula "44"))
      (rule "pullOutSelect" (formula "52") (term "0") (inst "selectSK=java_util_TimSort_runLen_0"))
      (rule "applyEq" (formula "39") (term "1") (ifseqformula "1"))
      (rule "applyEq" (formula "38") (term "1") (ifseqformula "1"))
      (rule "applyEq" (formula "31") (term "0,0,1") (ifseqformula "1"))
      (rule "applyEq" (formula "37") (term "1,1,0") (ifseqformula "1"))
      (rule "applyEq" (formula "48") (term "0") (ifseqformula "1"))
      (rule "applyEq" (formula "30") (term "0,0,1") (ifseqformula "1"))
      (rule "applyEq" (formula "40") (term "1") (ifseqformula "1"))
      (rule "applyEq" (formula "33") (term "0,0,1") (ifseqformula "1"))
      (rule "applyEq" (formula "32") (term "0,0,1") (ifseqformula "1"))
      (rule "applyEq" (formula "41") (term "1") (ifseqformula "1"))
      (rule "applyEq" (formula "29") (term "0,0") (ifseqformula "1"))
      (rule "applyEq" (formula "34") (term "1,2,0") (ifseqformula "1"))
      (rule "applyEq" (formula "43") (term "1,1,1,1,0") (ifseqformula "1"))
      (rule "applyEq" (formula "36") (term "0,0") (ifseqformula "1"))
      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
      (rule "elementOfFreshLocs" (formula "1") (term "1,0,0"))
      (rule "equalUnique" (formula "1") (term "0,1,0,0,0"))
      (rule "concrete_not_2" (formula "1") (term "1,0,0,0"))
      (rule "concrete_and_3" (formula "1") (term "0,0,0"))
      (rule "eqSymm" (formula "48"))
      (rule "eqSymm" (formula "29"))
      (rule "replace_known_right" (formula "1") (term "0,0,1,0,0") (ifseqformula "55"))
      (rule "concrete_not_2" (formula "1") (term "0,1,0,0"))
      (rule "concrete_and_1" (formula "1") (term "1,0,0"))
      (rule "replace_known_left" (formula "1") (term "0,1,0,0") (ifseqformula "3"))
      (rule "concrete_not_1" (formula "1") (term "1,0,0"))
      (rule "concrete_or_4" (formula "1") (term "0,0"))
      (rule "polySimp_addComm0" (formula "43") (term "1,1,0"))
      (rule "elementOfSingleton" (formula "1") (term "0,0"))
      (rule "eqClose" (formula "1") (term "0,0,0"))
      (rule "concrete_and_1" (formula "1") (term "0,0"))
      (rule "equalUnique" (formula "1") (term "0,0"))
      (rule "ifthenelse_false" (formula "1") (term "0"))
      (rule "applyEqReverse" (formula "37") (term "1,1,0") (ifseqformula "1"))
      (rule "applyEqReverse" (formula "36") (term "0,0") (ifseqformula "1"))
      (rule "applyEqReverse" (formula "43") (term "1,0,1,1,0") (ifseqformula "1"))
      (rule "applyEqReverse" (formula "38") (term "1") (ifseqformula "1"))
      (rule "applyEqReverse" (formula "34") (term "1,2,0") (ifseqformula "1"))
      (rule "applyEqReverse" (formula "32") (term "0,0,1") (ifseqformula "1"))
      (rule "applyEqReverse" (formula "33") (term "0,0,1") (ifseqformula "1"))
      (rule "applyEqReverse" (formula "29") (term "0,1") (ifseqformula "1"))
      (rule "applyEqReverse" (formula "53") (term "0") (ifseqformula "1"))
      (rule "applyEqReverse" (formula "40") (term "1") (ifseqformula "1"))
      (rule "applyEqReverse" (formula "39") (term "1") (ifseqformula "1"))
      (rule "applyEqReverse" (formula "31") (term "0,0,1") (ifseqformula "1"))
      (rule "applyEqReverse" (formula "30") (term "0,0,1") (ifseqformula "1"))
      (rule "applyEqReverse" (formula "41") (term "1") (ifseqformula "1"))
      (rule "applyEqReverse" (formula "48") (term "1") (ifseqformula "1"))
      (rule "hideAuxiliaryEq" (formula "1"))
      (rule "inEqSimp_commuteGeq" (formula "35"))
      (rule "pullOutSelect" (formula "41") (term "1") (inst "selectSK=java_util_TimSort_runBase_0"))
      (rule "applyEq" (formula "48") (term "0") (ifseqformula "41"))
      (rule "applyEq" (formula "28") (term "0,0") (ifseqformula "41"))
      (rule "applyEq" (formula "52") (term "0") (ifseqformula "41"))
      (rule "applyEq" (formula "43") (term "1,1,1,1,0") (ifseqformula "41"))
      (rule "applyEq" (formula "33") (term "1,0,0,1") (ifseqformula "41"))
      (rule "applyEq" (formula "43") (term "1,0,1,0") (ifseqformula "41"))
      (rule "simplifySelectOfAnonEQ" (formula "41") (ifseqformula "23"))
      (rule "elementOfFreshLocs" (formula "41") (term "1,0,0"))
      (rule "equalUnique" (formula "41") (term "0,1,0,0,0"))
      (rule "concrete_not_2" (formula "41") (term "1,0,0,0"))
      (rule "concrete_and_3" (formula "41") (term "0,0,0"))
      (rule "eqSymm" (formula "48"))
      (rule "eqSymm" (formula "28"))
      (rule "replace_known_left" (formula "41") (term "0,1,1,0,0") (ifseqformula "2"))
      (rule "concrete_not_1" (formula "41") (term "1,1,0,0"))
      (rule "concrete_and_4" (formula "41") (term "1,0,0"))
      (rule "concrete_or_4" (formula "41") (term "0,0"))
      (rule "polySimp_addComm0" (formula "43") (term "1,1,0"))
      (rule "elementOfSingleton" (formula "41") (term "0,0"))
      (rule "eqClose" (formula "41") (term "0,0,0"))
      (rule "concrete_and_1" (formula "41") (term "0,0"))
      (rule "equalUnique" (formula "41") (term "0,0"))
      (rule "ifthenelse_false" (formula "41") (term "0"))
      (rule "applyEqReverse" (formula "52") (term "0") (ifseqformula "41"))
      (rule "applyEqReverse" (formula "42") (term "1") (ifseqformula "41"))
      (rule "applyEqReverse" (formula "43") (term "1,0,1,1,0") (ifseqformula "41"))
      (rule "applyEqReverse" (formula "43") (term "1,0,1,0") (ifseqformula "41"))
      (rule "applyEqReverse" (formula "28") (term "0,1") (ifseqformula "41"))
      (rule "applyEqReverse" (formula "33") (term "1,0,0,1") (ifseqformula "41"))
      (rule "applyEqReverse" (formula "48") (term "1") (ifseqformula "41"))
      (rule "hideAuxiliaryEq" (formula "41"))
      (rule "applyEq" (formula "32") (term "0,1") (ifseqformula "28"))
      (rule "applyEq" (formula "31") (term "0,1") (ifseqformula "28"))
      (rule "applyEq" (formula "29") (term "0,1") (ifseqformula "28"))
      (rule "applyEq" (formula "35") (term "1") (ifseqformula "28"))
      (rule "applyEq" (formula "30") (term "0,1") (ifseqformula "28"))
      (rule "pullOutSelect" (formula "50") (term "0") (inst "selectSK=java_util_TimSort_c_0"))
      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
      (rule "elementOfFreshLocs" (formula "1") (term "1,0,0"))
      (rule "equalUnique" (formula "1") (term "0,1,0,0,0"))
      (rule "concrete_not_2" (formula "1") (term "1,0,0,0"))
      (rule "concrete_and_3" (formula "1") (term "0,0,0"))
      (rule "replace_known_left" (formula "1") (term "0,1,1,0,0") (ifseqformula "3"))
      (rule "concrete_not_1" (formula "1") (term "1,1,0,0"))
      (rule "concrete_and_4" (formula "1") (term "1,0,0"))
      (rule "concrete_or_4" (formula "1") (term "0,0"))
      (rule "elementOfSingleton" (formula "1") (term "0,0"))
      (rule "equalUnique" (formula "1") (term "1,0,0"))
      (rule "concrete_and_4" (formula "1") (term "0,0"))
      (rule "ifthenelse_false" (formula "1") (term "0"))
      (rule "applyEqReverse" (formula "51") (term "0") (ifseqformula "1"))
      (rule "hideAuxiliaryEq" (formula "1"))
      (rule "pullOutSelect" (formula "32") (term "0,0,0") (inst "selectSK=java_util_TimSort_a_0"))
      (rule "applyEq" (formula "30") (term "0,0,0,0") (ifseqformula "32"))
      (rule "applyEq" (formula "31") (term "0,0,0,0") (ifseqformula "32"))
      (rule "applyEq" (formula "29") (term "0,0,0") (ifseqformula "32"))
      (rule "applyEq" (formula "30") (term "0,0,1,0") (ifseqformula "32"))
      (rule "applyEq" (formula "31") (term "0,0,1,0") (ifseqformula "32"))
      (rule "applyEq" (formula "49") (term "0") (ifseqformula "32"))
      (rule "applyEq" (formula "34") (term "0,1,1") (ifseqformula "32"))
      (rule "applyEq" (formula "50") (term "0") (ifseqformula "32"))
      (rule "simplifySelectOfAnonEQ" (formula "32") (ifseqformula "23"))
      (rule "elementOfFreshLocs" (formula "32") (term "1,0,0"))
      (rule "equalUnique" (formula "32") (term "0,1,0,0,0"))
      (rule "concrete_not_2" (formula "32") (term "1,0,0,0"))
      (rule "concrete_and_3" (formula "32") (term "0,0,0"))
      (rule "eqSymm" (formula "49"))
      (rule "replace_known_left" (formula "32") (term "0,1,1,0,0") (ifseqformula "2"))
      (rule "concrete_not_1" (formula "32") (term "1,1,0,0"))
      (rule "concrete_and_4" (formula "32") (term "1,0,0"))
      (rule "concrete_or_4" (formula "32") (term "0,0"))
      (rule "polySimp_addComm0" (formula "34") (term "1"))
      (rule "elementOfSingleton" (formula "32") (term "0,0"))
      (rule "eqClose" (formula "32") (term "0,0,0"))
      (rule "concrete_and_1" (formula "32") (term "0,0"))
      (rule "equalUnique" (formula "32") (term "0,0"))
      (rule "ifthenelse_false" (formula "32") (term "0"))
      (rule "applyEqReverse" (formula "31") (term "0,0,0,0") (ifseqformula "32"))
      (rule "applyEqReverse" (formula "30") (term "0,0,0,0") (ifseqformula "32"))
      (rule "applyEqReverse" (formula "31") (term "0,0,1,0") (ifseqformula "32"))
      (rule "applyEqReverse" (formula "50") (term "0") (ifseqformula "32"))
      (rule "applyEqReverse" (formula "34") (term "0,0,1") (ifseqformula "32"))
      (rule "applyEqReverse" (formula "33") (term "0,0,0") (ifseqformula "32"))
      (rule "applyEqReverse" (formula "49") (term "1") (ifseqformula "32"))
      (rule "applyEqReverse" (formula "29") (term "0,0,0") (ifseqformula "32"))
      (rule "applyEqReverse" (formula "30") (term "0,0,1,0") (ifseqformula "32"))
      (rule "hideAuxiliaryEq" (formula "32"))
      (rule "eqSymm" (formula "48"))
      (rule "replace_known_right" (formula "19") (term "0") (ifseqformula "49"))
      (rule "concrete_or_2" (formula "19"))
      (rule "replace_known_right" (formula "55") (term "0,0,0,0,0,0") (ifseqformula "49"))
      (rule "concrete_not_2" (formula "55") (term "0,0,0,0,0"))
      (rule "concrete_and_1" (formula "55") (term "0,0,0,0"))
      (rule "replace_known_right" (formula "55") (term "0,1") (ifseqformula "49"))
      (rule "concrete_or_2" (formula "55") (term "1"))
      (rule "replace_known_left" (formula "55") (term "0,1") (ifseqformula "19"))
      (rule "concrete_or_1" (formula "55") (term "1"))
      (rule "concrete_and_3" (formula "55"))
      (rule "replace_known_right" (formula "55") (term "0,1") (ifseqformula "49"))
      (rule "concrete_not_2" (formula "55") (term "1"))
      (rule "concrete_and_3" (formula "55"))
      (rule "pullOutSelect" (formula "40") (term "1,2") (inst "selectSK=java_util_TimSort_stackSize_0"))
      (rule "applyEq" (formula "34") (term "0") (ifseqformula "40"))
      (rule "applyEq" (formula "35") (term "0") (ifseqformula "40"))
      (rule "applyEq" (formula "37") (term "1,2") (ifseqformula "40"))
      (rule "applyEq" (formula "38") (term "1,2") (ifseqformula "40"))
      (rule "applyEq" (formula "33") (term "1,0") (ifseqformula "40"))
      (rule "applyEq" (formula "43") (term "1,1,1,0,0") (ifseqformula "40"))
      (rule "applyEq" (formula "39") (term "1,2") (ifseqformula "40"))
      (rule "applyEq" (formula "36") (term "1,1,1,0,0") (ifseqformula "40"))
      (rule "simplifySelectOfAnonEQ" (formula "40") (ifseqformula "23"))
      (rule "elementOfFreshLocs" (formula "40") (term "1,0,0"))
      (rule "equalUnique" (formula "40") (term "0,1,0,0,0"))
      (rule "concrete_not_2" (formula "40") (term "1,0,0,0"))
      (rule "concrete_and_3" (formula "40") (term "0,0,0"))
      (rule "replace_known_right" (formula "40") (term "0,0,1,0,0") (ifseqformula "55"))
      (rule "concrete_not_2" (formula "40") (term "0,1,0,0"))
      (rule "concrete_and_1" (formula "40") (term "1,0,0"))
      (rule "replace_known_left" (formula "40") (term "0,1,0,0") (ifseqformula "2"))
      (rule "concrete_not_1" (formula "40") (term "1,0,0"))
      (rule "concrete_or_4" (formula "40") (term "0,0"))
      (rule "elementOfSingleton" (formula "40") (term "0,0"))
      (rule "equalUnique" (formula "40") (term "1,0,0"))
      (rule "concrete_and_4" (formula "40") (term "0,0"))
      (rule "ifthenelse_false" (formula "40") (term "0"))
      (rule "applyEqReverse" (formula "43") (term "1,1,1,0,0") (ifseqformula "40"))
      (rule "applyEqReverse" (formula "35") (term "0") (ifseqformula "40"))
      (rule "applyEqReverse" (formula "38") (term "1,2") (ifseqformula "40"))
      (rule "applyEqReverse" (formula "36") (term "1,1,1,0,0") (ifseqformula "40"))
      (rule "applyEqReverse" (formula "33") (term "1,0") (ifseqformula "40"))
      (rule "applyEqReverse" (formula "34") (term "0") (ifseqformula "40"))
      (rule "applyEqReverse" (formula "37") (term "1,2") (ifseqformula "40"))
      (rule "applyEqReverse" (formula "41") (term "1,2") (ifseqformula "40"))
      (rule "applyEqReverse" (formula "39") (term "1,2") (ifseqformula "40"))
      (rule "hideAuxiliaryEq" (formula "40"))
      (rule "pullOutSelect" (formula "33") (term "0,1,1") (inst "selectSK=arr_0"))
      (rule "simplifySelectOfAnonEQ" (formula "33") (ifseqformula "23"))
      (rule "elementOfFreshLocs" (formula "33") (term "1,0,0"))
      (rule "equalUnique" (formula "33") (term "0,1,0,0,0"))
      (rule "concrete_not_2" (formula "33") (term "1,0,0,0"))
      (rule "concrete_and_3" (formula "33") (term "0,0,0"))
      (rule "replace_known_right" (formula "33") (term "0,0,1,0,0") (ifseqformula "52"))
      (rule "concrete_not_2" (formula "33") (term "0,1,0,0"))
      (rule "concrete_and_1" (formula "33") (term "1,0,0"))
      (rule "polySimp_addComm0" (formula "34") (term "1"))
      (rule "elementOfSingleton" (formula "33") (term "0,0,0"))
      (rule "equalUnique" (formula "33") (term "1,0,0,0"))
      (rule "concrete_and_4" (formula "33") (term "0,0,0"))
      (rule "concrete_or_2" (formula "33") (term "0,0"))
      (rule "ifthenelse_negated" (formula "33") (term "0"))
      (rule "inEqSimp_exactShadow3" (formula "35") (ifseqformula "36"))
      (rule "times_zero_1" (formula "35") (term "0,0"))
      (rule "add_zero_left" (formula "35") (term "0"))
      (rule "all_unused" (formula "57") (term "1"))
      (rule "concrete_and_3" (formula "57"))
      (rule "Class_invariant_axiom_for_java_util_TimSort" (formula "21") (inst "i=i") (inst "i_0=i_0") (inst "i_1=i_1") (ifseqformula "3"))
      (rule "insert_constant_value" (formula "21") (term "0,3,1,0,0,0,1,0"))
      (rule "insert_constant_value" (formula "21") (term "0,3,1,0,0,0,0,1,0"))
      (rule "insert_constant_value" (formula "21") (term "0,3,1,0,1,0,0,0,0,0,0,1,0"))
      (rule "expand_inInt" (formula "21") (term "1,1"))
      (rule "replace_int_MIN" (formula "21") (term "0,1,1,1"))
      (rule "replace_int_MAX" (formula "21") (term "1,0,1,1"))
      (rule "andLeft" (formula "21"))
      (rule "andLeft" (formula "22"))
      (rule "andLeft" (formula "21"))
      (rule "andLeft" (formula "24"))
      (rule "andLeft" (formula "22"))
      (rule "andLeft" (formula "21"))
      (rule "andLeft" (formula "23"))
      (rule "andLeft" (formula "21"))
      (rule "notLeft" (formula "23"))
      (rule "andLeft" (formula "23"))
      (rule "notLeft" (formula "22"))
      (rule "notLeft" (formula "21"))
      (rule "andLeft" (formula "21"))
      (rule "andLeft" (formula "21"))
      (rule "andLeft" (formula "21"))
      (rule "andLeft" (formula "21"))
      (rule "andLeft" (formula "21"))
      (rule "andLeft" (formula "22"))
      (rule "andLeft" (formula "21"))
      (rule "andLeft" (formula "21"))
      (rule "andLeft" (formula "21"))
      (rule "andLeft" (formula "21"))
      (rule "andLeft" (formula "21"))
      (rule "andLeft" (formula "21"))
      (rule "notLeft" (formula "22"))
      (rule "andLeft" (formula "21"))
      (rule "notLeft" (formula "22"))
      (rule "andLeft" (formula "21"))
      (rule "notLeft" (formula "22"))
      (rule "andLeft" (formula "21"))
      (rule "notLeft" (formula "22"))
      (rule "andLeft" (formula "21"))
      (rule "notLeft" (formula "22"))
      (rule "andLeft" (formula "21"))
      (rule "notLeft" (formula "22"))
      (rule "andLeft" (formula "21"))
      (rule "andLeft" (formula "21"))
      (rule "notLeft" (formula "23"))
      (rule "notLeft" (formula "22"))
      (rule "eqSymm" (formula "35") (term "1,0"))
      (rule "translateJavaDivInt" (formula "32") (term "3"))
      (rule "translateJavaDivInt" (formula "31") (term "3"))
      (rule "translateJavaDivInt" (formula "29") (term "3,1,0"))
      (rule "eqSymm" (formula "68"))
      (rule "eqSymm" (formula "67"))
      (rule "eqSymm" (formula "21"))
      (rule "eqSymm" (formula "65"))
      (rule "eqSymm" (formula "64"))
      (rule "polySimp_elimSub" (formula "34") (term "1,1,0,0"))
      (rule "mul_literals" (formula "34") (term "1,1,1,0,0"))
      (rule "polySimp_elimSub" (formula "32") (term "2"))
      (rule "mul_literals" (formula "32") (term "1,2"))
      (rule "polySimp_elimSub" (formula "31") (term "2"))
      (rule "mul_literals" (formula "31") (term "1,2"))
      (rule "polySimp_elimSub" (formula "30") (term "2"))
      (rule "mul_literals" (formula "30") (term "1,2"))
      (rule "polySimp_elimSub" (formula "29") (term "2"))
      (rule "mul_literals" (formula "29") (term "1,2"))
      (rule "polySimp_elimSub" (formula "28") (term "1,1,0,0"))
      (rule "mul_literals" (formula "28") (term "1,1,1,0,0"))
      (rule "polySimp_addComm0" (formula "34") (term "0,2,0,1,0"))
      (rule "polySimp_addComm0" (formula "34") (term "1,1,0,0"))
      (rule "polySimp_addComm0" (formula "32") (term "2"))
      (rule "polySimp_addComm0" (formula "31") (term "2"))
      (rule "polySimp_addComm0" (formula "30") (term "2"))
      (rule "polySimp_addComm0" (formula "29") (term "2"))
      (rule "polySimp_addComm0" (formula "28") (term "1,1,0,0"))
      (rule "sortsDisjointModuloNull" (formula "68"))
      (rule "replace_known_right" (formula "68") (term "0") (ifseqformula "69"))
      (rule "concrete_and_2" (formula "68"))
      (rule "false_right" (formula "68"))
      (rule "sortsDisjointModuloNull" (formula "67"))
      (rule "replace_known_right" (formula "67") (term "1") (ifseqformula "74"))
      (rule "concrete_and_4" (formula "67"))
      (rule "false_right" (formula "67"))
      (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0"))
      (rule "mul_literals" (formula "23") (term "1,0,0,1,0"))
      (rule "add_literals" (formula "23") (term "0,0,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0"))
      (rule "mul_literals" (formula "22") (term "1,0,0,1,0"))
      (rule "add_literals" (formula "22") (term "0,0,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "21") (term "0"))
      (rule "mul_literals" (formula "21") (term "1,0,0,0"))
      (rule "add_literals" (formula "21") (term "0,0,0"))
      (rule "sortsDisjointModuloNull" (formula "65"))
      (rule "replace_known_right" (formula "65") (term "1") (ifseqformula "70"))
      (rule "concrete_and_4" (formula "65"))
      (rule "false_right" (formula "65"))
      (rule "sortsDisjointModuloNull" (formula "64"))
      (rule "replace_known_right" (formula "64") (term "0") (ifseqformula "71"))
      (rule "concrete_and_2" (formula "64"))
      (rule "false_right" (formula "64"))
      (rule "inEqSimp_commuteLeq" (formula "36"))
      (rule "inEqSimp_commuteLeq" (formula "34") (term "0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "28") (term "0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "26"))
      (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "33") (term "1,0,0,1,0,0"))
      (rule "mul_literals" (formula "33") (term "0,1,0,0,1,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,0"))
      (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "33") (term "0,0,1,0,0"))
      (rule "add_literals" (formula "33") (term "0,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0"))
      (rule "add_literals" (formula "27") (term "0,0,0,1,0,0"))
      (rule "inEqSimp_homoInEq0" (formula "25"))
      (rule "polySimp_mulComm0" (formula "25") (term "1,0"))
      (rule "polySimp_rightDist" (formula "25") (term "1,0"))
      (rule "polySimp_mulComm0" (formula "25") (term "0,1,0"))
      (rule "polySimp_addAssoc" (formula "25") (term "0"))
      (rule "applyEq" (formula "23") (term "0,1") (ifseqformula "41"))
      (rule "applyEq" (formula "21") (term "0,1") (ifseqformula "41"))
      (rule "applyEq" (formula "26") (term "1") (ifseqformula "41"))
      (rule "applyEq" (formula "22") (term "0,1") (ifseqformula "40"))
      (rule "applyEq" (formula "24") (term "0,1") (ifseqformula "40"))
      (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0"))
      (rule "mul_literals" (formula "23") (term "1,1,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0"))
      (rule "mul_literals" (formula "22") (term "1,1,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0"))
      (rule "mul_literals" (formula "21") (term "1,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0"))
      (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0"))
      (rule "mul_literals" (formula "28") (term "0,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0"))
      (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0"))
      (rule "mul_literals" (formula "22") (term "0,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0"))
      (rule "inEqSimp_sepNegMonomial1" (formula "21"))
      (rule "polySimp_mulLiterals" (formula "21") (term "0"))
      (rule "polySimp_elimOne" (formula "21") (term "0"))
      (rule "expand_divJint" (formula "49") (term "3"))
      (rule "jdiv_axiom_inline" (formula "49") (term "0,3"))
      (rule "qeq_literals" (formula "49") (term "0,0,3"))
      (rule "ifthenelse_true" (formula "49") (term "0,3"))
      (rule "div_literals" (formula "49") (term "0,3"))
      (rule "expand_divJint" (formula "48") (term "3"))
      (rule "jdiv_axiom_inline" (formula "48") (term "0,3"))
      (rule "qeq_literals" (formula "48") (term "0,0,3"))
      (rule "ifthenelse_true" (formula "48") (term "0,3"))
      (rule "div_literals" (formula "48") (term "0,3"))
      (rule "expand_divJint" (formula "46") (term "3,1,0"))
      (rule "jdiv_axiom_inline" (formula "46") (term "0,3,1,0"))
      (rule "qeq_literals" (formula "46") (term "0,0,3,1,0"))
      (rule "ifthenelse_true" (formula "46") (term "0,3,1,0"))
      (rule "div_literals" (formula "46") (term "0,3,1,0"))
      (rule "cut_direct" (formula "32") (term "0"))
      (branch "CUT: result.<created> = TRUE TRUE"
         (rule "concrete_or_1" (formula "33"))
         (rule "true_left" (formula "33"))
         (rule "replace_known_left" (formula "35") (term "0,1") (ifseqformula "32"))
         (rule "concrete_not_1" (formula "35") (term "1"))
         (rule "concrete_impl_3" (formula "35"))
         (rule "double_not" (formula "35"))
         (rule "applyEq" (formula "29") (term "0,0") (ifseqformula "35"))
         (rule "applyEq" (formula "57") (term "0") (ifseqformula "34"))
         (rule "applyEq" (formula "56") (term "0") (ifseqformula "34"))
         (rule "eqSymm" (formula "56"))
         (rule "arrayLengthNotNegative" (formula "33") (term "0"))
         (rule "arrayLengthIsAnInt" (formula "34") (term "0"))
         (rule "expand_inInt" (formula "34"))
         (rule "replace_int_MAX" (formula "34") (term "1,0"))
         (rule "replace_int_MIN" (formula "34") (term "0,1"))
         (rule "andLeft" (formula "34"))
         (rule "inEqSimp_commuteLeq" (formula "35"))
         (rule "inEqSimp_subsumption1" (formula "35") (ifseqformula "33"))
         (rule "leq_literals" (formula "35") (term "0"))
         (rule "concrete_or_1" (formula "35"))
         (rule "true_left" (formula "35"))
         (rule "inEqSimp_exactShadow3" (formula "35") (ifseqformula "34"))
         (rule "polySimp_rightDist" (formula "35") (term "0,0"))
         (rule "polySimp_mulAssoc" (formula "35") (term "0,0,0"))
         (rule "polySimp_mulComm0" (formula "35") (term "0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "35") (term "0,0,0"))
         (rule "polySimp_elimOne" (formula "35") (term "0,0,0"))
         (rule "polySimp_addComm1" (formula "35") (term "0"))
         (rule "polySimp_addComm0" (formula "35") (term "0,0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "35"))
         (rule "polySimp_mulLiterals" (formula "35") (term "0"))
         (rule "polySimp_elimOne" (formula "35") (term "0"))
         (rule "nnf_imp2or" (formula "53") (term "0"))
         (rule "expand_addJint" (formula "66") (term "1,1"))
         (rule "add_zero_left" (formula "66") (term "0,1,1"))
         (rule "expand_addJint" (formula "66") (term "1,0"))
         (rule "polySimp_addAssoc" (formula "66") (term "0,1,0"))
         (rule "polySimp_pullOutFactor1" (formula "66") (term "0,0,1,0"))
         (rule "add_literals" (formula "66") (term "1,0,0,1,0"))
         (rule "times_zero_1" (formula "66") (term "0,0,1,0"))
         (rule "add_zero_left" (formula "66") (term "0,1,0"))
         (rule "expand_divJint" (formula "25") (term "3"))
         (rule "jdiv_axiom_inline" (formula "25") (term "0,3"))
         (rule "mul_literals" (formula "25") (term "0,0,2,0,3"))
         (rule "qeq_literals" (formula "25") (term "0,0,3"))
         (rule "ifthenelse_true" (formula "25") (term "0,3"))
         (rule "div_literals" (formula "25") (term "0,3"))
         (rule "expand_divJint" (formula "24") (term "3"))
         (rule "jdiv_axiom_inline" (formula "24") (term "0,3"))
         (rule "mul_literals" (formula "24") (term "0,0,2,0,3"))
         (rule "qeq_literals" (formula "24") (term "0,0,3"))
         (rule "ifthenelse_true" (formula "24") (term "0,3"))
         (rule "div_literals" (formula "24") (term "0,3"))
         (rule "expand_divJint" (formula "22") (term "3,1,0"))
         (rule "jdiv_axiom_inline" (formula "22") (term "0,3,1,0"))
         (rule "mul_literals" (formula "22") (term "0,0,2,0,3,1,0"))
         (rule "qeq_literals" (formula "22") (term "0,0,3,1,0"))
         (rule "ifthenelse_true" (formula "22") (term "0,3,1,0"))
         (rule "div_literals" (formula "22") (term "0,3,1,0"))
         (rule "nnf_imp2or" (formula "28") (term "0"))
         (rule "expand_moduloInteger" (formula "50") (term "3"))
         (rule "replace_int_HALFRANGE" (formula "50") (term "0,0,1,3"))
         (rule "replace_int_MIN" (formula "50") (term "0,3"))
         (rule "replace_int_RANGE" (formula "50") (term "1,1,3"))
         (rule "add_literals" (formula "50") (term "0,1,3"))
         (rule "mod_axiom" (formula "50") (term "1,3"))
         (rule "polySimp_mulLiterals" (formula "50") (term "1,1,3"))
         (rule "div_literals" (formula "50") (term "0,1,1,3"))
         (rule "mul_literals" (formula "50") (term "1,1,3"))
         (rule "add_literals" (formula "50") (term "1,3"))
         (rule "add_literals" (formula "50") (term "3"))
         (rule "expand_moduloInteger" (formula "49") (term "3"))
         (rule "replace_int_RANGE" (formula "49") (term "1,1,3"))
         (rule "replace_int_HALFRANGE" (formula "49") (term "0,0,1,3"))
         (rule "replace_int_MIN" (formula "49") (term "0,3"))
         (rule "add_literals" (formula "49") (term "0,1,3"))
         (rule "mod_axiom" (formula "49") (term "1,3"))
         (rule "polySimp_mulLiterals" (formula "49") (term "1,1,3"))
         (rule "div_literals" (formula "49") (term "0,1,1,3"))
         (rule "mul_literals" (formula "49") (term "1,1,3"))
         (rule "add_literals" (formula "49") (term "1,3"))
         (rule "add_literals" (formula "49") (term "3"))
         (rule "expand_moduloInteger" (formula "47") (term "3,1,0"))
         (rule "replace_int_HALFRANGE" (formula "47") (term "0,0,1,3,1,0"))
         (rule "replace_int_MIN" (formula "47") (term "0,3,1,0"))
         (rule "replace_int_RANGE" (formula "47") (term "1,1,3,1,0"))
         (rule "add_literals" (formula "47") (term "0,1,3,1,0"))
         (rule "mod_axiom" (formula "47") (term "1,3,1,0"))
         (rule "polySimp_mulLiterals" (formula "47") (term "1,1,3,1,0"))
         (rule "div_literals" (formula "47") (term "0,1,1,3,1,0"))
         (rule "times_zero_2" (formula "47") (term "1,1,3,1,0"))
         (rule "add_literals" (formula "47") (term "1,3,1,0"))
         (rule "add_literals" (formula "47") (term "3,1,0"))
         (rule "expand_moduloInteger" (formula "66") (term "1,1"))
         (rule "replace_int_MIN" (formula "66") (term "0,1,1"))
         (rule "replace_int_HALFRANGE" (formula "66") (term "0,0,1,1,1"))
         (rule "replace_int_RANGE" (formula "66") (term "1,1,1,1"))
         (rule "polySimp_addAssoc" (formula "66") (term "0,1,1,1"))
         (rule "mod_axiom" (formula "66") (term "1,1,1"))
         (rule "polySimp_mulLiterals" (formula "66") (term "1,1,1,1"))
         (rule "polySimp_addAssoc" (formula "66") (term "1,1"))
         (rule "polySimp_addAssoc" (formula "66") (term "0,1,1"))
         (rule "polySimp_addAssoc" (formula "66") (term "0,0,1,1"))
         (rule "add_literals" (formula "66") (term "0,0,0,1,1"))
         (rule "add_zero_left" (formula "66") (term "0,0,1,1"))
         (rule "expand_moduloInteger" (formula "66") (term "1,0"))
         (rule "replace_int_MIN" (formula "66") (term "0,1,0"))
         (rule "replace_int_HALFRANGE" (formula "66") (term "0,0,1,1,0"))
         (rule "replace_int_RANGE" (formula "66") (term "1,1,1,0"))
         (rule "mod_axiom" (formula "66") (term "1,1,0"))
         (rule "polySimp_mulLiterals" (formula "66") (term "1,1,1,0"))
         (rule "polySimp_addAssoc" (formula "66") (term "1,0"))
         (rule "polySimp_addAssoc" (formula "66") (term "0,1,0"))
         (rule "add_literals" (formula "66") (term "0,0,1,0"))
         (rule "add_zero_left" (formula "66") (term "0,1,0"))
         (rule "expand_moduloInteger" (formula "25") (term "3"))
         (rule "replace_int_HALFRANGE" (formula "25") (term "0,0,1,3"))
         (rule "replace_int_MIN" (formula "25") (term "0,3"))
         (rule "replace_int_RANGE" (formula "25") (term "1,1,3"))
         (rule "add_literals" (formula "25") (term "0,1,3"))
         (rule "mod_axiom" (formula "25") (term "1,3"))
         (rule "polySimp_mulLiterals" (formula "25") (term "1,1,3"))
         (rule "div_literals" (formula "25") (term "0,1,1,3"))
         (rule "mul_literals" (formula "25") (term "1,1,3"))
         (rule "add_literals" (formula "25") (term "1,3"))
         (rule "add_literals" (formula "25") (term "3"))
         (rule "nnf_notAnd" (formula "53") (term "0,0"))
         (rule "inEqSimp_notLeq" (formula "53") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "53") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "53") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "53") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "53") (term "0,0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "53") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "53") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "53") (term "1,1,0,0"))
         (rule "mul_literals" (formula "53") (term "0,1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "53") (term "1,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "53") (term "1,1,1,0,0"))
         (rule "inEqSimp_notGeq" (formula "53") (term "0,0,0"))
         (rule "times_zero_1" (formula "53") (term "1,0,0,0,0,0"))
         (rule "add_literals" (formula "53") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "0,0,0"))
         (rule "mul_literals" (formula "53") (term "1,0,0,0"))
         (rule "expand_moduloInteger" (formula "24") (term "3"))
         (rule "replace_int_MIN" (formula "24") (term "0,3"))
         (rule "replace_int_RANGE" (formula "24") (term "1,1,3"))
         (rule "replace_int_HALFRANGE" (formula "24") (term "0,0,1,3"))
         (rule "add_literals" (formula "24") (term "0,1,3"))
         (rule "mod_axiom" (formula "24") (term "1,3"))
         (rule "polySimp_mulLiterals" (formula "24") (term "1,1,3"))
         (rule "div_literals" (formula "24") (term "0,1,1,3"))
         (rule "mul_literals" (formula "24") (term "1,1,3"))
         (rule "add_literals" (formula "24") (term "1,3"))
         (rule "add_literals" (formula "24") (term "3"))
         (rule "expand_moduloInteger" (formula "22") (term "3,1,0"))
         (rule "replace_int_HALFRANGE" (formula "22") (term "0,0,1,3,1,0"))
         (rule "replace_int_RANGE" (formula "22") (term "1,1,3,1,0"))
         (rule "replace_int_MIN" (formula "22") (term "0,3,1,0"))
         (rule "add_literals" (formula "22") (term "0,1,3,1,0"))
         (rule "mod_axiom" (formula "22") (term "1,3,1,0"))
         (rule "polySimp_mulLiterals" (formula "22") (term "1,1,3,1,0"))
         (rule "div_literals" (formula "22") (term "0,1,1,3,1,0"))
         (rule "times_zero_2" (formula "22") (term "1,1,3,1,0"))
         (rule "add_literals" (formula "22") (term "1,3,1,0"))
         (rule "add_literals" (formula "22") (term "3,1,0"))
         (rule "nnf_notAnd" (formula "28") (term "0,0"))
         (rule "inEqSimp_notGeq" (formula "28") (term "0,0,0"))
         (rule "times_zero_1" (formula "28") (term "1,0,0,0,0,0"))
         (rule "add_literals" (formula "28") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,0"))
         (rule "mul_literals" (formula "28") (term "1,0,0,0"))
         (rule "inEqSimp_notLeq" (formula "28") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "28") (term "0,0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0"))
         (rule "mul_literals" (formula "28") (term "0,1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0"))
         (rule "nnf_imp2or" (formula "47") (term "0"))
         (rule "nnf_imp2or" (formula "22") (term "0"))
         (rule "nnf_notAnd" (formula "47") (term "0,0"))
         (rule "inEqSimp_notLeq" (formula "47") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "47") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "47") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "47") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "47") (term "0,0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "47") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "47") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "47") (term "1,1,0,0"))
         (rule "mul_literals" (formula "47") (term "0,1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "47") (term "1,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "47") (term "1,1,1,0,0"))
         (rule "inEqSimp_notGeq" (formula "47") (term "0,0,0"))
         (rule "times_zero_1" (formula "47") (term "1,0,0,0,0,0"))
         (rule "add_zero_right" (formula "47") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "0,0,0"))
         (rule "mul_literals" (formula "47") (term "1,0,0,0"))
         (rule "nnf_notAnd" (formula "22") (term "0,0"))
         (rule "inEqSimp_notLeq" (formula "22") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "22") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "22") (term "0,0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0"))
         (rule "mul_literals" (formula "22") (term "0,1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0"))
         (rule "inEqSimp_notGeq" (formula "22") (term "0,0,0"))
         (rule "times_zero_1" (formula "22") (term "1,0,0,0,0,0"))
         (rule "add_literals" (formula "22") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0"))
         (rule "mul_literals" (formula "22") (term "1,0,0,0"))
         (rule "ifthenelse_split" (formula "42") (term "0"))
         (branch "self.runBase.<created> = TRUE TRUE"
            (rule "applyEqReverse" (formula "44") (term "0,0,1") (ifseqformula "43"))
            (rule "hideAuxiliaryEq" (formula "43"))
            (rule "polySimp_addComm0" (formula "43") (term "1"))
            (rule "arrayLengthNotNegative" (formula "37") (term "0"))
            (rule "applyEq" (formula "37") (term "0") (ifseqformula "38"))
            (rule "arrayLengthIsAnInt" (formula "37") (term "0"))
            (rule "expand_inInt" (formula "37"))
            (rule "replace_int_MIN" (formula "37") (term "0,1"))
            (rule "replace_int_MAX" (formula "37") (term "1,0"))
            (rule "andLeft" (formula "37"))
            (rule "inEqSimp_commuteLeq" (formula "38"))
            (rule "applyEq" (formula "37") (term "0") (ifseqformula "39"))
            (rule "applyEq" (formula "38") (term "0") (ifseqformula "39"))
            (rule "inEqSimp_subsumption1" (formula "38") (ifseqformula "46"))
            (rule "leq_literals" (formula "38") (term "0"))
            (rule "concrete_or_1" (formula "38"))
            (rule "true_left" (formula "38"))
            (rule "cut_direct" (formula "41") (term "0,0"))
            (branch "CUT: self.a.length >= 1542 TRUE"
               (rule "concrete_and_1" (formula "42") (term "0"))
               (rule "inEqSimp_contradInEq1" (formula "40") (term "1,0") (ifseqformula "41"))
               (rule "qeq_literals" (formula "40") (term "0,1,0"))
               (rule "concrete_and_2" (formula "40") (term "1,0"))
               (rule "concrete_and_4" (formula "40") (term "0"))
               (rule "concrete_impl_2" (formula "40"))
               (rule "true_left" (formula "40"))
               (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "40"))
               (rule "leq_literals" (formula "18") (term "0"))
               (rule "concrete_or_1" (formula "18"))
               (rule "true_left" (formula "18"))
               (rule "inEqSimp_contradInEq1" (formula "38") (term "0") (ifseqformula "39"))
               (rule "qeq_literals" (formula "38") (term "0,0"))
               (rule "concrete_and_2" (formula "38") (term "0"))
               (rule "concrete_impl_2" (formula "38"))
               (rule "true_left" (formula "38"))
               (rule "cut_direct" (formula "40") (term "0"))
               (branch "CUT: self.a.length >= 119151 TRUE"
                  (rule "concrete_impl_1" (formula "41"))
                  (rule "applyEq" (formula "36") (term "0") (ifseqformula "41"))
                  (rule "leq_literals" (formula "36"))
                  (rule "true_left" (formula "36"))
                  (rule "applyEq" (formula "38") (term "0,1") (ifseqformula "40"))
                  (rule "equal_literals" (formula "38") (term "1"))
                  (rule "concrete_impl_3" (formula "38"))
                  (rule "notLeft" (formula "38"))
                  (rule "inEqSimp_leqRight" (formula "56"))
                  (rule "mul_literals" (formula "1") (term "1,0,0"))
                  (rule "add_literals" (formula "1") (term "0,0"))
                  (rule "applyEq" (formula "43") (term "0") (ifseqformula "40"))
                  (rule "qeq_literals" (formula "43"))
                  (rule "true_left" (formula "43"))
                  (rule "applyEq" (formula "44") (term "1") (ifseqformula "40"))
                  (rule "applyEq" (formula "37") (term "1") (ifseqformula "40"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                  (rule "mul_literals" (formula "1") (term "1"))
                  (rule "inEqSimp_subsumption1" (formula "37") (ifseqformula "38"))
                  (rule "leq_literals" (formula "37") (term "0"))
                  (rule "concrete_or_1" (formula "37"))
                  (rule "true_left" (formula "37"))
                  (rule "commute_and" (formula "62"))
                  (rule "commute_or_2" (formula "43") (term "0"))
                  (rule "commute_or_2" (formula "21") (term "0"))
                  (rule "commute_or" (formula "43") (term "0,0"))
                  (rule "commute_or" (formula "21") (term "0,0"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "31") (term "0") (ifseqformula "28"))
                  (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "32"))
                  (rule "replace_known_right" (formula "31") (term "0") (ifseqformula "61"))
                  (rule "concrete_or_2" (formula "31"))
                  (rule "applyEq" (formula "31") (term "1,0") (ifseqformula "32"))
                  (rule "div_axiom" (formula "63") (term "0,1,1,1") (inst "quotient=quotient_22"))
                  (rule "qeq_literals" (formula "1") (term "0,1,1"))
                  (rule "ifthenelse_true_for" (formula "1") (term "1,1"))
                  (rule "equal_literals" (formula "1") (term "0"))
                  (rule "concrete_or_2" (formula "1"))
                  (rule "mul_literals" (formula "1") (term "1,1,1"))
                  (rule "andLeft" (formula "1"))
                  (rule "andLeft" (formula "1"))
                  (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                  (rule "add_literals" (formula "3") (term "0,0,1"))
                  (rule "polySimp_addComm1" (formula "3") (term "1"))
                  (rule "add_literals" (formula "3") (term "0,1"))
                  (rule "inEqSimp_homoInEq0" (formula "2"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                  (rule "polySimp_addComm1" (formula "2") (term "0"))
                  (rule "inEqSimp_homoInEq1" (formula "3"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                  (rule "polySimp_addComm1" (formula "3") (term "0"))
                  (rule "applyEq" (formula "66") (term "0,1,1,1") (ifseqformula "1"))
                  (rule "polySimp_addComm0" (formula "66") (term "1,1"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                  (rule "polySimp_mulComm0" (formula "2") (term "1"))
                  (rule "polySimp_rightDist" (formula "2") (term "1"))
                  (rule "mul_literals" (formula "2") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                  (rule "polySimp_mulComm0" (formula "3") (term "1"))
                  (rule "polySimp_rightDist" (formula "3") (term "1"))
                  (rule "mul_literals" (formula "3") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                  (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "3"))
                  (rule "polySimp_rightDist" (formula "13") (term "0,0"))
                  (rule "mul_literals" (formula "13") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "13") (term "0"))
                  (rule "polySimp_addAssoc" (formula "13") (term "0,0"))
                  (rule "add_literals" (formula "13") (term "0,0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "13"))
                  (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                  (rule "polySimp_elimOne" (formula "13") (term "0"))
                  (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "3"))
                  (rule "mul_literals" (formula "8") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "8") (term "0"))
                  (rule "add_literals" (formula "8") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                  (rule "mul_literals" (formula "8") (term "1"))
                  (rule "elimGcdGeq_antec" (formula "8") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_22") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                  (rule "leq_literals" (formula "8") (term "0,0"))
                  (rule "concrete_or_2" (formula "8") (term "0"))
                  (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0"))
                  (rule "times_zero_1" (formula "8") (term "1,0,0,0,0,0"))
                  (rule "add_literals" (formula "8") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "8") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,0"))
                  (rule "add_literals" (formula "8") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "8") (term "1,0,0"))
                  (rule "add_literals" (formula "8") (term "0,0"))
                  (rule "leq_literals" (formula "8") (term "0"))
                  (rule "concrete_or_2" (formula "8"))
                  (rule "inEqSimp_exactShadow2" (formula "2") (ifseqformula "18"))
                  (rule "greater_literals" (formula "2") (term "0"))
                  (rule "concrete_impl_1" (formula "2"))
                  (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                  (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                  (rule "mul_literals" (formula "2") (term "0,0,0"))
                  (rule "polySimp_addAssoc" (formula "2") (term "0"))
                  (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                  (rule "add_literals" (formula "2") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                  (rule "polySimp_mulComm0" (formula "2") (term "1"))
                  (rule "polySimp_rightDist" (formula "2") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                  (rule "mul_literals" (formula "2") (term "0,1"))
                  (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "8"))
                  (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                  (rule "mul_literals" (formula "3") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                  (rule "polySimp_addAssoc" (formula "3") (term "0"))
                  (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                  (rule "add_literals" (formula "3") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                  (rule "polySimp_mulComm0" (formula "3") (term "1"))
                  (rule "polySimp_rightDist" (formula "3") (term "1"))
                  (rule "mul_literals" (formula "3") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                  (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "18"))
                  (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0"))
                  (rule "mul_literals" (formula "4") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "4") (term "0"))
                  (rule "add_literals" (formula "4") (term "0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                  (rule "elimGcdLeq_antec" (formula "4") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_22") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                  (rule "neg_literal" (formula "4") (term "0,0,0,0,0,1,0"))
                  (rule "leq_literals" (formula "4") (term "0,0"))
                  (rule "concrete_or_2" (formula "4") (term "0"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0"))
                  (rule "times_zero_1" (formula "4") (term "1,0,0,0,0,0"))
                  (rule "add_literals" (formula "4") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "4") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0"))
                  (rule "add_literals" (formula "4") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "4") (term "1,0,0"))
                  (rule "add_literals" (formula "4") (term "0,0"))
                  (rule "qeq_literals" (formula "4") (term "0"))
                  (rule "concrete_or_2" (formula "4"))
                  (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "17"))
                  (rule "times_zero_1" (formula "15") (term "0,0"))
                  (rule "add_zero_left" (formula "15") (term "0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                  (rule "mul_literals" (formula "15") (term "1"))
                  (rule "inEqSimp_subsumption6" (formula "15") (ifseqformula "11"))
                  (rule "times_zero_1" (formula "15") (term "1,1,0"))
                  (rule "greater_literals" (formula "15") (term "0,0"))
                  (rule "concrete_and_1" (formula "15") (term "0"))
                  (rule "leq_literals" (formula "15") (term "0"))
                  (rule "concrete_or_1" (formula "15"))
                  (rule "true_left" (formula "15"))
                  (rule "inEqSimp_antiSymm" (formula "11") (ifseqformula "4"))
                  (rule "applyEqRigid" (formula "3") (term "0,1,1") (ifseqformula "11"))
                  (rule "mul_literals" (formula "3") (term "1,1"))
                  (rule "add_literals" (formula "3") (term "1"))
                  (rule "applyEqRigid" (formula "6") (term "0,1,1") (ifseqformula "11"))
                  (rule "mul_literals" (formula "6") (term "1,1"))
                  (rule "add_zero_right" (formula "6") (term "1"))
                  (rule "applyEq" (formula "5") (term "0,1,1") (ifseqformula "11"))
                  (rule "times_zero_2" (formula "5") (term "1,1"))
                  (rule "add_literals" (formula "5") (term "1"))
                  (rule "applyEq" (formula "2") (term "0,1,1") (ifseqformula "10"))
                  (rule "times_zero_2" (formula "2") (term "1,1"))
                  (rule "add_literals" (formula "2") (term "1"))
                  (rule "applyEqRigid" (formula "4") (term "0") (ifseqformula "10"))
                  (rule "leq_literals" (formula "4"))
                  (rule "true_left" (formula "4"))
                  (rule "applyEq" (formula "10") (term "0") (ifseqformula "9"))
                  (rule "qeq_literals" (formula "10"))
                  (rule "true_left" (formula "10"))
                  (rule "applyEq" (formula "15") (term "0,1,1") (ifseqformula "9"))
                  (rule "times_zero_2" (formula "15") (term "1,1"))
                  (rule "add_zero_right" (formula "15") (term "1"))
                  (rule "applyEqRigid" (formula "1") (term "1") (ifseqformula "9"))
                  (rule "applyEq" (formula "69") (term "0,0,1,1") (ifseqformula "9"))
                  (rule "times_zero_2" (formula "69") (term "0,1,1"))
                  (rule "add_zero_left" (formula "69") (term "1,1"))
                  (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "13"))
                  (rule "leq_literals" (formula "3") (term "0"))
                  (rule "concrete_or_1" (formula "3"))
                  (rule "true_left" (formula "3"))
                  (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "12"))
                  (rule "leq_literals" (formula "2") (term "0"))
                  (rule "concrete_or_1" (formula "2"))
                  (rule "true_left" (formula "2"))
                  (rule "inEqSimp_subsumption0" (formula "13") (ifseqformula "12"))
                  (rule "leq_literals" (formula "13") (term "0"))
                  (rule "concrete_or_1" (formula "13"))
                  (rule "true_left" (formula "13"))
                  (rule "inEqSimp_subsumption0" (formula "2") (ifseqformula "14"))
                  (rule "leq_literals" (formula "2") (term "0"))
                  (rule "concrete_or_1" (formula "2"))
                  (rule "true_left" (formula "2"))
                  (rule "div_axiom" (formula "65") (term "0,1,1,0") (inst "quotient=quotient_23"))
                  (rule "mul_literals" (formula "1") (term "1,1,1,1,1"))
                  (rule "qeq_literals" (formula "1") (term "0,1,1"))
                  (rule "ifthenelse_true_for" (formula "1") (term "1,1"))
                  (rule "equal_literals" (formula "1") (term "0"))
                  (rule "concrete_or_2" (formula "1"))
                  (rule "andLeft" (formula "1"))
                  (rule "andLeft" (formula "1"))
                  (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                  (rule "polySimp_addComm1" (formula "3") (term "1"))
                  (rule "polySimp_addAssoc" (formula "3") (term "0,0,1"))
                  (rule "add_literals" (formula "3") (term "0,0,0,1"))
                  (rule "polySimp_addComm1" (formula "3") (term "0,1"))
                  (rule "add_literals" (formula "3") (term "0,0,1"))
                  (rule "inEqSimp_homoInEq0" (formula "2"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                  (rule "polySimp_addComm1" (formula "2") (term "0"))
                  (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                  (rule "inEqSimp_homoInEq1" (formula "3"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                  (rule "polySimp_addComm1" (formula "3") (term "0"))
                  (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                  (rule "applyEq" (formula "68") (term "0,1,1,0") (ifseqformula "1"))
                  (rule "polySimp_addComm1" (formula "68") (term "1,0"))
                  (rule "polySimp_addComm0" (formula "68") (term "0,1,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                  (rule "polySimp_mulComm0" (formula "2") (term "1"))
                  (rule "polySimp_rightDist" (formula "2") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                  (rule "polySimp_rightDist" (formula "2") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1"))
                  (rule "mul_literals" (formula "2") (term "0,0,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                  (rule "polySimp_mulComm0" (formula "3") (term "1"))
                  (rule "polySimp_rightDist" (formula "3") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                  (rule "polySimp_rightDist" (formula "3") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1"))
                  (rule "mul_literals" (formula "3") (term "0,0,1"))
                  (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "3"))
                  (rule "polySimp_rightDist" (formula "15") (term "0,0"))
                  (rule "mul_literals" (formula "15") (term "0,0,0"))
                  (rule "polySimp_addAssoc" (formula "15") (term "0"))
                  (rule "polySimp_addComm1" (formula "15") (term "0,0"))
                  (rule "polySimp_pullOutFactor2b" (formula "15") (term "0"))
                  (rule "add_literals" (formula "15") (term "1,1,0"))
                  (rule "times_zero_1" (formula "15") (term "1,0"))
                  (rule "add_zero_right" (formula "15") (term "0"))
                  (rule "polySimp_addAssoc" (formula "15") (term "0"))
                  (rule "add_literals" (formula "15") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                  (rule "mul_literals" (formula "15") (term "1"))
                  (rule "elimGcdGeq_antec" (formula "15") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_23") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                  (rule "times_zero_1" (formula "15") (term "1,0,0,0,0,1,0"))
                  (rule "leq_literals" (formula "15") (term "0,0"))
                  (rule "concrete_or_2" (formula "15") (term "0"))
                  (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0"))
                  (rule "polySimp_addLiterals" (formula "15") (term "0,0,0,0"))
                  (rule "add_literals" (formula "15") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "15") (term "0,0"))
                  (rule "add_literals" (formula "15") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "15") (term "1,0,0"))
                  (rule "add_literals" (formula "15") (term "0,0"))
                  (rule "leq_literals" (formula "15") (term "0"))
                  (rule "concrete_or_2" (formula "15"))
                  (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "8"))
                  (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                  (rule "polySimp_rightDist" (formula "2") (term "0,0,0"))
                  (rule "mul_literals" (formula "2") (term "0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "2") (term "0"))
                  (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                  (rule "polySimp_pullOutFactor2b" (formula "2") (term "0"))
                  (rule "add_literals" (formula "2") (term "1,1,0"))
                  (rule "times_zero_1" (formula "2") (term "1,0"))
                  (rule "add_zero_right" (formula "2") (term "0"))
                  (rule "polySimp_addComm1" (formula "2") (term "0"))
                  (rule "add_literals" (formula "2") (term "0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                  (rule "elimGcdLeq_antec" (formula "2") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_23") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                  (rule "leq_literals" (formula "2") (term "0,0"))
                  (rule "concrete_or_2" (formula "2") (term "0"))
                  (rule "neg_literal" (formula "2") (term "0,0,0,0,0,0"))
                  (rule "times_zero_1" (formula "2") (term "1,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                  (rule "add_literals" (formula "2") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "2") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                  (rule "add_literals" (formula "2") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "2") (term "1,0,0"))
                  (rule "add_literals" (formula "2") (term "0,0"))
                  (rule "qeq_literals" (formula "2") (term "0"))
                  (rule "concrete_or_2" (formula "2"))
                  (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "4"))
                  (rule "mul_literals" (formula "11") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "11") (term "0"))
                  (rule "polySimp_addAssoc" (formula "11") (term "0,0"))
                  (rule "add_literals" (formula "11") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                  (rule "polySimp_mulComm0" (formula "11") (term "1"))
                  (rule "polySimp_rightDist" (formula "11") (term "1"))
                  (rule "mul_literals" (formula "11") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
                  (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "19"))
                  (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "3") (term "0"))
                  (rule "polySimp_rightDist" (formula "3") (term "0,0,0"))
                  (rule "mul_literals" (formula "3") (term "0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0"))
                  (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                  (rule "add_literals" (formula "3") (term "0,0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                  (rule "polySimp_elimOne" (formula "3") (term "0"))
                  (rule "inEqSimp_exactShadow2" (formula "4") (ifseqformula "22"))
                  (rule "greater_literals" (formula "4") (term "0"))
                  (rule "concrete_impl_1" (formula "4"))
                  (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "4") (term "0,1,0,0"))
                  (rule "mul_literals" (formula "4") (term "0,0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1,0,0"))
                  (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "4") (term "0,0,0"))
                  (rule "mul_literals" (formula "4") (term "0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "4") (term "0"))
                  (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                  (rule "polySimp_pullOutFactor2b" (formula "4") (term "0"))
                  (rule "add_literals" (formula "4") (term "1,1,0"))
                  (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                  (rule "add_literals" (formula "4") (term "0,0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                  (rule "polySimp_elimOne" (formula "4") (term "0"))
                  (rule "inEqSimp_antiSymm" (formula "19") (ifseqformula "2"))
                  (rule "applyEqRigid" (formula "4") (term "0,1,1") (ifseqformula "19"))
                  (rule "times_zero_2" (formula "4") (term "1,1"))
                  (rule "add_zero_right" (formula "4") (term "1"))
                  (rule "applyEq" (formula "2") (term "0") (ifseqformula "19"))
                  (rule "leq_literals" (formula "2"))
                  (rule "true_left" (formula "2"))
                  (rule "applyEq" (formula "12") (term "0,1,1") (ifseqformula "18"))
                  (rule "times_zero_2" (formula "12") (term "1,1"))
                  (rule "add_literals" (formula "12") (term "1"))
                  (rule "applyEq" (formula "19") (term "0") (ifseqformula "18"))
                  (rule "qeq_literals" (formula "19"))
                  (rule "true_left" (formula "19"))
                  (rule "applyEqRigid" (formula "2") (term "0,1,1") (ifseqformula "18"))
                  (rule "times_zero_2" (formula "2") (term "1,1"))
                  (rule "add_zero_right" (formula "2") (term "1"))
                  (rule "applyEq" (formula "4") (term "0,1,0,1") (ifseqformula "18"))
                  (rule "times_zero_2" (formula "4") (term "1,0,1"))
                  (rule "add_literals" (formula "4") (term "0,1"))
                  (rule "applyEqRigid" (formula "1") (term "1") (ifseqformula "18"))
                  (rule "applyEq" (formula "5") (term "0,1,0,1") (ifseqformula "18"))
                  (rule "times_zero_2" (formula "5") (term "1,0,1"))
                  (rule "add_zero_right" (formula "5") (term "0,1"))
                  (rule "applyEq" (formula "71") (term "0,0,0,1,0") (ifseqformula "17"))
                  (rule "times_zero_2" (formula "71") (term "0,0,1,0"))
                  (rule "add_zero_left" (formula "71") (term "0,1,0"))
                  (rule "replace_known_left" (formula "71") (term "0") (ifseqformula "43"))
                  (rule "concrete_and_1" (formula "71"))
                  (rule "inEqSimp_geqRight" (formula "71"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1"))
                  (rule "polySimp_rightDist" (formula "1") (term "1"))
                  (rule "mul_literals" (formula "1") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                  (rule "inEqSimp_subsumption0" (formula "4") (ifseqformula "3"))
                  (rule "leq_literals" (formula "4") (term "0"))
                  (rule "concrete_or_1" (formula "4"))
                  (rule "true_left" (formula "4"))
                  (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "16"))
                  (rule "leq_literals" (formula "3") (term "0"))
                  (rule "concrete_or_1" (formula "3"))
                  (rule "true_left" (formula "3"))
                  (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "17"))
                  (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                  (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                  (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                  (rule "add_literals" (formula "3") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0"))
                  (rule "add_literals" (formula "3") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "3") (term "1,0,0"))
                  (rule "add_literals" (formula "3") (term "0,0"))
                  (rule "qeq_literals" (formula "3") (term "0"))
                  (rule "concrete_or_1" (formula "3"))
                  (rule "true_left" (formula "3"))
                  (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "13"))
                  (rule "leq_literals" (formula "9") (term "0"))
                  (rule "concrete_or_1" (formula "9"))
                  (rule "true_left" (formula "9"))
                  (rule "inEqSimp_exactShadow3" (formula "43") (ifseqformula "1"))
                  (rule "mul_literals" (formula "43") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "43") (term "0"))
                  (rule "add_literals" (formula "43") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "43"))
                  (rule "mul_literals" (formula "43") (term "1"))
                  (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "43"))
                  (rule "leq_literals" (formula "9") (term "0"))
                  (rule "concrete_or_1" (formula "9"))
                  (rule "true_left" (formula "9"))
                  (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "1"))
                  (rule "polySimp_rightDist" (formula "23") (term "0,0"))
                  (rule "polySimp_mulComm0" (formula "23") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "23") (term "0"))
                  (rule "polySimp_addAssoc" (formula "23") (term "0,0"))
                  (rule "polySimp_addComm0" (formula "23") (term "0,0,0"))
                  (rule "polySimp_pullOutFactor2b" (formula "23") (term "0,0"))
                  (rule "add_literals" (formula "23") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "23") (term "1,0,0"))
                  (rule "add_literals" (formula "23") (term "0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "23"))
                  (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                  (rule "polySimp_elimOne" (formula "23") (term "0"))
                  (rule "inEqSimp_contradInEq0" (formula "16") (ifseqformula "23"))
                  (rule "qeq_literals" (formula "16") (term "0"))
                  (rule "concrete_and_2" (formula "16"))
                  (rule "closeFalse" (formula "16"))
               )
               (branch "CUT: self.a.length >= 119151 FALSE"
                  (rule "concrete_impl_2" (formula "40"))
                  (rule "true_left" (formula "40"))
                  (rule "inEqSimp_geqRight" (formula "56"))
                  (rule "mul_literals" (formula "1") (term "1,0,0"))
                  (rule "add_literals" (formula "1") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                  (rule "mul_literals" (formula "1") (term "1"))
                  (rule "replace_known_left" (formula "40") (term "0") (ifseqformula "1"))
                  (rule "concrete_impl_1" (formula "40"))
                  (rule "applyEq" (formula "45") (term "1") (ifseqformula "40"))
                  (rule "applyEq" (formula "37") (term "0") (ifseqformula "40"))
                  (rule "leq_literals" (formula "37"))
                  (rule "true_left" (formula "37"))
                  (rule "applyEq" (formula "42") (term "0") (ifseqformula "39"))
                  (rule "qeq_literals" (formula "42"))
                  (rule "true_left" (formula "42"))
                  (rule "applyEq" (formula "37") (term "1") (ifseqformula "39"))
                  (rule "inEqSimp_subsumption0" (formula "17") (ifseqformula "1"))
                  (rule "leq_literals" (formula "17") (term "0"))
                  (rule "concrete_or_1" (formula "17"))
                  (rule "true_left" (formula "17"))
                  (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "1"))
                  (rule "polySimp_rightDist" (formula "19") (term "0,0"))
                  (rule "polySimp_mulComm0" (formula "19") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "19") (term "0"))
                  (rule "polySimp_addComm0" (formula "19") (term "0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "19"))
                  (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                  (rule "polySimp_elimOne" (formula "19") (term "0"))
                  (rule "inEqSimp_subsumption0" (formula "17") (ifseqformula "19"))
                  (rule "inEqSimp_homoInEq0" (formula "17") (term "0"))
                  (rule "polySimp_mulComm0" (formula "17") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "17") (term "1,0,0"))
                  (rule "mul_literals" (formula "17") (term "0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "17") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "17") (term "0,0,0"))
                  (rule "add_literals" (formula "17") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor2b" (formula "17") (term "0,0"))
                  (rule "add_literals" (formula "17") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "17") (term "1,0,0"))
                  (rule "add_literals" (formula "17") (term "0,0"))
                  (rule "qeq_literals" (formula "17") (term "0"))
                  (rule "concrete_or_1" (formula "17"))
                  (rule "true_left" (formula "17"))
                  (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "18"))
                  (rule "mul_literals" (formula "13") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "13") (term "0"))
                  (rule "add_literals" (formula "13") (term "0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "13"))
                  (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                  (rule "polySimp_elimOne" (formula "13") (term "0"))
                  (rule "inEqSimp_subsumption0" (formula "12") (ifseqformula "13"))
                  (rule "leq_literals" (formula "12") (term "0"))
                  (rule "concrete_or_1" (formula "12"))
                  (rule "true_left" (formula "12"))
                  (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "18"))
                  (rule "polySimp_rightDist" (formula "15") (term "0,0"))
                  (rule "polySimp_mulAssoc" (formula "15") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "15") (term "0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "15") (term "0,0,0"))
                  (rule "polySimp_elimOne" (formula "15") (term "0,0,0"))
                  (rule "polySimp_addAssoc" (formula "15") (term "0"))
                  (rule "polySimp_addComm1" (formula "15") (term "0,0"))
                  (rule "polySimp_pullOutFactor3b" (formula "15") (term "0"))
                  (rule "polySimp_mulLiterals" (formula "15") (term "1,0"))
                  (rule "polySimp_addComm0" (formula "15") (term "0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "15"))
                  (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                  (rule "inEqSimp_subsumption0" (formula "14") (ifseqformula "15"))
                  (rule "inEqSimp_homoInEq0" (formula "14") (term "0"))
                  (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "14") (term "1,0,0"))
                  (rule "mul_literals" (formula "14") (term "0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "14") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "14") (term "0,0,0"))
                  (rule "add_literals" (formula "14") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0"))
                  (rule "add_literals" (formula "14") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "14") (term "1,0,0"))
                  (rule "add_literals" (formula "14") (term "0,0"))
                  (rule "qeq_literals" (formula "14") (term "0"))
                  (rule "concrete_or_1" (formula "14"))
                  (rule "true_left" (formula "14"))
                  (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "12"))
                  (rule "polySimp_rightDist" (formula "11") (term "0,0"))
                  (rule "mul_literals" (formula "11") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "11") (term "0"))
                  (rule "add_literals" (formula "11") (term "0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "11"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                  (rule "polySimp_elimOne" (formula "11") (term "0"))
                  (rule "inEqSimp_subsumption0" (formula "10") (ifseqformula "11"))
                  (rule "leq_literals" (formula "10") (term "0"))
                  (rule "concrete_or_1" (formula "10"))
                  (rule "true_left" (formula "10"))
                  (rule "inEqSimp_exactShadow2" (formula "11") (ifseqformula "14"))
                  (rule "greater_literals" (formula "11") (term "0"))
                  (rule "concrete_impl_1" (formula "11"))
                  (rule "polySimp_rightDist" (formula "11") (term "1,0,0"))
                  (rule "mul_literals" (formula "11") (term "0,1,0,0"))
                  (rule "polySimp_rightDist" (formula "11") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0"))
                  (rule "mul_literals" (formula "11") (term "0,0,0"))
                  (rule "polySimp_addAssoc" (formula "11") (term "0"))
                  (rule "polySimp_addComm1" (formula "11") (term "0,0"))
                  (rule "add_literals" (formula "11") (term "0,0,0"))
                  (rule "polySimp_pullOutFactor2b" (formula "11") (term "0"))
                  (rule "add_literals" (formula "11") (term "1,1,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "11"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                  (rule "polySimp_elimOne" (formula "11") (term "0"))
                  (rule "inEqSimp_exactShadow2" (formula "6") (ifseqformula "14"))
                  (rule "greater_literals" (formula "6") (term "0"))
                  (rule "concrete_impl_1" (formula "6"))
                  (rule "mul_literals" (formula "6") (term "1,0,0"))
                  (rule "mul_literals" (formula "6") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "6") (term "0"))
                  (rule "add_literals" (formula "6") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                  (rule "mul_literals" (formula "6") (term "1"))
                  (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "10"))
                  (rule "leq_literals" (formula "6") (term "0"))
                  (rule "concrete_or_1" (formula "6"))
                  (rule "true_left" (formula "6"))
                  (rule "commute_and" (formula "62"))
                  (rule "commute_or_2" (formula "43") (term "0"))
                  (rule "commute_or_2" (formula "21") (term "0"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "31") (term "0") (ifseqformula "28"))
                  (rule "applyEq" (formula "31") (term "1,0,1") (ifseqformula "32"))
                  (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "32"))
                  (rule "replace_known_right" (formula "31") (term "0") (ifseqformula "61"))
                  (rule "concrete_or_2" (formula "31"))
                  (rule "commute_or" (formula "44") (term "0,0"))
                  (rule "commute_or" (formula "21") (term "0,0"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "55") (term "0") (ifseqformula "2"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "61"))
                  (rule "concrete_or_2" (formula "1"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "60") (term "0") (ifseqformula "3"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "61"))
                  (rule "concrete_or_2" (formula "1"))
                  (rule "arrayLengthNotNegative" (formula "40") (term "0"))
                  (rule "applyEq" (formula "40") (term "0") (ifseqformula "41"))
                  (rule "qeq_literals" (formula "40"))
                  (rule "true_left" (formula "40"))
                  (rule "arrayLengthIsAnInt" (formula "40") (term "0"))
                  (rule "expand_inInt" (formula "40"))
                  (rule "replace_int_MIN" (formula "40") (term "0,1"))
                  (rule "replace_int_MAX" (formula "40") (term "1,0"))
                  (rule "andLeft" (formula "40"))
                  (rule "inEqSimp_commuteLeq" (formula "41"))
                  (rule "applyEq" (formula "41") (term "0") (ifseqformula "42"))
                  (rule "qeq_literals" (formula "41"))
                  (rule "true_left" (formula "41"))
                  (rule "applyEq" (formula "40") (term "0") (ifseqformula "41"))
                  (rule "leq_literals" (formula "40"))
                  (rule "true_left" (formula "40"))
                  (rule "div_axiom" (formula "64") (term "0,1,1,0") (inst "quotient=quotient_20"))
                  (rule "equal_literals" (formula "1") (term "0"))
                  (rule "concrete_or_2" (formula "1"))
                  (rule "mul_literals" (formula "1") (term "1,1,1,1"))
                  (rule "qeq_literals" (formula "1") (term "0,1"))
                  (rule "ifthenelse_true_for" (formula "1") (term "1"))
                  (rule "andLeft" (formula "1"))
                  (rule "andLeft" (formula "1"))
                  (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                  (rule "polySimp_addComm1" (formula "3") (term "1"))
                  (rule "polySimp_addAssoc" (formula "3") (term "0,0,1"))
                  (rule "add_literals" (formula "3") (term "0,0,0,1"))
                  (rule "polySimp_addComm1" (formula "3") (term "0,1"))
                  (rule "add_literals" (formula "3") (term "0,0,1"))
                  (rule "inEqSimp_homoInEq0" (formula "2"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                  (rule "polySimp_addComm1" (formula "2") (term "0"))
                  (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                  (rule "inEqSimp_homoInEq1" (formula "3"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                  (rule "polySimp_addComm1" (formula "3") (term "0"))
                  (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                  (rule "applyEq" (formula "67") (term "0,1,1,0") (ifseqformula "1"))
                  (rule "polySimp_addComm1" (formula "67") (term "1,0"))
                  (rule "polySimp_addComm0" (formula "67") (term "0,1,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                  (rule "polySimp_mulComm0" (formula "2") (term "1"))
                  (rule "polySimp_rightDist" (formula "2") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                  (rule "polySimp_rightDist" (formula "2") (term "0,1"))
                  (rule "mul_literals" (formula "2") (term "0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                  (rule "polySimp_mulComm0" (formula "3") (term "1"))
                  (rule "polySimp_rightDist" (formula "3") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                  (rule "polySimp_rightDist" (formula "3") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1"))
                  (rule "mul_literals" (formula "3") (term "0,0,1"))
                  (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "3"))
                  (rule "polySimp_rightDist" (formula "15") (term "0,0"))
                  (rule "mul_literals" (formula "15") (term "0,0,0"))
                  (rule "polySimp_addAssoc" (formula "15") (term "0"))
                  (rule "polySimp_addComm1" (formula "15") (term "0,0"))
                  (rule "polySimp_pullOutFactor2b" (formula "15") (term "0"))
                  (rule "add_literals" (formula "15") (term "1,1,0"))
                  (rule "times_zero_1" (formula "15") (term "1,0"))
                  (rule "add_zero_right" (formula "15") (term "0"))
                  (rule "polySimp_addAssoc" (formula "15") (term "0"))
                  (rule "add_literals" (formula "15") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                  (rule "mul_literals" (formula "15") (term "1"))
                  (rule "elimGcdGeq_antec" (formula "15") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_20") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                  (rule "leq_literals" (formula "15") (term "0,0"))
                  (rule "concrete_or_2" (formula "15") (term "0"))
                  (rule "times_zero_1" (formula "15") (term "1,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0"))
                  (rule "polySimp_addLiterals" (formula "15") (term "0,0,0,0"))
                  (rule "add_literals" (formula "15") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "15") (term "0,0"))
                  (rule "add_literals" (formula "15") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "15") (term "1,0,0"))
                  (rule "add_zero_right" (formula "15") (term "0,0"))
                  (rule "leq_literals" (formula "15") (term "0"))
                  (rule "concrete_or_2" (formula "15"))
                  (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "3"))
                  (rule "mul_literals" (formula "10") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "10") (term "0"))
                  (rule "polySimp_addAssoc" (formula "10") (term "0,0"))
                  (rule "add_literals" (formula "10") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                  (rule "polySimp_mulComm0" (formula "10") (term "1"))
                  (rule "polySimp_rightDist" (formula "10") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "10") (term "1,1"))
                  (rule "mul_literals" (formula "10") (term "0,1"))
                  (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "18"))
                  (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "2") (term "0"))
                  (rule "polySimp_rightDist" (formula "2") (term "0,0,0"))
                  (rule "mul_literals" (formula "2") (term "0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0"))
                  (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                  (rule "add_literals" (formula "2") (term "0,0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                  (rule "polySimp_elimOne" (formula "2") (term "0"))
                  (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "10"))
                  (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                  (rule "polySimp_rightDist" (formula "3") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "3") (term "0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "3") (term "0"))
                  (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                  (rule "polySimp_pullOutFactor2b" (formula "3") (term "0"))
                  (rule "add_literals" (formula "3") (term "1,1,0"))
                  (rule "times_zero_1" (formula "3") (term "1,0"))
                  (rule "polySimp_addLiterals" (formula "3") (term "0"))
                  (rule "polySimp_addComm1" (formula "3") (term "0"))
                  (rule "add_literals" (formula "3") (term "0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                  (rule "elimGcdLeq_antec" (formula "3") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_20") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                  (rule "times_zero_1" (formula "3") (term "1,0,0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,0"))
                  (rule "leq_literals" (formula "3") (term "0,0"))
                  (rule "concrete_or_2" (formula "3") (term "0"))
                  (rule "neg_literal" (formula "3") (term "0,0,0,0,0,0"))
                  (rule "polySimp_addLiterals" (formula "3") (term "0,0,0,0"))
                  (rule "add_literals" (formula "3") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                  (rule "add_literals" (formula "3") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "3") (term "1,0,0"))
                  (rule "add_zero_right" (formula "3") (term "0,0"))
                  (rule "qeq_literals" (formula "3") (term "0"))
                  (rule "concrete_or_2" (formula "3"))
                  (rule "inEqSimp_exactShadow2" (formula "4") (ifseqformula "22"))
                  (rule "greater_literals" (formula "4") (term "0"))
                  (rule "concrete_impl_1" (formula "4"))
                  (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "4") (term "0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1,0,0"))
                  (rule "mul_literals" (formula "4") (term "0,0,1,0,0"))
                  (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "4") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "4") (term "0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "4") (term "0"))
                  (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                  (rule "polySimp_pullOutFactor2b" (formula "4") (term "0"))
                  (rule "add_literals" (formula "4") (term "1,1,0"))
                  (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                  (rule "add_literals" (formula "4") (term "0,0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                  (rule "polySimp_elimOne" (formula "4") (term "0"))
                  (rule "inEqSimp_antiSymm" (formula "19") (ifseqformula "3"))
                  (rule "applyEqRigid" (formula "3") (term "0") (ifseqformula "19"))
                  (rule "leq_literals" (formula "3"))
                  (rule "true_left" (formula "3"))
                  (rule "applyEqRigid" (formula "2") (term "0,1,1") (ifseqformula "18"))
                  (rule "mul_literals" (formula "2") (term "1,1"))
                  (rule "add_literals" (formula "2") (term "1"))
                  (rule "applyEq" (formula "12") (term "0,1,1") (ifseqformula "18"))
                  (rule "times_zero_2" (formula "12") (term "1,1"))
                  (rule "add_zero_right" (formula "12") (term "1"))
                  (rule "applyEqRigid" (formula "19") (term "0") (ifseqformula "18"))
                  (rule "qeq_literals" (formula "19"))
                  (rule "true_left" (formula "19"))
                  (rule "applyEqRigid" (formula "3") (term "0,1,1") (ifseqformula "18"))
                  (rule "mul_literals" (formula "3") (term "1,1"))
                  (rule "add_literals" (formula "3") (term "1"))
                  (rule "applyEqRigid" (formula "5") (term "0,1,0,1") (ifseqformula "18"))
                  (rule "mul_literals" (formula "5") (term "1,0,1"))
                  (rule "add_literals" (formula "5") (term "0,1"))
                  (rule "applyEqRigid" (formula "4") (term "0,1,0,1") (ifseqformula "17"))
                  (rule "mul_literals" (formula "4") (term "1,0,1"))
                  (rule "add_zero_right" (formula "4") (term "0,1"))
                  (rule "applyEqRigid" (formula "1") (term "1") (ifseqformula "17"))
                  (rule "applyEq" (formula "70") (term "0,0,0,1,0") (ifseqformula "17"))
                  (rule "mul_literals" (formula "70") (term "0,0,1,0"))
                  (rule "add_zero_left" (formula "70") (term "0,1,0"))
                  (rule "replace_known_left" (formula "70") (term "0") (ifseqformula "42"))
                  (rule "concrete_and_1" (formula "70"))
                  (rule "inEqSimp_geqRight" (formula "70"))
                  (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                  (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1"))
                  (rule "polySimp_rightDist" (formula "1") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                  (rule "polySimp_rightDist" (formula "1") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1"))
                  (rule "mul_literals" (formula "1") (term "0,0,1"))
                  (rule "polySimp_elimOne" (formula "1") (term "1,0,1"))
                  (rule "inEqSimp_subsumption0" (formula "4") (ifseqformula "3"))
                  (rule "leq_literals" (formula "4") (term "0"))
                  (rule "concrete_or_1" (formula "4"))
                  (rule "true_left" (formula "4"))
                  (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "18"))
                  (rule "inEqSimp_homoInEq0" (formula "4") (term "0"))
                  (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                  (rule "mul_literals" (formula "4") (term "0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                  (rule "add_literals" (formula "4") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0"))
                  (rule "add_literals" (formula "4") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "4") (term "1,0,0"))
                  (rule "add_zero_right" (formula "4") (term "0,0"))
                  (rule "qeq_literals" (formula "4") (term "0"))
                  (rule "concrete_or_1" (formula "4"))
                  (rule "true_left" (formula "4"))
                  (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "14"))
                  (rule "leq_literals" (formula "10") (term "0"))
                  (rule "concrete_or_1" (formula "10"))
                  (rule "true_left" (formula "10"))
                  (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "14"))
                  (rule "leq_literals" (formula "3") (term "0"))
                  (rule "concrete_or_1" (formula "3"))
                  (rule "true_left" (formula "3"))
                  (rule "inEqSimp_exactShadow3" (formula "42") (ifseqformula "1"))
                  (rule "mul_literals" (formula "42") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "42") (term "0"))
                  (rule "polySimp_addAssoc" (formula "42") (term "0,0"))
                  (rule "add_literals" (formula "42") (term "0,0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "42"))
                  (rule "polySimp_mulLiterals" (formula "42") (term "0"))
                  (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "1"))
                  (rule "polySimp_rightDist" (formula "23") (term "0,0"))
                  (rule "polySimp_mulComm0" (formula "23") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "23") (term "0"))
                  (rule "polySimp_addAssoc" (formula "23") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "23") (term "0,0,0"))
                  (rule "polySimp_addComm0" (formula "23") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor2b" (formula "23") (term "0,0,0"))
                  (rule "add_literals" (formula "23") (term "1,1,0,0,0"))
                  (rule "times_zero_1" (formula "23") (term "1,0,0,0"))
                  (rule "add_literals" (formula "23") (term "0,0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "23"))
                  (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                  (rule "polySimp_elimOne" (formula "23") (term "0"))
                  (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "23"))
                  (rule "polySimp_rightDist" (formula "19") (term "0,0"))
                  (rule "polySimp_mulAssoc" (formula "19") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "19") (term "0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "19") (term "0,0,0"))
                  (rule "polySimp_elimOne" (formula "19") (term "0,0,0"))
                  (rule "polySimp_addAssoc" (formula "19") (term "0"))
                  (rule "polySimp_addComm1" (formula "19") (term "0,0"))
                  (rule "polySimp_addComm0" (formula "19") (term "0,0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "19"))
                  (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                  (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "24"))
                  (rule "mul_literals" (formula "17") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "17") (term "0"))
                  (rule "add_literals" (formula "17") (term "0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "17"))
                  (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                  (rule "elimGcdLeq_antec" (formula "17") (inst "elimGcdRightDiv=Z(neglit(1(#)))") (inst "elimGcdLeftDiv=div(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))), base2),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                  (rule "leq_literals" (formula "17") (term "0,0"))
                  (rule "concrete_or_2" (formula "17") (term "0"))
                  (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,0,0,0"))
                  (rule "neg_literal" (formula "17") (term "0,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0"))
                  (rule "mul_literals" (formula "17") (term "1,0,0,0,0,0"))
                  (rule "polySimp_addLiterals" (formula "17") (term "0,0,0,0"))
                  (rule "add_literals" (formula "17") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "17") (term "0,0"))
                  (rule "add_literals" (formula "17") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "17") (term "1,0,0"))
                  (rule "add_zero_right" (formula "17") (term "0,0"))
                  (rule "qeq_literals" (formula "17") (term "0"))
                  (rule "concrete_or_2" (formula "17"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "66") (term "0") (ifseqformula "5"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "67"))
                  (rule "concrete_or_2" (formula "1"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "44") (term "0") (ifseqformula "6"))
                  (rule "applyEq" (formula "44") (term "0,0") (ifseqformula "45"))
                  (rule "replace_known_right" (formula "44") (term "0") (ifseqformula "71"))
                  (rule "concrete_or_2" (formula "44"))
                  (rule "applyEq" (formula "44") (term "1,0") (ifseqformula "45"))
                  (rule "div_axiom" (formula "2") (term "0,1,1") (inst "quotient=quotient_21"))
                  (rule "equal_literals" (formula "2") (term "0"))
                  (rule "concrete_or_2" (formula "2"))
                  (rule "qeq_literals" (formula "2") (term "0,1"))
                  (rule "ifthenelse_true_for" (formula "2") (term "1"))
                  (rule "mul_literals" (formula "2") (term "1,1,1"))
                  (rule "andLeft" (formula "2"))
                  (rule "andLeft" (formula "2"))
                  (rule "polySimp_addAssoc" (formula "4") (term "0,1"))
                  (rule "add_literals" (formula "4") (term "0,0,1"))
                  (rule "polySimp_addComm1" (formula "4") (term "1"))
                  (rule "add_literals" (formula "4") (term "0,1"))
                  (rule "inEqSimp_homoInEq0" (formula "3"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                  (rule "polySimp_addComm1" (formula "3") (term "0"))
                  (rule "inEqSimp_homoInEq1" (formula "4"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
                  (rule "polySimp_addComm1" (formula "4") (term "0"))
                  (rule "applyEq" (formula "5") (term "0,1,1") (ifseqformula "2"))
                  (rule "polySimp_addComm1" (formula "5") (term "1"))
                  (rule "applyEq" (formula "24") (term "0,0") (ifseqformula "2"))
                  (rule "inEqSimp_homoInEq0" (formula "24"))
                  (rule "polySimp_mulLiterals" (formula "24") (term "1,0"))
                  (rule "polySimp_addComm1" (formula "24") (term "0"))
                  (rule "polySimp_addComm1" (formula "24") (term "0,0"))
                  (rule "applyEq" (formula "29") (term "0,1,1") (ifseqformula "2"))
                  (rule "applyEq" (formula "49") (term "0,0") (ifseqformula "2"))
                  (rule "inEqSimp_homoInEq0" (formula "49"))
                  (rule "polySimp_mulLiterals" (formula "49") (term "1,0"))
                  (rule "polySimp_addComm1" (formula "49") (term "0"))
                  (rule "applyEq" (formula "21") (term "0") (ifseqformula "2"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                  (rule "polySimp_mulComm0" (formula "3") (term "1"))
                  (rule "polySimp_rightDist" (formula "3") (term "1"))
                  (rule "mul_literals" (formula "3") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                  (rule "polySimp_mulComm0" (formula "4") (term "1"))
                  (rule "polySimp_rightDist" (formula "4") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                  (rule "mul_literals" (formula "4") (term "0,1"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "24"))
                  (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                  (rule "polySimp_elimOne" (formula "24") (term "0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "49"))
                  (rule "polySimp_mulComm0" (formula "49") (term "1"))
                  (rule "polySimp_rightDist" (formula "49") (term "1"))
                  (rule "mul_literals" (formula "49") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "49") (term "1,1"))
                  (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "49"))
                  (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                  (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                  (rule "add_literals" (formula "3") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                  (rule "add_literals" (formula "3") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "3") (term "1,0,0"))
                  (rule "add_literals" (formula "3") (term "0,0"))
                  (rule "qeq_literals" (formula "3") (term "0"))
                  (rule "concrete_or_1" (formula "3"))
                  (rule "true_left" (formula "3"))
                  (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "28"))
                  (rule "mul_literals" (formula "21") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "21") (term "0"))
                  (rule "add_literals" (formula "21") (term "0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "21"))
                  (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                  (rule "inEqSimp_subsumption4" (formula "21") (ifseqformula "20"))
                  (rule "mul_literals" (formula "21") (term "0,1,0"))
                  (rule "greater_literals" (formula "21") (term "0,0"))
                  (rule "concrete_and_1" (formula "21") (term "0"))
                  (rule "leq_literals" (formula "21") (term "0"))
                  (rule "concrete_or_1" (formula "21"))
                  (rule "true_left" (formula "21"))
                  (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "23"))
                  (rule "mul_literals" (formula "12") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "12") (term "0"))
                  (rule "polySimp_addAssoc" (formula "12") (term "0,0"))
                  (rule "add_literals" (formula "12") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                  (rule "polySimp_mulComm0" (formula "12") (term "1"))
                  (rule "polySimp_rightDist" (formula "12") (term "1"))
                  (rule "mul_literals" (formula "12") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "12") (term "1,1"))
                  (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "24"))
                  (rule "polySimp_rightDist" (formula "19") (term "0,0"))
                  (rule "mul_literals" (formula "19") (term "0,0,0"))
                  (rule "polySimp_addAssoc" (formula "19") (term "0"))
                  (rule "polySimp_addComm1" (formula "19") (term "0,0"))
                  (rule "polySimp_pullOutFactor2b" (formula "19") (term "0"))
                  (rule "add_literals" (formula "19") (term "1,1,0"))
                  (rule "times_zero_1" (formula "19") (term "1,0"))
                  (rule "add_zero_right" (formula "19") (term "0"))
                  (rule "polySimp_addAssoc" (formula "19") (term "0"))
                  (rule "add_literals" (formula "19") (term "0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "19"))
                  (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                  (rule "inEqSimp_subsumption4" (formula "19") (ifseqformula "22"))
                  (rule "greater_literals" (formula "19") (term "0,0"))
                  (rule "concrete_and_1" (formula "19") (term "0"))
                  (rule "mul_literals" (formula "19") (term "0,0"))
                  (rule "leq_literals" (formula "19") (term "0"))
                  (rule "concrete_or_1" (formula "19"))
                  (rule "true_left" (formula "19"))
                  (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "3"))
                  (rule "mul_literals" (formula "13") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "13") (term "0"))
                  (rule "add_literals" (formula "13") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                  (rule "mul_literals" (formula "13") (term "1"))
                  (rule "inEqSimp_contradInEq3" (formula "13") (ifseqformula "22"))
                  (rule "greater_literals" (formula "13") (term "0,0"))
                  (rule "concrete_impl_1" (formula "13") (term "0"))
                  (rule "mul_literals" (formula "13") (term "0,0"))
                  (rule "qeq_literals" (formula "13") (term "0"))
                  (rule "concrete_and_2" (formula "13"))
                  (rule "closeFalse" (formula "13"))
               )
            )
            (branch "CUT: self.a.length >= 1542 FALSE"
               (rule "concrete_and_2" (formula "41") (term "0"))
               (rule "concrete_impl_2" (formula "41"))
               (rule "true_left" (formula "41"))
               (rule "inEqSimp_geqRight" (formula "58"))
               (rule "mul_literals" (formula "1") (term "1,0,0"))
               (rule "add_literals" (formula "1") (term "0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "1"))
               (rule "mul_literals" (formula "1") (term "1"))
               (rule "replace_known_left" (formula "41") (term "1,0") (ifseqformula "1"))
               (rule "concrete_and_3" (formula "41") (term "0"))
               (rule "inEqSimp_contradInEq0" (formula "42") (term "0") (ifseqformula "1"))
               (rule "qeq_literals" (formula "42") (term "0,0"))
               (rule "concrete_and_2" (formula "42") (term "0"))
               (rule "concrete_impl_2" (formula "42"))
               (rule "true_left" (formula "42"))
               (rule "inEqSimp_subsumption0" (formula "17") (ifseqformula "1"))
               (rule "leq_literals" (formula "17") (term "0"))
               (rule "concrete_or_1" (formula "17"))
               (rule "true_left" (formula "17"))
               (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "1"))
               (rule "polySimp_rightDist" (formula "20") (term "0,0"))
               (rule "polySimp_mulComm0" (formula "20") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "20") (term "0"))
               (rule "polySimp_addComm0" (formula "20") (term "0,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "20"))
               (rule "polySimp_mulLiterals" (formula "20") (term "0"))
               (rule "polySimp_elimOne" (formula "20") (term "0"))
               (rule "inEqSimp_subsumption0" (formula "17") (ifseqformula "20"))
               (rule "inEqSimp_homoInEq0" (formula "17") (term "0"))
               (rule "polySimp_mulComm0" (formula "17") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "17") (term "1,0,0"))
               (rule "mul_literals" (formula "17") (term "0,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0"))
               (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0"))
               (rule "polySimp_addAssoc" (formula "17") (term "0,0"))
               (rule "polySimp_addComm1" (formula "17") (term "0,0,0"))
               (rule "add_literals" (formula "17") (term "0,0,0,0"))
               (rule "polySimp_pullOutFactor2b" (formula "17") (term "0,0"))
               (rule "add_literals" (formula "17") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "17") (term "1,0,0"))
               (rule "add_literals" (formula "17") (term "0,0"))
               (rule "qeq_literals" (formula "17") (term "0"))
               (rule "concrete_or_1" (formula "17"))
               (rule "true_left" (formula "17"))
               (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "19"))
               (rule "mul_literals" (formula "13") (term "0,0"))
               (rule "polySimp_addAssoc" (formula "13") (term "0"))
               (rule "add_literals" (formula "13") (term "0,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "13"))
               (rule "polySimp_mulLiterals" (formula "13") (term "0"))
               (rule "polySimp_elimOne" (formula "13") (term "0"))
               (rule "inEqSimp_subsumption0" (formula "12") (ifseqformula "13"))
               (rule "leq_literals" (formula "12") (term "0"))
               (rule "concrete_or_1" (formula "12"))
               (rule "true_left" (formula "12"))
               (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "19"))
               (rule "polySimp_rightDist" (formula "15") (term "0,0"))
               (rule "polySimp_mulAssoc" (formula "15") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "15") (term "0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "15") (term "0,0,0"))
               (rule "polySimp_elimOne" (formula "15") (term "0,0,0"))
               (rule "polySimp_addAssoc" (formula "15") (term "0"))
               (rule "polySimp_addComm1" (formula "15") (term "0,0"))
               (rule "polySimp_pullOutFactor3b" (formula "15") (term "0"))
               (rule "polySimp_mulLiterals" (formula "15") (term "1,0"))
               (rule "polySimp_addComm0" (formula "15") (term "0,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "15"))
               (rule "polySimp_mulLiterals" (formula "15") (term "0"))
               (rule "inEqSimp_subsumption2" (formula "14") (ifseqformula "15"))
               (rule "eq_and" (formula "14") (term "0,0"))
               (rule "greater_literals" (formula "14") (term "0,0"))
               (rule "concrete_and_1" (formula "14") (term "0"))
               (rule "polySimp_rightDist" (formula "14") (term "1,0"))
               (rule "mul_literals" (formula "14") (term "0,1,0"))
               (rule "polySimp_rightDist" (formula "14") (term "0,0"))
               (rule "mul_literals" (formula "14") (term "0,0,0"))
               (rule "inEqSimp_homoInEq0" (formula "14") (term "0"))
               (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "14") (term "1,0,0"))
               (rule "mul_literals" (formula "14") (term "0,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0"))
               (rule "polySimp_addAssoc" (formula "14") (term "0,0"))
               (rule "polySimp_addComm1" (formula "14") (term "0,0,0"))
               (rule "add_literals" (formula "14") (term "0,0,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,0"))
               (rule "add_literals" (formula "14") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "14") (term "1,0,0"))
               (rule "add_literals" (formula "14") (term "0,0"))
               (rule "qeq_literals" (formula "14") (term "0"))
               (rule "concrete_or_1" (formula "14"))
               (rule "true_left" (formula "14"))
               (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "12"))
               (rule "polySimp_rightDist" (formula "11") (term "0,0"))
               (rule "mul_literals" (formula "11") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "11") (term "0"))
               (rule "add_literals" (formula "11") (term "0,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "11"))
               (rule "polySimp_mulLiterals" (formula "11") (term "0"))
               (rule "polySimp_elimOne" (formula "11") (term "0"))
               (rule "inEqSimp_subsumption0" (formula "10") (ifseqformula "11"))
               (rule "leq_literals" (formula "10") (term "0"))
               (rule "concrete_or_1" (formula "10"))
               (rule "true_left" (formula "10"))
               (rule "inEqSimp_exactShadow2" (formula "6") (ifseqformula "14"))
               (rule "greater_literals" (formula "6") (term "0"))
               (rule "concrete_impl_1" (formula "6"))
               (rule "mul_literals" (formula "6") (term "1,0,0"))
               (rule "mul_literals" (formula "6") (term "0,0"))
               (rule "polySimp_addAssoc" (formula "6") (term "0"))
               (rule "add_literals" (formula "6") (term "0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "6"))
               (rule "mul_literals" (formula "6") (term "1"))
               (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "10"))
               (rule "leq_literals" (formula "6") (term "0"))
               (rule "concrete_or_1" (formula "6"))
               (rule "true_left" (formula "6"))
               (rule "inEqSimp_exactShadow2" (formula "11") (ifseqformula "14"))
               (rule "greater_literals" (formula "11") (term "0"))
               (rule "concrete_impl_1" (formula "11"))
               (rule "polySimp_rightDist" (formula "11") (term "1,0,0"))
               (rule "mul_literals" (formula "11") (term "0,1,0,0"))
               (rule "polySimp_rightDist" (formula "11") (term "0,0"))
               (rule "mul_literals" (formula "11") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0"))
               (rule "polySimp_addAssoc" (formula "11") (term "0"))
               (rule "polySimp_addComm1" (formula "11") (term "0,0"))
               (rule "add_literals" (formula "11") (term "0,0,0"))
               (rule "polySimp_pullOutFactor2b" (formula "11") (term "0"))
               (rule "add_literals" (formula "11") (term "1,1,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "11"))
               (rule "polySimp_mulLiterals" (formula "11") (term "0"))
               (rule "polySimp_elimOne" (formula "11") (term "0"))
               (rule "arrayLengthIsAnInt" (formula "38") (term "1"))
               (rule "expand_inInt" (formula "38"))
               (rule "replace_int_MIN" (formula "38") (term "0,1"))
               (rule "replace_int_MAX" (formula "38") (term "1,0"))
               (rule "andLeft" (formula "38"))
               (rule "inEqSimp_commuteLeq" (formula "38"))
               (rule "inEqSimp_subsumption1" (formula "38") (ifseqformula "44"))
               (rule "leq_literals" (formula "38") (term "0"))
               (rule "concrete_or_1" (formula "38"))
               (rule "true_left" (formula "38"))
               (rule "arrayLengthNotNegative" (formula "38") (term "1"))
               (rule "cut_direct" (formula "39") (term "0"))
               (branch "CUT: self.a.length <= 119 TRUE"
                  (rule "concrete_impl_1" (formula "40"))
                  (rule "applyEq" (formula "44") (term "0") (ifseqformula "40"))
                  (rule "qeq_literals" (formula "44"))
                  (rule "true_left" (formula "44"))
                  (rule "applyEq" (formula "45") (term "1") (ifseqformula "40"))
                  (rule "applyEq" (formula "41") (term "0,1") (ifseqformula "40"))
                  (rule "equal_literals" (formula "41") (term "1"))
                  (rule "concrete_impl_3" (formula "41"))
                  (rule "notLeft" (formula "41"))
                  (rule "inEqSimp_geqRight" (formula "56"))
                  (rule "mul_literals" (formula "1") (term "1,0,0"))
                  (rule "add_literals" (formula "1") (term "0,0"))
                  (rule "applyEq" (formula "38") (term "0") (ifseqformula "41"))
                  (rule "leq_literals" (formula "38"))
                  (rule "true_left" (formula "38"))
                  (rule "applyEq" (formula "38") (term "1") (ifseqformula "40"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                  (rule "mul_literals" (formula "1") (term "1"))
                  (rule "inEqSimp_subsumption0" (formula "1") (ifseqformula "38"))
                  (rule "leq_literals" (formula "1") (term "0"))
                  (rule "concrete_or_1" (formula "1"))
                  (rule "true_left" (formula "1"))
                  (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "37"))
                  (rule "polySimp_rightDist" (formula "19") (term "0,0"))
                  (rule "polySimp_mulComm0" (formula "19") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "19") (term "0"))
                  (rule "polySimp_addComm0" (formula "19") (term "0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "19"))
                  (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                  (rule "polySimp_elimOne" (formula "19") (term "0"))
                  (rule "inEqSimp_subsumption0" (formula "18") (ifseqformula "19"))
                  (rule "inEqSimp_homoInEq0" (formula "18") (term "0"))
                  (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "18") (term "1,0,0"))
                  (rule "mul_literals" (formula "18") (term "0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "18") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "18") (term "0,0,0"))
                  (rule "add_literals" (formula "18") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor2b" (formula "18") (term "0,0"))
                  (rule "add_literals" (formula "18") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "18") (term "1,0,0"))
                  (rule "add_literals" (formula "18") (term "0,0"))
                  (rule "qeq_literals" (formula "18") (term "0"))
                  (rule "concrete_or_1" (formula "18"))
                  (rule "true_left" (formula "18"))
                  (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "18"))
                  (rule "polySimp_rightDist" (formula "14") (term "0,0"))
                  (rule "polySimp_mulAssoc" (formula "14") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "14") (term "0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "14") (term "0,0,0"))
                  (rule "polySimp_elimOne" (formula "14") (term "0,0,0"))
                  (rule "polySimp_addAssoc" (formula "14") (term "0"))
                  (rule "polySimp_addComm1" (formula "14") (term "0,0"))
                  (rule "polySimp_pullOutFactor3b" (formula "14") (term "0"))
                  (rule "polySimp_mulLiterals" (formula "14") (term "1,0"))
                  (rule "polySimp_addComm0" (formula "14") (term "0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "14"))
                  (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                  (rule "inEqSimp_subsumption2" (formula "13") (ifseqformula "14"))
                  (rule "eq_and" (formula "13") (term "0,0"))
                  (rule "greater_literals" (formula "13") (term "0,0"))
                  (rule "concrete_and_1" (formula "13") (term "0"))
                  (rule "polySimp_rightDist" (formula "13") (term "1,0"))
                  (rule "mul_literals" (formula "13") (term "0,1,0"))
                  (rule "polySimp_rightDist" (formula "13") (term "0,0"))
                  (rule "mul_literals" (formula "13") (term "0,0,0"))
                  (rule "inEqSimp_homoInEq0" (formula "13") (term "0"))
                  (rule "polySimp_mulComm0" (formula "13") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "13") (term "1,0,0"))
                  (rule "mul_literals" (formula "13") (term "0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "13") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "13") (term "0,0,0"))
                  (rule "add_literals" (formula "13") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,0"))
                  (rule "add_literals" (formula "13") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "13") (term "1,0,0"))
                  (rule "add_literals" (formula "13") (term "0,0"))
                  (rule "qeq_literals" (formula "13") (term "0"))
                  (rule "concrete_or_1" (formula "13"))
                  (rule "true_left" (formula "13"))
                  (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "18"))
                  (rule "mul_literals" (formula "12") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "12") (term "0"))
                  (rule "add_literals" (formula "12") (term "0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "12"))
                  (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                  (rule "polySimp_elimOne" (formula "12") (term "0"))
                  (rule "inEqSimp_subsumption0" (formula "11") (ifseqformula "12"))
                  (rule "leq_literals" (formula "11") (term "0"))
                  (rule "concrete_or_1" (formula "11"))
                  (rule "true_left" (formula "11"))
                  (rule "inEqSimp_exactShadow2" (formula "10") (ifseqformula "13"))
                  (rule "greater_literals" (formula "10") (term "0"))
                  (rule "concrete_impl_1" (formula "10"))
                  (rule "polySimp_rightDist" (formula "10") (term "1,0,0"))
                  (rule "mul_literals" (formula "10") (term "0,1,0,0"))
                  (rule "polySimp_rightDist" (formula "10") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0"))
                  (rule "mul_literals" (formula "10") (term "0,0,0"))
                  (rule "polySimp_addAssoc" (formula "10") (term "0"))
                  (rule "polySimp_addComm1" (formula "10") (term "0,0"))
                  (rule "add_literals" (formula "10") (term "0,0,0"))
                  (rule "polySimp_pullOutFactor2b" (formula "10") (term "0"))
                  (rule "add_literals" (formula "10") (term "1,1,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "10"))
                  (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                  (rule "polySimp_elimOne" (formula "10") (term "0"))
                  (rule "inEqSimp_subsumption0" (formula "9") (ifseqformula "10"))
                  (rule "leq_literals" (formula "9") (term "0"))
                  (rule "concrete_or_1" (formula "9"))
                  (rule "true_left" (formula "9"))
                  (rule "inEqSimp_exactShadow2" (formula "5") (ifseqformula "13"))
                  (rule "greater_literals" (formula "5") (term "0"))
                  (rule "concrete_impl_1" (formula "5"))
                  (rule "mul_literals" (formula "5") (term "1,0,0"))
                  (rule "mul_literals" (formula "5") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "5") (term "0"))
                  (rule "add_literals" (formula "5") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                  (rule "mul_literals" (formula "5") (term "1"))
                  (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "9"))
                  (rule "leq_literals" (formula "5") (term "0"))
                  (rule "concrete_or_1" (formula "5"))
                  (rule "true_left" (formula "5"))
                  (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "11"))
                  (rule "polySimp_rightDist" (formula "10") (term "0,0"))
                  (rule "mul_literals" (formula "10") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "10") (term "0"))
                  (rule "add_literals" (formula "10") (term "0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "10"))
                  (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                  (rule "polySimp_elimOne" (formula "10") (term "0"))
                  (rule "commute_and" (formula "62"))
                  (rule "commute_or_2" (formula "43") (term "0"))
                  (rule "commute_or_2" (formula "21") (term "0"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "31") (term "0") (ifseqformula "28"))
                  (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "32"))
                  (rule "replace_known_right" (formula "31") (term "0") (ifseqformula "61"))
                  (rule "concrete_or_2" (formula "31"))
                  (rule "applyEq" (formula "31") (term "1,0") (ifseqformula "32"))
                  (rule "commute_or" (formula "44") (term "0,0"))
                  (rule "commute_or" (formula "21") (term "0,0"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "55") (term "0") (ifseqformula "1"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "61"))
                  (rule "concrete_or_2" (formula "1"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "60") (term "0") (ifseqformula "2"))
                  (rule "replace_known_left" (formula "1") (term "1") (ifseqformula "42"))
                  (rule "concrete_or_3" (formula "1"))
                  (rule "true_left" (formula "1"))
                  (rule "div_axiom" (formula "64") (term "0,1,1,1") (inst "quotient=quotient_18"))
                  (rule "qeq_literals" (formula "1") (term "0,1,1"))
                  (rule "ifthenelse_true_for" (formula "1") (term "1,1"))
                  (rule "equal_literals" (formula "1") (term "0"))
                  (rule "concrete_or_2" (formula "1"))
                  (rule "mul_literals" (formula "1") (term "1,1,1"))
                  (rule "andLeft" (formula "1"))
                  (rule "andLeft" (formula "1"))
                  (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                  (rule "add_literals" (formula "3") (term "0,0,1"))
                  (rule "polySimp_addComm1" (formula "3") (term "1"))
                  (rule "add_literals" (formula "3") (term "0,1"))
                  (rule "inEqSimp_homoInEq0" (formula "2"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                  (rule "polySimp_addComm1" (formula "2") (term "0"))
                  (rule "inEqSimp_homoInEq1" (formula "3"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                  (rule "polySimp_addComm1" (formula "3") (term "0"))
                  (rule "applyEq" (formula "67") (term "0,1,1,1") (ifseqformula "1"))
                  (rule "polySimp_addComm0" (formula "67") (term "1,1"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                  (rule "polySimp_mulComm0" (formula "2") (term "1"))
                  (rule "polySimp_rightDist" (formula "2") (term "1"))
                  (rule "mul_literals" (formula "2") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                  (rule "polySimp_mulComm0" (formula "3") (term "1"))
                  (rule "polySimp_rightDist" (formula "3") (term "1"))
                  (rule "mul_literals" (formula "3") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                  (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "3"))
                  (rule "mul_literals" (formula "9") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "9") (term "0"))
                  (rule "add_literals" (formula "9") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                  (rule "mul_literals" (formula "9") (term "1"))
                  (rule "elimGcdGeq_antec" (formula "9") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_18") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                  (rule "leq_literals" (formula "9") (term "0,0"))
                  (rule "concrete_or_2" (formula "9") (term "0"))
                  (rule "times_zero_1" (formula "9") (term "1,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0"))
                  (rule "add_literals" (formula "9") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "9") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,0"))
                  (rule "add_literals" (formula "9") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "9") (term "1,0,0"))
                  (rule "add_zero_right" (formula "9") (term "0,0"))
                  (rule "leq_literals" (formula "9") (term "0"))
                  (rule "concrete_or_2" (formula "9"))
                  (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "8"))
                  (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                  (rule "mul_literals" (formula "2") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                  (rule "polySimp_addAssoc" (formula "2") (term "0"))
                  (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                  (rule "add_literals" (formula "2") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                  (rule "polySimp_mulComm0" (formula "2") (term "1"))
                  (rule "polySimp_rightDist" (formula "2") (term "1"))
                  (rule "mul_literals" (formula "2") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                  (rule "inEqSimp_exactShadow2" (formula "3") (ifseqformula "19"))
                  (rule "greater_literals" (formula "3") (term "0"))
                  (rule "concrete_impl_1" (formula "3"))
                  (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                  (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                  (rule "mul_literals" (formula "3") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                  (rule "polySimp_addAssoc" (formula "3") (term "0"))
                  (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                  (rule "add_literals" (formula "3") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                  (rule "polySimp_mulComm0" (formula "3") (term "1"))
                  (rule "polySimp_rightDist" (formula "3") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                  (rule "mul_literals" (formula "3") (term "0,1"))
                  (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "5"))
                  (rule "polySimp_rightDist" (formula "17") (term "0,0"))
                  (rule "mul_literals" (formula "17") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "17") (term "0"))
                  (rule "polySimp_addAssoc" (formula "17") (term "0,0"))
                  (rule "add_literals" (formula "17") (term "0,0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "17"))
                  (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                  (rule "polySimp_elimOne" (formula "17") (term "0"))
                  (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "19"))
                  (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0"))
                  (rule "mul_literals" (formula "4") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "4") (term "0"))
                  (rule "add_literals" (formula "4") (term "0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                  (rule "elimGcdLeq_antec" (formula "4") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_18") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1,0"))
                  (rule "neg_literal" (formula "4") (term "0,0,0,0,0,1,0"))
                  (rule "leq_literals" (formula "4") (term "0,0"))
                  (rule "concrete_or_2" (formula "4") (term "0"))
                  (rule "times_zero_1" (formula "4") (term "1,0,0,0,0,0"))
                  (rule "polySimp_addLiterals" (formula "4") (term "0,0,0,0"))
                  (rule "add_literals" (formula "4") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0"))
                  (rule "add_literals" (formula "4") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "4") (term "1,0,0"))
                  (rule "add_zero_right" (formula "4") (term "0,0"))
                  (rule "qeq_literals" (formula "4") (term "0"))
                  (rule "concrete_or_2" (formula "4"))
                  (rule "inEqSimp_antiSymm" (formula "12") (ifseqformula "4"))
                  (rule "applyEq" (formula "3") (term "0,1,1") (ifseqformula "12"))
                  (rule "times_zero_2" (formula "3") (term "1,1"))
                  (rule "add_zero_right" (formula "3") (term "1"))
                  (rule "applyEq" (formula "5") (term "0,1,1") (ifseqformula "12"))
                  (rule "times_zero_2" (formula "5") (term "1,1"))
                  (rule "add_zero_right" (formula "5") (term "1"))
                  (rule "applyEq" (formula "12") (term "0") (ifseqformula "11"))
                  (rule "qeq_literals" (formula "12"))
                  (rule "true_left" (formula "12"))
                  (rule "applyEqRigid" (formula "17") (term "0,1,1") (ifseqformula "11"))
                  (rule "mul_literals" (formula "17") (term "1,1"))
                  (rule "add_literals" (formula "17") (term "1"))
                  (rule "applyEqRigid" (formula "4") (term "0") (ifseqformula "11"))
                  (rule "leq_literals" (formula "4"))
                  (rule "true_left" (formula "4"))
                  (rule "applyEqRigid" (formula "2") (term "0,1,1") (ifseqformula "10"))
                  (rule "times_zero_2" (formula "2") (term "1,1"))
                  (rule "add_zero_right" (formula "2") (term "1"))
                  (rule "applyEq" (formula "4") (term "0,1,1") (ifseqformula "10"))
                  (rule "times_zero_2" (formula "4") (term "1,1"))
                  (rule "add_literals" (formula "4") (term "1"))
                  (rule "applyEqRigid" (formula "70") (term "0,0,1,1") (ifseqformula "10"))
                  (rule "times_zero_2" (formula "70") (term "0,1,1"))
                  (rule "add_zero_left" (formula "70") (term "1,1"))
                  (rule "applyEq" (formula "1") (term "1") (ifseqformula "10"))
                  (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "14"))
                  (rule "leq_literals" (formula "2") (term "0"))
                  (rule "concrete_or_1" (formula "2"))
                  (rule "true_left" (formula "2"))
                  (rule "inEqSimp_subsumption0" (formula "15") (ifseqformula "14"))
                  (rule "leq_literals" (formula "15") (term "0"))
                  (rule "concrete_or_1" (formula "15"))
                  (rule "true_left" (formula "15"))
                  (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "16"))
                  (rule "leq_literals" (formula "3") (term "0"))
                  (rule "concrete_or_1" (formula "3"))
                  (rule "true_left" (formula "3"))
                  (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "12"))
                  (rule "leq_literals" (formula "2") (term "0"))
                  (rule "concrete_or_1" (formula "2"))
                  (rule "true_left" (formula "2"))
                  (rule "div_axiom" (formula "66") (term "0,1,1,0") (inst "quotient=quotient_19"))
                  (rule "equal_literals" (formula "1") (term "0"))
                  (rule "concrete_or_2" (formula "1"))
                  (rule "mul_literals" (formula "1") (term "1,1,1,1"))
                  (rule "qeq_literals" (formula "1") (term "0,1"))
                  (rule "ifthenelse_true_for" (formula "1") (term "1"))
                  (rule "andLeft" (formula "1"))
                  (rule "andLeft" (formula "1"))
                  (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                  (rule "polySimp_addComm1" (formula "3") (term "1"))
                  (rule "polySimp_addAssoc" (formula "3") (term "0,0,1"))
                  (rule "add_literals" (formula "3") (term "0,0,0,1"))
                  (rule "polySimp_addComm1" (formula "3") (term "0,1"))
                  (rule "add_literals" (formula "3") (term "0,0,1"))
                  (rule "inEqSimp_homoInEq0" (formula "2"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                  (rule "polySimp_addComm1" (formula "2") (term "0"))
                  (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                  (rule "inEqSimp_homoInEq1" (formula "3"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                  (rule "polySimp_addComm1" (formula "3") (term "0"))
                  (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                  (rule "applyEq" (formula "69") (term "0,1,1,0") (ifseqformula "1"))
                  (rule "polySimp_addComm1" (formula "69") (term "1,0"))
                  (rule "polySimp_addComm0" (formula "69") (term "0,1,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                  (rule "polySimp_mulComm0" (formula "2") (term "1"))
                  (rule "polySimp_rightDist" (formula "2") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                  (rule "polySimp_rightDist" (formula "2") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1"))
                  (rule "mul_literals" (formula "2") (term "0,0,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                  (rule "polySimp_mulComm0" (formula "3") (term "1"))
                  (rule "polySimp_rightDist" (formula "3") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                  (rule "polySimp_rightDist" (formula "3") (term "0,1"))
                  (rule "mul_literals" (formula "3") (term "0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1"))
                  (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "3"))
                  (rule "polySimp_rightDist" (formula "16") (term "0,0"))
                  (rule "mul_literals" (formula "16") (term "0,0,0"))
                  (rule "polySimp_addAssoc" (formula "16") (term "0"))
                  (rule "polySimp_addComm1" (formula "16") (term "0,0"))
                  (rule "polySimp_pullOutFactor2b" (formula "16") (term "0"))
                  (rule "add_literals" (formula "16") (term "1,1,0"))
                  (rule "times_zero_1" (formula "16") (term "1,0"))
                  (rule "add_zero_right" (formula "16") (term "0"))
                  (rule "polySimp_addAssoc" (formula "16") (term "0"))
                  (rule "add_literals" (formula "16") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                  (rule "mul_literals" (formula "16") (term "1"))
                  (rule "elimGcdGeq_antec" (formula "16") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_19") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                  (rule "polySimp_mulLiterals" (formula "16") (term "1,0,1,0"))
                  (rule "times_zero_1" (formula "16") (term "1,0,0,0,0,1,0"))
                  (rule "leq_literals" (formula "16") (term "0,0"))
                  (rule "concrete_or_2" (formula "16") (term "0"))
                  (rule "polySimp_addLiterals" (formula "16") (term "0,0,0,0"))
                  (rule "add_literals" (formula "16") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "16") (term "0,0"))
                  (rule "add_literals" (formula "16") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "16") (term "1,0,0"))
                  (rule "add_zero_right" (formula "16") (term "0,0"))
                  (rule "leq_literals" (formula "16") (term "0"))
                  (rule "concrete_or_2" (formula "16"))
                  (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "9"))
                  (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                  (rule "polySimp_rightDist" (formula "2") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "2") (term "0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "2") (term "0"))
                  (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                  (rule "polySimp_pullOutFactor2b" (formula "2") (term "0"))
                  (rule "add_literals" (formula "2") (term "1,1,0"))
                  (rule "times_zero_1" (formula "2") (term "1,0"))
                  (rule "polySimp_addLiterals" (formula "2") (term "0"))
                  (rule "polySimp_addComm1" (formula "2") (term "0"))
                  (rule "add_literals" (formula "2") (term "0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                  (rule "elimGcdLeq_antec" (formula "2") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_19") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                  (rule "times_zero_1" (formula "2") (term "1,0,0,0,0,1,0"))
                  (rule "leq_literals" (formula "2") (term "0,0"))
                  (rule "concrete_or_2" (formula "2") (term "0"))
                  (rule "neg_literal" (formula "2") (term "0,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                  (rule "add_literals" (formula "2") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "2") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                  (rule "add_literals" (formula "2") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "2") (term "1,0,0"))
                  (rule "add_zero_right" (formula "2") (term "0,0"))
                  (rule "qeq_literals" (formula "2") (term "0"))
                  (rule "concrete_or_2" (formula "2"))
                  (rule "inEqSimp_exactShadow2" (formula "3") (ifseqformula "21"))
                  (rule "greater_literals" (formula "3") (term "0"))
                  (rule "concrete_impl_1" (formula "3"))
                  (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "3") (term "0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,0,0"))
                  (rule "mul_literals" (formula "3") (term "0,0,1,0,0"))
                  (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "3") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "3") (term "0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "3") (term "0"))
                  (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                  (rule "polySimp_pullOutFactor2b" (formula "3") (term "0"))
                  (rule "add_literals" (formula "3") (term "1,1,0"))
                  (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                  (rule "add_literals" (formula "3") (term "0,0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                  (rule "polySimp_elimOne" (formula "3") (term "0"))
                  (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "20"))
                  (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "4") (term "0"))
                  (rule "polySimp_rightDist" (formula "4") (term "0,0,0"))
                  (rule "mul_literals" (formula "4") (term "0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,0"))
                  (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                  (rule "add_literals" (formula "4") (term "0,0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                  (rule "polySimp_elimOne" (formula "4") (term "0"))
                  (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "6"))
                  (rule "mul_literals" (formula "14") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "14") (term "0"))
                  (rule "polySimp_addAssoc" (formula "14") (term "0,0"))
                  (rule "add_literals" (formula "14") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                  (rule "polySimp_mulComm0" (formula "14") (term "1"))
                  (rule "polySimp_rightDist" (formula "14") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "14") (term "1,1"))
                  (rule "mul_literals" (formula "14") (term "0,1"))
                  (rule "inEqSimp_antiSymm" (formula "20") (ifseqformula "2"))
                  (rule "applyEqRigid" (formula "14") (term "0,1,1") (ifseqformula "20"))
                  (rule "times_zero_2" (formula "14") (term "1,1"))
                  (rule "add_zero_right" (formula "14") (term "1"))
                  (rule "applyEq" (formula "4") (term "0,1,1") (ifseqformula "20"))
                  (rule "times_zero_2" (formula "4") (term "1,1"))
                  (rule "add_literals" (formula "4") (term "1"))
                  (rule "applyEqRigid" (formula "3") (term "0,1,1") (ifseqformula "20"))
                  (rule "times_zero_2" (formula "3") (term "1,1"))
                  (rule "add_literals" (formula "3") (term "1"))
                  (rule "applyEqRigid" (formula "2") (term "0") (ifseqformula "20"))
                  (rule "leq_literals" (formula "2"))
                  (rule "true_left" (formula "2"))
                  (rule "applyEq" (formula "20") (term "0") (ifseqformula "19"))
                  (rule "qeq_literals" (formula "20"))
                  (rule "true_left" (formula "20"))
                  (rule "applyEqRigid" (formula "5") (term "0,1,0,1") (ifseqformula "19"))
                  (rule "times_zero_2" (formula "5") (term "1,0,1"))
                  (rule "add_literals" (formula "5") (term "0,1"))
                  (rule "applyEq" (formula "4") (term "0,1,0,1") (ifseqformula "18"))
                  (rule "times_zero_2" (formula "4") (term "1,0,1"))
                  (rule "add_zero_right" (formula "4") (term "0,1"))
                  (rule "applyEq" (formula "1") (term "1") (ifseqformula "18"))
                  (rule "applyEqRigid" (formula "72") (term "0,0,0,1,0") (ifseqformula "18"))
                  (rule "mul_literals" (formula "72") (term "0,0,1,0"))
                  (rule "add_zero_left" (formula "72") (term "0,1,0"))
                  (rule "replace_known_left" (formula "72") (term "0") (ifseqformula "44"))
                  (rule "concrete_and_1" (formula "72"))
                  (rule "inEqSimp_geqRight" (formula "72"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1"))
                  (rule "polySimp_rightDist" (formula "1") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                  (rule "mul_literals" (formula "1") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                  (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "4"))
                  (rule "leq_literals" (formula "3") (term "0"))
                  (rule "concrete_or_1" (formula "3"))
                  (rule "true_left" (formula "3"))
                  (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "16"))
                  (rule "leq_literals" (formula "12") (term "0"))
                  (rule "concrete_or_1" (formula "12"))
                  (rule "true_left" (formula "12"))
                  (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "18"))
                  (rule "inEqSimp_homoInEq0" (formula "4") (term "0"))
                  (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                  (rule "mul_literals" (formula "4") (term "0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                  (rule "add_literals" (formula "4") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0"))
                  (rule "add_literals" (formula "4") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "4") (term "1,0,0"))
                  (rule "add_zero_right" (formula "4") (term "0,0"))
                  (rule "qeq_literals" (formula "4") (term "0"))
                  (rule "concrete_or_1" (formula "4"))
                  (rule "true_left" (formula "4"))
                  (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "15"))
                  (rule "leq_literals" (formula "3") (term "0"))
                  (rule "concrete_or_1" (formula "3"))
                  (rule "true_left" (formula "3"))
                  (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "1"))
                  (rule "polySimp_rightDist" (formula "25") (term "0,0"))
                  (rule "polySimp_mulComm0" (formula "25") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "25") (term "0"))
                  (rule "polySimp_addAssoc" (formula "25") (term "0,0"))
                  (rule "polySimp_addComm0" (formula "25") (term "0,0,0"))
                  (rule "polySimp_pullOutFactor2b" (formula "25") (term "0,0"))
                  (rule "add_literals" (formula "25") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "25") (term "1,0,0"))
                  (rule "add_literals" (formula "25") (term "0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "25"))
                  (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                  (rule "polySimp_elimOne" (formula "25") (term "0"))
                  (rule "inEqSimp_contradInEq1" (formula "25") (ifseqformula "18"))
                  (rule "qeq_literals" (formula "25") (term "0"))
                  (rule "concrete_and_2" (formula "25"))
                  (rule "closeFalse" (formula "25"))
               )
               (branch "CUT: self.a.length <= 119 FALSE"
                  (rule "concrete_impl_2" (formula "39"))
                  (rule "true_left" (formula "39"))
                  (rule "inEqSimp_leqRight" (formula "56"))
                  (rule "mul_literals" (formula "1") (term "1,0,0"))
                  (rule "add_literals" (formula "1") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                  (rule "mul_literals" (formula "1") (term "1"))
                  (rule "replace_known_left" (formula "40") (term "0") (ifseqformula "1"))
                  (rule "concrete_impl_1" (formula "40"))
                  (rule "applyEq" (formula "38") (term "0") (ifseqformula "40"))
                  (rule "leq_literals" (formula "38"))
                  (rule "true_left" (formula "38"))
                  (rule "applyEq" (formula "44") (term "1") (ifseqformula "39"))
                  (rule "applyEq" (formula "42") (term "0") (ifseqformula "39"))
                  (rule "qeq_literals" (formula "42"))
                  (rule "true_left" (formula "42"))
                  (rule "applyEq" (formula "38") (term "1") (ifseqformula "39"))
                  (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "1"))
                  (rule "leq_literals" (formula "18") (term "0"))
                  (rule "concrete_or_1" (formula "18"))
                  (rule "true_left" (formula "18"))
                  (rule "commute_and" (formula "62"))
                  (rule "commute_or_2" (formula "43") (term "0"))
                  (rule "commute_or_2" (formula "22") (term "0"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "32") (term "0") (ifseqformula "29"))
                  (rule "applyEq" (formula "32") (term "0,0") (ifseqformula "33"))
                  (rule "replace_known_right" (formula "32") (term "0") (ifseqformula "61"))
                  (rule "concrete_or_2" (formula "32"))
                  (rule "applyEq" (formula "32") (term "1,0") (ifseqformula "33"))
                  (rule "commute_or" (formula "44") (term "0,0"))
                  (rule "commute_or" (formula "22") (term "0,0"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "38") (term "0,0") (ifseqformula "3"))
                  (rule "replace_known_right" (formula "38") (term "0") (ifseqformula "61"))
                  (rule "concrete_or_2" (formula "38"))
                  (rule "div_axiom" (formula "64") (term "0,1,1,0") (inst "quotient=quotient_16"))
                  (rule "equal_literals" (formula "1") (term "0"))
                  (rule "concrete_or_2" (formula "1"))
                  (rule "mul_literals" (formula "1") (term "1,1,1,1"))
                  (rule "qeq_literals" (formula "1") (term "0,1"))
                  (rule "ifthenelse_true_for" (formula "1") (term "1"))
                  (rule "andLeft" (formula "1"))
                  (rule "andLeft" (formula "1"))
                  (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                  (rule "polySimp_addComm1" (formula "3") (term "1"))
                  (rule "polySimp_addAssoc" (formula "3") (term "0,0,1"))
                  (rule "add_literals" (formula "3") (term "0,0,0,1"))
                  (rule "polySimp_addComm1" (formula "3") (term "0,1"))
                  (rule "add_literals" (formula "3") (term "0,0,1"))
                  (rule "inEqSimp_homoInEq0" (formula "2"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                  (rule "polySimp_addComm1" (formula "2") (term "0"))
                  (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                  (rule "inEqSimp_homoInEq1" (formula "3"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                  (rule "polySimp_addComm1" (formula "3") (term "0"))
                  (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                  (rule "applyEq" (formula "67") (term "0,1,1,0") (ifseqformula "1"))
                  (rule "polySimp_addComm1" (formula "67") (term "1,0"))
                  (rule "polySimp_addComm0" (formula "67") (term "0,1,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                  (rule "polySimp_mulComm0" (formula "2") (term "1"))
                  (rule "polySimp_rightDist" (formula "2") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                  (rule "polySimp_rightDist" (formula "2") (term "0,1"))
                  (rule "mul_literals" (formula "2") (term "0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                  (rule "polySimp_mulComm0" (formula "3") (term "1"))
                  (rule "polySimp_rightDist" (formula "3") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                  (rule "polySimp_rightDist" (formula "3") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1"))
                  (rule "mul_literals" (formula "3") (term "0,0,1"))
                  (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "3"))
                  (rule "polySimp_rightDist" (formula "15") (term "0,0"))
                  (rule "mul_literals" (formula "15") (term "0,0,0"))
                  (rule "polySimp_addAssoc" (formula "15") (term "0"))
                  (rule "polySimp_addComm1" (formula "15") (term "0,0"))
                  (rule "polySimp_pullOutFactor2b" (formula "15") (term "0"))
                  (rule "add_literals" (formula "15") (term "1,1,0"))
                  (rule "times_zero_1" (formula "15") (term "1,0"))
                  (rule "add_zero_right" (formula "15") (term "0"))
                  (rule "polySimp_addAssoc" (formula "15") (term "0"))
                  (rule "add_literals" (formula "15") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                  (rule "mul_literals" (formula "15") (term "1"))
                  (rule "elimGcdGeq_antec" (formula "15") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_16") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                  (rule "times_zero_1" (formula "15") (term "1,0,0,0,0,1,0"))
                  (rule "leq_literals" (formula "15") (term "0,0"))
                  (rule "concrete_or_2" (formula "15") (term "0"))
                  (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0"))
                  (rule "polySimp_addLiterals" (formula "15") (term "0,0,0,0"))
                  (rule "add_literals" (formula "15") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "15") (term "0,0"))
                  (rule "add_literals" (formula "15") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "15") (term "1,0,0"))
                  (rule "add_zero_right" (formula "15") (term "0,0"))
                  (rule "leq_literals" (formula "15") (term "0"))
                  (rule "concrete_or_2" (formula "15"))
                  (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "9"))
                  (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                  (rule "polySimp_rightDist" (formula "2") (term "0,0,0"))
                  (rule "mul_literals" (formula "2") (term "0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "2") (term "0"))
                  (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                  (rule "polySimp_pullOutFactor2b" (formula "2") (term "0"))
                  (rule "add_literals" (formula "2") (term "1,1,0"))
                  (rule "times_zero_1" (formula "2") (term "1,0"))
                  (rule "polySimp_addLiterals" (formula "2") (term "0"))
                  (rule "polySimp_addComm1" (formula "2") (term "0"))
                  (rule "add_literals" (formula "2") (term "0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                  (rule "elimGcdLeq_antec" (formula "2") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_16") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                  (rule "leq_literals" (formula "2") (term "0,0"))
                  (rule "concrete_or_2" (formula "2") (term "0"))
                  (rule "times_zero_1" (formula "2") (term "1,0,0,0,0,0"))
                  (rule "neg_literal" (formula "2") (term "0,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                  (rule "polySimp_addLiterals" (formula "2") (term "0,0,0,0"))
                  (rule "add_literals" (formula "2") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                  (rule "add_literals" (formula "2") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "2") (term "1,0,0"))
                  (rule "add_zero_right" (formula "2") (term "0,0"))
                  (rule "qeq_literals" (formula "2") (term "0"))
                  (rule "concrete_or_2" (formula "2"))
                  (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "4"))
                  (rule "mul_literals" (formula "11") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "11") (term "0"))
                  (rule "polySimp_addAssoc" (formula "11") (term "0,0"))
                  (rule "add_literals" (formula "11") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                  (rule "polySimp_mulComm0" (formula "11") (term "1"))
                  (rule "polySimp_rightDist" (formula "11") (term "1"))
                  (rule "mul_literals" (formula "11") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
                  (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "19"))
                  (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "3") (term "0"))
                  (rule "polySimp_rightDist" (formula "3") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "3") (term "0,0,0,0"))
                  (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                  (rule "add_literals" (formula "3") (term "0,0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                  (rule "polySimp_elimOne" (formula "3") (term "0"))
                  (rule "inEqSimp_exactShadow2" (formula "4") (ifseqformula "22"))
                  (rule "greater_literals" (formula "4") (term "0"))
                  (rule "concrete_impl_1" (formula "4"))
                  (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "4") (term "0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1,0,0"))
                  (rule "mul_literals" (formula "4") (term "0,0,1,0,0"))
                  (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "4") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "4") (term "0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "4") (term "0"))
                  (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                  (rule "polySimp_pullOutFactor2b" (formula "4") (term "0"))
                  (rule "add_literals" (formula "4") (term "1,1,0"))
                  (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                  (rule "add_literals" (formula "4") (term "0,0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                  (rule "polySimp_elimOne" (formula "4") (term "0"))
                  (rule "inEqSimp_antiSymm" (formula "19") (ifseqformula "2"))
                  (rule "applyEqRigid" (formula "3") (term "0,1,1") (ifseqformula "19"))
                  (rule "times_zero_2" (formula "3") (term "1,1"))
                  (rule "add_literals" (formula "3") (term "1"))
                  (rule "applyEq" (formula "2") (term "0") (ifseqformula "19"))
                  (rule "leq_literals" (formula "2"))
                  (rule "true_left" (formula "2"))
                  (rule "applyEq" (formula "12") (term "0,1,1") (ifseqformula "18"))
                  (rule "mul_literals" (formula "12") (term "1,1"))
                  (rule "add_zero_right" (formula "12") (term "1"))
                  (rule "applyEq" (formula "3") (term "0,1,1") (ifseqformula "18"))
                  (rule "times_zero_2" (formula "3") (term "1,1"))
                  (rule "add_literals" (formula "3") (term "1"))
                  (rule "applyEq" (formula "19") (term "0") (ifseqformula "18"))
                  (rule "qeq_literals" (formula "19"))
                  (rule "true_left" (formula "19"))
                  (rule "applyEq" (formula "4") (term "0,1,0,1") (ifseqformula "18"))
                  (rule "times_zero_2" (formula "4") (term "1,0,1"))
                  (rule "add_zero_right" (formula "4") (term "0,1"))
                  (rule "applyEqRigid" (formula "5") (term "0,1,0,1") (ifseqformula "18"))
                  (rule "times_zero_2" (formula "5") (term "1,0,1"))
                  (rule "add_literals" (formula "5") (term "0,1"))
                  (rule "applyEq" (formula "1") (term "1") (ifseqformula "17"))
                  (rule "applyEqRigid" (formula "70") (term "0,0,0,1,0") (ifseqformula "17"))
                  (rule "times_zero_2" (formula "70") (term "0,0,1,0"))
                  (rule "add_zero_left" (formula "70") (term "0,1,0"))
                  (rule "replace_known_left" (formula "70") (term "0") (ifseqformula "42"))
                  (rule "concrete_and_1" (formula "70"))
                  (rule "inEqSimp_geqRight" (formula "70"))
                  (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                  (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1"))
                  (rule "polySimp_rightDist" (formula "1") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                  (rule "polySimp_rightDist" (formula "1") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1"))
                  (rule "mul_literals" (formula "1") (term "0,0,1"))
                  (rule "polySimp_elimOne" (formula "1") (term "1,0,1"))
                  (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "19"))
                  (rule "inEqSimp_homoInEq0" (formula "5") (term "0"))
                  (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
                  (rule "mul_literals" (formula "5") (term "0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "5") (term "0,0,0"))
                  (rule "add_literals" (formula "5") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0"))
                  (rule "add_literals" (formula "5") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "5") (term "1,0,0"))
                  (rule "add_zero_right" (formula "5") (term "0,0"))
                  (rule "qeq_literals" (formula "5") (term "0"))
                  (rule "concrete_or_1" (formula "5"))
                  (rule "true_left" (formula "5"))
                  (rule "inEqSimp_subsumption0" (formula "4") (ifseqformula "3"))
                  (rule "leq_literals" (formula "4") (term "0"))
                  (rule "concrete_or_1" (formula "4"))
                  (rule "true_left" (formula "4"))
                  (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "15"))
                  (rule "leq_literals" (formula "3") (term "0"))
                  (rule "concrete_or_1" (formula "3"))
                  (rule "true_left" (formula "3"))
                  (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "13"))
                  (rule "leq_literals" (formula "9") (term "0"))
                  (rule "concrete_or_1" (formula "9"))
                  (rule "true_left" (formula "9"))
                  (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "1"))
                  (rule "mul_literals" (formula "3") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "3") (term "0"))
                  (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                  (rule "add_literals" (formula "3") (term "0,0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                  (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "1"))
                  (rule "polySimp_rightDist" (formula "24") (term "0,0"))
                  (rule "polySimp_mulComm0" (formula "24") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "24") (term "0"))
                  (rule "polySimp_addAssoc" (formula "24") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "24") (term "0,0,0"))
                  (rule "polySimp_addComm0" (formula "24") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor2b" (formula "24") (term "0,0,0"))
                  (rule "add_literals" (formula "24") (term "1,1,0,0,0"))
                  (rule "times_zero_1" (formula "24") (term "1,0,0,0"))
                  (rule "add_literals" (formula "24") (term "0,0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "24"))
                  (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                  (rule "polySimp_elimOne" (formula "24") (term "0"))
                  (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "24"))
                  (rule "mul_literals" (formula "18") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "18") (term "0"))
                  (rule "add_literals" (formula "18") (term "0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "18"))
                  (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                  (rule "elimGcdLeq_antec" (formula "18") (inst "elimGcdRightDiv=Z(neglit(1(#)))") (inst "elimGcdLeftDiv=div(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))), base2),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                  (rule "leq_literals" (formula "18") (term "0,0"))
                  (rule "concrete_or_2" (formula "18") (term "0"))
                  (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0,0,0,0"))
                  (rule "neg_literal" (formula "18") (term "0,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0"))
                  (rule "mul_literals" (formula "18") (term "1,0,0,0,0,0"))
                  (rule "polySimp_addLiterals" (formula "18") (term "0,0,0,0"))
                  (rule "add_literals" (formula "18") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "18") (term "0,0"))
                  (rule "add_literals" (formula "18") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "18") (term "1,0,0"))
                  (rule "add_zero_right" (formula "18") (term "0,0"))
                  (rule "qeq_literals" (formula "18") (term "0"))
                  (rule "concrete_or_2" (formula "18"))
                  (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "25"))
                  (rule "polySimp_rightDist" (formula "21") (term "0,0"))
                  (rule "polySimp_mulAssoc" (formula "21") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "21") (term "0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "21") (term "0,0,0"))
                  (rule "polySimp_elimOne" (formula "21") (term "0,0,0"))
                  (rule "polySimp_addAssoc" (formula "21") (term "0"))
                  (rule "polySimp_addComm1" (formula "21") (term "0,0"))
                  (rule "polySimp_addComm0" (formula "21") (term "0,0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "21"))
                  (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "57") (term "1") (ifseqformula "6"))
                  (rule "replace_known_left" (formula "57") (term "1") (ifseqformula "48"))
                  (rule "concrete_or_3" (formula "57"))
                  (rule "true_left" (formula "57"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "66") (term "0") (ifseqformula "6"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "67"))
                  (rule "concrete_or_2" (formula "1"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "45") (term "0") (ifseqformula "7"))
                  (rule "applyEq" (formula "45") (term "0,0") (ifseqformula "46"))
                  (rule "replace_known_right" (formula "45") (term "0") (ifseqformula "71"))
                  (rule "concrete_or_2" (formula "45"))
                  (rule "applyEq" (formula "45") (term "1,0") (ifseqformula "46"))
                  (rule "div_axiom" (formula "2") (term "0,1,1") (inst "quotient=quotient_17"))
                  (rule "qeq_literals" (formula "2") (term "0,1,1"))
                  (rule "ifthenelse_true_for" (formula "2") (term "1,1"))
                  (rule "equal_literals" (formula "2") (term "0"))
                  (rule "concrete_or_2" (formula "2"))
                  (rule "mul_literals" (formula "2") (term "1,1,1"))
                  (rule "andLeft" (formula "2"))
                  (rule "andLeft" (formula "2"))
                  (rule "polySimp_addAssoc" (formula "4") (term "0,1"))
                  (rule "add_literals" (formula "4") (term "0,0,1"))
                  (rule "polySimp_addComm1" (formula "4") (term "1"))
                  (rule "add_literals" (formula "4") (term "0,1"))
                  (rule "inEqSimp_homoInEq0" (formula "3"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                  (rule "polySimp_addComm1" (formula "3") (term "0"))
                  (rule "inEqSimp_homoInEq1" (formula "4"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
                  (rule "polySimp_addComm1" (formula "4") (term "0"))
                  (rule "applyEq" (formula "30") (term "0,1,1") (ifseqformula "2"))
                  (rule "applyEq" (formula "22") (term "0") (ifseqformula "2"))
                  (rule "applyEq" (formula "7") (term "0,0") (ifseqformula "2"))
                  (rule "inEqSimp_homoInEq0" (formula "7"))
                  (rule "polySimp_mulLiterals" (formula "7") (term "1,0"))
                  (rule "polySimp_addComm1" (formula "7") (term "0"))
                  (rule "applyEq" (formula "5") (term "0,1,1") (ifseqformula "2"))
                  (rule "polySimp_addComm1" (formula "5") (term "1"))
                  (rule "applyEq" (formula "25") (term "0,0") (ifseqformula "2"))
                  (rule "inEqSimp_homoInEq0" (formula "25"))
                  (rule "polySimp_mulLiterals" (formula "25") (term "1,0"))
                  (rule "polySimp_addComm1" (formula "25") (term "0"))
                  (rule "polySimp_addComm1" (formula "25") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                  (rule "polySimp_mulComm0" (formula "3") (term "1"))
                  (rule "polySimp_rightDist" (formula "3") (term "1"))
                  (rule "mul_literals" (formula "3") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                  (rule "polySimp_mulComm0" (formula "4") (term "1"))
                  (rule "polySimp_rightDist" (formula "4") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                  (rule "mul_literals" (formula "4") (term "0,1"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                  (rule "polySimp_mulComm0" (formula "7") (term "1"))
                  (rule "polySimp_rightDist" (formula "7") (term "1"))
                  (rule "mul_literals" (formula "7") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "25"))
                  (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                  (rule "polySimp_elimOne" (formula "25") (term "0"))
                  (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "7"))
                  (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                  (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                  (rule "add_literals" (formula "3") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                  (rule "add_literals" (formula "3") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "3") (term "1,0,0"))
                  (rule "add_literals" (formula "3") (term "0,0"))
                  (rule "qeq_literals" (formula "3") (term "0"))
                  (rule "concrete_or_1" (formula "3"))
                  (rule "true_left" (formula "3"))
                  (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "24"))
                  (rule "polySimp_rightDist" (formula "19") (term "0,0"))
                  (rule "mul_literals" (formula "19") (term "0,0,0"))
                  (rule "polySimp_addAssoc" (formula "19") (term "0"))
                  (rule "polySimp_addComm1" (formula "19") (term "0,0"))
                  (rule "polySimp_pullOutFactor2b" (formula "19") (term "0"))
                  (rule "add_literals" (formula "19") (term "1,1,0"))
                  (rule "times_zero_1" (formula "19") (term "1,0"))
                  (rule "add_zero_right" (formula "19") (term "0"))
                  (rule "polySimp_addAssoc" (formula "19") (term "0"))
                  (rule "add_literals" (formula "19") (term "0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "19"))
                  (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                  (rule "inEqSimp_subsumption4" (formula "19") (ifseqformula "22"))
                  (rule "greater_literals" (formula "19") (term "0,0"))
                  (rule "concrete_and_1" (formula "19") (term "0"))
                  (rule "mul_literals" (formula "19") (term "0,0"))
                  (rule "leq_literals" (formula "19") (term "0"))
                  (rule "concrete_or_1" (formula "19"))
                  (rule "true_left" (formula "19"))
                  (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "29"))
                  (rule "polySimp_rightDist" (formula "25") (term "0,0"))
                  (rule "polySimp_mulAssoc" (formula "25") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "25") (term "0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "25") (term "0,0,0"))
                  (rule "polySimp_elimOne" (formula "25") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "25") (term "0"))
                  (rule "polySimp_addComm0" (formula "25") (term "0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "25"))
                  (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                  (rule "polySimp_elimOne" (formula "25") (term "0"))
                  (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "4"))
                  (rule "mul_literals" (formula "7") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "7") (term "0"))
                  (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                  (rule "add_literals" (formula "7") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                  (rule "polySimp_mulComm0" (formula "7") (term "1"))
                  (rule "polySimp_rightDist" (formula "7") (term "1"))
                  (rule "mul_literals" (formula "7") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                  (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "20"))
                  (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                  (rule "mul_literals" (formula "6") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "6") (term "0"))
                  (rule "add_literals" (formula "6") (term "0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "6"))
                  (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                  (rule "inEqSimp_subsumption4" (formula "6") (ifseqformula "22"))
                  (rule "greater_literals" (formula "6") (term "0,0"))
                  (rule "concrete_and_1" (formula "6") (term "0"))
                  (rule "mul_literals" (formula "6") (term "0,0"))
                  (rule "leq_literals" (formula "6") (term "0"))
                  (rule "concrete_or_1" (formula "6"))
                  (rule "true_left" (formula "6"))
                  (rule "inEqSimp_exactShadow2" (formula "6") (ifseqformula "23"))
                  (rule "greater_literals" (formula "6") (term "0"))
                  (rule "concrete_impl_1" (formula "6"))
                  (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "6") (term "0,1,0,0"))
                  (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                  (rule "mul_literals" (formula "6") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0"))
                  (rule "polySimp_addAssoc" (formula "6") (term "0"))
                  (rule "polySimp_addComm1" (formula "6") (term "0,0"))
                  (rule "add_literals" (formula "6") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                  (rule "polySimp_mulComm0" (formula "6") (term "1"))
                  (rule "polySimp_rightDist" (formula "6") (term "1"))
                  (rule "mul_literals" (formula "6") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                  (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "13"))
                  (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0"))
                  (rule "mul_literals" (formula "7") (term "0,0,0"))
                  (rule "polySimp_addAssoc" (formula "7") (term "0"))
                  (rule "polySimp_addComm1" (formula "7") (term "0,0"))
                  (rule "add_literals" (formula "7") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                  (rule "polySimp_mulComm0" (formula "7") (term "1"))
                  (rule "polySimp_rightDist" (formula "7") (term "1"))
                  (rule "mul_literals" (formula "7") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                  (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "3"))
                  (rule "mul_literals" (formula "15") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "15") (term "0"))
                  (rule "add_literals" (formula "15") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                  (rule "mul_literals" (formula "15") (term "1"))
                  (rule "inEqSimp_contradInEq3" (formula "15") (ifseqformula "24"))
                  (rule "greater_literals" (formula "15") (term "0,0"))
                  (rule "concrete_impl_1" (formula "15") (term "0"))
                  (rule "mul_literals" (formula "15") (term "0,0"))
                  (rule "qeq_literals" (formula "15") (term "0"))
                  (rule "concrete_and_2" (formula "15"))
                  (rule "closeFalse" (formula "15"))
               )
            )
         )
         (branch "self.runBase.<created> = TRUE FALSE"
            (rule "referencedObjectIsCreatedRight" (formula "58") (ifseqformula "63"))
            (rule "close" (formula "58") (ifseqformula "1"))
         )
      )
      (branch "CUT: result.<created> = TRUE FALSE"
         (rule "concrete_or_2" (formula "32"))
         (rule "replace_known_right" (formula "35") (term "0,1") (ifseqformula "57"))
         (rule "concrete_not_2" (formula "35") (term "1"))
         (rule "concrete_impl_4" (formula "35"))
         (rule "true_left" (formula "35"))
         (rule "arrayLengthIsAnInt" (formula "34") (term "0"))
         (rule "expand_inInt" (formula "34"))
         (rule "replace_int_MAX" (formula "34") (term "1,0"))
         (rule "replace_int_MIN" (formula "34") (term "0,1"))
         (rule "andLeft" (formula "34"))
         (rule "inEqSimp_commuteLeq" (formula "35"))
         (rule "inEqSimp_exactShadow3" (formula "36") (ifseqformula "34"))
         (rule "polySimp_rightDist" (formula "36") (term "0,0"))
         (rule "polySimp_mulAssoc" (formula "36") (term "0,0,0"))
         (rule "polySimp_mulComm0" (formula "36") (term "0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "36") (term "0,0,0"))
         (rule "polySimp_elimOne" (formula "36") (term "0,0,0"))
         (rule "polySimp_addComm1" (formula "36") (term "0"))
         (rule "polySimp_addComm0" (formula "36") (term "0,0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "36"))
         (rule "polySimp_mulLiterals" (formula "36") (term "0"))
         (rule "polySimp_elimOne" (formula "36") (term "0"))
         (rule "arrayLengthNotNegative" (formula "36") (term "0"))
         (rule "inEqSimp_subsumption1" (formula "35") (ifseqformula "36"))
         (rule "leq_literals" (formula "35") (term "0"))
         (rule "concrete_or_1" (formula "35"))
         (rule "true_left" (formula "35"))
         (rule "nnf_imp2or" (formula "53") (term "0"))
         (rule "expand_addJint" (formula "69") (term "1,0"))
         (rule "polySimp_addAssoc" (formula "69") (term "0,1,0"))
         (rule "polySimp_pullOutFactor1" (formula "69") (term "0,0,1,0"))
         (rule "add_literals" (formula "69") (term "1,0,0,1,0"))
         (rule "times_zero_1" (formula "69") (term "0,0,1,0"))
         (rule "add_zero_left" (formula "69") (term "0,1,0"))
         (rule "expand_addJint" (formula "69") (term "1,1"))
         (rule "add_zero_left" (formula "69") (term "0,1,1"))
         (rule "expand_divJint" (formula "25") (term "3"))
         (rule "jdiv_axiom_inline" (formula "25") (term "0,3"))
         (rule "qeq_literals" (formula "25") (term "0,0,3"))
         (rule "ifthenelse_true" (formula "25") (term "0,3"))
         (rule "div_literals" (formula "25") (term "0,3"))
         (rule "expand_divJint" (formula "24") (term "3"))
         (rule "jdiv_axiom_inline" (formula "24") (term "0,3"))
         (rule "qeq_literals" (formula "24") (term "0,0,3"))
         (rule "ifthenelse_true" (formula "24") (term "0,3"))
         (rule "div_literals" (formula "24") (term "0,3"))
         (rule "expand_divJint" (formula "22") (term "3,1,0"))
         (rule "jdiv_axiom_inline" (formula "22") (term "0,3,1,0"))
         (rule "qeq_literals" (formula "22") (term "0,0,3,1,0"))
         (rule "ifthenelse_true" (formula "22") (term "0,3,1,0"))
         (rule "div_literals" (formula "22") (term "0,3,1,0"))
         (rule "nnf_imp2or" (formula "28") (term "0"))
         (rule "expand_moduloInteger" (formula "50") (term "3"))
         (rule "replace_int_MIN" (formula "50") (term "0,3"))
         (rule "replace_int_RANGE" (formula "50") (term "1,1,3"))
         (rule "replace_int_HALFRANGE" (formula "50") (term "0,0,1,3"))
         (rule "add_literals" (formula "50") (term "0,1,3"))
         (rule "mod_axiom" (formula "50") (term "1,3"))
         (rule "polySimp_mulLiterals" (formula "50") (term "1,1,3"))
         (rule "div_literals" (formula "50") (term "0,1,1,3"))
         (rule "times_zero_2" (formula "50") (term "1,1,3"))
         (rule "add_zero_right" (formula "50") (term "1,3"))
         (rule "add_literals" (formula "50") (term "3"))
         (rule "expand_moduloInteger" (formula "49") (term "3"))
         (rule "replace_int_HALFRANGE" (formula "49") (term "0,0,1,3"))
         (rule "replace_int_RANGE" (formula "49") (term "1,1,3"))
         (rule "replace_int_MIN" (formula "49") (term "0,3"))
         (rule "add_literals" (formula "49") (term "0,1,3"))
         (rule "mod_axiom" (formula "49") (term "1,3"))
         (rule "polySimp_mulLiterals" (formula "49") (term "1,1,3"))
         (rule "div_literals" (formula "49") (term "0,1,1,3"))
         (rule "times_zero_2" (formula "49") (term "1,1,3"))
         (rule "add_zero_right" (formula "49") (term "1,3"))
         (rule "add_literals" (formula "49") (term "3"))
         (rule "expand_moduloInteger" (formula "47") (term "3,1,0"))
         (rule "replace_int_MIN" (formula "47") (term "0,3,1,0"))
         (rule "replace_int_RANGE" (formula "47") (term "1,1,3,1,0"))
         (rule "replace_int_HALFRANGE" (formula "47") (term "0,0,1,3,1,0"))
         (rule "add_literals" (formula "47") (term "0,1,3,1,0"))
         (rule "mod_axiom" (formula "47") (term "1,3,1,0"))
         (rule "polySimp_mulLiterals" (formula "47") (term "1,1,3,1,0"))
         (rule "div_literals" (formula "47") (term "0,1,1,3,1,0"))
         (rule "times_zero_2" (formula "47") (term "1,1,3,1,0"))
         (rule "add_zero_right" (formula "47") (term "1,3,1,0"))
         (rule "add_literals" (formula "47") (term "3,1,0"))
         (rule "expand_moduloInteger" (formula "69") (term "1,0"))
         (rule "replace_int_HALFRANGE" (formula "69") (term "0,0,1,1,0"))
         (rule "replace_int_MIN" (formula "69") (term "0,1,0"))
         (rule "replace_int_RANGE" (formula "69") (term "1,1,1,0"))
         (rule "mod_axiom" (formula "69") (term "1,1,0"))
         (rule "polySimp_mulLiterals" (formula "69") (term "1,1,1,0"))
         (rule "polySimp_addAssoc" (formula "69") (term "1,0"))
         (rule "polySimp_addAssoc" (formula "69") (term "0,1,0"))
         (rule "add_literals" (formula "69") (term "0,0,1,0"))
         (rule "add_zero_left" (formula "69") (term "0,1,0"))
         (rule "expand_moduloInteger" (formula "69") (term "1,1"))
         (rule "replace_int_RANGE" (formula "69") (term "1,1,1,1"))
         (rule "replace_int_HALFRANGE" (formula "69") (term "0,0,1,1,1"))
         (rule "replace_int_MIN" (formula "69") (term "0,1,1"))
         (rule "polySimp_addAssoc" (formula "69") (term "0,1,1,1"))
         (rule "mod_axiom" (formula "69") (term "1,1,1"))
         (rule "polySimp_mulLiterals" (formula "69") (term "1,1,1,1"))
         (rule "polySimp_addAssoc" (formula "69") (term "1,1"))
         (rule "polySimp_addAssoc" (formula "69") (term "0,1,1"))
         (rule "polySimp_addAssoc" (formula "69") (term "0,0,1,1"))
         (rule "add_literals" (formula "69") (term "0,0,0,1,1"))
         (rule "add_zero_left" (formula "69") (term "0,0,1,1"))
         (rule "expand_moduloInteger" (formula "25") (term "3"))
         (rule "replace_int_MIN" (formula "25") (term "0,3"))
         (rule "replace_int_HALFRANGE" (formula "25") (term "0,0,1,3"))
         (rule "replace_int_RANGE" (formula "25") (term "1,1,3"))
         (rule "add_literals" (formula "25") (term "0,1,3"))
         (rule "mod_axiom" (formula "25") (term "1,3"))
         (rule "polySimp_mulLiterals" (formula "25") (term "1,1,3"))
         (rule "div_literals" (formula "25") (term "0,1,1,3"))
         (rule "times_zero_2" (formula "25") (term "1,1,3"))
         (rule "add_zero_right" (formula "25") (term "1,3"))
         (rule "add_literals" (formula "25") (term "3"))
         (rule "expand_moduloInteger" (formula "24") (term "3"))
         (rule "replace_int_MIN" (formula "24") (term "0,3"))
         (rule "replace_int_RANGE" (formula "24") (term "1,1,3"))
         (rule "replace_int_HALFRANGE" (formula "24") (term "0,0,1,3"))
         (rule "add_literals" (formula "24") (term "0,1,3"))
         (rule "mod_axiom" (formula "24") (term "1,3"))
         (rule "polySimp_mulLiterals" (formula "24") (term "1,1,3"))
         (rule "div_literals" (formula "24") (term "0,1,1,3"))
         (rule "times_zero_2" (formula "24") (term "1,1,3"))
         (rule "add_zero_right" (formula "24") (term "1,3"))
         (rule "add_literals" (formula "24") (term "3"))
         (rule "nnf_notAnd" (formula "53") (term "0,0"))
         (rule "inEqSimp_notLeq" (formula "53") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "53") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "53") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "53") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "53") (term "0,0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "53") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "53") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "53") (term "1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "53") (term "1,1,1,0,0"))
         (rule "mul_literals" (formula "53") (term "0,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "53") (term "1,1,1,0,0"))
         (rule "inEqSimp_notGeq" (formula "53") (term "0,0,0"))
         (rule "mul_literals" (formula "53") (term "1,0,0,0,0,0"))
         (rule "add_zero_right" (formula "53") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "0,0,0"))
         (rule "mul_literals" (formula "53") (term "1,0,0,0"))
         (rule "expand_moduloInteger" (formula "22") (term "3,1,0"))
         (rule "replace_int_RANGE" (formula "22") (term "1,1,3,1,0"))
         (rule "replace_int_MIN" (formula "22") (term "0,3,1,0"))
         (rule "replace_int_HALFRANGE" (formula "22") (term "0,0,1,3,1,0"))
         (rule "add_literals" (formula "22") (term "0,1,3,1,0"))
         (rule "mod_axiom" (formula "22") (term "1,3,1,0"))
         (rule "div_literals" (formula "22") (term "0,0,1,1,3,1,0"))
         (rule "polySimp_mulLiterals" (formula "22") (term "1,1,3,1,0"))
         (rule "times_zero_2" (formula "22") (term "1,1,3,1,0"))
         (rule "add_zero_right" (formula "22") (term "1,3,1,0"))
         (rule "add_literals" (formula "22") (term "3,1,0"))
         (rule "nnf_notAnd" (formula "28") (term "0,0"))
         (rule "inEqSimp_notGeq" (formula "28") (term "0,0,0"))
         (rule "times_zero_1" (formula "28") (term "1,0,0,0,0,0"))
         (rule "add_zero_right" (formula "28") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,0"))
         (rule "mul_literals" (formula "28") (term "1,0,0,0"))
         (rule "inEqSimp_notLeq" (formula "28") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "28") (term "0,0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0"))
         (rule "mul_literals" (formula "28") (term "0,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0"))
         (rule "nnf_imp2or" (formula "47") (term "0"))
         (rule "nnf_imp2or" (formula "22") (term "0"))
         (rule "nnf_notAnd" (formula "47") (term "0,0"))
         (rule "inEqSimp_notGeq" (formula "47") (term "0,0,0"))
         (rule "times_zero_1" (formula "47") (term "1,0,0,0,0,0"))
         (rule "add_zero_right" (formula "47") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "0,0,0"))
         (rule "mul_literals" (formula "47") (term "1,0,0,0"))
         (rule "inEqSimp_notLeq" (formula "47") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "47") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "47") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "47") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "47") (term "0,0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "47") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "47") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "47") (term "1,1,0,0"))
         (rule "mul_literals" (formula "47") (term "0,1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "47") (term "1,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "47") (term "1,1,1,0,0"))
         (rule "nnf_notAnd" (formula "22") (term "0,0"))
         (rule "inEqSimp_notLeq" (formula "22") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "22") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "22") (term "0,0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0"))
         (rule "mul_literals" (formula "22") (term "0,1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0"))
         (rule "inEqSimp_notGeq" (formula "22") (term "0,0,0"))
         (rule "times_zero_1" (formula "22") (term "1,0,0,0,0,0"))
         (rule "add_zero_right" (formula "22") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0"))
         (rule "mul_literals" (formula "22") (term "1,0,0,0"))
         (rule "ifthenelse_split" (formula "42") (term "0"))
         (branch "self.runBase.<created> = TRUE TRUE"
            (rule "applyEqReverse" (formula "44") (term "0,0,1") (ifseqformula "43"))
            (rule "hideAuxiliaryEq" (formula "43"))
            (rule "polySimp_addComm0" (formula "43") (term "1"))
            (rule "arrayLengthNotNegative" (formula "37") (term "0"))
            (rule "applyEq" (formula "37") (term "0") (ifseqformula "38"))
            (rule "arrayLengthIsAnInt" (formula "37") (term "0"))
            (rule "expand_inInt" (formula "37"))
            (rule "replace_int_MAX" (formula "37") (term "1,0"))
            (rule "replace_int_MIN" (formula "37") (term "0,1"))
            (rule "andLeft" (formula "37"))
            (rule "inEqSimp_commuteLeq" (formula "38"))
            (rule "applyEq" (formula "38") (term "0") (ifseqformula "39"))
            (rule "applyEq" (formula "37") (term "0") (ifseqformula "39"))
            (rule "inEqSimp_subsumption1" (formula "38") (ifseqformula "46"))
            (rule "leq_literals" (formula "38") (term "0"))
            (rule "concrete_or_1" (formula "38"))
            (rule "true_left" (formula "38"))
            (rule "cut_direct" (formula "41") (term "0,0"))
            (branch "CUT: self.a.length >= 1542 TRUE"
               (rule "concrete_and_1" (formula "42") (term "0"))
               (rule "inEqSimp_subsumption1" (formula "40") (term "0,0") (ifseqformula "41"))
               (rule "leq_literals" (formula "40") (term "0,0,0"))
               (rule "concrete_or_1" (formula "40") (term "0,0"))
               (rule "concrete_and_1" (formula "40") (term "0"))
               (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "41"))
               (rule "leq_literals" (formula "18") (term "0"))
               (rule "concrete_or_1" (formula "18"))
               (rule "true_left" (formula "18"))
               (rule "inEqSimp_contradInEq1" (formula "38") (term "0") (ifseqformula "40"))
               (rule "qeq_literals" (formula "38") (term "0,0"))
               (rule "concrete_and_2" (formula "38") (term "0"))
               (rule "concrete_impl_2" (formula "38"))
               (rule "true_left" (formula "38"))
               (rule "inEqSimp_contradInEq1" (formula "38") (term "0") (ifseqformula "39"))
               (rule "qeq_literals" (formula "38") (term "0,0"))
               (rule "concrete_and_2" (formula "38") (term "0"))
               (rule "concrete_impl_2" (formula "38"))
               (rule "true_left" (formula "38"))
               (rule "cut_direct" (formula "40") (term "0"))
               (branch "CUT: self.a.length >= 119151 TRUE"
                  (rule "concrete_impl_1" (formula "41"))
                  (rule "applyEq" (formula "46") (term "1") (ifseqformula "41"))
                  (rule "applyEq" (formula "39") (term "0,1") (ifseqformula "41"))
                  (rule "equal_literals" (formula "39") (term "1"))
                  (rule "concrete_impl_3" (formula "39"))
                  (rule "notLeft" (formula "39"))
                  (rule "inEqSimp_leqRight" (formula "57"))
                  (rule "mul_literals" (formula "1") (term "1,0,0"))
                  (rule "add_literals" (formula "1") (term "0,0"))
                  (rule "applyEq" (formula "37") (term "0") (ifseqformula "41"))
                  (rule "leq_literals" (formula "37"))
                  (rule "true_left" (formula "37"))
                  (rule "applyEq" (formula "43") (term "0") (ifseqformula "40"))
                  (rule "qeq_literals" (formula "43"))
                  (rule "true_left" (formula "43"))
                  (rule "applyEq" (formula "37") (term "1") (ifseqformula "40"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                  (rule "mul_literals" (formula "1") (term "1"))
                  (rule "inEqSimp_subsumption1" (formula "37") (ifseqformula "38"))
                  (rule "leq_literals" (formula "37") (term "0"))
                  (rule "concrete_or_1" (formula "37"))
                  (rule "true_left" (formula "37"))
                  (rule "commute_and" (formula "65"))
                  (rule "commute_or_2" (formula "43") (term "0"))
                  (rule "commute_or_2" (formula "21") (term "0"))
                  (rule "commute_or" (formula "43") (term "0,0"))
                  (rule "commute_or" (formula "21") (term "0,0"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "32") (term "0") (ifseqformula "29"))
                  (rule "applyEq" (formula "32") (term "1,0,1") (ifseqformula "33"))
                  (rule "replace_known_left" (formula "32") (term "1") (ifseqformula "31"))
                  (rule "concrete_or_3" (formula "32"))
                  (rule "true_left" (formula "32"))
                  (rule "div_axiom" (formula "65") (term "0,1,1,0") (inst "quotient=quotient_14"))
                  (rule "equal_literals" (formula "1") (term "0"))
                  (rule "concrete_or_2" (formula "1"))
                  (rule "qeq_literals" (formula "1") (term "0,1"))
                  (rule "ifthenelse_true_for" (formula "1") (term "1"))
                  (rule "mul_literals" (formula "1") (term "1,1,1"))
                  (rule "andLeft" (formula "1"))
                  (rule "andLeft" (formula "1"))
                  (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                  (rule "polySimp_addComm1" (formula "3") (term "1"))
                  (rule "polySimp_addAssoc" (formula "3") (term "0,0,1"))
                  (rule "add_literals" (formula "3") (term "0,0,0,1"))
                  (rule "polySimp_addComm1" (formula "3") (term "0,1"))
                  (rule "add_literals" (formula "3") (term "0,0,1"))
                  (rule "inEqSimp_homoInEq0" (formula "2"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                  (rule "polySimp_addComm1" (formula "2") (term "0"))
                  (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                  (rule "inEqSimp_homoInEq1" (formula "3"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                  (rule "polySimp_addComm1" (formula "3") (term "0"))
                  (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                  (rule "applyEq" (formula "68") (term "0,1,1,0") (ifseqformula "1"))
                  (rule "polySimp_addComm1" (formula "68") (term "1,0"))
                  (rule "polySimp_addComm0" (formula "68") (term "0,1,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                  (rule "polySimp_mulComm0" (formula "2") (term "1"))
                  (rule "polySimp_rightDist" (formula "2") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                  (rule "polySimp_rightDist" (formula "2") (term "0,1"))
                  (rule "mul_literals" (formula "2") (term "0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                  (rule "polySimp_mulComm0" (formula "3") (term "1"))
                  (rule "polySimp_rightDist" (formula "3") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                  (rule "polySimp_rightDist" (formula "3") (term "0,1"))
                  (rule "mul_literals" (formula "3") (term "0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1"))
                  (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "3"))
                  (rule "mul_literals" (formula "8") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "8") (term "0"))
                  (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                  (rule "add_literals" (formula "8") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                  (rule "polySimp_mulComm0" (formula "8") (term "1"))
                  (rule "polySimp_rightDist" (formula "8") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                  (rule "mul_literals" (formula "8") (term "0,1"))
                  (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "3"))
                  (rule "polySimp_rightDist" (formula "14") (term "0,0"))
                  (rule "mul_literals" (formula "14") (term "0,0,0"))
                  (rule "polySimp_addAssoc" (formula "14") (term "0"))
                  (rule "polySimp_addComm1" (formula "14") (term "0,0"))
                  (rule "polySimp_pullOutFactor2b" (formula "14") (term "0"))
                  (rule "add_literals" (formula "14") (term "1,1,0"))
                  (rule "times_zero_1" (formula "14") (term "1,0"))
                  (rule "add_zero_right" (formula "14") (term "0"))
                  (rule "polySimp_addAssoc" (formula "14") (term "0"))
                  (rule "add_literals" (formula "14") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                  (rule "mul_literals" (formula "14") (term "1"))
                  (rule "elimGcdGeq_antec" (formula "14") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_14") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                  (rule "leq_literals" (formula "14") (term "0,0"))
                  (rule "concrete_or_2" (formula "14") (term "0"))
                  (rule "times_zero_1" (formula "14") (term "1,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0"))
                  (rule "polySimp_addLiterals" (formula "14") (term "0,0,0,0"))
                  (rule "add_literals" (formula "14") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,0"))
                  (rule "add_literals" (formula "14") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "14") (term "1,0,0"))
                  (rule "add_zero_right" (formula "14") (term "0,0"))
                  (rule "leq_literals" (formula "14") (term "0"))
                  (rule "concrete_or_2" (formula "14"))
                  (rule "inEqSimp_exactShadow2" (formula "2") (ifseqformula "18"))
                  (rule "greater_literals" (formula "2") (term "0"))
                  (rule "concrete_impl_1" (formula "2"))
                  (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "2") (term "0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0,0"))
                  (rule "mul_literals" (formula "2") (term "0,0,1,0,0"))
                  (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "2") (term "0,0,0"))
                  (rule "mul_literals" (formula "2") (term "0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "2") (term "0"))
                  (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                  (rule "polySimp_pullOutFactor2b" (formula "2") (term "0"))
                  (rule "add_literals" (formula "2") (term "1,1,0"))
                  (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                  (rule "add_literals" (formula "2") (term "0,0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                  (rule "polySimp_elimOne" (formula "2") (term "0"))
                  (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "8"))
                  (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                  (rule "polySimp_rightDist" (formula "3") (term "0,0,0"))
                  (rule "mul_literals" (formula "3") (term "0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "3") (term "0"))
                  (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                  (rule "polySimp_pullOutFactor2b" (formula "3") (term "0"))
                  (rule "add_literals" (formula "3") (term "1,1,0"))
                  (rule "times_zero_1" (formula "3") (term "1,0"))
                  (rule "add_zero_right" (formula "3") (term "0"))
                  (rule "polySimp_addComm1" (formula "3") (term "0"))
                  (rule "add_literals" (formula "3") (term "0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                  (rule "elimGcdLeq_antec" (formula "3") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_14") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                  (rule "neg_literal" (formula "3") (term "0,0,0,0,0,1,0"))
                  (rule "times_zero_1" (formula "3") (term "1,0,0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,0"))
                  (rule "leq_literals" (formula "3") (term "0,0"))
                  (rule "concrete_or_2" (formula "3") (term "0"))
                  (rule "polySimp_addLiterals" (formula "3") (term "0,0,0,0"))
                  (rule "add_literals" (formula "3") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                  (rule "add_literals" (formula "3") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "3") (term "1,0,0"))
                  (rule "add_zero_right" (formula "3") (term "0,0"))
                  (rule "qeq_literals" (formula "3") (term "0"))
                  (rule "concrete_or_2" (formula "3"))
                  (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "18"))
                  (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "4") (term "0"))
                  (rule "polySimp_rightDist" (formula "4") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "4") (term "0,0,0,0"))
                  (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                  (rule "add_literals" (formula "4") (term "0,0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                  (rule "polySimp_elimOne" (formula "4") (term "0"))
                  (rule "inEqSimp_antiSymm" (formula "17") (ifseqformula "3"))
                  (rule "applyEqRigid" (formula "2") (term "0,1,1") (ifseqformula "17"))
                  (rule "mul_literals" (formula "2") (term "1,1"))
                  (rule "add_zero_right" (formula "2") (term "1"))
                  (rule "applyEq" (formula "3") (term "0") (ifseqformula "17"))
                  (rule "leq_literals" (formula "3"))
                  (rule "true_left" (formula "3"))
                  (rule "applyEqRigid" (formula "3") (term "0,1,1") (ifseqformula "16"))
                  (rule "mul_literals" (formula "3") (term "1,1"))
                  (rule "add_zero_right" (formula "3") (term "1"))
                  (rule "applyEq" (formula "17") (term "0") (ifseqformula "16"))
                  (rule "qeq_literals" (formula "17"))
                  (rule "true_left" (formula "17"))
                  (rule "applyEqRigid" (formula "10") (term "0,1,1") (ifseqformula "16"))
                  (rule "times_zero_2" (formula "10") (term "1,1"))
                  (rule "add_zero_right" (formula "10") (term "1"))
                  (rule "applyEqRigid" (formula "5") (term "0,1,0,1") (ifseqformula "16"))
                  (rule "mul_literals" (formula "5") (term "1,0,1"))
                  (rule "add_zero_right" (formula "5") (term "0,1"))
                  (rule "applyEqRigid" (formula "1") (term "1") (ifseqformula "15"))
                  (rule "applyEqRigid" (formula "4") (term "0,1,0,1") (ifseqformula "15"))
                  (rule "mul_literals" (formula "4") (term "1,0,1"))
                  (rule "add_zero_right" (formula "4") (term "0,1"))
                  (rule "applyEqRigid" (formula "71") (term "0,0,0,1,0") (ifseqformula "15"))
                  (rule "times_zero_2" (formula "71") (term "0,0,1,0"))
                  (rule "add_zero_left" (formula "71") (term "0,1,0"))
                  (rule "replace_known_left" (formula "71") (term "0") (ifseqformula "41"))
                  (rule "concrete_and_1" (formula "71"))
                  (rule "inEqSimp_geqRight" (formula "71"))
                  (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                  (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1"))
                  (rule "polySimp_rightDist" (formula "1") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                  (rule "polySimp_rightDist" (formula "1") (term "0,1"))
                  (rule "mul_literals" (formula "1") (term "0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1"))
                  (rule "polySimp_elimOne" (formula "1") (term "1,0,1"))
                  (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "14"))
                  (rule "leq_literals" (formula "10") (term "0"))
                  (rule "concrete_or_1" (formula "10"))
                  (rule "true_left" (formula "10"))
                  (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "14"))
                  (rule "leq_literals" (formula "3") (term "0"))
                  (rule "concrete_or_1" (formula "3"))
                  (rule "true_left" (formula "3"))
                  (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "13"))
                  (rule "leq_literals" (formula "3") (term "0"))
                  (rule "concrete_or_1" (formula "3"))
                  (rule "true_left" (formula "3"))
                  (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "14"))
                  (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                  (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                  (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                  (rule "add_literals" (formula "3") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0"))
                  (rule "add_literals" (formula "3") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "3") (term "1,0,0"))
                  (rule "add_zero_right" (formula "3") (term "0,0"))
                  (rule "qeq_literals" (formula "3") (term "0"))
                  (rule "concrete_or_1" (formula "3"))
                  (rule "true_left" (formula "3"))
                  (rule "inEqSimp_exactShadow3" (formula "40") (ifseqformula "1"))
                  (rule "mul_literals" (formula "40") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "40") (term "0"))
                  (rule "polySimp_addAssoc" (formula "40") (term "0,0"))
                  (rule "add_literals" (formula "40") (term "0,0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "40"))
                  (rule "polySimp_mulLiterals" (formula "40") (term "0"))
                  (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "1"))
                  (rule "polySimp_rightDist" (formula "22") (term "0,0"))
                  (rule "polySimp_mulComm0" (formula "22") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "22") (term "0"))
                  (rule "polySimp_addAssoc" (formula "22") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "22") (term "0,0,0"))
                  (rule "polySimp_addComm0" (formula "22") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor2b" (formula "22") (term "0,0,0"))
                  (rule "add_literals" (formula "22") (term "1,1,0,0,0"))
                  (rule "times_zero_1" (formula "22") (term "1,0,0,0"))
                  (rule "add_zero_right" (formula "22") (term "0,0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "22"))
                  (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                  (rule "polySimp_elimOne" (formula "22") (term "0"))
                  (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "22"))
                  (rule "mul_literals" (formula "15") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "15") (term "0"))
                  (rule "add_literals" (formula "15") (term "0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "15"))
                  (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                  (rule "elimGcdLeq_antec" (formula "15") (inst "elimGcdRightDiv=Z(neglit(1(#)))") (inst "elimGcdLeftDiv=div(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))), base2),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                  (rule "leq_literals" (formula "15") (term "0,0"))
                  (rule "concrete_or_2" (formula "15") (term "0"))
                  (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0"))
                  (rule "neg_literal" (formula "15") (term "0,0,0,0,0,0"))
                  (rule "mul_literals" (formula "15") (term "1,0,0,0,0,0"))
                  (rule "polySimp_addLiterals" (formula "15") (term "0,0,0,0"))
                  (rule "add_literals" (formula "15") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "15") (term "0,0"))
                  (rule "add_literals" (formula "15") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "15") (term "1,0,0"))
                  (rule "add_zero_right" (formula "15") (term "0,0"))
                  (rule "qeq_literals" (formula "15") (term "0"))
                  (rule "concrete_or_2" (formula "15"))
                  (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "23"))
                  (rule "polySimp_rightDist" (formula "18") (term "0,0"))
                  (rule "polySimp_mulAssoc" (formula "18") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "18") (term "0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "18") (term "0,0,0"))
                  (rule "polySimp_elimOne" (formula "18") (term "0,0,0"))
                  (rule "polySimp_addAssoc" (formula "18") (term "0"))
                  (rule "polySimp_addComm1" (formula "18") (term "0,0"))
                  (rule "polySimp_addComm0" (formula "18") (term "0,0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "18"))
                  (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "42") (term "0,0") (ifseqformula "3"))
                  (rule "replace_known_right" (formula "42") (term "0") (ifseqformula "70"))
                  (rule "concrete_or_2" (formula "42"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "69") (term "0") (ifseqformula "3"))
                  (rule "replace_known_left" (formula "1") (term "1") (ifseqformula "48"))
                  (rule "concrete_or_3" (formula "1"))
                  (rule "true_left" (formula "1"))
                  (rule "arrayLengthNotNegative" (formula "46") (term "0"))
                  (rule "applyEq" (formula "46") (term "0") (ifseqformula "47"))
                  (rule "qeq_literals" (formula "46"))
                  (rule "true_left" (formula "46"))
                  (rule "arrayLengthIsAnInt" (formula "46") (term "0"))
                  (rule "expand_inInt" (formula "46"))
                  (rule "replace_int_MAX" (formula "46") (term "1,0"))
                  (rule "replace_int_MIN" (formula "46") (term "0,1"))
                  (rule "andLeft" (formula "46"))
                  (rule "inEqSimp_commuteLeq" (formula "47"))
                  (rule "applyEq" (formula "47") (term "0") (ifseqformula "48"))
                  (rule "qeq_literals" (formula "47"))
                  (rule "true_left" (formula "47"))
                  (rule "applyEq" (formula "46") (term "0") (ifseqformula "47"))
                  (rule "leq_literals" (formula "46"))
                  (rule "true_left" (formula "46"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "68") (term "0") (ifseqformula "3"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "69"))
                  (rule "concrete_or_2" (formula "1"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "35") (term "0,0") (ifseqformula "4"))
                  (rule "replace_known_right" (formula "35") (term "0") (ifseqformula "66"))
                  (rule "concrete_or_2" (formula "35"))
                  (rule "div_axiom" (formula "2") (term "0,1,1") (inst "quotient=quotient_15"))
                  (rule "equal_literals" (formula "2") (term "0"))
                  (rule "concrete_or_2" (formula "2"))
                  (rule "mul_literals" (formula "2") (term "1,1,1,1"))
                  (rule "qeq_literals" (formula "2") (term "0,1"))
                  (rule "ifthenelse_true_for" (formula "2") (term "1"))
                  (rule "andLeft" (formula "2"))
                  (rule "andLeft" (formula "2"))
                  (rule "polySimp_addAssoc" (formula "4") (term "0,1"))
                  (rule "add_literals" (formula "4") (term "0,0,1"))
                  (rule "polySimp_addComm1" (formula "4") (term "1"))
                  (rule "add_literals" (formula "4") (term "0,1"))
                  (rule "inEqSimp_homoInEq0" (formula "3"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                  (rule "polySimp_addComm1" (formula "3") (term "0"))
                  (rule "inEqSimp_homoInEq1" (formula "4"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
                  (rule "polySimp_addComm1" (formula "4") (term "0"))
                  (rule "applyEq" (formula "22") (term "0,0") (ifseqformula "2"))
                  (rule "inEqSimp_homoInEq0" (formula "22"))
                  (rule "polySimp_mulLiterals" (formula "22") (term "1,0"))
                  (rule "polySimp_addComm1" (formula "22") (term "0"))
                  (rule "polySimp_addComm1" (formula "22") (term "0,0"))
                  (rule "applyEq" (formula "28") (term "0,1,1") (ifseqformula "2"))
                  (rule "applyEq" (formula "5") (term "0,1,1") (ifseqformula "2"))
                  (rule "polySimp_addComm1" (formula "5") (term "1"))
                  (rule "applyEq" (formula "49") (term "0,0") (ifseqformula "2"))
                  (rule "inEqSimp_homoInEq0" (formula "49"))
                  (rule "polySimp_mulLiterals" (formula "49") (term "1,0"))
                  (rule "polySimp_addComm1" (formula "49") (term "0"))
                  (rule "applyEq" (formula "19") (term "0") (ifseqformula "2"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                  (rule "polySimp_mulComm0" (formula "3") (term "1"))
                  (rule "polySimp_rightDist" (formula "3") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                  (rule "mul_literals" (formula "3") (term "0,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                  (rule "polySimp_mulComm0" (formula "4") (term "1"))
                  (rule "polySimp_rightDist" (formula "4") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                  (rule "mul_literals" (formula "4") (term "0,1"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "22"))
                  (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                  (rule "polySimp_elimOne" (formula "22") (term "0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "49"))
                  (rule "polySimp_mulComm0" (formula "49") (term "1"))
                  (rule "polySimp_rightDist" (formula "49") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "49") (term "1,1"))
                  (rule "mul_literals" (formula "49") (term "0,1"))
                  (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "49"))
                  (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                  (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                  (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                  (rule "add_literals" (formula "3") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                  (rule "add_literals" (formula "3") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "3") (term "1,0,0"))
                  (rule "add_zero_right" (formula "3") (term "0,0"))
                  (rule "qeq_literals" (formula "3") (term "0"))
                  (rule "concrete_or_1" (formula "3"))
                  (rule "true_left" (formula "3"))
                  (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "27"))
                  (rule "polySimp_rightDist" (formula "22") (term "0,0"))
                  (rule "polySimp_mulAssoc" (formula "22") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "22") (term "0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "22") (term "0,0,0"))
                  (rule "polySimp_elimOne" (formula "22") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "22") (term "0"))
                  (rule "polySimp_addComm0" (formula "22") (term "0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "22"))
                  (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                  (rule "polySimp_elimOne" (formula "22") (term "0"))
                  (rule "inEqSimp_exactShadow3" (formula "48") (ifseqformula "9"))
                  (rule "polySimp_rightDist" (formula "48") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "48") (term "1,0,0"))
                  (rule "mul_literals" (formula "48") (term "0,0,0"))
                  (rule "polySimp_addAssoc" (formula "48") (term "0"))
                  (rule "polySimp_addComm1" (formula "48") (term "0,0"))
                  (rule "add_literals" (formula "48") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "48"))
                  (rule "polySimp_mulComm0" (formula "48") (term "1"))
                  (rule "polySimp_rightDist" (formula "48") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "48") (term "1,1"))
                  (rule "mul_literals" (formula "48") (term "0,1"))
                  (rule "inEqSimp_exactShadow2" (formula "49") (ifseqformula "20"))
                  (rule "greater_literals" (formula "49") (term "0"))
                  (rule "concrete_impl_1" (formula "49"))
                  (rule "polySimp_rightDist" (formula "49") (term "1,0,0"))
                  (rule "mul_literals" (formula "49") (term "0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "49") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "49") (term "1,0,0"))
                  (rule "mul_literals" (formula "49") (term "0,0,0"))
                  (rule "polySimp_addAssoc" (formula "49") (term "0"))
                  (rule "polySimp_addComm1" (formula "49") (term "0,0"))
                  (rule "add_literals" (formula "49") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "49"))
                  (rule "polySimp_mulComm0" (formula "49") (term "1"))
                  (rule "polySimp_rightDist" (formula "49") (term "1"))
                  (rule "mul_literals" (formula "49") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "49") (term "1,1"))
                  (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "3"))
                  (rule "mul_literals" (formula "10") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "10") (term "0"))
                  (rule "add_literals" (formula "10") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                  (rule "mul_literals" (formula "10") (term "1"))
                  (rule "inEqSimp_contradInEq3" (formula "10") (ifseqformula "19"))
                  (rule "mul_literals" (formula "10") (term "0,1,0"))
                  (rule "greater_literals" (formula "10") (term "0,0"))
                  (rule "concrete_impl_1" (formula "10") (term "0"))
                  (rule "qeq_literals" (formula "10") (term "0"))
                  (rule "concrete_and_2" (formula "10"))
                  (rule "closeFalse" (formula "10"))
               )
               (branch "CUT: self.a.length >= 119151 FALSE"
                  (rule "concrete_impl_2" (formula "40"))
                  (rule "true_left" (formula "40"))
                  (rule "inEqSimp_geqRight" (formula "56"))
                  (rule "mul_literals" (formula "1") (term "1,0,0"))
                  (rule "add_literals" (formula "1") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                  (rule "mul_literals" (formula "1") (term "1"))
                  (rule "replace_known_left" (formula "40") (term "0") (ifseqformula "1"))
                  (rule "concrete_impl_1" (formula "40"))
                  (rule "applyEq" (formula "45") (term "1") (ifseqformula "40"))
                  (rule "applyEq" (formula "37") (term "0") (ifseqformula "40"))
                  (rule "leq_literals" (formula "37"))
                  (rule "true_left" (formula "37"))
                  (rule "applyEq" (formula "42") (term "0") (ifseqformula "39"))
                  (rule "qeq_literals" (formula "42"))
                  (rule "true_left" (formula "42"))
                  (rule "applyEq" (formula "37") (term "1") (ifseqformula "39"))
                  (rule "inEqSimp_subsumption0" (formula "17") (ifseqformula "1"))
                  (rule "leq_literals" (formula "17") (term "0"))
                  (rule "concrete_or_1" (formula "17"))
                  (rule "true_left" (formula "17"))
                  (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "1"))
                  (rule "polySimp_rightDist" (formula "19") (term "0,0"))
                  (rule "polySimp_mulComm0" (formula "19") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "19") (term "0"))
                  (rule "polySimp_addComm0" (formula "19") (term "0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "19"))
                  (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                  (rule "polySimp_elimOne" (formula "19") (term "0"))
                  (rule "inEqSimp_subsumption0" (formula "17") (ifseqformula "19"))
                  (rule "inEqSimp_homoInEq0" (formula "17") (term "0"))
                  (rule "polySimp_mulComm0" (formula "17") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "17") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "17") (term "0,1,0,0"))
                  (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "17") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "17") (term "0,0,0"))
                  (rule "add_literals" (formula "17") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor2b" (formula "17") (term "0,0"))
                  (rule "add_literals" (formula "17") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "17") (term "1,0,0"))
                  (rule "add_zero_right" (formula "17") (term "0,0"))
                  (rule "qeq_literals" (formula "17") (term "0"))
                  (rule "concrete_or_1" (formula "17"))
                  (rule "true_left" (formula "17"))
                  (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "18"))
                  (rule "polySimp_rightDist" (formula "15") (term "0,0"))
                  (rule "polySimp_mulAssoc" (formula "15") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "15") (term "0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "15") (term "0,0,0"))
                  (rule "polySimp_elimOne" (formula "15") (term "0,0,0"))
                  (rule "polySimp_addAssoc" (formula "15") (term "0"))
                  (rule "polySimp_addComm1" (formula "15") (term "0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "15") (term "0"))
                  (rule "add_literals" (formula "15") (term "1,1,0"))
                  (rule "polySimp_addComm0" (formula "15") (term "0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "15"))
                  (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                  (rule "inEqSimp_subsumption0" (formula "14") (ifseqformula "15"))
                  (rule "inEqSimp_homoInEq0" (formula "14") (term "0"))
                  (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "14") (term "1,0,0"))
                  (rule "mul_literals" (formula "14") (term "0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "14") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "14") (term "0,0,0"))
                  (rule "add_literals" (formula "14") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0"))
                  (rule "add_literals" (formula "14") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "14") (term "1,0,0"))
                  (rule "add_zero_right" (formula "14") (term "0,0"))
                  (rule "qeq_literals" (formula "14") (term "0"))
                  (rule "concrete_or_1" (formula "14"))
                  (rule "true_left" (formula "14"))
                  (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "18"))
                  (rule "mul_literals" (formula "13") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "13") (term "0"))
                  (rule "add_literals" (formula "13") (term "0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "13"))
                  (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                  (rule "polySimp_elimOne" (formula "13") (term "0"))
                  (rule "inEqSimp_subsumption0" (formula "12") (ifseqformula "13"))
                  (rule "leq_literals" (formula "12") (term "0"))
                  (rule "concrete_or_1" (formula "12"))
                  (rule "true_left" (formula "12"))
                  (rule "inEqSimp_exactShadow2" (formula "11") (ifseqformula "14"))
                  (rule "greater_literals" (formula "11") (term "0"))
                  (rule "concrete_impl_1" (formula "11"))
                  (rule "polySimp_rightDist" (formula "11") (term "1,0,0"))
                  (rule "mul_literals" (formula "11") (term "0,1,0,0"))
                  (rule "polySimp_rightDist" (formula "11") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0"))
                  (rule "mul_literals" (formula "11") (term "0,0,0"))
                  (rule "polySimp_addAssoc" (formula "11") (term "0"))
                  (rule "polySimp_addComm1" (formula "11") (term "0,0"))
                  (rule "add_literals" (formula "11") (term "0,0,0"))
                  (rule "polySimp_pullOutFactor2b" (formula "11") (term "0"))
                  (rule "add_literals" (formula "11") (term "1,1,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "11"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                  (rule "polySimp_elimOne" (formula "11") (term "0"))
                  (rule "inEqSimp_subsumption0" (formula "10") (ifseqformula "11"))
                  (rule "leq_literals" (formula "10") (term "0"))
                  (rule "concrete_or_1" (formula "10"))
                  (rule "true_left" (formula "10"))
                  (rule "inEqSimp_exactShadow2" (formula "6") (ifseqformula "14"))
                  (rule "mul_literals" (formula "6") (term "1,0,0,1"))
                  (rule "greater_literals" (formula "6") (term "0"))
                  (rule "concrete_impl_1" (formula "6"))
                  (rule "mul_literals" (formula "6") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "6") (term "0"))
                  (rule "add_literals" (formula "6") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                  (rule "mul_literals" (formula "6") (term "1"))
                  (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "10"))
                  (rule "leq_literals" (formula "6") (term "0"))
                  (rule "concrete_or_1" (formula "6"))
                  (rule "true_left" (formula "6"))
                  (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "12"))
                  (rule "polySimp_rightDist" (formula "11") (term "0,0"))
                  (rule "mul_literals" (formula "11") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "11") (term "0"))
                  (rule "add_literals" (formula "11") (term "0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "11"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                  (rule "polySimp_elimOne" (formula "11") (term "0"))
                  (rule "commute_and" (formula "65"))
                  (rule "commute_or_2" (formula "43") (term "0"))
                  (rule "commute_or_2" (formula "21") (term "0"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "32") (term "0") (ifseqformula "29"))
                  (rule "applyEq" (formula "32") (term "1,0,1") (ifseqformula "33"))
                  (rule "replace_known_left" (formula "32") (term "1") (ifseqformula "31"))
                  (rule "concrete_or_3" (formula "32"))
                  (rule "true_left" (formula "32"))
                  (rule "commute_or" (formula "43") (term "0,0"))
                  (rule "commute_or" (formula "21") (term "0,0"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "57") (term "0") (ifseqformula "2"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "63"))
                  (rule "concrete_or_2" (formula "1"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "62") (term "0") (ifseqformula "3"))
                  (rule "replace_known_left" (formula "1") (term "1") (ifseqformula "41"))
                  (rule "concrete_or_3" (formula "1"))
                  (rule "true_left" (formula "1"))
                  (rule "arrayLengthNotNegative" (formula "39") (term "0"))
                  (rule "applyEq" (formula "39") (term "0") (ifseqformula "40"))
                  (rule "qeq_literals" (formula "39"))
                  (rule "true_left" (formula "39"))
                  (rule "arrayLengthIsAnInt" (formula "39") (term "0"))
                  (rule "expand_inInt" (formula "39"))
                  (rule "replace_int_MIN" (formula "39") (term "0,1"))
                  (rule "replace_int_MAX" (formula "39") (term "1,0"))
                  (rule "andLeft" (formula "39"))
                  (rule "inEqSimp_commuteLeq" (formula "40"))
                  (rule "applyEq" (formula "39") (term "0") (ifseqformula "41"))
                  (rule "leq_literals" (formula "39"))
                  (rule "true_left" (formula "39"))
                  (rule "applyEq" (formula "39") (term "0") (ifseqformula "40"))
                  (rule "qeq_literals" (formula "39"))
                  (rule "true_left" (formula "39"))
                  (rule "div_axiom" (formula "66") (term "0,1,1,1") (inst "quotient=quotient_12"))
                  (rule "mul_literals" (formula "1") (term "1,1,1,1,1"))
                  (rule "qeq_literals" (formula "1") (term "0,1,1"))
                  (rule "ifthenelse_true_for" (formula "1") (term "1,1"))
                  (rule "equal_literals" (formula "1") (term "0"))
                  (rule "concrete_or_2" (formula "1"))
                  (rule "andLeft" (formula "1"))
                  (rule "andLeft" (formula "1"))
                  (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                  (rule "add_literals" (formula "3") (term "0,0,1"))
                  (rule "polySimp_addComm1" (formula "3") (term "1"))
                  (rule "add_literals" (formula "3") (term "0,1"))
                  (rule "inEqSimp_homoInEq0" (formula "2"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                  (rule "polySimp_addComm1" (formula "2") (term "0"))
                  (rule "inEqSimp_homoInEq1" (formula "3"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                  (rule "polySimp_addComm1" (formula "3") (term "0"))
                  (rule "applyEq" (formula "69") (term "0,1,1,1") (ifseqformula "1"))
                  (rule "polySimp_addComm0" (formula "69") (term "1,1"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                  (rule "polySimp_mulComm0" (formula "2") (term "1"))
                  (rule "polySimp_rightDist" (formula "2") (term "1"))
                  (rule "mul_literals" (formula "2") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                  (rule "polySimp_mulComm0" (formula "3") (term "1"))
                  (rule "polySimp_rightDist" (formula "3") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                  (rule "mul_literals" (formula "3") (term "0,1"))
                  (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "3"))
                  (rule "mul_literals" (formula "10") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "10") (term "0"))
                  (rule "add_literals" (formula "10") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                  (rule "mul_literals" (formula "10") (term "1"))
                  (rule "elimGcdGeq_antec" (formula "10") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_12") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                  (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,0"))
                  (rule "leq_literals" (formula "10") (term "0,0"))
                  (rule "concrete_or_2" (formula "10") (term "0"))
                  (rule "times_zero_1" (formula "10") (term "1,0,0,0,0,0"))
                  (rule "polySimp_addLiterals" (formula "10") (term "0,0,0,0"))
                  (rule "add_literals" (formula "10") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,0"))
                  (rule "add_literals" (formula "10") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "10") (term "1,0,0"))
                  (rule "add_literals" (formula "10") (term "0,0"))
                  (rule "leq_literals" (formula "10") (term "0"))
                  (rule "concrete_or_2" (formula "10"))
                  (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "3"))
                  (rule "polySimp_rightDist" (formula "16") (term "0,0"))
                  (rule "mul_literals" (formula "16") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "16") (term "0"))
                  (rule "polySimp_addAssoc" (formula "16") (term "0,0"))
                  (rule "add_literals" (formula "16") (term "0,0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "16"))
                  (rule "polySimp_mulLiterals" (formula "16") (term "0"))
                  (rule "polySimp_elimOne" (formula "16") (term "0"))
                  (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "9"))
                  (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                  (rule "mul_literals" (formula "2") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                  (rule "polySimp_addAssoc" (formula "2") (term "0"))
                  (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                  (rule "add_literals" (formula "2") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                  (rule "polySimp_mulComm0" (formula "2") (term "1"))
                  (rule "polySimp_rightDist" (formula "2") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                  (rule "mul_literals" (formula "2") (term "0,1"))
                  (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "19"))
                  (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                  (rule "mul_literals" (formula "3") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "3") (term "0"))
                  (rule "add_literals" (formula "3") (term "0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                  (rule "elimGcdLeq_antec" (formula "3") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_12") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                  (rule "leq_literals" (formula "3") (term "0,0"))
                  (rule "concrete_or_2" (formula "3") (term "0"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                  (rule "neg_literal" (formula "3") (term "0,0,0,0,0,0"))
                  (rule "times_zero_1" (formula "3") (term "1,0,0,0,0,0"))
                  (rule "polySimp_addLiterals" (formula "3") (term "0,0,0,0"))
                  (rule "add_literals" (formula "3") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                  (rule "add_literals" (formula "3") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "3") (term "1,0,0"))
                  (rule "add_literals" (formula "3") (term "0,0"))
                  (rule "qeq_literals" (formula "3") (term "0"))
                  (rule "concrete_or_2" (formula "3"))
                  (rule "inEqSimp_exactShadow2" (formula "4") (ifseqformula "22"))
                  (rule "greater_literals" (formula "4") (term "0"))
                  (rule "concrete_impl_1" (formula "4"))
                  (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                  (rule "mul_literals" (formula "4") (term "0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                  (rule "mul_literals" (formula "4") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0"))
                  (rule "polySimp_addAssoc" (formula "4") (term "0"))
                  (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                  (rule "add_literals" (formula "4") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                  (rule "polySimp_mulComm0" (formula "4") (term "1"))
                  (rule "polySimp_rightDist" (formula "4") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                  (rule "mul_literals" (formula "4") (term "0,1"))
                  (rule "inEqSimp_antiSymm" (formula "13") (ifseqformula "3"))
                  (rule "applyEq" (formula "14") (term "0") (ifseqformula "13"))
                  (rule "qeq_literals" (formula "14"))
                  (rule "true_left" (formula "14"))
                  (rule "applyEq" (formula "5") (term "0,1,1") (ifseqformula "13"))
                  (rule "times_zero_2" (formula "5") (term "1,1"))
                  (rule "add_zero_right" (formula "5") (term "1"))
                  (rule "applyEqRigid" (formula "2") (term "0,1,1") (ifseqformula "12"))
                  (rule "times_zero_2" (formula "2") (term "1,1"))
                  (rule "add_zero_right" (formula "2") (term "1"))
                  (rule "applyEq" (formula "18") (term "0,1,1") (ifseqformula "12"))
                  (rule "times_zero_2" (formula "18") (term "1,1"))
                  (rule "add_literals" (formula "18") (term "1"))
                  (rule "applyEq" (formula "3") (term "0") (ifseqformula "12"))
                  (rule "leq_literals" (formula "3"))
                  (rule "true_left" (formula "3"))
                  (rule "applyEqRigid" (formula "3") (term "0,1,1") (ifseqformula "11"))
                  (rule "times_zero_2" (formula "3") (term "1,1"))
                  (rule "add_zero_right" (formula "3") (term "1"))
                  (rule "applyEq" (formula "4") (term "0,1,1") (ifseqformula "11"))
                  (rule "mul_literals" (formula "4") (term "1,1"))
                  (rule "add_literals" (formula "4") (term "1"))
                  (rule "applyEqRigid" (formula "1") (term "1") (ifseqformula "11"))
                  (rule "applyEqRigid" (formula "72") (term "0,0,1,1") (ifseqformula "11"))
                  (rule "times_zero_2" (formula "72") (term "0,1,1"))
                  (rule "add_zero_left" (formula "72") (term "1,1"))
                  (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "2"))
                  (rule "leq_literals" (formula "3") (term "0"))
                  (rule "concrete_or_1" (formula "3"))
                  (rule "true_left" (formula "3"))
                  (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "18"))
                  (rule "leq_literals" (formula "3") (term "0"))
                  (rule "concrete_or_1" (formula "3"))
                  (rule "true_left" (formula "3"))
                  (rule "inEqSimp_subsumption0" (formula "15") (ifseqformula "14"))
                  (rule "leq_literals" (formula "15") (term "0"))
                  (rule "concrete_or_1" (formula "15"))
                  (rule "true_left" (formula "15"))
                  (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "13"))
                  (rule "leq_literals" (formula "2") (term "0"))
                  (rule "concrete_or_1" (formula "2"))
                  (rule "true_left" (formula "2"))
                  (rule "div_axiom" (formula "68") (term "0,1,1,0") (inst "quotient=quotient_13"))
                  (rule "equal_literals" (formula "1") (term "0"))
                  (rule "concrete_or_2" (formula "1"))
                  (rule "qeq_literals" (formula "1") (term "0,1"))
                  (rule "ifthenelse_true_for" (formula "1") (term "1"))
                  (rule "mul_literals" (formula "1") (term "1,1,1"))
                  (rule "andLeft" (formula "1"))
                  (rule "andLeft" (formula "1"))
                  (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                  (rule "polySimp_addComm1" (formula "3") (term "1"))
                  (rule "polySimp_addAssoc" (formula "3") (term "0,0,1"))
                  (rule "add_literals" (formula "3") (term "0,0,0,1"))
                  (rule "polySimp_addComm1" (formula "3") (term "0,1"))
                  (rule "add_literals" (formula "3") (term "0,0,1"))
                  (rule "inEqSimp_homoInEq0" (formula "2"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                  (rule "polySimp_addComm1" (formula "2") (term "0"))
                  (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                  (rule "inEqSimp_homoInEq1" (formula "3"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                  (rule "polySimp_addComm1" (formula "3") (term "0"))
                  (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                  (rule "applyEq" (formula "71") (term "0,1,1,0") (ifseqformula "1"))
                  (rule "polySimp_addComm1" (formula "71") (term "1,0"))
                  (rule "polySimp_addComm0" (formula "71") (term "0,1,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                  (rule "polySimp_mulComm0" (formula "2") (term "1"))
                  (rule "polySimp_rightDist" (formula "2") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                  (rule "polySimp_rightDist" (formula "2") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1"))
                  (rule "mul_literals" (formula "2") (term "0,0,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                  (rule "polySimp_mulComm0" (formula "3") (term "1"))
                  (rule "polySimp_rightDist" (formula "3") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                  (rule "polySimp_rightDist" (formula "3") (term "0,1"))
                  (rule "mul_literals" (formula "3") (term "0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1"))
                  (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "3"))
                  (rule "polySimp_rightDist" (formula "17") (term "0,0"))
                  (rule "mul_literals" (formula "17") (term "0,0,0"))
                  (rule "polySimp_addAssoc" (formula "17") (term "0"))
                  (rule "polySimp_addComm1" (formula "17") (term "0,0"))
                  (rule "polySimp_pullOutFactor2b" (formula "17") (term "0"))
                  (rule "add_literals" (formula "17") (term "1,1,0"))
                  (rule "times_zero_1" (formula "17") (term "1,0"))
                  (rule "add_zero_right" (formula "17") (term "0"))
                  (rule "polySimp_addAssoc" (formula "17") (term "0"))
                  (rule "add_literals" (formula "17") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                  (rule "mul_literals" (formula "17") (term "1"))
                  (rule "elimGcdGeq_antec" (formula "17") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_13") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                  (rule "times_zero_1" (formula "17") (term "1,0,0,0,0,1,0"))
                  (rule "leq_literals" (formula "17") (term "0,0"))
                  (rule "concrete_or_2" (formula "17") (term "0"))
                  (rule "polySimp_addLiterals" (formula "17") (term "0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0"))
                  (rule "add_literals" (formula "17") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "17") (term "0,0"))
                  (rule "add_literals" (formula "17") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "17") (term "1,0,0"))
                  (rule "add_literals" (formula "17") (term "0,0"))
                  (rule "leq_literals" (formula "17") (term "0"))
                  (rule "concrete_or_2" (formula "17"))
                  (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "10"))
                  (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                  (rule "polySimp_rightDist" (formula "2") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "2") (term "0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "2") (term "0"))
                  (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                  (rule "polySimp_pullOutFactor2b" (formula "2") (term "0"))
                  (rule "add_literals" (formula "2") (term "1,1,0"))
                  (rule "times_zero_1" (formula "2") (term "1,0"))
                  (rule "add_zero_right" (formula "2") (term "0"))
                  (rule "polySimp_addComm1" (formula "2") (term "0"))
                  (rule "add_literals" (formula "2") (term "0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                  (rule "elimGcdLeq_antec" (formula "2") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_13") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                  (rule "mul_literals" (formula "2") (term "0,1,0,0,0,0,1,0"))
                  (rule "leq_literals" (formula "2") (term "0,0"))
                  (rule "concrete_or_2" (formula "2") (term "0"))
                  (rule "times_zero_1" (formula "2") (term "1,0,0,0,0,0"))
                  (rule "neg_literal" (formula "2") (term "0,0,0,0,0,0"))
                  (rule "polySimp_addLiterals" (formula "2") (term "0,0,0,0"))
                  (rule "add_literals" (formula "2") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                  (rule "add_literals" (formula "2") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "2") (term "1,0,0"))
                  (rule "add_literals" (formula "2") (term "0,0"))
                  (rule "qeq_literals" (formula "2") (term "0"))
                  (rule "concrete_or_2" (formula "2"))
                  (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "20"))
                  (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "3") (term "0"))
                  (rule "polySimp_rightDist" (formula "3") (term "0,0,0"))
                  (rule "mul_literals" (formula "3") (term "0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0"))
                  (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                  (rule "add_literals" (formula "3") (term "0,0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                  (rule "polySimp_elimOne" (formula "3") (term "0"))
                  (rule "inEqSimp_exactShadow2" (formula "4") (ifseqformula "23"))
                  (rule "greater_literals" (formula "4") (term "0"))
                  (rule "concrete_impl_1" (formula "4"))
                  (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "4") (term "0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1,0,0"))
                  (rule "mul_literals" (formula "4") (term "0,0,1,0,0"))
                  (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "4") (term "0,0,0"))
                  (rule "mul_literals" (formula "4") (term "0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "4") (term "0"))
                  (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                  (rule "polySimp_pullOutFactor2b" (formula "4") (term "0"))
                  (rule "add_literals" (formula "4") (term "1,1,0"))
                  (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                  (rule "add_literals" (formula "4") (term "0,0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                  (rule "polySimp_elimOne" (formula "4") (term "0"))
                  (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "6"))
                  (rule "mul_literals" (formula "15") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "15") (term "0"))
                  (rule "polySimp_addAssoc" (formula "15") (term "0,0"))
                  (rule "add_literals" (formula "15") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                  (rule "polySimp_mulComm0" (formula "15") (term "1"))
                  (rule "polySimp_rightDist" (formula "15") (term "1"))
                  (rule "mul_literals" (formula "15") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "15") (term "1,1"))
                  (rule "inEqSimp_antiSymm" (formula "21") (ifseqformula "2"))
                  (rule "applyEq" (formula "4") (term "0,1,1") (ifseqformula "21"))
                  (rule "mul_literals" (formula "4") (term "1,1"))
                  (rule "add_literals" (formula "4") (term "1"))
                  (rule "applyEqRigid" (formula "3") (term "0,1,1") (ifseqformula "21"))
                  (rule "times_zero_2" (formula "3") (term "1,1"))
                  (rule "add_literals" (formula "3") (term "1"))
                  (rule "applyEqRigid" (formula "22") (term "0") (ifseqformula "21"))
                  (rule "qeq_literals" (formula "22"))
                  (rule "true_left" (formula "22"))
                  (rule "applyEq" (formula "15") (term "0,1,1") (ifseqformula "21"))
                  (rule "times_zero_2" (formula "15") (term "1,1"))
                  (rule "add_zero_right" (formula "15") (term "1"))
                  (rule "applyEq" (formula "2") (term "0") (ifseqformula "21"))
                  (rule "leq_literals" (formula "2"))
                  (rule "true_left" (formula "2"))
                  (rule "applyEq" (formula "5") (term "0,1,0,1") (ifseqformula "20"))
                  (rule "mul_literals" (formula "5") (term "1,0,1"))
                  (rule "add_literals" (formula "5") (term "0,1"))
                  (rule "applyEq" (formula "4") (term "0,1,0,1") (ifseqformula "19"))
                  (rule "times_zero_2" (formula "4") (term "1,0,1"))
                  (rule "add_zero_right" (formula "4") (term "0,1"))
                  (rule "applyEq" (formula "1") (term "1") (ifseqformula "19"))
                  (rule "applyEq" (formula "74") (term "0,0,0,1,0") (ifseqformula "19"))
                  (rule "mul_literals" (formula "74") (term "0,0,1,0"))
                  (rule "add_zero_left" (formula "74") (term "0,1,0"))
                  (rule "replace_known_left" (formula "74") (term "0") (ifseqformula "44"))
                  (rule "concrete_and_1" (formula "74"))
                  (rule "inEqSimp_geqRight" (formula "74"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1"))
                  (rule "polySimp_rightDist" (formula "1") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                  (rule "mul_literals" (formula "1") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                  (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "19"))
                  (rule "leq_literals" (formula "3") (term "0"))
                  (rule "concrete_or_1" (formula "3"))
                  (rule "true_left" (formula "3"))
                  (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "20"))
                  (rule "inEqSimp_homoInEq0" (formula "4") (term "0"))
                  (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                  (rule "mul_literals" (formula "4") (term "0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                  (rule "add_literals" (formula "4") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0"))
                  (rule "add_literals" (formula "4") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "4") (term "1,0,0"))
                  (rule "add_zero_right" (formula "4") (term "0,0"))
                  (rule "qeq_literals" (formula "4") (term "0"))
                  (rule "concrete_or_1" (formula "4"))
                  (rule "true_left" (formula "4"))
                  (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "17"))
                  (rule "leq_literals" (formula "3") (term "0"))
                  (rule "concrete_or_1" (formula "3"))
                  (rule "true_left" (formula "3"))
                  (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "15"))
                  (rule "leq_literals" (formula "11") (term "0"))
                  (rule "concrete_or_1" (formula "11"))
                  (rule "true_left" (formula "11"))
                  (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "1"))
                  (rule "polySimp_rightDist" (formula "25") (term "0,0"))
                  (rule "polySimp_mulComm0" (formula "25") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "25") (term "0"))
                  (rule "polySimp_addAssoc" (formula "25") (term "0,0"))
                  (rule "polySimp_addComm0" (formula "25") (term "0,0,0"))
                  (rule "polySimp_pullOutFactor2b" (formula "25") (term "0,0"))
                  (rule "add_literals" (formula "25") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "25") (term "1,0,0"))
                  (rule "add_zero_right" (formula "25") (term "0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "25"))
                  (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                  (rule "polySimp_elimOne" (formula "25") (term "0"))
                  (rule "inEqSimp_contradInEq0" (formula "19") (ifseqformula "25"))
                  (rule "qeq_literals" (formula "19") (term "0"))
                  (rule "concrete_and_2" (formula "19"))
                  (rule "closeFalse" (formula "19"))
               )
            )
            (branch "CUT: self.a.length >= 1542 FALSE"
               (rule "concrete_and_2" (formula "41") (term "0"))
               (rule "concrete_impl_2" (formula "41"))
               (rule "true_left" (formula "41"))
               (rule "inEqSimp_geqRight" (formula "58"))
               (rule "mul_literals" (formula "1") (term "1,0,0"))
               (rule "add_literals" (formula "1") (term "0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "1"))
               (rule "mul_literals" (formula "1") (term "1"))
               (rule "replace_known_left" (formula "41") (term "1,0") (ifseqformula "1"))
               (rule "concrete_and_3" (formula "41") (term "0"))
               (rule "inEqSimp_contradInEq0" (formula "42") (term "0") (ifseqformula "1"))
               (rule "qeq_literals" (formula "42") (term "0,0"))
               (rule "concrete_and_2" (formula "42") (term "0"))
               (rule "concrete_impl_2" (formula "42"))
               (rule "true_left" (formula "42"))
               (rule "inEqSimp_subsumption0" (formula "17") (ifseqformula "1"))
               (rule "leq_literals" (formula "17") (term "0"))
               (rule "concrete_or_1" (formula "17"))
               (rule "true_left" (formula "17"))
               (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "1"))
               (rule "polySimp_rightDist" (formula "20") (term "0,0"))
               (rule "polySimp_mulComm0" (formula "20") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "20") (term "0"))
               (rule "polySimp_addComm0" (formula "20") (term "0,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "20"))
               (rule "polySimp_mulLiterals" (formula "20") (term "0"))
               (rule "polySimp_elimOne" (formula "20") (term "0"))
               (rule "inEqSimp_subsumption0" (formula "17") (ifseqformula "20"))
               (rule "inEqSimp_homoInEq0" (formula "17") (term "0"))
               (rule "polySimp_mulComm0" (formula "17") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "17") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0"))
               (rule "mul_literals" (formula "17") (term "0,1,0,0"))
               (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0"))
               (rule "polySimp_addAssoc" (formula "17") (term "0,0"))
               (rule "polySimp_addComm1" (formula "17") (term "0,0,0"))
               (rule "add_literals" (formula "17") (term "0,0,0,0"))
               (rule "polySimp_pullOutFactor2b" (formula "17") (term "0,0"))
               (rule "add_literals" (formula "17") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "17") (term "1,0,0"))
               (rule "add_zero_right" (formula "17") (term "0,0"))
               (rule "qeq_literals" (formula "17") (term "0"))
               (rule "concrete_or_1" (formula "17"))
               (rule "true_left" (formula "17"))
               (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "19"))
               (rule "mul_literals" (formula "13") (term "0,0"))
               (rule "polySimp_addAssoc" (formula "13") (term "0"))
               (rule "add_literals" (formula "13") (term "0,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "13"))
               (rule "polySimp_mulLiterals" (formula "13") (term "0"))
               (rule "polySimp_elimOne" (formula "13") (term "0"))
               (rule "inEqSimp_subsumption0" (formula "12") (ifseqformula "13"))
               (rule "leq_literals" (formula "12") (term "0"))
               (rule "concrete_or_1" (formula "12"))
               (rule "true_left" (formula "12"))
               (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "19"))
               (rule "polySimp_rightDist" (formula "15") (term "0,0"))
               (rule "polySimp_mulAssoc" (formula "15") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "15") (term "0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "15") (term "0,0,0"))
               (rule "polySimp_elimOne" (formula "15") (term "0,0,0"))
               (rule "polySimp_addAssoc" (formula "15") (term "0"))
               (rule "polySimp_addComm1" (formula "15") (term "0,0"))
               (rule "polySimp_pullOutFactor3b" (formula "15") (term "0"))
               (rule "polySimp_mulLiterals" (formula "15") (term "1,0"))
               (rule "polySimp_addComm0" (formula "15") (term "0,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "15"))
               (rule "polySimp_mulLiterals" (formula "15") (term "0"))
               (rule "inEqSimp_subsumption2" (formula "14") (ifseqformula "15"))
               (rule "eq_and" (formula "14") (term "0,0"))
               (rule "greater_literals" (formula "14") (term "0,0"))
               (rule "concrete_and_1" (formula "14") (term "0"))
               (rule "polySimp_rightDist" (formula "14") (term "0,0"))
               (rule "mul_literals" (formula "14") (term "0,0,0"))
               (rule "polySimp_rightDist" (formula "14") (term "1,0"))
               (rule "mul_literals" (formula "14") (term "0,1,0"))
               (rule "inEqSimp_homoInEq0" (formula "14") (term "0"))
               (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "14") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0"))
               (rule "mul_literals" (formula "14") (term "0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "14") (term "0,0"))
               (rule "polySimp_addComm1" (formula "14") (term "0,0,0"))
               (rule "add_literals" (formula "14") (term "0,0,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,0"))
               (rule "add_literals" (formula "14") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "14") (term "1,0,0"))
               (rule "add_zero_right" (formula "14") (term "0,0"))
               (rule "qeq_literals" (formula "14") (term "0"))
               (rule "concrete_or_1" (formula "14"))
               (rule "true_left" (formula "14"))
               (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "12"))
               (rule "polySimp_rightDist" (formula "11") (term "0,0"))
               (rule "mul_literals" (formula "11") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "11") (term "0"))
               (rule "add_literals" (formula "11") (term "0,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "11"))
               (rule "polySimp_mulLiterals" (formula "11") (term "0"))
               (rule "polySimp_elimOne" (formula "11") (term "0"))
               (rule "inEqSimp_subsumption0" (formula "10") (ifseqformula "11"))
               (rule "leq_literals" (formula "10") (term "0"))
               (rule "concrete_or_1" (formula "10"))
               (rule "true_left" (formula "10"))
               (rule "inEqSimp_exactShadow2" (formula "6") (ifseqformula "14"))
               (rule "mul_literals" (formula "6") (term "1,0,0,1"))
               (rule "greater_literals" (formula "6") (term "0"))
               (rule "concrete_impl_1" (formula "6"))
               (rule "mul_literals" (formula "6") (term "0,0"))
               (rule "polySimp_addAssoc" (formula "6") (term "0"))
               (rule "add_literals" (formula "6") (term "0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "6"))
               (rule "mul_literals" (formula "6") (term "1"))
               (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "10"))
               (rule "leq_literals" (formula "6") (term "0"))
               (rule "concrete_or_1" (formula "6"))
               (rule "true_left" (formula "6"))
               (rule "inEqSimp_exactShadow2" (formula "11") (ifseqformula "14"))
               (rule "greater_literals" (formula "11") (term "0"))
               (rule "concrete_impl_1" (formula "11"))
               (rule "polySimp_rightDist" (formula "11") (term "1,0,0"))
               (rule "mul_literals" (formula "11") (term "0,1,0,0"))
               (rule "polySimp_rightDist" (formula "11") (term "0,0"))
               (rule "mul_literals" (formula "11") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0"))
               (rule "polySimp_addAssoc" (formula "11") (term "0"))
               (rule "polySimp_addComm1" (formula "11") (term "0,0"))
               (rule "add_literals" (formula "11") (term "0,0,0"))
               (rule "polySimp_pullOutFactor2b" (formula "11") (term "0"))
               (rule "add_literals" (formula "11") (term "1,1,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "11"))
               (rule "polySimp_mulLiterals" (formula "11") (term "0"))
               (rule "polySimp_elimOne" (formula "11") (term "0"))
               (rule "arrayLengthNotNegative" (formula "38") (term "1"))
               (rule "arrayLengthIsAnInt" (formula "38") (term "1"))
               (rule "expand_inInt" (formula "38"))
               (rule "replace_int_MAX" (formula "38") (term "1,0"))
               (rule "replace_int_MIN" (formula "38") (term "0,1"))
               (rule "andLeft" (formula "38"))
               (rule "inEqSimp_commuteLeq" (formula "38"))
               (rule "inEqSimp_subsumption1" (formula "38") (ifseqformula "44"))
               (rule "leq_literals" (formula "38") (term "0"))
               (rule "concrete_or_1" (formula "38"))
               (rule "true_left" (formula "38"))
               (rule "cut_direct" (formula "39") (term "0"))
               (branch "CUT: self.a.length <= 119 TRUE"
                  (rule "concrete_impl_1" (formula "40"))
                  (rule "applyEq" (formula "44") (term "0") (ifseqformula "40"))
                  (rule "qeq_literals" (formula "44"))
                  (rule "true_left" (formula "44"))
                  (rule "applyEq" (formula "37") (term "0") (ifseqformula "40"))
                  (rule "leq_literals" (formula "37"))
                  (rule "true_left" (formula "37"))
                  (rule "applyEq" (formula "44") (term "1") (ifseqformula "39"))
                  (rule "applyEq" (formula "40") (term "0,1") (ifseqformula "39"))
                  (rule "equal_literals" (formula "40") (term "1"))
                  (rule "concrete_impl_3" (formula "40"))
                  (rule "notLeft" (formula "40"))
                  (rule "inEqSimp_geqRight" (formula "55"))
                  (rule "mul_literals" (formula "1") (term "1,0,0"))
                  (rule "add_literals" (formula "1") (term "0,0"))
                  (rule "applyEq" (formula "38") (term "1") (ifseqformula "40"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                  (rule "mul_literals" (formula "1") (term "1"))
                  (rule "inEqSimp_subsumption0" (formula "1") (ifseqformula "38"))
                  (rule "leq_literals" (formula "1") (term "0"))
                  (rule "concrete_or_1" (formula "1"))
                  (rule "true_left" (formula "1"))
                  (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "37"))
                  (rule "polySimp_rightDist" (formula "19") (term "0,0"))
                  (rule "polySimp_mulComm0" (formula "19") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "19") (term "0"))
                  (rule "polySimp_addComm0" (formula "19") (term "0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "19"))
                  (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                  (rule "polySimp_elimOne" (formula "19") (term "0"))
                  (rule "inEqSimp_subsumption0" (formula "18") (ifseqformula "19"))
                  (rule "inEqSimp_homoInEq0" (formula "18") (term "0"))
                  (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "18") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "18") (term "0,1,0,0"))
                  (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "18") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "18") (term "0,0,0"))
                  (rule "add_literals" (formula "18") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor2b" (formula "18") (term "0,0"))
                  (rule "add_literals" (formula "18") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "18") (term "1,0,0"))
                  (rule "add_zero_right" (formula "18") (term "0,0"))
                  (rule "qeq_literals" (formula "18") (term "0"))
                  (rule "concrete_or_1" (formula "18"))
                  (rule "true_left" (formula "18"))
                  (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "18"))
                  (rule "mul_literals" (formula "12") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "12") (term "0"))
                  (rule "add_literals" (formula "12") (term "0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "12"))
                  (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                  (rule "polySimp_elimOne" (formula "12") (term "0"))
                  (rule "inEqSimp_subsumption0" (formula "11") (ifseqformula "12"))
                  (rule "leq_literals" (formula "11") (term "0"))
                  (rule "concrete_or_1" (formula "11"))
                  (rule "true_left" (formula "11"))
                  (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "18"))
                  (rule "polySimp_rightDist" (formula "14") (term "0,0"))
                  (rule "polySimp_mulAssoc" (formula "14") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "14") (term "0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "14") (term "0,0,0"))
                  (rule "polySimp_elimOne" (formula "14") (term "0,0,0"))
                  (rule "polySimp_addAssoc" (formula "14") (term "0"))
                  (rule "polySimp_addComm1" (formula "14") (term "0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "14") (term "0"))
                  (rule "add_literals" (formula "14") (term "1,1,0"))
                  (rule "polySimp_addComm0" (formula "14") (term "0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "14"))
                  (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                  (rule "inEqSimp_subsumption2" (formula "13") (ifseqformula "14"))
                  (rule "eq_and" (formula "13") (term "0,0"))
                  (rule "greater_literals" (formula "13") (term "0,0"))
                  (rule "concrete_and_1" (formula "13") (term "0"))
                  (rule "polySimp_rightDist" (formula "13") (term "0,0"))
                  (rule "mul_literals" (formula "13") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "13") (term "1,0"))
                  (rule "mul_literals" (formula "13") (term "0,1,0"))
                  (rule "inEqSimp_homoInEq0" (formula "13") (term "0"))
                  (rule "polySimp_mulComm0" (formula "13") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "13") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "13") (term "0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "13") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "13") (term "0,0,0"))
                  (rule "add_literals" (formula "13") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,0"))
                  (rule "add_literals" (formula "13") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "13") (term "1,0,0"))
                  (rule "add_zero_right" (formula "13") (term "0,0"))
                  (rule "qeq_literals" (formula "13") (term "0"))
                  (rule "concrete_or_1" (formula "13"))
                  (rule "true_left" (formula "13"))
                  (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "11"))
                  (rule "polySimp_rightDist" (formula "10") (term "0,0"))
                  (rule "mul_literals" (formula "10") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "10") (term "0"))
                  (rule "add_literals" (formula "10") (term "0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "10"))
                  (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                  (rule "polySimp_elimOne" (formula "10") (term "0"))
                  (rule "inEqSimp_subsumption0" (formula "9") (ifseqformula "10"))
                  (rule "leq_literals" (formula "9") (term "0"))
                  (rule "concrete_or_1" (formula "9"))
                  (rule "true_left" (formula "9"))
                  (rule "inEqSimp_exactShadow2" (formula "5") (ifseqformula "13"))
                  (rule "greater_literals" (formula "5") (term "0"))
                  (rule "concrete_impl_1" (formula "5"))
                  (rule "mul_literals" (formula "5") (term "1,0,0"))
                  (rule "mul_literals" (formula "5") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "5") (term "0"))
                  (rule "add_literals" (formula "5") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                  (rule "mul_literals" (formula "5") (term "1"))
                  (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "9"))
                  (rule "leq_literals" (formula "5") (term "0"))
                  (rule "concrete_or_1" (formula "5"))
                  (rule "true_left" (formula "5"))
                  (rule "inEqSimp_exactShadow2" (formula "10") (ifseqformula "13"))
                  (rule "greater_literals" (formula "10") (term "0"))
                  (rule "concrete_impl_1" (formula "10"))
                  (rule "polySimp_rightDist" (formula "10") (term "1,0,0"))
                  (rule "mul_literals" (formula "10") (term "0,1,0,0"))
                  (rule "polySimp_rightDist" (formula "10") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0"))
                  (rule "mul_literals" (formula "10") (term "0,0,0"))
                  (rule "polySimp_addAssoc" (formula "10") (term "0"))
                  (rule "polySimp_addComm1" (formula "10") (term "0,0"))
                  (rule "add_literals" (formula "10") (term "0,0,0"))
                  (rule "polySimp_pullOutFactor2b" (formula "10") (term "0"))
                  (rule "add_literals" (formula "10") (term "1,1,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "10"))
                  (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                  (rule "polySimp_elimOne" (formula "10") (term "0"))
                  (rule "commute_and" (formula "65"))
                  (rule "commute_or_2" (formula "43") (term "0"))
                  (rule "commute_or_2" (formula "21") (term "0"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "32") (term "0") (ifseqformula "29"))
                  (rule "applyEq" (formula "32") (term "1,0,1") (ifseqformula "33"))
                  (rule "replace_known_left" (formula "32") (term "1") (ifseqformula "31"))
                  (rule "concrete_or_3" (formula "32"))
                  (rule "true_left" (formula "32"))
                  (rule "commute_or" (formula "43") (term "0,0"))
                  (rule "commute_or" (formula "21") (term "0,0"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "36") (term "0,0") (ifseqformula "1"))
                  (rule "replace_known_right" (formula "36") (term "0") (ifseqformula "63"))
                  (rule "concrete_or_2" (formula "36"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "62") (term "0") (ifseqformula "1"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "63"))
                  (rule "concrete_or_2" (formula "1"))
                  (rule "div_axiom" (formula "66") (term "0,1,1,0") (inst "quotient=quotient_10"))
                  (rule "qeq_literals" (formula "1") (term "0,1,1"))
                  (rule "ifthenelse_true_for" (formula "1") (term "1,1"))
                  (rule "equal_literals" (formula "1") (term "0"))
                  (rule "concrete_or_2" (formula "1"))
                  (rule "mul_literals" (formula "1") (term "1,1,1"))
                  (rule "andLeft" (formula "1"))
                  (rule "andLeft" (formula "1"))
                  (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                  (rule "polySimp_addComm1" (formula "3") (term "1"))
                  (rule "polySimp_addAssoc" (formula "3") (term "0,0,1"))
                  (rule "add_literals" (formula "3") (term "0,0,0,1"))
                  (rule "polySimp_addComm1" (formula "3") (term "0,1"))
                  (rule "add_literals" (formula "3") (term "0,0,1"))
                  (rule "inEqSimp_homoInEq0" (formula "2"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                  (rule "polySimp_addComm1" (formula "2") (term "0"))
                  (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                  (rule "inEqSimp_homoInEq1" (formula "3"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                  (rule "polySimp_addComm1" (formula "3") (term "0"))
                  (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                  (rule "applyEq" (formula "69") (term "0,1,1,0") (ifseqformula "1"))
                  (rule "polySimp_addComm1" (formula "69") (term "1,0"))
                  (rule "polySimp_addComm0" (formula "69") (term "0,1,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                  (rule "polySimp_mulComm0" (formula "2") (term "1"))
                  (rule "polySimp_rightDist" (formula "2") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                  (rule "polySimp_rightDist" (formula "2") (term "0,1"))
                  (rule "mul_literals" (formula "2") (term "0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                  (rule "polySimp_mulComm0" (formula "3") (term "1"))
                  (rule "polySimp_rightDist" (formula "3") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                  (rule "polySimp_rightDist" (formula "3") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1"))
                  (rule "mul_literals" (formula "3") (term "0,0,1"))
                  (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "3"))
                  (rule "mul_literals" (formula "8") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "8") (term "0"))
                  (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                  (rule "add_literals" (formula "8") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                  (rule "polySimp_mulComm0" (formula "8") (term "1"))
                  (rule "polySimp_rightDist" (formula "8") (term "1"))
                  (rule "mul_literals" (formula "8") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                  (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "3"))
                  (rule "polySimp_rightDist" (formula "14") (term "0,0"))
                  (rule "mul_literals" (formula "14") (term "0,0,0"))
                  (rule "polySimp_addAssoc" (formula "14") (term "0"))
                  (rule "polySimp_addComm1" (formula "14") (term "0,0"))
                  (rule "polySimp_pullOutFactor2b" (formula "14") (term "0"))
                  (rule "add_literals" (formula "14") (term "1,1,0"))
                  (rule "times_zero_1" (formula "14") (term "1,0"))
                  (rule "add_zero_right" (formula "14") (term "0"))
                  (rule "polySimp_addAssoc" (formula "14") (term "0"))
                  (rule "add_literals" (formula "14") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                  (rule "mul_literals" (formula "14") (term "1"))
                  (rule "elimGcdGeq_antec" (formula "14") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_10") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                  (rule "leq_literals" (formula "14") (term "0,0"))
                  (rule "concrete_or_2" (formula "14") (term "0"))
                  (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0"))
                  (rule "times_zero_1" (formula "14") (term "1,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "14") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "14") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,0"))
                  (rule "add_literals" (formula "14") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "14") (term "1,0,0"))
                  (rule "add_literals" (formula "14") (term "0,0"))
                  (rule "leq_literals" (formula "14") (term "0"))
                  (rule "concrete_or_2" (formula "14"))
                  (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "16"))
                  (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "2") (term "0"))
                  (rule "polySimp_rightDist" (formula "2") (term "0,0,0"))
                  (rule "mul_literals" (formula "2") (term "0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0"))
                  (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                  (rule "add_literals" (formula "2") (term "0,0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                  (rule "polySimp_elimOne" (formula "2") (term "0"))
                  (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "8"))
                  (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                  (rule "polySimp_rightDist" (formula "3") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "3") (term "0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "3") (term "0"))
                  (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                  (rule "polySimp_pullOutFactor2b" (formula "3") (term "0"))
                  (rule "add_literals" (formula "3") (term "1,1,0"))
                  (rule "times_zero_1" (formula "3") (term "1,0"))
                  (rule "add_zero_right" (formula "3") (term "0"))
                  (rule "polySimp_addComm1" (formula "3") (term "0"))
                  (rule "add_literals" (formula "3") (term "0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                  (rule "elimGcdLeq_antec" (formula "3") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_10") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,0"))
                  (rule "neg_literal" (formula "3") (term "0,0,0,0,0,1,0"))
                  (rule "leq_literals" (formula "3") (term "0,0"))
                  (rule "concrete_or_2" (formula "3") (term "0"))
                  (rule "times_zero_1" (formula "3") (term "1,0,0,0,0,0"))
                  (rule "polySimp_addLiterals" (formula "3") (term "0,0,0,0"))
                  (rule "add_literals" (formula "3") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                  (rule "add_literals" (formula "3") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "3") (term "1,0,0"))
                  (rule "add_literals" (formula "3") (term "0,0"))
                  (rule "qeq_literals" (formula "3") (term "0"))
                  (rule "concrete_or_2" (formula "3"))
                  (rule "inEqSimp_exactShadow2" (formula "4") (ifseqformula "20"))
                  (rule "greater_literals" (formula "4") (term "0"))
                  (rule "concrete_impl_1" (formula "4"))
                  (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "4") (term "0,1,0,0"))
                  (rule "mul_literals" (formula "4") (term "0,0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1,0,0"))
                  (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "4") (term "0,0,0"))
                  (rule "mul_literals" (formula "4") (term "0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "4") (term "0"))
                  (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                  (rule "polySimp_pullOutFactor2b" (formula "4") (term "0"))
                  (rule "add_literals" (formula "4") (term "1,1,0"))
                  (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                  (rule "add_literals" (formula "4") (term "0,0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                  (rule "polySimp_elimOne" (formula "4") (term "0"))
                  (rule "inEqSimp_antiSymm" (formula "17") (ifseqformula "3"))
                  (rule "applyEq" (formula "3") (term "0") (ifseqformula "17"))
                  (rule "leq_literals" (formula "3"))
                  (rule "true_left" (formula "3"))
                  (rule "applyEqRigid" (formula "2") (term "0,1,1") (ifseqformula "16"))
                  (rule "times_zero_2" (formula "2") (term "1,1"))
                  (rule "add_literals" (formula "2") (term "1"))
                  (rule "applyEq" (formula "3") (term "0,1,1") (ifseqformula "16"))
                  (rule "mul_literals" (formula "3") (term "1,1"))
                  (rule "add_literals" (formula "3") (term "1"))
                  (rule "applyEqRigid" (formula "17") (term "0") (ifseqformula "16"))
                  (rule "qeq_literals" (formula "17"))
                  (rule "true_left" (formula "17"))
                  (rule "applyEqRigid" (formula "10") (term "0,1,1") (ifseqformula "16"))
                  (rule "times_zero_2" (formula "10") (term "1,1"))
                  (rule "add_zero_right" (formula "10") (term "1"))
                  (rule "applyEqRigid" (formula "4") (term "0,1,0,1") (ifseqformula "16"))
                  (rule "times_zero_2" (formula "4") (term "1,0,1"))
                  (rule "add_zero_right" (formula "4") (term "0,1"))
                  (rule "applyEq" (formula "5") (term "0,1,0,1") (ifseqformula "16"))
                  (rule "mul_literals" (formula "5") (term "1,0,1"))
                  (rule "add_literals" (formula "5") (term "0,1"))
                  (rule "applyEqRigid" (formula "1") (term "1") (ifseqformula "15"))
                  (rule "applyEq" (formula "72") (term "0,0,0,1,0") (ifseqformula "15"))
                  (rule "times_zero_2" (formula "72") (term "0,0,1,0"))
                  (rule "add_zero_left" (formula "72") (term "0,1,0"))
                  (rule "replace_known_left" (formula "72") (term "0") (ifseqformula "41"))
                  (rule "concrete_and_1" (formula "72"))
                  (rule "inEqSimp_geqRight" (formula "72"))
                  (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                  (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1"))
                  (rule "polySimp_rightDist" (formula "1") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                  (rule "polySimp_rightDist" (formula "1") (term "0,1"))
                  (rule "mul_literals" (formula "1") (term "0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1"))
                  (rule "polySimp_elimOne" (formula "1") (term "1,0,1"))
                  (rule "inEqSimp_subsumption0" (formula "4") (ifseqformula "15"))
                  (rule "leq_literals" (formula "4") (term "0"))
                  (rule "concrete_or_1" (formula "4"))
                  (rule "true_left" (formula "4"))
                  (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "14"))
                  (rule "leq_literals" (formula "3") (term "0"))
                  (rule "concrete_or_1" (formula "3"))
                  (rule "true_left" (formula "3"))
                  (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "15"))
                  (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                  (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                  (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                  (rule "add_literals" (formula "3") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0"))
                  (rule "add_literals" (formula "3") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "3") (term "1,0,0"))
                  (rule "add_zero_right" (formula "3") (term "0,0"))
                  (rule "qeq_literals" (formula "3") (term "0"))
                  (rule "concrete_or_1" (formula "3"))
                  (rule "true_left" (formula "3"))
                  (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "11"))
                  (rule "leq_literals" (formula "7") (term "0"))
                  (rule "concrete_or_1" (formula "7"))
                  (rule "true_left" (formula "7"))
                  (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "1"))
                  (rule "polySimp_rightDist" (formula "22") (term "0,0"))
                  (rule "polySimp_mulComm0" (formula "22") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "22") (term "0"))
                  (rule "polySimp_addAssoc" (formula "22") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "22") (term "0,0,0"))
                  (rule "polySimp_addComm0" (formula "22") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor2b" (formula "22") (term "0,0,0"))
                  (rule "add_literals" (formula "22") (term "1,1,0,0,0"))
                  (rule "times_zero_1" (formula "22") (term "1,0,0,0"))
                  (rule "add_zero_right" (formula "22") (term "0,0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "22"))
                  (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                  (rule "polySimp_elimOne" (formula "22") (term "0"))
                  (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "1"))
                  (rule "times_zero_1" (formula "19") (term "0,0"))
                  (rule "add_zero_left" (formula "19") (term "0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "19"))
                  (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                  (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "23"))
                  (rule "mul_literals" (formula "15") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "15") (term "0"))
                  (rule "add_literals" (formula "15") (term "0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "15"))
                  (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                  (rule "elimGcdLeq_antec" (formula "15") (inst "elimGcdRightDiv=Z(neglit(1(#)))") (inst "elimGcdLeftDiv=div(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))), base2),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                  (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "15") (term "1,0,1,0"))
                  (rule "leq_literals" (formula "15") (term "0,0"))
                  (rule "concrete_or_2" (formula "15") (term "0"))
                  (rule "neg_literal" (formula "15") (term "0,0,0,0,0,0"))
                  (rule "mul_literals" (formula "15") (term "1,0,0,0,0,0"))
                  (rule "polySimp_addLiterals" (formula "15") (term "0,0,0,0"))
                  (rule "add_literals" (formula "15") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "15") (term "0,0"))
                  (rule "add_literals" (formula "15") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "15") (term "1,0,0"))
                  (rule "add_zero_right" (formula "15") (term "0,0"))
                  (rule "qeq_literals" (formula "15") (term "0"))
                  (rule "concrete_or_2" (formula "15"))
                  (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "24"))
                  (rule "polySimp_rightDist" (formula "18") (term "0,0"))
                  (rule "polySimp_mulAssoc" (formula "18") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "18") (term "0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "18") (term "0,0,0"))
                  (rule "polySimp_elimOne" (formula "18") (term "0,0,0"))
                  (rule "polySimp_addAssoc" (formula "18") (term "0"))
                  (rule "polySimp_addComm1" (formula "18") (term "0,0"))
                  (rule "polySimp_addComm0" (formula "18") (term "0,0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "18"))
                  (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "68") (term "0") (ifseqformula "3"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "69"))
                  (rule "concrete_or_2" (formula "1"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "36") (term "0,0") (ifseqformula "4"))
                  (rule "replace_known_right" (formula "36") (term "0") (ifseqformula "66"))
                  (rule "concrete_or_2" (formula "36"))
                  (rule "div_axiom" (formula "2") (term "0,1,1") (inst "quotient=quotient_11"))
                  (rule "mul_literals" (formula "2") (term "1,1,1,1,1"))
                  (rule "equal_literals" (formula "2") (term "0"))
                  (rule "concrete_or_2" (formula "2"))
                  (rule "qeq_literals" (formula "2") (term "0,1"))
                  (rule "ifthenelse_true_for" (formula "2") (term "1"))
                  (rule "andLeft" (formula "2"))
                  (rule "andLeft" (formula "2"))
                  (rule "polySimp_addAssoc" (formula "4") (term "0,1"))
                  (rule "add_literals" (formula "4") (term "0,0,1"))
                  (rule "polySimp_addComm1" (formula "4") (term "1"))
                  (rule "add_literals" (formula "4") (term "0,1"))
                  (rule "inEqSimp_homoInEq0" (formula "3"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                  (rule "polySimp_addComm1" (formula "3") (term "0"))
                  (rule "inEqSimp_homoInEq1" (formula "4"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
                  (rule "polySimp_addComm1" (formula "4") (term "0"))
                  (rule "applyEq" (formula "25") (term "0,0") (ifseqformula "2"))
                  (rule "inEqSimp_homoInEq0" (formula "25"))
                  (rule "polySimp_mulLiterals" (formula "25") (term "1,0"))
                  (rule "polySimp_addComm1" (formula "25") (term "0"))
                  (rule "applyEq" (formula "5") (term "0,1,1") (ifseqformula "2"))
                  (rule "polySimp_addComm1" (formula "5") (term "1"))
                  (rule "applyEq" (formula "29") (term "0,1,1") (ifseqformula "2"))
                  (rule "applyEq" (formula "19") (term "0") (ifseqformula "2"))
                  (rule "applyEq" (formula "22") (term "0,0") (ifseqformula "2"))
                  (rule "inEqSimp_homoInEq0" (formula "22"))
                  (rule "polySimp_mulLiterals" (formula "22") (term "1,0"))
                  (rule "polySimp_addComm1" (formula "22") (term "0"))
                  (rule "polySimp_addComm1" (formula "22") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                  (rule "polySimp_mulComm0" (formula "3") (term "1"))
                  (rule "polySimp_rightDist" (formula "3") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                  (rule "mul_literals" (formula "3") (term "0,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                  (rule "polySimp_mulComm0" (formula "4") (term "1"))
                  (rule "polySimp_rightDist" (formula "4") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                  (rule "mul_literals" (formula "4") (term "0,1"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "25"))
                  (rule "polySimp_mulComm0" (formula "25") (term "1"))
                  (rule "polySimp_rightDist" (formula "25") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "25") (term "1,1"))
                  (rule "mul_literals" (formula "25") (term "0,1"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "22"))
                  (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                  (rule "polySimp_elimOne" (formula "22") (term "0"))
                  (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "25"))
                  (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                  (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                  (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                  (rule "add_literals" (formula "3") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                  (rule "add_literals" (formula "3") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "3") (term "1,0,0"))
                  (rule "add_zero_right" (formula "3") (term "0,0"))
                  (rule "qeq_literals" (formula "3") (term "0"))
                  (rule "concrete_or_1" (formula "3"))
                  (rule "true_left" (formula "3"))
                  (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "21"))
                  (rule "polySimp_rightDist" (formula "16") (term "0,0"))
                  (rule "mul_literals" (formula "16") (term "0,0,0"))
                  (rule "polySimp_addAssoc" (formula "16") (term "0"))
                  (rule "polySimp_addComm1" (formula "16") (term "0,0"))
                  (rule "polySimp_pullOutFactor2b" (formula "16") (term "0"))
                  (rule "add_literals" (formula "16") (term "1,1,0"))
                  (rule "times_zero_1" (formula "16") (term "1,0"))
                  (rule "add_zero_right" (formula "16") (term "0"))
                  (rule "polySimp_addAssoc" (formula "16") (term "0"))
                  (rule "add_literals" (formula "16") (term "0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "16"))
                  (rule "polySimp_mulLiterals" (formula "16") (term "0"))
                  (rule "inEqSimp_subsumption4" (formula "16") (ifseqformula "19"))
                  (rule "greater_literals" (formula "16") (term "0,0"))
                  (rule "concrete_and_1" (formula "16") (term "0"))
                  (rule "mul_literals" (formula "16") (term "0,0"))
                  (rule "leq_literals" (formula "16") (term "0"))
                  (rule "concrete_or_1" (formula "16"))
                  (rule "true_left" (formula "16"))
                  (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "3"))
                  (rule "mul_literals" (formula "10") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "10") (term "0"))
                  (rule "add_literals" (formula "10") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                  (rule "mul_literals" (formula "10") (term "1"))
                  (rule "inEqSimp_contradInEq3" (formula "10") (ifseqformula "19"))
                  (rule "greater_literals" (formula "10") (term "0,0"))
                  (rule "concrete_impl_1" (formula "10") (term "0"))
                  (rule "mul_literals" (formula "10") (term "0,0"))
                  (rule "qeq_literals" (formula "10") (term "0"))
                  (rule "concrete_and_2" (formula "10"))
                  (rule "closeFalse" (formula "10"))
               )
               (branch "CUT: self.a.length <= 119 FALSE"
                  (rule "concrete_impl_2" (formula "39"))
                  (rule "true_left" (formula "39"))
                  (rule "inEqSimp_leqRight" (formula "56"))
                  (rule "mul_literals" (formula "1") (term "1,0,0"))
                  (rule "add_literals" (formula "1") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                  (rule "mul_literals" (formula "1") (term "1"))
                  (rule "replace_known_left" (formula "40") (term "0") (ifseqformula "1"))
                  (rule "concrete_impl_1" (formula "40"))
                  (rule "applyEq" (formula "45") (term "1") (ifseqformula "40"))
                  (rule "applyEq" (formula "38") (term "0") (ifseqformula "40"))
                  (rule "leq_literals" (formula "38"))
                  (rule "true_left" (formula "38"))
                  (rule "applyEq" (formula "42") (term "0") (ifseqformula "39"))
                  (rule "qeq_literals" (formula "42"))
                  (rule "true_left" (formula "42"))
                  (rule "applyEq" (formula "38") (term "1") (ifseqformula "39"))
                  (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "1"))
                  (rule "leq_literals" (formula "18") (term "0"))
                  (rule "concrete_or_1" (formula "18"))
                  (rule "true_left" (formula "18"))
                  (rule "commute_and" (formula "65"))
                  (rule "commute_or_2" (formula "43") (term "0"))
                  (rule "commute_or_2" (formula "22") (term "0"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "33") (term "0") (ifseqformula "30"))
                  (rule "applyEq" (formula "33") (term "0,0") (ifseqformula "34"))
                  (rule "replace_known_right" (formula "33") (term "0") (ifseqformula "64"))
                  (rule "concrete_or_2" (formula "33"))
                  (rule "applyEq" (formula "33") (term "1,0") (ifseqformula "34"))
                  (rule "commute_or" (formula "43") (term "0,0"))
                  (rule "commute_or" (formula "22") (term "0,0"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "37") (term "0,0") (ifseqformula "3"))
                  (rule "replace_known_right" (formula "37") (term "0") (ifseqformula "63"))
                  (rule "concrete_or_2" (formula "37"))
                  (rule "div_axiom" (formula "66") (term "0,1,1,1") (inst "quotient=quotient_8"))
                  (rule "qeq_literals" (formula "1") (term "0,1,1"))
                  (rule "ifthenelse_true_for" (formula "1") (term "1,1"))
                  (rule "equal_literals" (formula "1") (term "0"))
                  (rule "concrete_or_2" (formula "1"))
                  (rule "mul_literals" (formula "1") (term "1,1,1"))
                  (rule "andLeft" (formula "1"))
                  (rule "andLeft" (formula "1"))
                  (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                  (rule "add_literals" (formula "3") (term "0,0,1"))
                  (rule "polySimp_addComm1" (formula "3") (term "1"))
                  (rule "add_literals" (formula "3") (term "0,1"))
                  (rule "inEqSimp_homoInEq0" (formula "2"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                  (rule "polySimp_addComm1" (formula "2") (term "0"))
                  (rule "inEqSimp_homoInEq1" (formula "3"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                  (rule "polySimp_addComm1" (formula "3") (term "0"))
                  (rule "applyEq" (formula "69") (term "0,1,1,1") (ifseqformula "1"))
                  (rule "polySimp_addComm0" (formula "69") (term "1,1"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                  (rule "polySimp_mulComm0" (formula "2") (term "1"))
                  (rule "polySimp_rightDist" (formula "2") (term "1"))
                  (rule "mul_literals" (formula "2") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                  (rule "polySimp_mulComm0" (formula "3") (term "1"))
                  (rule "polySimp_rightDist" (formula "3") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                  (rule "mul_literals" (formula "3") (term "0,1"))
                  (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "9"))
                  (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                  (rule "mul_literals" (formula "2") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                  (rule "polySimp_addAssoc" (formula "2") (term "0"))
                  (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                  (rule "add_literals" (formula "2") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                  (rule "polySimp_mulComm0" (formula "2") (term "1"))
                  (rule "polySimp_rightDist" (formula "2") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                  (rule "mul_literals" (formula "2") (term "0,1"))
                  (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "17"))
                  (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                  (rule "mul_literals" (formula "3") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "3") (term "0"))
                  (rule "add_literals" (formula "3") (term "0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                  (rule "elimGcdLeq_antec" (formula "3") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_8") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                  (rule "leq_literals" (formula "3") (term "0,0"))
                  (rule "concrete_or_2" (formula "3") (term "0"))
                  (rule "neg_literal" (formula "3") (term "0,0,0,0,0,0"))
                  (rule "times_zero_1" (formula "3") (term "1,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                  (rule "add_zero_right" (formula "3") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "3") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                  (rule "add_literals" (formula "3") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "3") (term "1,0,0"))
                  (rule "add_literals" (formula "3") (term "0,0"))
                  (rule "qeq_literals" (formula "3") (term "0"))
                  (rule "concrete_or_2" (formula "3"))
                  (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "5"))
                  (rule "mul_literals" (formula "12") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "12") (term "0"))
                  (rule "add_literals" (formula "12") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                  (rule "mul_literals" (formula "12") (term "1"))
                  (rule "elimGcdGeq_antec" (formula "12") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_8") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                  (rule "times_zero_1" (formula "12") (term "1,0,0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,0"))
                  (rule "leq_literals" (formula "12") (term "0,0"))
                  (rule "concrete_or_2" (formula "12") (term "0"))
                  (rule "polySimp_addLiterals" (formula "12") (term "0,0,0,0"))
                  (rule "add_literals" (formula "12") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,0"))
                  (rule "add_literals" (formula "12") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "12") (term "1,0,0"))
                  (rule "add_literals" (formula "12") (term "0,0"))
                  (rule "leq_literals" (formula "12") (term "0"))
                  (rule "concrete_or_2" (formula "12"))
                  (rule "inEqSimp_exactShadow2" (formula "4") (ifseqformula "21"))
                  (rule "greater_literals" (formula "4") (term "0"))
                  (rule "concrete_impl_1" (formula "4"))
                  (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "4") (term "0,1,0,0"))
                  (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0"))
                  (rule "mul_literals" (formula "4") (term "0,0,0"))
                  (rule "polySimp_addAssoc" (formula "4") (term "0"))
                  (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                  (rule "add_literals" (formula "4") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                  (rule "polySimp_mulComm0" (formula "4") (term "1"))
                  (rule "polySimp_rightDist" (formula "4") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                  (rule "mul_literals" (formula "4") (term "0,1"))
                  (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "6"))
                  (rule "polySimp_rightDist" (formula "19") (term "0,0"))
                  (rule "mul_literals" (formula "19") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "19") (term "0"))
                  (rule "polySimp_addAssoc" (formula "19") (term "0,0"))
                  (rule "add_literals" (formula "19") (term "0,0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "19"))
                  (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                  (rule "polySimp_elimOne" (formula "19") (term "0"))
                  (rule "inEqSimp_antiSymm" (formula "13") (ifseqformula "3"))
                  (rule "applyEqRigid" (formula "20") (term "0,1,1") (ifseqformula "13"))
                  (rule "times_zero_2" (formula "20") (term "1,1"))
                  (rule "add_literals" (formula "20") (term "1"))
                  (rule "applyEq" (formula "3") (term "0") (ifseqformula "13"))
                  (rule "leq_literals" (formula "3"))
                  (rule "true_left" (formula "3"))
                  (rule "applyEqRigid" (formula "5") (term "0,1,1") (ifseqformula "12"))
                  (rule "mul_literals" (formula "5") (term "1,1"))
                  (rule "add_literals" (formula "5") (term "1"))
                  (rule "applyEqRigid" (formula "13") (term "0") (ifseqformula "12"))
                  (rule "qeq_literals" (formula "13"))
                  (rule "true_left" (formula "13"))
                  (rule "applyEq" (formula "3") (term "0,1,1") (ifseqformula "12"))
                  (rule "mul_literals" (formula "3") (term "1,1"))
                  (rule "add_zero_right" (formula "3") (term "1"))
                  (rule "applyEq" (formula "2") (term "0,1,1") (ifseqformula "12"))
                  (rule "times_zero_2" (formula "2") (term "1,1"))
                  (rule "add_zero_right" (formula "2") (term "1"))
                  (rule "applyEq" (formula "4") (term "0,1,1") (ifseqformula "12"))
                  (rule "times_zero_2" (formula "4") (term "1,1"))
                  (rule "add_zero_right" (formula "4") (term "1"))
                  (rule "applyEqRigid" (formula "72") (term "0,0,1,1") (ifseqformula "11"))
                  (rule "mul_literals" (formula "72") (term "0,1,1"))
                  (rule "add_zero_left" (formula "72") (term "1,1"))
                  (rule "applyEq" (formula "1") (term "1") (ifseqformula "11"))
                  (rule "inEqSimp_subsumption0" (formula "17") (ifseqformula "16"))
                  (rule "leq_literals" (formula "17") (term "0"))
                  (rule "concrete_or_1" (formula "17"))
                  (rule "true_left" (formula "17"))
                  (rule "inEqSimp_subsumption0" (formula "4") (ifseqformula "18"))
                  (rule "leq_literals" (formula "4") (term "0"))
                  (rule "concrete_or_1" (formula "4"))
                  (rule "true_left" (formula "4"))
                  (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "2"))
                  (rule "leq_literals" (formula "3") (term "0"))
                  (rule "concrete_or_1" (formula "3"))
                  (rule "true_left" (formula "3"))
                  (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "13"))
                  (rule "leq_literals" (formula "2") (term "0"))
                  (rule "concrete_or_1" (formula "2"))
                  (rule "true_left" (formula "2"))
                  (rule "div_axiom" (formula "68") (term "0,1,1,0") (inst "quotient=quotient_9"))
                  (rule "equal_literals" (formula "1") (term "0"))
                  (rule "concrete_or_2" (formula "1"))
                  (rule "qeq_literals" (formula "1") (term "0,1"))
                  (rule "ifthenelse_true_for" (formula "1") (term "1"))
                  (rule "mul_literals" (formula "1") (term "1,1,1"))
                  (rule "andLeft" (formula "1"))
                  (rule "andLeft" (formula "1"))
                  (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                  (rule "polySimp_addComm1" (formula "3") (term "1"))
                  (rule "polySimp_addAssoc" (formula "3") (term "0,0,1"))
                  (rule "add_literals" (formula "3") (term "0,0,0,1"))
                  (rule "polySimp_addComm1" (formula "3") (term "0,1"))
                  (rule "add_literals" (formula "3") (term "0,0,1"))
                  (rule "inEqSimp_homoInEq0" (formula "2"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                  (rule "polySimp_addComm1" (formula "2") (term "0"))
                  (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                  (rule "inEqSimp_homoInEq1" (formula "3"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                  (rule "polySimp_addComm1" (formula "3") (term "0"))
                  (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                  (rule "applyEq" (formula "71") (term "0,1,1,0") (ifseqformula "1"))
                  (rule "polySimp_addComm1" (formula "71") (term "1,0"))
                  (rule "polySimp_addComm0" (formula "71") (term "0,1,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                  (rule "polySimp_mulComm0" (formula "2") (term "1"))
                  (rule "polySimp_rightDist" (formula "2") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                  (rule "polySimp_rightDist" (formula "2") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1"))
                  (rule "mul_literals" (formula "2") (term "0,0,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                  (rule "polySimp_mulComm0" (formula "3") (term "1"))
                  (rule "polySimp_rightDist" (formula "3") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                  (rule "polySimp_rightDist" (formula "3") (term "0,1"))
                  (rule "mul_literals" (formula "3") (term "0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1"))
                  (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "10"))
                  (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                  (rule "polySimp_rightDist" (formula "2") (term "0,0,0"))
                  (rule "mul_literals" (formula "2") (term "0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "2") (term "0"))
                  (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                  (rule "polySimp_pullOutFactor2b" (formula "2") (term "0"))
                  (rule "add_literals" (formula "2") (term "1,1,0"))
                  (rule "times_zero_1" (formula "2") (term "1,0"))
                  (rule "add_zero_right" (formula "2") (term "0"))
                  (rule "polySimp_addComm1" (formula "2") (term "0"))
                  (rule "add_literals" (formula "2") (term "0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                  (rule "elimGcdLeq_antec" (formula "2") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_9") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                  (rule "neg_literal" (formula "2") (term "0,0,0,0,0,1,0"))
                  (rule "leq_literals" (formula "2") (term "0,0"))
                  (rule "concrete_or_2" (formula "2") (term "0"))
                  (rule "times_zero_1" (formula "2") (term "1,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "2") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "2") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                  (rule "add_literals" (formula "2") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "2") (term "1,0,0"))
                  (rule "add_literals" (formula "2") (term "0,0"))
                  (rule "qeq_literals" (formula "2") (term "0"))
                  (rule "concrete_or_2" (formula "2"))
                  (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "19"))
                  (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "3") (term "0"))
                  (rule "polySimp_rightDist" (formula "3") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "3") (term "0,0,0,0"))
                  (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                  (rule "add_literals" (formula "3") (term "0,0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                  (rule "polySimp_elimOne" (formula "3") (term "0"))
                  (rule "inEqSimp_exactShadow2" (formula "4") (ifseqformula "22"))
                  (rule "greater_literals" (formula "4") (term "0"))
                  (rule "concrete_impl_1" (formula "4"))
                  (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "4") (term "0,1,0,0"))
                  (rule "mul_literals" (formula "4") (term "0,0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1,0,0"))
                  (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "4") (term "0,0,0"))
                  (rule "mul_literals" (formula "4") (term "0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "4") (term "0"))
                  (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                  (rule "polySimp_pullOutFactor2b" (formula "4") (term "0"))
                  (rule "add_literals" (formula "4") (term "1,1,0"))
                  (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                  (rule "add_literals" (formula "4") (term "0,0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                  (rule "polySimp_elimOne" (formula "4") (term "0"))
                  (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "6"))
                  (rule "mul_literals" (formula "15") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "15") (term "0"))
                  (rule "polySimp_addAssoc" (formula "15") (term "0,0"))
                  (rule "add_literals" (formula "15") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                  (rule "polySimp_mulComm0" (formula "15") (term "1"))
                  (rule "polySimp_rightDist" (formula "15") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "15") (term "1,1"))
                  (rule "mul_literals" (formula "15") (term "0,1"))
                  (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "6"))
                  (rule "polySimp_rightDist" (formula "21") (term "0,0"))
                  (rule "mul_literals" (formula "21") (term "0,0,0"))
                  (rule "polySimp_addAssoc" (formula "21") (term "0"))
                  (rule "polySimp_addComm1" (formula "21") (term "0,0"))
                  (rule "polySimp_pullOutFactor2b" (formula "21") (term "0"))
                  (rule "add_literals" (formula "21") (term "1,1,0"))
                  (rule "times_zero_1" (formula "21") (term "1,0"))
                  (rule "add_zero_right" (formula "21") (term "0"))
                  (rule "polySimp_addAssoc" (formula "21") (term "0"))
                  (rule "add_literals" (formula "21") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "21"))
                  (rule "mul_literals" (formula "21") (term "1"))
                  (rule "elimGcdGeq_antec" (formula "21") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_9") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                  (rule "leq_literals" (formula "21") (term "0,0"))
                  (rule "concrete_or_2" (formula "21") (term "0"))
                  (rule "times_zero_1" (formula "21") (term "1,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0"))
                  (rule "add_zero_right" (formula "21") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "21") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "21") (term "0,0"))
                  (rule "add_literals" (formula "21") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "21") (term "1,0,0"))
                  (rule "add_literals" (formula "21") (term "0,0"))
                  (rule "leq_literals" (formula "21") (term "0"))
                  (rule "concrete_or_2" (formula "21"))
                  (rule "inEqSimp_antiSymm" (formula "21") (ifseqformula "2"))
                  (rule "applyEqRigid" (formula "3") (term "0,1,1") (ifseqformula "21"))
                  (rule "times_zero_2" (formula "3") (term "1,1"))
                  (rule "add_literals" (formula "3") (term "1"))
                  (rule "applyEqRigid" (formula "15") (term "0,1,1") (ifseqformula "21"))
                  (rule "times_zero_2" (formula "15") (term "1,1"))
                  (rule "add_zero_right" (formula "15") (term "1"))
                  (rule "applyEqRigid" (formula "22") (term "0") (ifseqformula "21"))
                  (rule "qeq_literals" (formula "22"))
                  (rule "true_left" (formula "22"))
                  (rule "applyEqRigid" (formula "4") (term "0,1,1") (ifseqformula "21"))
                  (rule "times_zero_2" (formula "4") (term "1,1"))
                  (rule "add_zero_right" (formula "4") (term "1"))
                  (rule "applyEqRigid" (formula "2") (term "0") (ifseqformula "21"))
                  (rule "leq_literals" (formula "2"))
                  (rule "true_left" (formula "2"))
                  (rule "applyEq" (formula "1") (term "1") (ifseqformula "20"))
                  (rule "applyEq" (formula "4") (term "0,1,0,1") (ifseqformula "20"))
                  (rule "times_zero_2" (formula "4") (term "1,0,1"))
                  (rule "add_zero_right" (formula "4") (term "0,1"))
                  (rule "applyEq" (formula "5") (term "0,1,0,1") (ifseqformula "20"))
                  (rule "times_zero_2" (formula "5") (term "1,0,1"))
                  (rule "add_zero_right" (formula "5") (term "0,1"))
                  (rule "applyEqRigid" (formula "74") (term "0,0,0,1,0") (ifseqformula "19"))
                  (rule "mul_literals" (formula "74") (term "0,0,1,0"))
                  (rule "add_zero_left" (formula "74") (term "0,1,0"))
                  (rule "replace_known_left" (formula "74") (term "0") (ifseqformula "44"))
                  (rule "concrete_and_1" (formula "74"))
                  (rule "inEqSimp_geqRight" (formula "74"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1"))
                  (rule "polySimp_rightDist" (formula "1") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                  (rule "mul_literals" (formula "1") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                  (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "19"))
                  (rule "leq_literals" (formula "3") (term "0"))
                  (rule "concrete_or_1" (formula "3"))
                  (rule "true_left" (formula "3"))
                  (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "17"))
                  (rule "leq_literals" (formula "13") (term "0"))
                  (rule "concrete_or_1" (formula "13"))
                  (rule "true_left" (formula "13"))
                  (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "19"))
                  (rule "inEqSimp_homoInEq0" (formula "4") (term "0"))
                  (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                  (rule "mul_literals" (formula "4") (term "0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                  (rule "add_literals" (formula "4") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0"))
                  (rule "add_literals" (formula "4") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "4") (term "1,0,0"))
                  (rule "add_zero_right" (formula "4") (term "0,0"))
                  (rule "qeq_literals" (formula "4") (term "0"))
                  (rule "concrete_or_1" (formula "4"))
                  (rule "true_left" (formula "4"))
                  (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "16"))
                  (rule "leq_literals" (formula "3") (term "0"))
                  (rule "concrete_or_1" (formula "3"))
                  (rule "true_left" (formula "3"))
                  (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "1"))
                  (rule "mul_literals" (formula "4") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "4") (term "0"))
                  (rule "add_literals" (formula "4") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                  (rule "mul_literals" (formula "4") (term "1"))
                  (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "4"))
                  (rule "leq_literals" (formula "12") (term "0"))
                  (rule "concrete_or_1" (formula "12"))
                  (rule "true_left" (formula "12"))
                  (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "1"))
                  (rule "polySimp_rightDist" (formula "25") (term "0,0"))
                  (rule "polySimp_mulComm0" (formula "25") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "25") (term "0"))
                  (rule "polySimp_addAssoc" (formula "25") (term "0,0"))
                  (rule "polySimp_addComm0" (formula "25") (term "0,0,0"))
                  (rule "polySimp_pullOutFactor2b" (formula "25") (term "0,0"))
                  (rule "add_literals" (formula "25") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "25") (term "1,0,0"))
                  (rule "add_zero_right" (formula "25") (term "0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "25"))
                  (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                  (rule "polySimp_elimOne" (formula "25") (term "0"))
                  (rule "inEqSimp_subsumption0" (formula "12") (ifseqformula "25"))
                  (rule "leq_literals" (formula "12") (term "0"))
                  (rule "concrete_or_1" (formula "12"))
                  (rule "true_left" (formula "12"))
                  (rule "inEqSimp_contradInEq0" (formula "18") (ifseqformula "24"))
                  (rule "qeq_literals" (formula "18") (term "0"))
                  (rule "concrete_and_2" (formula "18"))
                  (rule "closeFalse" (formula "18"))
               )
            )
         )
         (branch "self.runBase.<created> = TRUE FALSE"
            (rule "referencedObjectIsCreatedRight" (formula "58") (ifseqformula "66"))
            (rule "close" (formula "58") (ifseqformula "1"))
         )
      )
   )
)
(branch "Exceptional Post (ensureCapacity)"
   (rule "false_to_not_true" (formula "22") (term "0,1,1,0,0,0,1,1,1,1,1"))
   (rule "simplifyUpdate2" (formula "22"))
   (rule "eqSymm" (formula "22") (term "0,0,0,0,0,1,1,1,1,1"))
   (rule "eqSymm" (formula "22") (term "0,0,1,0,0,0,1,1,1,1,1"))
   (rule "sequentialToParallel2" (formula "24"))
   (rule "simplifyUpdate3" (formula "24") (term "1,0"))
   (rule "sequentialToParallel2" (formula "22"))
   (rule "simplifyUpdate3" (formula "22") (term "1,0"))
   (rule "andLeft" (formula "22"))
   (rule "simplifyUpdate2" (formula "22"))
   (rule "sequentialToParallel2" (formula "23"))
   (rule "simplifyUpdate3" (formula "23") (term "1,0"))
   (rule "andLeft" (formula "23"))
   (rule "simplifyUpdate2" (formula "23"))
   (rule "andLeft" (formula "24"))
   (rule "simplifyUpdate2" (formula "25"))
   (rule "andLeft" (formula "23"))
   (rule "simplifyUpdate2" (formula "23"))
   (rule "andLeft" (formula "25"))
   (rule "simplifyUpdate2" (formula "26"))
   (rule "notLeft" (formula "23"))
   (rule "close" (formula "27") (ifseqformula "26"))
)
(branch "Pre (ensureCapacity)"
   (rule "simplifyUpdate2" (formula "22"))
   (rule "expand_inInt" (formula "22") (term "1,1,1,1"))
   (rule "replace_int_MIN" (formula "22") (term "0,1,1,1,1,1"))
   (rule "replace_int_MAX" (formula "22") (term "1,0,1,1,1,1"))
   (rule "simplifyUpdate2" (formula "22") (term "1"))
   (rule "translateJavaDivInt" (formula "22") (term "0,1,0,0,1"))
   (rule "applyOnRigidFormula" (formula "22"))
   (rule "applyOnRigidFormula" (formula "22") (term "0"))
   (rule "simplifyUpdate2" (formula "22") (term "1,0"))
   (rule "replace_known_left" (formula "22") (term "1,0") (ifseqformula "20"))
   (rule "concrete_and_3" (formula "22") (term "0"))
   (rule "applyOnRigidFormula" (formula "22") (term "1"))
   (rule "simplifyUpdate2" (formula "22") (term "0,1"))
   (rule "replace_known_left" (formula "22") (term "0,1") (ifseqformula "1"))
   (rule "concrete_and_1" (formula "22") (term "1"))
   (rule "applyOnRigidFormula" (formula "22") (term "0"))
   (rule "applyOnRigidFormula" (formula "22") (term "1"))
   (rule "applyOnRigidFormula" (formula "22") (term "0,0"))
   (rule "applyOnPV" (formula "22") (term "0,0,0"))
   (rule "simplifyUpdate1" (formula "22") (term "1,0,0"))
   (rule "applyOnRigidFormula" (formula "22") (term "1,0"))
   (rule "applyOnPV" (formula "22") (term "1,1,0"))
   (rule "simplifyUpdate1" (formula "22") (term "0,1,0"))
   (rule "applyOnRigidFormula" (formula "22") (term "0,1"))
   (rule "simplifyUpdate1" (formula "22") (term "1,0,1"))
   (rule "applyOnPV" (formula "22") (term "0,0,1"))
   (rule "applyOnRigidFormula" (formula "22") (term "1,1"))
   (rule "applyOnPV" (formula "22") (term "1,1,1"))
   (rule "simplifyUpdate1" (formula "22") (term "0,1,1"))
   (rule "inEqSimp_homoInEq0" (formula "22") (term "0,1"))
   (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1"))
   (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1"))
   (rule "polySimp_mulAssoc" (formula "22") (term "0,1,0,0,1"))
   (rule "polySimp_mulComm0" (formula "22") (term "0,0,1,0,0,1"))
   (rule "polySimp_mulLiterals" (formula "22") (term "0,1,0,0,1"))
   (rule "polySimp_elimOne" (formula "22") (term "0,1,0,0,1"))
   (rule "polySimp_addAssoc" (formula "22") (term "0,0,1"))
   (rule "inEqSimp_homoInEq0" (formula "22") (term "1,1"))
   (rule "mul_literals" (formula "22") (term "1,0,1,1"))
   (rule "polySimp_addComm1" (formula "22") (term "0,1,1"))
   (rule "polySimp_addComm0" (formula "22") (term "0,0,1,1"))
   (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "0,0"))
   (rule "polySimp_mulLiterals" (formula "22") (term "1,0,0"))
   (rule "polySimp_elimOne" (formula "22") (term "1,0,0"))
   (rule "inEqSimp_sepNegMonomial1" (formula "22") (term "0,1"))
   (rule "polySimp_mulLiterals" (formula "22") (term "0,0,1"))
   (rule "polySimp_elimOne" (formula "22") (term "0,0,1"))
   (rule "replace_known_left" (formula "22") (term "0,1") (ifseqformula "4"))
   (rule "concrete_and_1" (formula "22") (term "1"))
   (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "1"))
   (rule "polySimp_mulComm0" (formula "22") (term "1,1"))
   (rule "polySimp_rightDist" (formula "22") (term "1,1"))
   (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1"))
   (rule "mul_literals" (formula "22") (term "0,1,1"))
   (rule "polySimp_elimOne" (formula "22") (term "1,1,1"))
   (rule "inEqSimp_subsumption1" (formula "22") (term "0,0") (ifseqformula "10"))
   (rule "inEqSimp_homoInEq0" (formula "22") (term "0,0,0"))
   (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,0,0"))
   (rule "add_literals" (formula "22") (term "1,1,0,0,0,0"))
   (rule "times_zero_1" (formula "22") (term "1,0,0,0,0"))
   (rule "add_zero_right" (formula "22") (term "0,0,0,0"))
   (rule "qeq_literals" (formula "22") (term "0,0,0"))
   (rule "concrete_or_1" (formula "22") (term "0,0"))
   (rule "concrete_and_1" (formula "22") (term "0"))
   (rule "inEqSimp_subsumption1" (formula "22") (term "1") (ifseqformula "10"))
   (rule "inEqSimp_homoInEq0" (formula "22") (term "0,1"))
   (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1"))
   (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1"))
   (rule "mul_literals" (formula "22") (term "0,1,0,0,1"))
   (rule "polySimp_addAssoc" (formula "22") (term "0,0,1"))
   (rule "polySimp_addComm1" (formula "22") (term "0,0,0,1"))
   (rule "add_literals" (formula "22") (term "0,0,0,0,1"))
   (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,1"))
   (rule "add_literals" (formula "22") (term "1,1,0,0,1"))
   (rule "times_zero_1" (formula "22") (term "1,0,0,1"))
   (rule "add_zero_right" (formula "22") (term "0,0,1"))
   (rule "qeq_literals" (formula "22") (term "0,1"))
   (rule "concrete_or_1" (formula "22") (term "1"))
   (rule "concrete_and_3" (formula "22"))
   (rule "inEqSimp_geqRight" (formula "22"))
   (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
   (rule "polySimp_mulAssoc" (formula "1") (term "0,1,0,0"))
   (rule "polySimp_mulComm0" (formula "1") (term "0,0,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0"))
   (rule "polySimp_elimOne" (formula "1") (term "0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "1"))
   (rule "polySimp_mulComm0" (formula "1") (term "1"))
   (rule "polySimp_rightDist" (formula "1") (term "1"))
   (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
   (rule "polySimp_elimOne" (formula "1") (term "1,1"))
   (rule "polySimp_rightDist" (formula "1") (term "0,1"))
   (rule "mul_literals" (formula "1") (term "0,0,1"))
   (rule "expand_divJint" (formula "1") (term "0"))
   (rule "expand_moduloInteger" (formula "1") (term "0"))
   (rule "replace_int_MIN" (formula "1") (term "0,0"))
   (rule "replace_int_HALFRANGE" (formula "1") (term "0,0,1,0"))
   (rule "replace_int_RANGE" (formula "1") (term "1,1,0"))
   (rule "inEqSimp_homoInEq0" (formula "1"))
   (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
   (rule "polySimp_rightDist" (formula "1") (term "1,0"))
   (rule "mul_literals" (formula "1") (term "0,1,0"))
   (rule "polySimp_addAssoc" (formula "1") (term "0"))
   (rule "polySimp_addComm1" (formula "1") (term "0,0"))
   (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
   (rule "add_literals" (formula "1") (term "0,0,0,0"))
   (rule "inEqSimp_sepNegMonomial1" (formula "1"))
   (rule "polySimp_mulLiterals" (formula "1") (term "0"))
   (rule "polySimp_elimOne" (formula "1") (term "0"))
   (rule "Class_invariant_axiom_for_java_util_TimSort" (formula "21") (inst "i=i") (inst "i_0=i_0") (inst "i_1=i_1") (ifseqformula "4"))
   (rule "insert_constant_value" (formula "21") (term "0,3,1,0,0,0,1,0"))
   (rule "insert_constant_value" (formula "21") (term "0,3,1,0,0,0,0,1,0"))
   (rule "insert_constant_value" (formula "21") (term "0,3,1,0,1,0,0,0,0,0,0,1,0"))
   (rule "expand_inInt" (formula "21") (term "1,1"))
   (rule "replace_int_MAX" (formula "21") (term "1,0,1,1"))
   (rule "replace_int_MIN" (formula "21") (term "0,1,1,1"))
   (rule "andLeft" (formula "21"))
   (rule "andLeft" (formula "21"))
   (rule "andLeft" (formula "23"))
   (rule "andLeft" (formula "21"))
   (rule "andLeft" (formula "23"))
   (rule "andLeft" (formula "26"))
   (rule "notLeft" (formula "22"))
   (rule "andLeft" (formula "21"))
   (rule "andLeft" (formula "23"))
   (rule "notLeft" (formula "22"))
   (rule "notLeft" (formula "21"))
   (rule "andLeft" (formula "21"))
   (rule "andLeft" (formula "21"))
   (rule "andLeft" (formula "21"))
   (rule "andLeft" (formula "21"))
   (rule "andLeft" (formula "21"))
   (rule "andLeft" (formula "21"))
   (rule "andLeft" (formula "21"))
   (rule "andLeft" (formula "23"))
   (rule "andLeft" (formula "21"))
   (rule "andLeft" (formula "21"))
   (rule "andLeft" (formula "21"))
   (rule "andLeft" (formula "21"))
   (rule "andLeft" (formula "21"))
   (rule "notLeft" (formula "22"))
   (rule "andLeft" (formula "21"))
   (rule "notLeft" (formula "22"))
   (rule "andLeft" (formula "21"))
   (rule "notLeft" (formula "22"))
   (rule "andLeft" (formula "21"))
   (rule "notLeft" (formula "22"))
   (rule "andLeft" (formula "21"))
   (rule "andLeft" (formula "21"))
   (rule "notLeft" (formula "23"))
   (rule "notLeft" (formula "22"))
   (rule "andLeft" (formula "21"))
   (rule "notLeft" (formula "22"))
   (rule "andLeft" (formula "21"))
   (rule "notLeft" (formula "22"))
   (rule "eqSymm" (formula "35") (term "1,0"))
   (rule "translateJavaDivInt" (formula "32") (term "3"))
   (rule "translateJavaDivInt" (formula "31") (term "3"))
   (rule "translateJavaDivInt" (formula "29") (term "3,1,0"))
   (rule "eqSymm" (formula "42"))
   (rule "eqSymm" (formula "41"))
   (rule "eqSymm" (formula "40"))
   (rule "eqSymm" (formula "21"))
   (rule "eqSymm" (formula "39"))
   (rule "polySimp_elimSub" (formula "35") (term "1,1,0,0"))
   (rule "mul_literals" (formula "35") (term "1,1,1,0,0"))
   (rule "polySimp_elimSub" (formula "33") (term "2"))
   (rule "mul_literals" (formula "33") (term "1,2"))
   (rule "polySimp_elimSub" (formula "32") (term "2"))
   (rule "mul_literals" (formula "32") (term "1,2"))
   (rule "polySimp_elimSub" (formula "31") (term "2"))
   (rule "mul_literals" (formula "31") (term "1,2"))
   (rule "polySimp_elimSub" (formula "30") (term "2"))
   (rule "mul_literals" (formula "30") (term "1,2"))
   (rule "polySimp_elimSub" (formula "29") (term "1,1,0,0"))
   (rule "mul_literals" (formula "29") (term "1,1,1,0,0"))
   (rule "polySimp_addComm0" (formula "35") (term "0,2,0,1,0"))
   (rule "polySimp_addComm0" (formula "35") (term "1,1,0,0"))
   (rule "polySimp_addComm0" (formula "33") (term "2"))
   (rule "polySimp_addComm0" (formula "32") (term "2"))
   (rule "polySimp_addComm0" (formula "31") (term "2"))
   (rule "polySimp_addComm0" (formula "30") (term "2"))
   (rule "polySimp_addComm0" (formula "29") (term "1,1,0,0"))
   (rule "sortsDisjointModuloNull" (formula "45"))
   (rule "replace_known_right" (formula "45") (term "1") (ifseqformula "48"))
   (rule "concrete_and_4" (formula "45"))
   (rule "false_right" (formula "45"))
   (rule "sortsDisjointModuloNull" (formula "44"))
   (rule "replace_known_right" (formula "44") (term "1") (ifseqformula "48"))
   (rule "concrete_and_4" (formula "44"))
   (rule "false_right" (formula "44"))
   (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0"))
   (rule "mul_literals" (formula "24") (term "1,0,0,1,0"))
   (rule "add_literals" (formula "24") (term "0,0,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0"))
   (rule "mul_literals" (formula "23") (term "1,0,0,1,0"))
   (rule "add_literals" (formula "23") (term "0,0,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "22") (term "0"))
   (rule "mul_literals" (formula "22") (term "1,0,0,0"))
   (rule "add_literals" (formula "22") (term "0,0,0"))
   (rule "sortsDisjointModuloNull" (formula "41"))
   (rule "replace_known_right" (formula "41") (term "1") (ifseqformula "43"))
   (rule "concrete_and_4" (formula "41"))
   (rule "false_right" (formula "41"))
   (rule "sortsDisjointModuloNull" (formula "40"))
   (rule "replace_known_right" (formula "40") (term "1") (ifseqformula "42"))
   (rule "concrete_and_4" (formula "40"))
   (rule "false_right" (formula "40"))
   (rule "inEqSimp_commuteLeq" (formula "35") (term "0,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "38"))
   (rule "inEqSimp_commuteLeq" (formula "29") (term "0,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "27"))
   (rule "inEqSimp_ltToLeq" (formula "35") (term "1,0,0"))
   (rule "polySimp_rightDist" (formula "35") (term "1,0,0,1,0,0"))
   (rule "mul_literals" (formula "35") (term "0,1,0,0,1,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "29") (term "1,0,0"))
   (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,0,0"))
   (rule "mul_literals" (formula "29") (term "0,1,0,0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "35") (term "0,0,1,0,0"))
   (rule "add_literals" (formula "35") (term "0,0,0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,0,0"))
   (rule "add_literals" (formula "29") (term "0,0,0,1,0,0"))
   (rule "inEqSimp_homoInEq0" (formula "26"))
   (rule "polySimp_mulComm0" (formula "26") (term "1,0"))
   (rule "polySimp_rightDist" (formula "26") (term "1,0"))
   (rule "polySimp_mulComm0" (formula "26") (term "0,1,0"))
   (rule "polySimp_addAssoc" (formula "26") (term "0"))
   (rule "applyEq" (formula "25") (term "0,1") (ifseqformula "21"))
   (rule "applyEq" (formula "28") (term "1") (ifseqformula "21"))
   (rule "applyEq" (formula "24") (term "0,1") (ifseqformula "21"))
   (rule "applyEq" (formula "23") (term "0,1") (ifseqformula "21"))
   (rule "applyEq" (formula "22") (term "0,1") (ifseqformula "21"))
   (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0"))
   (rule "mul_literals" (formula "24") (term "1,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0"))
   (rule "mul_literals" (formula "23") (term "1,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0"))
   (rule "mul_literals" (formula "22") (term "1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "35") (term "1,1,0,0"))
   (rule "polySimp_rightDist" (formula "35") (term "1,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1,0,0"))
   (rule "mul_literals" (formula "35") (term "0,1,1,0,0"))
   (rule "polySimp_elimOne" (formula "35") (term "1,1,1,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "29") (term "1,1,0,0"))
   (rule "polySimp_rightDist" (formula "29") (term "1,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0,0"))
   (rule "mul_literals" (formula "29") (term "0,1,1,0,0"))
   (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0,0"))
   (rule "inEqSimp_sepNegMonomial1" (formula "26"))
   (rule "polySimp_mulLiterals" (formula "26") (term "0"))
   (rule "polySimp_elimOne" (formula "26") (term "0"))
   (rule "inEqSimp_exactShadow3" (formula "27") (ifseqformula "28"))
   (rule "mul_literals" (formula "27") (term "0,0"))
   (rule "add_zero_left" (formula "27") (term "0"))
   (rule "expand_divJint" (formula "33") (term "3"))
   (rule "jdiv_axiom_inline" (formula "33") (term "0,3"))
   (rule "div_literals" (formula "33") (term "1,0,3"))
   (rule "qeq_literals" (formula "33") (term "0,0,3"))
   (rule "ifthenelse_true" (formula "33") (term "0,3"))
   (rule "expand_divJint" (formula "32") (term "3"))
   (rule "jdiv_axiom_inline" (formula "32") (term "0,3"))
   (rule "div_literals" (formula "32") (term "1,0,3"))
   (rule "qeq_literals" (formula "32") (term "0,0,3"))
   (rule "ifthenelse_true" (formula "32") (term "0,3"))
   (rule "expand_divJint" (formula "30") (term "3,1,0"))
   (rule "jdiv_axiom_inline" (formula "30") (term "0,3,1,0"))
   (rule "mul_literals" (formula "30") (term "0,0,2,0,3,1,0"))
   (rule "div_literals" (formula "30") (term "1,0,3,1,0"))
   (rule "qeq_literals" (formula "30") (term "0,0,3,1,0"))
   (rule "ifthenelse_true" (formula "30") (term "0,3,1,0"))
   (rule "nnf_imp2or" (formula "36") (term "0"))
   (rule "expand_moduloInteger" (formula "33") (term "3"))
   (rule "replace_int_HALFRANGE" (formula "33") (term "0,0,1,3"))
   (rule "replace_int_RANGE" (formula "33") (term "1,1,3"))
   (rule "replace_int_MIN" (formula "33") (term "0,3"))
   (rule "add_literals" (formula "33") (term "0,1,3"))
   (rule "mod_axiom" (formula "33") (term "1,3"))
   (rule "polySimp_mulLiterals" (formula "33") (term "1,1,3"))
   (rule "div_literals" (formula "33") (term "0,1,1,3"))
   (rule "mul_literals" (formula "33") (term "1,1,3"))
   (rule "add_literals" (formula "33") (term "1,3"))
   (rule "add_literals" (formula "33") (term "3"))
   (rule "expand_moduloInteger" (formula "32") (term "3"))
   (rule "replace_int_HALFRANGE" (formula "32") (term "0,0,1,3"))
   (rule "replace_int_MIN" (formula "32") (term "0,3"))
   (rule "replace_int_RANGE" (formula "32") (term "1,1,3"))
   (rule "add_literals" (formula "32") (term "0,1,3"))
   (rule "mod_axiom" (formula "32") (term "1,3"))
   (rule "polySimp_mulLiterals" (formula "32") (term "1,1,3"))
   (rule "div_literals" (formula "32") (term "0,1,1,3"))
   (rule "mul_literals" (formula "32") (term "1,1,3"))
   (rule "add_literals" (formula "32") (term "1,3"))
   (rule "add_literals" (formula "32") (term "3"))
   (rule "expand_moduloInteger" (formula "30") (term "3,1,0"))
   (rule "replace_int_HALFRANGE" (formula "30") (term "0,0,1,3,1,0"))
   (rule "replace_int_RANGE" (formula "30") (term "1,1,3,1,0"))
   (rule "replace_int_MIN" (formula "30") (term "0,3,1,0"))
   (rule "add_literals" (formula "30") (term "0,1,3,1,0"))
   (rule "mod_axiom" (formula "30") (term "1,3,1,0"))
   (rule "div_literals" (formula "30") (term "0,0,1,1,3,1,0"))
   (rule "times_zero_2" (formula "30") (term "0,1,1,3,1,0"))
   (rule "times_zero_2" (formula "30") (term "1,1,3,1,0"))
   (rule "add_zero_right" (formula "30") (term "1,3,1,0"))
   (rule "add_literals" (formula "30") (term "3,1,0"))
   (rule "nnf_notAnd" (formula "36") (term "0,0"))
   (rule "inEqSimp_notLeq" (formula "36") (term "1,0,0"))
   (rule "polySimp_rightDist" (formula "36") (term "1,0,0,1,0,0"))
   (rule "mul_literals" (formula "36") (term "0,1,0,0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "36") (term "0,0,1,0,0"))
   (rule "add_literals" (formula "36") (term "0,0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "36") (term "1,1,0,0"))
   (rule "polySimp_rightDist" (formula "36") (term "1,1,0,0"))
   (rule "mul_literals" (formula "36") (term "0,1,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0,0"))
   (rule "polySimp_elimOne" (formula "36") (term "1,1,1,0,0"))
   (rule "inEqSimp_notGeq" (formula "36") (term "0,0,0"))
   (rule "times_zero_1" (formula "36") (term "1,0,0,0,0,0"))
   (rule "add_literals" (formula "36") (term "0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "0,0,0"))
   (rule "mul_literals" (formula "36") (term "1,0,0,0"))
   (rule "nnf_imp2or" (formula "30") (term "0"))
   (rule "nnf_notAnd" (formula "30") (term "0,0"))
   (rule "inEqSimp_notLeq" (formula "30") (term "1,0,0"))
   (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0"))
   (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0"))
   (rule "add_literals" (formula "30") (term "0,0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0"))
   (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0"))
   (rule "mul_literals" (formula "30") (term "0,1,1,0,0"))
   (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0"))
   (rule "inEqSimp_notGeq" (formula "30") (term "0,0,0"))
   (rule "times_zero_1" (formula "30") (term "1,0,0,0,0,0"))
   (rule "add_zero_right" (formula "30") (term "0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0"))
   (rule "mul_literals" (formula "30") (term "1,0,0,0"))
   (rule "onlyCreatedObjectsAreReferenced" (formula "20") (term "0,0") (ifseqformula "2"))
   (rule "replace_known_right" (formula "20") (term "0") (ifseqformula "43"))
   (rule "concrete_or_2" (formula "20"))
   (rule "jdiv_axiom" (formula "1") (term "1,0,0"))
   (rule "eqSymm" (formula "1"))
   (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "20"))
   (rule "ifthenelse_true" (formula "1") (term "0"))
   (rule "eqSymm" (formula "1"))
   (rule "applyEq" (formula "2") (term "1,0,0") (ifseqformula "1"))
   (rule "commute_or_2" (formula "32") (term "0"))
   (rule "commute_or" (formula "32") (term "0,0"))
   (rule "cut_direct" (formula "25") (term "0,0"))
   (branch "CUT: self.a.length >= 120 TRUE"
      (rule "concrete_and_1" (formula "26") (term "0"))
      (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "25"))
      (rule "leq_literals" (formula "20") (term "0"))
      (rule "concrete_or_1" (formula "20"))
      (rule "true_left" (formula "20"))
      (rule "inEqSimp_contradInEq1" (formula "23") (term "0") (ifseqformula "24"))
      (rule "qeq_literals" (formula "23") (term "0,0"))
      (rule "concrete_and_2" (formula "23") (term "0"))
      (rule "concrete_impl_2" (formula "23"))
      (rule "true_left" (formula "23"))
      (rule "cut_direct" (formula "25") (term "0,0"))
      (branch "CUT: self.a.length >= 1542 TRUE"
         (rule "concrete_and_1" (formula "26") (term "0"))
         (rule "inEqSimp_contradInEq1" (formula "24") (term "0") (ifseqformula "25"))
         (rule "qeq_literals" (formula "24") (term "0,0"))
         (rule "concrete_and_2" (formula "24") (term "0"))
         (rule "concrete_impl_2" (formula "24"))
         (rule "true_left" (formula "24"))
         (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "24"))
         (rule "leq_literals" (formula "23") (term "0"))
         (rule "concrete_or_1" (formula "23"))
         (rule "true_left" (formula "23"))
         (rule "cut_direct" (formula "25") (term "0"))
         (branch "CUT: self.a.length >= 119151 TRUE"
            (rule "concrete_impl_1" (formula "26"))
            (rule "applyEq" (formula "24") (term "0,1") (ifseqformula "26"))
            (rule "equal_literals" (formula "24") (term "1"))
            (rule "concrete_impl_3" (formula "24"))
            (rule "notLeft" (formula "24"))
            (rule "inEqSimp_leqRight" (formula "40"))
            (rule "mul_literals" (formula "1") (term "1,0,0"))
            (rule "add_literals" (formula "1") (term "0,0"))
            (rule "applyEq" (formula "30") (term "1") (ifseqformula "26"))
            (rule "applyEq" (formula "28") (term "0") (ifseqformula "26"))
            (rule "qeq_literals" (formula "28"))
            (rule "true_left" (formula "28"))
            (rule "applyEq" (formula "23") (term "1") (ifseqformula "26"))
            (rule "inEqSimp_sepPosMonomial1" (formula "1"))
            (rule "mul_literals" (formula "1") (term "1"))
            (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "24"))
            (rule "leq_literals" (formula "23") (term "0"))
            (rule "concrete_or_1" (formula "23"))
            (rule "true_left" (formula "23"))
            (rule "arrayLengthNotNegative" (formula "22") (term "0"))
            (rule "applyEq" (formula "22") (term "0") (ifseqformula "23"))
            (rule "qeq_literals" (formula "22"))
            (rule "true_left" (formula "22"))
            (rule "arrayLengthIsAnInt" (formula "22") (term "0"))
            (rule "expand_inInt" (formula "22"))
            (rule "replace_int_MIN" (formula "22") (term "0,1"))
            (rule "replace_int_MAX" (formula "22") (term "1,0"))
            (rule "andLeft" (formula "22"))
            (rule "inEqSimp_commuteLeq" (formula "23"))
            (rule "applyEq" (formula "22") (term "0") (ifseqformula "24"))
            (rule "leq_literals" (formula "22"))
            (rule "true_left" (formula "22"))
            (rule "applyEq" (formula "22") (term "0") (ifseqformula "23"))
            (rule "qeq_literals" (formula "22"))
            (rule "true_left" (formula "22"))
            (rule "div_axiom" (formula "1") (term "1") (inst "quotient=quotient_6"))
            (rule "equal_literals" (formula "1") (term "0"))
            (rule "concrete_or_2" (formula "1"))
            (rule "qeq_literals" (formula "1") (term "0,1"))
            (rule "ifthenelse_true_for" (formula "1") (term "1"))
            (rule "mul_literals" (formula "1") (term "1,1,1"))
            (rule "andLeft" (formula "1"))
            (rule "andLeft" (formula "1"))
            (rule "polySimp_addComm1" (formula "3") (term "1"))
            (rule "add_literals" (formula "3") (term "0,1"))
            (rule "inEqSimp_commuteLeq" (formula "2"))
            (rule "inEqSimp_homoInEq1" (formula "3"))
            (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
            (rule "polySimp_addComm1" (formula "3") (term "0"))
            (rule "applyEq" (formula "5") (term "1,0,0") (ifseqformula "1"))
            (rule "applyEq" (formula "4") (term "1") (ifseqformula "1"))
            (rule "mod_axiom" (formula "5") (term "0"))
            (rule "polySimp_mulLiterals" (formula "5") (term "1,0"))
            (rule "inEqSimp_homoInEq0" (formula "5"))
            (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
            (rule "polySimp_rightDist" (formula "5") (term "1,0"))
            (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0"))
            (rule "polySimp_rightDist" (formula "5") (term "0,1,0"))
            (rule "mul_literals" (formula "5") (term "0,0,1,0"))
            (rule "polySimp_addAssoc" (formula "5") (term "0"))
            (rule "polySimp_addComm1" (formula "5") (term "0,0"))
            (rule "polySimp_addComm1" (formula "5") (term "0,0,0"))
            (rule "polySimp_addAssoc" (formula "5") (term "0,0,0,0"))
            (rule "add_literals" (formula "5") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "3"))
            (rule "polySimp_mulComm0" (formula "3") (term "1"))
            (rule "polySimp_rightDist" (formula "3") (term "1"))
            (rule "mul_literals" (formula "3") (term "0,1"))
            (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
            (rule "inEqSimp_sepPosMonomial1" (formula "5"))
            (rule "polySimp_mulComm0" (formula "5") (term "1"))
            (rule "polySimp_rightDist" (formula "5") (term "1"))
            (rule "polySimp_rightDist" (formula "5") (term "0,1"))
            (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1"))
            (rule "polySimp_elimOne" (formula "5") (term "1,0,1"))
            (rule "polySimp_rightDist" (formula "5") (term "0,0,1"))
            (rule "mul_literals" (formula "5") (term "0,0,0,1"))
            (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,1"))
            (rule "polySimp_elimOne" (formula "5") (term "1,0,0,1"))
            (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "3"))
            (rule "polySimp_rightDist" (formula "24") (term "0,0"))
            (rule "polySimp_mulComm0" (formula "24") (term "0,0,0"))
            (rule "polySimp_addComm1" (formula "24") (term "0"))
            (rule "polySimp_addComm0" (formula "24") (term "0,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "24"))
            (rule "polySimp_mulLiterals" (formula "24") (term "0"))
            (rule "polySimp_elimOne" (formula "24") (term "0"))
            (rule "inEqSimp_exactShadow3" (formula "27") (ifseqformula "3"))
            (rule "mul_literals" (formula "27") (term "0,0"))
            (rule "polySimp_addAssoc" (formula "27") (term "0"))
            (rule "add_literals" (formula "27") (term "0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "27"))
            (rule "mul_literals" (formula "27") (term "1"))
            (rule "elimGcdGeq_antec" (formula "27") (inst "elimGcdRightDiv=Z(5(7(5(9(5(#))))))") (inst "elimGcdLeftDiv=quotient_6") (inst "elimGcd=Z(2(#))"))
            (rule "leq_literals" (formula "27") (term "0,0"))
            (rule "concrete_or_2" (formula "27") (term "0"))
            (rule "polySimp_mulLiterals" (formula "27") (term "1,0,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "27") (term "1,0,0"))
            (rule "mul_literals" (formula "27") (term "1,0,0,0,0,0"))
            (rule "polySimp_addLiterals" (formula "27") (term "0,0,0,0"))
            (rule "add_zero_right" (formula "27") (term "0,0,0,0"))
            (rule "polySimp_pullOutFactor0b" (formula "27") (term "0,0"))
            (rule "add_literals" (formula "27") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "27") (term "1,0,0"))
            (rule "add_zero_right" (formula "27") (term "0,0"))
            (rule "leq_literals" (formula "27") (term "0"))
            (rule "concrete_or_2" (formula "27"))
            (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "21"))
            (rule "polySimp_mulAssoc" (formula "2") (term "0,0"))
            (rule "polySimp_mulComm0" (formula "2") (term "0,0,0"))
            (rule "polySimp_mulLiterals" (formula "2") (term "0,0"))
            (rule "polySimp_addComm0" (formula "2") (term "0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "2"))
            (rule "polySimp_mulLiterals" (formula "2") (term "0"))
            (rule "elimGcdLeq_antec" (formula "2") (inst "elimGcdRightDiv=Z(3(2(8(1(4(7(3(7(0(1(#)))))))))))") (inst "elimGcdLeftDiv=quotient_6") (inst "elimGcd=Z(2(#))"))
            (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,0,1,0"))
            (rule "leq_literals" (formula "2") (term "0,0"))
            (rule "concrete_or_2" (formula "2") (term "0"))
            (rule "neg_literal" (formula "2") (term "0,0,0,0,0,0"))
            (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
            (rule "polySimp_addLiterals" (formula "2") (term "0,0,0,0"))
            (rule "add_literals" (formula "2") (term "0,0,0,0"))
            (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
            (rule "add_literals" (formula "2") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "2") (term "1,0,0"))
            (rule "add_zero_right" (formula "2") (term "0,0"))
            (rule "qeq_literals" (formula "2") (term "0"))
            (rule "concrete_or_2" (formula "2"))
            (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "25"))
            (rule "polySimp_rightDist" (formula "20") (term "0,0"))
            (rule "polySimp_mulAssoc" (formula "20") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "20") (term "0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "20") (term "0,0,0"))
            (rule "polySimp_elimOne" (formula "20") (term "0,0,0"))
            (rule "polySimp_addAssoc" (formula "20") (term "0"))
            (rule "polySimp_addComm1" (formula "20") (term "0,0"))
            (rule "polySimp_pullOutFactor0b" (formula "20") (term "0"))
            (rule "add_literals" (formula "20") (term "1,1,0"))
            (rule "polySimp_addComm0" (formula "20") (term "0,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "20"))
            (rule "polySimp_mulLiterals" (formula "20") (term "0"))
            (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "26"))
            (rule "mul_literals" (formula "18") (term "0,0"))
            (rule "polySimp_addAssoc" (formula "18") (term "0"))
            (rule "polySimp_addAssoc" (formula "18") (term "0,0"))
            (rule "add_literals" (formula "18") (term "0,0,0"))
            (rule "add_zero_left" (formula "18") (term "0,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "18"))
            (rule "polySimp_mulLiterals" (formula "18") (term "0"))
            (rule "polySimp_elimOne" (formula "18") (term "0"))
            (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "18"))
            (rule "polySimp_rightDist" (formula "16") (term "0,0"))
            (rule "mul_literals" (formula "16") (term "0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "16"))
            (rule "polySimp_mulLiterals" (formula "16") (term "0"))
            (rule "polySimp_elimOne" (formula "16") (term "0"))
            (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "19"))
            (rule "mul_literals" (formula "11") (term "0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "11"))
            (rule "mul_literals" (formula "11") (term "1"))
            (rule "inEqSimp_subsumption6" (formula "11") (ifseqformula "32"))
            (rule "mul_literals" (formula "11") (term "1,1,0"))
            (rule "greater_literals" (formula "11") (term "0,0"))
            (rule "concrete_and_1" (formula "11") (term "0"))
            (rule "leq_literals" (formula "11") (term "0"))
            (rule "concrete_or_1" (formula "11"))
            (rule "true_left" (formula "11"))
            (rule "inEqSimp_exactShadow2" (formula "17") (ifseqformula "22"))
            (rule "greater_literals" (formula "17") (term "0"))
            (rule "concrete_impl_1" (formula "17"))
            (rule "polySimp_rightDist" (formula "17") (term "1,0,0"))
            (rule "mul_literals" (formula "17") (term "0,1,0,0"))
            (rule "polySimp_rightDist" (formula "17") (term "0,0"))
            (rule "mul_literals" (formula "17") (term "0,0,0"))
            (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0"))
            (rule "polySimp_addAssoc" (formula "17") (term "0"))
            (rule "polySimp_addComm1" (formula "17") (term "0,0"))
            (rule "polySimp_pullOutFactor2b" (formula "17") (term "0"))
            (rule "add_literals" (formula "17") (term "1,1,0"))
            (rule "polySimp_addAssoc" (formula "17") (term "0,0"))
            (rule "add_literals" (formula "17") (term "0,0,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "17"))
            (rule "polySimp_mulLiterals" (formula "17") (term "0"))
            (rule "polySimp_elimOne" (formula "17") (term "0"))
            (rule "inEqSimp_exactShadow2" (formula "11") (ifseqformula "22"))
            (rule "greater_literals" (formula "11") (term "0"))
            (rule "concrete_impl_1" (formula "11"))
            (rule "mul_literals" (formula "11") (term "1,0,0"))
            (rule "mul_literals" (formula "11") (term "0,0"))
            (rule "polySimp_addAssoc" (formula "11") (term "0"))
            (rule "polySimp_addAssoc" (formula "11") (term "0,0"))
            (rule "add_literals" (formula "11") (term "0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "11"))
            (rule "polySimp_mulComm0" (formula "11") (term "1"))
            (rule "polySimp_rightDist" (formula "11") (term "1"))
            (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
            (rule "mul_literals" (formula "11") (term "0,1"))
            (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "17"))
            (rule "times_zero_1" (formula "15") (term "0,0"))
            (rule "add_zero_left" (formula "15") (term "0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "15"))
            (rule "mul_literals" (formula "15") (term "1"))
            (rule "inEqSimp_subsumption6" (formula "15") (ifseqformula "33"))
            (rule "greater_literals" (formula "15") (term "0,0"))
            (rule "concrete_and_1" (formula "15") (term "0"))
            (rule "mul_literals" (formula "15") (term "1,0"))
            (rule "leq_literals" (formula "15") (term "0"))
            (rule "concrete_or_1" (formula "15"))
            (rule "true_left" (formula "15"))
            (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "17"))
            (rule "polySimp_rightDist" (formula "11") (term "0,0"))
            (rule "mul_literals" (formula "11") (term "0,0,0"))
            (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0"))
            (rule "polySimp_addAssoc" (formula "11") (term "0"))
            (rule "polySimp_addComm1" (formula "11") (term "0,0"))
            (rule "add_literals" (formula "11") (term "0,0,0"))
            (rule "polySimp_pullOutFactor0b" (formula "11") (term "0"))
            (rule "add_literals" (formula "11") (term "1,1,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "11"))
            (rule "mul_literals" (formula "11") (term "1"))
            (rule "inEqSimp_subsumption6" (formula "11") (ifseqformula "33"))
            (rule "greater_literals" (formula "11") (term "0,0"))
            (rule "concrete_and_1" (formula "11") (term "0"))
            (rule "mul_literals" (formula "11") (term "1,0"))
            (rule "leq_literals" (formula "11") (term "0"))
            (rule "concrete_or_1" (formula "11"))
            (rule "true_left" (formula "11"))
            (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "16"))
            (rule "polySimp_rightDist" (formula "11") (term "0,0"))
            (rule "mul_literals" (formula "11") (term "0,0,0"))
            (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "11") (term "0"))
            (rule "add_literals" (formula "11") (term "0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "11"))
            (rule "mul_literals" (formula "11") (term "1"))
            (rule "inEqSimp_subsumption6" (formula "11") (ifseqformula "33"))
            (rule "greater_literals" (formula "11") (term "0,0"))
            (rule "concrete_and_1" (formula "11") (term "0"))
            (rule "mul_literals" (formula "11") (term "1,0"))
            (rule "leq_literals" (formula "11") (term "0"))
            (rule "concrete_or_1" (formula "11"))
            (rule "true_left" (formula "11"))
            (rule "div_axiom" (formula "6") (term "0,0") (inst "quotient=quotient_7"))
            (rule "mul_literals" (formula "6") (term "1,1,1,1,1"))
            (rule "qeq_literals" (formula "6") (term "0,1,1"))
            (rule "ifthenelse_true_for" (formula "6") (term "1,1"))
            (rule "equal_literals" (formula "6") (term "0"))
            (rule "concrete_or_2" (formula "6"))
            (rule "andLeft" (formula "6"))
            (rule "andLeft" (formula "6"))
            (rule "polySimp_addAssoc" (formula "8") (term "0,1"))
            (rule "add_literals" (formula "8") (term "0,0,1"))
            (rule "polySimp_addComm1" (formula "8") (term "1"))
            (rule "add_literals" (formula "8") (term "0,1"))
            (rule "inEqSimp_homoInEq0" (formula "7"))
            (rule "polySimp_mulLiterals" (formula "7") (term "1,0"))
            (rule "polySimp_addComm1" (formula "7") (term "0"))
            (rule "inEqSimp_homoInEq1" (formula "8"))
            (rule "polySimp_mulLiterals" (formula "8") (term "1,0"))
            (rule "polySimp_addComm1" (formula "8") (term "0"))
            (rule "applyEqRigid" (formula "9") (term "0,0") (ifseqformula "6"))
            (rule "inEqSimp_homoInEq1" (formula "9"))
            (rule "polySimp_mulLiterals" (formula "9") (term "1,0"))
            (rule "polySimp_addComm1" (formula "9") (term "0"))
            (rule "polySimp_addComm1" (formula "9") (term "0,0"))
            (rule "polySimp_addComm1" (formula "9") (term "0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "7"))
            (rule "polySimp_mulComm0" (formula "7") (term "1"))
            (rule "polySimp_rightDist" (formula "7") (term "1"))
            (rule "mul_literals" (formula "7") (term "0,1"))
            (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
            (rule "inEqSimp_sepPosMonomial0" (formula "8"))
            (rule "polySimp_mulComm0" (formula "8") (term "1"))
            (rule "polySimp_rightDist" (formula "8") (term "1"))
            (rule "mul_literals" (formula "8") (term "0,1"))
            (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
            (rule "inEqSimp_sepNegMonomial0" (formula "9"))
            (rule "polySimp_mulLiterals" (formula "9") (term "0"))
            (rule "polySimp_elimOne" (formula "9") (term "0"))
            (rule "inEqSimp_exactShadow3" (formula "35") (ifseqformula "8"))
            (rule "mul_literals" (formula "35") (term "0,0"))
            (rule "polySimp_addAssoc" (formula "35") (term "0"))
            (rule "add_literals" (formula "35") (term "0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "35"))
            (rule "mul_literals" (formula "35") (term "1"))
            (rule "elimGcdGeq_antec" (formula "35") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_7") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
            (rule "leq_literals" (formula "35") (term "0,0"))
            (rule "concrete_or_2" (formula "35") (term "0"))
            (rule "times_zero_1" (formula "35") (term "1,0,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "35") (term "1,0,0"))
            (rule "polySimp_addLiterals" (formula "35") (term "0,0,0,0"))
            (rule "add_literals" (formula "35") (term "0,0,0,0"))
            (rule "polySimp_pullOutFactor0b" (formula "35") (term "0,0"))
            (rule "add_literals" (formula "35") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "35") (term "1,0,0"))
            (rule "add_zero_right" (formula "35") (term "0,0"))
            (rule "leq_literals" (formula "35") (term "0"))
            (rule "concrete_or_2" (formula "35"))
            (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "2"))
            (rule "polySimp_rightDist" (formula "7") (term "0,0"))
            (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0"))
            (rule "mul_literals" (formula "7") (term "0,0,0"))
            (rule "polySimp_addComm1" (formula "7") (term "0"))
            (rule "add_literals" (formula "7") (term "0,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "7"))
            (rule "polySimp_mulLiterals" (formula "7") (term "0"))
            (rule "elimGcdLeq_antec" (formula "7") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_7") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
            (rule "neg_literal" (formula "7") (term "0,0,0,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "7") (term "1,0,1,0"))
            (rule "leq_literals" (formula "7") (term "0,0"))
            (rule "concrete_or_2" (formula "7") (term "0"))
            (rule "times_zero_1" (formula "7") (term "1,0,0,0,0,0"))
            (rule "polySimp_addLiterals" (formula "7") (term "0,0,0,0"))
            (rule "add_literals" (formula "7") (term "0,0,0,0"))
            (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0"))
            (rule "add_literals" (formula "7") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "7") (term "1,0,0"))
            (rule "add_zero_right" (formula "7") (term "0,0"))
            (rule "qeq_literals" (formula "7") (term "0"))
            (rule "concrete_or_2" (formula "7"))
            (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "14"))
            (rule "polySimp_rightDist" (formula "10") (term "0,0"))
            (rule "polySimp_rightDist" (formula "10") (term "0,0,0"))
            (rule "polySimp_rightDist" (formula "10") (term "0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0,0"))
            (rule "mul_literals" (formula "10") (term "0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "10") (term "0"))
            (rule "polySimp_addComm1" (formula "10") (term "0,0"))
            (rule "polySimp_pullOutFactor2b" (formula "10") (term "0"))
            (rule "add_literals" (formula "10") (term "1,1,0"))
            (rule "times_zero_1" (formula "10") (term "1,0"))
            (rule "add_zero_right" (formula "10") (term "0"))
            (rule "polySimp_addComm1" (formula "10") (term "0"))
            (rule "polySimp_addComm1" (formula "10") (term "0,0"))
            (rule "add_literals" (formula "10") (term "0,0,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "10"))
            (rule "polySimp_mulLiterals" (formula "10") (term "0"))
            (rule "polySimp_elimOne" (formula "10") (term "0"))
            (rule "inEqSimp_subsumption0" (formula "9") (ifseqformula "10"))
            (rule "inEqSimp_homoInEq0" (formula "9") (term "0"))
            (rule "polySimp_mulComm0" (formula "9") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "9") (term "1,0,0"))
            (rule "mul_literals" (formula "9") (term "0,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0"))
            (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
            (rule "polySimp_addComm1" (formula "9") (term "0,0,0"))
            (rule "add_literals" (formula "9") (term "0,0,0,0"))
            (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,0"))
            (rule "add_literals" (formula "9") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "9") (term "1,0,0"))
            (rule "add_zero_right" (formula "9") (term "0,0"))
            (rule "qeq_literals" (formula "9") (term "0"))
            (rule "concrete_or_1" (formula "9"))
            (rule "true_left" (formula "9"))
            (rule "inEqSimp_exactShadow2" (formula "10") (ifseqformula "26"))
            (rule "greater_literals" (formula "10") (term "0"))
            (rule "concrete_impl_1" (formula "10"))
            (rule "polySimp_rightDist" (formula "10") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "10") (term "0,1,0,0"))
            (rule "polySimp_rightDist" (formula "10") (term "0,0,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "10") (term "0,0,0,1,0,0"))
            (rule "polySimp_rightDist" (formula "10") (term "0,0"))
            (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "10") (term "0,0,0"))
            (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0"))
            (rule "polySimp_rightDist" (formula "10") (term "0,0,0,0"))
            (rule "mul_literals" (formula "10") (term "0,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "10") (term "0"))
            (rule "polySimp_addComm1" (formula "10") (term "0,0"))
            (rule "polySimp_pullOutFactor2b" (formula "10") (term "0"))
            (rule "add_literals" (formula "10") (term "1,1,0"))
            (rule "polySimp_addComm1" (formula "10") (term "0,0"))
            (rule "polySimp_addComm1" (formula "10") (term "0,0,0"))
            (rule "add_literals" (formula "10") (term "0,0,0,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "10"))
            (rule "polySimp_mulLiterals" (formula "10") (term "0"))
            (rule "polySimp_elimOne" (formula "10") (term "0"))
            (rule "inEqSimp_exactShadow2" (formula "11") (ifseqformula "28"))
            (rule "greater_literals" (formula "11") (term "0"))
            (rule "concrete_impl_1" (formula "11"))
            (rule "polySimp_rightDist" (formula "11") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "11") (term "0,1,0,0"))
            (rule "polySimp_rightDist" (formula "11") (term "0,0,1,0,0"))
            (rule "mul_literals" (formula "11") (term "0,0,0,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,1,0,0"))
            (rule "polySimp_rightDist" (formula "11") (term "0,0"))
            (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "11") (term "0,0,0"))
            (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,0"))
            (rule "polySimp_rightDist" (formula "11") (term "0,0,0,0"))
            (rule "mul_literals" (formula "11") (term "0,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "11") (term "0"))
            (rule "polySimp_addComm1" (formula "11") (term "0,0"))
            (rule "polySimp_pullOutFactor2b" (formula "11") (term "0"))
            (rule "add_literals" (formula "11") (term "1,1,0"))
            (rule "polySimp_addAssoc" (formula "11") (term "0,0"))
            (rule "polySimp_addComm1" (formula "11") (term "0,0,0"))
            (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,0"))
            (rule "add_literals" (formula "11") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "11") (term "1,0,0"))
            (rule "add_zero_right" (formula "11") (term "0,0"))
            (rule "polySimp_addComm1" (formula "11") (term "0,0"))
            (rule "add_literals" (formula "11") (term "0,0,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "11"))
            (rule "polySimp_mulLiterals" (formula "11") (term "0"))
            (rule "polySimp_elimOne" (formula "11") (term "0"))
            (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "25"))
            (rule "polySimp_rightDist" (formula "12") (term "0,0"))
            (rule "polySimp_addComm1" (formula "12") (term "0"))
            (rule "polySimp_rightDist" (formula "12") (term "0,0,0"))
            (rule "polySimp_addComm1" (formula "12") (term "0,0"))
            (rule "polySimp_rightDist" (formula "12") (term "0,0,0,0"))
            (rule "mul_literals" (formula "12") (term "0,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "12") (term "0,0,0"))
            (rule "add_literals" (formula "12") (term "0,0,0,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "12"))
            (rule "polySimp_mulLiterals" (formula "12") (term "0"))
            (rule "polySimp_elimOne" (formula "12") (term "0"))
            (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "27"))
            (rule "polySimp_rightDist" (formula "13") (term "0,0"))
            (rule "polySimp_addComm1" (formula "13") (term "0"))
            (rule "polySimp_rightDist" (formula "13") (term "0,0,0"))
            (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,0"))
            (rule "add_literals" (formula "13") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "13") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "13") (term "0,0,0"))
            (rule "mul_literals" (formula "13") (term "0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "13"))
            (rule "polySimp_mulLiterals" (formula "13") (term "0"))
            (rule "polySimp_elimOne" (formula "13") (term "0"))
            (rule "inEqSimp_antiSymm" (formula "40") (ifseqformula "7"))
            (rule "applyEq" (formula "9") (term "0,1,1") (ifseqformula "40"))
            (rule "times_zero_2" (formula "9") (term "1,1"))
            (rule "add_zero_right" (formula "9") (term "1"))
            (rule "applyEqRigid" (formula "8") (term "0,1,1") (ifseqformula "40"))
            (rule "times_zero_2" (formula "8") (term "1,1"))
            (rule "add_zero_right" (formula "8") (term "1"))
            (rule "applyEqRigid" (formula "11") (term "0,1,1") (ifseqformula "40"))
            (rule "times_zero_2" (formula "11") (term "1,1"))
            (rule "add_zero_right" (formula "11") (term "1"))
            (rule "applyEqRigid" (formula "7") (term "0") (ifseqformula "40"))
            (rule "leq_literals" (formula "7"))
            (rule "true_left" (formula "7"))
            (rule "applyEq" (formula "40") (term "0") (ifseqformula "39"))
            (rule "qeq_literals" (formula "40"))
            (rule "true_left" (formula "40"))
            (rule "applyEqRigid" (formula "11") (term "0,1,0,1") (ifseqformula "39"))
            (rule "times_zero_2" (formula "11") (term "1,0,1"))
            (rule "add_zero_right" (formula "11") (term "0,1"))
            (rule "applyEqRigid" (formula "12") (term "0,1,0,1") (ifseqformula "39"))
            (rule "times_zero_2" (formula "12") (term "1,0,1"))
            (rule "add_zero_right" (formula "12") (term "0,1"))
            (rule "applyEq" (formula "6") (term "1") (ifseqformula "39"))
            (rule "applyEqRigid" (formula "9") (term "0,1,0,1") (ifseqformula "39"))
            (rule "times_zero_2" (formula "9") (term "1,0,1"))
            (rule "add_zero_right" (formula "9") (term "0,1"))
            (rule "applyEqRigid" (formula "13") (term "0,1,0,0,1") (ifseqformula "39"))
            (rule "times_zero_2" (formula "13") (term "1,0,0,1"))
            (rule "add_zero_right" (formula "13") (term "0,0,1"))
            (rule "inEqSimp_contradInEq0" (formula "22") (ifseqformula "10"))
            (rule "qeq_literals" (formula "22") (term "0"))
            (rule "concrete_and_2" (formula "22"))
            (rule "closeFalse" (formula "22"))
         )
         (branch "CUT: self.a.length >= 119151 FALSE"
            (rule "concrete_impl_2" (formula "25"))
            (rule "true_left" (formula "25"))
            (rule "inEqSimp_geqRight" (formula "39"))
            (rule "mul_literals" (formula "1") (term "1,0,0"))
            (rule "add_literals" (formula "1") (term "0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "1"))
            (rule "mul_literals" (formula "1") (term "1"))
            (rule "replace_known_left" (formula "25") (term "0") (ifseqformula "1"))
            (rule "concrete_impl_1" (formula "25"))
            (rule "applyEq" (formula "27") (term "0") (ifseqformula "25"))
            (rule "qeq_literals" (formula "27"))
            (rule "true_left" (formula "27"))
            (rule "applyEq" (formula "28") (term "1") (ifseqformula "25"))
            (rule "applyEq" (formula "23") (term "1") (ifseqformula "25"))
            (rule "inEqSimp_subsumption0" (formula "19") (ifseqformula "1"))
            (rule "leq_literals" (formula "19") (term "0"))
            (rule "concrete_or_1" (formula "19"))
            (rule "true_left" (formula "19"))
            (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "1"))
            (rule "polySimp_rightDist" (formula "21") (term "0,0"))
            (rule "polySimp_mulComm0" (formula "21") (term "0,0,0"))
            (rule "polySimp_addComm1" (formula "21") (term "0"))
            (rule "polySimp_addComm0" (formula "21") (term "0,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "21"))
            (rule "polySimp_mulLiterals" (formula "21") (term "0"))
            (rule "polySimp_elimOne" (formula "21") (term "0"))
            (rule "inEqSimp_subsumption0" (formula "19") (ifseqformula "21"))
            (rule "inEqSimp_homoInEq0" (formula "19") (term "0"))
            (rule "polySimp_mulComm0" (formula "19") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "19") (term "1,0,0"))
            (rule "mul_literals" (formula "19") (term "0,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0"))
            (rule "polySimp_addAssoc" (formula "19") (term "0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0"))
            (rule "add_literals" (formula "19") (term "0,0,0,0"))
            (rule "polySimp_pullOutFactor2b" (formula "19") (term "0,0"))
            (rule "add_literals" (formula "19") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "19") (term "1,0,0"))
            (rule "add_zero_right" (formula "19") (term "0,0"))
            (rule "qeq_literals" (formula "19") (term "0"))
            (rule "concrete_or_1" (formula "19"))
            (rule "true_left" (formula "19"))
            (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "20"))
            (rule "polySimp_rightDist" (formula "17") (term "0,0"))
            (rule "polySimp_mulAssoc" (formula "17") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "17") (term "0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "17") (term "0,0,0"))
            (rule "polySimp_elimOne" (formula "17") (term "0,0,0"))
            (rule "polySimp_addAssoc" (formula "17") (term "0"))
            (rule "polySimp_addComm1" (formula "17") (term "0,0"))
            (rule "polySimp_pullOutFactor0b" (formula "17") (term "0"))
            (rule "add_literals" (formula "17") (term "1,1,0"))
            (rule "polySimp_addComm0" (formula "17") (term "0,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "17"))
            (rule "polySimp_mulLiterals" (formula "17") (term "0"))
            (rule "inEqSimp_subsumption2" (formula "16") (ifseqformula "17"))
            (rule "eq_and" (formula "16") (term "0,0"))
            (rule "greater_literals" (formula "16") (term "0,0"))
            (rule "concrete_and_1" (formula "16") (term "0"))
            (rule "polySimp_rightDist" (formula "16") (term "0,0"))
            (rule "mul_literals" (formula "16") (term "0,0,0"))
            (rule "polySimp_rightDist" (formula "16") (term "1,0"))
            (rule "mul_literals" (formula "16") (term "0,1,0"))
            (rule "inEqSimp_homoInEq0" (formula "16") (term "0"))
            (rule "polySimp_mulComm0" (formula "16") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "16") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0"))
            (rule "mul_literals" (formula "16") (term "0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "16") (term "0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0"))
            (rule "add_literals" (formula "16") (term "0,0,0,0"))
            (rule "polySimp_pullOutFactor0b" (formula "16") (term "0,0"))
            (rule "add_literals" (formula "16") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "16") (term "1,0,0"))
            (rule "add_zero_right" (formula "16") (term "0,0"))
            (rule "qeq_literals" (formula "16") (term "0"))
            (rule "concrete_or_1" (formula "16"))
            (rule "true_left" (formula "16"))
            (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "20"))
            (rule "mul_literals" (formula "15") (term "0,0"))
            (rule "polySimp_addAssoc" (formula "15") (term "0"))
            (rule "add_literals" (formula "15") (term "0,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "15"))
            (rule "polySimp_mulLiterals" (formula "15") (term "0"))
            (rule "polySimp_elimOne" (formula "15") (term "0"))
            (rule "inEqSimp_subsumption0" (formula "14") (ifseqformula "15"))
            (rule "leq_literals" (formula "14") (term "0"))
            (rule "concrete_or_1" (formula "14"))
            (rule "true_left" (formula "14"))
            (rule "inEqSimp_exactShadow2" (formula "13") (ifseqformula "16"))
            (rule "greater_literals" (formula "13") (term "0"))
            (rule "concrete_impl_1" (formula "13"))
            (rule "polySimp_rightDist" (formula "13") (term "1,0,0"))
            (rule "mul_literals" (formula "13") (term "0,1,0,0"))
            (rule "polySimp_rightDist" (formula "13") (term "0,0"))
            (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0"))
            (rule "mul_literals" (formula "13") (term "0,0,0"))
            (rule "polySimp_addAssoc" (formula "13") (term "0"))
            (rule "polySimp_addComm1" (formula "13") (term "0,0"))
            (rule "add_literals" (formula "13") (term "0,0,0"))
            (rule "polySimp_pullOutFactor2b" (formula "13") (term "0"))
            (rule "add_literals" (formula "13") (term "1,1,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "13"))
            (rule "polySimp_mulLiterals" (formula "13") (term "0"))
            (rule "polySimp_elimOne" (formula "13") (term "0"))
            (rule "inEqSimp_subsumption0" (formula "12") (ifseqformula "13"))
            (rule "leq_literals" (formula "12") (term "0"))
            (rule "concrete_or_1" (formula "12"))
            (rule "true_left" (formula "12"))
            (rule "inEqSimp_exactShadow2" (formula "8") (ifseqformula "16"))
            (rule "greater_literals" (formula "8") (term "0"))
            (rule "concrete_impl_1" (formula "8"))
            (rule "mul_literals" (formula "8") (term "1,0,0"))
            (rule "mul_literals" (formula "8") (term "0,0"))
            (rule "polySimp_addAssoc" (formula "8") (term "0"))
            (rule "add_literals" (formula "8") (term "0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "8"))
            (rule "mul_literals" (formula "8") (term "1"))
            (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "12"))
            (rule "leq_literals" (formula "8") (term "0"))
            (rule "concrete_or_1" (formula "8"))
            (rule "true_left" (formula "8"))
            (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "14"))
            (rule "polySimp_rightDist" (formula "13") (term "0,0"))
            (rule "mul_literals" (formula "13") (term "0,0,0"))
            (rule "polySimp_addComm1" (formula "13") (term "0"))
            (rule "add_literals" (formula "13") (term "0,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "13"))
            (rule "polySimp_mulLiterals" (formula "13") (term "0"))
            (rule "polySimp_elimOne" (formula "13") (term "0"))
            (rule "arrayLengthIsAnInt" (formula "22") (term "0"))
            (rule "expand_inInt" (formula "22"))
            (rule "replace_int_MAX" (formula "22") (term "1,0"))
            (rule "replace_int_MIN" (formula "22") (term "0,1"))
            (rule "andLeft" (formula "22"))
            (rule "inEqSimp_commuteLeq" (formula "23"))
            (rule "applyEq" (formula "22") (term "0") (ifseqformula "24"))
            (rule "leq_literals" (formula "22"))
            (rule "true_left" (formula "22"))
            (rule "applyEq" (formula "22") (term "0") (ifseqformula "23"))
            (rule "qeq_literals" (formula "22"))
            (rule "true_left" (formula "22"))
            (rule "arrayLengthNotNegative" (formula "22") (term "0"))
            (rule "applyEq" (formula "22") (term "0") (ifseqformula "23"))
            (rule "qeq_literals" (formula "22"))
            (rule "true_left" (formula "22"))
            (rule "div_axiom" (formula "2") (term "1") (inst "quotient=quotient_4"))
            (rule "equal_literals" (formula "2") (term "0"))
            (rule "concrete_or_2" (formula "2"))
            (rule "qeq_literals" (formula "2") (term "0,1"))
            (rule "ifthenelse_true_for" (formula "2") (term "1"))
            (rule "mul_literals" (formula "2") (term "1,1,1"))
            (rule "andLeft" (formula "2"))
            (rule "andLeft" (formula "2"))
            (rule "polySimp_addComm1" (formula "4") (term "1"))
            (rule "add_literals" (formula "4") (term "0,1"))
            (rule "inEqSimp_commuteLeq" (formula "3"))
            (rule "inEqSimp_homoInEq1" (formula "4"))
            (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
            (rule "polySimp_addComm1" (formula "4") (term "0"))
            (rule "applyEq" (formula "6") (term "1,0,0") (ifseqformula "2"))
            (rule "applyEq" (formula "5") (term "1") (ifseqformula "2"))
            (rule "mod_axiom" (formula "6") (term "0"))
            (rule "polySimp_mulLiterals" (formula "6") (term "1,0"))
            (rule "inEqSimp_homoInEq0" (formula "6"))
            (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
            (rule "polySimp_rightDist" (formula "6") (term "1,0"))
            (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0"))
            (rule "polySimp_rightDist" (formula "6") (term "0,1,0"))
            (rule "mul_literals" (formula "6") (term "0,0,1,0"))
            (rule "polySimp_addAssoc" (formula "6") (term "0"))
            (rule "polySimp_addComm1" (formula "6") (term "0,0"))
            (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
            (rule "polySimp_addAssoc" (formula "6") (term "0,0,0,0"))
            (rule "add_literals" (formula "6") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "4"))
            (rule "polySimp_mulComm0" (formula "4") (term "1"))
            (rule "polySimp_rightDist" (formula "4") (term "1"))
            (rule "mul_literals" (formula "4") (term "0,1"))
            (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
            (rule "inEqSimp_sepPosMonomial1" (formula "6"))
            (rule "polySimp_mulComm0" (formula "6") (term "1"))
            (rule "polySimp_rightDist" (formula "6") (term "1"))
            (rule "polySimp_rightDist" (formula "6") (term "0,1"))
            (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1"))
            (rule "polySimp_elimOne" (formula "6") (term "1,0,1"))
            (rule "polySimp_rightDist" (formula "6") (term "0,0,1"))
            (rule "mul_literals" (formula "6") (term "0,0,0,1"))
            (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0,1"))
            (rule "polySimp_elimOne" (formula "6") (term "1,0,0,1"))
            (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "1"))
            (rule "polySimp_mulAssoc" (formula "3") (term "0,0"))
            (rule "polySimp_mulComm0" (formula "3") (term "0,0,0"))
            (rule "polySimp_mulLiterals" (formula "3") (term "0,0"))
            (rule "polySimp_addComm0" (formula "3") (term "0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "3"))
            (rule "polySimp_mulLiterals" (formula "3") (term "0"))
            (rule "elimGcdLeq_antec" (formula "3") (inst "elimGcdRightDiv=Z(5(7(5(9(5(#))))))") (inst "elimGcdLeftDiv=quotient_4") (inst "elimGcd=Z(2(#))"))
            (rule "leq_literals" (formula "3") (term "0,0"))
            (rule "concrete_or_2" (formula "3") (term "0"))
            (rule "neg_literal" (formula "3") (term "0,0,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
            (rule "mul_literals" (formula "3") (term "1,0,0,0,0,0"))
            (rule "polySimp_addLiterals" (formula "3") (term "0,0,0,0"))
            (rule "add_zero_right" (formula "3") (term "0,0,0,0"))
            (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
            (rule "add_literals" (formula "3") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "3") (term "1,0,0"))
            (rule "add_zero_right" (formula "3") (term "0,0"))
            (rule "qeq_literals" (formula "3") (term "0"))
            (rule "concrete_or_2" (formula "3"))
            (rule "inEqSimp_exactShadow3" (formula "27") (ifseqformula "5"))
            (rule "mul_literals" (formula "27") (term "0,0"))
            (rule "polySimp_addAssoc" (formula "27") (term "0"))
            (rule "add_literals" (formula "27") (term "0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "27"))
            (rule "mul_literals" (formula "27") (term "1"))
            (rule "elimGcdGeq_antec" (formula "27") (inst "elimGcdRightDiv=Z(1(7(7(#))))") (inst "elimGcdLeftDiv=quotient_4") (inst "elimGcd=Z(2(#))"))
            (rule "leq_literals" (formula "27") (term "0,0"))
            (rule "concrete_or_2" (formula "27") (term "0"))
            (rule "polySimp_mulLiterals" (formula "27") (term "1,0,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "27") (term "1,0,0"))
            (rule "mul_literals" (formula "27") (term "1,0,0,0,0,0"))
            (rule "polySimp_addLiterals" (formula "27") (term "0,0,0,0"))
            (rule "add_literals" (formula "27") (term "0,0,0,0"))
            (rule "polySimp_pullOutFactor0b" (formula "27") (term "0,0"))
            (rule "add_literals" (formula "27") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "27") (term "1,0,0"))
            (rule "add_zero_right" (formula "27") (term "0,0"))
            (rule "leq_literals" (formula "27") (term "0"))
            (rule "concrete_or_2" (formula "27"))
            (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "5"))
            (rule "polySimp_rightDist" (formula "25") (term "0,0"))
            (rule "polySimp_mulComm0" (formula "25") (term "0,0,0"))
            (rule "polySimp_addComm1" (formula "25") (term "0"))
            (rule "polySimp_addComm0" (formula "25") (term "0,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "25"))
            (rule "polySimp_mulLiterals" (formula "25") (term "0"))
            (rule "polySimp_elimOne" (formula "25") (term "0"))
            (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "25"))
            (rule "polySimp_rightDist" (formula "21") (term "0,0"))
            (rule "polySimp_mulAssoc" (formula "21") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "21") (term "0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "21") (term "0,0,0"))
            (rule "polySimp_elimOne" (formula "21") (term "0,0,0"))
            (rule "polySimp_addAssoc" (formula "21") (term "0"))
            (rule "polySimp_addComm1" (formula "21") (term "0,0"))
            (rule "polySimp_pullOutFactor0b" (formula "21") (term "0"))
            (rule "add_literals" (formula "21") (term "1,1,0"))
            (rule "polySimp_addComm0" (formula "21") (term "0,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "21"))
            (rule "polySimp_mulLiterals" (formula "21") (term "0"))
            (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "26"))
            (rule "mul_literals" (formula "19") (term "0,0"))
            (rule "polySimp_addAssoc" (formula "19") (term "0"))
            (rule "polySimp_addAssoc" (formula "19") (term "0,0"))
            (rule "add_literals" (formula "19") (term "0,0,0"))
            (rule "add_zero_left" (formula "19") (term "0,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "19"))
            (rule "polySimp_mulLiterals" (formula "19") (term "0"))
            (rule "polySimp_elimOne" (formula "19") (term "0"))
            (rule "inEqSimp_exactShadow2" (formula "17") (ifseqformula "22"))
            (rule "greater_literals" (formula "17") (term "0"))
            (rule "concrete_impl_1" (formula "17"))
            (rule "polySimp_rightDist" (formula "17") (term "1,0,0"))
            (rule "mul_literals" (formula "17") (term "0,1,0,0"))
            (rule "polySimp_rightDist" (formula "17") (term "0,0"))
            (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0"))
            (rule "mul_literals" (formula "17") (term "0,0,0"))
            (rule "polySimp_addAssoc" (formula "17") (term "0"))
            (rule "polySimp_addComm1" (formula "17") (term "0,0"))
            (rule "polySimp_pullOutFactor2b" (formula "17") (term "0"))
            (rule "add_literals" (formula "17") (term "1,1,0"))
            (rule "polySimp_addAssoc" (formula "17") (term "0,0"))
            (rule "add_literals" (formula "17") (term "0,0,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "17"))
            (rule "polySimp_mulLiterals" (formula "17") (term "0"))
            (rule "polySimp_elimOne" (formula "17") (term "0"))
            (rule "inEqSimp_exactShadow2" (formula "12") (ifseqformula "23"))
            (rule "mul_literals" (formula "12") (term "1,0,0,1"))
            (rule "greater_literals" (formula "12") (term "0"))
            (rule "concrete_impl_1" (formula "12"))
            (rule "mul_literals" (formula "12") (term "0,0"))
            (rule "polySimp_addAssoc" (formula "12") (term "0"))
            (rule "polySimp_addAssoc" (formula "12") (term "0,0"))
            (rule "add_literals" (formula "12") (term "0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "12"))
            (rule "polySimp_mulComm0" (formula "12") (term "1"))
            (rule "polySimp_rightDist" (formula "12") (term "1"))
            (rule "polySimp_mulLiterals" (formula "12") (term "1,1"))
            (rule "mul_literals" (formula "12") (term "0,1"))
            (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "21"))
            (rule "mul_literals" (formula "13") (term "0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "13"))
            (rule "mul_literals" (formula "13") (term "1"))
            (rule "inEqSimp_subsumption6" (formula "13") (ifseqformula "33"))
            (rule "mul_literals" (formula "13") (term "1,1,0"))
            (rule "greater_literals" (formula "13") (term "0,0"))
            (rule "concrete_and_1" (formula "13") (term "0"))
            (rule "leq_literals" (formula "13") (term "0"))
            (rule "concrete_or_1" (formula "13"))
            (rule "true_left" (formula "13"))
            (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "21"))
            (rule "polySimp_rightDist" (formula "19") (term "0,0"))
            (rule "mul_literals" (formula "19") (term "0,0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "19"))
            (rule "polySimp_mulLiterals" (formula "19") (term "0"))
            (rule "polySimp_elimOne" (formula "19") (term "0"))
            (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "18"))
            (rule "times_zero_1" (formula "16") (term "0,0"))
            (rule "add_zero_left" (formula "16") (term "0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "16"))
            (rule "mul_literals" (formula "16") (term "1"))
            (rule "inEqSimp_subsumption6" (formula "16") (ifseqformula "33"))
            (rule "mul_literals" (formula "16") (term "1,1,0"))
            (rule "greater_literals" (formula "16") (term "0,0"))
            (rule "concrete_and_1" (formula "16") (term "0"))
            (rule "leq_literals" (formula "16") (term "0"))
            (rule "concrete_or_1" (formula "16"))
            (rule "true_left" (formula "16"))
            (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "17"))
            (rule "polySimp_rightDist" (formula "12") (term "0,0"))
            (rule "mul_literals" (formula "12") (term "0,0,0"))
            (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "12") (term "0"))
            (rule "add_literals" (formula "12") (term "0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "12"))
            (rule "mul_literals" (formula "12") (term "1"))
            (rule "inEqSimp_subsumption6" (formula "12") (ifseqformula "33"))
            (rule "mul_literals" (formula "12") (term "1,1,0"))
            (rule "greater_literals" (formula "12") (term "0,0"))
            (rule "concrete_and_1" (formula "12") (term "0"))
            (rule "leq_literals" (formula "12") (term "0"))
            (rule "concrete_or_1" (formula "12"))
            (rule "true_left" (formula "12"))
            (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "18"))
            (rule "polySimp_rightDist" (formula "12") (term "0,0"))
            (rule "mul_literals" (formula "12") (term "0,0,0"))
            (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0"))
            (rule "polySimp_addAssoc" (formula "12") (term "0"))
            (rule "polySimp_addComm1" (formula "12") (term "0,0"))
            (rule "add_literals" (formula "12") (term "0,0,0"))
            (rule "polySimp_pullOutFactor0b" (formula "12") (term "0"))
            (rule "add_literals" (formula "12") (term "1,1,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "12"))
            (rule "mul_literals" (formula "12") (term "1"))
            (rule "inEqSimp_subsumption6" (formula "12") (ifseqformula "33"))
            (rule "mul_literals" (formula "12") (term "1,1,0"))
            (rule "greater_literals" (formula "12") (term "0,0"))
            (rule "concrete_and_1" (formula "12") (term "0"))
            (rule "leq_literals" (formula "12") (term "0"))
            (rule "concrete_or_1" (formula "12"))
            (rule "true_left" (formula "12"))
            (rule "arrayLengthIsAnInt" (formula "34") (term "0"))
            (rule "expand_inInt" (formula "34"))
            (rule "replace_int_MAX" (formula "34") (term "1,0"))
            (rule "replace_int_MIN" (formula "34") (term "0,1"))
            (rule "andLeft" (formula "34"))
            (rule "inEqSimp_commuteLeq" (formula "35"))
            (rule "applyEq" (formula "35") (term "0") (ifseqformula "36"))
            (rule "qeq_literals" (formula "35"))
            (rule "true_left" (formula "35"))
            (rule "applyEq" (formula "34") (term "0") (ifseqformula "35"))
            (rule "leq_literals" (formula "34"))
            (rule "true_left" (formula "34"))
            (rule "arrayLengthNotNegative" (formula "34") (term "0"))
            (rule "applyEq" (formula "34") (term "0") (ifseqformula "35"))
            (rule "qeq_literals" (formula "34"))
            (rule "true_left" (formula "34"))
            (rule "div_axiom" (formula "7") (term "0,0") (inst "quotient=quotient_5"))
            (rule "equal_literals" (formula "7") (term "0"))
            (rule "concrete_or_2" (formula "7"))
            (rule "qeq_literals" (formula "7") (term "0,1"))
            (rule "ifthenelse_true_for" (formula "7") (term "1"))
            (rule "mul_literals" (formula "7") (term "1,1,1"))
            (rule "andLeft" (formula "7"))
            (rule "andLeft" (formula "7"))
            (rule "polySimp_addAssoc" (formula "9") (term "0,1"))
            (rule "add_literals" (formula "9") (term "0,0,1"))
            (rule "polySimp_addComm1" (formula "9") (term "1"))
            (rule "add_literals" (formula "9") (term "0,1"))
            (rule "inEqSimp_homoInEq0" (formula "8"))
            (rule "polySimp_mulLiterals" (formula "8") (term "1,0"))
            (rule "polySimp_addComm1" (formula "8") (term "0"))
            (rule "inEqSimp_homoInEq1" (formula "9"))
            (rule "polySimp_mulLiterals" (formula "9") (term "1,0"))
            (rule "polySimp_addComm1" (formula "9") (term "0"))
            (rule "applyEqRigid" (formula "10") (term "0,0") (ifseqformula "7"))
            (rule "inEqSimp_homoInEq1" (formula "10"))
            (rule "polySimp_mulLiterals" (formula "10") (term "1,0"))
            (rule "polySimp_addComm1" (formula "10") (term "0"))
            (rule "polySimp_addComm1" (formula "10") (term "0,0"))
            (rule "polySimp_addComm1" (formula "10") (term "0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "8"))
            (rule "polySimp_mulComm0" (formula "8") (term "1"))
            (rule "polySimp_rightDist" (formula "8") (term "1"))
            (rule "mul_literals" (formula "8") (term "0,1"))
            (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
            (rule "inEqSimp_sepPosMonomial0" (formula "9"))
            (rule "polySimp_mulComm0" (formula "9") (term "1"))
            (rule "polySimp_rightDist" (formula "9") (term "1"))
            (rule "mul_literals" (formula "9") (term "0,1"))
            (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
            (rule "inEqSimp_sepNegMonomial0" (formula "10"))
            (rule "polySimp_mulLiterals" (formula "10") (term "0"))
            (rule "polySimp_elimOne" (formula "10") (term "0"))
            (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "3"))
            (rule "polySimp_rightDist" (formula "8") (term "0,0"))
            (rule "mul_literals" (formula "8") (term "0,0,0"))
            (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "8") (term "0"))
            (rule "add_literals" (formula "8") (term "0,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "8"))
            (rule "polySimp_mulLiterals" (formula "8") (term "0"))
            (rule "elimGcdLeq_antec" (formula "8") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_5") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
            (rule "leq_literals" (formula "8") (term "0,0"))
            (rule "concrete_or_2" (formula "8") (term "0"))
            (rule "neg_literal" (formula "8") (term "0,0,0,0,0,0"))
            (rule "times_zero_1" (formula "8") (term "1,0,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0"))
            (rule "polySimp_addLiterals" (formula "8") (term "0,0,0,0"))
            (rule "add_literals" (formula "8") (term "0,0,0,0"))
            (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,0"))
            (rule "add_literals" (formula "8") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "8") (term "1,0,0"))
            (rule "add_zero_right" (formula "8") (term "0,0"))
            (rule "qeq_literals" (formula "8") (term "0"))
            (rule "concrete_or_2" (formula "8"))
            (rule "inEqSimp_exactShadow3" (formula "36") (ifseqformula "10"))
            (rule "mul_literals" (formula "36") (term "0,0"))
            (rule "polySimp_addAssoc" (formula "36") (term "0"))
            (rule "add_literals" (formula "36") (term "0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "36"))
            (rule "mul_literals" (formula "36") (term "1"))
            (rule "elimGcdGeq_antec" (formula "36") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_5") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
            (rule "polySimp_mulLiterals" (formula "36") (term "1,0,1,0"))
            (rule "leq_literals" (formula "36") (term "0,0"))
            (rule "concrete_or_2" (formula "36") (term "0"))
            (rule "times_zero_1" (formula "36") (term "1,0,0,0,0,0"))
            (rule "polySimp_addLiterals" (formula "36") (term "0,0,0,0"))
            (rule "add_literals" (formula "36") (term "0,0,0,0"))
            (rule "polySimp_pullOutFactor0b" (formula "36") (term "0,0"))
            (rule "add_literals" (formula "36") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "36") (term "1,0,0"))
            (rule "add_zero_right" (formula "36") (term "0,0"))
            (rule "leq_literals" (formula "36") (term "0"))
            (rule "concrete_or_2" (formula "36"))
            (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "15"))
            (rule "polySimp_rightDist" (formula "11") (term "0,0"))
            (rule "polySimp_rightDist" (formula "11") (term "0,0,0"))
            (rule "polySimp_rightDist" (formula "11") (term "0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,0,0"))
            (rule "mul_literals" (formula "11") (term "0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "11") (term "0"))
            (rule "polySimp_addComm1" (formula "11") (term "0,0"))
            (rule "polySimp_pullOutFactor2b" (formula "11") (term "0"))
            (rule "add_literals" (formula "11") (term "1,1,0"))
            (rule "times_zero_1" (formula "11") (term "1,0"))
            (rule "add_zero_right" (formula "11") (term "0"))
            (rule "polySimp_addComm1" (formula "11") (term "0"))
            (rule "polySimp_addComm1" (formula "11") (term "0,0"))
            (rule "add_literals" (formula "11") (term "0,0,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "11"))
            (rule "polySimp_mulLiterals" (formula "11") (term "0"))
            (rule "polySimp_elimOne" (formula "11") (term "0"))
            (rule "inEqSimp_subsumption0" (formula "10") (ifseqformula "11"))
            (rule "inEqSimp_homoInEq0" (formula "10") (term "0"))
            (rule "polySimp_mulComm0" (formula "10") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "10") (term "1,0,0"))
            (rule "mul_literals" (formula "10") (term "0,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0"))
            (rule "polySimp_addAssoc" (formula "10") (term "0,0"))
            (rule "polySimp_addComm1" (formula "10") (term "0,0,0"))
            (rule "add_literals" (formula "10") (term "0,0,0,0"))
            (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,0"))
            (rule "add_literals" (formula "10") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "10") (term "1,0,0"))
            (rule "add_zero_right" (formula "10") (term "0,0"))
            (rule "qeq_literals" (formula "10") (term "0"))
            (rule "concrete_or_1" (formula "10"))
            (rule "true_left" (formula "10"))
            (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "24"))
            (rule "polySimp_rightDist" (formula "11") (term "0,0"))
            (rule "polySimp_addComm1" (formula "11") (term "0"))
            (rule "polySimp_rightDist" (formula "11") (term "0,0,0"))
            (rule "polySimp_addComm1" (formula "11") (term "0,0"))
            (rule "polySimp_rightDist" (formula "11") (term "0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,0,0"))
            (rule "mul_literals" (formula "11") (term "0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "11") (term "0,0,0"))
            (rule "add_literals" (formula "11") (term "0,0,0,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "11"))
            (rule "polySimp_mulLiterals" (formula "11") (term "0"))
            (rule "polySimp_elimOne" (formula "11") (term "0"))
            (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "26"))
            (rule "polySimp_rightDist" (formula "12") (term "0,0"))
            (rule "polySimp_addComm1" (formula "12") (term "0"))
            (rule "polySimp_rightDist" (formula "12") (term "0,0,0"))
            (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,0"))
            (rule "add_literals" (formula "12") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "12") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "12") (term "0,0,0"))
            (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0"))
            (rule "mul_literals" (formula "12") (term "0,0,0,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "12"))
            (rule "polySimp_mulLiterals" (formula "12") (term "0"))
            (rule "polySimp_elimOne" (formula "12") (term "0"))
            (rule "inEqSimp_exactShadow2" (formula "13") (ifseqformula "29"))
            (rule "greater_literals" (formula "13") (term "0"))
            (rule "concrete_impl_1" (formula "13"))
            (rule "polySimp_rightDist" (formula "13") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "13") (term "0,1,0,0"))
            (rule "polySimp_rightDist" (formula "13") (term "0,0,1,0,0"))
            (rule "mul_literals" (formula "13") (term "0,0,0,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,1,0,0"))
            (rule "polySimp_rightDist" (formula "13") (term "0,0"))
            (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "13") (term "0,0,0"))
            (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0"))
            (rule "polySimp_rightDist" (formula "13") (term "0,0,0,0"))
            (rule "mul_literals" (formula "13") (term "0,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "13") (term "0"))
            (rule "polySimp_addComm1" (formula "13") (term "0,0"))
            (rule "polySimp_pullOutFactor2b" (formula "13") (term "0"))
            (rule "add_literals" (formula "13") (term "1,1,0"))
            (rule "polySimp_addComm1" (formula "13") (term "0,0"))
            (rule "polySimp_addComm1" (formula "13") (term "0,0,0"))
            (rule "add_literals" (formula "13") (term "0,0,0,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "13"))
            (rule "polySimp_mulLiterals" (formula "13") (term "0"))
            (rule "polySimp_elimOne" (formula "13") (term "0"))
            (rule "inEqSimp_exactShadow2" (formula "14") (ifseqformula "31"))
            (rule "greater_literals" (formula "14") (term "0"))
            (rule "concrete_impl_1" (formula "14"))
            (rule "polySimp_rightDist" (formula "14") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "14") (term "0,1,0,0"))
            (rule "polySimp_rightDist" (formula "14") (term "0,0,1,0,0"))
            (rule "mul_literals" (formula "14") (term "0,0,0,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,1,0,0"))
            (rule "polySimp_rightDist" (formula "14") (term "0,0"))
            (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "14") (term "0,0,0"))
            (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0"))
            (rule "polySimp_rightDist" (formula "14") (term "0,0,0,0"))
            (rule "mul_literals" (formula "14") (term "0,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "14") (term "0"))
            (rule "polySimp_addComm1" (formula "14") (term "0,0"))
            (rule "polySimp_pullOutFactor2b" (formula "14") (term "0"))
            (rule "add_literals" (formula "14") (term "1,1,0"))
            (rule "polySimp_addAssoc" (formula "14") (term "0,0"))
            (rule "polySimp_addComm1" (formula "14") (term "0,0,0"))
            (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,0"))
            (rule "add_literals" (formula "14") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "14") (term "1,0,0"))
            (rule "add_zero_right" (formula "14") (term "0,0"))
            (rule "polySimp_addComm1" (formula "14") (term "0,0"))
            (rule "add_literals" (formula "14") (term "0,0,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "14"))
            (rule "polySimp_mulLiterals" (formula "14") (term "0"))
            (rule "polySimp_elimOne" (formula "14") (term "0"))
            (rule "inEqSimp_antiSymm" (formula "40") (ifseqformula "8"))
            (rule "applyEq" (formula "8") (term "0") (ifseqformula "40"))
            (rule "leq_literals" (formula "8"))
            (rule "true_left" (formula "8"))
            (rule "applyEqRigid" (formula "40") (term "0") (ifseqformula "39"))
            (rule "qeq_literals" (formula "40"))
            (rule "true_left" (formula "40"))
            (rule "applyEq" (formula "8") (term "0,1,1") (ifseqformula "39"))
            (rule "times_zero_2" (formula "8") (term "1,1"))
            (rule "add_zero_right" (formula "8") (term "1"))
            (rule "applyEqRigid" (formula "9") (term "0,1,1") (ifseqformula "39"))
            (rule "times_zero_2" (formula "9") (term "1,1"))
            (rule "add_zero_right" (formula "9") (term "1"))
            (rule "applyEqRigid" (formula "13") (term "0,1,1") (ifseqformula "39"))
            (rule "times_zero_2" (formula "13") (term "1,1"))
            (rule "add_zero_right" (formula "13") (term "1"))
            (rule "applyEq" (formula "7") (term "1") (ifseqformula "39"))
            (rule "applyEqRigid" (formula "11") (term "0,1,0,1") (ifseqformula "39"))
            (rule "mul_literals" (formula "11") (term "1,0,1"))
            (rule "add_zero_right" (formula "11") (term "0,1"))
            (rule "applyEq" (formula "10") (term "0,1,0,1") (ifseqformula "39"))
            (rule "times_zero_2" (formula "10") (term "1,0,1"))
            (rule "add_zero_right" (formula "10") (term "0,1"))
            (rule "applyEq" (formula "12") (term "0,1,0,1") (ifseqformula "39"))
            (rule "times_zero_2" (formula "12") (term "1,0,1"))
            (rule "add_zero_right" (formula "12") (term "0,1"))
            (rule "applyEqRigid" (formula "14") (term "0,1,0,0,1") (ifseqformula "39"))
            (rule "times_zero_2" (formula "14") (term "1,0,0,1"))
            (rule "add_zero_right" (formula "14") (term "0,0,1"))
            (rule "inEqSimp_contradInEq0" (formula "23") (ifseqformula "13"))
            (rule "qeq_literals" (formula "23") (term "0"))
            (rule "concrete_and_2" (formula "23"))
            (rule "closeFalse" (formula "23"))
         )
      )
      (branch "CUT: self.a.length >= 1542 FALSE"
         (rule "concrete_and_2" (formula "25") (term "0"))
         (rule "concrete_impl_2" (formula "25"))
         (rule "true_left" (formula "25"))
         (rule "inEqSimp_geqRight" (formula "40"))
         (rule "mul_literals" (formula "1") (term "1,0,0"))
         (rule "add_literals" (formula "1") (term "0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "1"))
         (rule "mul_literals" (formula "1") (term "1"))
         (rule "replace_known_left" (formula "25") (term "0") (ifseqformula "1"))
         (rule "concrete_impl_1" (formula "25"))
         (rule "applyEq" (formula "26") (term "0,1") (ifseqformula "25"))
         (rule "equal_literals" (formula "26") (term "1"))
         (rule "concrete_impl_3" (formula "26"))
         (rule "notLeft" (formula "26"))
         (rule "inEqSimp_geqRight" (formula "40"))
         (rule "mul_literals" (formula "1") (term "1,0,0"))
         (rule "add_literals" (formula "1") (term "0,0"))
         (rule "applyEq" (formula "30") (term "1") (ifseqformula "26"))
         (rule "applyEq" (formula "28") (term "0") (ifseqformula "26"))
         (rule "qeq_literals" (formula "28"))
         (rule "true_left" (formula "28"))
         (rule "applyEq" (formula "24") (term "1") (ifseqformula "26"))
         (rule "inEqSimp_sepPosMonomial0" (formula "1"))
         (rule "mul_literals" (formula "1") (term "1"))
         (rule "inEqSimp_subsumption0" (formula "1") (ifseqformula "2"))
         (rule "leq_literals" (formula "1") (term "0"))
         (rule "concrete_or_1" (formula "1"))
         (rule "true_left" (formula "1"))
         (rule "inEqSimp_subsumption0" (formula "19") (ifseqformula "1"))
         (rule "leq_literals" (formula "19") (term "0"))
         (rule "concrete_or_1" (formula "19"))
         (rule "true_left" (formula "19"))
         (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "1"))
         (rule "polySimp_rightDist" (formula "21") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "21") (term "0,0,0"))
         (rule "polySimp_addComm1" (formula "21") (term "0"))
         (rule "polySimp_addComm0" (formula "21") (term "0,0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "21"))
         (rule "polySimp_mulLiterals" (formula "21") (term "0"))
         (rule "polySimp_elimOne" (formula "21") (term "0"))
         (rule "inEqSimp_subsumption0" (formula "19") (ifseqformula "21"))
         (rule "inEqSimp_homoInEq0" (formula "19") (term "0"))
         (rule "polySimp_mulComm0" (formula "19") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "19") (term "1,0,0"))
         (rule "mul_literals" (formula "19") (term "0,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0"))
         (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0"))
         (rule "polySimp_addAssoc" (formula "19") (term "0,0"))
         (rule "polySimp_addComm1" (formula "19") (term "0,0,0"))
         (rule "add_literals" (formula "19") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor2b" (formula "19") (term "0,0"))
         (rule "add_literals" (formula "19") (term "1,1,0,0"))
         (rule "times_zero_1" (formula "19") (term "1,0,0"))
         (rule "add_zero_right" (formula "19") (term "0,0"))
         (rule "qeq_literals" (formula "19") (term "0"))
         (rule "concrete_or_1" (formula "19"))
         (rule "true_left" (formula "19"))
         (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "20"))
         (rule "mul_literals" (formula "15") (term "0,0"))
         (rule "polySimp_addAssoc" (formula "15") (term "0"))
         (rule "add_literals" (formula "15") (term "0,0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "15"))
         (rule "polySimp_mulLiterals" (formula "15") (term "0"))
         (rule "polySimp_elimOne" (formula "15") (term "0"))
         (rule "inEqSimp_subsumption0" (formula "14") (ifseqformula "15"))
         (rule "leq_literals" (formula "14") (term "0"))
         (rule "concrete_or_1" (formula "14"))
         (rule "true_left" (formula "14"))
         (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "20"))
         (rule "polySimp_rightDist" (formula "17") (term "0,0"))
         (rule "polySimp_mulAssoc" (formula "17") (term "0,0,0"))
         (rule "polySimp_mulComm0" (formula "17") (term "0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "17") (term "0,0,0"))
         (rule "polySimp_elimOne" (formula "17") (term "0,0,0"))
         (rule "polySimp_addAssoc" (formula "17") (term "0"))
         (rule "polySimp_addComm1" (formula "17") (term "0,0"))
         (rule "polySimp_pullOutFactor0b" (formula "17") (term "0"))
         (rule "add_literals" (formula "17") (term "1,1,0"))
         (rule "polySimp_addComm0" (formula "17") (term "0,0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "17"))
         (rule "polySimp_mulLiterals" (formula "17") (term "0"))
         (rule "inEqSimp_subsumption2" (formula "16") (ifseqformula "17"))
         (rule "eq_and" (formula "16") (term "0,0"))
         (rule "greater_literals" (formula "16") (term "0,0"))
         (rule "concrete_and_1" (formula "16") (term "0"))
         (rule "polySimp_rightDist" (formula "16") (term "0,0"))
         (rule "mul_literals" (formula "16") (term "0,0,0"))
         (rule "polySimp_rightDist" (formula "16") (term "1,0"))
         (rule "mul_literals" (formula "16") (term "0,1,0"))
         (rule "inEqSimp_homoInEq0" (formula "16") (term "0"))
         (rule "polySimp_mulComm0" (formula "16") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "16") (term "1,0,0"))
         (rule "mul_literals" (formula "16") (term "0,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0"))
         (rule "polySimp_addAssoc" (formula "16") (term "0,0"))
         (rule "polySimp_addComm1" (formula "16") (term "0,0,0"))
         (rule "add_literals" (formula "16") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor0b" (formula "16") (term "0,0"))
         (rule "add_literals" (formula "16") (term "1,1,0,0"))
         (rule "times_zero_1" (formula "16") (term "1,0,0"))
         (rule "add_zero_right" (formula "16") (term "0,0"))
         (rule "qeq_literals" (formula "16") (term "0"))
         (rule "concrete_or_1" (formula "16"))
         (rule "true_left" (formula "16"))
         (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "14"))
         (rule "polySimp_rightDist" (formula "13") (term "0,0"))
         (rule "mul_literals" (formula "13") (term "0,0,0"))
         (rule "polySimp_addComm1" (formula "13") (term "0"))
         (rule "add_literals" (formula "13") (term "0,0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "13"))
         (rule "polySimp_mulLiterals" (formula "13") (term "0"))
         (rule "polySimp_elimOne" (formula "13") (term "0"))
         (rule "inEqSimp_subsumption0" (formula "12") (ifseqformula "13"))
         (rule "leq_literals" (formula "12") (term "0"))
         (rule "concrete_or_1" (formula "12"))
         (rule "true_left" (formula "12"))
         (rule "inEqSimp_exactShadow2" (formula "13") (ifseqformula "16"))
         (rule "greater_literals" (formula "13") (term "0"))
         (rule "concrete_impl_1" (formula "13"))
         (rule "polySimp_rightDist" (formula "13") (term "1,0,0"))
         (rule "mul_literals" (formula "13") (term "0,1,0,0"))
         (rule "polySimp_rightDist" (formula "13") (term "0,0"))
         (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0"))
         (rule "mul_literals" (formula "13") (term "0,0,0"))
         (rule "polySimp_addAssoc" (formula "13") (term "0"))
         (rule "polySimp_addComm1" (formula "13") (term "0,0"))
         (rule "add_literals" (formula "13") (term "0,0,0"))
         (rule "polySimp_pullOutFactor2b" (formula "13") (term "0"))
         (rule "add_literals" (formula "13") (term "1,1,0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "13"))
         (rule "polySimp_mulLiterals" (formula "13") (term "0"))
         (rule "polySimp_elimOne" (formula "13") (term "0"))
         (rule "inEqSimp_exactShadow2" (formula "8") (ifseqformula "16"))
         (rule "greater_literals" (formula "8") (term "0"))
         (rule "concrete_impl_1" (formula "8"))
         (rule "mul_literals" (formula "8") (term "1,0,0"))
         (rule "mul_literals" (formula "8") (term "0,0"))
         (rule "polySimp_addAssoc" (formula "8") (term "0"))
         (rule "add_literals" (formula "8") (term "0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "8"))
         (rule "mul_literals" (formula "8") (term "1"))
         (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "12"))
         (rule "leq_literals" (formula "8") (term "0"))
         (rule "concrete_or_1" (formula "8"))
         (rule "true_left" (formula "8"))
         (rule "arrayLengthNotNegative" (formula "22") (term "0"))
         (rule "applyEq" (formula "22") (term "0") (ifseqformula "23"))
         (rule "qeq_literals" (formula "22"))
         (rule "true_left" (formula "22"))
         (rule "arrayLengthIsAnInt" (formula "22") (term "0"))
         (rule "expand_inInt" (formula "22"))
         (rule "replace_int_MAX" (formula "22") (term "1,0"))
         (rule "replace_int_MIN" (formula "22") (term "0,1"))
         (rule "andLeft" (formula "22"))
         (rule "inEqSimp_commuteLeq" (formula "23"))
         (rule "applyEq" (formula "22") (term "0") (ifseqformula "24"))
         (rule "leq_literals" (formula "22"))
         (rule "true_left" (formula "22"))
         (rule "applyEq" (formula "22") (term "0") (ifseqformula "23"))
         (rule "qeq_literals" (formula "22"))
         (rule "true_left" (formula "22"))
         (rule "div_axiom" (formula "2") (term "1") (inst "quotient=quotient_2"))
         (rule "qeq_literals" (formula "2") (term "0,1,1"))
         (rule "ifthenelse_true_for" (formula "2") (term "1,1"))
         (rule "equal_literals" (formula "2") (term "0"))
         (rule "concrete_or_2" (formula "2"))
         (rule "mul_literals" (formula "2") (term "1,1,1"))
         (rule "andLeft" (formula "2"))
         (rule "andLeft" (formula "2"))
         (rule "polySimp_addComm1" (formula "4") (term "1"))
         (rule "add_literals" (formula "4") (term "0,1"))
         (rule "inEqSimp_commuteLeq" (formula "3"))
         (rule "inEqSimp_homoInEq1" (formula "4"))
         (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
         (rule "polySimp_addComm1" (formula "4") (term "0"))
         (rule "applyEq" (formula "6") (term "1,0,0") (ifseqformula "2"))
         (rule "applyEq" (formula "5") (term "1") (ifseqformula "2"))
         (rule "mod_axiom" (formula "6") (term "0"))
         (rule "polySimp_mulLiterals" (formula "6") (term "1,0"))
         (rule "inEqSimp_homoInEq0" (formula "6"))
         (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
         (rule "polySimp_rightDist" (formula "6") (term "1,0"))
         (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0"))
         (rule "polySimp_rightDist" (formula "6") (term "0,1,0"))
         (rule "mul_literals" (formula "6") (term "0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "6") (term "0"))
         (rule "polySimp_addComm1" (formula "6") (term "0,0"))
         (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
         (rule "polySimp_addAssoc" (formula "6") (term "0,0,0,0"))
         (rule "add_literals" (formula "6") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "4"))
         (rule "polySimp_mulComm0" (formula "4") (term "1"))
         (rule "polySimp_rightDist" (formula "4") (term "1"))
         (rule "mul_literals" (formula "4") (term "0,1"))
         (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
         (rule "inEqSimp_sepPosMonomial1" (formula "6"))
         (rule "polySimp_mulComm0" (formula "6") (term "1"))
         (rule "polySimp_rightDist" (formula "6") (term "1"))
         (rule "polySimp_rightDist" (formula "6") (term "0,1"))
         (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1"))
         (rule "polySimp_elimOne" (formula "6") (term "1,0,1"))
         (rule "polySimp_rightDist" (formula "6") (term "0,0,1"))
         (rule "mul_literals" (formula "6") (term "0,0,0,1"))
         (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0,1"))
         (rule "polySimp_elimOne" (formula "6") (term "1,0,0,1"))
         (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "4"))
         (rule "polySimp_rightDist" (formula "24") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "24") (term "0,0,0"))
         (rule "polySimp_addComm1" (formula "24") (term "0"))
         (rule "polySimp_addComm0" (formula "24") (term "0,0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "24"))
         (rule "polySimp_mulLiterals" (formula "24") (term "0"))
         (rule "polySimp_elimOne" (formula "24") (term "0"))
         (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "1"))
         (rule "polySimp_mulAssoc" (formula "3") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "3") (term "0,0,0"))
         (rule "polySimp_mulLiterals" (formula "3") (term "0,0"))
         (rule "polySimp_addComm0" (formula "3") (term "0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "3"))
         (rule "polySimp_mulLiterals" (formula "3") (term "0"))
         (rule "elimGcdLeq_antec" (formula "3") (inst "elimGcdRightDiv=Z(0(7(7(#))))") (inst "elimGcdLeftDiv=quotient_2") (inst "elimGcd=Z(2(#))"))
         (rule "leq_literals" (formula "3") (term "0,0"))
         (rule "concrete_or_2" (formula "3") (term "0"))
         (rule "neg_literal" (formula "3") (term "0,0,0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
         (rule "mul_literals" (formula "3") (term "1,0,0,0,0,0"))
         (rule "polySimp_addLiterals" (formula "3") (term "0,0,0,0"))
         (rule "add_literals" (formula "3") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
         (rule "add_literals" (formula "3") (term "1,1,0,0"))
         (rule "times_zero_1" (formula "3") (term "1,0,0"))
         (rule "add_zero_right" (formula "3") (term "0,0"))
         (rule "qeq_literals" (formula "3") (term "0"))
         (rule "concrete_or_2" (formula "3"))
         (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "5"))
         (rule "mul_literals" (formula "28") (term "0,0"))
         (rule "polySimp_addAssoc" (formula "28") (term "0"))
         (rule "add_literals" (formula "28") (term "0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "28"))
         (rule "mul_literals" (formula "28") (term "1"))
         (rule "elimGcdGeq_antec" (formula "28") (inst "elimGcdRightDiv=Z(0(6(#)))") (inst "elimGcdLeftDiv=quotient_2") (inst "elimGcd=Z(2(#))"))
         (rule "leq_literals" (formula "28") (term "0,0"))
         (rule "concrete_or_2" (formula "28") (term "0"))
         (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0"))
         (rule "mul_literals" (formula "28") (term "1,0,0,0,0,0"))
         (rule "polySimp_addLiterals" (formula "28") (term "0,0,0,0"))
         (rule "add_literals" (formula "28") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor0b" (formula "28") (term "0,0"))
         (rule "add_literals" (formula "28") (term "1,1,0,0"))
         (rule "times_zero_1" (formula "28") (term "1,0,0"))
         (rule "add_zero_right" (formula "28") (term "0,0"))
         (rule "leq_literals" (formula "28") (term "0"))
         (rule "concrete_or_2" (formula "28"))
         (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "25"))
         (rule "mul_literals" (formula "19") (term "0,0"))
         (rule "polySimp_addAssoc" (formula "19") (term "0"))
         (rule "polySimp_addAssoc" (formula "19") (term "0,0"))
         (rule "add_literals" (formula "19") (term "0,0,0"))
         (rule "add_zero_left" (formula "19") (term "0,0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "19"))
         (rule "polySimp_mulLiterals" (formula "19") (term "0"))
         (rule "polySimp_elimOne" (formula "19") (term "0"))
         (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "26"))
         (rule "polySimp_rightDist" (formula "22") (term "0,0"))
         (rule "polySimp_mulAssoc" (formula "22") (term "0,0,0"))
         (rule "polySimp_mulComm0" (formula "22") (term "0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "22") (term "0,0,0"))
         (rule "polySimp_elimOne" (formula "22") (term "0,0,0"))
         (rule "polySimp_addAssoc" (formula "22") (term "0"))
         (rule "polySimp_addComm1" (formula "22") (term "0,0"))
         (rule "polySimp_pullOutFactor0b" (formula "22") (term "0"))
         (rule "add_literals" (formula "22") (term "1,1,0"))
         (rule "polySimp_addComm0" (formula "22") (term "0,0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "22"))
         (rule "polySimp_mulLiterals" (formula "22") (term "0"))
         (rule "inEqSimp_exactShadow2" (formula "12") (ifseqformula "22"))
         (rule "greater_literals" (formula "12") (term "0"))
         (rule "concrete_impl_1" (formula "12"))
         (rule "mul_literals" (formula "12") (term "1,0,0"))
         (rule "mul_literals" (formula "12") (term "0,0"))
         (rule "polySimp_addAssoc" (formula "12") (term "0"))
         (rule "polySimp_addAssoc" (formula "12") (term "0,0"))
         (rule "add_literals" (formula "12") (term "0,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "12"))
         (rule "polySimp_mulComm0" (formula "12") (term "1"))
         (rule "polySimp_rightDist" (formula "12") (term "1"))
         (rule "mul_literals" (formula "12") (term "0,1"))
         (rule "polySimp_mulLiterals" (formula "12") (term "1,1"))
         (rule "inEqSimp_exactShadow2" (formula "18") (ifseqformula "23"))
         (rule "greater_literals" (formula "18") (term "0"))
         (rule "concrete_impl_1" (formula "18"))
         (rule "polySimp_rightDist" (formula "18") (term "1,0,0"))
         (rule "mul_literals" (formula "18") (term "0,1,0,0"))
         (rule "polySimp_rightDist" (formula "18") (term "0,0"))
         (rule "mul_literals" (formula "18") (term "0,0,0"))
         (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0"))
         (rule "polySimp_addAssoc" (formula "18") (term "0"))
         (rule "polySimp_addComm1" (formula "18") (term "0,0"))
         (rule "polySimp_pullOutFactor2b" (formula "18") (term "0"))
         (rule "add_literals" (formula "18") (term "1,1,0"))
         (rule "polySimp_addAssoc" (formula "18") (term "0,0"))
         (rule "add_literals" (formula "18") (term "0,0,0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "18"))
         (rule "polySimp_mulLiterals" (formula "18") (term "0"))
         (rule "polySimp_elimOne" (formula "18") (term "0"))
         (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "21"))
         (rule "polySimp_rightDist" (formula "19") (term "0,0"))
         (rule "mul_literals" (formula "19") (term "0,0,0"))
         (rule "polySimp_addComm1" (formula "19") (term "0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "19"))
         (rule "polySimp_mulLiterals" (formula "19") (term "0"))
         (rule "polySimp_elimOne" (formula "19") (term "0"))
         (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "21"))
         (rule "mul_literals" (formula "13") (term "0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "13"))
         (rule "mul_literals" (formula "13") (term "1"))
         (rule "inEqSimp_subsumption6" (formula "13") (ifseqformula "33"))
         (rule "greater_literals" (formula "13") (term "0,0"))
         (rule "concrete_and_1" (formula "13") (term "0"))
         (rule "mul_literals" (formula "13") (term "1,0"))
         (rule "leq_literals" (formula "13") (term "0"))
         (rule "concrete_or_1" (formula "13"))
         (rule "true_left" (formula "13"))
         (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "18"))
         (rule "polySimp_rightDist" (formula "12") (term "0,0"))
         (rule "mul_literals" (formula "12") (term "0,0,0"))
         (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0"))
         (rule "polySimp_addAssoc" (formula "12") (term "0"))
         (rule "polySimp_addComm1" (formula "12") (term "0,0"))
         (rule "add_literals" (formula "12") (term "0,0,0"))
         (rule "polySimp_pullOutFactor0b" (formula "12") (term "0"))
         (rule "add_literals" (formula "12") (term "1,1,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "12"))
         (rule "mul_literals" (formula "12") (term "1"))
         (rule "inEqSimp_subsumption6" (formula "12") (ifseqformula "33"))
         (rule "greater_literals" (formula "12") (term "0,0"))
         (rule "concrete_and_1" (formula "12") (term "0"))
         (rule "mul_literals" (formula "12") (term "1,0"))
         (rule "leq_literals" (formula "12") (term "0"))
         (rule "concrete_or_1" (formula "12"))
         (rule "true_left" (formula "12"))
         (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "18"))
         (rule "times_zero_1" (formula "16") (term "0,0"))
         (rule "add_zero_left" (formula "16") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "16"))
         (rule "mul_literals" (formula "16") (term "1"))
         (rule "inEqSimp_subsumption6" (formula "16") (ifseqformula "33"))
         (rule "mul_literals" (formula "16") (term "1,1,0"))
         (rule "greater_literals" (formula "16") (term "0,0"))
         (rule "concrete_and_1" (formula "16") (term "0"))
         (rule "leq_literals" (formula "16") (term "0"))
         (rule "concrete_or_1" (formula "16"))
         (rule "true_left" (formula "16"))
         (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "17"))
         (rule "polySimp_rightDist" (formula "12") (term "0,0"))
         (rule "mul_literals" (formula "12") (term "0,0,0"))
         (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0"))
         (rule "polySimp_addComm1" (formula "12") (term "0"))
         (rule "add_literals" (formula "12") (term "0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "12"))
         (rule "mul_literals" (formula "12") (term "1"))
         (rule "inEqSimp_subsumption6" (formula "12") (ifseqformula "33"))
         (rule "greater_literals" (formula "12") (term "0,0"))
         (rule "concrete_and_1" (formula "12") (term "0"))
         (rule "mul_literals" (formula "12") (term "1,0"))
         (rule "leq_literals" (formula "12") (term "0"))
         (rule "concrete_or_1" (formula "12"))
         (rule "true_left" (formula "12"))
         (rule "arrayLengthNotNegative" (formula "34") (term "0"))
         (rule "applyEq" (formula "34") (term "0") (ifseqformula "35"))
         (rule "qeq_literals" (formula "34"))
         (rule "true_left" (formula "34"))
         (rule "arrayLengthIsAnInt" (formula "34") (term "0"))
         (rule "expand_inInt" (formula "34"))
         (rule "replace_int_MAX" (formula "34") (term "1,0"))
         (rule "replace_int_MIN" (formula "34") (term "0,1"))
         (rule "andLeft" (formula "34"))
         (rule "inEqSimp_commuteLeq" (formula "35"))
         (rule "applyEq" (formula "35") (term "0") (ifseqformula "36"))
         (rule "qeq_literals" (formula "35"))
         (rule "true_left" (formula "35"))
         (rule "applyEq" (formula "34") (term "0") (ifseqformula "35"))
         (rule "leq_literals" (formula "34"))
         (rule "true_left" (formula "34"))
         (rule "div_axiom" (formula "7") (term "0,0") (inst "quotient=quotient_3"))
         (rule "equal_literals" (formula "7") (term "0"))
         (rule "concrete_or_2" (formula "7"))
         (rule "mul_literals" (formula "7") (term "1,1,1,1"))
         (rule "qeq_literals" (formula "7") (term "0,1"))
         (rule "ifthenelse_true_for" (formula "7") (term "1"))
         (rule "andLeft" (formula "7"))
         (rule "andLeft" (formula "7"))
         (rule "polySimp_addAssoc" (formula "9") (term "0,1"))
         (rule "add_literals" (formula "9") (term "0,0,1"))
         (rule "polySimp_addComm1" (formula "9") (term "1"))
         (rule "add_literals" (formula "9") (term "0,1"))
         (rule "inEqSimp_homoInEq0" (formula "8"))
         (rule "polySimp_mulLiterals" (formula "8") (term "1,0"))
         (rule "polySimp_addComm1" (formula "8") (term "0"))
         (rule "inEqSimp_homoInEq1" (formula "9"))
         (rule "polySimp_mulLiterals" (formula "9") (term "1,0"))
         (rule "polySimp_addComm1" (formula "9") (term "0"))
         (rule "applyEq" (formula "10") (term "0,0") (ifseqformula "7"))
         (rule "inEqSimp_homoInEq1" (formula "10"))
         (rule "polySimp_mulLiterals" (formula "10") (term "1,0"))
         (rule "polySimp_addComm1" (formula "10") (term "0"))
         (rule "polySimp_addComm1" (formula "10") (term "0,0"))
         (rule "polySimp_addComm1" (formula "10") (term "0,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "8"))
         (rule "polySimp_mulComm0" (formula "8") (term "1"))
         (rule "polySimp_rightDist" (formula "8") (term "1"))
         (rule "mul_literals" (formula "8") (term "0,1"))
         (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "9"))
         (rule "polySimp_mulComm0" (formula "9") (term "1"))
         (rule "polySimp_rightDist" (formula "9") (term "1"))
         (rule "mul_literals" (formula "9") (term "0,1"))
         (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
         (rule "inEqSimp_sepNegMonomial0" (formula "10"))
         (rule "polySimp_mulLiterals" (formula "10") (term "0"))
         (rule "polySimp_elimOne" (formula "10") (term "0"))
         (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "3"))
         (rule "polySimp_rightDist" (formula "8") (term "0,0"))
         (rule "mul_literals" (formula "8") (term "0,0,0"))
         (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0"))
         (rule "polySimp_addComm1" (formula "8") (term "0"))
         (rule "add_literals" (formula "8") (term "0,0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "8"))
         (rule "polySimp_mulLiterals" (formula "8") (term "0"))
         (rule "elimGcdLeq_antec" (formula "8") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_3") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
         (rule "neg_literal" (formula "8") (term "0,0,0,0,0,1,0"))
         (rule "leq_literals" (formula "8") (term "0,0"))
         (rule "concrete_or_2" (formula "8") (term "0"))
         (rule "times_zero_1" (formula "8") (term "1,0,0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0"))
         (rule "polySimp_addLiterals" (formula "8") (term "0,0,0,0"))
         (rule "add_literals" (formula "8") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,0"))
         (rule "add_literals" (formula "8") (term "1,1,0,0"))
         (rule "times_zero_1" (formula "8") (term "1,0,0"))
         (rule "add_zero_right" (formula "8") (term "0,0"))
         (rule "qeq_literals" (formula "8") (term "0"))
         (rule "concrete_or_2" (formula "8"))
         (rule "inEqSimp_exactShadow3" (formula "36") (ifseqformula "10"))
         (rule "mul_literals" (formula "36") (term "0,0"))
         (rule "polySimp_addAssoc" (formula "36") (term "0"))
         (rule "add_literals" (formula "36") (term "0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "36"))
         (rule "mul_literals" (formula "36") (term "1"))
         (rule "elimGcdGeq_antec" (formula "36") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_3") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
         (rule "polySimp_mulLiterals" (formula "36") (term "1,0,1,0"))
         (rule "leq_literals" (formula "36") (term "0,0"))
         (rule "concrete_or_2" (formula "36") (term "0"))
         (rule "times_zero_1" (formula "36") (term "1,0,0,0,0,0"))
         (rule "polySimp_addLiterals" (formula "36") (term "0,0,0,0"))
         (rule "add_literals" (formula "36") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor0b" (formula "36") (term "0,0"))
         (rule "add_literals" (formula "36") (term "1,1,0,0"))
         (rule "times_zero_1" (formula "36") (term "1,0,0"))
         (rule "add_zero_right" (formula "36") (term "0,0"))
         (rule "leq_literals" (formula "36") (term "0"))
         (rule "concrete_or_2" (formula "36"))
         (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "15"))
         (rule "polySimp_rightDist" (formula "11") (term "0,0"))
         (rule "polySimp_rightDist" (formula "11") (term "0,0,0"))
         (rule "polySimp_rightDist" (formula "11") (term "0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,0,0"))
         (rule "mul_literals" (formula "11") (term "0,0,0,0,0"))
         (rule "polySimp_addAssoc" (formula "11") (term "0"))
         (rule "polySimp_addComm1" (formula "11") (term "0,0"))
         (rule "polySimp_pullOutFactor2b" (formula "11") (term "0"))
         (rule "add_literals" (formula "11") (term "1,1,0"))
         (rule "times_zero_1" (formula "11") (term "1,0"))
         (rule "add_zero_right" (formula "11") (term "0"))
         (rule "polySimp_addComm1" (formula "11") (term "0"))
         (rule "polySimp_addComm1" (formula "11") (term "0,0"))
         (rule "add_literals" (formula "11") (term "0,0,0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "11"))
         (rule "polySimp_mulLiterals" (formula "11") (term "0"))
         (rule "polySimp_elimOne" (formula "11") (term "0"))
         (rule "inEqSimp_subsumption0" (formula "10") (ifseqformula "11"))
         (rule "inEqSimp_homoInEq0" (formula "10") (term "0"))
         (rule "polySimp_mulComm0" (formula "10") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "10") (term "1,0,0"))
         (rule "mul_literals" (formula "10") (term "0,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0"))
         (rule "polySimp_addAssoc" (formula "10") (term "0,0"))
         (rule "polySimp_addComm1" (formula "10") (term "0,0,0"))
         (rule "add_literals" (formula "10") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,0"))
         (rule "add_literals" (formula "10") (term "1,1,0,0"))
         (rule "times_zero_1" (formula "10") (term "1,0,0"))
         (rule "add_zero_right" (formula "10") (term "0,0"))
         (rule "qeq_literals" (formula "10") (term "0"))
         (rule "concrete_or_1" (formula "10"))
         (rule "true_left" (formula "10"))
         (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "24"))
         (rule "polySimp_rightDist" (formula "11") (term "0,0"))
         (rule "polySimp_addComm1" (formula "11") (term "0"))
         (rule "polySimp_rightDist" (formula "11") (term "0,0,0"))
         (rule "polySimp_addComm1" (formula "11") (term "0,0"))
         (rule "polySimp_rightDist" (formula "11") (term "0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,0,0"))
         (rule "mul_literals" (formula "11") (term "0,0,0,0,0"))
         (rule "polySimp_addComm1" (formula "11") (term "0,0,0"))
         (rule "add_literals" (formula "11") (term "0,0,0,0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "11"))
         (rule "polySimp_mulLiterals" (formula "11") (term "0"))
         (rule "polySimp_elimOne" (formula "11") (term "0"))
         (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "26"))
         (rule "polySimp_rightDist" (formula "12") (term "0,0"))
         (rule "polySimp_addComm1" (formula "12") (term "0"))
         (rule "polySimp_rightDist" (formula "12") (term "0,0,0"))
         (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,0"))
         (rule "add_literals" (formula "12") (term "1,1,0,0"))
         (rule "polySimp_elimOne" (formula "12") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "12") (term "0,0,0"))
         (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0"))
         (rule "mul_literals" (formula "12") (term "0,0,0,0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "12"))
         (rule "polySimp_mulLiterals" (formula "12") (term "0"))
         (rule "polySimp_elimOne" (formula "12") (term "0"))
         (rule "inEqSimp_exactShadow2" (formula "13") (ifseqformula "29"))
         (rule "greater_literals" (formula "13") (term "0"))
         (rule "concrete_impl_1" (formula "13"))
         (rule "polySimp_rightDist" (formula "13") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "13") (term "0,1,0,0"))
         (rule "polySimp_rightDist" (formula "13") (term "0,0,1,0,0"))
         (rule "mul_literals" (formula "13") (term "0,0,0,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,1,0,0"))
         (rule "polySimp_rightDist" (formula "13") (term "0,0"))
         (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "13") (term "0,0,0"))
         (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "13") (term "0,0,0,0"))
         (rule "mul_literals" (formula "13") (term "0,0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0,0"))
         (rule "polySimp_addAssoc" (formula "13") (term "0"))
         (rule "polySimp_addComm1" (formula "13") (term "0,0"))
         (rule "polySimp_pullOutFactor2b" (formula "13") (term "0"))
         (rule "add_literals" (formula "13") (term "1,1,0"))
         (rule "polySimp_addComm1" (formula "13") (term "0,0"))
         (rule "polySimp_addComm1" (formula "13") (term "0,0,0"))
         (rule "add_literals" (formula "13") (term "0,0,0,0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "13"))
         (rule "polySimp_mulLiterals" (formula "13") (term "0"))
         (rule "polySimp_elimOne" (formula "13") (term "0"))
         (rule "inEqSimp_exactShadow2" (formula "14") (ifseqformula "31"))
         (rule "greater_literals" (formula "14") (term "0"))
         (rule "concrete_impl_1" (formula "14"))
         (rule "polySimp_rightDist" (formula "14") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "14") (term "0,1,0,0"))
         (rule "polySimp_rightDist" (formula "14") (term "0,0,1,0,0"))
         (rule "mul_literals" (formula "14") (term "0,0,0,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,1,0,0"))
         (rule "polySimp_rightDist" (formula "14") (term "0,0"))
         (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "14") (term "0,0,0"))
         (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "14") (term "0,0,0,0"))
         (rule "mul_literals" (formula "14") (term "0,0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0,0"))
         (rule "polySimp_addAssoc" (formula "14") (term "0"))
         (rule "polySimp_addComm1" (formula "14") (term "0,0"))
         (rule "polySimp_pullOutFactor2b" (formula "14") (term "0"))
         (rule "add_literals" (formula "14") (term "1,1,0"))
         (rule "polySimp_addAssoc" (formula "14") (term "0,0"))
         (rule "polySimp_addComm1" (formula "14") (term "0,0,0"))
         (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,0"))
         (rule "add_literals" (formula "14") (term "1,1,0,0"))
         (rule "times_zero_1" (formula "14") (term "1,0,0"))
         (rule "add_zero_right" (formula "14") (term "0,0"))
         (rule "polySimp_addComm1" (formula "14") (term "0,0"))
         (rule "add_literals" (formula "14") (term "0,0,0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "14"))
         (rule "polySimp_mulLiterals" (formula "14") (term "0"))
         (rule "polySimp_elimOne" (formula "14") (term "0"))
         (rule "inEqSimp_antiSymm" (formula "40") (ifseqformula "8"))
         (rule "applyEq" (formula "10") (term "0,1,1") (ifseqformula "40"))
         (rule "times_zero_2" (formula "10") (term "1,1"))
         (rule "add_zero_right" (formula "10") (term "1"))
         (rule "applyEq" (formula "14") (term "0,1,1") (ifseqformula "40"))
         (rule "mul_literals" (formula "14") (term "1,1"))
         (rule "add_zero_right" (formula "14") (term "1"))
         (rule "applyEq" (formula "41") (term "0") (ifseqformula "40"))
         (rule "qeq_literals" (formula "41"))
         (rule "true_left" (formula "41"))
         (rule "applyEq" (formula "8") (term "0") (ifseqformula "40"))
         (rule "leq_literals" (formula "8"))
         (rule "true_left" (formula "8"))
         (rule "applyEqRigid" (formula "8") (term "0,1,1") (ifseqformula "39"))
         (rule "times_zero_2" (formula "8") (term "1,1"))
         (rule "add_zero_right" (formula "8") (term "1"))
         (rule "applyEq" (formula "11") (term "0,1,0,1") (ifseqformula "39"))
         (rule "times_zero_2" (formula "11") (term "1,0,1"))
         (rule "add_zero_right" (formula "11") (term "0,1"))
         (rule "applyEqRigid" (formula "12") (term "0,1,0,1") (ifseqformula "39"))
         (rule "times_zero_2" (formula "12") (term "1,0,1"))
         (rule "add_zero_right" (formula "12") (term "0,1"))
         (rule "applyEqRigid" (formula "7") (term "1") (ifseqformula "39"))
         (rule "applyEqRigid" (formula "10") (term "0,1,0,1") (ifseqformula "39"))
         (rule "times_zero_2" (formula "10") (term "1,0,1"))
         (rule "add_zero_right" (formula "10") (term "0,1"))
         (rule "applyEq" (formula "14") (term "0,1,0,0,1") (ifseqformula "39"))
         (rule "times_zero_2" (formula "14") (term "1,0,0,1"))
         (rule "add_zero_right" (formula "14") (term "0,0,1"))
         (rule "inEqSimp_contradInEq0" (formula "23") (ifseqformula "13"))
         (rule "qeq_literals" (formula "23") (term "0"))
         (rule "concrete_and_2" (formula "23"))
         (rule "closeFalse" (formula "23"))
      )
   )
   (branch "CUT: self.a.length >= 120 FALSE"
      (rule "concrete_and_2" (formula "25") (term "0"))
      (rule "concrete_impl_2" (formula "25"))
      (rule "true_left" (formula "25"))
      (rule "inEqSimp_geqRight" (formula "41"))
      (rule "mul_literals" (formula "1") (term "1,0,0"))
      (rule "add_literals" (formula "1") (term "0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "1"))
      (rule "mul_literals" (formula "1") (term "1"))
      (rule "replace_known_left" (formula "25") (term "0") (ifseqformula "1"))
      (rule "concrete_impl_1" (formula "25"))
      (rule "applyEq" (formula "27") (term "0,1") (ifseqformula "25"))
      (rule "equal_literals" (formula "27") (term "1"))
      (rule "concrete_impl_3" (formula "27"))
      (rule "notLeft" (formula "27"))
      (rule "inEqSimp_geqRight" (formula "41"))
      (rule "mul_literals" (formula "1") (term "1,0,0"))
      (rule "add_literals" (formula "1") (term "0,0"))
      (rule "applyEq" (formula "31") (term "1") (ifseqformula "26"))
      (rule "applyEq" (formula "29") (term "0") (ifseqformula "26"))
      (rule "qeq_literals" (formula "29"))
      (rule "true_left" (formula "29"))
      (rule "applyEq" (formula "27") (term "0,1") (ifseqformula "26"))
      (rule "equal_literals" (formula "27") (term "1"))
      (rule "concrete_impl_3" (formula "27"))
      (rule "notLeft" (formula "27"))
      (rule "applyEq" (formula "25") (term "1") (ifseqformula "26"))
      (rule "inEqSimp_sepPosMonomial0" (formula "1"))
      (rule "mul_literals" (formula "1") (term "1"))
      (rule "replace_known_left" (formula "40") (term "1") (ifseqformula "1"))
      (rule "concrete_and_3" (formula "40"))
      (rule "inEqSimp_geqRight" (formula "40"))
      (rule "mul_literals" (formula "1") (term "1,0,0"))
      (rule "add_literals" (formula "1") (term "0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "1"))
      (rule "mul_literals" (formula "1") (term "1"))
      (rule "inEqSimp_subsumption0" (formula "21") (ifseqformula "2"))
      (rule "leq_literals" (formula "21") (term "0"))
      (rule "concrete_or_1" (formula "21"))
      (rule "true_left" (formula "21"))
      (rule "inEqSimp_subsumption0" (formula "2") (ifseqformula "3"))
      (rule "leq_literals" (formula "2") (term "0"))
      (rule "concrete_or_1" (formula "2"))
      (rule "true_left" (formula "2"))
      (rule "inEqSimp_subsumption0" (formula "1") (ifseqformula "2"))
      (rule "leq_literals" (formula "1") (term "0"))
      (rule "concrete_or_1" (formula "1"))
      (rule "true_left" (formula "1"))
      (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "1"))
      (rule "polySimp_rightDist" (formula "22") (term "0,0"))
      (rule "polySimp_mulComm0" (formula "22") (term "0,0,0"))
      (rule "polySimp_addComm1" (formula "22") (term "0"))
      (rule "polySimp_addComm0" (formula "22") (term "0,0"))
      (rule "inEqSimp_sepNegMonomial1" (formula "22"))
      (rule "polySimp_mulLiterals" (formula "22") (term "0"))
      (rule "polySimp_elimOne" (formula "22") (term "0"))
      (rule "inEqSimp_subsumption0" (formula "19") (ifseqformula "22"))
      (rule "inEqSimp_homoInEq0" (formula "19") (term "0"))
      (rule "polySimp_mulComm0" (formula "19") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "19") (term "1,0,0"))
      (rule "mul_literals" (formula "19") (term "0,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0"))
      (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0"))
      (rule "polySimp_addAssoc" (formula "19") (term "0,0"))
      (rule "polySimp_addComm1" (formula "19") (term "0,0,0"))
      (rule "add_literals" (formula "19") (term "0,0,0,0"))
      (rule "polySimp_pullOutFactor2b" (formula "19") (term "0,0"))
      (rule "add_literals" (formula "19") (term "1,1,0,0"))
      (rule "times_zero_1" (formula "19") (term "1,0,0"))
      (rule "add_zero_right" (formula "19") (term "0,0"))
      (rule "qeq_literals" (formula "19") (term "0"))
      (rule "concrete_or_1" (formula "19"))
      (rule "true_left" (formula "19"))
      (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "21"))
      (rule "polySimp_rightDist" (formula "17") (term "0,0"))
      (rule "polySimp_mulAssoc" (formula "17") (term "0,0,0"))
      (rule "polySimp_mulComm0" (formula "17") (term "0,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "17") (term "0,0,0"))
      (rule "polySimp_elimOne" (formula "17") (term "0,0,0"))
      (rule "polySimp_addAssoc" (formula "17") (term "0"))
      (rule "polySimp_addComm1" (formula "17") (term "0,0"))
      (rule "polySimp_pullOutFactor0b" (formula "17") (term "0"))
      (rule "add_literals" (formula "17") (term "1,1,0"))
      (rule "polySimp_addComm0" (formula "17") (term "0,0"))
      (rule "inEqSimp_sepNegMonomial1" (formula "17"))
      (rule "polySimp_mulLiterals" (formula "17") (term "0"))
      (rule "inEqSimp_subsumption0" (formula "16") (ifseqformula "17"))
      (rule "inEqSimp_homoInEq0" (formula "16") (term "0"))
      (rule "polySimp_mulComm0" (formula "16") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "16") (term "1,0,0"))
      (rule "mul_literals" (formula "16") (term "0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "16") (term "0,0"))
      (rule "polySimp_addComm1" (formula "16") (term "0,0,0"))
      (rule "add_literals" (formula "16") (term "0,0,0,0"))
      (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0"))
      (rule "add_literals" (formula "16") (term "1,1,0,0"))
      (rule "times_zero_1" (formula "16") (term "1,0,0"))
      (rule "add_zero_right" (formula "16") (term "0,0"))
      (rule "qeq_literals" (formula "16") (term "0"))
      (rule "concrete_or_1" (formula "16"))
      (rule "true_left" (formula "16"))
      (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "21"))
      (rule "mul_literals" (formula "15") (term "0,0"))
      (rule "polySimp_addAssoc" (formula "15") (term "0"))
      (rule "add_literals" (formula "15") (term "0,0"))
      (rule "inEqSimp_sepNegMonomial1" (formula "15"))
      (rule "polySimp_mulLiterals" (formula "15") (term "0"))
      (rule "polySimp_elimOne" (formula "15") (term "0"))
      (rule "inEqSimp_subsumption0" (formula "14") (ifseqformula "15"))
      (rule "leq_literals" (formula "14") (term "0"))
      (rule "concrete_or_1" (formula "14"))
      (rule "true_left" (formula "14"))
      (rule "inEqSimp_exactShadow2" (formula "8") (ifseqformula "16"))
      (rule "greater_literals" (formula "8") (term "0"))
      (rule "concrete_impl_1" (formula "8"))
      (rule "mul_literals" (formula "8") (term "1,0,0"))
      (rule "mul_literals" (formula "8") (term "0,0"))
      (rule "polySimp_addAssoc" (formula "8") (term "0"))
      (rule "add_literals" (formula "8") (term "0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "8"))
      (rule "mul_literals" (formula "8") (term "1"))
      (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "12"))
      (rule "leq_literals" (formula "8") (term "0"))
      (rule "concrete_or_1" (formula "8"))
      (rule "true_left" (formula "8"))
      (rule "inEqSimp_exactShadow2" (formula "13") (ifseqformula "16"))
      (rule "greater_literals" (formula "13") (term "0"))
      (rule "concrete_impl_1" (formula "13"))
      (rule "polySimp_rightDist" (formula "13") (term "1,0,0"))
      (rule "mul_literals" (formula "13") (term "0,1,0,0"))
      (rule "polySimp_rightDist" (formula "13") (term "0,0"))
      (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0"))
      (rule "mul_literals" (formula "13") (term "0,0,0"))
      (rule "polySimp_addAssoc" (formula "13") (term "0"))
      (rule "polySimp_addComm1" (formula "13") (term "0,0"))
      (rule "add_literals" (formula "13") (term "0,0,0"))
      (rule "polySimp_pullOutFactor2b" (formula "13") (term "0"))
      (rule "add_literals" (formula "13") (term "1,1,0"))
      (rule "inEqSimp_sepNegMonomial1" (formula "13"))
      (rule "polySimp_mulLiterals" (formula "13") (term "0"))
      (rule "polySimp_elimOne" (formula "13") (term "0"))
      (rule "inEqSimp_subsumption0" (formula "12") (ifseqformula "13"))
      (rule "leq_literals" (formula "12") (term "0"))
      (rule "concrete_or_1" (formula "12"))
      (rule "true_left" (formula "12"))
      (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "14"))
      (rule "polySimp_rightDist" (formula "13") (term "0,0"))
      (rule "mul_literals" (formula "13") (term "0,0,0"))
      (rule "polySimp_addComm1" (formula "13") (term "0"))
      (rule "add_literals" (formula "13") (term "0,0"))
      (rule "inEqSimp_sepNegMonomial1" (formula "13"))
      (rule "polySimp_mulLiterals" (formula "13") (term "0"))
      (rule "polySimp_elimOne" (formula "13") (term "0"))
      (rule "arrayLengthIsAnInt" (formula "23") (term "0"))
      (rule "expand_inInt" (formula "23"))
      (rule "replace_int_MIN" (formula "23") (term "0,1"))
      (rule "replace_int_MAX" (formula "23") (term "1,0"))
      (rule "andLeft" (formula "23"))
      (rule "inEqSimp_commuteLeq" (formula "24"))
      (rule "applyEq" (formula "24") (term "0") (ifseqformula "25"))
      (rule "qeq_literals" (formula "24"))
      (rule "true_left" (formula "24"))
      (rule "applyEq" (formula "23") (term "0") (ifseqformula "24"))
      (rule "leq_literals" (formula "23"))
      (rule "true_left" (formula "23"))
      (rule "arrayLengthNotNegative" (formula "23") (term "0"))
      (rule "applyEq" (formula "23") (term "0") (ifseqformula "24"))
      (rule "qeq_literals" (formula "23"))
      (rule "true_left" (formula "23"))
      (rule "div_axiom" (formula "2") (term "1") (inst "quotient=quotient_0"))
      (rule "equal_literals" (formula "2") (term "0"))
      (rule "concrete_or_2" (formula "2"))
      (rule "qeq_literals" (formula "2") (term "0,1"))
      (rule "ifthenelse_true_for" (formula "2") (term "1"))
      (rule "mul_literals" (formula "2") (term "1,1,1"))
      (rule "andLeft" (formula "2"))
      (rule "andLeft" (formula "2"))
      (rule "polySimp_addComm1" (formula "4") (term "1"))
      (rule "add_literals" (formula "4") (term "0,1"))
      (rule "inEqSimp_commuteLeq" (formula "3"))
      (rule "inEqSimp_homoInEq1" (formula "4"))
      (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
      (rule "polySimp_addComm1" (formula "4") (term "0"))
      (rule "applyEq" (formula "6") (term "1,0,0") (ifseqformula "2"))
      (rule "applyEq" (formula "5") (term "1") (ifseqformula "2"))
      (rule "mod_axiom" (formula "6") (term "0"))
      (rule "polySimp_mulLiterals" (formula "6") (term "1,0"))
      (rule "inEqSimp_homoInEq0" (formula "6"))
      (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
      (rule "polySimp_rightDist" (formula "6") (term "1,0"))
      (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0"))
      (rule "polySimp_rightDist" (formula "6") (term "0,1,0"))
      (rule "mul_literals" (formula "6") (term "0,0,1,0"))
      (rule "polySimp_addAssoc" (formula "6") (term "0"))
      (rule "polySimp_addComm1" (formula "6") (term "0,0"))
      (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
      (rule "polySimp_addAssoc" (formula "6") (term "0,0,0,0"))
      (rule "add_literals" (formula "6") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "4"))
      (rule "polySimp_mulComm0" (formula "4") (term "1"))
      (rule "polySimp_rightDist" (formula "4") (term "1"))
      (rule "mul_literals" (formula "4") (term "0,1"))
      (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
      (rule "inEqSimp_sepPosMonomial1" (formula "6"))
      (rule "polySimp_mulComm0" (formula "6") (term "1"))
      (rule "polySimp_rightDist" (formula "6") (term "1"))
      (rule "polySimp_rightDist" (formula "6") (term "0,1"))
      (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1"))
      (rule "polySimp_elimOne" (formula "6") (term "1,0,1"))
      (rule "polySimp_rightDist" (formula "6") (term "0,0,1"))
      (rule "mul_literals" (formula "6") (term "0,0,0,1"))
      (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0,1"))
      (rule "polySimp_elimOne" (formula "6") (term "1,0,0,1"))
      (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "4"))
      (rule "polySimp_rightDist" (formula "25") (term "0,0"))
      (rule "polySimp_mulComm0" (formula "25") (term "0,0,0"))
      (rule "polySimp_addComm1" (formula "25") (term "0"))
      (rule "polySimp_addComm0" (formula "25") (term "0,0"))
      (rule "inEqSimp_sepNegMonomial1" (formula "25"))
      (rule "polySimp_mulLiterals" (formula "25") (term "0"))
      (rule "polySimp_elimOne" (formula "25") (term "0"))
      (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "1"))
      (rule "polySimp_mulAssoc" (formula "3") (term "0,0"))
      (rule "polySimp_mulComm0" (formula "3") (term "0,0,0"))
      (rule "polySimp_mulLiterals" (formula "3") (term "0,0"))
      (rule "polySimp_addComm0" (formula "3") (term "0"))
      (rule "inEqSimp_sepNegMonomial1" (formula "3"))
      (rule "polySimp_mulLiterals" (formula "3") (term "0"))
      (rule "elimGcdLeq_antec" (formula "3") (inst "elimGcdRightDiv=Z(9(5(#)))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(2(#))"))
      (rule "leq_literals" (formula "3") (term "0,0"))
      (rule "concrete_or_2" (formula "3") (term "0"))
      (rule "neg_literal" (formula "3") (term "0,0,0,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
      (rule "mul_literals" (formula "3") (term "1,0,0,0,0,0"))
      (rule "polySimp_addLiterals" (formula "3") (term "0,0,0,0"))
      (rule "add_literals" (formula "3") (term "0,0,0,0"))
      (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
      (rule "add_literals" (formula "3") (term "1,1,0,0"))
      (rule "times_zero_1" (formula "3") (term "1,0,0"))
      (rule "add_zero_right" (formula "3") (term "0,0"))
      (rule "qeq_literals" (formula "3") (term "0"))
      (rule "concrete_or_2" (formula "3"))
      (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "5"))
      (rule "times_zero_1" (formula "23") (term "0,0"))
      (rule "add_zero_left" (formula "23") (term "0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "23"))
      (rule "mul_literals" (formula "23") (term "1"))
      (rule "elimGcdGeq_antec" (formula "23") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(2(#))"))
      (rule "leq_literals" (formula "23") (term "0,0"))
      (rule "concrete_or_2" (formula "23") (term "0"))
      (rule "times_zero_1" (formula "23") (term "1,0,0,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0"))
      (rule "polySimp_addLiterals" (formula "23") (term "0,0,0,0"))
      (rule "add_literals" (formula "23") (term "0,0,0,0"))
      (rule "polySimp_pullOutFactor0b" (formula "23") (term "0,0"))
      (rule "add_literals" (formula "23") (term "1,1,0,0"))
      (rule "times_zero_1" (formula "23") (term "1,0,0"))
      (rule "add_zero_right" (formula "23") (term "0,0"))
      (rule "leq_literals" (formula "23") (term "0"))
      (rule "concrete_or_2" (formula "23"))
      (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "27"))
      (rule "polySimp_rightDist" (formula "21") (term "0,0"))
      (rule "polySimp_mulAssoc" (formula "21") (term "0,0,0"))
      (rule "polySimp_mulComm0" (formula "21") (term "0,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "21") (term "0,0,0"))
      (rule "polySimp_elimOne" (formula "21") (term "0,0,0"))
      (rule "polySimp_addAssoc" (formula "21") (term "0"))
      (rule "polySimp_addComm1" (formula "21") (term "0,0"))
      (rule "polySimp_pullOutFactor0b" (formula "21") (term "0"))
      (rule "add_literals" (formula "21") (term "1,1,0"))
      (rule "polySimp_addComm0" (formula "21") (term "0,0"))
      (rule "inEqSimp_sepNegMonomial1" (formula "21"))
      (rule "polySimp_mulLiterals" (formula "21") (term "0"))
      (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "28"))
      (rule "mul_literals" (formula "19") (term "0,0"))
      (rule "polySimp_addAssoc" (formula "19") (term "0"))
      (rule "polySimp_addAssoc" (formula "19") (term "0,0"))
      (rule "add_literals" (formula "19") (term "0,0,0"))
      (rule "add_zero_left" (formula "19") (term "0,0"))
      (rule "inEqSimp_sepNegMonomial1" (formula "19"))
      (rule "polySimp_mulLiterals" (formula "19") (term "0"))
      (rule "polySimp_elimOne" (formula "19") (term "0"))
      (rule "inEqSimp_exactShadow2" (formula "12") (ifseqformula "22"))
      (rule "mul_literals" (formula "12") (term "1,0,0,1"))
      (rule "greater_literals" (formula "12") (term "0"))
      (rule "concrete_impl_1" (formula "12"))
      (rule "mul_literals" (formula "12") (term "0,0"))
      (rule "polySimp_addAssoc" (formula "12") (term "0"))
      (rule "polySimp_addAssoc" (formula "12") (term "0,0"))
      (rule "add_literals" (formula "12") (term "0,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "12"))
      (rule "polySimp_mulComm0" (formula "12") (term "1"))
      (rule "polySimp_rightDist" (formula "12") (term "1"))
      (rule "mul_literals" (formula "12") (term "0,1"))
      (rule "polySimp_mulLiterals" (formula "12") (term "1,1"))
      (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "20"))
      (rule "polySimp_rightDist" (formula "18") (term "0,0"))
      (rule "mul_literals" (formula "18") (term "0,0,0"))
      (rule "polySimp_addComm1" (formula "18") (term "0"))
      (rule "inEqSimp_sepNegMonomial1" (formula "18"))
      (rule "polySimp_mulLiterals" (formula "18") (term "0"))
      (rule "polySimp_elimOne" (formula "18") (term "0"))
      (rule "inEqSimp_exactShadow2" (formula "19") (ifseqformula "24"))
      (rule "greater_literals" (formula "19") (term "0"))
      (rule "concrete_impl_1" (formula "19"))
      (rule "polySimp_rightDist" (formula "19") (term "1,0,0"))
      (rule "mul_literals" (formula "19") (term "0,1,0,0"))
      (rule "polySimp_rightDist" (formula "19") (term "0,0"))
      (rule "mul_literals" (formula "19") (term "0,0,0"))
      (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0"))
      (rule "polySimp_addAssoc" (formula "19") (term "0"))
      (rule "polySimp_addComm1" (formula "19") (term "0,0"))
      (rule "polySimp_pullOutFactor2b" (formula "19") (term "0"))
      (rule "add_literals" (formula "19") (term "1,1,0"))
      (rule "polySimp_addAssoc" (formula "19") (term "0,0"))
      (rule "add_literals" (formula "19") (term "0,0,0"))
      (rule "inEqSimp_sepNegMonomial1" (formula "19"))
      (rule "polySimp_mulLiterals" (formula "19") (term "0"))
      (rule "polySimp_elimOne" (formula "19") (term "0"))
      (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "21"))
      (rule "mul_literals" (formula "13") (term "0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "13"))
      (rule "mul_literals" (formula "13") (term "1"))
      (rule "inEqSimp_subsumption6" (formula "13") (ifseqformula "28"))
      (rule "greater_literals" (formula "13") (term "0,0"))
      (rule "concrete_and_1" (formula "13") (term "0"))
      (rule "times_zero_1" (formula "13") (term "1,0"))
      (rule "leq_literals" (formula "13") (term "0"))
      (rule "concrete_or_1" (formula "13"))
      (rule "true_left" (formula "13"))
      (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "18"))
      (rule "polySimp_rightDist" (formula "12") (term "0,0"))
      (rule "mul_literals" (formula "12") (term "0,0,0"))
      (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0"))
      (rule "polySimp_addAssoc" (formula "12") (term "0"))
      (rule "polySimp_addComm1" (formula "12") (term "0,0"))
      (rule "add_literals" (formula "12") (term "0,0,0"))
      (rule "polySimp_pullOutFactor0b" (formula "12") (term "0"))
      (rule "add_literals" (formula "12") (term "1,1,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "12"))
      (rule "mul_literals" (formula "12") (term "1"))
      (rule "inEqSimp_subsumption6" (formula "12") (ifseqformula "28"))
      (rule "greater_literals" (formula "12") (term "0,0"))
      (rule "concrete_and_1" (formula "12") (term "0"))
      (rule "times_zero_1" (formula "12") (term "1,0"))
      (rule "leq_literals" (formula "12") (term "0"))
      (rule "concrete_or_1" (formula "12"))
      (rule "true_left" (formula "12"))
      (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "17"))
      (rule "polySimp_rightDist" (formula "12") (term "0,0"))
      (rule "mul_literals" (formula "12") (term "0,0,0"))
      (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0"))
      (rule "polySimp_addComm1" (formula "12") (term "0"))
      (rule "add_literals" (formula "12") (term "0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "12"))
      (rule "mul_literals" (formula "12") (term "1"))
      (rule "inEqSimp_subsumption6" (formula "12") (ifseqformula "28"))
      (rule "times_zero_1" (formula "12") (term "1,1,0"))
      (rule "greater_literals" (formula "12") (term "0,0"))
      (rule "concrete_and_1" (formula "12") (term "0"))
      (rule "leq_literals" (formula "12") (term "0"))
      (rule "concrete_or_1" (formula "12"))
      (rule "true_left" (formula "12"))
      (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "18"))
      (rule "times_zero_1" (formula "16") (term "0,0"))
      (rule "add_zero_left" (formula "16") (term "0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "16"))
      (rule "mul_literals" (formula "16") (term "1"))
      (rule "elimGcdGeq_antec" (formula "16") (inst "elimGcdRightDiv=Z(1(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(2(#))"))
      (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "16") (term "1,0,1,0"))
      (rule "leq_literals" (formula "16") (term "0,0"))
      (rule "concrete_or_2" (formula "16") (term "0"))
      (rule "mul_literals" (formula "16") (term "1,0,0,0,0,0"))
      (rule "polySimp_addLiterals" (formula "16") (term "0,0,0,0"))
      (rule "add_literals" (formula "16") (term "0,0,0,0"))
      (rule "polySimp_pullOutFactor0b" (formula "16") (term "0,0"))
      (rule "add_literals" (formula "16") (term "1,1,0,0"))
      (rule "times_zero_1" (formula "16") (term "1,0,0"))
      (rule "add_zero_right" (formula "16") (term "0,0"))
      (rule "leq_literals" (formula "16") (term "0"))
      (rule "concrete_or_2" (formula "16"))
      (rule "inEqSimp_subsumption1" (formula "28") (ifseqformula "16"))
      (rule "leq_literals" (formula "28") (term "0"))
      (rule "concrete_or_1" (formula "28"))
      (rule "true_left" (formula "28"))
      (rule "arrayLengthIsAnInt" (formula "34") (term "0"))
      (rule "expand_inInt" (formula "34"))
      (rule "replace_int_MAX" (formula "34") (term "1,0"))
      (rule "replace_int_MIN" (formula "34") (term "0,1"))
      (rule "andLeft" (formula "34"))
      (rule "inEqSimp_commuteLeq" (formula "35"))
      (rule "applyEq" (formula "35") (term "0") (ifseqformula "36"))
      (rule "qeq_literals" (formula "35"))
      (rule "true_left" (formula "35"))
      (rule "applyEq" (formula "34") (term "0") (ifseqformula "35"))
      (rule "leq_literals" (formula "34"))
      (rule "true_left" (formula "34"))
      (rule "arrayLengthNotNegative" (formula "34") (term "0"))
      (rule "applyEq" (formula "34") (term "0") (ifseqformula "35"))
      (rule "qeq_literals" (formula "34"))
      (rule "true_left" (formula "34"))
      (rule "div_axiom" (formula "7") (term "0,0") (inst "quotient=quotient_1"))
      (rule "mul_literals" (formula "7") (term "1,1,1,1,1"))
      (rule "qeq_literals" (formula "7") (term "0,1,1"))
      (rule "ifthenelse_true_for" (formula "7") (term "1,1"))
      (rule "equal_literals" (formula "7") (term "0"))
      (rule "concrete_or_2" (formula "7"))
      (rule "andLeft" (formula "7"))
      (rule "andLeft" (formula "7"))
      (rule "polySimp_addAssoc" (formula "9") (term "0,1"))
      (rule "add_literals" (formula "9") (term "0,0,1"))
      (rule "polySimp_addComm1" (formula "9") (term "1"))
      (rule "add_literals" (formula "9") (term "0,1"))
      (rule "inEqSimp_homoInEq0" (formula "8"))
      (rule "polySimp_mulLiterals" (formula "8") (term "1,0"))
      (rule "polySimp_addComm1" (formula "8") (term "0"))
      (rule "inEqSimp_homoInEq1" (formula "9"))
      (rule "polySimp_mulLiterals" (formula "9") (term "1,0"))
      (rule "polySimp_addComm1" (formula "9") (term "0"))
      (rule "applyEq" (formula "10") (term "0,0") (ifseqformula "7"))
      (rule "inEqSimp_homoInEq1" (formula "10"))
      (rule "polySimp_mulLiterals" (formula "10") (term "1,0"))
      (rule "polySimp_addComm1" (formula "10") (term "0"))
      (rule "polySimp_addComm1" (formula "10") (term "0,0"))
      (rule "polySimp_addComm1" (formula "10") (term "0,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "8"))
      (rule "polySimp_mulComm0" (formula "8") (term "1"))
      (rule "polySimp_rightDist" (formula "8") (term "1"))
      (rule "mul_literals" (formula "8") (term "0,1"))
      (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
      (rule "inEqSimp_sepPosMonomial0" (formula "9"))
      (rule "polySimp_mulComm0" (formula "9") (term "1"))
      (rule "polySimp_rightDist" (formula "9") (term "1"))
      (rule "mul_literals" (formula "9") (term "0,1"))
      (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
      (rule "inEqSimp_sepNegMonomial0" (formula "10"))
      (rule "polySimp_mulLiterals" (formula "10") (term "0"))
      (rule "polySimp_elimOne" (formula "10") (term "0"))
      (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "3"))
      (rule "polySimp_rightDist" (formula "8") (term "0,0"))
      (rule "mul_literals" (formula "8") (term "0,0,0"))
      (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0"))
      (rule "polySimp_addComm1" (formula "8") (term "0"))
      (rule "add_literals" (formula "8") (term "0,0"))
      (rule "inEqSimp_sepNegMonomial1" (formula "8"))
      (rule "polySimp_mulLiterals" (formula "8") (term "0"))
      (rule "elimGcdLeq_antec" (formula "8") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
      (rule "leq_literals" (formula "8") (term "0,0"))
      (rule "concrete_or_2" (formula "8") (term "0"))
      (rule "neg_literal" (formula "8") (term "0,0,0,0,0,0"))
      (rule "times_zero_1" (formula "8") (term "1,0,0,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0"))
      (rule "polySimp_addLiterals" (formula "8") (term "0,0,0,0"))
      (rule "add_literals" (formula "8") (term "0,0,0,0"))
      (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,0"))
      (rule "add_literals" (formula "8") (term "1,1,0,0"))
      (rule "times_zero_1" (formula "8") (term "1,0,0"))
      (rule "add_zero_right" (formula "8") (term "0,0"))
      (rule "qeq_literals" (formula "8") (term "0"))
      (rule "concrete_or_2" (formula "8"))
      (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "15"))
      (rule "polySimp_rightDist" (formula "11") (term "0,0"))
      (rule "polySimp_rightDist" (formula "11") (term "0,0,0"))
      (rule "polySimp_rightDist" (formula "11") (term "0,0,0,0"))
      (rule "mul_literals" (formula "11") (term "0,0,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,0,0"))
      (rule "polySimp_addAssoc" (formula "11") (term "0"))
      (rule "polySimp_addComm1" (formula "11") (term "0,0"))
      (rule "polySimp_pullOutFactor2b" (formula "11") (term "0"))
      (rule "add_literals" (formula "11") (term "1,1,0"))
      (rule "times_zero_1" (formula "11") (term "1,0"))
      (rule "add_zero_right" (formula "11") (term "0"))
      (rule "polySimp_addComm1" (formula "11") (term "0"))
      (rule "polySimp_addComm1" (formula "11") (term "0,0"))
      (rule "add_literals" (formula "11") (term "0,0,0"))
      (rule "inEqSimp_sepNegMonomial1" (formula "11"))
      (rule "polySimp_mulLiterals" (formula "11") (term "0"))
      (rule "polySimp_elimOne" (formula "11") (term "0"))
      (rule "inEqSimp_subsumption0" (formula "10") (ifseqformula "11"))
      (rule "inEqSimp_homoInEq0" (formula "10") (term "0"))
      (rule "polySimp_mulComm0" (formula "10") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "10") (term "1,0,0"))
      (rule "mul_literals" (formula "10") (term "0,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0"))
      (rule "polySimp_addAssoc" (formula "10") (term "0,0"))
      (rule "polySimp_addComm1" (formula "10") (term "0,0,0"))
      (rule "add_literals" (formula "10") (term "0,0,0,0"))
      (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,0"))
      (rule "add_literals" (formula "10") (term "1,1,0,0"))
      (rule "times_zero_1" (formula "10") (term "1,0,0"))
      (rule "add_zero_right" (formula "10") (term "0,0"))
      (rule "qeq_literals" (formula "10") (term "0"))
      (rule "concrete_or_1" (formula "10"))
      (rule "true_left" (formula "10"))
      (rule "inEqSimp_exactShadow2" (formula "11") (ifseqformula "28"))
      (rule "greater_literals" (formula "11") (term "0"))
      (rule "concrete_impl_1" (formula "11"))
      (rule "polySimp_rightDist" (formula "11") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "11") (term "0,1,0,0"))
      (rule "polySimp_rightDist" (formula "11") (term "0,0,1,0,0"))
      (rule "mul_literals" (formula "11") (term "0,0,0,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,1,0,0"))
      (rule "polySimp_rightDist" (formula "11") (term "0,0"))
      (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "11") (term "0,0,0"))
      (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,0"))
      (rule "polySimp_rightDist" (formula "11") (term "0,0,0,0"))
      (rule "mul_literals" (formula "11") (term "0,0,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,0,0"))
      (rule "polySimp_addAssoc" (formula "11") (term "0"))
      (rule "polySimp_addComm1" (formula "11") (term "0,0"))
      (rule "polySimp_pullOutFactor2b" (formula "11") (term "0"))
      (rule "add_literals" (formula "11") (term "1,1,0"))
      (rule "polySimp_addComm1" (formula "11") (term "0,0"))
      (rule "polySimp_addComm1" (formula "11") (term "0,0,0"))
      (rule "add_literals" (formula "11") (term "0,0,0,0"))
      (rule "inEqSimp_sepNegMonomial1" (formula "11"))
      (rule "polySimp_mulLiterals" (formula "11") (term "0"))
      (rule "polySimp_elimOne" (formula "11") (term "0"))
      (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "27"))
      (rule "polySimp_rightDist" (formula "12") (term "0,0"))
      (rule "polySimp_addComm1" (formula "12") (term "0"))
      (rule "polySimp_rightDist" (formula "12") (term "0,0,0"))
      (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,0"))
      (rule "add_literals" (formula "12") (term "1,1,0,0"))
      (rule "polySimp_elimOne" (formula "12") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "12") (term "0,0,0"))
      (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0"))
      (rule "mul_literals" (formula "12") (term "0,0,0,0"))
      (rule "inEqSimp_sepNegMonomial1" (formula "12"))
      (rule "polySimp_mulLiterals" (formula "12") (term "0"))
      (rule "polySimp_elimOne" (formula "12") (term "0"))
      (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "27"))
      (rule "polySimp_rightDist" (formula "13") (term "0,0"))
      (rule "polySimp_addComm1" (formula "13") (term "0"))
      (rule "polySimp_rightDist" (formula "13") (term "0,0,0"))
      (rule "polySimp_addComm1" (formula "13") (term "0,0"))
      (rule "polySimp_rightDist" (formula "13") (term "0,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0,0"))
      (rule "mul_literals" (formula "13") (term "0,0,0,0,0"))
      (rule "polySimp_addComm1" (formula "13") (term "0,0,0"))
      (rule "add_literals" (formula "13") (term "0,0,0,0"))
      (rule "inEqSimp_sepNegMonomial1" (formula "13"))
      (rule "polySimp_mulLiterals" (formula "13") (term "0"))
      (rule "polySimp_elimOne" (formula "13") (term "0"))
      (rule "inEqSimp_exactShadow2" (formula "14") (ifseqformula "32"))
      (rule "greater_literals" (formula "14") (term "0"))
      (rule "concrete_impl_1" (formula "14"))
      (rule "polySimp_rightDist" (formula "14") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "14") (term "0,1,0,0"))
      (rule "polySimp_rightDist" (formula "14") (term "0,0,1,0,0"))
      (rule "mul_literals" (formula "14") (term "0,0,0,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,1,0,0"))
      (rule "polySimp_rightDist" (formula "14") (term "0,0"))
      (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "14") (term "0,0,0"))
      (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0"))
      (rule "polySimp_rightDist" (formula "14") (term "0,0,0,0"))
      (rule "mul_literals" (formula "14") (term "0,0,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0,0"))
      (rule "polySimp_addAssoc" (formula "14") (term "0"))
      (rule "polySimp_addComm1" (formula "14") (term "0,0"))
      (rule "polySimp_pullOutFactor2b" (formula "14") (term "0"))
      (rule "add_literals" (formula "14") (term "1,1,0"))
      (rule "polySimp_addAssoc" (formula "14") (term "0,0"))
      (rule "polySimp_addComm1" (formula "14") (term "0,0,0"))
      (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,0"))
      (rule "add_literals" (formula "14") (term "1,1,0,0"))
      (rule "times_zero_1" (formula "14") (term "1,0,0"))
      (rule "add_zero_right" (formula "14") (term "0,0"))
      (rule "polySimp_addComm1" (formula "14") (term "0,0"))
      (rule "add_literals" (formula "14") (term "0,0,0"))
      (rule "inEqSimp_sepNegMonomial1" (formula "14"))
      (rule "polySimp_mulLiterals" (formula "14") (term "0"))
      (rule "polySimp_elimOne" (formula "14") (term "0"))
      (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "14"))
      (rule "times_zero_1" (formula "25") (term "0,0"))
      (rule "add_zero_left" (formula "25") (term "0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "25"))
      (rule "mul_literals" (formula "25") (term "1"))
      (rule "inEqSimp_contradInEq3" (formula "25") (ifseqformula "8"))
      (rule "times_zero_1" (formula "25") (term "0,1,0"))
      (rule "greater_literals" (formula "25") (term "0,0"))
      (rule "concrete_impl_1" (formula "25") (term "0"))
      (rule "qeq_literals" (formula "25") (term "0"))
      (rule "concrete_and_2" (formula "25"))
      (rule "closeFalse" (formula "25"))
   )
)
)

}
