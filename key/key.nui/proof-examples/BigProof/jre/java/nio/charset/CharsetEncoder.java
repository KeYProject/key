/* This file has been generated by Stubmaker (de.uka.ilkd.stubmaker)
 * Date: Wed Nov 26 11:26:00 CET 2014
 */
package java.nio.charset;

public abstract class CharsetEncoder extends java.lang.Object
{
   final static boolean $assertionsDisabled;


   /*@ requires true; ensures true; assignable \everything; */
   protected CharsetEncoder(java.nio.charset.Charset arg0, float arg1, float arg2, byte[] arg3);

   /*@ requires true; ensures true; assignable \everything; */
   protected CharsetEncoder(java.nio.charset.Charset arg0, float arg1, float arg2);

   /*@ requires true; ensures true; assignable \everything; */
   public final java.nio.charset.Charset charset();

   /*@ requires true; ensures true; assignable \everything; */
   public final byte[] replacement();

   /*@ requires true; ensures true; assignable \everything; */
   public final java.nio.charset.CharsetEncoder replaceWith(byte[] arg0);

   /*@ requires true; ensures true; assignable \everything; */
   protected void implReplaceWith(byte[] arg0);

   /*@ requires true; ensures true; assignable \everything; */
   public boolean isLegalReplacement(byte[] arg0);

   /*@ requires true; ensures true; assignable \everything; */
   public java.nio.charset.CodingErrorAction malformedInputAction();

   /*@ requires true; ensures true; assignable \everything; */
   public final java.nio.charset.CharsetEncoder onMalformedInput(java.nio.charset.CodingErrorAction arg0);

   /*@ requires true; ensures true; assignable \everything; */
   protected void implOnMalformedInput(java.nio.charset.CodingErrorAction arg0);

   /*@ requires true; ensures true; assignable \everything; */
   public java.nio.charset.CodingErrorAction unmappableCharacterAction();

   /*@ requires true; ensures true; assignable \everything; */
   public final java.nio.charset.CharsetEncoder onUnmappableCharacter(java.nio.charset.CodingErrorAction arg0);

   /*@ requires true; ensures true; assignable \everything; */
   protected void implOnUnmappableCharacter(java.nio.charset.CodingErrorAction arg0);

   /*@ requires true; ensures true; assignable \everything; */
   public final float averageBytesPerChar();

   /*@ requires true; ensures true; assignable \everything; */
   public final float maxBytesPerChar();

   /*@ requires true; ensures true; assignable \everything; */
   public final java.nio.charset.CoderResult encode(java.nio.CharBuffer arg0, java.nio.ByteBuffer arg1, boolean arg2);

   /*@ requires true; ensures true; assignable \everything; */
   public final java.nio.charset.CoderResult flush(java.nio.ByteBuffer arg0);

   /*@ requires true; ensures true; assignable \everything; */
   protected java.nio.charset.CoderResult implFlush(java.nio.ByteBuffer arg0);

   /*@ requires true; ensures true; assignable \everything; */
   public final java.nio.charset.CharsetEncoder reset();

   /*@ requires true; ensures true; assignable \everything; */
   protected void implReset();

   /*@ requires true; ensures true; assignable \everything; */
   protected abstract java.nio.charset.CoderResult encodeLoop(java.nio.CharBuffer arg0, java.nio.ByteBuffer arg1);

   /*@ requires true; ensures true; assignable \everything; signals (java.nio.charset.CharacterCodingException e) true; */
   public final java.nio.ByteBuffer encode(java.nio.CharBuffer arg0) throws java.nio.charset.CharacterCodingException;

   /*@ requires true; ensures true; assignable \everything; */
   public boolean canEncode(char arg0);

   /*@ requires true; ensures true; assignable \everything; */
   public boolean canEncode(java.lang.CharSequence arg0);
}
