/* This file has been generated by Stubmaker (de.uka.ilkd.stubmaker)
 * Date: Wed Nov 26 11:26:00 CET 2014
 */
package java.util.concurrent;

public interface Future
{


   /*@ requires true; ensures true; assignable \everything; */
   public boolean cancel(boolean arg0);

   /*@ requires true; ensures true; assignable \everything; */
   public boolean isCancelled();

   /*@ requires true; ensures true; assignable \everything; */
   public boolean isDone();

   /*@ requires true; ensures true; assignable \everything; signals (java.lang.InterruptedException e) true; signals (java.util.concurrent.ExecutionException e) true; */
   public java.lang.Object get() throws java.lang.InterruptedException, java.util.concurrent.ExecutionException;

   /*@ requires true; ensures true; assignable \everything; signals (java.lang.InterruptedException e) true; signals (java.util.concurrent.ExecutionException e) true; signals (java.util.concurrent.TimeoutException e) true; */
   public java.lang.Object get(long arg0, java.util.concurrent.TimeUnit arg1) throws java.lang.InterruptedException, java.util.concurrent.ExecutionException, java.util.concurrent.TimeoutException;
}
