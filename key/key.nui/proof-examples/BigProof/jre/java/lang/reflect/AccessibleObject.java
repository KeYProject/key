/* This file has been generated by Stubmaker (de.uka.ilkd.stubmaker)
 * Date: Wed Nov 26 11:26:00 CET 2014
 */
package java.lang.reflect;

public class AccessibleObject extends java.lang.Object implements java.lang.reflect.AnnotatedElement
{
   boolean override;
   final static sun.reflect.ReflectionFactory reflectionFactory;
   java.lang.Object securityCheckCache;


   /*@ requires true; ensures true; assignable \everything; signals (java.lang.SecurityException e) true; */
   public static void setAccessible(java.lang.reflect.AccessibleObject[] arg0, boolean arg1) throws java.lang.SecurityException;

   /*@ requires true; ensures true; assignable \everything; signals (java.lang.SecurityException e) true; */
   public void setAccessible(boolean arg0) throws java.lang.SecurityException;

   /*@ requires true; ensures true; assignable \everything; */
   public boolean isAccessible();

   /*@ requires true; ensures true; assignable \everything; */
   protected AccessibleObject();

   /*@ requires true; ensures true; assignable \everything; */
   public java.lang.annotation.Annotation getAnnotation(java.lang.Class arg0);

   /*@ requires true; ensures true; assignable \everything; */
   public boolean isAnnotationPresent(java.lang.Class arg0);

   /*@ requires true; ensures true; assignable \everything; */
   public java.lang.annotation.Annotation[] getAnnotations();

   /*@ requires true; ensures true; assignable \everything; */
   public java.lang.annotation.Annotation[] getDeclaredAnnotations();
}
