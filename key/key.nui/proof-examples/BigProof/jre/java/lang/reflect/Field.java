/* This file has been generated by Stubmaker (de.uka.ilkd.stubmaker)
 * Date: Wed Nov 26 11:26:00 CET 2014
 */
package java.lang.reflect;

public final class Field extends java.lang.reflect.AccessibleObject implements java.lang.reflect.Member
{


   /*@ requires true; ensures true; assignable \everything; */
   public java.lang.Class getDeclaringClass();

   /*@ requires true; ensures true; assignable \everything; */
   public java.lang.String getName();

   /*@ requires true; ensures true; assignable \everything; */
   public int getModifiers();

   /*@ requires true; ensures true; assignable \everything; */
   public boolean isEnumConstant();

   /*@ requires true; ensures true; assignable \everything; */
   public boolean isSynthetic();

   /*@ requires true; ensures true; assignable \everything; */
   public java.lang.Class getType();

   /*@ requires true; ensures true; assignable \everything; */
   public java.lang.reflect.Type getGenericType();

   /*@ requires true; ensures true; assignable \everything; */
   public boolean equals(java.lang.Object arg0);

   /*@ requires true; ensures true; assignable \everything; */
   public int hashCode();

   /*@ requires true; ensures true; assignable \everything; */
   public java.lang.String toString();

   /*@ requires true; ensures true; assignable \everything; */
   public java.lang.String toGenericString();

   /*@ requires true; ensures true; assignable \everything; signals (java.lang.IllegalArgumentException e) true; signals (java.lang.IllegalAccessException e) true; */
   public java.lang.Object get(java.lang.Object arg0) throws java.lang.IllegalArgumentException, java.lang.IllegalAccessException;

   /*@ requires true; ensures true; assignable \everything; signals (java.lang.IllegalArgumentException e) true; signals (java.lang.IllegalAccessException e) true; */
   public boolean getBoolean(java.lang.Object arg0) throws java.lang.IllegalArgumentException, java.lang.IllegalAccessException;

   /*@ requires true; ensures true; assignable \everything; signals (java.lang.IllegalArgumentException e) true; signals (java.lang.IllegalAccessException e) true; */
   public byte getByte(java.lang.Object arg0) throws java.lang.IllegalArgumentException, java.lang.IllegalAccessException;

   /*@ requires true; ensures true; assignable \everything; signals (java.lang.IllegalArgumentException e) true; signals (java.lang.IllegalAccessException e) true; */
   public char getChar(java.lang.Object arg0) throws java.lang.IllegalArgumentException, java.lang.IllegalAccessException;

   /*@ requires true; ensures true; assignable \everything; signals (java.lang.IllegalArgumentException e) true; signals (java.lang.IllegalAccessException e) true; */
   public short getShort(java.lang.Object arg0) throws java.lang.IllegalArgumentException, java.lang.IllegalAccessException;

   /*@ requires true; ensures true; assignable \everything; signals (java.lang.IllegalArgumentException e) true; signals (java.lang.IllegalAccessException e) true; */
   public int getInt(java.lang.Object arg0) throws java.lang.IllegalArgumentException, java.lang.IllegalAccessException;

   /*@ requires true; ensures true; assignable \everything; signals (java.lang.IllegalArgumentException e) true; signals (java.lang.IllegalAccessException e) true; */
   public long getLong(java.lang.Object arg0) throws java.lang.IllegalArgumentException, java.lang.IllegalAccessException;

   /*@ requires true; ensures true; assignable \everything; signals (java.lang.IllegalArgumentException e) true; signals (java.lang.IllegalAccessException e) true; */
   public float getFloat(java.lang.Object arg0) throws java.lang.IllegalArgumentException, java.lang.IllegalAccessException;

   /*@ requires true; ensures true; assignable \everything; signals (java.lang.IllegalArgumentException e) true; signals (java.lang.IllegalAccessException e) true; */
   public double getDouble(java.lang.Object arg0) throws java.lang.IllegalArgumentException, java.lang.IllegalAccessException;

   /*@ requires true; ensures true; assignable \everything; signals (java.lang.IllegalArgumentException e) true; signals (java.lang.IllegalAccessException e) true; */
   public void set(java.lang.Object arg0, java.lang.Object arg1) throws java.lang.IllegalArgumentException, java.lang.IllegalAccessException;

   /*@ requires true; ensures true; assignable \everything; signals (java.lang.IllegalArgumentException e) true; signals (java.lang.IllegalAccessException e) true; */
   public void setBoolean(java.lang.Object arg0, boolean arg1) throws java.lang.IllegalArgumentException, java.lang.IllegalAccessException;

   /*@ requires true; ensures true; assignable \everything; signals (java.lang.IllegalArgumentException e) true; signals (java.lang.IllegalAccessException e) true; */
   public void setByte(java.lang.Object arg0, byte arg1) throws java.lang.IllegalArgumentException, java.lang.IllegalAccessException;

   /*@ requires true; ensures true; assignable \everything; signals (java.lang.IllegalArgumentException e) true; signals (java.lang.IllegalAccessException e) true; */
   public void setChar(java.lang.Object arg0, char arg1) throws java.lang.IllegalArgumentException, java.lang.IllegalAccessException;

   /*@ requires true; ensures true; assignable \everything; signals (java.lang.IllegalArgumentException e) true; signals (java.lang.IllegalAccessException e) true; */
   public void setShort(java.lang.Object arg0, short arg1) throws java.lang.IllegalArgumentException, java.lang.IllegalAccessException;

   /*@ requires true; ensures true; assignable \everything; signals (java.lang.IllegalArgumentException e) true; signals (java.lang.IllegalAccessException e) true; */
   public void setInt(java.lang.Object arg0, int arg1) throws java.lang.IllegalArgumentException, java.lang.IllegalAccessException;

   /*@ requires true; ensures true; assignable \everything; signals (java.lang.IllegalArgumentException e) true; signals (java.lang.IllegalAccessException e) true; */
   public void setLong(java.lang.Object arg0, long arg1) throws java.lang.IllegalArgumentException, java.lang.IllegalAccessException;

   /*@ requires true; ensures true; assignable \everything; signals (java.lang.IllegalArgumentException e) true; signals (java.lang.IllegalAccessException e) true; */
   public void setFloat(java.lang.Object arg0, float arg1) throws java.lang.IllegalArgumentException, java.lang.IllegalAccessException;

   /*@ requires true; ensures true; assignable \everything; signals (java.lang.IllegalArgumentException e) true; signals (java.lang.IllegalAccessException e) true; */
   public void setDouble(java.lang.Object arg0, double arg1) throws java.lang.IllegalArgumentException, java.lang.IllegalAccessException;

   /*@ requires true; ensures true; assignable \everything; */
   public java.lang.annotation.Annotation getAnnotation(java.lang.Class arg0);

   /*@ requires true; ensures true; assignable \everything; */
   public java.lang.annotation.Annotation[] getDeclaredAnnotations();
}
