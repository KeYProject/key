/* This file has been generated by Stubmaker (de.uka.ilkd.stubmaker)
 * Date: Wed Nov 26 11:26:00 CET 2014
 */
package java.lang;

public class ThreadGroup extends java.lang.Object implements java.lang.Thread$UncaughtExceptionHandler
{
   java.lang.String name;
   int maxPriority;
   boolean destroyed;
   boolean daemon;
   boolean vmAllowSuspension;
   int nUnstartedThreads;
   int nthreads;
   java.lang.Thread[] threads;
   int ngroups;
   java.lang.ThreadGroup[] groups;


   /*@ requires true; ensures true; assignable \everything; */
   public ThreadGroup(java.lang.String arg0);

   /*@ requires true; ensures true; assignable \everything; */
   public ThreadGroup(java.lang.ThreadGroup arg0, java.lang.String arg1);

   /*@ requires true; ensures true; assignable \everything; */
   public final java.lang.String getName();

   /*@ requires true; ensures true; assignable \everything; */
   public final java.lang.ThreadGroup getParent();

   /*@ requires true; ensures true; assignable \everything; */
   public final int getMaxPriority();

   /*@ requires true; ensures true; assignable \everything; */
   public final boolean isDaemon();

   /*@ requires true; ensures true; assignable \everything; */
   public boolean isDestroyed();

   /*@ requires true; ensures true; assignable \everything; */
   public final void setDaemon(boolean arg0);

   /*@ requires true; ensures true; assignable \everything; */
   public final void setMaxPriority(int arg0);

   /*@ requires true; ensures true; assignable \everything; */
   public final boolean parentOf(java.lang.ThreadGroup arg0);

   /*@ requires true; ensures true; assignable \everything; */
   public final void checkAccess();

   /*@ requires true; ensures true; assignable \everything; */
   public int activeCount();

   /*@ requires true; ensures true; assignable \everything; */
   public int enumerate(java.lang.Thread[] arg0);

   /*@ requires true; ensures true; assignable \everything; */
   public int enumerate(java.lang.Thread[] arg0, boolean arg1);

   /*@ requires true; ensures true; assignable \everything; */
   public int activeGroupCount();

   /*@ requires true; ensures true; assignable \everything; */
   public int enumerate(java.lang.ThreadGroup[] arg0);

   /*@ requires true; ensures true; assignable \everything; */
   public int enumerate(java.lang.ThreadGroup[] arg0, boolean arg1);

   /*@ requires true; ensures true; assignable \everything; */
   public final void stop();

   /*@ requires true; ensures true; assignable \everything; */
   public final void interrupt();

   /*@ requires true; ensures true; assignable \everything; */
   public final void suspend();

   /*@ requires true; ensures true; assignable \everything; */
   public final void resume();

   /*@ requires true; ensures true; assignable \everything; */
   public final void destroy();

   /*@ requires true; ensures true; assignable \everything; */
   public void list();

   /*@ requires true; ensures true; assignable \everything; */
   public void uncaughtException(java.lang.Thread arg0, java.lang.Throwable arg1);

   /*@ requires true; ensures true; assignable \everything; */
   public boolean allowThreadSuspension(boolean arg0);

   /*@ requires true; ensures true; assignable \everything; */
   public java.lang.String toString();
}
