<?xml version="1.0" encoding="UTF-8"?>
<start name="&lt;start&gt;" pathCondition="true" pathConditionChanged="false">
   <variable name="heapAtPre" isArrayIndex="false">
      <value name="heapAtPre {true}" typeString="Heap" valueString="heap" isValueAnObject="false" isValueUnknown="false" conditionString="true">
      </value>
   </variable>
   <methodCall name="&lt;call UnicodeTest.magic(x,y)&gt;" pathCondition="true" pathConditionChanged="false">
      <variable name="exc" isArrayIndex="false">
         <value name="exc {true}" typeString="Null" valueString="null" isValueAnObject="false" isValueUnknown="false" conditionString="true">
         </value>
      </variable>
      <branchStatement name="if (x&amp;y)" pathCondition="true" pathConditionChanged="false" blockOpened="true">
         <variable name="x" isArrayIndex="false">
            <value name="x {true}" typeString="boolean" valueString="x" isValueAnObject="false" isValueUnknown="false" conditionString="true">
            </value>
         </variable>
         <variable name="y" isArrayIndex="false">
            <value name="y {true}" typeString="boolean" valueString="y" isValueAnObject="false" isValueUnknown="false" conditionString="true">
            </value>
         </variable>
         <variable name="exc" isArrayIndex="false">
            <value name="exc {true}" typeString="Null" valueString="null" isValueAnObject="false" isValueUnknown="false" conditionString="true">
            </value>
         </variable>
         <callStackEntry path="/0"/>
         <branchCondition name="(  (x&lt;&lt;origin(&quot;requires (implicit)&quot;, &quot;[]&quot;)&gt;&gt; = TRUE)&lt;&lt;origin(&quot;requires (implicit)&quot;,&quot;[requires (implicit)]&quot;)&gt;&gt;
 &amp; (y&lt;&lt;origin(&quot;requires (implicit)&quot;, &quot;[]&quot;)&gt;&gt; = TRUE)&lt;&lt;origin(&quot;requires (implicit)&quot;,&quot;[requires (implicit)]&quot;)&gt;&gt;)&lt;&lt;origin(&quot;requires (implicit)&quot;,&quot;[requires (implicit)]&quot;)&gt;&gt;" pathCondition="(  (x&lt;&lt;origin(&quot;requires (implicit)&quot;, &quot;[]&quot;)&gt;&gt; = TRUE)&lt;&lt;origin(&quot;requires (implicit)&quot;,&quot;[requires (implicit)]&quot;)&gt;&gt;
 &amp; (y&lt;&lt;origin(&quot;requires (implicit)&quot;, &quot;[]&quot;)&gt;&gt; = TRUE)&lt;&lt;origin(&quot;requires (implicit)&quot;,&quot;[requires (implicit)]&quot;)&gt;&gt;)&lt;&lt;origin(&quot;requires (implicit)&quot;,&quot;[requires (implicit)]&quot;)&gt;&gt;" pathConditionChanged="true" branchCondition="(  (x&lt;&lt;origin(&quot;requires (implicit)&quot;, &quot;[]&quot;)&gt;&gt; = TRUE)&lt;&lt;origin(&quot;requires (implicit)&quot;,&quot;[requires (implicit)]&quot;)&gt;&gt;
 &amp; (y&lt;&lt;origin(&quot;requires (implicit)&quot;, &quot;[]&quot;)&gt;&gt; = TRUE)&lt;&lt;origin(&quot;requires (implicit)&quot;,&quot;[requires (implicit)]&quot;)&gt;&gt;)&lt;&lt;origin(&quot;requires (implicit)&quot;,&quot;[requires (implicit)]&quot;)&gt;&gt;" mergedBranchCondition="false" isBranchConditionComputed="true">
            <variable name="x" isArrayIndex="false">
               <value name="x {true}" typeString="boolean" valueString="TRUE" isValueAnObject="false" isValueUnknown="false" conditionString="true">
               </value>
            </variable>
            <variable name="y" isArrayIndex="false">
               <value name="y {true}" typeString="boolean" valueString="TRUE" isValueAnObject="false" isValueUnknown="false" conditionString="true">
               </value>
            </variable>
            <variable name="exc" isArrayIndex="false">
               <value name="exc {true}" typeString="Null" valueString="null" isValueAnObject="false" isValueUnknown="false" conditionString="true">
               </value>
            </variable>
            <variable name="x_1" isArrayIndex="false">
               <value name="x_1 {true}" typeString="boolean" valueString="TRUE" isValueAnObject="false" isValueUnknown="false" conditionString="true">
               </value>
            </variable>
            <callStackEntry path="/0"/>
            <statement name="return 1;" pathCondition="(  (x&lt;&lt;origin(&quot;requires (implicit)&quot;, &quot;[]&quot;)&gt;&gt; = TRUE)&lt;&lt;origin(&quot;requires (implicit)&quot;,&quot;[requires (implicit)]&quot;)&gt;&gt;
 &amp; (y&lt;&lt;origin(&quot;requires (implicit)&quot;, &quot;[]&quot;)&gt;&gt; = TRUE)&lt;&lt;origin(&quot;requires (implicit)&quot;,&quot;[requires (implicit)]&quot;)&gt;&gt;)&lt;&lt;origin(&quot;requires (implicit)&quot;,&quot;[requires (implicit)]&quot;)&gt;&gt;" pathConditionChanged="false">
               <variable name="x" isArrayIndex="false">
                  <value name="x {true}" typeString="boolean" valueString="TRUE" isValueAnObject="false" isValueUnknown="false" conditionString="true">
                  </value>
               </variable>
               <variable name="y" isArrayIndex="false">
                  <value name="y {true}" typeString="boolean" valueString="TRUE" isValueAnObject="false" isValueUnknown="false" conditionString="true">
                  </value>
               </variable>
               <variable name="exc" isArrayIndex="false">
                  <value name="exc {true}" typeString="Null" valueString="null" isValueAnObject="false" isValueUnknown="false" conditionString="true">
                  </value>
               </variable>
               <callStackEntry path="/0"/>
               <methodReturn name="&lt;return of magic&gt;" signature="&lt;return of UnicodeTest.magic(x,y)&gt;" pathCondition="(  (x&lt;&lt;origin(&quot;requires (implicit)&quot;, &quot;[]&quot;)&gt;&gt; = TRUE)&lt;&lt;origin(&quot;requires (implicit)&quot;,&quot;[requires (implicit)]&quot;)&gt;&gt;
 &amp; (y&lt;&lt;origin(&quot;requires (implicit)&quot;, &quot;[]&quot;)&gt;&gt; = TRUE)&lt;&lt;origin(&quot;requires (implicit)&quot;,&quot;[requires (implicit)]&quot;)&gt;&gt;)&lt;&lt;origin(&quot;requires (implicit)&quot;,&quot;[requires (implicit)]&quot;)&gt;&gt;" pathConditionChanged="false" nameIncludingReturnValue="&lt;return 1 as result of magic&gt;" signatureIncludingReturnValue="&lt;return 1 as result of UnicodeTest.magic(x,y)&gt;" isReturnValueComputed="true" methodReturnCondition="(  (x&lt;&lt;origin(&quot;requires (implicit)&quot;, &quot;[]&quot;)&gt;&gt; = TRUE)&lt;&lt;origin(&quot;requires (implicit)&quot;,&quot;[requires (implicit)]&quot;)&gt;&gt;
 &amp; (y&lt;&lt;origin(&quot;requires (implicit)&quot;, &quot;[]&quot;)&gt;&gt; = TRUE)&lt;&lt;origin(&quot;requires (implicit)&quot;,&quot;[requires (implicit)]&quot;)&gt;&gt;)&lt;&lt;origin(&quot;requires (implicit)&quot;,&quot;[requires (implicit)]&quot;)&gt;&gt;">
                  <methodReturnValue name="1" returnValueString="1" hasCondition="false">
                  </methodReturnValue>
                  <variable name="x" isArrayIndex="false">
                     <value name="x {true}" typeString="boolean" valueString="TRUE" isValueAnObject="false" isValueUnknown="false" conditionString="true">
                     </value>
                  </variable>
                  <variable name="y" isArrayIndex="false">
                     <value name="y {true}" typeString="boolean" valueString="TRUE" isValueAnObject="false" isValueUnknown="false" conditionString="true">
                     </value>
                  </variable>
                  <variable name="exc" isArrayIndex="false">
                     <value name="exc {true}" typeString="Null" valueString="null" isValueAnObject="false" isValueUnknown="false" conditionString="true">
                     </value>
                  </variable>
                  <callStackEntry path="/0"/>
                  <termination name="&lt;end&gt;" pathCondition="(  (x&lt;&lt;origin(&quot;requires (implicit)&quot;, &quot;[]&quot;)&gt;&gt; = TRUE)&lt;&lt;origin(&quot;requires (implicit)&quot;,&quot;[requires (implicit)]&quot;)&gt;&gt;
 &amp; (y&lt;&lt;origin(&quot;requires (implicit)&quot;, &quot;[]&quot;)&gt;&gt; = TRUE)&lt;&lt;origin(&quot;requires (implicit)&quot;,&quot;[requires (implicit)]&quot;)&gt;&gt;)&lt;&lt;origin(&quot;requires (implicit)&quot;,&quot;[requires (implicit)]&quot;)&gt;&gt;" pathConditionChanged="false" terminationKind="NORMAL" branchVerified="true">
                     <variable name="exc" isArrayIndex="false">
                        <value name="exc {true}" typeString="Null" valueString="null" isValueAnObject="false" isValueUnknown="false" conditionString="true">
                        </value>
                     </variable>
                  </termination>
                  <callStateVariable name="x" isArrayIndex="false">
                     <value name="x {true}" typeString="boolean" valueString="TRUE" isValueAnObject="false" isValueUnknown="false" conditionString="true">
                     </value>
                  </callStateVariable>
                  <callStateVariable name="y" isArrayIndex="false">
                     <value name="y {true}" typeString="boolean" valueString="TRUE" isValueAnObject="false" isValueUnknown="false" conditionString="true">
                     </value>
                  </callStateVariable>
                  <callStateVariable name="exc" isArrayIndex="false">
                     <value name="exc {true}" typeString="Null" valueString="null" isValueAnObject="false" isValueUnknown="false" conditionString="true">
                     </value>
                  </callStateVariable>
                  <callStateVariable name="heapBefore_magic" isArrayIndex="false">
                     <value name="heapBefore_magic {true}" typeString="Heap" valueString="heap" isValueAnObject="false" isValueUnknown="false" conditionString="true">
                     </value>
                  </callStateVariable>
                  <callStateVariable name="savedHeapBefore_magic" isArrayIndex="false">
                     <value name="savedHeapBefore_magic {true}" typeString="Heap" valueString="savedHeap" isValueAnObject="false" isValueUnknown="false" conditionString="true">
                     </value>
                  </callStateVariable>
               </methodReturn>
               <completedBlockEntry path="/0/0" conditionString="(  (x&lt;&lt;origin(&quot;requires (implicit)&quot;, &quot;[]&quot;)&gt;&gt; = TRUE)&lt;&lt;origin(&quot;requires (implicit)&quot;,&quot;[requires (implicit)]&quot;)&gt;&gt;
 &amp; (y&lt;&lt;origin(&quot;requires (implicit)&quot;, &quot;[]&quot;)&gt;&gt; = TRUE)&lt;&lt;origin(&quot;requires (implicit)&quot;,&quot;[requires (implicit)]&quot;)&gt;&gt;)&lt;&lt;origin(&quot;requires (implicit)&quot;,&quot;[requires (implicit)]&quot;)&gt;&gt;"/>
            </statement>
         </branchCondition>
         <branchCondition name="  !(x&lt;&lt;origin(&quot;requires (implicit)&quot;, &quot;[]&quot;)&gt;&gt; = TRUE)&lt;&lt;origin(&quot;requires (implicit)&quot;,&quot;[requires (implicit)]&quot;)&gt;&gt;
| !(y&lt;&lt;origin(&quot;requires (implicit)&quot;, &quot;[]&quot;)&gt;&gt; = TRUE)&lt;&lt;origin(&quot;requires (implicit)&quot;,&quot;[requires (implicit)]&quot;)&gt;&gt;" pathCondition="!(  (y&lt;&lt;origin(&quot;requires (implicit)&quot;, &quot;[]&quot;)&gt;&gt; = TRUE)&lt;&lt;origin(&quot;requires (implicit)&quot;,&quot;[requires (implicit)]&quot;)&gt;&gt;
  &amp; (x&lt;&lt;origin(&quot;requires (implicit)&quot;, &quot;[]&quot;)&gt;&gt; = TRUE)&lt;&lt;origin(&quot;requires (implicit)&quot;,&quot;[requires (implicit)]&quot;)&gt;&gt;)" pathConditionChanged="true" branchCondition="  !(x&lt;&lt;origin(&quot;requires (implicit)&quot;, &quot;[]&quot;)&gt;&gt; = TRUE)&lt;&lt;origin(&quot;requires (implicit)&quot;,&quot;[requires (implicit)]&quot;)&gt;&gt;
| !(y&lt;&lt;origin(&quot;requires (implicit)&quot;, &quot;[]&quot;)&gt;&gt; = TRUE)&lt;&lt;origin(&quot;requires (implicit)&quot;,&quot;[requires (implicit)]&quot;)&gt;&gt;" mergedBranchCondition="false" isBranchConditionComputed="true">
            <variable name="x" isArrayIndex="false">
               <value name="x {(y&lt;&lt;origin(&quot;requires (implicit)&quot;, &quot;[]&quot;)&gt;&gt; = TRUE)&lt;&lt;origin(&quot;requires (implicit)&quot;,&quot;[requires (implicit)]&quot;)&gt;&gt;}" typeString="boolean" valueString="FALSE" isValueAnObject="false" isValueUnknown="false" conditionString="(y&lt;&lt;origin(&quot;requires (implicit)&quot;, &quot;[]&quot;)&gt;&gt; = TRUE)&lt;&lt;origin(&quot;requires (implicit)&quot;,&quot;[requires (implicit)]&quot;)&gt;&gt;">
               </value>
               <value name="x {!(y&lt;&lt;origin(&quot;requires (implicit)&quot;, &quot;[]&quot;)&gt;&gt; = TRUE)&lt;&lt;origin(&quot;requires (implicit)&quot;,&quot;[requires (implicit)]&quot;)&gt;&gt;}" typeString="boolean" valueString="x" isValueAnObject="false" isValueUnknown="false" conditionString="!(y&lt;&lt;origin(&quot;requires (implicit)&quot;, &quot;[]&quot;)&gt;&gt; = TRUE)&lt;&lt;origin(&quot;requires (implicit)&quot;,&quot;[requires (implicit)]&quot;)&gt;&gt;">
               </value>
            </variable>
            <variable name="y" isArrayIndex="false">
               <value name="y {(y&lt;&lt;origin(&quot;requires (implicit)&quot;, &quot;[]&quot;)&gt;&gt; = TRUE)&lt;&lt;origin(&quot;requires (implicit)&quot;,&quot;[requires (implicit)]&quot;)&gt;&gt;}" typeString="boolean" valueString="TRUE" isValueAnObject="false" isValueUnknown="false" conditionString="(y&lt;&lt;origin(&quot;requires (implicit)&quot;, &quot;[]&quot;)&gt;&gt; = TRUE)&lt;&lt;origin(&quot;requires (implicit)&quot;,&quot;[requires (implicit)]&quot;)&gt;&gt;">
               </value>
               <value name="y {!(y&lt;&lt;origin(&quot;requires (implicit)&quot;, &quot;[]&quot;)&gt;&gt; = TRUE)&lt;&lt;origin(&quot;requires (implicit)&quot;,&quot;[requires (implicit)]&quot;)&gt;&gt;}" typeString="boolean" valueString="FALSE" isValueAnObject="false" isValueUnknown="false" conditionString="!(y&lt;&lt;origin(&quot;requires (implicit)&quot;, &quot;[]&quot;)&gt;&gt; = TRUE)&lt;&lt;origin(&quot;requires (implicit)&quot;,&quot;[requires (implicit)]&quot;)&gt;&gt;">
               </value>
            </variable>
            <variable name="exc" isArrayIndex="false">
               <value name="exc {true}" typeString="Null" valueString="null" isValueAnObject="false" isValueUnknown="false" conditionString="true">
               </value>
            </variable>
            <variable name="x_1" isArrayIndex="false">
               <value name="x_1 {true}" typeString="boolean" valueString="FALSE" isValueAnObject="false" isValueUnknown="false" conditionString="true">
               </value>
            </variable>
            <callStackEntry path="/0"/>
            <statement name="return -1;" pathCondition="!(  (y&lt;&lt;origin(&quot;requires (implicit)&quot;, &quot;[]&quot;)&gt;&gt; = TRUE)&lt;&lt;origin(&quot;requires (implicit)&quot;,&quot;[requires (implicit)]&quot;)&gt;&gt;
  &amp; (x&lt;&lt;origin(&quot;requires (implicit)&quot;, &quot;[]&quot;)&gt;&gt; = TRUE)&lt;&lt;origin(&quot;requires (implicit)&quot;,&quot;[requires (implicit)]&quot;)&gt;&gt;)" pathConditionChanged="false">
               <variable name="x" isArrayIndex="false">
                  <value name="x {(x&lt;&lt;origin(&quot;requires (implicit)&quot;, &quot;[]&quot;)&gt;&gt; = TRUE)&lt;&lt;origin(&quot;requires (implicit)&quot;,&quot;[requires (implicit)]&quot;)&gt;&gt;}" typeString="boolean" valueString="TRUE" isValueAnObject="false" isValueUnknown="false" conditionString="(x&lt;&lt;origin(&quot;requires (implicit)&quot;, &quot;[]&quot;)&gt;&gt; = TRUE)&lt;&lt;origin(&quot;requires (implicit)&quot;,&quot;[requires (implicit)]&quot;)&gt;&gt;">
                  </value>
                  <value name="x {!(x&lt;&lt;origin(&quot;requires (implicit)&quot;, &quot;[]&quot;)&gt;&gt; = TRUE)&lt;&lt;origin(&quot;requires (implicit)&quot;,&quot;[requires (implicit)]&quot;)&gt;&gt;}" typeString="boolean" valueString="FALSE" isValueAnObject="false" isValueUnknown="false" conditionString="!(x&lt;&lt;origin(&quot;requires (implicit)&quot;, &quot;[]&quot;)&gt;&gt; = TRUE)&lt;&lt;origin(&quot;requires (implicit)&quot;,&quot;[requires (implicit)]&quot;)&gt;&gt;">
                  </value>
               </variable>
               <variable name="y" isArrayIndex="false">
                  <value name="y {(x&lt;&lt;origin(&quot;requires (implicit)&quot;, &quot;[]&quot;)&gt;&gt; = TRUE)&lt;&lt;origin(&quot;requires (implicit)&quot;,&quot;[requires (implicit)]&quot;)&gt;&gt;}" typeString="boolean" valueString="FALSE" isValueAnObject="false" isValueUnknown="false" conditionString="(x&lt;&lt;origin(&quot;requires (implicit)&quot;, &quot;[]&quot;)&gt;&gt; = TRUE)&lt;&lt;origin(&quot;requires (implicit)&quot;,&quot;[requires (implicit)]&quot;)&gt;&gt;">
                  </value>
                  <value name="y {!(x&lt;&lt;origin(&quot;requires (implicit)&quot;, &quot;[]&quot;)&gt;&gt; = TRUE)&lt;&lt;origin(&quot;requires (implicit)&quot;,&quot;[requires (implicit)]&quot;)&gt;&gt;}" typeString="boolean" valueString="y" isValueAnObject="false" isValueUnknown="false" conditionString="!(x&lt;&lt;origin(&quot;requires (implicit)&quot;, &quot;[]&quot;)&gt;&gt; = TRUE)&lt;&lt;origin(&quot;requires (implicit)&quot;,&quot;[requires (implicit)]&quot;)&gt;&gt;">
                  </value>
               </variable>
               <variable name="exc" isArrayIndex="false">
                  <value name="exc {true}" typeString="Null" valueString="null" isValueAnObject="false" isValueUnknown="false" conditionString="true">
                  </value>
               </variable>
               <callStackEntry path="/0"/>
               <methodReturn name="&lt;return of magic&gt;" signature="&lt;return of UnicodeTest.magic(x,y)&gt;" pathCondition="!(  (y&lt;&lt;origin(&quot;requires (implicit)&quot;, &quot;[]&quot;)&gt;&gt; = TRUE)&lt;&lt;origin(&quot;requires (implicit)&quot;,&quot;[requires (implicit)]&quot;)&gt;&gt;
  &amp; (x&lt;&lt;origin(&quot;requires (implicit)&quot;, &quot;[]&quot;)&gt;&gt; = TRUE)&lt;&lt;origin(&quot;requires (implicit)&quot;,&quot;[requires (implicit)]&quot;)&gt;&gt;)" pathConditionChanged="false" nameIncludingReturnValue="&lt;return -1 as result of magic&gt;" signatureIncludingReturnValue="&lt;return -1 as result of UnicodeTest.magic(x,y)&gt;" isReturnValueComputed="true" methodReturnCondition="!(  (y&lt;&lt;origin(&quot;requires (implicit)&quot;, &quot;[]&quot;)&gt;&gt; = TRUE)&lt;&lt;origin(&quot;requires (implicit)&quot;,&quot;[requires (implicit)]&quot;)&gt;&gt;
  &amp; (x&lt;&lt;origin(&quot;requires (implicit)&quot;, &quot;[]&quot;)&gt;&gt; = TRUE)&lt;&lt;origin(&quot;requires (implicit)&quot;,&quot;[requires (implicit)]&quot;)&gt;&gt;)">
                  <methodReturnValue name="-1" returnValueString="-1" hasCondition="false">
                  </methodReturnValue>
                  <variable name="x" isArrayIndex="false">
                     <value name="x {(x&lt;&lt;origin(&quot;requires (implicit)&quot;, &quot;[]&quot;)&gt;&gt; = TRUE)&lt;&lt;origin(&quot;requires (implicit)&quot;,&quot;[requires (implicit)]&quot;)&gt;&gt;}" typeString="boolean" valueString="TRUE" isValueAnObject="false" isValueUnknown="false" conditionString="(x&lt;&lt;origin(&quot;requires (implicit)&quot;, &quot;[]&quot;)&gt;&gt; = TRUE)&lt;&lt;origin(&quot;requires (implicit)&quot;,&quot;[requires (implicit)]&quot;)&gt;&gt;">
                     </value>
                     <value name="x {!(x&lt;&lt;origin(&quot;requires (implicit)&quot;, &quot;[]&quot;)&gt;&gt; = TRUE)&lt;&lt;origin(&quot;requires (implicit)&quot;,&quot;[requires (implicit)]&quot;)&gt;&gt;}" typeString="boolean" valueString="FALSE" isValueAnObject="false" isValueUnknown="false" conditionString="!(x&lt;&lt;origin(&quot;requires (implicit)&quot;, &quot;[]&quot;)&gt;&gt; = TRUE)&lt;&lt;origin(&quot;requires (implicit)&quot;,&quot;[requires (implicit)]&quot;)&gt;&gt;">
                     </value>
                  </variable>
                  <variable name="y" isArrayIndex="false">
                     <value name="y {(x&lt;&lt;origin(&quot;requires (implicit)&quot;, &quot;[]&quot;)&gt;&gt; = TRUE)&lt;&lt;origin(&quot;requires (implicit)&quot;,&quot;[requires (implicit)]&quot;)&gt;&gt;}" typeString="boolean" valueString="FALSE" isValueAnObject="false" isValueUnknown="false" conditionString="(x&lt;&lt;origin(&quot;requires (implicit)&quot;, &quot;[]&quot;)&gt;&gt; = TRUE)&lt;&lt;origin(&quot;requires (implicit)&quot;,&quot;[requires (implicit)]&quot;)&gt;&gt;">
                     </value>
                     <value name="y {!(x&lt;&lt;origin(&quot;requires (implicit)&quot;, &quot;[]&quot;)&gt;&gt; = TRUE)&lt;&lt;origin(&quot;requires (implicit)&quot;,&quot;[requires (implicit)]&quot;)&gt;&gt;}" typeString="boolean" valueString="y" isValueAnObject="false" isValueUnknown="false" conditionString="!(x&lt;&lt;origin(&quot;requires (implicit)&quot;, &quot;[]&quot;)&gt;&gt; = TRUE)&lt;&lt;origin(&quot;requires (implicit)&quot;,&quot;[requires (implicit)]&quot;)&gt;&gt;">
                     </value>
                  </variable>
                  <variable name="exc" isArrayIndex="false">
                     <value name="exc {true}" typeString="Null" valueString="null" isValueAnObject="false" isValueUnknown="false" conditionString="true">
                     </value>
                  </variable>
                  <callStackEntry path="/0"/>
                  <termination name="&lt;end&gt;" pathCondition="!(  (y&lt;&lt;origin(&quot;requires (implicit)&quot;, &quot;[]&quot;)&gt;&gt; = TRUE)&lt;&lt;origin(&quot;requires (implicit)&quot;,&quot;[requires (implicit)]&quot;)&gt;&gt;
  &amp; (x&lt;&lt;origin(&quot;requires (implicit)&quot;, &quot;[]&quot;)&gt;&gt; = TRUE)&lt;&lt;origin(&quot;requires (implicit)&quot;,&quot;[requires (implicit)]&quot;)&gt;&gt;)" pathConditionChanged="false" terminationKind="NORMAL" branchVerified="true">
                     <variable name="exc" isArrayIndex="false">
                        <value name="exc {true}" typeString="Null" valueString="null" isValueAnObject="false" isValueUnknown="false" conditionString="true">
                        </value>
                     </variable>
                  </termination>
                  <callStateVariable name="x" isArrayIndex="false">
                     <value name="x {(x&lt;&lt;origin(&quot;requires (implicit)&quot;, &quot;[]&quot;)&gt;&gt; = TRUE)&lt;&lt;origin(&quot;requires (implicit)&quot;,&quot;[requires (implicit)]&quot;)&gt;&gt;}" typeString="boolean" valueString="TRUE" isValueAnObject="false" isValueUnknown="false" conditionString="(x&lt;&lt;origin(&quot;requires (implicit)&quot;, &quot;[]&quot;)&gt;&gt; = TRUE)&lt;&lt;origin(&quot;requires (implicit)&quot;,&quot;[requires (implicit)]&quot;)&gt;&gt;">
                     </value>
                     <value name="x {!(x&lt;&lt;origin(&quot;requires (implicit)&quot;, &quot;[]&quot;)&gt;&gt; = TRUE)&lt;&lt;origin(&quot;requires (implicit)&quot;,&quot;[requires (implicit)]&quot;)&gt;&gt;}" typeString="boolean" valueString="FALSE" isValueAnObject="false" isValueUnknown="false" conditionString="!(x&lt;&lt;origin(&quot;requires (implicit)&quot;, &quot;[]&quot;)&gt;&gt; = TRUE)&lt;&lt;origin(&quot;requires (implicit)&quot;,&quot;[requires (implicit)]&quot;)&gt;&gt;">
                     </value>
                  </callStateVariable>
                  <callStateVariable name="y" isArrayIndex="false">
                     <value name="y {(x&lt;&lt;origin(&quot;requires (implicit)&quot;, &quot;[]&quot;)&gt;&gt; = TRUE)&lt;&lt;origin(&quot;requires (implicit)&quot;,&quot;[requires (implicit)]&quot;)&gt;&gt;}" typeString="boolean" valueString="FALSE" isValueAnObject="false" isValueUnknown="false" conditionString="(x&lt;&lt;origin(&quot;requires (implicit)&quot;, &quot;[]&quot;)&gt;&gt; = TRUE)&lt;&lt;origin(&quot;requires (implicit)&quot;,&quot;[requires (implicit)]&quot;)&gt;&gt;">
                     </value>
                     <value name="y {!(x&lt;&lt;origin(&quot;requires (implicit)&quot;, &quot;[]&quot;)&gt;&gt; = TRUE)&lt;&lt;origin(&quot;requires (implicit)&quot;,&quot;[requires (implicit)]&quot;)&gt;&gt;}" typeString="boolean" valueString="y" isValueAnObject="false" isValueUnknown="false" conditionString="!(x&lt;&lt;origin(&quot;requires (implicit)&quot;, &quot;[]&quot;)&gt;&gt; = TRUE)&lt;&lt;origin(&quot;requires (implicit)&quot;,&quot;[requires (implicit)]&quot;)&gt;&gt;">
                     </value>
                  </callStateVariable>
                  <callStateVariable name="exc" isArrayIndex="false">
                     <value name="exc {true}" typeString="Null" valueString="null" isValueAnObject="false" isValueUnknown="false" conditionString="true">
                     </value>
                  </callStateVariable>
                  <callStateVariable name="heapBefore_magic" isArrayIndex="false">
                     <value name="heapBefore_magic {true}" typeString="Heap" valueString="heap" isValueAnObject="false" isValueUnknown="false" conditionString="true">
                     </value>
                  </callStateVariable>
                  <callStateVariable name="savedHeapBefore_magic" isArrayIndex="false">
                     <value name="savedHeapBefore_magic {true}" typeString="Heap" valueString="savedHeap" isValueAnObject="false" isValueUnknown="false" conditionString="true">
                     </value>
                  </callStateVariable>
               </methodReturn>
               <completedBlockEntry path="/0/0" conditionString="!(  (y&lt;&lt;origin(&quot;requires (implicit)&quot;, &quot;[]&quot;)&gt;&gt; = TRUE)&lt;&lt;origin(&quot;requires (implicit)&quot;,&quot;[requires (implicit)]&quot;)&gt;&gt;
  &amp; (x&lt;&lt;origin(&quot;requires (implicit)&quot;, &quot;[]&quot;)&gt;&gt; = TRUE)&lt;&lt;origin(&quot;requires (implicit)&quot;,&quot;[requires (implicit)]&quot;)&gt;&gt;)"/>
            </statement>
         </branchCondition>
         <blockCompletionEntry path="/0/0/0/0"/>
         <blockCompletionEntry path="/0/0/1/0"/>
      </branchStatement>
      <methodReturnEntry path="/0/0/0/0/0"/>
      <methodReturnEntry path="/0/0/1/0/0"/>
   </methodCall>
   <terminationEntry path="/0/0/0/0/0/0"/>
   <terminationEntry path="/0/0/1/0/0/0"/>
</start>
