<?xml version="1.0" encoding="UTF-8"?>
<start name="&lt;start&gt;" pathCondition="true" pathConditionChanged="false">
   <methodCall name="&lt;call StaticDefaultContractTest.main()&gt;" pathCondition="true" pathConditionChanged="false">
      <operationContract name="magic() catch(exc_0)
post: !(exc_0 = null)&lt;&lt;impl&gt;&gt;
-&gt;   java.lang.Error::instance(exc_0) = TRUE
   | java.lang.RuntimeException::instance(exc_0) = TRUE
mod: allLocs
termination: diamond" pathCondition="true" pathConditionChanged="false" exceptionTerm="exc_0" preconditionComplied="true" hasNotNullCheck="false" notNullCheckComplied="false">
         <branchCondition name="equals(exc_0,null)" pathCondition="equals(exc_0,null)" pathConditionChanged="true" branchCondition="equals(exc_0,null)" mergedBranchCondition="false" isBranchConditionComputed="true" additionalBranchLabel="Post (magic)">
            <methodReturn name="&lt;return of main&gt;" signature="&lt;return of StaticDefaultContractTest.main()&gt;" pathCondition="equals(exc_0,null)" pathConditionChanged="false" isReturnValueComputed="false" methodReturnCondition="equals(exc_0,null)">
               <termination name="&lt;end&gt;" pathCondition="equals(exc_0,null)" pathConditionChanged="false" terminationKind="NORMAL" branchVerified="true">
               </termination>
            </methodReturn>
         </branchCondition>
         <branchCondition name="not(equals(exc_0,null))" pathCondition="not(equals(exc_0,null))" pathConditionChanged="true" branchCondition="not(equals(exc_0,null))" mergedBranchCondition="false" isBranchConditionComputed="true" additionalBranchLabel="Exceptional Post (magic)">
            <exceptionalMethodReturn name="&lt;throw java.lang.Throwable&gt;" signature="&lt;exceptional return of &lt;call StaticDefaultContractTest.main()&gt;&gt;" pathCondition="not(equals(exc_0,null))" pathConditionChanged="false" methodReturnCondition="not(equals(exc_0,null))">
               <termination name="&lt;uncaught java.lang.Throwable&gt;" pathCondition="not(equals(exc_0,null))" pathConditionChanged="false" terminationKind="EXCEPTIONAL" branchVerified="true">
               </termination>
            </exceptionalMethodReturn>
         </branchCondition>
      </operationContract>
      <methodReturnEntry path="/0/0/0/0"/>
      <methodReturnEntry path="/0/0/1/0"/>
   </methodCall>
   <terminationEntry path="/0/0/0/0/0"/>
   <terminationEntry path="/0/0/1/0/0"/>
</start>
