<?xml version="1.0" encoding="UTF-8"?>
<start name="&lt;start&gt;" pathCondition="true" pathConditionChanged="false">
   <variable name="heapAtPre" isArrayIndex="false">
      <value name="heapAtPre {true}" typeString="Heap" valueString="heap" isValueAnObject="false" isValueUnknown="false" conditionString="true">
      </value>
   </variable>
   <methodCall name="&lt;call PrettyPrintTest.main(x)&gt;" pathCondition="true" pathConditionChanged="false">
      <variable name="exc" isArrayIndex="false">
         <value name="exc {true}" typeString="Null" valueString="null" isValueAnObject="false" isValueUnknown="false" conditionString="true">
         </value>
      </variable>
      <branchStatement name="if (x&gt;=0)" pathCondition="true" pathConditionChanged="false" blockOpened="true">
         <variable name="x" isArrayIndex="false">
            <value name="x {true}" typeString="int" valueString="x" isValueAnObject="false" isValueUnknown="false" conditionString="true">
            </value>
         </variable>
         <variable name="exc" isArrayIndex="false">
            <value name="exc {true}" typeString="Null" valueString="null" isValueAnObject="false" isValueUnknown="false" conditionString="true">
            </value>
         </variable>
         <callStackEntry path="/0"/>
         <branchCondition name="x&lt;&lt;origin(&quot;requires (implicit)&quot;, &quot;[]&quot;)&gt;&gt; &gt;  -1" pathCondition="x&lt;&lt;origin(&quot;requires (implicit)&quot;, &quot;[]&quot;)&gt;&gt; &gt;  -1" pathConditionChanged="true" branchCondition="x&lt;&lt;origin(&quot;requires (implicit)&quot;, &quot;[]&quot;)&gt;&gt; &gt;  -1" mergedBranchCondition="false" isBranchConditionComputed="true">
            <variable name="x" isArrayIndex="false">
               <value name="x {true}" typeString="int" valueString="x" isValueAnObject="false" isValueUnknown="false" conditionString="true">
               </value>
            </variable>
            <variable name="exc" isArrayIndex="false">
               <value name="exc {true}" typeString="Null" valueString="null" isValueAnObject="false" isValueUnknown="false" conditionString="true">
               </value>
            </variable>
            <variable name="x_1" isArrayIndex="false">
               <value name="x_1 {true}" typeString="boolean" valueString="TRUE" isValueAnObject="false" isValueUnknown="false" conditionString="true">
               </value>
            </variable>
            <callStackEntry path="/0"/>
            <statement name="return magic();" pathCondition="x&lt;&lt;origin(&quot;requires (implicit)&quot;, &quot;[]&quot;)&gt;&gt; &gt;  -1" pathConditionChanged="false">
               <variable name="x" isArrayIndex="false">
                  <value name="x {true}" typeString="int" valueString="x" isValueAnObject="false" isValueUnknown="false" conditionString="true">
                  </value>
               </variable>
               <variable name="exc" isArrayIndex="false">
                  <value name="exc {true}" typeString="Null" valueString="null" isValueAnObject="false" isValueUnknown="false" conditionString="true">
                  </value>
               </variable>
               <callStackEntry path="/0"/>
               <operationContract name="result_0 = magic() catch(exc_0)
post: result_0 = 42 &amp; (exc_0 = null)&lt;&lt;impl&gt;&gt;
mod: {}
termination: diamond" pathCondition="x&lt;&lt;origin(&quot;requires (implicit)&quot;, &quot;[]&quot;)&gt;&gt; &gt;  -1" pathConditionChanged="false" resultTerm="result_0" exceptionTerm="exc_0" preconditionComplied="true" hasNotNullCheck="false" notNullCheckComplied="false">
                  <variable name="x" isArrayIndex="false">
                     <value name="x {true}" typeString="int" valueString="x" isValueAnObject="false" isValueUnknown="false" conditionString="true">
                     </value>
                  </variable>
                  <variable name="exc" isArrayIndex="false">
                     <value name="exc {true}" typeString="Null" valueString="null" isValueAnObject="false" isValueUnknown="false" conditionString="true">
                     </value>
                  </variable>
                  <callStackEntry path="/0"/>
                  <methodReturn name="&lt;return of main&gt;" signature="&lt;return of PrettyPrintTest.main(x)&gt;" pathCondition="x&lt;&lt;origin(&quot;requires (implicit)&quot;, &quot;[]&quot;)&gt;&gt; &gt;  -1" pathConditionChanged="false" nameIncludingReturnValue="&lt;return 42 as result of main&gt;" signatureIncludingReturnValue="&lt;return 42 as result of PrettyPrintTest.main(x)&gt;" isReturnValueComputed="true" methodReturnCondition="x&lt;&lt;origin(&quot;requires (implicit)&quot;, &quot;[]&quot;)&gt;&gt; &gt;  -1">
                     <methodReturnValue name="42" returnValueString="42" hasCondition="false">
                     </methodReturnValue>
                     <variable name="x" isArrayIndex="false">
                        <value name="x {true}" typeString="int" valueString="x" isValueAnObject="false" isValueUnknown="false" conditionString="true">
                        </value>
                     </variable>
                     <variable name="exc" isArrayIndex="false">
                        <value name="exc {true}" typeString="Null" valueString="null" isValueAnObject="false" isValueUnknown="false" conditionString="true">
                        </value>
                     </variable>
                     <variable name="heap" isArrayIndex="false">
                        <value name="heap {true}" typeString="Heap" valueString="heapAfter_magic" isValueAnObject="false" isValueUnknown="false" conditionString="true">
                        </value>
                     </variable>
                     <callStackEntry path="/0"/>
                     <termination name="&lt;end&gt;" pathCondition="x&lt;&lt;origin(&quot;requires (implicit)&quot;, &quot;[]&quot;)&gt;&gt; &gt;  -1" pathConditionChanged="false" terminationKind="NORMAL" branchVerified="true">
                        <variable name="exc" isArrayIndex="false">
                           <value name="exc {true}" typeString="Null" valueString="null" isValueAnObject="false" isValueUnknown="false" conditionString="true">
                           </value>
                        </variable>
                        <variable name="heap" isArrayIndex="false">
                           <value name="heap {true}" typeString="Heap" valueString="heapAfter_magic" isValueAnObject="false" isValueUnknown="false" conditionString="true">
                           </value>
                        </variable>
                     </termination>
                     <callStateVariable name="x" isArrayIndex="false">
                        <value name="x {true}" typeString="int" valueString="x" isValueAnObject="false" isValueUnknown="false" conditionString="true">
                        </value>
                     </callStateVariable>
                     <callStateVariable name="exc" isArrayIndex="false">
                        <value name="exc {true}" typeString="Null" valueString="null" isValueAnObject="false" isValueUnknown="false" conditionString="true">
                        </value>
                     </callStateVariable>
                     <callStateVariable name="heapBefore_main" isArrayIndex="false">
                        <value name="heapBefore_main {true}" typeString="Heap" valueString="heap" isValueAnObject="false" isValueUnknown="false" conditionString="true">
                        </value>
                     </callStateVariable>
                     <callStateVariable name="savedHeapBefore_main" isArrayIndex="false">
                        <value name="savedHeapBefore_main {true}" typeString="Heap" valueString="savedHeap" isValueAnObject="false" isValueUnknown="false" conditionString="true">
                        </value>
                     </callStateVariable>
                     <callStateVariable name="xBefore_main" isArrayIndex="false">
                        <value name="xBefore_main {true}" typeString="int" valueString="x" isValueAnObject="false" isValueUnknown="false" conditionString="true">
                        </value>
                     </callStateVariable>
                  </methodReturn>
               </operationContract>
               <completedBlockEntry path="/0/0" conditionString="x&lt;&lt;origin(&quot;requires (implicit)&quot;, &quot;[]&quot;)&gt;&gt; &gt;  -1"/>
            </statement>
         </branchCondition>
         <branchCondition name="x&lt;&lt;origin(&quot;requires (implicit)&quot;, &quot;[]&quot;)&gt;&gt; &lt; 0" pathCondition="x&lt;&lt;origin(&quot;requires (implicit)&quot;, &quot;[]&quot;)&gt;&gt; &lt; 0" pathConditionChanged="true" branchCondition="x&lt;&lt;origin(&quot;requires (implicit)&quot;, &quot;[]&quot;)&gt;&gt; &lt; 0" mergedBranchCondition="false" isBranchConditionComputed="true">
            <variable name="x" isArrayIndex="false">
               <value name="x {true}" typeString="int" valueString="x" isValueAnObject="false" isValueUnknown="false" conditionString="true">
               </value>
            </variable>
            <variable name="exc" isArrayIndex="false">
               <value name="exc {true}" typeString="Null" valueString="null" isValueAnObject="false" isValueUnknown="false" conditionString="true">
               </value>
            </variable>
            <variable name="x_1" isArrayIndex="false">
               <value name="x_1 {true}" typeString="boolean" valueString="FALSE" isValueAnObject="false" isValueUnknown="false" conditionString="true">
               </value>
            </variable>
            <callStackEntry path="/0"/>
            <loopInvariant name="invariant: x &lt;= -1;
variant: javaSubInt(0, x)
mod: false" pathCondition="x&lt;&lt;origin(&quot;requires (implicit)&quot;, &quot;[]&quot;)&gt;&gt; &lt; 0" pathConditionChanged="false" initiallyValid="true">
               <variable name="x" isArrayIndex="false">
                  <value name="x {true}" typeString="int" valueString="x" isValueAnObject="false" isValueUnknown="false" conditionString="true">
                  </value>
               </variable>
               <variable name="exc" isArrayIndex="false">
                  <value name="exc {true}" typeString="Null" valueString="null" isValueAnObject="false" isValueUnknown="false" conditionString="true">
                  </value>
               </variable>
               <callStackEntry path="/0"/>
               <branchCondition name="x_0 &lt; -1" pathCondition="  x&lt;&lt;origin(&quot;requires (implicit)&quot;, &quot;[]&quot;)&gt;&gt; &lt;= -1
&amp; x_0 &lt;= -2" pathConditionChanged="true" branchCondition="x_0 &lt; -1" mergedBranchCondition="false" isBranchConditionComputed="true" additionalBranchLabel="Body Preserves Invariant">
                  <variable name="x" isArrayIndex="false">
                     <value name="x {true}" typeString="int" valueString="x_0" isValueAnObject="false" isValueUnknown="false" conditionString="true">
                     </value>
                  </variable>
                  <variable name="exc" isArrayIndex="false">
                     <value name="exc {true}" typeString="Null" valueString="null" isValueAnObject="false" isValueUnknown="false" conditionString="true">
                     </value>
                  </variable>
                  <variable name="heapBefore_LOOP" isArrayIndex="false">
                     <value name="heapBefore_LOOP {true}" typeString="Heap" valueString="heap" isValueAnObject="false" isValueUnknown="false" conditionString="true">
                     </value>
                  </variable>
                  <variable name="xBefore_LOOP" isArrayIndex="false">
                     <value name="xBefore_LOOP {true}" typeString="int" valueString="x" isValueAnObject="false" isValueUnknown="false" conditionString="true">
                     </value>
                  </variable>
                  <variable name="variant" isArrayIndex="false">
                     <value name="variant {true}" typeString="int" valueString="x_0 * -1" isValueAnObject="false" isValueUnknown="false" conditionString="true">
                     </value>
                  </variable>
                  <callStackEntry path="/0"/>
                  <loopCondition name="x&lt;-1" pathCondition="  x&lt;&lt;origin(&quot;requires (implicit)&quot;, &quot;[]&quot;)&gt;&gt; &lt;= -1
&amp; x_0 &lt;= -2" pathConditionChanged="false" blockOpened="false">
                     <variable name="x" isArrayIndex="false">
                        <value name="x {true}" typeString="int" valueString="x_0" isValueAnObject="false" isValueUnknown="false" conditionString="true">
                        </value>
                     </variable>
                     <variable name="exc" isArrayIndex="false">
                        <value name="exc {true}" typeString="Null" valueString="null" isValueAnObject="false" isValueUnknown="false" conditionString="true">
                        </value>
                     </variable>
                     <variable name="heapBefore_LOOP" isArrayIndex="false">
                        <value name="heapBefore_LOOP {true}" typeString="Heap" valueString="heap" isValueAnObject="false" isValueUnknown="false" conditionString="true">
                        </value>
                     </variable>
                     <variable name="variant" isArrayIndex="false">
                        <value name="variant {true}" typeString="int" valueString="x_0 * -1" isValueAnObject="false" isValueUnknown="false" conditionString="true">
                        </value>
                     </variable>
                     <variable name="exc_1" isArrayIndex="false">
                        <value name="exc_1 {true}" typeString="boolean" valueString="FALSE" isValueAnObject="false" isValueUnknown="false" conditionString="true">
                        </value>
                     </variable>
                     <callStackEntry path="/0"/>
                     <statement name="x++;" pathCondition="  x&lt;&lt;origin(&quot;requires (implicit)&quot;, &quot;[]&quot;)&gt;&gt; &lt;= -1
&amp; x_0 &lt;= -2" pathConditionChanged="false">
                        <variable name="x" isArrayIndex="false">
                           <value name="x {true}" typeString="int" valueString="x_0" isValueAnObject="false" isValueUnknown="false" conditionString="true">
                           </value>
                        </variable>
                        <variable name="exc" isArrayIndex="false">
                           <value name="exc {true}" typeString="Null" valueString="null" isValueAnObject="false" isValueUnknown="false" conditionString="true">
                           </value>
                        </variable>
                        <variable name="heapBefore_LOOP" isArrayIndex="false">
                           <value name="heapBefore_LOOP {true}" typeString="Heap" valueString="heap" isValueAnObject="false" isValueUnknown="false" conditionString="true">
                           </value>
                        </variable>
                        <variable name="variant" isArrayIndex="false">
                           <value name="variant {true}" typeString="int" valueString="x_0 * -1" isValueAnObject="false" isValueUnknown="false" conditionString="true">
                           </value>
                        </variable>
                        <variable name="exc_1" isArrayIndex="false">
                           <value name="exc_1 {true}" typeString="boolean" valueString="FALSE" isValueAnObject="false" isValueUnknown="false" conditionString="true">
                           </value>
                        </variable>
                        <callStackEntry path="/0"/>
                        <termination name="&lt;loop body end&gt;" pathCondition="  x&lt;&lt;origin(&quot;requires (implicit)&quot;, &quot;[]&quot;)&gt;&gt; &lt;= -1
&amp; x_0 &lt;= -2" pathConditionChanged="false" terminationKind="LOOP_BODY" branchVerified="true">
                           <variable name="exc" isArrayIndex="false">
                              <value name="exc {true}" typeString="Null" valueString="null" isValueAnObject="false" isValueUnknown="false" conditionString="true">
                              </value>
                           </variable>
                           <variable name="heapBefore_LOOP" isArrayIndex="false">
                              <value name="heapBefore_LOOP {true}" typeString="Heap" valueString="heap" isValueAnObject="false" isValueUnknown="false" conditionString="true">
                              </value>
                           </variable>
                           <variable name="variant" isArrayIndex="false">
                              <value name="variant {true}" typeString="int" valueString="x_0 * -1" isValueAnObject="false" isValueUnknown="false" conditionString="true">
                              </value>
                           </variable>
                           <variable name="exc_1" isArrayIndex="false">
                              <value name="exc_1 {true}" typeString="boolean" valueString="FALSE" isValueAnObject="false" isValueUnknown="false" conditionString="true">
                              </value>
                           </variable>
                           <variable name="x" isArrayIndex="false">
                              <value name="x {true}" typeString="int" valueString="1 + x_0" isValueAnObject="false" isValueUnknown="false" conditionString="true">
                              </value>
                           </variable>
                        </termination>
                     </statement>
                  </loopCondition>
               </branchCondition>
               <branchCondition name="x_0 = -1" pathCondition="  x&lt;&lt;origin(&quot;requires (implicit)&quot;, &quot;[]&quot;)&gt;&gt; &lt;= -1
&amp; x_0 = -1" pathConditionChanged="true" branchCondition="x_0 = -1" mergedBranchCondition="false" isBranchConditionComputed="true" additionalBranchLabel="Use Case">
                  <variable name="x" isArrayIndex="false">
                     <value name="x {true}" typeString="int" valueString="x_0" isValueAnObject="false" isValueUnknown="false" conditionString="true">
                     </value>
                  </variable>
                  <variable name="exc" isArrayIndex="false">
                     <value name="exc {true}" typeString="Null" valueString="null" isValueAnObject="false" isValueUnknown="false" conditionString="true">
                     </value>
                  </variable>
                  <callStackEntry path="/0"/>
                  <statement name="return -1;" pathCondition="  x&lt;&lt;origin(&quot;requires (implicit)&quot;, &quot;[]&quot;)&gt;&gt; &lt;= -1
&amp; x_0 = -1" pathConditionChanged="false">
                     <variable name="x" isArrayIndex="false">
                        <value name="x {true}" typeString="int" valueString="-1" isValueAnObject="false" isValueUnknown="false" conditionString="true">
                        </value>
                     </variable>
                     <variable name="exc" isArrayIndex="false">
                        <value name="exc {true}" typeString="Null" valueString="null" isValueAnObject="false" isValueUnknown="false" conditionString="true">
                        </value>
                     </variable>
                     <callStackEntry path="/0"/>
                     <methodReturn name="&lt;return of main&gt;" signature="&lt;return of PrettyPrintTest.main(x)&gt;" pathCondition="  x&lt;&lt;origin(&quot;requires (implicit)&quot;, &quot;[]&quot;)&gt;&gt; &lt;= -1
&amp; x_0 = -1" pathConditionChanged="false" nameIncludingReturnValue="&lt;return -1 as result of main&gt;" signatureIncludingReturnValue="&lt;return -1 as result of PrettyPrintTest.main(x)&gt;" isReturnValueComputed="true" methodReturnCondition="  (x&lt;&lt;origin(&quot;requires (implicit)&quot;, &quot;[]&quot;)&gt;&gt; &lt;= -1)&lt;&lt;origin(&quot;requires (implicit)&quot;,&quot;[requires (implicit)]&quot;)&gt;&gt;
&amp; x_0 = -1">
                        <methodReturnValue name="-1" returnValueString="-1" hasCondition="false">
                        </methodReturnValue>
                        <variable name="x" isArrayIndex="false">
                           <value name="x {true}" typeString="int" valueString="-1" isValueAnObject="false" isValueUnknown="false" conditionString="true">
                           </value>
                        </variable>
                        <variable name="exc" isArrayIndex="false">
                           <value name="exc {true}" typeString="Null" valueString="null" isValueAnObject="false" isValueUnknown="false" conditionString="true">
                           </value>
                        </variable>
                        <callStackEntry path="/0"/>
                        <termination name="&lt;end&gt;" pathCondition="  x&lt;&lt;origin(&quot;requires (implicit)&quot;, &quot;[]&quot;)&gt;&gt; &lt;= -1
&amp; x_0 = -1" pathConditionChanged="false" terminationKind="NORMAL" branchVerified="true">
                           <variable name="exc" isArrayIndex="false">
                              <value name="exc {true}" typeString="Null" valueString="null" isValueAnObject="false" isValueUnknown="false" conditionString="true">
                              </value>
                           </variable>
                           <variable name="x" isArrayIndex="false">
                              <value name="x {true}" typeString="int" valueString="-1" isValueAnObject="false" isValueUnknown="false" conditionString="true">
                              </value>
                           </variable>
                        </termination>
                        <callStateVariable name="x" isArrayIndex="false">
                           <value name="x {true}" typeString="int" valueString="x" isValueAnObject="false" isValueUnknown="false" conditionString="true">
                           </value>
                        </callStateVariable>
                        <callStateVariable name="exc" isArrayIndex="false">
                           <value name="exc {true}" typeString="Null" valueString="null" isValueAnObject="false" isValueUnknown="false" conditionString="true">
                           </value>
                        </callStateVariable>
                        <callStateVariable name="heapBefore_main" isArrayIndex="false">
                           <value name="heapBefore_main {true}" typeString="Heap" valueString="heap" isValueAnObject="false" isValueUnknown="false" conditionString="true">
                           </value>
                        </callStateVariable>
                        <callStateVariable name="savedHeapBefore_main" isArrayIndex="false">
                           <value name="savedHeapBefore_main {true}" typeString="Heap" valueString="savedHeap" isValueAnObject="false" isValueUnknown="false" conditionString="true">
                           </value>
                        </callStateVariable>
                        <callStateVariable name="xBefore_main" isArrayIndex="false">
                           <value name="xBefore_main {true}" typeString="int" valueString="x" isValueAnObject="false" isValueUnknown="false" conditionString="true">
                           </value>
                        </callStateVariable>
                     </methodReturn>
                  </statement>
               </branchCondition>
            </loopInvariant>
            <completedBlockEntry path="/0/0" conditionString="true"/>
         </branchCondition>
         <blockCompletionEntry path="/0/0/0/0"/>
         <blockCompletionEntry path="/0/0/1"/>
      </branchStatement>
      <methodReturnEntry path="/0/0/0/0/0/0"/>
      <methodReturnEntry path="/0/0/1/0/1/0/0"/>
   </methodCall>
   <terminationEntry path="/0/0/0/0/0/0/0"/>
   <terminationEntry path="/0/0/1/0/0/0/0/0"/>
   <terminationEntry path="/0/0/1/0/1/0/0/0"/>
</start>
