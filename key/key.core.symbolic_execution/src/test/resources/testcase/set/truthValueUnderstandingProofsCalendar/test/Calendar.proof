\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Mon Jul 18 10:59:15 CEST 2016
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]useUninterpretedMultiplication=true
[SMTSettings]SelectedTaclets=\\#begboolean_equal_2\\#end,\\#begboolean_not_equal_1\\#end,\\#begboolean_not_equal_2\\#end,\\#begtrue_to_not_false\\#end,\\#begfalse_to_not_true\\#end,\\#begboolean_true_commute\\#end,\\#begboolean_false_commute\\#end,\\#begapply_eq_boolean\\#end,\\#begapply_eq_boolean_2\\#end,\\#begapply_eq_boolean_rigid\\#end,\\#begapply_eq_boolean_rigid_2\\#end,\\#begexpand_inByte\\#end,\\#begexpand_inChar\\#end,\\#begexpand_inShort\\#end,\\#begexpand_inInt\\#end,\\#begexpand_inLong\\#end,\\#begreplace_byte_MAX\\#end,\\#begreplace_byte_MIN\\#end,\\#begreplace_char_MAX\\#end,\\#begreplace_char_MIN\\#end,\\#begreplace_short_MAX\\#end,\\#begreplace_short_MIN\\#end,\\#begreplace_int_MAX\\#end,\\#begreplace_int_MIN\\#end,\\#begreplace_long_MAX\\#end,\\#begreplace_long_MIN\\#end,\\#begreplace_byte_RANGE\\#end,\\#begreplace_byte_HALFRANGE\\#end,\\#begreplace_short_RANGE\\#end,\\#begreplace_short_HALFRANGE\\#end,\\#begreplace_char_RANGE\\#end,\\#begreplace_int_RANGE\\#end,\\#begreplace_int_HALFRANGE\\#end,\\#begreplace_long_RANGE\\#end,\\#begreplace_long_HALFRANGE\\#end,\\#begtranslateJavaUnaryMinusInt\\#end,\\#begtranslateJavaUnaryMinusLong\\#end,\\#begtranslateJavaBitwiseNegation\\#end,\\#begtranslateJavaAddInt\\#end,\\#begtranslateJavaAddLong\\#end,\\#begtranslateJavaSubInt\\#end,\\#begtranslateJavaSubLong\\#end,\\#begtranslateJavaMulInt\\#end,\\#begtranslateJavaMulLong\\#end,\\#begtranslateJavaMod\\#end,\\#begtranslateJavaDivInt\\#end,\\#begtranslateJavaDivLong\\#end,\\#begtranslateJavaCastByte\\#end,\\#begtranslateJavaCastShort\\#end,\\#begtranslateJavaCastInt\\#end,\\#begtranslateJavaCastLong\\#end,\\#begtranslateJavaCastChar\\#end,\\#begtranslateJavaShiftRightInt\\#end,\\#begtranslateJavaShiftRightLong\\#end,\\#begtranslateJavaShiftLeftInt\\#end,\\#begtranslateJavaShiftLeftLong\\#end,\\#begtranslateJavaUnsignedShiftRightInt\\#end,\\#begtranslateJavaUnsignedShiftRightLong\\#end,\\#begtranslateJavaBitwiseOrInt\\#end,\\#begtranslateJavaBitwiseOrLong\\#end,\\#begtranslateJavaBitwiseAndInt\\#end,\\#begtranslateJavaBitwiseAndLong\\#end,\\#begtranslateJavaBitwiseXOrInt\\#end,\\#begtranslateJavaBitwiseXOrLong\\#end,\\#begelementOfEmpty\\#end,\\#begelementOfAllLocs\\#end,\\#begelementOfSingleton\\#end,\\#begelementOfUnion\\#end,\\#begelementOfIntersect\\#end,\\#begelementOfSetMinus\\#end,\\#begelementOfAllFields\\#end,\\#begelementOfAllObjects\\#end,\\#begelementOfArrayRange\\#end,\\#begelementOfFreshLocs\\#end,\\#begequalityToElementOf\\#end,\\#begsubsetToElementOf\\#end,\\#begdisjointToElementOf\\#end,\\#begcreatedInHeapToElementOf\\#end,\\#begelementOfEmptyEQ\\#end,\\#begelementOfAllLocsEQ\\#end,\\#begelementOfSingletonEQ\\#end,\\#begelementOfUnionEQ\\#end,\\#begelementOfIntersectEQ\\#end,\\#begelementOfSetMinusEQ\\#end,\\#begelementOfAllFieldsEQ\\#end,\\#begelementOfAllObjectsEQ\\#end,\\#begelementOfArrayRangeEQ\\#end,\\#begelementOfFreshLocsEQ\\#end,\\#begunionWithEmpty1\\#end,\\#begunionWithEmpty2\\#end,\\#begunionWithAllLocs1\\#end,\\#begunionWithAllLocs2\\#end,\\#begintersectWithEmpty1\\#end,\\#begintersectWithEmpty2\\#end,\\#begintersectWithAllLocs1\\#end,\\#begintersectWithAllLocs2\\#end,\\#begsetMinusWithEmpty1\\#end,\\#begsetMinusWithEmpty2\\#end,\\#begsetMinusWithAllLocs\\#end,\\#begsubsetWithEmpty\\#end,\\#begsubsetWithAllLocs\\#end,\\#begdisjointWithEmpty1\\#end,\\#begdisjointWithEmpty2\\#end,\\#begcreatedInHeapWithEmpty\\#end,\\#begcreatedInHeapWithSingleton\\#end,\\#begcreatedInHeapWithUnion\\#end,\\#begcreatedInHeapWithSetMinusFreshLocs\\#end,\\#begcreatedInHeapWithAllFields\\#end,\\#begcreatedInHeapWithArrayRange\\#end,\\#begreferencedObjectIsCreatedRight\\#end,\\#begreferencedObjectIsCreatedRightEQ\\#end,\\#begunionWithItself\\#end,\\#begintersectWithItself\\#end,\\#begsetMinusItself\\#end,\\#begsubsetOfItself\\#end,\\#begselectOfStore\\#end,\\#begselectOfCreate\\#end,\\#begselectOfAnon\\#end,\\#begselectOfMemset\\#end,\\#begonlyCreatedObjectsAreReferenced\\#end,\\#begonlyCreatedObjectsAreInLocSets\\#end,\\#begonlyCreatedObjectsAreInLocSetsEQ\\#end,\\#begarrayLengthNotNegative\\#end,\\#begwellFormedStoreObject\\#end,\\#begwellFormedStoreLocSet\\#end,\\#begwellFormedStorePrimitive\\#end,\\#begwellFormedCreate\\#end,\\#begwellFormedAnon\\#end,\\#begwellFormedMemsetObject\\#end,\\#begwellFormedMemsetLocSet\\#end,\\#begwellFormedMemsetPrimitive\\#end,\\#begselectOfStoreEQ\\#end,\\#begselectOfCreateEQ\\#end,\\#begselectOfAnonEQ\\#end,\\#begselectOfMemsetEQ\\#end,\\#begmemsetEmpty\\#end,\\#begselectCreatedOfAnonEQ\\#end,\\#begwellFormedStoreObjectEQ\\#end,\\#begwellFormedStoreLocSetEQ\\#end,\\#begwellFormedStorePrimitiveEQ\\#end,\\#begwellFormedAnonEQ\\#end,\\#begwellFormedMemsetObjectEQ\\#end,\\#begwellFormedMemsetPrimitiveEQ\\#end
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_INSTANTIATE
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[StrategyProperty]DEP_OPTIONS_KEY=DEP_OFF
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_EXPAND
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_RESTRICTED
[Strategy]Timeout=-1
[Strategy]MaximumNumberOfAutomaticApplications=10000
[SMTSettings]integersMaximum=2147483645
[Choice]DefaultChoices=methodExpansion-methodExpansion:noRestriction,wdChecks-wdChecks\\:off , JavaCard-JavaCard\\:off , bigint-bigint\\:on , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , moreSeqRules-moreSeqRules\\:off , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off , sequences-sequences\\:on , integerSimplificationRules-integerSimplificationRules\\:full , runtimeExceptions-runtimeExceptions\\:allow , Strings-Strings\\:on , reach-reach\\:on , assertions-assertions\\:on , wdOperator-wdOperator\\:L , modelFields-modelFields\\:showSatisfiability , initialisation-initialisation\\:disableStaticInitialisation , permissions-permissions\\:off
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]maxGenericSorts=2
[SMTSettings]integersMinimum=-2147483645
[SMTSettings]invariantForall=false
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
"
}

\javaSource "";

\proofObligation "#Proof Obligation Settings
#Mon Jul 18 10:59:15 CEST 2016
name=Calendar[Calendar\\:\\:addEntry(Calendar.Entry)].JML normal_behavior operation contract.0
contract=Calendar[Calendar\\:\\:addEntry(Calendar.Entry)].JML normal_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "Martin" ) (keyVersion "90bb886cd7b78027c8f6703803461f09e5699bb9"))
(keyLog "1" (keyUser "Martin" ) (keyVersion "90bb886cd7b78027c8f6703803461f09e5699bb9"))
(keyLog "2" (keyUser "marti" ) (keyVersion "90bb886cd7b78027c8f6703803461f09e5699bb9"))
(keyLog "3" (keyUser "marti" ) (keyVersion "90bb886cd7b78027c8f6703803461f09e5699bb9"))

(autoModeTime "2934482200")

(branch "dummy ID"
(rule "translateJavaAddInt" (formula "1") (term "1,0,1,0,0,0,1,1") (newnames "entry,self,exc,heapAtPre,o,f"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "5"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "2"))
(rule "eqSymm" (formula "9") (term "1,0,0,1,0,1"))
(rule "replace_known_right" (formula "4") (term "0") (ifseqformula "8"))
(builtin "One Step Simplification" (formula "4"))
(rule "polySimp_homoEq" (formula "9") (term "0,1,0,0,0,1"))
(rule "polySimp_addComm0" (formula "9") (term "0,0,0,1,0,0,0,1"))
(rule "polySimp_addComm1" (formula "9") (term "0,0,1,0,0,0,1"))
(rule "assignment" (formula "9") (term "1"))
(builtin "One Step Simplification" (formula "9"))
(rule "polySimp_sepPosMonomial" (formula "9") (term "0,1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "9") (term "1,0,1,0,0,0,1"))
(rule "polySimp_rightDist" (formula "9") (term "1,0,1,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,1,0,0,0,1"))
(rule "mul_literals" (formula "9") (term "0,1,0,1,0,0,0,1"))
(rule "polySimp_elimOne" (formula "9") (term "1,1,0,1,0,0,0,1"))
(rule "elementOfUnion" (formula "9") (term "0,0,0,0,1,0,1"))
(rule "elementOfSingleton" (formula "9") (term "1,0,0,0,0,1,0,1"))
(rule "elementOfUnion" (formula "9") (term "0,0,0,0,0,1,0,1"))
(rule "elementOfSingleton" (formula "9") (term "0,0,0,0,0,0,1,0,1"))
(rule "elementOfSingleton" (formula "9") (term "1,0,0,0,0,0,1,0,1"))
(rule "Class_invariant_axiom_for_Calendar" (formula "6") (inst "sk=sk_0") (ifseqformula "3"))
(branch "Use Axiom"
   (rule "andLeft" (formula "6"))
   (rule "andLeft" (formula "7"))
   (rule "inEqSimp_ltToLeq" (formula "8"))
   (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "8"))
   (rule "polySimp_mulComm0" (formula "8") (term "1"))
   (rule "polySimp_rightDist" (formula "8") (term "1"))
   (rule "mul_literals" (formula "8") (term "0,1"))
   (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
   (rule "polySimp_elimOne" (formula "8") (term "1,1"))
   (rule "nonNull" (formula "6") (inst "i=i"))
   (rule "greater_literals" (formula "6") (term "0,1"))
   (builtin "One Step Simplification" (formula "6"))
   (rule "sub_literals" (formula "6") (term "2,1,0,1"))
   (builtin "One Step Simplification" (formula "6"))
   (rule "andLeft" (formula "6"))
   (rule "notLeft" (formula "6"))
   (rule "narrowSelectArrayType" (formula "6") (term "0,0,1,0") (ifseqformula "1") (ifseqformula "9"))
   (rule "inEqSimp_ltToLeq" (formula "6") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "6") (term "0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "6") (term "1,1,0,0"))
   (rule "polySimp_rightDist" (formula "6") (term "1,1,0,0"))
   (rule "mul_literals" (formula "6") (term "0,1,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "6") (term "1,1,1,0,0"))
   (rule "polySimp_elimOne" (formula "6") (term "1,1,1,0,0"))
   (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "8"))
   (rule "times_zero_1" (formula "7") (term "0,0"))
   (rule "add_zero_left" (formula "7") (term "0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "7"))
   (rule "mul_literals" (formula "7") (term "1"))
   (rule "nnf_imp2or" (formula "6") (term "0"))
   (rule "nnf_notAnd" (formula "6") (term "0,0"))
   (rule "inEqSimp_notLeq" (formula "6") (term "1,0,0"))
   (rule "polySimp_rightDist" (formula "6") (term "1,0,0,1,0,0"))
   (rule "mul_literals" (formula "6") (term "0,1,0,0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "6") (term "0,0,1,0,0"))
   (rule "add_literals" (formula "6") (term "0,0,0,1,0,0"))
   (rule "add_zero_left" (formula "6") (term "0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "6") (term "1,0,0"))
   (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0"))
   (rule "polySimp_elimOne" (formula "6") (term "1,1,0,0"))
   (rule "inEqSimp_notGeq" (formula "6") (term "0,0,0"))
   (rule "mul_literals" (formula "6") (term "1,0,0,0,0,0"))
   (rule "add_literals" (formula "6") (term "0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "0,0,0"))
   (rule "mul_literals" (formula "6") (term "1,0,0,0"))
   (rule "methodBodyExpand" (formula "13") (term "1") (newnames "heapBefore_addEntry,savedHeapBefore_addEntry,_entryBefore_addEntry"))
   (builtin "One Step Simplification" (formula "13"))
   (rule "ifElseUnfold" (formula "13") (term "1") (inst "#boolv=x"))
   (rule "variableDeclaration" (formula "13") (term "1") (newnames "x"))
   (rule "compound_equality_comparison_2" (formula "13") (term "1") (inst "#v1=x_2") (inst "#v0=x_1"))
   (rule "variableDeclarationAssign" (formula "13") (term "1"))
   (rule "variableDeclaration" (formula "13") (term "1") (newnames "x_1"))
   (rule "assignment_read_attribute_this" (formula "13") (term "1"))
   (builtin "One Step Simplification" (formula "13"))
   (rule "variableDeclarationAssign" (formula "13") (term "1"))
   (rule "variableDeclaration" (formula "13") (term "1") (newnames "x_2"))
   (rule "eval_order_array_access6" (formula "13") (term "1") (inst "#v0=e_arr"))
   (rule "variableDeclarationAssign" (formula "13") (term "1"))
   (rule "variableDeclaration" (formula "13") (term "1") (newnames "e_arr"))
   (rule "assignment_read_attribute_this" (formula "13") (term "1"))
   (builtin "One Step Simplification" (formula "13"))
   (rule "assignment_read_length" (formula "13") (term "1"))
   (branch "Normal Execution (e_arr != null)"
      (builtin "One Step Simplification" (formula "14"))
      (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "10")))
      (rule "false_right" (formula "13"))
      (rule "equality_comparison_simple" (formula "13") (term "1"))
      (builtin "One Step Simplification" (formula "13"))
      (rule "inEqSimp_contradEq3" (formula "13") (term "0,0,1,0") (ifseqformula "9"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,1,0"))
      (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0,0,0,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,0,0,0,0,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,0,0,0,0,1,0"))
      (rule "add_zero_right" (formula "13") (term "0,0,0,0,1,0"))
      (rule "qeq_literals" (formula "13") (term "0,0,0,1,0"))
      (builtin "One Step Simplification" (formula "13"))
      (rule "ifElseSplit" (formula "13"))
      (branch "if x true"
         (builtin "One Step Simplification" (formula "14"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "closeFalse" (formula "1"))
      )
      (branch "if x false"
         (builtin "One Step Simplification" (formula "14"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "true_left" (formula "1"))
         (rule "blockEmpty" (formula "13") (term "1"))
         (rule "blockEmpty" (formula "13") (term "1"))
         (rule "eval_order_array_access1" (formula "13") (term "1") (inst "#v0=e_arr"))
         (rule "variableDeclarationAssign" (formula "13") (term "1"))
         (rule "variableDeclaration" (formula "13") (term "1") (newnames "e_arr_1"))
         (rule "assignment_read_attribute_this" (formula "13") (term "1"))
         (builtin "One Step Simplification" (formula "13"))
         (rule "eval_order_array_access2" (formula "13") (term "1") (inst "#v0=x") (inst "#ar1=e_arr_2"))
         (rule "variableDeclarationAssign" (formula "13") (term "1"))
         (rule "variableDeclaration" (formula "13") (term "1") (newnames "e_arr_2"))
         (rule "assignment" (formula "13") (term "1"))
         (builtin "One Step Simplification" (formula "13"))
         (rule "variableDeclarationAssign" (formula "13") (term "1"))
         (rule "variableDeclaration" (formula "13") (term "1") (newnames "x_3"))
         (rule "assignment_read_attribute_this" (formula "13") (term "1"))
         (builtin "One Step Simplification" (formula "13"))
         (rule "assignment_to_reference_array_component" (formula "13") (term "1"))
         (branch "Normal Execution (e_arr_2 != null)"
            (builtin "One Step Simplification" (formula "14"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "11")) (ifInst ""  (formula "9")))
            (rule "andLeft" (formula "1"))
            (rule "inEqSimp_ltToLeq" (formula "1"))
            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "1"))
            (rule "polySimp_mulComm0" (formula "1") (term "1"))
            (rule "polySimp_rightDist" (formula "1") (term "1"))
            (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
            (rule "mul_literals" (formula "1") (term "0,1"))
            (rule "polySimp_elimOne" (formula "1") (term "1,1"))
            (rule "postincrement_attribute" (formula "14") (term "1") (inst "#v=c"))
            (rule "variableDeclarationAssign" (formula "14") (term "1"))
            (rule "variableDeclaration" (formula "14") (term "1") (newnames "c"))
            (rule "assignment" (formula "14") (term "1"))
            (builtin "One Step Simplification" (formula "14"))
            (rule "eval_order_access4" (formula "14") (term "1") (inst "#v1=x") (inst "#v0=c_1"))
            (rule "variableDeclarationAssign" (formula "14") (term "1"))
            (rule "variableDeclaration" (formula "14") (term "1") (newnames "c_1"))
            (rule "assignment" (formula "14") (term "1"))
            (builtin "One Step Simplification" (formula "14"))
            (rule "variableDeclarationAssign" (formula "14") (term "1"))
            (rule "variableDeclaration" (formula "14") (term "1") (newnames "x_5"))
            (rule "commute_or_2" (formula "7") (term "0"))
            (rule "commute_or" (formula "7") (term "0,0"))
            (rule "compound_int_cast_expression" (formula "14") (term "1") (inst "#v=x_6"))
            (rule "variableDeclarationAssign" (formula "14") (term "1"))
            (rule "variableDeclaration" (formula "14") (term "1") (newnames "x_6"))
            (rule "remove_parentheses_right" (formula "14") (term "1"))
            (rule "compound_addition_1" (formula "14") (term "1") (inst "#v=x_7"))
            (rule "variableDeclarationAssign" (formula "14") (term "1"))
            (rule "variableDeclaration" (formula "14") (term "1") (newnames "x_7"))
            (rule "assignment_read_attribute" (formula "14") (term "1"))
            (branch "Normal Execution (c != null)"
               (builtin "One Step Simplification" (formula "15"))
               (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "12")))
               (rule "false_right" (formula "14"))
               (rule "dismissNonSelectedField" (formula "14") (term "0,1,0"))
               (rule "assignmentAdditionInt" (formula "14") (term "1"))
               (builtin "One Step Simplification" (formula "14"))
               (rule "translateJavaAddInt" (formula "14") (term "0,1,0"))
               (rule "polySimp_addComm0" (formula "14") (term "0,1,0"))
               (rule "widening_identity_cast_5" (formula "14") (term "1"))
               (rule "assignment" (formula "14") (term "1"))
               (builtin "One Step Simplification" (formula "14"))
               (rule "assignment_write_attribute" (formula "14") (term "1"))
               (branch "Normal Execution (c_1 != null)"
                  (builtin "One Step Simplification" (formula "15"))
                  (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "12")))
                  (rule "false_right" (formula "14"))
                  (rule "methodCallEmpty" (formula "14") (term "1"))
                  (rule "tryEmpty" (formula "14") (term "1"))
                  (rule "emptyModality" (formula "14") (term "1"))
                  (builtin "One Step Simplification" (formula "14"))
                  (rule "eqSymm" (formula "14") (term "1,0,0,1"))
                  (rule "polySimp_homoEq" (formula "14") (term "0,1,0"))
                  (rule "polySimp_addComm1" (formula "14") (term "0,0,1,0"))
                  (rule "dismissNonSelectedField" (formula "14") (term "0,0,0"))
                  (rule "dismissNonSelectedField" (formula "14") (term "1,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "14") (term "1,0,0,0"))
                  (rule "polySimp_sepPosMonomial" (formula "14") (term "0,1,0"))
                  (rule "polySimp_mulComm0" (formula "14") (term "1,0,1,0"))
                  (rule "polySimp_rightDist" (formula "14") (term "1,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,1,0"))
                  (rule "mul_literals" (formula "14") (term "0,1,0,1,0"))
                  (rule "polySimp_elimOne" (formula "14") (term "1,1,0,1,0"))
                  (rule "pullOutSelect" (formula "14") (term "0,0,0") (inst "selectSK=arr_0"))
                  (rule "simplifySelectOfStore" (formula "1"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "castDel" (formula "1") (term "0"))
                  (rule "applyEqReverse" (formula "15") (term "0,0,0") (ifseqformula "1"))
                  (builtin "One Step Simplification" (formula "15"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "pullOutSelect" (formula "14") (term "0,0,0") (inst "selectSK=Calendar_entrySize_0"))
                  (rule "simplifySelectOfStore" (formula "1"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "castDel" (formula "1") (term "0"))
                  (rule "applyEqReverse" (formula "15") (term "0,0,0") (ifseqformula "1"))
                  (builtin "One Step Simplification" (formula "15"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "Class_invariant_axiom_for_Calendar" (formula "14") (term "0") (inst "sk=sk_1") (ifseqformula "4"))
                  (branch "Use Axiom"
                     (rule "replaceKnownSelect_taclet000100_2" (formula "14") (term "0,1,1,0"))
                     (rule "replaceKnownSelect_taclet000100_2" (formula "14") (term "0,0,1,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet000100_3" (formula "14") (term "0,1,1,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet000100_3" (formula "14") (term "0,0,1,0"))
                     (rule "dismissNonSelectedField" (formula "14") (term "0,1,1,1,0"))
                     (rule "dismissNonSelectedField" (formula "14") (term "1,0,0"))
                     (rule "dismissNonSelectedField" (formula "14") (term "0,1,1,1,0"))
                     (rule "dismissNonSelectedField" (formula "14") (term "1,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "14") (term "1,1,0"))
                     (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,1,0"))
                     (rule "polySimp_addAssoc" (formula "14") (term "0,1,1,0"))
                     (rule "polySimp_addComm1" (formula "14") (term "0,0,1,1,0"))
                     (rule "add_literals" (formula "14") (term "0,0,0,1,1,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "0,1,0"))
                     (rule "mul_literals" (formula "14") (term "1,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,1,0"))
                     (rule "polySimp_mulComm0" (formula "14") (term "1,1,1,0"))
                     (rule "polySimp_rightDist" (formula "14") (term "1,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,1,0"))
                     (rule "mul_literals" (formula "14") (term "0,1,1,1,0"))
                     (rule "polySimp_elimOne" (formula "14") (term "1,1,1,1,0"))
                     (rule "inEqSimp_subsumption1" (formula "14") (term "0,1,0") (ifseqformula "9"))
                     (rule "leq_literals" (formula "14") (term "0,0,1,0"))
                     (builtin "One Step Simplification" (formula "14"))
                     (rule "nonNull" (formula "14") (term "0,0") (inst "i=i"))
                     (rule "greater_literals" (formula "14") (term "0,1,0,0"))
                     (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "11")))
                     (rule "sub_literals" (formula "14") (term "2,1,0,0,0"))
                     (builtin "One Step Simplification" (formula "14"))
                     (rule "dismissNonSelectedField" (formula "14") (term "0,0,1,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0,0,0"))
                     (rule "mul_literals" (formula "14") (term "0,1,1,0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0,0,0"))
                     (rule "nnf_imp2or" (formula "14") (term "0,0,0"))
                     (rule "nnf_notAnd" (formula "14") (term "0,0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "14") (term "1,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0,0,0"))
                     (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0,0,0"))
                     (rule "add_literals" (formula "14") (term "0,0,0,1,0,0,0,0"))
                     (rule "add_zero_left" (formula "14") (term "0,0,1,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0,0"))
                     (rule "inEqSimp_notGeq" (formula "14") (term "0,0,0,0,0"))
                     (rule "times_zero_1" (formula "14") (term "1,0,0,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "14") (term "0,0,0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0,0,0"))
                     (rule "mul_literals" (formula "14") (term "1,0,0,0,0,0"))
                     (rule "arrayLengthNotNegative" (formula "8") (term "0"))
                     (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "9"))
                     (rule "leq_literals" (formula "8") (term "0"))
                     (builtin "One Step Simplification" (formula "8"))
                     (rule "true_left" (formula "8"))
                     (rule "arrayLengthIsAnInt" (formula "10") (term "1,1"))
                     (builtin "One Step Simplification" (formula "10"))
                     (rule "true_left" (formula "10"))
                     (rule "cut_direct" (formula "14") (term "1,0"))
                     (branch "CUT: leq(int::select(heap, self, Calendar::$entrySize), add(Z(neglit(2(#))), length(Calendar.Entry[]::select(heap, self, Calendar::$entries)))) TRUE"
                        (builtin "One Step Simplification" (formula "15"))
                        (rule "inEqSimp_subsumption0" (formula "11") (ifseqformula "1"))
                        (rule "inEqSimp_homoInEq0" (formula "11") (term "0"))
                        (rule "polySimp_mulComm0" (formula "11") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "11") (term "1,0,0"))
                        (rule "mul_literals" (formula "11") (term "0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "11") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "11") (term "0,0,0"))
                        (rule "add_literals" (formula "11") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0"))
                        (rule "add_literals" (formula "11") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "11") (term "1,0,0"))
                        (rule "add_zero_right" (formula "11") (term "0,0"))
                        (rule "qeq_literals" (formula "11") (term "0"))
                        (builtin "One Step Simplification" (formula "11"))
                        (rule "true_left" (formula "11"))
                        (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "1"))
                        (rule "times_zero_1" (formula "10") (term "0,0"))
                        (rule "add_zero_left" (formula "10") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                        (rule "mul_literals" (formula "10") (term "1"))
                        (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "10"))
                        (rule "leq_literals" (formula "9") (term "0"))
                        (builtin "One Step Simplification" (formula "9"))
                        (rule "true_left" (formula "9"))
                        (rule "andRight" (formula "14"))
                        (branch "Case 1"
                           (rule "allRight" (formula "14") (inst "sk=i_0"))
                           (rule "orRight" (formula "14"))
                           (rule "orRight" (formula "14"))
                           (rule "notRight" (formula "16"))
                           (rule "inEqSimp_geqRight" (formula "16"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "1") (term "0"))
                           (rule "inEqSimp_leqRight" (formula "16"))
                           (rule "mul_literals" (formula "1") (term "1,0,0"))
                           (rule "add_literals" (formula "1") (term "0,0"))
                           (rule "add_zero_left" (formula "1") (term "0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                           (rule "polySimp_elimOne" (formula "2") (term "0"))
                           (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_1"))
                           (rule "simplifySelectOfStore" (formula "3"))
                           (builtin "One Step Simplification" (formula "3"))
                           (rule "castDel" (formula "3") (term "1,0"))
                           (rule "narrowSelectArrayType" (formula "3") (term "2,0") (ifseqformula "7") (ifseqformula "15"))
                           (rule "applyEq" (formula "3") (term "1") (ifseqformula "4"))
                           (rule "ifEqualsNull" (formula "3"))
                           (rule "replace_known_right" (formula "3") (term "1,0") (ifseqformula "17"))
                           (builtin "One Step Simplification" (formula "3"))
                           (rule "andLeft" (formula "3"))
                           (rule "notLeft" (formula "3"))
                           (rule "allLeft" (formula "12") (inst "t=i_0"))
                           (rule "replace_known_left" (formula "12") (term "0,0,0") (ifseqformula "3"))
                           (builtin "One Step Simplification" (formula "12"))
                           (rule "inEqSimp_commuteGeq" (formula "12") (term "1"))
                           (rule "inEqSimp_contradInEq1" (formula "12") (term "0") (ifseqformula "1"))
                           (rule "qeq_literals" (formula "12") (term "0,0"))
                           (builtin "One Step Simplification" (formula "12"))
                           (rule "inEqSimp_contradInEq1" (formula "12") (ifseqformula "2"))
                           (rule "andLeft" (formula "12"))
                           (rule "inEqSimp_homoInEq1" (formula "12"))
                           (rule "polySimp_pullOutFactor1b" (formula "12") (term "0"))
                           (rule "add_literals" (formula "12") (term "1,1,0"))
                           (rule "times_zero_1" (formula "12") (term "1,0"))
                           (rule "add_zero_right" (formula "12") (term "0"))
                           (rule "leq_literals" (formula "12"))
                           (rule "closeFalse" (formula "12"))
                        )
                        (branch "Case 2"
                           (rule "allRight" (formula "14") (inst "sk=f_0"))
                           (rule "allRight" (formula "14") (inst "sk=o_0"))
                           (rule "orRight" (formula "14"))
                           (rule "orRight" (formula "14"))
                           (rule "orRight" (formula "14"))
                           (rule "orRight" (formula "14"))
                           (rule "pullOutSelect" (formula "18") (term "0") (inst "selectSK=f_0_0"))
                           (rule "simplifySelectOfStore" (formula "1"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "castDel" (formula "1") (term "1,0"))
                           (rule "eqSymm" (formula "19"))
                           (rule "eqSymm" (formula "1") (term "0,0,0"))
                           (rule "eqSymm" (formula "1") (term "1,0,0"))
                           (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "17"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "simplifySelectOfStore" (formula "1"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "castDel" (formula "1") (term "1,0"))
                           (rule "eqSymm" (formula "1") (term "0,0,0"))
                           (rule "eqSymm" (formula "1") (term "1,0,0"))
                           (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "16"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "19")))
                           (rule "closeFalse" (formula "1"))
                        )
                     )
                     (branch "CUT: leq(int::select(heap, self, Calendar::$entrySize), add(Z(neglit(2(#))), length(Calendar.Entry[]::select(heap, self, Calendar::$entries)))) FALSE"
                        (builtin "One Step Simplification" (formula "15"))
                        (rule "false_right" (formula "15"))
                        (rule "inEqSimp_leqRight" (formula "14"))
                        (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                        (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                        (rule "add_literals" (formula "1") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1"))
                        (rule "polySimp_rightDist" (formula "1") (term "1"))
                        (rule "mul_literals" (formula "1") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                        (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "11"))
                        (rule "applyEq" (formula "12") (term "0") (ifseqformula "1"))
                        (rule "inEqSimp_homoInEq0" (formula "12"))
                        (rule "polySimp_pullOutFactor1" (formula "12") (term "0"))
                        (rule "add_literals" (formula "12") (term "1,0"))
                        (rule "times_zero_1" (formula "12") (term "0"))
                        (rule "qeq_literals" (formula "12"))
                        (rule "true_left" (formula "12"))
                        (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                        (rule "inEqSimp_homoInEq1" (formula "2"))
                        (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                        (rule "add_literals" (formula "2") (term "1,0"))
                        (rule "times_zero_1" (formula "2") (term "0"))
                        (rule "leq_literals" (formula "2"))
                        (rule "true_left" (formula "2"))
                        (rule "applyEq" (formula "10") (term "0") (ifseqformula "1"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                        (rule "mul_literals" (formula "10") (term "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "10") (term "0") (ifseqformula "3"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "11"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "arrayLengthNotNegative" (formula "2") (term "1,1"))
                        (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "11"))
                        (rule "leq_literals" (formula "2") (term "0"))
                        (builtin "One Step Simplification" (formula "2"))
                        (rule "true_left" (formula "2"))
                        (rule "arrayLengthIsAnInt" (formula "2") (term "1,1"))
                        (builtin "One Step Simplification" (formula "2"))
                        (rule "true_left" (formula "2"))
                        (opengoal " ")
                     )
                  )
                  (branch "Show Axiom Satisfiability"
                     (builtin "One Step Simplification" (formula "14"))
                     (rule "closeTrue" (formula "14"))
                  )
               )
               (branch "Null Reference (c_1 = null)"
                  (builtin "One Step Simplification" (formula "15"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "13")))
                  (rule "closeFalse" (formula "1"))
               )
            )
            (branch "Null Reference (c = null)"
               (builtin "One Step Simplification" (formula "15"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "13")))
               (rule "closeFalse" (formula "1"))
            )
         )
         (branch "Null Reference (e_arr_2 = null)"
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "11")))
            (rule "closeFalse" (formula "1"))
         )
         (branch "Index Out of Bounds (e_arr_2 != null, but x_3 Out of Bounds!)"
            (builtin "One Step Simplification" (formula "14"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "11")))
            (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
            (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
            (rule "add_zero_right" (formula "1") (term "0,0,1"))
            (rule "inEqSimp_commuteLeq" (formula "1") (term "0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
            (rule "mul_literals" (formula "1") (term "1,1"))
            (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "9"))
            (rule "qeq_literals" (formula "1") (term "0,1"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "10"))
            (rule "andLeft" (formula "1"))
            (rule "inEqSimp_homoInEq1" (formula "1"))
            (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
            (rule "polySimp_rightDist" (formula "1") (term "1,0"))
            (rule "mul_literals" (formula "1") (term "0,1,0"))
            (rule "polySimp_addAssoc" (formula "1") (term "0"))
            (rule "polySimp_addComm0" (formula "1") (term "0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
            (rule "add_literals" (formula "1") (term "1,1,0"))
            (rule "times_zero_1" (formula "1") (term "1,0"))
            (rule "add_zero_right" (formula "1") (term "0"))
            (rule "leq_literals" (formula "1"))
            (rule "closeFalse" (formula "1"))
         )
         (branch "Array Store Exception (incompatible dynamic element type of e_arr_2 and _entry)"
            (builtin "One Step Simplification" (formula "14"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "11")) (ifInst ""  (formula "9")))
            (rule "andLeft" (formula "1"))
            (rule "notLeft" (formula "2"))
            (rule "inEqSimp_ltToLeq" (formula "1"))
            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "1"))
            (rule "polySimp_mulComm0" (formula "1") (term "1"))
            (rule "polySimp_rightDist" (formula "1") (term "1"))
            (rule "mul_literals" (formula "1") (term "0,1"))
            (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
            (rule "polySimp_elimOne" (formula "1") (term "1,1"))
            (rule "arrayLengthNotNegative" (formula "9") (term "1,1"))
            (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "7"))
            (rule "leq_literals" (formula "9") (term "0"))
            (builtin "One Step Simplification" (formula "9"))
            (rule "true_left" (formula "9"))
            (rule "arrayLengthIsAnInt" (formula "6") (term "1,1,0,0"))
            (builtin "One Step Simplification" (formula "6"))
            (rule "true_left" (formula "6"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "6") (term "0,1,1,0,0") (ifseqformula "1"))
            (rule "replace_known_right" (formula "6") (term "0") (ifseqformula "12"))
            (builtin "One Step Simplification" (formula "6"))
            (rule "throwUnfold" (formula "15") (term "1") (inst "#v0=a"))
            (rule "variableDeclarationAssign" (formula "15") (term "1"))
            (rule "variableDeclaration" (formula "15") (term "1") (newnames "a"))
            (rule "instanceCreationAssignment" (formula "15") (term "1") (inst "#v0=a_1"))
            (rule "variableDeclarationAssign" (formula "15") (term "1"))
            (rule "variableDeclaration" (formula "15") (term "1") (newnames "a_1"))
            (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "15") (term "1") (inst "#v0=a_2"))
            (rule "variableDeclaration" (formula "15") (term "1") (newnames "a_2"))
            (rule "methodBodyExpand" (formula "15") (term "1") (newnames "heapBefore_<createObject>,savedHeapBefore_<createObject>"))
            (builtin "One Step Simplification" (formula "15"))
            (rule "variableDeclaration" (formula "15") (term "1") (newnames "__NEW__"))
            (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "15") (term "1") (inst "#v0=a_3"))
            (rule "variableDeclaration" (formula "15") (term "1") (newnames "a_3"))
            (rule "allocateInstance" (formula "15"))
            (builtin "One Step Simplification" (formula "16"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "2")))
            (rule "andLeft" (formula "1"))
            (rule "andLeft" (formula "1"))
            (rule "notLeft" (formula "2"))
            (rule "notLeft" (formula "1"))
            (rule "blockEmpty" (formula "18") (term "1"))
            (rule "assignment" (formula "18") (term "1"))
            (builtin "One Step Simplification" (formula "18"))
            (rule "methodBodyExpand" (formula "18") (term "1") (newnames "heapBefore_<create>,savedHeapBefore_<create>"))
            (builtin "One Step Simplification" (formula "18"))
            (rule "assignment_write_attribute_this" (formula "18") (term "1"))
            (builtin "One Step Simplification" (formula "18"))
            (rule "methodCallWithinClass" (formula "18") (term "1"))
            (rule "methodBodyExpand" (formula "18") (term "1") (newnames "heapBefore_<prepareEnter>,savedHeapBefore_<prepareEnter>"))
            (builtin "One Step Simplification" (formula "18"))
            (rule "methodCallSuper" (formula "18") (term "1"))
            (rule "methodBodyExpand" (formula "18") (term "1") (newnames "heapBefore_<prepare>,savedHeapBefore_<prepare>"))
            (builtin "One Step Simplification" (formula "18"))
            (rule "methodCallSuper" (formula "18") (term "1"))
            (rule "methodBodyExpand" (formula "18") (term "1") (newnames "heapBefore_<prepare>_0,savedHeapBefore_<prepare>_0"))
            (builtin "One Step Simplification" (formula "18"))
            (rule "methodCallSuper" (formula "18") (term "1"))
            (rule "methodBodyExpand" (formula "18") (term "1") (newnames "heapBefore_<prepare>_1,savedHeapBefore_<prepare>_1"))
            (builtin "One Step Simplification" (formula "18"))
            (rule "methodCallSuper" (formula "18") (term "1"))
            (rule "methodBodyExpand" (formula "18") (term "1") (newnames "heapBefore_<prepare>_2,savedHeapBefore_<prepare>_2"))
            (builtin "One Step Simplification" (formula "18"))
            (rule "methodCallEmpty" (formula "18") (term "1"))
            (rule "blockEmpty" (formula "18") (term "1"))
            (rule "assignment_write_attribute_this" (formula "18") (term "1"))
            (builtin "One Step Simplification" (formula "18"))
            (rule "assignment_write_attribute_this" (formula "18") (term "1"))
            (builtin "One Step Simplification" (formula "18"))
            (rule "commute_or_2" (formula "8") (term "0"))
            (rule "commute_or" (formula "8") (term "0,0"))
            (rule "methodCallEmpty" (formula "18") (term "1"))
            (rule "methodCallEmpty" (formula "18") (term "1"))
            (rule "methodCallEmpty" (formula "18") (term "1"))
            (rule "methodCallEmpty" (formula "18") (term "1"))
            (rule "blockEmpty" (formula "18") (term "1"))
            (rule "methodCallReturnIgnoreResult" (formula "18") (term "1"))
            (rule "methodCallReturn" (formula "18") (term "1"))
            (rule "assignment" (formula "18") (term "1"))
            (builtin "One Step Simplification" (formula "18"))
            (rule "methodCallEmpty" (formula "18") (term "1"))
            (rule "blockEmpty" (formula "18") (term "1"))
            (rule "assignment" (formula "18") (term "1"))
            (builtin "One Step Simplification" (formula "18"))
            (rule "methodBodyExpand" (formula "18") (term "1") (newnames "heapBefore_<init>,savedHeapBefore_<init>"))
            (builtin "One Step Simplification" (formula "18"))
            (rule "methodCallSuper" (formula "18") (term "1"))
            (rule "methodBodyExpand" (formula "18") (term "1") (newnames "heapBefore_<init>_0,savedHeapBefore_<init>_0"))
            (builtin "One Step Simplification" (formula "18"))
            (rule "methodCallSuper" (formula "18") (term "1"))
            (rule "methodBodyExpand" (formula "18") (term "1") (newnames "heapBefore_<init>_1,savedHeapBefore_<init>_1"))
            (builtin "One Step Simplification" (formula "18"))
            (rule "methodCallSuper" (formula "18") (term "1"))
            (rule "methodBodyExpand" (formula "18") (term "1") (newnames "heapBefore_<init>_2,savedHeapBefore_<init>_2"))
            (builtin "One Step Simplification" (formula "18"))
            (rule "methodCallSuper" (formula "18") (term "1"))
            (rule "methodBodyExpand" (formula "18") (term "1") (newnames "heapBefore_<init>_3,savedHeapBefore_<init>_3"))
            (builtin "One Step Simplification" (formula "18"))
            (rule "methodCallEmpty" (formula "18") (term "1"))
            (rule "blockEmpty" (formula "18") (term "1"))
            (rule "assignment_write_attribute_this" (formula "18") (term "1"))
            (builtin "One Step Simplification" (formula "18"))
            (rule "assignment_write_attribute_this" (formula "18") (term "1"))
            (builtin "One Step Simplification" (formula "18"))
            (rule "methodCallEmpty" (formula "18") (term "1"))
            (rule "methodCallEmpty" (formula "18") (term "1"))
            (rule "methodCallEmpty" (formula "18") (term "1"))
            (rule "methodCallEmpty" (formula "18") (term "1"))
            (rule "blockEmpty" (formula "18") (term "1"))
            (rule "assignment_write_attribute" (formula "18") (term "1"))
            (branch "Normal Execution (a_1 != null)"
               (builtin "One Step Simplification" (formula "19"))
               (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "12")))
               (rule "false_right" (formula "18"))
               (rule "assignment" (formula "18") (term "1"))
               (builtin "One Step Simplification" (formula "18"))
               (rule "arrayLengthIsAnInt" (formula "9") (term "0"))
               (builtin "One Step Simplification" (formula "9"))
               (rule "true_left" (formula "9"))
               (rule "arrayLengthNotNegative" (formula "9") (term "0"))
               (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "10"))
               (rule "leq_literals" (formula "9") (term "0"))
               (builtin "One Step Simplification" (formula "9"))
               (rule "true_left" (formula "9"))
               (rule "methodCallThrow" (formula "18") (term "1"))
               (rule "tryCatchThrow" (formula "18") (term "1"))
               (rule "ifElseUnfold" (formula "18") (term "1") (inst "#boolv=x"))
               (rule "variableDeclaration" (formula "18") (term "1") (newnames "x_4"))
               (rule "equality_comparison_simple" (formula "18") (term "1"))
               (builtin "One Step Simplification" (formula "18"))
               (rule "replace_known_right" (formula "18") (term "0,0,1,0") (ifseqformula "12"))
               (builtin "One Step Simplification" (formula "18"))
               (rule "ifElseSplit" (formula "18"))
               (branch "if x_4 true"
                  (builtin "One Step Simplification" (formula "19"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "closeFalse" (formula "1"))
               )
               (branch "if x_4 false"
                  (builtin "One Step Simplification" (formula "19"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "true_left" (formula "1"))
                  (rule "ifElseSplit" (formula "18"))
                  (branch "if a instanceof java.lang.Throwable true"
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "13")))
                     (rule "true_left" (formula "1"))
                     (rule "variableDeclaration" (formula "18") (term "1") (newnames "e"))
                     (rule "delete_unnecessary_cast" (formula "18") (term "1"))
                     (branch "Normal Execution (a instanceof java.lang.Throwable)"
                        (builtin "One Step Simplification" (formula "19"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "true_left" (formula "1"))
                        (rule "assignment" (formula "18") (term "1"))
                        (builtin "One Step Simplification" (formula "18"))
                        (rule "emptyModality" (formula "18") (term "1"))
                        (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "12")))
                        (rule "false_right" (formula "18"))
                        (opengoal " ")
                     )
                     (branch "ClassCastException (!(a instanceof java.lang.Throwable))"
                        (builtin "One Step Simplification" (formula "19"))
                        (builtin "One Step Simplification" (formula "18"))
                        (rule "closeTrue" (formula "18"))
                     )
                  )
                  (branch "if a instanceof java.lang.Throwable false"
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "13")))
                     (rule "closeFalse" (formula "1"))
                  )
               )
            )
            (branch "Null Reference (a_1 = null)"
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "13")))
               (rule "closeFalse" (formula "1"))
            )
         )
      )
   )
   (branch "Null Reference (e_arr = null)"
      (builtin "One Step Simplification" (formula "14"))
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "11")))
      (rule "closeFalse" (formula "1"))
   )
)
(branch "Show Axiom Satisfiability"
   (builtin "One Step Simplification" (formula "7"))
   (rule "closeTrue" (formula "7"))
)
)

}
