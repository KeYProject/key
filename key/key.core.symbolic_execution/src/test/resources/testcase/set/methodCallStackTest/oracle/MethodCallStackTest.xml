<?xml version="1.0" encoding="UTF-8"?>
<start name="&lt;start&gt;" pathCondition="true" pathConditionChanged="false">
   <methodCall name="&lt;call MethodCallStackTest.magic(x,y)&gt;" pathCondition="true" pathConditionChanged="false">
      <statement name="boolean first = positive(x);" pathCondition="true" pathConditionChanged="false">
         <callStackEntry path="/0"/>
         <methodCall name="&lt;call MethodCallStackTest.positive(x_2)&gt;" pathCondition="true" pathConditionChanged="false">
            <callStackEntry path="/0"/>
            <branchStatement name="if (x_2&gt;=0)" pathCondition="true" pathConditionChanged="false" blockOpened="true">
               <callStackEntry path="/0/0/0"/>
               <callStackEntry path="/0"/>
               <branchCondition name="gt(x,Z(neglit(1(#))))" pathCondition="gt(x,Z(neglit(1(#))))" pathConditionChanged="true" branchCondition="gt(x,Z(neglit(1(#))))" mergedBranchCondition="false" isBranchConditionComputed="true">
                  <callStackEntry path="/0/0/0"/>
                  <callStackEntry path="/0"/>
                  <statement name="return true;" pathCondition="gt(x,Z(neglit(1(#))))" pathConditionChanged="false">
                     <callStackEntry path="/0/0/0"/>
                     <callStackEntry path="/0"/>
                     <methodReturn name="&lt;return of positive&gt;" signature="&lt;return of MethodCallStackTest.positive(x_2)&gt;" pathCondition="gt(x,Z(neglit(1(#))))" pathConditionChanged="false" nameIncludingReturnValue="&lt;return TRUE as result of positive&gt;" signatureIncludingReturnValue="&lt;return TRUE as result of MethodCallStackTest.positive(x_2)&gt;" isReturnValueComputed="true" methodReturnCondition="gt(x,Z(neglit(1(#))))">
                        <methodReturnValue name="TRUE" returnValueString="TRUE" hasCondition="false">
                        </methodReturnValue>
                        <callStackEntry path="/0/0/0"/>
                        <callStackEntry path="/0"/>
                        <statement name="boolean second = positive(y);" pathCondition="gt(x,Z(neglit(1(#))))" pathConditionChanged="false">
                           <callStackEntry path="/0"/>
                           <methodCall name="&lt;call MethodCallStackTest.positive(x_5)&gt;" pathCondition="gt(x,Z(neglit(1(#))))" pathConditionChanged="false">
                              <callStackEntry path="/0"/>
                              <branchStatement name="if (x_5&gt;=0)" pathCondition="gt(x,Z(neglit(1(#))))" pathConditionChanged="false" blockOpened="true">
                                 <callStackEntry path="/0/0/0/0/0/0/0/0/0"/>
                                 <callStackEntry path="/0"/>
                                 <branchCondition name="gt(y,Z(neglit(1(#))))" pathCondition="and(geq(x,Z(0(#))),geq(y,Z(0(#))))" pathConditionChanged="true" branchCondition="gt(y,Z(neglit(1(#))))" mergedBranchCondition="false" isBranchConditionComputed="true">
                                    <callStackEntry path="/0/0/0/0/0/0/0/0/0"/>
                                    <callStackEntry path="/0"/>
                                    <statement name="return true;" pathCondition="and(geq(x,Z(0(#))),geq(y,Z(0(#))))" pathConditionChanged="false">
                                       <callStackEntry path="/0/0/0/0/0/0/0/0/0"/>
                                       <callStackEntry path="/0"/>
                                       <methodReturn name="&lt;return of positive&gt;" signature="&lt;return of MethodCallStackTest.positive(x_5)&gt;" pathCondition="and(geq(x,Z(0(#))),geq(y,Z(0(#))))" pathConditionChanged="false" nameIncludingReturnValue="&lt;return TRUE as result of positive&gt;" signatureIncludingReturnValue="&lt;return TRUE as result of MethodCallStackTest.positive(x_5)&gt;" isReturnValueComputed="true" methodReturnCondition="gt(y,Z(neglit(1(#))))">
                                          <methodReturnValue name="TRUE" returnValueString="TRUE" hasCondition="false">
                                          </methodReturnValue>
                                          <callStackEntry path="/0/0/0/0/0/0/0/0/0"/>
                                          <callStackEntry path="/0"/>
                                          <statement name="return first_1&amp;&amp;second_1;" pathCondition="and(geq(x,Z(0(#))),geq(y,Z(0(#))))" pathConditionChanged="false">
                                             <callStackEntry path="/0"/>
                                             <methodReturn name="&lt;return of magic&gt;" signature="&lt;return of MethodCallStackTest.magic(x,y)&gt;" pathCondition="and(geq(x,Z(0(#))),geq(y,Z(0(#))))" pathConditionChanged="false" nameIncludingReturnValue="&lt;return TRUE as result of magic&gt;" signatureIncludingReturnValue="&lt;return TRUE as result of MethodCallStackTest.magic(x,y)&gt;" isReturnValueComputed="true" methodReturnCondition="and(geq(x,Z(0(#))),geq(y,Z(0(#))))">
                                                <methodReturnValue name="TRUE" returnValueString="TRUE" hasCondition="false">
                                                </methodReturnValue>
                                                <callStackEntry path="/0"/>
                                                <termination name="&lt;end&gt;" pathCondition="and(geq(x,Z(0(#))),geq(y,Z(0(#))))" pathConditionChanged="false" terminationKind="NORMAL" branchVerified="true">
                                                </termination>
                                             </methodReturn>
                                          </statement>
                                       </methodReturn>
                                       <completedBlockEntry path="/0/0/0/0/0/0/0/0/0/0" conditionString="gt(y,Z(neglit(1(#))))"/>
                                    </statement>
                                 </branchCondition>
                                 <branchCondition name="lt(y,Z(0(#)))" pathCondition="and(geq(x,Z(0(#))),leq(y,Z(neglit(1(#)))))" pathConditionChanged="true" branchCondition="lt(y,Z(0(#)))" mergedBranchCondition="false" isBranchConditionComputed="true">
                                    <callStackEntry path="/0/0/0/0/0/0/0/0/0"/>
                                    <callStackEntry path="/0"/>
                                    <statement name="return false;" pathCondition="and(geq(x,Z(0(#))),leq(y,Z(neglit(1(#)))))" pathConditionChanged="false">
                                       <callStackEntry path="/0/0/0/0/0/0/0/0/0"/>
                                       <callStackEntry path="/0"/>
                                       <methodReturn name="&lt;return of positive&gt;" signature="&lt;return of MethodCallStackTest.positive(x_5)&gt;" pathCondition="and(geq(x,Z(0(#))),leq(y,Z(neglit(1(#)))))" pathConditionChanged="false" nameIncludingReturnValue="&lt;return FALSE as result of positive&gt;" signatureIncludingReturnValue="&lt;return FALSE as result of MethodCallStackTest.positive(x_5)&gt;" isReturnValueComputed="true" methodReturnCondition="lt(y,Z(0(#)))">
                                          <methodReturnValue name="FALSE" returnValueString="FALSE" hasCondition="false">
                                          </methodReturnValue>
                                          <callStackEntry path="/0/0/0/0/0/0/0/0/0"/>
                                          <callStackEntry path="/0"/>
                                          <statement name="return first_1&amp;&amp;second_1;" pathCondition="and(geq(x,Z(0(#))),leq(y,Z(neglit(1(#)))))" pathConditionChanged="false">
                                             <callStackEntry path="/0"/>
                                             <methodReturn name="&lt;return of magic&gt;" signature="&lt;return of MethodCallStackTest.magic(x,y)&gt;" pathCondition="and(geq(x,Z(0(#))),leq(y,Z(neglit(1(#)))))" pathConditionChanged="false" nameIncludingReturnValue="&lt;return FALSE as result of magic&gt;" signatureIncludingReturnValue="&lt;return FALSE as result of MethodCallStackTest.magic(x,y)&gt;" isReturnValueComputed="true" methodReturnCondition="and(geq(x,Z(0(#))),leq(y,Z(neglit(1(#)))))">
                                                <methodReturnValue name="FALSE" returnValueString="FALSE" hasCondition="false">
                                                </methodReturnValue>
                                                <callStackEntry path="/0"/>
                                                <termination name="&lt;end&gt;" pathCondition="and(geq(x,Z(0(#))),leq(y,Z(neglit(1(#)))))" pathConditionChanged="false" terminationKind="NORMAL" branchVerified="true">
                                                </termination>
                                             </methodReturn>
                                          </statement>
                                       </methodReturn>
                                       <completedBlockEntry path="/0/0/0/0/0/0/0/0/0/0" conditionString="lt(y,Z(0(#)))"/>
                                    </statement>
                                 </branchCondition>
                                 <blockCompletionEntry path="/0/0/0/0/0/0/0/0/0/0/0/0"/>
                                 <blockCompletionEntry path="/0/0/0/0/0/0/0/0/0/0/1/0"/>
                              </branchStatement>
                              <methodReturnEntry path="/0/0/0/0/0/0/0/0/0/0/0/0/0"/>
                              <methodReturnEntry path="/0/0/0/0/0/0/0/0/0/0/1/0/0"/>
                           </methodCall>
                        </statement>
                     </methodReturn>
                     <completedBlockEntry path="/0/0/0/0" conditionString="gt(x,Z(neglit(1(#))))"/>
                  </statement>
               </branchCondition>
               <branchCondition name="lt(x,Z(0(#)))" pathCondition="lt(x,Z(0(#)))" pathConditionChanged="true" branchCondition="lt(x,Z(0(#)))" mergedBranchCondition="false" isBranchConditionComputed="true">
                  <callStackEntry path="/0/0/0"/>
                  <callStackEntry path="/0"/>
                  <statement name="return false;" pathCondition="lt(x,Z(0(#)))" pathConditionChanged="false">
                     <callStackEntry path="/0/0/0"/>
                     <callStackEntry path="/0"/>
                     <methodReturn name="&lt;return of positive&gt;" signature="&lt;return of MethodCallStackTest.positive(x_2)&gt;" pathCondition="lt(x,Z(0(#)))" pathConditionChanged="false" nameIncludingReturnValue="&lt;return FALSE as result of positive&gt;" signatureIncludingReturnValue="&lt;return FALSE as result of MethodCallStackTest.positive(x_2)&gt;" isReturnValueComputed="true" methodReturnCondition="lt(x,Z(0(#)))">
                        <methodReturnValue name="FALSE" returnValueString="FALSE" hasCondition="false">
                        </methodReturnValue>
                        <callStackEntry path="/0/0/0"/>
                        <callStackEntry path="/0"/>
                        <statement name="boolean second = positive(y);" pathCondition="lt(x,Z(0(#)))" pathConditionChanged="false">
                           <callStackEntry path="/0"/>
                           <methodCall name="&lt;call MethodCallStackTest.positive(x_5)&gt;" pathCondition="lt(x,Z(0(#)))" pathConditionChanged="false">
                              <callStackEntry path="/0"/>
                              <branchStatement name="if (x_5&gt;=0)" pathCondition="lt(x,Z(0(#)))" pathConditionChanged="false" blockOpened="true">
                                 <callStackEntry path="/0/0/0/0/1/0/0/0/0"/>
                                 <callStackEntry path="/0"/>
                                 <branchCondition name="gt(y,Z(neglit(1(#))))" pathCondition="and(leq(x,Z(neglit(1(#)))),geq(y,Z(0(#))))" pathConditionChanged="true" branchCondition="gt(y,Z(neglit(1(#))))" mergedBranchCondition="false" isBranchConditionComputed="true">
                                    <callStackEntry path="/0/0/0/0/1/0/0/0/0"/>
                                    <callStackEntry path="/0"/>
                                    <statement name="return true;" pathCondition="and(leq(x,Z(neglit(1(#)))),geq(y,Z(0(#))))" pathConditionChanged="false">
                                       <callStackEntry path="/0/0/0/0/1/0/0/0/0"/>
                                       <callStackEntry path="/0"/>
                                       <methodReturn name="&lt;return of positive&gt;" signature="&lt;return of MethodCallStackTest.positive(x_5)&gt;" pathCondition="and(leq(x,Z(neglit(1(#)))),geq(y,Z(0(#))))" pathConditionChanged="false" nameIncludingReturnValue="&lt;return TRUE as result of positive&gt;" signatureIncludingReturnValue="&lt;return TRUE as result of MethodCallStackTest.positive(x_5)&gt;" isReturnValueComputed="true" methodReturnCondition="gt(y,Z(neglit(1(#))))">
                                          <methodReturnValue name="TRUE" returnValueString="TRUE" hasCondition="false">
                                          </methodReturnValue>
                                          <callStackEntry path="/0/0/0/0/1/0/0/0/0"/>
                                          <callStackEntry path="/0"/>
                                          <statement name="return first_1&amp;&amp;second_1;" pathCondition="and(leq(x,Z(neglit(1(#)))),geq(y,Z(0(#))))" pathConditionChanged="false">
                                             <callStackEntry path="/0"/>
                                             <methodReturn name="&lt;return of magic&gt;" signature="&lt;return of MethodCallStackTest.magic(x,y)&gt;" pathCondition="and(leq(x,Z(neglit(1(#)))),geq(y,Z(0(#))))" pathConditionChanged="false" nameIncludingReturnValue="&lt;return FALSE as result of magic&gt;" signatureIncludingReturnValue="&lt;return FALSE as result of MethodCallStackTest.magic(x,y)&gt;" isReturnValueComputed="true" methodReturnCondition="and(leq(x,Z(neglit(1(#)))),geq(y,Z(0(#))))">
                                                <methodReturnValue name="FALSE" returnValueString="FALSE" hasCondition="false">
                                                </methodReturnValue>
                                                <callStackEntry path="/0"/>
                                                <termination name="&lt;end&gt;" pathCondition="and(leq(x,Z(neglit(1(#)))),geq(y,Z(0(#))))" pathConditionChanged="false" terminationKind="NORMAL" branchVerified="true">
                                                </termination>
                                             </methodReturn>
                                          </statement>
                                       </methodReturn>
                                       <completedBlockEntry path="/0/0/0/0/1/0/0/0/0/0" conditionString="gt(y,Z(neglit(1(#))))"/>
                                    </statement>
                                 </branchCondition>
                                 <branchCondition name="lt(y,Z(0(#)))" pathCondition="and(leq(x,Z(neglit(1(#)))),leq(y,Z(neglit(1(#)))))" pathConditionChanged="true" branchCondition="lt(y,Z(0(#)))" mergedBranchCondition="false" isBranchConditionComputed="true">
                                    <callStackEntry path="/0/0/0/0/1/0/0/0/0"/>
                                    <callStackEntry path="/0"/>
                                    <statement name="return false;" pathCondition="and(leq(x,Z(neglit(1(#)))),leq(y,Z(neglit(1(#)))))" pathConditionChanged="false">
                                       <callStackEntry path="/0/0/0/0/1/0/0/0/0"/>
                                       <callStackEntry path="/0"/>
                                       <methodReturn name="&lt;return of positive&gt;" signature="&lt;return of MethodCallStackTest.positive(x_5)&gt;" pathCondition="and(leq(x,Z(neglit(1(#)))),leq(y,Z(neglit(1(#)))))" pathConditionChanged="false" nameIncludingReturnValue="&lt;return FALSE as result of positive&gt;" signatureIncludingReturnValue="&lt;return FALSE as result of MethodCallStackTest.positive(x_5)&gt;" isReturnValueComputed="true" methodReturnCondition="lt(y,Z(0(#)))">
                                          <methodReturnValue name="FALSE" returnValueString="FALSE" hasCondition="false">
                                          </methodReturnValue>
                                          <callStackEntry path="/0/0/0/0/1/0/0/0/0"/>
                                          <callStackEntry path="/0"/>
                                          <statement name="return first_1&amp;&amp;second_1;" pathCondition="and(leq(x,Z(neglit(1(#)))),leq(y,Z(neglit(1(#)))))" pathConditionChanged="false">
                                             <callStackEntry path="/0"/>
                                             <methodReturn name="&lt;return of magic&gt;" signature="&lt;return of MethodCallStackTest.magic(x,y)&gt;" pathCondition="and(leq(x,Z(neglit(1(#)))),leq(y,Z(neglit(1(#)))))" pathConditionChanged="false" nameIncludingReturnValue="&lt;return FALSE as result of magic&gt;" signatureIncludingReturnValue="&lt;return FALSE as result of MethodCallStackTest.magic(x,y)&gt;" isReturnValueComputed="true" methodReturnCondition="and(leq(x,Z(neglit(1(#)))),leq(y,Z(neglit(1(#)))))">
                                                <methodReturnValue name="FALSE" returnValueString="FALSE" hasCondition="false">
                                                </methodReturnValue>
                                                <callStackEntry path="/0"/>
                                                <termination name="&lt;end&gt;" pathCondition="and(leq(x,Z(neglit(1(#)))),leq(y,Z(neglit(1(#)))))" pathConditionChanged="false" terminationKind="NORMAL" branchVerified="true">
                                                </termination>
                                             </methodReturn>
                                          </statement>
                                       </methodReturn>
                                       <completedBlockEntry path="/0/0/0/0/1/0/0/0/0/0" conditionString="lt(y,Z(0(#)))"/>
                                    </statement>
                                 </branchCondition>
                                 <blockCompletionEntry path="/0/0/0/0/1/0/0/0/0/0/0/0"/>
                                 <blockCompletionEntry path="/0/0/0/0/1/0/0/0/0/0/1/0"/>
                              </branchStatement>
                              <methodReturnEntry path="/0/0/0/0/1/0/0/0/0/0/0/0/0"/>
                              <methodReturnEntry path="/0/0/0/0/1/0/0/0/0/0/1/0/0"/>
                           </methodCall>
                        </statement>
                     </methodReturn>
                     <completedBlockEntry path="/0/0/0/0" conditionString="lt(x,Z(0(#)))"/>
                  </statement>
               </branchCondition>
               <blockCompletionEntry path="/0/0/0/0/0/0"/>
               <blockCompletionEntry path="/0/0/0/0/1/0"/>
            </branchStatement>
            <methodReturnEntry path="/0/0/0/0/0/0/0"/>
            <methodReturnEntry path="/0/0/0/0/1/0/0"/>
         </methodCall>
      </statement>
      <methodReturnEntry path="/0/0/0/0/0/0/0/0/0/0/0/0/0/0/0"/>
      <methodReturnEntry path="/0/0/0/0/0/0/0/0/0/0/1/0/0/0/0"/>
      <methodReturnEntry path="/0/0/0/0/1/0/0/0/0/0/0/0/0/0/0"/>
      <methodReturnEntry path="/0/0/0/0/1/0/0/0/0/0/1/0/0/0/0"/>
   </methodCall>
   <terminationEntry path="/0/0/0/0/0/0/0/0/0/0/0/0/0/0/0/0"/>
   <terminationEntry path="/0/0/0/0/0/0/0/0/0/0/1/0/0/0/0/0"/>
   <terminationEntry path="/0/0/0/0/1/0/0/0/0/0/0/0/0/0/0/0"/>
   <terminationEntry path="/0/0/0/0/1/0/0/0/0/0/1/0/0/0/0/0"/>
</start>
