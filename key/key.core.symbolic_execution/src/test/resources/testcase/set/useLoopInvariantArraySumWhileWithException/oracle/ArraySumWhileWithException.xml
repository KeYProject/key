<?xml version="1.0" encoding="UTF-8"?>
<start name="&lt;start&gt;" pathCondition="true" pathConditionChanged="false">
   <methodCall name="&lt;call ArraySumWhileWithException.sum(array)&gt;" pathCondition="true" pathConditionChanged="false">
      <statement name="int result = 0;" pathCondition="true" pathConditionChanged="false">
         <callStackEntry path="/0"/>
         <statement name="int i = 0;" pathCondition="true" pathConditionChanged="false">
            <callStackEntry path="/0"/>
            <loopInvariant name="invariant: (  (i &gt;= 0
 &amp; i &lt;= array.length)&lt;&lt;SC&gt;&gt;
 &amp; result_1 = javaCastInt(bsum{int j;}(0, i, array[j])))&lt;&lt;SC&gt;&gt;;
variant: javaSubInt(array.length, i)
mod: false" pathCondition="true" pathConditionChanged="false" initiallyValid="true">
               <callStackEntry path="/0"/>
               <branchCondition name="or(lt(length(array),Z(0(#))),and(and(geq(i_0,Z(0(#))),gt(length(array),i_0)),equals(bsum{j:int}(Z(0(#)),i_0,int::select(heap,array,arr(j))),result_1_0)))" pathCondition="imp(geq(length(array),Z(0(#))),and(and(geq(i_0,Z(0(#))),gt(length(array),i_0)),equals(bsum{j:int}(Z(0(#)),i_0,int::select(heap,array,arr(j))),result_1_0)))" pathConditionChanged="true" branchCondition="or(lt(length(array),Z(0(#))),and(and(geq(i_0,Z(0(#))),gt(length(array),i_0)),equals(bsum{j:int}(Z(0(#)),i_0,int::select(heap,array,arr(j))),result_1_0)))" mergedBranchCondition="false" isBranchConditionComputed="true" additionalBranchLabel="Body Preserves Invariant">
                  <callStackEntry path="/0"/>
                  <loopCondition name="i&lt;array.length" pathCondition="imp(geq(length(array),Z(0(#))),and(and(geq(i_0,Z(0(#))),gt(length(array),i_0)),equals(bsum{j:int}(Z(0(#)),i_0,int::select(heap,array,arr(j))),result_1_0)))" pathConditionChanged="false" blockOpened="false">
                     <callStackEntry path="/0"/>
                     <statement name="result_1+=array[i];" pathCondition="imp(geq(length(array),Z(0(#))),and(and(geq(i_0,Z(0(#))),gt(length(array),i_0)),equals(bsum{j:int}(Z(0(#)),i_0,int::select(heap,array,arr(j))),result_1_0)))" pathConditionChanged="false">
                        <callStackEntry path="/0"/>
                        <statement name="i++;" pathCondition="imp(geq(length(array),Z(0(#))),and(and(geq(i_0,Z(0(#))),gt(length(array),i_0)),equals(bsum{j:int}(Z(0(#)),i_0,int::select(heap,array,arr(j))),result_1_0)))" pathConditionChanged="false">
                           <callStackEntry path="/0"/>
                           <branchStatement name="if (array.length==3)" pathCondition="imp(geq(length(array),Z(0(#))),and(and(geq(i_0,Z(0(#))),gt(length(array),i_0)),equals(bsum{j:int}(Z(0(#)),i_0,int::select(heap,array,arr(j))),result_1_0)))" pathConditionChanged="false" blockOpened="true">
                              <callStackEntry path="/0"/>
                              <branchCondition name="equals(length(array),Z(3(#)))" pathCondition="imp(geq(length(array),Z(0(#))),and(and(and(geq(i_0,Z(0(#))),leq(i_0,Z(2(#)))),equals(length(array),Z(3(#)))),equals(bsum{j:int}(Z(0(#)),i_0,int::select(heap,array,arr(j))),result_1_0)))" pathConditionChanged="true" branchCondition="equals(length(array),Z(3(#)))" mergedBranchCondition="false" isBranchConditionComputed="true">
                                 <callStackEntry path="/0"/>
                                 <statement name="throw new RuntimeException ();" pathCondition="imp(geq(length(array),Z(0(#))),and(and(and(geq(i_0,Z(0(#))),leq(i_0,Z(2(#)))),equals(length(array),Z(3(#)))),equals(bsum{j:int}(Z(0(#)),i_0,int::select(heap,array,arr(j))),result_1_0)))" pathConditionChanged="false">
                                    <callStackEntry path="/0"/>
                                    <exceptionalMethodReturn name="&lt;throw java.lang.Throwable&gt;" signature="&lt;exceptional return of &lt;call ArraySumWhileWithException.sum(array)&gt;&gt;" pathCondition="imp(geq(length(array),Z(0(#))),and(and(and(geq(i_0,Z(0(#))),leq(i_0,Z(2(#)))),equals(length(array),Z(3(#)))),equals(bsum{j:int}(Z(0(#)),i_0,int::select(heap,array,arr(j))),result_1_0)))" pathConditionChanged="false" methodReturnCondition="imp(geq(length(array),Z(0(#))),and(and(and(geq(i_0,Z(0(#))),leq(i_0,Z(2(#)))),equals(length(array),Z(3(#)))),equals(bsum{j:int}(Z(0(#)),i_0,int::select(heap,array,arr(j))),result_1_0)))">
                                       <callStackEntry path="/0"/>
                                       <termination name="&lt;uncaught java.lang.RuntimeException&gt;" pathCondition="imp(geq(length(array),Z(0(#))),and(and(and(geq(i_0,Z(0(#))),leq(i_0,Z(2(#)))),equals(length(array),Z(3(#)))),equals(bsum{j:int}(Z(0(#)),i_0,int::select(heap,array,arr(j))),result_1_0)))" pathConditionChanged="false" terminationKind="EXCEPTIONAL" branchVerified="true">
                                       </termination>
                                    </exceptionalMethodReturn>
                                    <completedBlockEntry path="/0/0/0/0/0/0/0/0/0" conditionString="imp(geq(length(array),Z(0(#))),equals(length(array),Z(3(#))))"/>
                                 </statement>
                              </branchCondition>
                              <branchCondition name="not(equals(length(array),Z(3(#))))" pathCondition="imp(geq(length(array),Z(0(#))),and(and(and(geq(i_0,Z(0(#))),not(equals(length(array),Z(3(#))))),gt(length(array),i_0)),equals(bsum{j:int}(Z(0(#)),i_0,int::select(heap,array,arr(j))),result_1_0)))" pathConditionChanged="true" branchCondition="not(equals(length(array),Z(3(#))))" mergedBranchCondition="false" isBranchConditionComputed="true">
                                 <callStackEntry path="/0"/>
                                 <termination name="&lt;loop body end&gt;" pathCondition="imp(geq(length(array),Z(0(#))),and(and(and(geq(i_0,Z(0(#))),not(equals(length(array),Z(3(#))))),gt(length(array),i_0)),equals(bsum{j:int}(Z(0(#)),i_0,int::select(heap,array,arr(j))),result_1_0)))" pathConditionChanged="false" terminationKind="LOOP_BODY" branchVerified="true">
                                 </termination>
                                 <completedBlockEntry path="/0/0/0/0/0/0/0/0/0" conditionString="true"/>
                              </branchCondition>
                              <blockCompletionEntry path="/0/0/0/0/0/0/0/0/0/0/0"/>
                              <blockCompletionEntry path="/0/0/0/0/0/0/0/0/0/1"/>
                           </branchStatement>
                        </statement>
                     </statement>
                  </loopCondition>
               </branchCondition>
               <branchCondition name="or(lt(length(array),Z(0(#))),and(and(geq(i_0,Z(0(#))),equals(length(array),i_0)),equals(bsum{j:int}(Z(0(#)),i_0,int::select(heap,array,arr(j))),result_1_0)))" pathCondition="imp(geq(length(array),Z(0(#))),and(and(geq(i_0,Z(0(#))),equals(length(array),i_0)),equals(bsum{j:int}(Z(0(#)),i_0,int::select(heap,array,arr(j))),result_1_0)))" pathConditionChanged="true" branchCondition="or(lt(length(array),Z(0(#))),and(and(geq(i_0,Z(0(#))),equals(length(array),i_0)),equals(bsum{j:int}(Z(0(#)),i_0,int::select(heap,array,arr(j))),result_1_0)))" mergedBranchCondition="false" isBranchConditionComputed="true" additionalBranchLabel="Use Case">
                  <callStackEntry path="/0"/>
                  <statement name="return result_1;" pathCondition="imp(geq(length(array),Z(0(#))),and(and(geq(i_0,Z(0(#))),equals(length(array),i_0)),equals(bsum{j:int}(Z(0(#)),i_0,int::select(heap,array,arr(j))),result_1_0)))" pathConditionChanged="false">
                     <callStackEntry path="/0"/>
                     <methodReturn name="&lt;return of sum&gt;" signature="&lt;return of ArraySumWhileWithException.sum(array)&gt;" pathCondition="imp(geq(length(array),Z(0(#))),and(and(geq(i_0,Z(0(#))),equals(length(array),i_0)),equals(bsum{j:int}(Z(0(#)),i_0,int::select(heap,array,arr(j))),result_1_0)))" pathConditionChanged="false" isReturnValueComputed="false" methodReturnCondition="imp(geq(length(array),Z(0(#))),and(and(geq(i_0,Z(0(#))),equals(length(array),i_0)),equals(bsum{j:int}(Z(0(#)),i_0,int::select(heap,array,arr(j))),result_1_0)))">
                        <callStackEntry path="/0"/>
                        <termination name="&lt;end&gt;" pathCondition="imp(geq(length(array),Z(0(#))),and(and(geq(i_0,Z(0(#))),equals(length(array),i_0)),equals(bsum{j:int}(Z(0(#)),i_0,int::select(heap,array,arr(j))),result_1_0)))" pathConditionChanged="false" terminationKind="NORMAL" branchVerified="true">
                        </termination>
                     </methodReturn>
                  </statement>
               </branchCondition>
            </loopInvariant>
         </statement>
      </statement>
      <methodReturnEntry path="/0/0/0/0/0/0/0/0/0/0/0/0"/>
      <methodReturnEntry path="/0/0/0/0/1/0/0"/>
   </methodCall>
   <terminationEntry path="/0/0/0/0/0/0/0/0/0/0/0/0/0"/>
   <terminationEntry path="/0/0/0/0/0/0/0/0/0/1/0"/>
   <terminationEntry path="/0/0/0/0/1/0/0/0"/>
</start>
