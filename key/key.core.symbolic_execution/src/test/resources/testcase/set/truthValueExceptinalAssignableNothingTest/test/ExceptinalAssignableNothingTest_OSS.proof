\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Mon Jul 18 11:01:31 CEST 2016
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]useUninterpretedMultiplication=true
[SMTSettings]SelectedTaclets=\\#begboolean_equal_2\\#end,\\#begboolean_not_equal_1\\#end,\\#begboolean_not_equal_2\\#end,\\#begtrue_to_not_false\\#end,\\#begfalse_to_not_true\\#end,\\#begboolean_true_commute\\#end,\\#begboolean_false_commute\\#end,\\#begapply_eq_boolean\\#end,\\#begapply_eq_boolean_2\\#end,\\#begapply_eq_boolean_rigid\\#end,\\#begapply_eq_boolean_rigid_2\\#end,\\#begexpand_inByte\\#end,\\#begexpand_inChar\\#end,\\#begexpand_inShort\\#end,\\#begexpand_inInt\\#end,\\#begexpand_inLong\\#end,\\#begreplace_byte_MAX\\#end,\\#begreplace_byte_MIN\\#end,\\#begreplace_char_MAX\\#end,\\#begreplace_char_MIN\\#end,\\#begreplace_short_MAX\\#end,\\#begreplace_short_MIN\\#end,\\#begreplace_int_MAX\\#end,\\#begreplace_int_MIN\\#end,\\#begreplace_long_MAX\\#end,\\#begreplace_long_MIN\\#end,\\#begreplace_byte_RANGE\\#end,\\#begreplace_byte_HALFRANGE\\#end,\\#begreplace_short_RANGE\\#end,\\#begreplace_short_HALFRANGE\\#end,\\#begreplace_char_RANGE\\#end,\\#begreplace_int_RANGE\\#end,\\#begreplace_int_HALFRANGE\\#end,\\#begreplace_long_RANGE\\#end,\\#begreplace_long_HALFRANGE\\#end,\\#begtranslateJavaUnaryMinusInt\\#end,\\#begtranslateJavaUnaryMinusLong\\#end,\\#begtranslateJavaBitwiseNegation\\#end,\\#begtranslateJavaAddInt\\#end,\\#begtranslateJavaAddLong\\#end,\\#begtranslateJavaSubInt\\#end,\\#begtranslateJavaSubLong\\#end,\\#begtranslateJavaMulInt\\#end,\\#begtranslateJavaMulLong\\#end,\\#begtranslateJavaMod\\#end,\\#begtranslateJavaDivInt\\#end,\\#begtranslateJavaDivLong\\#end,\\#begtranslateJavaCastByte\\#end,\\#begtranslateJavaCastShort\\#end,\\#begtranslateJavaCastInt\\#end,\\#begtranslateJavaCastLong\\#end,\\#begtranslateJavaCastChar\\#end,\\#begtranslateJavaShiftRightInt\\#end,\\#begtranslateJavaShiftRightLong\\#end,\\#begtranslateJavaShiftLeftInt\\#end,\\#begtranslateJavaShiftLeftLong\\#end,\\#begtranslateJavaUnsignedShiftRightInt\\#end,\\#begtranslateJavaUnsignedShiftRightLong\\#end,\\#begtranslateJavaBitwiseOrInt\\#end,\\#begtranslateJavaBitwiseOrLong\\#end,\\#begtranslateJavaBitwiseAndInt\\#end,\\#begtranslateJavaBitwiseAndLong\\#end,\\#begtranslateJavaBitwiseXOrInt\\#end,\\#begtranslateJavaBitwiseXOrLong\\#end,\\#begelementOfEmpty\\#end,\\#begelementOfAllLocs\\#end,\\#begelementOfSingleton\\#end,\\#begelementOfUnion\\#end,\\#begelementOfIntersect\\#end,\\#begelementOfSetMinus\\#end,\\#begelementOfAllFields\\#end,\\#begelementOfAllObjects\\#end,\\#begelementOfArrayRange\\#end,\\#begelementOfFreshLocs\\#end,\\#begequalityToElementOf\\#end,\\#begsubsetToElementOf\\#end,\\#begdisjointToElementOf\\#end,\\#begcreatedInHeapToElementOf\\#end,\\#begelementOfEmptyEQ\\#end,\\#begelementOfAllLocsEQ\\#end,\\#begelementOfSingletonEQ\\#end,\\#begelementOfUnionEQ\\#end,\\#begelementOfIntersectEQ\\#end,\\#begelementOfSetMinusEQ\\#end,\\#begelementOfAllFieldsEQ\\#end,\\#begelementOfAllObjectsEQ\\#end,\\#begelementOfArrayRangeEQ\\#end,\\#begelementOfFreshLocsEQ\\#end,\\#begunionWithEmpty1\\#end,\\#begunionWithEmpty2\\#end,\\#begunionWithAllLocs1\\#end,\\#begunionWithAllLocs2\\#end,\\#begintersectWithEmpty1\\#end,\\#begintersectWithEmpty2\\#end,\\#begintersectWithAllLocs1\\#end,\\#begintersectWithAllLocs2\\#end,\\#begsetMinusWithEmpty1\\#end,\\#begsetMinusWithEmpty2\\#end,\\#begsetMinusWithAllLocs\\#end,\\#begsubsetWithEmpty\\#end,\\#begsubsetWithAllLocs\\#end,\\#begdisjointWithEmpty1\\#end,\\#begdisjointWithEmpty2\\#end,\\#begcreatedInHeapWithEmpty\\#end,\\#begcreatedInHeapWithSingleton\\#end,\\#begcreatedInHeapWithUnion\\#end,\\#begcreatedInHeapWithSetMinusFreshLocs\\#end,\\#begcreatedInHeapWithAllFields\\#end,\\#begcreatedInHeapWithArrayRange\\#end,\\#begreferencedObjectIsCreatedRight\\#end,\\#begreferencedObjectIsCreatedRightEQ\\#end,\\#begunionWithItself\\#end,\\#begintersectWithItself\\#end,\\#begsetMinusItself\\#end,\\#begsubsetOfItself\\#end,\\#begselectOfStore\\#end,\\#begselectOfCreate\\#end,\\#begselectOfAnon\\#end,\\#begselectOfMemset\\#end,\\#begonlyCreatedObjectsAreReferenced\\#end,\\#begonlyCreatedObjectsAreInLocSets\\#end,\\#begonlyCreatedObjectsAreInLocSetsEQ\\#end,\\#begarrayLengthNotNegative\\#end,\\#begwellFormedStoreObject\\#end,\\#begwellFormedStoreLocSet\\#end,\\#begwellFormedStorePrimitive\\#end,\\#begwellFormedCreate\\#end,\\#begwellFormedAnon\\#end,\\#begwellFormedMemsetObject\\#end,\\#begwellFormedMemsetLocSet\\#end,\\#begwellFormedMemsetPrimitive\\#end,\\#begselectOfStoreEQ\\#end,\\#begselectOfCreateEQ\\#end,\\#begselectOfAnonEQ\\#end,\\#begselectOfMemsetEQ\\#end,\\#begmemsetEmpty\\#end,\\#begselectCreatedOfAnonEQ\\#end,\\#begwellFormedStoreObjectEQ\\#end,\\#begwellFormedStoreLocSetEQ\\#end,\\#begwellFormedStorePrimitiveEQ\\#end,\\#begwellFormedAnonEQ\\#end,\\#begwellFormedMemsetObjectEQ\\#end,\\#begwellFormedMemsetPrimitiveEQ\\#end
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_EXPAND
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_INSTANTIATE
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[StrategyProperty]DEP_OPTIONS_KEY=DEP_OFF
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_RESTRICTED
[Strategy]Timeout=-1
[Strategy]MaximumNumberOfAutomaticApplications=10000
[SMTSettings]integersMaximum=2147483645
[Choice]DefaultChoices=methodExpansion-methodExpansion:noRestriction,wdChecks-wdChecks\\:off , JavaCard-JavaCard\\:off , bigint-bigint\\:on , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , moreSeqRules-moreSeqRules\\:off , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off , sequences-sequences\\:on , integerSimplificationRules-integerSimplificationRules\\:full , runtimeExceptions-runtimeExceptions\\:allow , Strings-Strings\\:on , reach-reach\\:on , assertions-assertions\\:on , wdOperator-wdOperator\\:L , modelFields-modelFields\\:showSatisfiability , initialisation-initialisation\\:disableStaticInitialisation , permissions-permissions\\:off
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]maxGenericSorts=2
[SMTSettings]integersMinimum=-2147483645
[SMTSettings]invariantForall=false
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
"
}

\javaSource "";

\proofObligation "#Proof Obligation Settings
#Mon Jul 18 11:01:31 CEST 2016
name=ExceptinalAssignableNothingTest[ExceptinalAssignableNothingTest\\:\\:main()].JML exceptional_behavior operation contract.0
contract=ExceptinalAssignableNothingTest[ExceptinalAssignableNothingTest\\:\\:main()].JML exceptional_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "marti" ) (keyVersion "90bb886cd7b78027c8f6703803461f09e5699bb9"))
(keyLog "1" (keyUser "marti" ) (keyVersion "90bb886cd7b78027c8f6703803461f09e5699bb9"))

(autoModeTime "1557")

(branch "dummy ID"
(rule "impRight" (formula "1") (newnames "exc,heapAtPre,o,f"))
(rule "andLeft" (formula "1"))
(rule "eqSymm" (formula "3") (term "1,0,0,1,0,1"))
(rule "assignment" (formula "3") (term "1"))
(builtin "One Step Simplification" (formula "3"))
(rule "methodBodyExpand" (formula "3") (term "1") (newnames "heapBefore_main,savedHeapBefore_main"))
(builtin "One Step Simplification" (formula "3"))
(rule "throwUnfold" (formula "3") (term "1") (inst "#v0=n"))
(rule "variableDeclarationAssign" (formula "3") (term "1"))
(rule "variableDeclaration" (formula "3") (term "1") (newnames "n"))
(rule "instanceCreationAssignment" (formula "3") (term "1") (inst "#v0=n_1"))
(rule "variableDeclarationAssign" (formula "3") (term "1"))
(rule "variableDeclaration" (formula "3") (term "1") (newnames "n_1"))
(rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "3") (term "1") (inst "#v0=n_2"))
(rule "variableDeclaration" (formula "3") (term "1") (newnames "n_2"))
(rule "methodBodyExpand" (formula "3") (term "1") (newnames "heapBefore_<createObject>,savedHeapBefore_<createObject>"))
(builtin "One Step Simplification" (formula "3"))
(rule "variableDeclaration" (formula "3") (term "1") (newnames "__NEW__"))
(rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "3") (term "1") (inst "#v0=n_3"))
(rule "variableDeclaration" (formula "3") (term "1") (newnames "n_3"))
(rule "allocateInstance" (formula "3"))
(builtin "One Step Simplification" (formula "4"))
(builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "2")))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "2"))
(rule "notLeft" (formula "1"))
(rule "blockEmpty" (formula "6") (term "1"))
(rule "assignment" (formula "6") (term "1"))
(builtin "One Step Simplification" (formula "6"))
(rule "methodBodyExpand" (formula "6") (term "1") (newnames "heapBefore_<create>,savedHeapBefore_<create>"))
(builtin "One Step Simplification" (formula "6"))
(rule "assignment_write_attribute_this" (formula "6") (term "1"))
(builtin "One Step Simplification" (formula "6"))
(rule "methodCallWithinClass" (formula "6") (term "1"))
(rule "methodBodyExpand" (formula "6") (term "1") (newnames "heapBefore_<prepareEnter>,savedHeapBefore_<prepareEnter>"))
(builtin "One Step Simplification" (formula "6"))
(rule "methodCallSuper" (formula "6") (term "1"))
(rule "methodBodyExpand" (formula "6") (term "1") (newnames "heapBefore_<prepare>,savedHeapBefore_<prepare>"))
(builtin "One Step Simplification" (formula "6"))
(rule "methodCallSuper" (formula "6") (term "1"))
(rule "methodBodyExpand" (formula "6") (term "1") (newnames "heapBefore_<prepare>_0,savedHeapBefore_<prepare>_0"))
(builtin "One Step Simplification" (formula "6"))
(rule "methodCallSuper" (formula "6") (term "1"))
(rule "methodBodyExpand" (formula "6") (term "1") (newnames "heapBefore_<prepare>_1,savedHeapBefore_<prepare>_1"))
(builtin "One Step Simplification" (formula "6"))
(rule "methodCallSuper" (formula "6") (term "1"))
(rule "methodBodyExpand" (formula "6") (term "1") (newnames "heapBefore_<prepare>_2,savedHeapBefore_<prepare>_2"))
(builtin "One Step Simplification" (formula "6"))
(rule "methodCallEmpty" (formula "6") (term "1"))
(rule "blockEmpty" (formula "6") (term "1"))
(rule "assignment_write_attribute_this" (formula "6") (term "1"))
(builtin "One Step Simplification" (formula "6"))
(rule "assignment_write_attribute_this" (formula "6") (term "1"))
(builtin "One Step Simplification" (formula "6"))
(rule "methodCallEmpty" (formula "6") (term "1"))
(rule "methodCallEmpty" (formula "6") (term "1"))
(rule "methodCallEmpty" (formula "6") (term "1"))
(rule "methodCallEmpty" (formula "6") (term "1"))
(rule "blockEmpty" (formula "6") (term "1"))
(rule "methodCallReturnIgnoreResult" (formula "6") (term "1"))
(rule "methodCallReturn" (formula "6") (term "1"))
(rule "assignment" (formula "6") (term "1"))
(builtin "One Step Simplification" (formula "6"))
(rule "methodCallEmpty" (formula "6") (term "1"))
(rule "blockEmpty" (formula "6") (term "1"))
(rule "assignment" (formula "6") (term "1"))
(builtin "One Step Simplification" (formula "6"))
(rule "methodBodyExpand" (formula "6") (term "1") (newnames "heapBefore_<init>,savedHeapBefore_<init>"))
(builtin "One Step Simplification" (formula "6"))
(rule "methodCallSuper" (formula "6") (term "1"))
(rule "methodBodyExpand" (formula "6") (term "1") (newnames "heapBefore_<init>_0,savedHeapBefore_<init>_0"))
(builtin "One Step Simplification" (formula "6"))
(rule "methodCallSuper" (formula "6") (term "1"))
(rule "methodBodyExpand" (formula "6") (term "1") (newnames "heapBefore_<init>_1,savedHeapBefore_<init>_1"))
(builtin "One Step Simplification" (formula "6"))
(rule "methodCallSuper" (formula "6") (term "1"))
(rule "methodBodyExpand" (formula "6") (term "1") (newnames "heapBefore_<init>_2,savedHeapBefore_<init>_2"))
(builtin "One Step Simplification" (formula "6"))
(rule "methodCallSuper" (formula "6") (term "1"))
(rule "methodBodyExpand" (formula "6") (term "1") (newnames "heapBefore_<init>_3,savedHeapBefore_<init>_3"))
(builtin "One Step Simplification" (formula "6"))
(rule "methodCallEmpty" (formula "6") (term "1"))
(rule "blockEmpty" (formula "6") (term "1"))
(rule "assignment_write_attribute_this" (formula "6") (term "1"))
(builtin "One Step Simplification" (formula "6"))
(rule "assignment_write_attribute_this" (formula "6") (term "1"))
(builtin "One Step Simplification" (formula "6"))
(rule "methodCallEmpty" (formula "6") (term "1"))
(rule "methodCallEmpty" (formula "6") (term "1"))
(rule "methodCallEmpty" (formula "6") (term "1"))
(rule "methodCallEmpty" (formula "6") (term "1"))
(rule "blockEmpty" (formula "6") (term "1"))
(rule "assignment_write_attribute" (formula "6") (term "1"))
(branch "Normal Execution (n_1 != null)"
   (builtin "One Step Simplification" (formula "7"))
   (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "4")))
   (rule "false_right" (formula "6"))
   (rule "assignment" (formula "6") (term "1"))
   (builtin "One Step Simplification" (formula "6"))
   (rule "methodCallThrow" (formula "6") (term "1"))
   (rule "tryCatchThrow" (formula "6") (term "1"))
   (rule "ifElseUnfold" (formula "6") (term "1") (inst "#boolv=x"))
   (rule "variableDeclaration" (formula "6") (term "1") (newnames "x"))
   (rule "equality_comparison_simple" (formula "6") (term "1"))
   (builtin "One Step Simplification" (formula "6"))
   (rule "replace_known_right" (formula "6") (term "0,0,1,0") (ifseqformula "4"))
   (builtin "One Step Simplification" (formula "6"))
   (rule "ifElseSplit" (formula "6"))
   (branch "if x true"
      (builtin "One Step Simplification" (formula "1"))
      (rule "closeFalse" (formula "1"))
   )
   (branch "if x false"
      (builtin "One Step Simplification" (formula "7"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "true_left" (formula "1"))
      (rule "ifElseSplit" (formula "6"))
      (branch "if n instanceof java.lang.Throwable true"
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "5")))
         (rule "true_left" (formula "1"))
         (rule "variableDeclaration" (formula "6") (term "1") (newnames "e"))
         (rule "delete_unnecessary_cast" (formula "6") (term "1"))
         (branch "Normal Execution (n instanceof java.lang.Throwable)"
            (builtin "One Step Simplification" (formula "7"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "true_left" (formula "1"))
            (rule "assignment" (formula "6") (term "1"))
            (builtin "One Step Simplification" (formula "6"))
            (rule "emptyModality" (formula "6") (term "1"))
            (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "4")) (ifInst ""  (formula "4")))
            (rule "allRight" (formula "6") (inst "sk=f_0"))
            (rule "allRight" (formula "6") (inst "sk=o_0"))
            (rule "orRight" (formula "6"))
            (rule "eqSymm" (formula "7"))
            (rule "pullOutSelect" (formula "7") (term "0") (inst "selectSK=f_0_0"))
            (rule "simplifySelectOfStore" (formula "1"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "castDel" (formula "1") (term "1,0"))
            (rule "eqSymm" (formula "8"))
            (rule "eqSymm" (formula "1") (term "1,0,0"))
            (rule "eqSymm" (formula "1") (term "0,0,0"))
            (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_1"))
            (rule "simplifySelectOfStore" (formula "1"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "castDel" (formula "1") (term "1,0"))
            (rule "eqSymm" (formula "1") (term "1,0,0"))
            (rule "eqSymm" (formula "1") (term "0,0,0"))
            (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_2"))
            (rule "simplifySelectOfStore" (formula "1"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "castDel" (formula "1") (term "1,0"))
            (rule "eqSymm" (formula "1") (term "1,0,0"))
            (rule "eqSymm" (formula "1") (term "0,0,0"))
            (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_3"))
            (rule "simplifySelectOfCreate" (formula "1"))
            (rule "castDel" (formula "1") (term "1,0"))
            (rule "eqSymm" (formula "1") (term "0,0,0,0"))
            (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "8"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "commute_and" (formula "4") (term "0,0"))
            (rule "commute_and" (formula "3") (term "0,0"))
            (rule "commute_and" (formula "2") (term "0,0"))
            (rule "commute_and" (formula "1") (term "0,0"))
            (rule "ifthenelse_split" (formula "1") (term "0"))
            (branch "f_0 = java.lang.Object::<created> & o_0 = n_3 TRUE"
               (rule "andLeft" (formula "1"))
               (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
               (rule "hideAuxiliaryEq" (formula "3"))
               (rule "replace_known_left" (formula "3") (term "1,0,0") (ifseqformula "2"))
               (builtin "One Step Simplification" (formula "3"))
               (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "2"))
               (builtin "One Step Simplification" (formula "4"))
               (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "2"))
               (builtin "One Step Simplification" (formula "5"))
               (rule "applyEq" (formula "12") (term "2,0") (ifseqformula "1"))
               (rule "narrowSelectType" (formula "12") (term "0") (ifseqformula "7"))
               (rule "eqSymm" (formula "12"))
               (rule "applyEq" (formula "11") (term "0,0,0") (ifseqformula "2"))
               (rule "replace_known_right" (formula "11") (term "0,0") (ifseqformula "9"))
               (builtin "One Step Simplification" (formula "11"))
               (rule "notRight" (formula "11"))
               (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "2"))
               (builtin "One Step Simplification" (formula "4"))
               (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
               (rule "hideAuxiliaryEq" (formula "4"))
               (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "2"))
               (builtin "One Step Simplification" (formula "4"))
               (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
               (builtin "One Step Simplification" (formula "5"))
               (rule "applyEqReverse" (formula "11") (term "0") (ifseqformula "5"))
               (rule "hideAuxiliaryEq" (formula "4"))
               (rule "hideAuxiliaryEq" (formula "4"))
               (rule "eqSymm" (formula "9"))
               (rule "close" (formula "9") (ifseqformula "1"))
            )
            (branch "f_0 = java.lang.Object::<created> & o_0 = n_3 FALSE"
               (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "ifthenelse_split" (formula "1") (term "0"))
               (branch "f_0 = java.lang.Throwable::$cause & o_0 = n_3 TRUE"
                  (rule "andLeft" (formula "1"))
                  (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                  (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "2")))
                  (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                  (rule "hideAuxiliaryEq" (formula "3"))
                  (rule "hideAuxiliaryEq" (formula "3"))
                  (rule "replace_known_left" (formula "3") (term "1,0,0") (ifseqformula "2"))
                  (builtin "One Step Simplification" (formula "3"))
                  (rule "replace_known_left" (formula "7") (term "1") (ifseqformula "2"))
                  (builtin "One Step Simplification" (formula "7"))
                  (rule "applyEq" (formula "10") (term "1,0,0,1") (ifseqformula "2"))
                  (rule "replace_known_right" (formula "10") (term "0,1") (ifseqformula "9"))
                  (builtin "One Step Simplification" (formula "10"))
                  (rule "notRight" (formula "10"))
                  (rule "applyEq" (formula "11") (term "1,0") (ifseqformula "3"))
                  (rule "applyEq" (formula "11") (term "2,0") (ifseqformula "2"))
                  (rule "narrowSelectType" (formula "11") (term "0") (ifseqformula "6"))
                  (rule "eqSymm" (formula "11"))
                  (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "2"))
                  (builtin "One Step Simplification" (formula "4"))
                  (rule "applyEqReverse" (formula "11") (term "0") (ifseqformula "4"))
                  (rule "hideAuxiliaryEq" (formula "4"))
                  (rule "eqSymm" (formula "10"))
                  (rule "applyEqRigid" (formula "7") (term "0") (ifseqformula "2"))
                  (builtin "One Step Simplification" (formula "7"))
                  (rule "false_right" (formula "7"))
                  (rule "applyEqRigid" (formula "3") (term "0") (ifseqformula "1"))
                  (rule "eqSymm" (formula "3"))
                  (rule "close" (formula "7") (ifseqformula "3"))
               )
               (branch "f_0 = java.lang.Throwable::$cause & o_0 = n_3 FALSE"
                  (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "ifthenelse_split" (formula "1") (term "0"))
                  (branch "f_0 = java.lang.Throwable::$message & o_0 = n_3 TRUE"
                     (rule "andLeft" (formula "1"))
                     (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                     (rule "hideAuxiliaryEq" (formula "3"))
                     (rule "replace_known_left" (formula "3") (term "1,0,0") (ifseqformula "2"))
                     (builtin "One Step Simplification" (formula "3"))
                     (rule "replace_known_left" (formula "7") (term "1") (ifseqformula "2"))
                     (builtin "One Step Simplification" (formula "7"))
                     (rule "replace_known_left" (formula "8") (term "1") (ifseqformula "2"))
                     (builtin "One Step Simplification" (formula "8"))
                     (rule "applyEq" (formula "11") (term "1,0,0,1") (ifseqformula "2"))
                     (rule "replace_known_right" (formula "11") (term "0,1") (ifseqformula "10"))
                     (builtin "One Step Simplification" (formula "11"))
                     (rule "notRight" (formula "11"))
                     (rule "applyEq" (formula "12") (term "2,0") (ifseqformula "2"))
                     (rule "narrowSelectType" (formula "12") (term "0") (ifseqformula "6"))
                     (rule "eqSymm" (formula "12"))
                     (rule "applyEqRigid" (formula "8") (term "0") (ifseqformula "2"))
                     (builtin "One Step Simplification" (formula "8"))
                     (rule "false_right" (formula "8"))
                     (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "2"))
                     (builtin "One Step Simplification" (formula "4"))
                     (rule "applyEqReverse" (formula "11") (term "0") (ifseqformula "4"))
                     (rule "hideAuxiliaryEq" (formula "4"))
                     (rule "eqSymm" (formula "10"))
                     (rule "applyEqRigid" (formula "7") (term "0") (ifseqformula "2"))
                     (builtin "One Step Simplification" (formula "7"))
                     (rule "false_right" (formula "7"))
                     (rule "applyEqRigid" (formula "3") (term "0") (ifseqformula "1"))
                     (rule "eqSymm" (formula "3"))
                     (rule "close" (formula "7") (ifseqformula "3"))
                  )
                  (branch "f_0 = java.lang.Throwable::$message & o_0 = n_3 FALSE"
                     (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "ifthenelse_split" (formula "1") (term "0"))
                     (branch "f_0 = java.lang.Object::<initialized> & o_0 = n_3 TRUE"
                        (rule "andLeft" (formula "1"))
                        (rule "applyEqReverse" (formula "13") (term "1") (ifseqformula "3"))
                        (rule "hideAuxiliaryEq" (formula "3"))
                        (rule "replace_known_left" (formula "8") (term "1") (ifseqformula "2"))
                        (builtin "One Step Simplification" (formula "8"))
                        (rule "replace_known_left" (formula "6") (term "1") (ifseqformula "2"))
                        (builtin "One Step Simplification" (formula "6"))
                        (rule "replace_known_left" (formula "7") (term "1") (ifseqformula "2"))
                        (builtin "One Step Simplification" (formula "7"))
                        (rule "applyEq" (formula "12") (term "2,0") (ifseqformula "1"))
                        (rule "narrowSelectType" (formula "12") (term "0") (ifseqformula "4"))
                        (rule "applyEq" (formula "11") (term "0,0,0") (ifseqformula "2"))
                        (rule "replace_known_right" (formula "11") (term "0,0") (ifseqformula "9"))
                        (builtin "One Step Simplification" (formula "11"))
                        (rule "notRight" (formula "11"))
                        (rule "applyEq" (formula "9") (term "0") (ifseqformula "2"))
                        (builtin "One Step Simplification" (formula "9"))
                        (rule "false_right" (formula "9"))
                        (rule "applyEq" (formula "7") (term "0") (ifseqformula "2"))
                        (builtin "One Step Simplification" (formula "7"))
                        (rule "false_right" (formula "7"))
                        (rule "applyEq" (formula "7") (term "0") (ifseqformula "2"))
                        (builtin "One Step Simplification" (formula "7"))
                        (rule "false_right" (formula "7"))
                        (rule "applyEq" (formula "9") (term "1,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                        (rule "close" (formula "8") (ifseqformula "1"))
                     )
                     (branch "f_0 = java.lang.Object::<initialized> & o_0 = n_3 FALSE"
                        (rule "close" (formula "12") (ifseqformula "1"))
                     )
                  )
               )
            )
         )
         (branch "ClassCastException (!(n instanceof java.lang.Throwable))"
            (builtin "One Step Simplification" (formula "7"))
            (builtin "One Step Simplification" (formula "6"))
            (rule "closeTrue" (formula "6"))
         )
      )
      (branch "if n instanceof java.lang.Throwable false"
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "5")))
         (rule "closeFalse" (formula "1"))
      )
   )
)
(branch "Null Reference (n_1 = null)"
   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "5")))
   (rule "closeFalse" (formula "1"))
)
)

}
