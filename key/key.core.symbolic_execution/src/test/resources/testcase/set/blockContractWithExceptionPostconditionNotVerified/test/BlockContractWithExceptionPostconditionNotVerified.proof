\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Mon Jul 18 10:58:31 CEST 2016
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]useUninterpretedMultiplication=true
[SMTSettings]SelectedTaclets=\\#begboolean_equal_2\\#end,\\#begboolean_not_equal_1\\#end,\\#begboolean_not_equal_2\\#end,\\#begtrue_to_not_false\\#end,\\#begfalse_to_not_true\\#end,\\#begboolean_true_commute\\#end,\\#begboolean_false_commute\\#end,\\#begapply_eq_boolean\\#end,\\#begapply_eq_boolean_2\\#end,\\#begapply_eq_boolean_rigid\\#end,\\#begapply_eq_boolean_rigid_2\\#end,\\#begexpand_inByte\\#end,\\#begexpand_inChar\\#end,\\#begexpand_inShort\\#end,\\#begexpand_inInt\\#end,\\#begexpand_inLong\\#end,\\#begreplace_byte_MAX\\#end,\\#begreplace_byte_MIN\\#end,\\#begreplace_char_MAX\\#end,\\#begreplace_char_MIN\\#end,\\#begreplace_short_MAX\\#end,\\#begreplace_short_MIN\\#end,\\#begreplace_int_MAX\\#end,\\#begreplace_int_MIN\\#end,\\#begreplace_long_MAX\\#end,\\#begreplace_long_MIN\\#end,\\#begreplace_byte_RANGE\\#end,\\#begreplace_byte_HALFRANGE\\#end,\\#begreplace_short_RANGE\\#end,\\#begreplace_short_HALFRANGE\\#end,\\#begreplace_char_RANGE\\#end,\\#begreplace_int_RANGE\\#end,\\#begreplace_int_HALFRANGE\\#end,\\#begreplace_long_RANGE\\#end,\\#begreplace_long_HALFRANGE\\#end,\\#begtranslateJavaUnaryMinusInt\\#end,\\#begtranslateJavaUnaryMinusLong\\#end,\\#begtranslateJavaBitwiseNegation\\#end,\\#begtranslateJavaAddInt\\#end,\\#begtranslateJavaAddLong\\#end,\\#begtranslateJavaSubInt\\#end,\\#begtranslateJavaSubLong\\#end,\\#begtranslateJavaMulInt\\#end,\\#begtranslateJavaMulLong\\#end,\\#begtranslateJavaMod\\#end,\\#begtranslateJavaDivInt\\#end,\\#begtranslateJavaDivLong\\#end,\\#begtranslateJavaCastByte\\#end,\\#begtranslateJavaCastShort\\#end,\\#begtranslateJavaCastInt\\#end,\\#begtranslateJavaCastLong\\#end,\\#begtranslateJavaCastChar\\#end,\\#begtranslateJavaShiftRightInt\\#end,\\#begtranslateJavaShiftRightLong\\#end,\\#begtranslateJavaShiftLeftInt\\#end,\\#begtranslateJavaShiftLeftLong\\#end,\\#begtranslateJavaUnsignedShiftRightInt\\#end,\\#begtranslateJavaUnsignedShiftRightLong\\#end,\\#begtranslateJavaBitwiseOrInt\\#end,\\#begtranslateJavaBitwiseOrLong\\#end,\\#begtranslateJavaBitwiseAndInt\\#end,\\#begtranslateJavaBitwiseAndLong\\#end,\\#begtranslateJavaBitwiseXOrInt\\#end,\\#begtranslateJavaBitwiseXOrLong\\#end,\\#begelementOfEmpty\\#end,\\#begelementOfAllLocs\\#end,\\#begelementOfSingleton\\#end,\\#begelementOfUnion\\#end,\\#begelementOfIntersect\\#end,\\#begelementOfSetMinus\\#end,\\#begelementOfAllFields\\#end,\\#begelementOfAllObjects\\#end,\\#begelementOfArrayRange\\#end,\\#begelementOfFreshLocs\\#end,\\#begequalityToElementOf\\#end,\\#begsubsetToElementOf\\#end,\\#begdisjointToElementOf\\#end,\\#begcreatedInHeapToElementOf\\#end,\\#begelementOfEmptyEQ\\#end,\\#begelementOfAllLocsEQ\\#end,\\#begelementOfSingletonEQ\\#end,\\#begelementOfUnionEQ\\#end,\\#begelementOfIntersectEQ\\#end,\\#begelementOfSetMinusEQ\\#end,\\#begelementOfAllFieldsEQ\\#end,\\#begelementOfAllObjectsEQ\\#end,\\#begelementOfArrayRangeEQ\\#end,\\#begelementOfFreshLocsEQ\\#end,\\#begunionWithEmpty1\\#end,\\#begunionWithEmpty2\\#end,\\#begunionWithAllLocs1\\#end,\\#begunionWithAllLocs2\\#end,\\#begintersectWithEmpty1\\#end,\\#begintersectWithEmpty2\\#end,\\#begintersectWithAllLocs1\\#end,\\#begintersectWithAllLocs2\\#end,\\#begsetMinusWithEmpty1\\#end,\\#begsetMinusWithEmpty2\\#end,\\#begsetMinusWithAllLocs\\#end,\\#begsubsetWithEmpty\\#end,\\#begsubsetWithAllLocs\\#end,\\#begdisjointWithEmpty1\\#end,\\#begdisjointWithEmpty2\\#end,\\#begcreatedInHeapWithEmpty\\#end,\\#begcreatedInHeapWithSingleton\\#end,\\#begcreatedInHeapWithUnion\\#end,\\#begcreatedInHeapWithSetMinusFreshLocs\\#end,\\#begcreatedInHeapWithAllFields\\#end,\\#begcreatedInHeapWithArrayRange\\#end,\\#begreferencedObjectIsCreatedRight\\#end,\\#begreferencedObjectIsCreatedRightEQ\\#end,\\#begunionWithItself\\#end,\\#begintersectWithItself\\#end,\\#begsetMinusItself\\#end,\\#begsubsetOfItself\\#end,\\#begselectOfStore\\#end,\\#begselectOfCreate\\#end,\\#begselectOfAnon\\#end,\\#begselectOfMemset\\#end,\\#begonlyCreatedObjectsAreReferenced\\#end,\\#begonlyCreatedObjectsAreInLocSets\\#end,\\#begonlyCreatedObjectsAreInLocSetsEQ\\#end,\\#begarrayLengthNotNegative\\#end,\\#begwellFormedStoreObject\\#end,\\#begwellFormedStoreLocSet\\#end,\\#begwellFormedStorePrimitive\\#end,\\#begwellFormedCreate\\#end,\\#begwellFormedAnon\\#end,\\#begwellFormedMemsetObject\\#end,\\#begwellFormedMemsetLocSet\\#end,\\#begwellFormedMemsetPrimitive\\#end,\\#begselectOfStoreEQ\\#end,\\#begselectOfCreateEQ\\#end,\\#begselectOfAnonEQ\\#end,\\#begselectOfMemsetEQ\\#end,\\#begmemsetEmpty\\#end,\\#begselectCreatedOfAnonEQ\\#end,\\#begwellFormedStoreObjectEQ\\#end,\\#begwellFormedStoreLocSetEQ\\#end,\\#begwellFormedStorePrimitiveEQ\\#end,\\#begwellFormedAnonEQ\\#end,\\#begwellFormedMemsetObjectEQ\\#end,\\#begwellFormedMemsetPrimitiveEQ\\#end
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_EXPAND
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_NONE
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[Strategy]Timeout=-1
[Strategy]MaximumNumberOfAutomaticApplications=10000
[SMTSettings]integersMaximum=2147483645
[Choice]DefaultChoices=methodExpansion-methodExpansion:noRestriction,wdChecks-wdChecks\\:off , JavaCard-JavaCard\\:off , bigint-bigint\\:on , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , moreSeqRules-moreSeqRules\\:off , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off , sequences-sequences\\:on , integerSimplificationRules-integerSimplificationRules\\:full , runtimeExceptions-runtimeExceptions\\:allow , Strings-Strings\\:on , reach-reach\\:on , assertions-assertions\\:on , wdOperator-wdOperator\\:L , modelFields-modelFields\\:showSatisfiability , initialisation-initialisation\\:disableStaticInitialisation , permissions-permissions\\:off
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]maxGenericSorts=2
[SMTSettings]integersMinimum=-2147483645
[SMTSettings]invariantForall=false
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
"
}

\javaSource "";

\proofObligation "#Proof Obligation Settings
#Mon Jul 18 10:58:31 CEST 2016
name=BlockContractWithExceptionPostconditionNotVerified[BlockContractWithExceptionPostconditionNotVerified\\:\\:main(int)].JML exceptional_behavior operation contract.0
contract=BlockContractWithExceptionPostconditionNotVerified[BlockContractWithExceptionPostconditionNotVerified\\:\\:main(int)].JML exceptional_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "marti" ) (keyVersion "90bb886cd7b78027c8f6703803461f09e5699bb9"))
(keyLog "1" (keyUser "marti" ) (keyVersion "90bb886cd7b78027c8f6703803461f09e5699bb9"))
(keyLog "2" (keyUser "marti" ) (keyVersion "90bb886cd7b78027c8f6703803461f09e5699bb9"))

(autoModeTime "1734")

(branch "dummy ID"
(builtin "One Step Simplification" (formula "1") (newnames "x,result,exc,heapAtPre,o,f"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "eqSymm" (formula "4") (term "1,0,0,1,0,1"))
(rule "assignment" (formula "4") (term "1"))
(builtin "One Step Simplification" (formula "4"))
(rule "applyEq" (formula "4") (term "0,1,0,0") (ifseqformula "3"))
(rule "methodBodyExpand" (formula "4") (term "1") (newnames "heapBefore_main,savedHeapBefore_main"))
(builtin "One Step Simplification" (formula "4"))
(rule "returnUnfold" (formula "4") (term "1") (inst "#v0=x"))
(rule "variableDeclarationAssign" (formula "4") (term "1"))
(rule "variableDeclaration" (formula "4") (term "1") (newnames "x_1"))
(rule "methodCallWithAssignmentWithinClass" (formula "4") (term "1") (inst "#v0=x_2"))
(rule "variableDeclaration" (formula "4") (term "1") (newnames "x_2"))
(rule "variableDeclarationAssign" (formula "4") (term "1"))
(rule "variableDeclaration" (formula "4") (term "1") (newnames "x_3"))
(rule "assignment" (formula "4") (term "1"))
(builtin "One Step Simplification" (formula "4"))
(rule "methodBodyExpand" (formula "4") (term "1") (newnames "heapBefore_magic,savedHeapBefore_magic"))
(builtin "One Step Simplification" (formula "4"))
(builtin "Block Contract (Internal)" (formula "4") (newnames "anon_heap,result_0,exc_0,heap_Before_BLOCK,savedHeap_Before_BLOCK,o,f"))
(branch "Validity"
   (builtin "One Step Simplification" (formula "5"))
   (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "1")))
   (rule "true_left" (formula "4"))
   (rule "eqSymm" (formula "4") (term "1,0,0,1,0,1"))
   (rule "variableDeclarationAssign" (formula "4") (term "1"))
   (rule "variableDeclaration" (formula "4") (term "1"))
   (rule "assignment" (formula "4") (term "1"))
   (builtin "One Step Simplification" (formula "4"))
   (rule "ifUnfold" (formula "4") (term "1") (inst "#boolv=x_4"))
   (rule "variableDeclaration" (formula "4") (term "1") (newnames "x_6"))
   (rule "equality_comparison_simple" (formula "4") (term "1"))
   (builtin "One Step Simplification" (formula "4"))
   (rule "ifSplit" (formula "4"))
   (branch "if x_6 true"
      (builtin "One Step Simplification" (formula "5"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "true_left" (formula "1"))
      (rule "blockThrow" (formula "4") (term "1"))
      (rule "throwUnfold" (formula "4") (term "1") (inst "#v0=r"))
      (rule "variableDeclarationAssign" (formula "4") (term "1"))
      (rule "variableDeclaration" (formula "4") (term "1") (newnames "r"))
      (rule "instanceCreationAssignment" (formula "4") (term "1") (inst "#v0=r_1"))
      (rule "variableDeclarationAssign" (formula "4") (term "1"))
      (rule "variableDeclaration" (formula "4") (term "1") (newnames "r_1"))
      (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "4") (term "1") (inst "#v0=r_2"))
      (rule "variableDeclaration" (formula "4") (term "1") (newnames "r_2"))
      (rule "methodBodyExpand" (formula "4") (term "1") (newnames "heapBefore_<createObject>,savedHeapBefore_<createObject>"))
      (builtin "One Step Simplification" (formula "4"))
      (rule "variableDeclaration" (formula "4") (term "1") (newnames "__NEW__"))
      (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "4") (term "1") (inst "#v0=r_3"))
      (rule "variableDeclaration" (formula "4") (term "1") (newnames "r_3"))
      (rule "allocateInstance" (formula "4"))
      (builtin "One Step Simplification" (formula "5"))
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "2")))
      (rule "andLeft" (formula "1"))
      (rule "andLeft" (formula "1"))
      (rule "notLeft" (formula "1"))
      (rule "notLeft" (formula "1"))
      (rule "blockEmpty" (formula "7") (term "1"))
      (rule "assignment" (formula "7") (term "1"))
      (builtin "One Step Simplification" (formula "7"))
      (rule "methodBodyExpand" (formula "7") (term "1") (newnames "heapBefore_<create>,savedHeapBefore_<create>"))
      (builtin "One Step Simplification" (formula "7"))
      (rule "assignment_write_attribute_this" (formula "7") (term "1"))
      (builtin "One Step Simplification" (formula "7"))
      (rule "methodCallWithinClass" (formula "7") (term "1"))
      (rule "methodBodyExpand" (formula "7") (term "1") (newnames "heapBefore_<prepareEnter>,savedHeapBefore_<prepareEnter>"))
      (builtin "One Step Simplification" (formula "7"))
      (rule "methodCallSuper" (formula "7") (term "1"))
      (rule "methodBodyExpand" (formula "7") (term "1") (newnames "heapBefore_<prepare>,savedHeapBefore_<prepare>"))
      (builtin "One Step Simplification" (formula "7"))
      (rule "methodCallSuper" (formula "7") (term "1"))
      (rule "methodBodyExpand" (formula "7") (term "1") (newnames "heapBefore_<prepare>_0,savedHeapBefore_<prepare>_0"))
      (builtin "One Step Simplification" (formula "7"))
      (rule "methodCallSuper" (formula "7") (term "1"))
      (rule "methodBodyExpand" (formula "7") (term "1") (newnames "heapBefore_<prepare>_1,savedHeapBefore_<prepare>_1"))
      (builtin "One Step Simplification" (formula "7"))
      (rule "methodCallEmpty" (formula "7") (term "1"))
      (rule "blockEmpty" (formula "7") (term "1"))
      (rule "assignment_write_attribute_this" (formula "7") (term "1"))
      (builtin "One Step Simplification" (formula "7"))
      (rule "assignment_write_attribute_this" (formula "7") (term "1"))
      (builtin "One Step Simplification" (formula "7"))
      (rule "methodCallEmpty" (formula "7") (term "1"))
      (rule "methodCallEmpty" (formula "7") (term "1"))
      (rule "methodCallEmpty" (formula "7") (term "1"))
      (rule "blockEmpty" (formula "7") (term "1"))
      (rule "methodCallReturnIgnoreResult" (formula "7") (term "1"))
      (rule "methodCallReturn" (formula "7") (term "1"))
      (rule "assignment" (formula "7") (term "1"))
      (builtin "One Step Simplification" (formula "7"))
      (rule "methodCallEmpty" (formula "7") (term "1"))
      (rule "blockEmpty" (formula "7") (term "1"))
      (rule "assignment" (formula "7") (term "1"))
      (builtin "One Step Simplification" (formula "7"))
      (rule "methodBodyExpand" (formula "7") (term "1") (newnames "heapBefore_<init>,savedHeapBefore_<init>"))
      (builtin "One Step Simplification" (formula "7"))
      (rule "methodCallSuper" (formula "7") (term "1"))
      (rule "methodBodyExpand" (formula "7") (term "1") (newnames "heapBefore_<init>_0,savedHeapBefore_<init>_0"))
      (builtin "One Step Simplification" (formula "7"))
      (rule "methodCallSuper" (formula "7") (term "1"))
      (rule "methodBodyExpand" (formula "7") (term "1") (newnames "heapBefore_<init>_1,savedHeapBefore_<init>_1"))
      (builtin "One Step Simplification" (formula "7"))
      (rule "methodCallSuper" (formula "7") (term "1"))
      (rule "methodBodyExpand" (formula "7") (term "1") (newnames "heapBefore_<init>_2,savedHeapBefore_<init>_2"))
      (builtin "One Step Simplification" (formula "7"))
      (rule "methodCallEmpty" (formula "7") (term "1"))
      (rule "blockEmpty" (formula "7") (term "1"))
      (rule "assignment_write_attribute_this" (formula "7") (term "1"))
      (builtin "One Step Simplification" (formula "7"))
      (rule "assignment_write_attribute_this" (formula "7") (term "1"))
      (builtin "One Step Simplification" (formula "7"))
      (rule "methodCallEmpty" (formula "7") (term "1"))
      (rule "methodCallEmpty" (formula "7") (term "1"))
      (rule "methodCallEmpty" (formula "7") (term "1"))
      (rule "blockEmpty" (formula "7") (term "1"))
      (rule "assignment_write_attribute" (formula "7") (term "1"))
      (branch "Normal Execution (r_1 != null)"
         (builtin "One Step Simplification" (formula "8"))
         (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "6")))
         (rule "false_right" (formula "7"))
         (rule "assignment" (formula "7") (term "1"))
         (builtin "One Step Simplification" (formula "7"))
         (rule "tryCatchThrow" (formula "7") (term "1"))
         (rule "unusedLabel" (formula "7") (term "1"))
         (rule "ifElseUnfold" (formula "7") (term "1") (inst "#boolv=x"))
         (rule "variableDeclaration" (formula "7") (term "1") (newnames "x_7"))
         (rule "equality_comparison_simple" (formula "7") (term "1"))
         (builtin "One Step Simplification" (formula "7"))
         (rule "replace_known_right" (formula "7") (term "0,0,1,0") (ifseqformula "6"))
         (builtin "One Step Simplification" (formula "7"))
         (rule "ifElseSplit" (formula "7"))
         (branch "if x_7 true"
            (builtin "One Step Simplification" (formula "8"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "closeFalse" (formula "1"))
         )
         (branch "if x_7 false"
            (builtin "One Step Simplification" (formula "8"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "true_left" (formula "1"))
            (rule "ifElseSplit" (formula "7"))
            (branch "if r instanceof java.lang.Throwable true"
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "7")))
               (rule "true_left" (formula "1"))
               (rule "variableDeclaration" (formula "7") (term "1") (newnames "e_1"))
               (rule "delete_unnecessary_cast" (formula "7") (term "1"))
               (branch "Normal Execution (r instanceof java.lang.Throwable)"
                  (builtin "One Step Simplification" (formula "8"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "true_left" (formula "1"))
                  (rule "assignment" (formula "7") (term "1"))
                  (builtin "One Step Simplification" (formula "7"))
                  (rule "methodCallEmpty" (formula "7") (term "1"))
                  (rule "emptyModality" (formula "7") (term "1"))
                  (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "6")) (ifInst ""  (formula "6")))
                  (rule "eqSymm" (formula "7") (term "1,0,0,1"))
                  (rule "instanceof_known_dynamic_type_2" (formula "7") (term "0,0") (ifseqformula "1"))
                  (builtin "One Step Simplification" (formula "7"))
                  (rule "false_right" (formula "7"))
                  (opengoal " ")
               )
               (branch "ClassCastException (!(r instanceof java.lang.Throwable))"
                  (builtin "One Step Simplification" (formula "8"))
                  (builtin "One Step Simplification" (formula "7"))
                  (rule "closeTrue" (formula "7"))
               )
            )
            (branch "if r instanceof java.lang.Throwable false"
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "7")))
               (rule "closeFalse" (formula "1"))
            )
         )
      )
      (branch "Null Reference (r_1 = null)"
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "7")))
         (rule "closeFalse" (formula "1"))
      )
   )
   (branch "if x_6 false"
      (builtin "One Step Simplification" (formula "5"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "closeFalse" (formula "1"))
   )
)
(branch "Precondition"
   (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "1")))
   (rule "closeTrue" (formula "4"))
)
(branch "Usage"
   (builtin "One Step Simplification" (formula "5"))
   (builtin "One Step Simplification" (formula "4"))
   (rule "andLeft" (formula "4"))
   (rule "andLeft" (formula "4"))
   (rule "andLeft" (formula "4"))
   (rule "notLeft" (formula "4"))
   (rule "replace_known_right" (formula "4") (term "0,0") (ifseqformula "7"))
   (builtin "One Step Simplification" (formula "4"))
   (rule "replace_known_right" (formula "6") (term "0") (ifseqformula "7"))
   (builtin "One Step Simplification" (formula "6"))
   (rule "ifUnfold" (formula "8") (term "1") (inst "#boolv=x_3"))
   (rule "variableDeclaration" (formula "8") (term "1") (newnames "x_4"))
   (rule "inequality_comparison_simple" (formula "8") (term "1"))
   (builtin "One Step Simplification" (formula "8"))
   (rule "replace_known_right" (formula "8") (term "0,0,1,0") (ifseqformula "7"))
   (builtin "One Step Simplification" (formula "8"))
   (rule "ifSplit" (formula "8"))
   (branch "if x_4 true"
      (builtin "One Step Simplification" (formula "9"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "true_left" (formula "1"))
      (rule "blockThrow" (formula "8") (term "1"))
      (rule "methodCallParamThrow" (formula "8") (term "1"))
      (builtin "One Step Simplification" (formula "8"))
      (rule "blockThrow" (formula "8") (term "1"))
      (rule "methodCallParamThrow" (formula "8") (term "1"))
      (rule "tryCatchThrow" (formula "8") (term "1"))
      (rule "ifElseUnfold" (formula "8") (term "1") (inst "#boolv=x"))
      (rule "variableDeclaration" (formula "8") (term "1") (newnames "x_5"))
      (rule "equality_comparison_simple" (formula "8") (term "1"))
      (builtin "One Step Simplification" (formula "8"))
      (rule "replace_known_right" (formula "8") (term "0,0,1,0") (ifseqformula "7"))
      (builtin "One Step Simplification" (formula "8"))
      (rule "ifElseSplit" (formula "8"))
      (branch "if x_5 true"
         (builtin "One Step Simplification" (formula "9"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "closeFalse" (formula "1"))
      )
      (branch "if x_5 false"
         (builtin "One Step Simplification" (formula "1"))
         (builtin "One Step Simplification" (formula "9"))
         (rule "true_left" (formula "1"))
         (rule "ifElseSplit" (formula "8"))
         (branch "if exc_0 instanceof java.lang.Throwable true"
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "8")))
            (rule "true_left" (formula "1"))
            (rule "variableDeclaration" (formula "8") (term "1") (newnames "e"))
            (rule "delete_unnecessary_cast" (formula "8") (term "1"))
            (branch "Normal Execution (exc_0 instanceof java.lang.Throwable)"
               (builtin "One Step Simplification" (formula "9"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "true_left" (formula "1"))
               (rule "assignment" (formula "8") (term "1"))
               (builtin "One Step Simplification" (formula "8"))
               (rule "emptyModality" (formula "8") (term "1"))
               (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "7")))
               (rule "instanceof_not_compatible_5" (formula "8") (term "0,0") (ifseqformula "4"))
               (rule "eqSymm" (formula "8") (term "1,0,0,1"))
               (rule "replace_known_right" (formula "8") (term "0,0") (ifseqformula "7"))
               (builtin "One Step Simplification" (formula "8"))
               (rule "cut_direct" (formula "6") (term "0"))
               (branch "CUT: boolean::select(heap, exc_0, java.lang.Object::<created>) = TRUE TRUE"
                  (builtin "One Step Simplification" (formula "7"))
                  (rule "true_left" (formula "7"))
                  (rule "cut_direct" (formula "8") (term "0"))
                  (branch "CUT: java.lang.RuntimeException::instance(exc_0) = TRUE TRUE"
                     (builtin "One Step Simplification" (formula "9"))
                     (rule "allRight" (formula "9") (inst "sk=f_1"))
                     (rule "allRight" (formula "9") (inst "sk=o_1"))
                     (rule "orRight" (formula "9"))
                     (rule "pullOutSelect" (formula "10") (term "0") (inst "selectSK=f_1_0"))
                     (rule "simplifySelectOfAnon" (formula "1"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "10")))
                     (rule "applyEqReverse" (formula "11") (term "0") (ifseqformula "1"))
                     (builtin "One Step Simplification" (formula "11"))
                     (rule "closeTrue" (formula "11"))
                  )
                  (branch "CUT: java.lang.RuntimeException::instance(exc_0) = TRUE FALSE"
                     (rule "closeTypeSwitched" (formula "8") (ifseqformula "4"))
                  )
               )
               (branch "CUT: boolean::select(heap, exc_0, java.lang.Object::<created>) = TRUE FALSE"
                  (builtin "One Step Simplification" (formula "6"))
                  (rule "cut_direct" (formula "9") (term "0"))
                  (branch "CUT: java.lang.RuntimeException::instance(exc_0) = TRUE TRUE"
                     (builtin "One Step Simplification" (formula "10"))
                     (rule "allRight" (formula "10") (inst "sk=f_0"))
                     (rule "allRight" (formula "10") (inst "sk=o_0"))
                     (rule "orRight" (formula "10"))
                     (rule "pullOutSelect" (formula "11") (term "0") (inst "selectSK=f_0_0"))
                     (rule "simplifySelectOfAnon" (formula "1"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "11")))
                     (rule "applyEqReverse" (formula "12") (term "0") (ifseqformula "1"))
                     (builtin "One Step Simplification" (formula "12"))
                     (rule "closeTrue" (formula "12"))
                  )
                  (branch "CUT: java.lang.RuntimeException::instance(exc_0) = TRUE FALSE"
                     (rule "closeTypeSwitched" (formula "9") (ifseqformula "4"))
                  )
               )
            )
            (branch "ClassCastException (!(exc_0 instanceof java.lang.Throwable))"
               (builtin "One Step Simplification" (formula "8"))
               (rule "closeTrue" (formula "8"))
            )
         )
         (branch "if exc_0 instanceof java.lang.Throwable false"
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "8")))
            (rule "closeFalse" (formula "1"))
         )
      )
   )
   (branch "if x_4 false"
      (builtin "One Step Simplification" (formula "9"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "closeFalse" (formula "1"))
   )
)
)

}
